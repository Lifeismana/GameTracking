 B ACT_FLOOR_TURRET_CLOSE
 B ACT_FLOOR_TURRET_CLOSED_IDLE
 B ACT_FLOOR_TURRET_DIE
 B ACT_FLOOR_TURRET_DIE_IDLE
 B ACT_FLOOR_TURRET_FIRE
 B ACT_FLOOR_TURRET_FIRE2
 B ACT_FLOOR_TURRET_OPEN
 B ACT_FLOOR_TURRET_OPEN_IDLE
 B ACT_HOVER_TURRET_ALERT
 B ACT_HOVER_TURRET_ANGRY
 B ACT_HOVER_TURRET_DISABLED
 B ACT_HOVER_TURRET_SEARCH
 B AIAgentSaveHeader_t_DataDescInit::g_DataMapHolder
 B AIAgentScheduleState_t_DataDescInit::g_DataMapHolder
 B AIBehaviorChannelSaveHeader_t_DataDescInit::g_DataMapHolder
 B AIChannelScheduleState_t_DataDescInit::g_DataMapHolder
 B AIExtendedSaveHeader_t_DataDescInit::g_DataMapHolder
 B AIN_NO_DEST
 B AIScheduleState_t_DataDescInit::g_DataMapHolder
 B AISquadEnemyInfo_t_DataDescInit::g_DataMapHolder
 B AI_EnemyInfo_t_DataDescInit::g_DataMapHolder
 B AI_FollowNavInfo_t_DataDescInit::g_DataMapHolder
 B AI_FollowParams_t_DataDescInit::g_DataMapHolder
 B AI_FreePassParams_t_DataDescInit::g_DataMapHolder
 B AI_LeadArgs_t_DataDescInit::g_DataMapHolder
 B AI_ResponseParams_DataDescInit::g_DataMapHolder
 B AI_Response_DataDescInit::g_DataMapHolder
 B AI_StandoffParams_t_DataDescInit::g_DataMapHolder
 B AI_Waypoint_t::s_Allocator
 B AI_Waypoint_t_DataDescInit::g_DataMapHolder
 B AR2Explosion_DataDescInit::g_DataMapHolder
 B CAISound_DataDescInit::g_DataMapHolder
 B CAI_AccelDecay_DataDescInit::g_DataMapHolder
 B CAI_ActBusyBehavior::gm_ClassScheduleIdSpace
 B CAI_ActBusyBehavior_DataDescInit::g_DataMapHolder
 B CAI_ActBusyGoal_DataDescInit::g_DataMapHolder
 B CAI_ActBusyQueueGoal_DataDescInit::g_DataMapHolder
 B CAI_AddOn::gm_ClassScheduleIdSpace
 B CAI_AddOn_DataDescInit::g_DataMapHolder
 B CAI_Agent::gm_ClassScheduleIdSpace
 B CAI_Agent::gm_SchedulingSymbols
 B CAI_Agent_DataDescInit::g_DataMapHolder
 B CAI_AllySpeechManager::gm_pSpeechManager
 B CAI_AllySpeechManager_DataDescInit::g_DataMapHolder
 B CAI_AssaultBehavior::gm_ClassScheduleIdSpace
 B CAI_AssaultBehavior_DataDescInit::g_DataMapHolder
 B CAI_AssaultGoal_DataDescInit::g_DataMapHolder
 B CAI_BaseActor_DataDescInit::g_DataMapHolder
 B CAI_BaseFlyingBot_DataDescInit::g_DataMapHolder
 B CAI_BaseNPC::gm_ClassScheduleIdSpace
 B CAI_BaseNPC::gm_SchedulingSymbols
 B CAI_BaseNPC::gm_SquadSlotIdSpace
 B CAI_BaseNPC::gm_SquadSlotNamespace
 B CAI_BaseNPC::gm_flTimeLastSpawn
 B CAI_BaseNPC::gm_iNextThinkRebalanceTick
 B CAI_BaseNPC::gm_iszPlayerSquad
 B CAI_BaseNPC::gm_nSpawnedThisFrame
 B CAI_BaseNPC::m_AnyUpdateEnemyPosTimer
 B CAI_BaseNPC::m_iNumActivities
 B CAI_BaseNPC::m_iNumEvents
 B CAI_BaseNPC::m_nDebugBits
 B CAI_BaseNPC::m_pActivitySR
 B CAI_BaseNPC::m_pDebugNPC
 B CAI_BaseNPC::m_pEventSR
 B CAI_BaseNPC_DataDescInit::g_DataMapHolder
 B CAI_BasePhysicsFlyingBot_DataDescInit::g_DataMapHolder
 B CAI_BattleLine_DataDescInit::g_DataMapHolder
 B CAI_BehaviorBase_DataDescInit::g_DataMapHolder
 B CAI_BlendedMotor_DataDescInit::g_DataMapHolder
 B CAI_ChangeHintGroup_DataDescInit::g_DataMapHolder
 B CAI_ChangeTarget_DataDescInit::g_DataMapHolder
 B CAI_DynamicLink::gm_bInitialized
 B CAI_DynamicLink::m_pAllDynamicLinks
 B CAI_DynamicLinkController_DataDescInit::g_DataMapHolder
 B CAI_DynamicLink_DataDescInit::g_DataMapHolder
 B CAI_Enemies_DataDescInit::g_DataMapHolder
 B CAI_Expresser_DataDescInit::g_DataMapHolder
 B CAI_FearBehavior::gm_ClassScheduleIdSpace
 B CAI_FearBehavior_DataDescInit::g_DataMapHolder
 B CAI_FightFromCoverBehavior::gm_ClassScheduleIdSpace
 B CAI_FightFromCoverBehavior_DataDescInit::g_DataMapHolder
 B CAI_FightFromCoverGoal_DataDescInit::g_DataMapHolder
 B CAI_FollowBehavior::gm_ClassScheduleIdSpace
 B CAI_FollowBehavior_DataDescInit::g_DataMapHolder
 B CAI_FollowGoal_DataDescInit::g_DataMapHolder
 B CAI_FreePass_DataDescInit::g_DataMapHolder
 B CAI_FuncTankBehavior::gm_ClassScheduleIdSpace
 B CAI_FuncTankBehavior_DataDescInit::g_DataMapHolder
 B CAI_GoalEntity_DataDescInit::g_DataMapHolder
 B CAI_HintManager::gm_AllHints
 B CAI_HintManager::gm_TypedHints
 B CAI_HintManager::gm_nFoundHintIndex
 B CAI_HintManager::gm_pLastFoundHints
 B CAI_Hint_DataDescInit::g_DataMapHolder
 B CAI_InterestTarget_t_DataDescInit::g_DataMapHolder
 B CAI_LeadBehavior::gm_ClassScheduleIdSpace
 B CAI_LeadBehavior_DataDescInit::g_DataMapHolder
 B CAI_LeadGoal_DataDescInit::g_DataMapHolder
 B CAI_LeadGoal_Weapon_DataDescInit::g_DataMapHolder
 B CAI_LocalNavigator_DataDescInit::g_DataMapHolder
 B CAI_LookTarget_DataDescInit::g_DataMapHolder
 B CAI_Motor_DataDescInit::g_DataMapHolder
 B CAI_MoveAndShootOverlay_DataDescInit::g_DataMapHolder
 B CAI_MoveMonitor_DataDescInit::g_DataMapHolder
 B CAI_MoveProbe_DataDescInit::g_DataMapHolder
 B CAI_Navigator_DataDescInit::g_DataMapHolder
 B CAI_NetworkEditTools::m_bAirEditMode
 B CAI_NetworkEditTools::m_bLinkEditMode
 B CAI_NetworkEditTools::m_iHullDrawNum
 B CAI_NetworkEditTools::m_pLastDeletedNode
 B CAI_NetworkManager::gm_fNetworksLoaded
 B CAI_NetworkManager_DataDescInit::g_DataMapHolder
 B CAI_Path::gm_InvalidWaypoint
 B CAI_Path_DataDescInit::g_DataMapHolder
 B CAI_Pathfinder_DataDescInit::g_DataMapHolder
 B CAI_PlaneSolver::s_GlobalObstacles
 B CAI_PlayerAlly::gm_ClassScheduleIdSpace
 B CAI_PlayerAlly::gm_SquadSlotIdSpace
 B CAI_PlayerAlly_DataDescInit::g_DataMapHolder
 B CAI_ProxTester_DataDescInit::g_DataMapHolder
 B CAI_RadialLinkController_DataDescInit::g_DataMapHolder
 B CAI_RappelBehavior::gm_ClassScheduleIdSpace
 B CAI_RappelBehavior_DataDescInit::g_DataMapHolder
 B CAI_Relationship_DataDescInit::g_DataMapHolder
 B CAI_ScriptConditionsElement_DataDescInit::g_DataMapHolder
 B CAI_ScriptConditions_DataDescInit::g_DataMapHolder
 B CAI_ScriptedSchedule_DataDescInit::g_DataMapHolder
 B CAI_ScriptedSentence_DataDescInit::g_DataMapHolder
 B CAI_ScriptedSequence_DataDescInit::g_DataMapHolder
 B CAI_Senses_DataDescInit::g_DataMapHolder
 B CAI_SentenceBase_DataDescInit::g_DataMapHolder
 B CAI_ShotRegulator_DataDescInit::g_DataMapHolder
 B CAI_SpeechFilter_DataDescInit::g_DataMapHolder
 B CAI_Squad_DataDescInit::g_DataMapHolder
 B CAI_StandoffBehavior::gm_ClassScheduleIdSpace
 B CAI_StandoffBehavior_DataDescInit::g_DataMapHolder
 B CAI_StandoffGoal_DataDescInit::g_DataMapHolder
 B CAI_TacticalServices_DataDescInit::g_DataMapHolder
 B CAI_TestHull::pTestHull
 B CAI_TrackPather_DataDescInit::g_DataMapHolder
 B CAmbientGeneric_DataDescInit::g_DataMapHolder
 B CAnimationLayer_DataDescInit::g_DataMapHolder
 B CAreaPortal_DataDescInit::g_DataMapHolder
 B CAssaultPoint_DataDescInit::g_DataMapHolder
 B CAttributeContainerPlayer_DataDescInit::g_DataMapHolder
 B CAttributeContainer_DataDescInit::g_DataMapHolder
 B CAttributeList_DataDescInit::g_DataMapHolder
 B CAttributeManager_DataDescInit::g_DataMapHolder
 B CBaseAnimatingOverlay_DataDescInit::g_DataMapHolder
 B CBaseAnimatingProjectile_DataDescInit::g_DataMapHolder
 B CBaseAnimating_DataDescInit::g_DataMapHolder
 B CBaseAttributableItem_DataDescInit::g_DataMapHolder
 B CBaseButton_DataDescInit::g_DataMapHolder
 B CBaseCombatCharacter::m_DefaultRelationship
 B CBaseCombatCharacter::m_FactionRelationship
 B CBaseCombatCharacter::m_aFactions
 B CBaseCombatCharacter::m_lastInteraction
 B CBaseCombatCharacter_DataDescInit::g_DataMapHolder
 B CBaseCombatWeapon_DataDescInit::g_DataMapHolder
 B CBaseDMStart_DataDescInit::g_DataMapHolder
 B CBaseDoor_DataDescInit::g_DataMapHolder
 B CBaseEntity::m_bAllowPrecache
 B CBaseEntity::m_bDebugPause
 B CBaseEntity::m_bInDebugSelect
 B CBaseEntity::m_pPredictionPlayer
 B CBaseEntity::sm_bDisableTouchFuncs
 B CBaseEntityOutput_DataDescInit::g_DataMapHolder
 B CBaseEntity_DataDescInit::g_DataMapHolder
 B CBaseFilter_DataDescInit::g_DataMapHolder
 B CBaseFire_DataDescInit::g_DataMapHolder
 B CBaseFlex_DataDescInit::g_DataMapHolder
 B CBaseGrenadeConcussion::m_nTrailSprite
 B CBaseGrenadeConcussion_DataDescInit::g_DataMapHolder
 B CBaseGrenade_DataDescInit::g_DataMapHolder
 B CBaseHLCombatWeapon_DataDescInit::g_DataMapHolder
 B CBaseMoveBehavior_DataDescInit::g_DataMapHolder
 B CBaseNPCMaker_DataDescInit::g_DataMapHolder
 B CBasePlatTrain_DataDescInit::g_DataMapHolder
 B CBasePlayer::s_PlayerEdict
 B CBasePlayer_DataDescInit::g_DataMapHolder
 B CBasePortalCombatWeapon_DataDescInit::g_DataMapHolder
 B CBaseProjectedEntity_DataDescInit::g_DataMapHolder
 B CBaseProjectile_DataDescInit::g_DataMapHolder
 B CBaseProjector_DataDescInit::g_DataMapHolder
 B CBasePropDoor_DataDescInit::g_DataMapHolder
 B CBaseResourcePrecacher::sm_pFirst
 B CBaseServerVehicle_DataDescInit::g_DataMapHolder
 B CBaseSpriteProjectile_DataDescInit::g_DataMapHolder
 B CBaseTempEntity::s_pTempEntities
 B CBaseToggle_DataDescInit::g_DataMapHolder
 B CBaseTrigger_DataDescInit::g_DataMapHolder
 B CBaseVPhysicsTrigger_DataDescInit::g_DataMapHolder
 B CBaseViewModel_DataDescInit::g_DataMapHolder
 B CBeamSpotlight_DataDescInit::g_DataMapHolder
 B CBeam_DataDescInit::g_DataMapHolder
 B CBlendingCycler_DataDescInit::g_DataMapHolder
 B CBlood_DataDescInit::g_DataMapHolder
 B CBoneFollowerManager_DataDescInit::g_DataMapHolder
 B CBoneFollower_DataDescInit::g_DataMapHolder
 B CBreakableProp_DataDescInit::g_DataMapHolder
 B CBreakableSurface_DataDescInit::g_DataMapHolder
 B CBreakable_DataDescInit::g_DataMapHolder
 B CBubbling_DataDescInit::g_DataMapHolder
 B CChallengeModeEndNode_DataDescInit::g_DataMapHolder
 B CChangeLevel_DataDescInit::g_DataMapHolder
 B CChoreoGenericServerVehicle_DataDescInit::g_DataMapHolder
 B CChoreoScene::s_bEditingDisabled
 B CCitadelEnergyCore_DataDescInit::g_DataMapHolder
 B CCollisionProperty_DataDescInit::g_DataMapHolder
 B CColorCorrectionVolume_DataDescInit::g_DataMapHolder
 B CColorCorrection_DataDescInit::g_DataMapHolder
 B CCommentaryAuto_DataDescInit::g_DataMapHolder
 B CCommentarySystem_DataDescInit::g_DataMapHolder
 B CCommunity_GamePersonalDataCategoryInfo::_default_localization_token_
 B CCommunity_GamePersonalDataCategoryInfo::_default_template_file_
 B CCommunity_GamePersonalDataCategoryInfo::_default_type_
 B CCommunity_GamePersonalDataCategoryInfo::default_instance_
 B CCommunity_GetGamePersonalDataCategories_Request::default_instance_
 B CCommunity_GetGamePersonalDataCategories_Response::_default_app_assets_basename_
 B CCommunity_GetGamePersonalDataCategories_Response::default_instance_
 B CCommunity_GetGamePersonalDataEntries_Request::_default_continue_token_
 B CCommunity_GetGamePersonalDataEntries_Request::_default_type_
 B CCommunity_GetGamePersonalDataEntries_Request::default_instance_
 B CCommunity_GetGamePersonalDataEntries_Response::_default_continue_token_
 B CCommunity_GetGamePersonalDataEntries_Response::default_instance_
 B CCommunity_TerminateGamePersonalDataEntries_Request::default_instance_
 B CCommunity_TerminateGamePersonalDataEntries_Response::default_instance_
 B CConstantForceController_DataDescInit::g_DataMapHolder
 B CConstraintAnchor_DataDescInit::g_DataMapHolder
 B CCopyRecipientFilter_DataDescInit::g_DataMapHolder
 B CCredits_DataDescInit::g_DataMapHolder
 B CCubeRotationController_DataDescInit::g_DataMapHolder
 B CCycler_DataDescInit::g_DataMapHolder
 B CDebugHistory_DataDescInit::g_DataMapHolder
 B CDecal_DataDescInit::g_DataMapHolder
 B CDmxAttribute::s_AttributeNameSymbols
 B CDmxAttribute::s_pAttributeTypeName
 B CDmxElement::s_TypeSymbols
 B CDmxKeyValues2ErrorStack::m_ErrorSymbolTable
 B CDynamicLight_DataDescInit::g_DataMapHolder
 B CDynamicProp_DataDescInit::g_DataMapHolder
 B CEconEntity_DataDescInit::g_DataMapHolder
 B CEconItemView_DataDescInit::g_DataMapHolder
 B CEconWearable_DataDescInit::g_DataMapHolder
 B CEmbers_DataDescInit::g_DataMapHolder
 B CEnergyBallLauncher_DataDescInit::g_DataMapHolder
 B CEntityClassList<CFuncNoPortalVolume>::m_pClassList
 B CEntityClassList<CFuncPortalDetector>::m_pClassList
 B CEntityClassList<CFuncPortalOrientation>::m_pClassList
 B CEntityClassList<CPhysicsNPCSolver>::m_pClassList
 B CEntityClassList<CPointCamera>::m_pClassList
 B CEntityClassList<CSkyCamera>::m_pClassList
 B CEntityDissolve_DataDescInit::g_DataMapHolder
 B CEntityFlame_DataDescInit::g_DataMapHolder
 B CEntityFreezing_DataDescInit::g_DataMapHolder
 B CEntityParticleTrail_DataDescInit::g_DataMapHolder
 B CEnvAR2Explosion_DataDescInit::g_DataMapHolder
 B CEnvAmbientLight_DataDescInit::g_DataMapHolder
 B CEnvBeam_DataDescInit::g_DataMapHolder
 B CEnvBeverage_DataDescInit::g_DataMapHolder
 B CEnvDOFController_DataDescInit::g_DataMapHolder
 B CEnvDustPuff_DataDescInit::g_DataMapHolder
 B CEnvEffectsScript_DataDescInit::g_DataMapHolder
 B CEnvEntityIgniter_DataDescInit::g_DataMapHolder
 B CEnvEntityMaker_DataDescInit::g_DataMapHolder
 B CEnvExplosion_DataDescInit::g_DataMapHolder
 B CEnvFade_DataDescInit::g_DataMapHolder
 B CEnvFireSensor_DataDescInit::g_DataMapHolder
 B CEnvFireSource_DataDescInit::g_DataMapHolder
 B CEnvFunnel_DataDescInit::g_DataMapHolder
 B CEnvGlobal_DataDescInit::g_DataMapHolder
 B CEnvGunfire_DataDescInit::g_DataMapHolder
 B CEnvHudHint_DataDescInit::g_DataMapHolder
 B CEnvInstructorHint_DataDescInit::g_DataMapHolder
 B CEnvLaser_DataDescInit::g_DataMapHolder
 B CEnvMicrophone_DataDescInit::g_DataMapHolder
 B CEnvMuzzleFlash_DataDescInit::g_DataMapHolder
 B CEnvParticleScript_DataDescInit::g_DataMapHolder
 B CEnvPlayerSurfaceTrigger_DataDescInit::g_DataMapHolder
 B CEnvPortalPathTrack_DataDescInit::g_DataMapHolder
 B CEnvProjectedTexture_DataDescInit::g_DataMapHolder
 B CEnvQuadraticBeam_DataDescInit::g_DataMapHolder
 B CEnvScreenEffect_DataDescInit::g_DataMapHolder
 B CEnvScreenOverlay_DataDescInit::g_DataMapHolder
 B CEnvShake_DataDescInit::g_DataMapHolder
 B CEnvShooter_DataDescInit::g_DataMapHolder
 B CEnvSoundscapeProxy_DataDescInit::g_DataMapHolder
 B CEnvSoundscapeTriggerable_DataDescInit::g_DataMapHolder
 B CEnvSoundscape_DataDescInit::g_DataMapHolder
 B CEnvSpark_DataDescInit::g_DataMapHolder
 B CEnvSplash_DataDescInit::g_DataMapHolder
 B CEnvTilt_DataDescInit::g_DataMapHolder
 B CEnvTonemapController_DataDescInit::g_DataMapHolder
 B CEnvTracer_DataDescInit::g_DataMapHolder
 B CEnvViewPunch_DataDescInit::g_DataMapHolder
 B CEnvWind_DataDescInit::g_DataMapHolder
 B CEnvZoom_DataDescInit::g_DataMapHolder
 B CEnv_Lightrail_Endpoint_DataDescInit::g_DataMapHolder
 B CEventAction::s_iNextIDStamp
 B CEventAction_DataDescInit::g_DataMapHolder
 B CEventQueue_DataDescInit::g_DataMapHolder
 B CFilterClass_DataDescInit::g_DataMapHolder
 B CFilterCombineBall_DataDescInit::g_DataMapHolder
 B CFilterContext_DataDescInit::g_DataMapHolder
 B CFilterEnemy_DataDescInit::g_DataMapHolder
 B CFilterMassGreater_DataDescInit::g_DataMapHolder
 B CFilterModel_DataDescInit::g_DataMapHolder
 B CFilterMultiple_DataDescInit::g_DataMapHolder
 B CFilterName_DataDescInit::g_DataMapHolder
 B CFilterPlayerHeld_DataDescInit::g_DataMapHolder
 B CFilterSize_DataDescInit::g_DataMapHolder
 B CFireSmoke_DataDescInit::g_DataMapHolder
 B CFireTrail_DataDescInit::g_DataMapHolder
 B CFire_DataDescInit::g_DataMapHolder
 B CFishPool_DataDescInit::g_DataMapHolder
 B CFish_DataDescInit::g_DataMapHolder
 B CFlexCycler_DataDescInit::g_DataMapHolder
 B CFlexExpresser_DataDescInit::g_DataMapHolder
 B CFlextalkActor_DataDescInit::g_DataMapHolder
 B CFogController_DataDescInit::g_DataMapHolder
 B CFogTrigger_DataDescInit::g_DataMapHolder
 B CFogVolume_DataDescInit::g_DataMapHolder
 B CFourWheelServerVehicle_DataDescInit::g_DataMapHolder
 B CFourWheelVehiclePhysics_DataDescInit::g_DataMapHolder
 B CFuncAreaPortalBase_DataDescInit::g_DataMapHolder
 B CFuncAreaPortalWindow_DataDescInit::g_DataMapHolder
 B CFuncBrush_DataDescInit::g_DataMapHolder
 B CFuncCombineBallSpawner_DataDescInit::g_DataMapHolder
 B CFuncConveyor_DataDescInit::g_DataMapHolder
 B CFuncInstanceIoProxy_DataDescInit::g_DataMapHolder
 B CFuncLadder::s_Ladders
 B CFuncLadder_DataDescInit::g_DataMapHolder
 B CFuncMonitor_DataDescInit::g_DataMapHolder
 B CFuncMoveLinear_DataDescInit::g_DataMapHolder
 B CFuncNavBlocker::gm_NavBlockers
 B CFuncNavBlocker_DataDescInit::g_DataMapHolder
 B CFuncNavObstruction_DataDescInit::g_DataMapHolder
 B CFuncNoPortalVolume_DataDescInit::g_DataMapHolder
 B CFuncOccluder_DataDescInit::g_DataMapHolder
 B CFuncPlacementClip_DataDescInit::g_DataMapHolder
 B CFuncPlatRot_DataDescInit::g_DataMapHolder
 B CFuncPlat_DataDescInit::g_DataMapHolder
 B CFuncPortalBumper_DataDescInit::g_DataMapHolder
 B CFuncPortalDetector_DataDescInit::g_DataMapHolder
 B CFuncPortalOrientation_DataDescInit::g_DataMapHolder
 B CFuncReflectiveGlass_DataDescInit::g_DataMapHolder
 B CFuncRotating_DataDescInit::g_DataMapHolder
 B CFuncSmokeVolume_DataDescInit::g_DataMapHolder
 B CFuncTankCombineCannon_DataDescInit::g_DataMapHolder
 B CFuncTankLaser_DataDescInit::g_DataMapHolder
 B CFuncTankMortar_DataDescInit::g_DataMapHolder
 B CFuncTankPhysCannister_DataDescInit::g_DataMapHolder
 B CFuncTankPulseLaser_DataDescInit::g_DataMapHolder
 B CFuncTankTrain_DataDescInit::g_DataMapHolder
 B CFuncTank_DataDescInit::g_DataMapHolder
 B CFuncTrackAuto_DataDescInit::g_DataMapHolder
 B CFuncTrackChange_DataDescInit::g_DataMapHolder
 B CFuncTrackTrain_DataDescInit::g_DataMapHolder
 B CFuncTrainControls_DataDescInit::g_DataMapHolder
 B CFuncTrain_DataDescInit::g_DataMapHolder
 B CFuncVPhysicsClip_DataDescInit::g_DataMapHolder
 B CFuncVehicleClip_DataDescInit::g_DataMapHolder
 B CFuncWallToggle_DataDescInit::g_DataMapHolder
 B CFuncWall_DataDescInit::g_DataMapHolder
 B CFunc_Dust_DataDescInit::g_DataMapHolder
 B CFunc_LOD_DataDescInit::g_DataMapHolder
 B CFunc_Portalled_DataDescInit::g_DataMapHolder
 B CFutbolCatcher_DataDescInit::g_DataMapHolder
 B CGCMsgGetIPLocation::default_instance_
 B CGCMsgGetIPLocationResponse::default_instance_
 B CGCMsgGetSystemStats::default_instance_
 B CGCMsgGetSystemStatsResponse::_default_stats_kv_
 B CGCMsgGetSystemStatsResponse::default_instance_
 B CGCMsgMemCachedDelete::default_instance_
 B CGCMsgMemCachedGet::default_instance_
 B CGCMsgMemCachedGetResponse::default_instance_
 B CGCMsgMemCachedGetResponse_ValueTag::_default_value_
 B CGCMsgMemCachedGetResponse_ValueTag::default_instance_
 B CGCMsgMemCachedSet::default_instance_
 B CGCMsgMemCachedSet_KeyPair::_default_name_
 B CGCMsgMemCachedSet_KeyPair::_default_value_
 B CGCMsgMemCachedSet_KeyPair::default_instance_
 B CGCMsgSystemStatsSchema::_default_schema_kv_
 B CGCMsgSystemStatsSchema::default_instance_
 B CGCStorePurchaseInit_LineItem::default_instance_
 B CGameEnd_DataDescInit::g_DataMapHolder
 B CGameGibManager_DataDescInit::g_DataMapHolder
 B CGamePlayerEquip_DataDescInit::g_DataMapHolder
 B CGamePlayerZone_DataDescInit::g_DataMapHolder
 B CGameRulesProxy::s_pGameRulesProxy
 B CGameRulesRegister::s_pHead
 B CGameScore_DataDescInit::g_DataMapHolder
 B CGameText_DataDescInit::g_DataMapHolder
 B CGameUI_DataDescInit::g_DataMapHolder
 B CGameWeaponManager_DataDescInit::g_DataMapHolder
 B CGenericActor_DataDescInit::g_DataMapHolder
 B CGib::s_ExtantGibs
 B CGibShooter_DataDescInit::g_DataMapHolder
 B CGib_DataDescInit::g_DataMapHolder
 B CGlobalState_DataDescInit::g_DataMapHolder
 B CGrabController_DataDescInit::g_DataMapHolder
 B CGrenadeBeamChaser_DataDescInit::g_DataMapHolder
 B CGrenadeBeam_DataDescInit::g_DataMapHolder
 B CGrenadeFrag_DataDescInit::g_DataMapHolder
 B CGunTarget_DataDescInit::g_DataMapHolder
 B CHLMachineGun_DataDescInit::g_DataMapHolder
 B CHLSelectFireMachineGun_DataDescInit::g_DataMapHolder
 B CHotPotatoCatcher_DataDescInit::g_DataMapHolder
 B CHotPotatoSpawner_DataDescInit::g_DataMapHolder
 B CHotPotato_DataDescInit::g_DataMapHolder
 B CHoverTurretTether_DataDescInit::g_DataMapHolder
 B CIPLocationInfo::_default_city_
 B CIPLocationInfo::_default_country_
 B CIPLocationInfo::_default_state_
 B CIPLocationInfo::default_instance_
 B CInfoCameraLink_DataDescInit::g_DataMapHolder
 B CInfoGameEventProxy_DataDescInit::g_DataMapHolder
 B CInfoInstructorHintTarget_DataDescInit::g_DataMapHolder
 B CInfoOverlayAccessor_DataDescInit::g_DataMapHolder
 B CInfoPlacementHelper_DataDescInit::g_DataMapHolder
 B CInfoPortalScore_DataDescInit::g_DataMapHolder
 B CInfoRemarkable_DataDescInit::g_DataMapHolder
 B CInfoTargetPersonalitySphere_DataDescInit::g_DataMapHolder
 B CInfo_Coop_Spawn_DataDescInit::g_DataMapHolder
 B CInfo_Player_Ping_Detector_DataDescInit::g_DataMapHolder
 B CInstancedSceneEntity_DataDescInit::g_DataMapHolder
 B CItemSoda_DataDescInit::g_DataMapHolder
 B CItem_DataDescInit::g_DataMapHolder
 B CItem_Nugget_DataDescInit::g_DataMapHolder
 B CKeepUpright_DataDescInit::g_DataMapHolder
 B CLabIndicatorPanel_DataDescInit::g_DataMapHolder
 B CLaserCatcher_DataDescInit::g_DataMapHolder
 B CLaserRelay_DataDescInit::g_DataMapHolder
 B CLevelPlacardDisplay_DataDescInit::g_DataMapHolder
 B CLightGlow_DataDescInit::g_DataMapHolder
 B CLight_DataDescInit::g_DataMapHolder
 B CLinkedPortalDoor_DataDescInit::g_DataMapHolder
 B CLogicAchievement_DataDescInit::g_DataMapHolder
 B CLogicActiveAutosave_DataDescInit::g_DataMapHolder
 B CLogicAuto_DataDescInit::g_DataMapHolder
 B CLogicAutosave_DataDescInit::g_DataMapHolder
 B CLogicBranchList_DataDescInit::g_DataMapHolder
 B CLogicBranch_DataDescInit::g_DataMapHolder
 B CLogicCase_DataDescInit::g_DataMapHolder
 B CLogicCollisionPair_DataDescInit::g_DataMapHolder
 B CLogicCompareInteger_DataDescInit::g_DataMapHolder
 B CLogicCompare_DataDescInit::g_DataMapHolder
 B CLogicCoopManager_DataDescInit::g_DataMapHolder
 B CLogicEventListener_DataDescInit::g_DataMapHolder
 B CLogicLineToEntity_DataDescInit::g_DataMapHolder
 B CLogicMeasureMovement_DataDescInit::g_DataMapHolder
 B CLogicNavigation_DataDescInit::g_DataMapHolder
 B CLogicPlayMovie_DataDescInit::g_DataMapHolder
 B CLogicPlayerProxy_DataDescInit::g_DataMapHolder
 B CLogicPlayerViewFinder_DataDescInit::g_DataMapHolder
 B CLogicRandomOutputs_DataDescInit::g_DataMapHolder
 B CLogicRegisterActivator_DataDescInit::g_DataMapHolder
 B CLogicRelay_DataDescInit::g_DataMapHolder
 B CLogicScript_DataDescInit::g_DataMapHolder
 B CLogicTimeScale_DataDescInit::g_DataMapHolder
 B CMP_LobbyScreen_DataDescInit::g_DataMapHolder
 B CMaterialModifyControl_DataDescInit::g_DataMapHolder
 B CMathColorBlend_DataDescInit::g_DataMapHolder
 B CMathCounter_DataDescInit::g_DataMapHolder
 B CMathRemap_DataDescInit::g_DataMapHolder
 B CMessageEntity_DataDescInit::g_DataMapHolder
 B CMessage_DataDescInit::g_DataMapHolder
 B CMomentaryRotButton_DataDescInit::g_DataMapHolder
 B CMortarShell_DataDescInit::g_DataMapHolder
 B CMotorController_DataDescInit::g_DataMapHolder
 B CMovementSpeedMod_DataDescInit::g_DataMapHolder
 B CMovieDisplay_DataDescInit::g_DataMapHolder
 B CMsgAMAddFreeLicense::_default_store_country_code_
 B CMsgAMAddFreeLicense::default_instance_
 B CMsgAMAddFreeLicenseResponse::default_instance_
 B CMsgAMFindAccounts::_default_search_string_
 B CMsgAMFindAccounts::default_instance_
 B CMsgAMFindAccountsResponse::default_instance_
 B CMsgAMGetLicenses::default_instance_
 B CMsgAMGetLicensesResponse::default_instance_
 B CMsgAMGetUserGameStats::default_instance_
 B CMsgAMGetUserGameStatsResponse::default_instance_
 B CMsgAMGetUserGameStatsResponse_Achievement_Blocks::default_instance_
 B CMsgAMGetUserGameStatsResponse_Stats::default_instance_
 B CMsgAMSendEmail::default_instance_
 B CMsgAMSendEmailResponse::default_instance_
 B CMsgAMSendEmail_PersonaNameReplacementToken::_default_token_name_
 B CMsgAMSendEmail_PersonaNameReplacementToken::default_instance_
 B CMsgAMSendEmail_ReplacementToken::_default_token_name_
 B CMsgAMSendEmail_ReplacementToken::_default_token_value_
 B CMsgAMSendEmail_ReplacementToken::default_instance_
 B CMsgAdjustItemEquippedState::default_instance_
 B CMsgCommunityMapAddQueueHistoryEntry::default_instance_
 B CMsgCommunityMapItemVoteSummary::default_instance_
 B CMsgCommunityMapItemVoteSummaryResponse::default_instance_
 B CMsgConVarValue::_default_name_
 B CMsgConVarValue::_default_value_
 B CMsgConVarValue::default_instance_
 B CMsgDevDebugRollLootRequest::_default_loot_list_name_
 B CMsgDevDebugRollLootRequest::default_instance_
 B CMsgDevNewItemRequest::default_instance_
 B CMsgGCClientDisplayNotification::_default_notification_body_localization_key_
 B CMsgGCClientDisplayNotification::_default_notification_title_localization_key_
 B CMsgGCClientDisplayNotification::default_instance_
 B CMsgGCError::_default_error_text_
 B CMsgGCError::default_instance_
 B CMsgGCGetCommandList::_default_command_prefix_
 B CMsgGCGetCommandList::default_instance_
 B CMsgGCGetCommandListResponse::default_instance_
 B CMsgGCGetEmailTemplate::default_instance_
 B CMsgGCGetEmailTemplateResponse::_default_template__
 B CMsgGCGetEmailTemplateResponse::default_instance_
 B CMsgGCNameItemNotification::_default_item_name_custom_
 B CMsgGCNameItemNotification::default_instance_
 B CMsgGCReportAbuse::_default_description_
 B CMsgGCReportAbuse::default_instance_
 B CMsgGCReportAbuseResponse::_default_error_message_
 B CMsgGCReportAbuseResponse::default_instance_
 B CMsgGCStorePurchaseInit::_default_country_
 B CMsgGCStorePurchaseInit::default_instance_
 B CMsgGCStorePurchaseInitResponse::default_instance_
 B CMsgGameServerInfo::_default_server_key_
 B CMsgGameServerInfo::default_instance_
 B CMsgHttpRequest::_default_body_
 B CMsgHttpRequest::_default_hostname_
 B CMsgHttpRequest::_default_url_
 B CMsgHttpRequest::default_instance_
 B CMsgHttpRequest_QueryParam::_default_name_
 B CMsgHttpRequest_QueryParam::_default_value_
 B CMsgHttpRequest_QueryParam::default_instance_
 B CMsgHttpRequest_RequestHeader::_default_name_
 B CMsgHttpRequest_RequestHeader::_default_value_
 B CMsgHttpRequest_RequestHeader::default_instance_
 B CMsgHttpResponse::_default_body_
 B CMsgHttpResponse::default_instance_
 B CMsgHttpResponse_ResponseHeader::_default_name_
 B CMsgHttpResponse_ResponseHeader::_default_value_
 B CMsgHttpResponse_ResponseHeader::default_instance_
 B CMsgIncrementKillCountAttribute::default_instance_
 B CMsgInvitationCreated::default_instance_
 B CMsgInviteToParty::default_instance_
 B CMsgItemAcknowledged::default_instance_
 B CMsgKickFromParty::default_instance_
 B CMsgLeaveParty::default_instance_
 B CMsgNotifyWatchdog::_default_text_
 B CMsgNotifyWatchdog::default_instance_
 B CMsgPackageLicense::default_instance_
 B CMsgPartyInviteResponse::default_instance_
 B CMsgPlaytestMarkDemoForDelete::default_instance_
 B CMsgPlaytestMarkDemoNotNew::default_instance_
 B CMsgPlaytestRemoveDemo::default_instance_
 B CMsgPlaytestReportDemo::default_instance_
 B CMsgPlaytestReportDemoSession::default_instance_
 B CMsgPlaytestRetrieveDemoHandles::default_instance_
 B CMsgPlaytestRetrieveDemoHandlesResponse::default_instance_
 B CMsgPlaytestRetrieveDemoPlayersForMap::default_instance_
 B CMsgPlaytestRetrieveDemoPlayersForMapResponse::default_instance_
 B CMsgPlaytestRetrieveNewDemoCountResponse::default_instance_
 B CMsgPlaytestTestMessage::default_instance_
 B CMsgProtoBufHeader::_default_target_job_name_
 B CMsgProtoBufHeader::default_instance_
 B CMsgReplayUploadedToYouTube::_default_youtube_account_name_
 B CMsgReplayUploadedToYouTube::_default_youtube_url_
 B CMsgReplayUploadedToYouTube::default_instance_
 B CMsgReplicateConVars::default_instance_
 B CMsgRequestInventoryRefresh::default_instance_
 B CMsgRequestItemSchemaData::default_instance_
 B CMsgSOCacheSubscribed::default_instance_
 B CMsgSOCacheSubscribed_SubscribedType::default_instance_
 B CMsgSOCacheSubscriptionCheck::default_instance_
 B CMsgSOCacheSubscriptionRefresh::default_instance_
 B CMsgSOCacheUnsubscribed::default_instance_
 B CMsgSOCacheVersion::default_instance_
 B CMsgSOMultipleObjects::default_instance_
 B CMsgSOMultipleObjects_SingleObject::_default_object_data_
 B CMsgSOMultipleObjects_SingleObject::default_instance_
 B CMsgSOSingleObject::_default_object_data_
 B CMsgSOSingleObject::default_instance_
 B CMsgSelectItemPresetForClass::default_instance_
 B CMsgSelectItemPresetForClassReply::default_instance_
 B CMsgServerAvailable::default_instance_
 B CMsgSetPresetItemPosition::default_instance_
 B CMsgSortItems::default_instance_
 B CMsgStoreGetUserData::default_instance_
 B CMsgStoreGetUserDataResponse::_default_country_
 B CMsgStoreGetUserDataResponse::_default_price_sheet_
 B CMsgStoreGetUserDataResponse::default_instance_
 B CMsgSystemBroadcast::_default_message_
 B CMsgSystemBroadcast::default_instance_
 B CMsgUpdateItemSchema::_default_items_game_
 B CMsgUpdateItemSchema::_default_items_game_url_
 B CMsgUpdateItemSchema::default_instance_
 B CMsgUpdatePeriodicEvent::default_instance_
 B CMsgUseItem::default_instance_
 B CMsgWebAPIKey::_default_domain_
 B CMsgWebAPIKey::default_instance_
 B CMsgWebAPIRequest::_default_interface_name_
 B CMsgWebAPIRequest::_default_method_name_
 B CMsgWebAPIRequest::_default_unused_job_name_
 B CMsgWebAPIRequest::default_instance_
 B CMultiDamage_DataDescInit::g_DataMapHolder
 B CMultiSource_DataDescInit::g_DataMapHolder
 B CMultiplayRules::m_MapList
 B CMultiplayRules::m_nMapCycleTimeStamp
 B CMultiplayRules::m_nMapCycleindex
 B CNPCEventResponseSystemEntity_DataDescInit::g_DataMapHolder
 B CNPCMaker_DataDescInit::g_DataMapHolder
 B CNPCSimpleTalker::gm_ClassScheduleIdSpace
 B CNPCSimpleTalker::gm_SquadSlotIdSpace
 B CNPCSimpleTalkerExpresser_DataDescInit::g_DataMapHolder
 B CNPCSimpleTalker_DataDescInit::g_DataMapHolder
 B CNPCSpawnDestination_DataDescInit::g_DataMapHolder
 B CNPC_Bullseye_DataDescInit::g_DataMapHolder
 B CNPC_EnemyFinder::gm_ClassScheduleIdSpace
 B CNPC_EnemyFinder::gm_SquadSlotIdSpace
 B CNPC_EnemyFinderCombineCannon_DataDescInit::g_DataMapHolder
 B CNPC_EnemyFinder_DataDescInit::g_DataMapHolder
 B CNPC_FloorTurret::gm_ClassScheduleIdSpace
 B CNPC_FloorTurret::gm_SquadSlotIdSpace
 B CNPC_FloorTurret_DataDescInit::g_DataMapHolder
 B CNPC_Furniture_DataDescInit::g_DataMapHolder
 B CNPC_HoverTurret::gm_ClassScheduleIdSpace
 B CNPC_HoverTurret::gm_SquadSlotIdSpace
 B CNPC_HoverTurret_DataDescInit::g_DataMapHolder
 B CNPC_PersonalityCore::gm_ClassScheduleIdSpace
 B CNPC_PersonalityCore::gm_SquadSlotIdSpace
 B CNPC_PersonalityCore_DataDescInit::g_DataMapHolder
 B CNPC_Portal_FloorTurret_DataDescInit::g_DataMapHolder
 B CNPC_RocketTurret_DataDescInit::g_DataMapHolder
 B CNPC_SecurityCamera_DataDescInit::g_DataMapHolder
 B CNPC_VehicleDriver::gm_ClassScheduleIdSpace
 B CNPC_VehicleDriver::gm_SquadSlotIdSpace
 B CNPC_VehicleDriver_DataDescInit::g_DataMapHolder
 B CNPC_Wheatley_Boss_DataDescInit::g_DataMapHolder
 B CNavArea::m_isReset
 B CNavArea::m_openList
 B CNavArea::m_openListTail
 B CNavNode::m_list
 B CNavNode::m_listLength
 B CNavVectorNoEditAllocator::m_memory
 B CNavVectorNoEditAllocator::m_nBytesCurrent
 B CNavVectorNoEditAllocator::m_pCurrent
 B CNeurotoxinCountdown_DataDescInit::g_DataMapHolder
 B CNewNPC::gm_ClassScheduleIdSpace
 B CNewNPC::gm_SquadSlotIdSpace
 B CNewNPC_DataDescInit::g_DataMapHolder
 B CNewRecharge_DataDescInit::g_DataMapHolder
 B CNodeEnt::m_nNodeCount
 B CNodeEnt_DataDescInit::g_DataMapHolder
 B COrnamentProp_DataDescInit::g_DataMapHolder
 B COuttroStats_DataDescInit::g_DataMapHolder
 B CPaintPowerPickup_DataDescInit::g_DataMapHolder
 B CPaintSphere_DataDescInit::g_DataMapHolder
 B CPaintSprayer_DataDescInit::g_DataMapHolder
 B CPaintStream_DataDescInit::g_DataMapHolder
 B CParticleFire_DataDescInit::g_DataMapHolder
 B CParticleLight_DataDescInit::g_DataMapHolder
 B CParticlePerformanceMonitor_DataDescInit::g_DataMapHolder
 B CParticleSystemMgr::s_AttributeTable
 B CParticleSystem_DataDescInit::g_DataMapHolder
 B CPassengerInfo_DataDescInit::g_DataMapHolder
 B CPathCorner_DataDescInit::g_DataMapHolder
 B CPathKeyFrame_DataDescInit::g_DataMapHolder
 B CPathTrack::s_bIsIterating
 B CPathTrack::s_nCurrIterVal
 B CPathTrack_DataDescInit::g_DataMapHolder
 B CPhysBoxMultiplayer_DataDescInit::g_DataMapHolder
 B CPhysBox_DataDescInit::g_DataMapHolder
 B CPhysConstraintSystem_DataDescInit::g_DataMapHolder
 B CPhysConstraint_DataDescInit::g_DataMapHolder
 B CPhysConvert_DataDescInit::g_DataMapHolder
 B CPhysExplosion_DataDescInit::g_DataMapHolder
 B CPhysForce_DataDescInit::g_DataMapHolder
 B CPhysHinge_DataDescInit::g_DataMapHolder
 B CPhysImpact_DataDescInit::g_DataMapHolder
 B CPhysLength_DataDescInit::g_DataMapHolder
 B CPhysMagnet_DataDescInit::g_DataMapHolder
 B CPhysMotor_DataDescInit::g_DataMapHolder
 B CPhysPulley_DataDescInit::g_DataMapHolder
 B CPhysSlideConstraint_DataDescInit::g_DataMapHolder
 B CPhysThruster_DataDescInit::g_DataMapHolder
 B CPhysTorque_DataDescInit::g_DataMapHolder
 B CPhysicsCannister_DataDescInit::g_DataMapHolder
 B CPhysicsEntitySolver_DataDescInit::g_DataMapHolder
 B CPhysicsNPCSolver_DataDescInit::g_DataMapHolder
 B CPhysicsPropMultiplayer_DataDescInit::g_DataMapHolder
 B CPhysicsPropRespawnable_DataDescInit::g_DataMapHolder
 B CPhysicsProp_DataDescInit::g_DataMapHolder
 B CPhysicsShake_DataDescInit::g_DataMapHolder
 B CPhysicsSpring_DataDescInit::g_DataMapHolder
 B CPhysicsWind_DataDescInit::g_DataMapHolder
 B CPhysicsWire_DataDescInit::g_DataMapHolder
 B CPlasma_DataDescInit::g_DataMapHolder
 B CPlayerLocalData_DataDescInit::g_DataMapHolder
 B CPlayerPickupController_DataDescInit::g_DataMapHolder
 B CPlayerResource_DataDescInit::g_DataMapHolder
 B CPlayerState_DataDescInit::g_DataMapHolder
 B CPointAngleSensor_DataDescInit::g_DataMapHolder
 B CPointAngularVelocitySensor_DataDescInit::g_DataMapHolder
 B CPointBonusMapsAccessor_DataDescInit::g_DataMapHolder
 B CPointBroadcastClientCommand_DataDescInit::g_DataMapHolder
 B CPointCamera_DataDescInit::g_DataMapHolder
 B CPointChangelevel_DataDescInit::g_DataMapHolder
 B CPointClientCommand_DataDescInit::g_DataMapHolder
 B CPointCombineBallLauncher_DataDescInit::g_DataMapHolder
 B CPointCommentaryNode_DataDescInit::g_DataMapHolder
 B CPointDevShotCamera_DataDescInit::g_DataMapHolder
 B CPointEntityFinder_DataDescInit::g_DataMapHolder
 B CPointFutbolShooter_DataDescInit::g_DataMapHolder
 B CPointGamestatsCounter_DataDescInit::g_DataMapHolder
 B CPointHurt_DataDescInit::g_DataMapHolder
 B CPointPlayerMoveConstraint_DataDescInit::g_DataMapHolder
 B CPointProximitySensor_DataDescInit::g_DataMapHolder
 B CPointServerCommand_DataDescInit::g_DataMapHolder
 B CPointSpotlight_DataDescInit::g_DataMapHolder
 B CPointSurvey_DataDescInit::g_DataMapHolder
 B CPointTeleport_DataDescInit::g_DataMapHolder
 B CPointTemplate_DataDescInit::g_DataMapHolder
 B CPointVelocitySensor_DataDescInit::g_DataMapHolder
 B CPortalButtonTrigger_DataDescInit::g_DataMapHolder
 B CPortalCredits_DataDescInit::g_DataMapHolder
 B CPortalGameStats::s_StatLists
 B CPortalLaserTarget_DataDescInit::g_DataMapHolder
 B CPortalLaser_DataDescInit::g_DataMapHolder
 B CPortalMPGameRulesProxy_DataDescInit::g_DataMapHolder
 B CPortalMPStats::s_StatLists
 B CPortalMPStatsProxy::s_pPortalMPStatsProxy
 B CPortalPlayerLocalData_DataDescInit::g_DataMapHolder
 B CPortalRaceCheckpoint_DataDescInit::g_DataMapHolder
 B CPortalRagdoll_DataDescInit::g_DataMapHolder
 B CPortalStatsController_DataDescInit::g_DataMapHolder
 B CPortalTouchScope::m_CallQueue
 B CPortalTouchScope::m_nDepth
 B CPortal_Base2D_DataDescInit::g_DataMapHolder
 B CPortal_Base2D_Shared::AllPortals
 B CPortal_Player_DataDescInit::g_DataMapHolder
 B CPortal_PointPush_DataDescInit::g_DataMapHolder
 B CPoseController_DataDescInit::g_DataMapHolder
 B CPostProcessController_DataDescInit::g_DataMapHolder
 B CPrecipitationBlocker_DataDescInit::g_DataMapHolder
 B CPrecipitation_DataDescInit::g_DataMapHolder
 B CProjectedDecal_DataDescInit::g_DataMapHolder
 B CProjectedTractorBeamEntity_DataDescInit::g_DataMapHolder
 B CProjectedWallEntity_DataDescInit::g_DataMapHolder
 B CPropButton_DataDescInit::g_DataMapHolder
 B CPropCombineBall_DataDescInit::g_DataMapHolder
 B CPropDoorRotating_DataDescInit::g_DataMapHolder
 B CPropEnergyBall_DataDescInit::g_DataMapHolder
 B CPropExplodingFutbol_DataDescInit::g_DataMapHolder
 B CPropFloorBallButton_DataDescInit::g_DataMapHolder
 B CPropFloorButton_DataDescInit::g_DataMapHolder
 B CPropFloorCubeButton_DataDescInit::g_DataMapHolder
 B CPropFutbolSpawner_DataDescInit::g_DataMapHolder
 B CPropGladosCore_DataDescInit::g_DataMapHolder
 B CPropGlassFutbol_DataDescInit::g_DataMapHolder
 B CPropIndicatorPanel_DataDescInit::g_DataMapHolder
 B CPropLinkedPortalDoor_DataDescInit::g_DataMapHolder
 B CPropMonsterBox_DataDescInit::g_DataMapHolder
 B CPropPaintBomb_DataDescInit::g_DataMapHolder
 B CPropPersonalitySphere_DataDescInit::g_DataMapHolder
 B CPropPortalStatsDisplay_DataDescInit::g_DataMapHolder
 B CPropRocketTripwire_DataDescInit::g_DataMapHolder
 B CPropTelescopicArm_DataDescInit::g_DataMapHolder
 B CPropTestChamberDoor_DataDescInit::g_DataMapHolder
 B CPropTicTacToePanel_DataDescInit::g_DataMapHolder
 B CPropTractorBeamProjector::s_AmbientBeamMusic
 B CPropTractorBeamProjector_DataDescInit::g_DataMapHolder
 B CPropUnderButton_DataDescInit::g_DataMapHolder
 B CPropUnderFloorButton_DataDescInit::g_DataMapHolder
 B CPropVehicleChoreoGeneric_DataDescInit::g_DataMapHolder
 B CPropVehicleDriveable_DataDescInit::g_DataMapHolder
 B CPropVehicleViewController_DataDescInit::g_DataMapHolder
 B CPropVehicle_DataDescInit::g_DataMapHolder
 B CPropWallProjector::s_AmbientBridgeMusic
 B CPropWallProjector_DataDescInit::g_DataMapHolder
 B CPropWeightedCube::m_hSchrodingerDangling
 B CPropWeightedCube_DataDescInit::g_DataMapHolder
 B CProp_Hallucination_DataDescInit::g_DataMapHolder
 B CProp_Mirror_DataDescInit::g_DataMapHolder
 B CProp_Portal::ms_DefaultPortalSizeInitialized
 B CProp_Portal_DataDescInit::g_DataMapHolder
 B CProp_Portal_Shared::AllPortals
 B CPushBlockerEnum::s_nEnumCount
 B CRTime::sm_nTimeCur
 B CRagdollBoogie_DataDescInit::g_DataMapHolder
 B CRagdollConstraint_DataDescInit::g_DataMapHolder
 B CRagdollMagnet_DataDescInit::g_DataMapHolder
 B CRagdollManager_DataDescInit::g_DataMapHolder
 B CRagdollPropAttached_DataDescInit::g_DataMapHolder
 B CRagdollProp_DataDescInit::g_DataMapHolder
 B CRallyPoint_DataDescInit::g_DataMapHolder
 B CRandSimTimer_DataDescInit::g_DataMapHolder
 B CRandStopwatch_DataDescInit::g_DataMapHolder
 B CRecharge_DataDescInit::g_DataMapHolder
 B CRevertSaved_DataDescInit::g_DataMapHolder
 B CRocket_Turret_Projectile_DataDescInit::g_DataMapHolder
 B CRopeAnchor_DataDescInit::g_DataMapHolder
 B CRopeKeyframe_DataDescInit::g_DataMapHolder
 B CRotDoor_DataDescInit::g_DataMapHolder
 B CRotorWashShooter_DataDescInit::g_DataMapHolder
 B CRuleEntity_DataDescInit::g_DataMapHolder
 B CRulePointEntity_DataDescInit::g_DataMapHolder
 B CSOEconClaimCode::_default_code_
 B CSOEconClaimCode::default_instance_
 B CSOEconGameAccountClient::default_instance_
 B CSOEconItem::_default_custom_desc_
 B CSOEconItem::_default_custom_name_
 B CSOEconItem::default_instance_
 B CSOEconItemAttribute::default_instance_
 B CSOEconItemEquipped::default_instance_
 B CSOEconItemPresetInstance::default_instance_
 B CSOItemCommunityMap::_default_mapfilename_
 B CSOItemCommunityMap::_default_mapname_
 B CSOItemCommunityMap::default_instance_
 B CSOItemCriteria::default_instance_
 B CSOItemCriteriaCondition::_default_field_
 B CSOItemCriteriaCondition::_default_string_value_
 B CSOItemCriteriaCondition::default_instance_
 B CSOItemRecipe::_default_desc_inputs_
 B CSOItemRecipe::_default_desc_outputs_
 B CSOItemRecipe::_default_di_a_
 B CSOItemRecipe::_default_di_b_
 B CSOItemRecipe::_default_di_c_
 B CSOItemRecipe::_default_do_a_
 B CSOItemRecipe::_default_do_b_
 B CSOItemRecipe::_default_do_c_
 B CSOItemRecipe::_default_n_a_
 B CSOItemRecipe::_default_name_
 B CSOItemRecipe::default_instance_
 B CSOLobbyInvite::_default_sender_name_
 B CSOLobbyInvite::default_instance_
 B CSOPartyInvite::_default_sender_name_
 B CSOPartyInvite::default_instance_
 B CSOSelectedItemPreset::default_instance_
 B CSceneEntity_DataDescInit::g_DataMapHolder
 B CSceneListManager_DataDescInit::g_DataMapHolder
 B CSceneManager_DataDescInit::g_DataMapHolder
 B CSchemaClassBindingBase::sm_pClassBindingList
 B CScriptIntro_DataDescInit::g_DataMapHolder
 B CScriptedTarget_DataDescInit::g_DataMapHolder
 B CServerBenchmarkHook::s_pBenchmarkHook
 B CServerNetworkProperty_DataDescInit::g_DataMapHolder
 B CShadowControl_DataDescInit::g_DataMapHolder
 B CSimTimer_DataDescInit::g_DataMapHolder
 B CSimpleSimTimer_DataDescInit::g_DataMapHolder
 B CSkyCamera_DataDescInit::g_DataMapHolder
 B CSkyboxSwapper_DataDescInit::g_DataMapHolder
 B CSlideshowDisplay_DataDescInit::g_DataMapHolder
 B CSmokeStackLightInfo_DataDescInit::g_DataMapHolder
 B CSmokeStack_DataDescInit::g_DataMapHolder
 B CSoundEnt_DataDescInit::g_DataMapHolder
 B CSoundEnvelope_DataDescInit::g_DataMapHolder
 B CSoundPatch::g_SoundPatchCount
 B CSoundPatch::s_Allocator
 B CSoundPatch_DataDescInit::g_DataMapHolder
 B CSound_DataDescInit::g_DataMapHolder
 B CSpatialEntity_DataDescInit::g_DataMapHolder
 B CSpeaker_DataDescInit::g_DataMapHolder
 B CSpotlightEnd_DataDescInit::g_DataMapHolder
 B CSpriteTrail_DataDescInit::g_DataMapHolder
 B CSprite_DataDescInit::g_DataMapHolder
 B CStatueProp_DataDescInit::g_DataMapHolder
 B CSteamJet_DataDescInit::g_DataMapHolder
 B CStopwatchBase_DataDescInit::g_DataMapHolder
 B CStopwatch_DataDescInit::g_DataMapHolder
 B CStressEntityReg::s_pHead
 B CStripWeapons_DataDescInit::g_DataMapHolder
 B CSun_DataDescInit::g_DataMapHolder
 B CSunlightShadowControl_DataDescInit::g_DataMapHolder
 B CTakeDamageInfo_DataDescInit::g_DataMapHolder
 B CTankTargetChange_DataDescInit::g_DataMapHolder
 B CTankTrainAI_DataDescInit::g_DataMapHolder
 B CTargetCDAudioRep_DataDescInit::g_DataMapHolder
 B CTargetChangeGravity_DataDescInit::g_DataMapHolder
 B CTeamSpawnPoint_DataDescInit::g_DataMapHolder
 B CTeamVehicleSpawnPoint_DataDescInit::g_DataMapHolder
 B CTemplateNPCMaker_DataDescInit::g_DataMapHolder
 B CTesla_DataDescInit::g_DataMapHolder
 B CTestTraceline_DataDescInit::g_DataMapHolder
 B CTextStatFile::s_pHead
 B CTextureToggle_DataDescInit::g_DataMapHolder
 B CThrustController_DataDescInit::g_DataMapHolder
 B CTimeline_DataDescInit::g_DataMapHolder
 B CTimerEntity_DataDescInit::g_DataMapHolder
 B CTonemapTrigger_DataDescInit::g_DataMapHolder
 B CTriggerAutoCrouch_DataDescInit::g_DataMapHolder
 B CTriggerBrush_DataDescInit::g_DataMapHolder
 B CTriggerCameraMultiplayer_DataDescInit::g_DataMapHolder
 B CTriggerCamera_DataDescInit::g_DataMapHolder
 B CTriggerCatapult_DataDescInit::g_DataMapHolder
 B CTriggerGravity_DataDescInit::g_DataMapHolder
 B CTriggerHierarchy_DataDescInit::g_DataMapHolder
 B CTriggerHurt_DataDescInit::g_DataMapHolder
 B CTriggerImpact_DataDescInit::g_DataMapHolder
 B CTriggerLook_DataDescInit::g_DataMapHolder
 B CTriggerMultiple_DataDescInit::g_DataMapHolder
 B CTriggerPaintCleanser_DataDescInit::g_DataMapHolder
 B CTriggerPhysicsTrap_DataDescInit::g_DataMapHolder
 B CTriggerPingDetector_DataDescInit::g_DataMapHolder
 B CTriggerPlayerMovement_DataDescInit::g_DataMapHolder
 B CTriggerPlayerTeam_DataDescInit::g_DataMapHolder
 B CTriggerPortalCleanser::s_FizzlerAmbientSoundPlayer
 B CTriggerPortalCleanser_DataDescInit::g_DataMapHolder
 B CTriggerProximity_DataDescInit::g_DataMapHolder
 B CTriggerPush_DataDescInit::g_DataMapHolder
 B CTriggerRemove_DataDescInit::g_DataMapHolder
 B CTriggerSave_DataDescInit::g_DataMapHolder
 B CTriggerSoundscape_DataDescInit::g_DataMapHolder
 B CTriggerTeleport_DataDescInit::g_DataMapHolder
 B CTriggerToggleSave_DataDescInit::g_DataMapHolder
 B CTriggerVPhysicsMotion_DataDescInit::g_DataMapHolder
 B CTriggerViewProxy_DataDescInit::g_DataMapHolder
 B CTriggerWateryDeath_DataDescInit::g_DataMapHolder
 B CTriggerWeaponDissolve_DataDescInit::g_DataMapHolder
 B CTriggerWeaponStrip_DataDescInit::g_DataMapHolder
 B CTriggerWind_DataDescInit::g_DataMapHolder
 B CTrigger_TractorBeam_DataDescInit::g_DataMapHolder
 B CTurretTipController_DataDescInit::g_DataMapHolder
 B CUtlMemoryPool::g_ReportFunc
 B CUtlSymbol::s_pSymbolTable
 B CVGuiScreen_DataDescInit::g_DataMapHolder
 B CWC_UpdateIgnoreList_DataDescInit::g_DataMapHolder
 B CWaterBullet_DataDescInit::g_DataMapHolder
 B CWaterLODControl_DataDescInit::g_DataMapHolder
 B CWateryDeathLeech_DataDescInit::g_DataMapHolder
 B CWeaponCycler_DataDescInit::g_DataMapHolder
 B CWeaponItemBase_DataDescInit::g_DataMapHolder
 B CWeaponPaintGun_DataDescInit::g_DataMapHolder
 B CWeaponPortalBase_DataDescInit::g_DataMapHolder
 B CWeaponPortalgun_DataDescInit::g_DataMapHolder
 B CWeaponPromoAntennaBall_DataDescInit::g_DataMapHolder
 B CWeaponPromoAntennaEgg_DataDescInit::g_DataMapHolder
 B CWeaponPromoHelmetBall_DataDescInit::g_DataMapHolder
 B CWeaponPromoHelmetEgg_DataDescInit::g_DataMapHolder
 B CWeightButton_DataDescInit::g_DataMapHolder
 B CWindowPane_DataDescInit::g_DataMapHolder
 B CWorldItem_DataDescInit::g_DataMapHolder
 B CWorld_DataDescInit::g_DataMapHolder
 B CWreckage_DataDescInit::g_DataMapHolder
 B CaptionLookup_t_DataDescInit::g_DataMapHolder
 B ClientGamePrecachePrecache::s_ResourcePrecacher
 B ClientPrecachePrecache::s_ResourcePrecacher
 B CompiledCaptionHeader_t_DataDescInit::g_DataMapHolder
 B ConCommandBase::s_pAccessor
 B ConCommandBase::s_pConCommandBases
 B ConceptHistory_t_DataDescInit::g_DataMapHolder
 B DT_AI_BaseNPC::g_SendTable
 B DT_AI_BaseNPC::g_SendTableInit
 B DT_AR2Explosion::g_SendTable
 B DT_AR2Explosion::g_SendTableInit
 B DT_AnimTimeMustBeFirst::g_SendTable
 B DT_AnimTimeMustBeFirst::g_SendTableInit
 B DT_Animationlayer::g_SendTable
 B DT_Animationlayer::g_SendTableInit
 B DT_AttributeContainer::g_SendTable
 B DT_AttributeContainer::g_SendTableInit
 B DT_AttributeContainerPlayer::g_SendTable
 B DT_AttributeContainerPlayer::g_SendTableInit
 B DT_AttributeList::g_SendTable
 B DT_AttributeList::g_SendTableInit
 B DT_AttributeManager::g_SendTable
 B DT_AttributeManager::g_SendTableInit
 B DT_BCCLocalPlayerExclusive::g_SendTable
 B DT_BCCLocalPlayerExclusive::g_SendTableInit
 B DT_BaseAnimating::g_SendTable
 B DT_BaseAnimating::g_SendTableInit
 B DT_BaseAnimatingOverlay::g_SendTable
 B DT_BaseAnimatingOverlay::g_SendTableInit
 B DT_BaseBeam::g_SendTable
 B DT_BaseBeam::g_SendTableInit
 B DT_BaseButton::g_SendTable
 B DT_BaseButton::g_SendTableInit
 B DT_BaseCombatCharacter::g_SendTable
 B DT_BaseCombatCharacter::g_SendTableInit
 B DT_BaseCombatWeapon::g_SendTable
 B DT_BaseCombatWeapon::g_SendTableInit
 B DT_BaseDoor::g_SendTable
 B DT_BaseDoor::g_SendTableInit
 B DT_BaseEntity::g_SendTable
 B DT_BaseEntity::g_SendTableInit
 B DT_BaseFlex::g_SendTable
 B DT_BaseFlex::g_SendTableInit
 B DT_BaseGrenade::g_SendTable
 B DT_BaseGrenade::g_SendTableInit
 B DT_BaseHLCombatWeapon::g_SendTable
 B DT_BaseHLCombatWeapon::g_SendTableInit
 B DT_BaseParticleEntity::g_SendTable
 B DT_BaseParticleEntity::g_SendTableInit
 B DT_BasePlayer::g_SendTable
 B DT_BasePlayer::g_SendTableInit
 B DT_BasePortalCombatWeapon::g_SendTable
 B DT_BasePortalCombatWeapon::g_SendTableInit
 B DT_BaseProjectedEntity::g_SendTable
 B DT_BaseProjectedEntity::g_SendTableInit
 B DT_BaseProjector::g_SendTable
 B DT_BaseProjector::g_SendTableInit
 B DT_BasePropDoor::g_SendTable
 B DT_BasePropDoor::g_SendTableInit
 B DT_BaseTempEntity::g_SendTable
 B DT_BaseTempEntity::g_SendTableInit
 B DT_BaseToggle::g_SendTable
 B DT_BaseToggle::g_SendTableInit
 B DT_BaseTrigger::g_SendTable
 B DT_BaseTrigger::g_SendTableInit
 B DT_BaseVPhysicsTrigger::g_SendTable
 B DT_BaseVPhysicsTrigger::g_SendTableInit
 B DT_BaseViewModel::g_SendTable
 B DT_BaseViewModel::g_SendTableInit
 B DT_Beam::g_SendTable
 B DT_Beam::g_SendTableInit
 B DT_BeamSpotlight::g_SendTable
 B DT_BeamSpotlight::g_SendTableInit
 B DT_BoneFollower::g_SendTable
 B DT_BoneFollower::g_SendTableInit
 B DT_BreakableProp::g_SendTable
 B DT_BreakableProp::g_SendTableInit
 B DT_BreakableSurface::g_SendTable
 B DT_BreakableSurface::g_SendTableInit
 B DT_CFish::g_SendTable
 B DT_CFish::g_SendTableInit
 B DT_CitadelEnergyCore::g_SendTable
 B DT_CitadelEnergyCore::g_SendTableInit
 B DT_CollisionProperty::g_SendTable
 B DT_CollisionProperty::g_SendTableInit
 B DT_ColorCorrection::g_SendTable
 B DT_ColorCorrection::g_SendTableInit
 B DT_ColorCorrectionVolume::g_SendTable
 B DT_ColorCorrectionVolume::g_SendTableInit
 B DT_Corpse::g_SendTable
 B DT_Corpse::g_SendTableInit
 B DT_CountdownTimer::g_SendTable
 B DT_CountdownTimer::g_SendTableInit
 B DT_DetailController::g_SendTable
 B DT_DetailController::g_SendTableInit
 B DT_DustTrail::g_SendTable
 B DT_DustTrail::g_SendTableInit
 B DT_DynamicLight::g_SendTable
 B DT_DynamicLight::g_SendTableInit
 B DT_DynamicProp::g_SendTable
 B DT_DynamicProp::g_SendTableInit
 B DT_EffectData::g_SendTable
 B DT_EffectData::g_SendTableInit
 B DT_Embers::g_SendTable
 B DT_Embers::g_SendTableInit
 B DT_EntityDissolve::g_SendTable
 B DT_EntityDissolve::g_SendTableInit
 B DT_EntityFlame::g_SendTable
 B DT_EntityFlame::g_SendTableInit
 B DT_EntityFreezing::g_SendTable
 B DT_EntityFreezing::g_SendTableInit
 B DT_EntityParticleTrail::g_SendTable
 B DT_EntityParticleTrail::g_SendTableInit
 B DT_EntityParticleTrailInfo::g_SendTable
 B DT_EntityParticleTrailInfo::g_SendTableInit
 B DT_EntityPortalledNetworkMessage::g_SendTable
 B DT_EntityPortalledNetworkMessage::g_SendTableInit
 B DT_EnvAmbientLight::g_SendTable
 B DT_EnvAmbientLight::g_SendTableInit
 B DT_EnvDOFController::g_SendTable
 B DT_EnvDOFController::g_SendTableInit
 B DT_EnvParticleScript::g_SendTable
 B DT_EnvParticleScript::g_SendTableInit
 B DT_EnvPortalPathTrack::g_SendTable
 B DT_EnvPortalPathTrack::g_SendTableInit
 B DT_EnvProjectedTexture::g_SendTable
 B DT_EnvProjectedTexture::g_SendTableInit
 B DT_EnvScreenEffect::g_SendTable
 B DT_EnvScreenEffect::g_SendTableInit
 B DT_EnvScreenOverlay::g_SendTable
 B DT_EnvScreenOverlay::g_SendTableInit
 B DT_EnvTonemapController::g_SendTable
 B DT_EnvTonemapController::g_SendTableInit
 B DT_EnvWind::g_SendTable
 B DT_EnvWind::g_SendTableInit
 B DT_EnvWindShared::g_SendTable
 B DT_EnvWindShared::g_SendTableInit
 B DT_Env_Lightrail_Endpoint::g_SendTable
 B DT_Env_Lightrail_Endpoint::g_SendTableInit
 B DT_FireSmoke::g_SendTable
 B DT_FireSmoke::g_SendTableInit
 B DT_FireTrail::g_SendTable
 B DT_FireTrail::g_SendTableInit
 B DT_FizzlerEffects::g_SendTable
 B DT_FizzlerEffects::g_SendTableInit
 B DT_FizzlerMultiOriginSoundPlayer::g_SendTable
 B DT_FizzlerMultiOriginSoundPlayer::g_SendTableInit
 B DT_FogController::g_SendTable
 B DT_FogController::g_SendTableInit
 B DT_FuncAreaPortalWindow::g_SendTable
 B DT_FuncAreaPortalWindow::g_SendTableInit
 B DT_FuncBrush::g_SendTable
 B DT_FuncBrush::g_SendTableInit
 B DT_FuncConveyor::g_SendTable
 B DT_FuncConveyor::g_SendTableInit
 B DT_FuncLadder::g_SendTable
 B DT_FuncLadder::g_SendTableInit
 B DT_FuncMonitor::g_SendTable
 B DT_FuncMonitor::g_SendTableInit
 B DT_FuncMoveLinear::g_SendTable
 B DT_FuncMoveLinear::g_SendTableInit
 B DT_FuncNoPortalVolume::g_SendTable
 B DT_FuncNoPortalVolume::g_SendTableInit
 B DT_FuncOccluder::g_SendTable
 B DT_FuncOccluder::g_SendTableInit
 B DT_FuncPortalBumper::g_SendTable
 B DT_FuncPortalBumper::g_SendTableInit
 B DT_FuncReflectiveGlass::g_SendTable
 B DT_FuncReflectiveGlass::g_SendTableInit
 B DT_FuncRotating::g_SendTable
 B DT_FuncRotating::g_SendTableInit
 B DT_FuncSmokeVolume::g_SendTable
 B DT_FuncSmokeVolume::g_SendTableInit
 B DT_FuncTrackTrain::g_SendTable
 B DT_FuncTrackTrain::g_SendTableInit
 B DT_Func_Dust::g_SendTable
 B DT_Func_Dust::g_SendTableInit
 B DT_Func_LOD::g_SendTable
 B DT_Func_LOD::g_SendTableInit
 B DT_GameRulesProxy::g_SendTable
 B DT_GameRulesProxy::g_SendTableInit
 B DT_HL2GameRules::g_SendTable
 B DT_HL2GameRules::g_SendTableInit
 B DT_HLMachineGun::g_SendTable
 B DT_HLMachineGun::g_SendTableInit
 B DT_HLSelectFireMachineGun::g_SendTable
 B DT_HLSelectFireMachineGun::g_SendTableInit
 B DT_HalfLife2Proxy::g_SendTable
 B DT_HalfLife2Proxy::g_SendTableInit
 B DT_HandleTest::g_SendTable
 B DT_HandleTest::g_SendTableInit
 B DT_InfoLadderDismount::g_SendTable
 B DT_InfoLadderDismount::g_SendTableInit
 B DT_InfoOverlayAccessor::g_SendTable
 B DT_InfoOverlayAccessor::g_SendTableInit
 B DT_InfoPlacementHelper::g_SendTable
 B DT_InfoPlacementHelper::g_SendTableInit
 B DT_InfoPortalScore::g_SendTable
 B DT_InfoPortalScore::g_SendTableInit
 B DT_IntervalTimer::g_SendTable
 B DT_IntervalTimer::g_SendTableInit
 B DT_LabIndicatorPanel::g_SendTable
 B DT_LabIndicatorPanel::g_SendTableInit
 B DT_LevelPlacardDisplay::g_SendTable
 B DT_LevelPlacardDisplay::g_SendTableInit
 B DT_LightGlow::g_SendTable
 B DT_LightGlow::g_SendTableInit
 B DT_Local::g_SendTable
 B DT_Local::g_SendTableInit
 B DT_LocalActiveWeaponData::g_SendTable
 B DT_LocalActiveWeaponData::g_SendTableInit
 B DT_LocalPlayerExclusive::g_SendTable
 B DT_LocalPlayerExclusive::g_SendTableInit
 B DT_LocalWeaponData::g_SendTable
 B DT_LocalWeaponData::g_SendTableInit
 B DT_MP_LobbyScreen::g_SendTable
 B DT_MP_LobbyScreen::g_SendTableInit
 B DT_MaterialModifyControl::g_SendTable
 B DT_MaterialModifyControl::g_SendTableInit
 B DT_MortarShell::g_SendTable
 B DT_MortarShell::g_SendTableInit
 B DT_MovieDisplay::g_SendTable
 B DT_MovieDisplay::g_SendTableInit
 B DT_MovieExplosion::g_SendTable
 B DT_MovieExplosion::g_SendTableInit
 B DT_NPC_HoverTurret::g_SendTable
 B DT_NPC_HoverTurret::g_SendTableInit
 B DT_NPC_Personality_Core::g_SendTable
 B DT_NPC_Personality_Core::g_SendTableInit
 B DT_NPC_Portal_FloorTurret::g_SendTable
 B DT_NPC_Portal_FloorTurret::g_SendTableInit
 B DT_NPC_RocketTurret::g_SendTable
 B DT_NPC_RocketTurret::g_SendTableInit
 B DT_NPC_Wheatley_Boss::g_SendTable
 B DT_NPC_Wheatley_Boss::g_SendTableInit
 B DT_NeurotoxinCountdown::g_SendTable
 B DT_NeurotoxinCountdown::g_SendTableInit
 B DT_OverlayVars::g_SendTable
 B DT_OverlayVars::g_SendTableInit
 B DT_PSCollisionEntity::g_SendTable
 B DT_PSCollisionEntity::g_SendTableInit
 B DT_PS_InternalData_t::g_SendTable
 B DT_PS_InternalData_t::g_SendTableInit
 B DT_PS_SimulationData_t::g_SendTable
 B DT_PS_SimulationData_t::g_SendTableInit
 B DT_PaintSprayer::g_SendTable
 B DT_PaintSprayer::g_SendTableInit
 B DT_PaintStream::g_SendTable
 B DT_PaintStream::g_SendTableInit
 B DT_ParticleFire::g_SendTable
 B DT_ParticleFire::g_SendTableInit
 B DT_ParticlePerformanceMonitor::g_SendTable
 B DT_ParticlePerformanceMonitor::g_SendTableInit
 B DT_ParticleSmokeGrenade::g_SendTable
 B DT_ParticleSmokeGrenade::g_SendTableInit
 B DT_ParticleSystem::g_SendTable
 B DT_ParticleSystem::g_SendTableInit
 B DT_PhysBox::g_SendTable
 B DT_PhysBox::g_SendTableInit
 B DT_PhysBoxMultiplayer::g_SendTable
 B DT_PhysBoxMultiplayer::g_SendTableInit
 B DT_PhysMagnet::g_SendTable
 B DT_PhysMagnet::g_SendTableInit
 B DT_PhysicsProp::g_SendTable
 B DT_PhysicsProp::g_SendTableInit
 B DT_PhysicsPropMultiplayer::g_SendTable
 B DT_PhysicsPropMultiplayer::g_SendTableInit
 B DT_Plasma::g_SendTable
 B DT_Plasma::g_SendTableInit
 B DT_PlayerResource::g_SendTable
 B DT_PlayerResource::g_SendTableInit
 B DT_PlayerState::g_SendTable
 B DT_PlayerState::g_SendTableInit
 B DT_PointCamera::g_SendTable
 B DT_PointCamera::g_SendTableInit
 B DT_PointCommentaryNode::g_SendTable
 B DT_PointCommentaryNode::g_SendTableInit
 B DT_PointSurvey::g_SendTable
 B DT_PointSurvey::g_SendTableInit
 B DT_PortalGameRules::g_SendTable
 B DT_PortalGameRules::g_SendTableInit
 B DT_PortalGameRulesProxy::g_SendTable
 B DT_PortalGameRulesProxy::g_SendTableInit
 B DT_PortalLaser::g_SendTable
 B DT_PortalLaser::g_SendTableInit
 B DT_PortalLocal::g_SendTable
 B DT_PortalLocal::g_SendTableInit
 B DT_PortalLocalPlayerExclusive::g_SendTable
 B DT_PortalLocalPlayerExclusive::g_SendTableInit
 B DT_PortalMPGameRules::g_SendTable
 B DT_PortalMPGameRules::g_SendTableInit
 B DT_PortalMPGameRulesProxy::g_SendTable
 B DT_PortalMPGameRulesProxy::g_SendTableInit
 B DT_PortalMPStatsProxy::g_SendTable
 B DT_PortalMPStatsProxy::g_SendTableInit
 B DT_PortalNonLocalPlayerExclusive::g_SendTable
 B DT_PortalNonLocalPlayerExclusive::g_SendTableInit
 B DT_PortalPlayerShared::g_SendTable
 B DT_PortalPlayerShared::g_SendTableInit
 B DT_PortalPlayerStatistics::g_SendTable
 B DT_PortalPlayerStatistics::g_SendTableInit
 B DT_PortalPointPush::g_SendTable
 B DT_PortalPointPush::g_SendTableInit
 B DT_PortalRagdoll::g_SendTable
 B DT_PortalRagdoll::g_SendTableInit
 B DT_PortalSimulator::g_SendTable
 B DT_PortalSimulator::g_SendTableInit
 B DT_Portal_Base2D::g_SendTable
 B DT_Portal_Base2D::g_SendTableInit
 B DT_Portal_MP_Stats::g_SendTable
 B DT_Portal_MP_Stats::g_SendTableInit
 B DT_Portal_Player::g_SendTable
 B DT_Portal_Player::g_SendTableInit
 B DT_PoseController::g_SendTable
 B DT_PoseController::g_SendTableInit
 B DT_PostProcessController::g_SendTable
 B DT_PostProcessController::g_SendTableInit
 B DT_Precipitation::g_SendTable
 B DT_Precipitation::g_SendTableInit
 B DT_PrecipitationBlocker::g_SendTable
 B DT_PrecipitationBlocker::g_SendTableInit
 B DT_PredictedViewModel::g_SendTable
 B DT_PredictedViewModel::g_SendTableInit
 B DT_ProjectedEntityAmbientSoundProxy::g_SendTable
 B DT_ProjectedEntityAmbientSoundProxy::g_SendTableInit
 B DT_ProjectedTractorBeamEntity::g_SendTable
 B DT_ProjectedTractorBeamEntity::g_SendTableInit
 B DT_ProjectedWallEntity::g_SendTable
 B DT_ProjectedWallEntity::g_SendTableInit
 B DT_PropCombineBall::g_SendTable
 B DT_PropCombineBall::g_SendTableInit
 B DT_PropDoorRotating::g_SendTable
 B DT_PropDoorRotating::g_SendTableInit
 B DT_PropEnergyBall::g_SendTable
 B DT_PropEnergyBall::g_SendTableInit
 B DT_PropFloorButton::g_SendTable
 B DT_PropFloorButton::g_SendTableInit
 B DT_PropLinkedPortalDoor::g_SendTable
 B DT_PropLinkedPortalDoor::g_SendTableInit
 B DT_PropPaintBomb::g_SendTable
 B DT_PropPaintBomb::g_SendTableInit
 B DT_PropPortalStatsDisplay::g_SendTable
 B DT_PropPortalStatsDisplay::g_SendTableInit
 B DT_PropRocketTripwire::g_SendTable
 B DT_PropRocketTripwire::g_SendTableInit
 B DT_PropTractorBeamProjector::g_SendTable
 B DT_PropTractorBeamProjector::g_SendTableInit
 B DT_PropVehicleChoreoGeneric::g_SendTable
 B DT_PropVehicleChoreoGeneric::g_SendTableInit
 B DT_PropVehicleDriveable::g_SendTable
 B DT_PropVehicleDriveable::g_SendTableInit
 B DT_PropWeightedCube::g_SendTable
 B DT_PropWeightedCube::g_SendTableInit
 B DT_Prop_Hallucination::g_SendTable
 B DT_Prop_Hallucination::g_SendTableInit
 B DT_Prop_Mirror::g_SendTable
 B DT_Prop_Mirror::g_SendTableInit
 B DT_Prop_Portal::g_SendTable
 B DT_Prop_Portal::g_SendTableInit
 B DT_ProxyToggle::g_SendTable
 B DT_ProxyToggle::g_SendTableInit
 B DT_ProxyToggle_ProxiedData::g_SendTable
 B DT_ProxyToggle_ProxiedData::g_SendTableInit
 B DT_QuadraticBeam::g_SendTable
 B DT_QuadraticBeam::g_SendTableInit
 B DT_Ragdoll::g_SendTable
 B DT_Ragdoll::g_SendTableInit
 B DT_RagdollManager::g_SendTable
 B DT_RagdollManager::g_SendTableInit
 B DT_Ragdoll_Attached::g_SendTable
 B DT_Ragdoll_Attached::g_SendTableInit
 B DT_RocketTrail::g_SendTable
 B DT_RocketTrail::g_SendTableInit
 B DT_RopeKeyframe::g_SendTable
 B DT_RopeKeyframe::g_SendTableInit
 B DT_SceneEntity::g_SendTable
 B DT_SceneEntity::g_SendTableInit
 B DT_ScriptCreatedAttribute::g_SendTable
 B DT_ScriptCreatedAttribute::g_SendTableInit
 B DT_ScriptCreatedItem::g_SendTable
 B DT_ScriptCreatedItem::g_SendTableInit
 B DT_ScriptIntro::g_SendTable
 B DT_ScriptIntro::g_SendTableInit
 B DT_ServerAnimationData::g_SendTable
 B DT_ServerAnimationData::g_SendTableInit
 B DT_ShadowControl::g_SendTable
 B DT_ShadowControl::g_SendTableInit
 B DT_SlideshowDisplay::g_SendTable
 B DT_SlideshowDisplay::g_SendTableInit
 B DT_SmokeStack::g_SendTable
 B DT_SmokeStack::g_SendTableInit
 B DT_SmokeTrail::g_SendTable
 B DT_SmokeTrail::g_SendTableInit
 B DT_SpatialEntity::g_SendTable
 B DT_SpatialEntity::g_SendTableInit
 B DT_SporeExplosion::g_SendTable
 B DT_SporeExplosion::g_SendTableInit
 B DT_SporeTrail::g_SendTable
 B DT_SporeTrail::g_SendTableInit
 B DT_SpotlightEnd::g_SendTable
 B DT_SpotlightEnd::g_SendTableInit
 B DT_Sprite::g_SendTable
 B DT_Sprite::g_SendTableInit
 B DT_SpriteOriented::g_SendTable
 B DT_SpriteOriented::g_SendTableInit
 B DT_SpriteTrail::g_SendTable
 B DT_SpriteTrail::g_SendTableInit
 B DT_StatueProp::g_SendTable
 B DT_StatueProp::g_SendTableInit
 B DT_SteamJet::g_SendTable
 B DT_SteamJet::g_SendTableInit
 B DT_Sun::g_SendTable
 B DT_Sun::g_SendTableInit
 B DT_SunlightShadowControl::g_SendTable
 B DT_SunlightShadowControl::g_SendTableInit
 B DT_TEAntlionDust::g_SendTable
 B DT_TEAntlionDust::g_SendTableInit
 B DT_TEArmorRicochet::g_SendTable
 B DT_TEArmorRicochet::g_SendTableInit
 B DT_TEBSPDecal::g_SendTable
 B DT_TEBSPDecal::g_SendTableInit
 B DT_TEBeamEntPoint::g_SendTable
 B DT_TEBeamEntPoint::g_SendTableInit
 B DT_TEBeamEnts::g_SendTable
 B DT_TEBeamEnts::g_SendTableInit
 B DT_TEBeamFollow::g_SendTable
 B DT_TEBeamFollow::g_SendTableInit
 B DT_TEBeamLaser::g_SendTable
 B DT_TEBeamLaser::g_SendTableInit
 B DT_TEBeamPoints::g_SendTable
 B DT_TEBeamPoints::g_SendTableInit
 B DT_TEBeamRing::g_SendTable
 B DT_TEBeamRing::g_SendTableInit
 B DT_TEBeamRingPoint::g_SendTable
 B DT_TEBeamRingPoint::g_SendTableInit
 B DT_TEBeamSpline::g_SendTable
 B DT_TEBeamSpline::g_SendTableInit
 B DT_TEBloodSprite::g_SendTable
 B DT_TEBloodSprite::g_SendTableInit
 B DT_TEBloodStream::g_SendTable
 B DT_TEBloodStream::g_SendTableInit
 B DT_TEBreakModel::g_SendTable
 B DT_TEBreakModel::g_SendTableInit
 B DT_TEBubbleTrail::g_SendTable
 B DT_TEBubbleTrail::g_SendTableInit
 B DT_TEBubbles::g_SendTable
 B DT_TEBubbles::g_SendTableInit
 B DT_TEClientProjectile::g_SendTable
 B DT_TEClientProjectile::g_SendTableInit
 B DT_TEDecal::g_SendTable
 B DT_TEDecal::g_SendTableInit
 B DT_TEDust::g_SendTable
 B DT_TEDust::g_SendTableInit
 B DT_TEDynamicLight::g_SendTable
 B DT_TEDynamicLight::g_SendTableInit
 B DT_TEEffectDispatch::g_SendTable
 B DT_TEEffectDispatch::g_SendTableInit
 B DT_TEEnergySplash::g_SendTable
 B DT_TEEnergySplash::g_SendTableInit
 B DT_TEExplosion::g_SendTable
 B DT_TEExplosion::g_SendTableInit
 B DT_TEFizz::g_SendTable
 B DT_TEFizz::g_SendTableInit
 B DT_TEFootprintDecal::g_SendTable
 B DT_TEFootprintDecal::g_SendTableInit
 B DT_TEFoundryHelpers::g_SendTable
 B DT_TEFoundryHelpers::g_SendTableInit
 B DT_TEGaussExplosion::g_SendTable
 B DT_TEGaussExplosion::g_SendTableInit
 B DT_TEGlowSprite::g_SendTable
 B DT_TEGlowSprite::g_SendTableInit
 B DT_TEImpact::g_SendTable
 B DT_TEImpact::g_SendTableInit
 B DT_TEKillPlayerAttachments::g_SendTable
 B DT_TEKillPlayerAttachments::g_SendTableInit
 B DT_TELargeFunnel::g_SendTable
 B DT_TELargeFunnel::g_SendTableInit
 B DT_TEMetalSparks::g_SendTable
 B DT_TEMetalSparks::g_SendTableInit
 B DT_TEMuzzleFlash::g_SendTable
 B DT_TEMuzzleFlash::g_SendTableInit
 B DT_TEParticleSystem::g_SendTable
 B DT_TEParticleSystem::g_SendTableInit
 B DT_TEPhysicsProp::g_SendTable
 B DT_TEPhysicsProp::g_SendTableInit
 B DT_TEPlayerAnimEvent::g_SendTable
 B DT_TEPlayerAnimEvent::g_SendTableInit
 B DT_TEPlayerDecal::g_SendTable
 B DT_TEPlayerDecal::g_SendTableInit
 B DT_TEProjectedDecal::g_SendTable
 B DT_TEProjectedDecal::g_SendTableInit
 B DT_TEShatterSurface::g_SendTable
 B DT_TEShatterSurface::g_SendTableInit
 B DT_TEShowLine::g_SendTable
 B DT_TEShowLine::g_SendTableInit
 B DT_TESmoke::g_SendTable
 B DT_TESmoke::g_SendTableInit
 B DT_TESparks::g_SendTable
 B DT_TESparks::g_SendTableInit
 B DT_TESprite::g_SendTable
 B DT_TESprite::g_SendTableInit
 B DT_TESpriteSpray::g_SendTable
 B DT_TESpriteSpray::g_SendTableInit
 B DT_TEWallPaintedEvent::g_SendTable
 B DT_TEWallPaintedEvent::g_SendTableInit
 B DT_TEWorldDecal::g_SendTable
 B DT_TEWorldDecal::g_SendTableInit
 B DT_Team::g_SendTable
 B DT_Team::g_SendTableInit
 B DT_Tesla::g_SendTable
 B DT_Tesla::g_SendTableInit
 B DT_TestTraceline::g_SendTable
 B DT_TestTraceline::g_SendTableInit
 B DT_Timeline::g_SendTable
 B DT_Timeline::g_SendTableInit
 B DT_TriggerCatapult::g_SendTable
 B DT_TriggerCatapult::g_SendTableInit
 B DT_TriggerPaintCleanser::g_SendTable
 B DT_TriggerPaintCleanser::g_SendTableInit
 B DT_TriggerPlayerMovement::g_SendTable
 B DT_TriggerPlayerMovement::g_SendTableInit
 B DT_TriggerPortalCleanser::g_SendTable
 B DT_TriggerPortalCleanser::g_SendTableInit
 B DT_Trigger_TractorBeam::g_SendTable
 B DT_Trigger_TractorBeam::g_SendTableInit
 B DT_VGuiScreen::g_SendTable
 B DT_VGuiScreen::g_SendTableInit
 B DT_WORLD::g_SendTable
 B DT_WORLD::g_SendTableInit
 B DT_WaterBullet::g_SendTable
 B DT_WaterBullet::g_SendTableInit
 B DT_WaterLODControl::g_SendTable
 B DT_WaterLODControl::g_SendTableInit
 B DT_WeaponCubemap::g_SendTable
 B DT_WeaponCubemap::g_SendTableInit
 B DT_WeaponCycler::g_SendTable
 B DT_WeaponCycler::g_SendTableInit
 B DT_WeaponItemBase::g_SendTable
 B DT_WeaponItemBase::g_SendTableInit
 B DT_WeaponPaintGun::g_SendTable
 B DT_WeaponPaintGun::g_SendTableInit
 B DT_WeaponPortalBase::g_SendTable
 B DT_WeaponPortalBase::g_SendTableInit
 B DT_WeaponPortalgun::g_SendTable
 B DT_WeaponPortalgun::g_SendTableInit
 B DT_WeaponPromoAntennaBall::g_SendTable
 B DT_WeaponPromoAntennaBall::g_SendTableInit
 B DT_WeaponPromoAntennaEgg::g_SendTable
 B DT_WeaponPromoAntennaEgg::g_SendTableInit
 B DT_WeaponPromoHelmetBall::g_SendTable
 B DT_WeaponPromoHelmetBall::g_SendTableInit
 B DT_WeaponPromoHelmetEgg::g_SendTable
 B DT_WeaponPromoHelmetEgg::g_SendTableInit
 B DevShotSystem
 B DrawBattleLines
 B DustTrail_DataDescInit::g_DataMapHolder
 B EffectsPrecachePrecache::s_ResourcePrecacher
 B EntityParticleTrailInfo_t_DataDescInit::g_DataMapHolder
 B EventQueuePrioritizedEvent_t::s_Allocator
 B EventQueuePrioritizedEvent_t_DataDescInit::g_DataMapHolder
 B FilterDamageType_DataDescInit::g_DataMapHolder
 B FilterTeam_DataDescInit::g_DataMapHolder
 B FizzlerEffects_DataDescInit::g_DataMapHolder
 B FizzlerMultiOriginSoundPlayer_DataDescInit::g_DataMapHolder
 B GCSDK::CJobTime::sm_lTimeCur
 B GCSDK::CMessageListRegistration::sm_pFirst
 B GCSDK::CNetPacketPool::sm_MemPoolNetPacket
 B GCSDK::CProtoBufSharedObjectHelper::s_hasHiddenFields
 B GCSDK::CSharedObject::sm_mapFactories
 B GCSDK::g_MemPoolMsg
 B GCSDK::g_ProtoBufMsgMemoryPoolMgr
 B GCSDK::g_SOMessageReg
 B GCSDK::g_TLSSendBuffer
 B GCSDK::g_bTextBuffersFreed
 B GCSDK::g_cNetPacket
 B GCSDK::g_mutexTempTextBuffer
 B GCSDK::g_pJobCur
 B GCSDK::g_theMessageList
 B GCSDK::g_vecTempTextBuffer
 B GlobalEventLog
 B HidingSpot::m_masterMarker
 B HintNodeData_DataDescInit::g_DataMapHolder
 B Human_Hull
 B IMoveHelper::sm_pSingleton
 B IPaintStreamAutoList::m_IPaintStreamAutoListAutoList
 B IPortalLaserAutoList::m_IPortalLaserAutoListAutoList
 B IPredictionSystem::g_pPredictionSystems
 B IProjectedWallEntityAutoList::m_IProjectedWallEntityAutoListAutoList
 B IPropWeightedCubeAutoList::m_IPropWeightedCubeAutoListAutoList
 B ITriggerCatapultAutoList::m_ITriggerCatapultAutoListAutoList
 B ITriggerPortalCleanserAutoList::m_ITriggerPortalCleanserAutoListAutoList
 B ITriggerTractorBeamAutoList::m_ITriggerTractorBeamAutoListAutoList
 B IntervalTimer_DataDescInit::g_DataMapHolder
 B LOG_CONSOLE
 B LOG_DEVELOPER_VERBOSE
 B LOG_SND_EMITTERSYSTEM
 B LOG_VScript
 B LOG_WORKSHOP
 B Large_Centered_Hull
 B Large_Hull
 B MediumBig_Hull
 B Medium_Hull
 B Medium_Tall_Hull
 B NavTraceMaxs
 B NavTraceMins
 B PS_SD_Static_World_StaticProps_ClippedProp_t::pTraceEntity
 B PaintCleanserManager
 B PaintDatabase
 B PaintPowerInfo_t_DataDescInit::g_DataMapHolder
 B PaintStreamManager
 B ParserResponse_DataDescInit::g_DataMapHolder
 B ParticleSmokeGrenade_DataDescInit::g_DataMapHolder
 B PhysBlockHeader_t_DataDescInit::g_DataMapHolder
 B PhysFrictionEffectPrecache::s_ResourcePrecacher
 B PhysObjectHeader_t_DataDescInit::g_DataMapHolder
 B PortalPlayerStatistics_t_DataDescInit::g_DataMapHolder
 B PrecachePointCommentaryNodePrecache::s_ResourcePrecacher
 B RR::sm_OpCopy
 B RR::sm_OpDecrement
 B RR::sm_OpIncrement
 B RR::sm_OpToggle
 B Relationship_t_DataDescInit::g_DataMapHolder
 B ResponseContext_t_DataDescInit::g_DataMapHolder
 B ResponseGroup_DataDescInit::g_DataMapHolder
 B ResponseRules::CResponseSystem::m_DebugExcludeList
 B ResponseRules::CriteriaSet::sm_CriteriaSymbols
 B ResponseRules::g_RS
 B ResponseRules::g_ResponseStrings
 B RocketTrail_DataDescInit::g_DataMapHolder
 B SaveRestoreBlockHeader_t_DataDescInit::g_DataMapHolder
 B ScriptedNPCInteraction_Phases_t_DataDescInit::g_DataMapHolder
 B ScriptedNPCInteraction_t_DataDescInit::g_DataMapHolder
 B SinCosTable
 B Small_Centered_Hull
 B SmokeTrail_DataDescInit::g_DataMapHolder
 B SoundCommand_t::s_Allocator
 B SoundCommand_t_DataDescInit::g_DataMapHolder
 B SporeExplosion_DataDescInit::g_DataMapHolder
 B SporeTrail_DataDescInit::g_DataMapHolder
 B TemplateEntityData_t_DataDescInit::g_DataMapHolder
 B Test_EHandle
 B TheFogVolumes
 B TheHidingSpots
 B TheNavAreas
 B TheNavMesh
 B Tiny_Centered_Hull
 B Tiny_Fluid_Hull
 B Tiny_Hull
 B UnreachableEnt_t_DataDescInit::g_DataMapHolder
 B ViewSmoothingData_t_DataDescInit::g_DataMapHolder
 B VisForce
 B VisibilityMonitor
 B WeaponResourcesPrecache::s_ResourcePrecacher
 B Wide_Human_Hull
 B Wide_Short_Hull
 B ai_LOS_mode
 B ai_actbusy_search_time
 B ai_auto_contact_solver
 B ai_block_damage
 B ai_debug_actbusy
 B ai_debug_assault
 B ai_debug_avoidancebounds
 B ai_debug_directnavprobe
 B ai_debug_doors
 B ai_debug_dyninteractions
 B ai_debug_efficiency
 B ai_debug_enemies
 B ai_debug_enemyfinders
 B ai_debug_eventresponses
 B ai_debug_expressions
 B ai_debug_follow
 B ai_debug_loners
 B ai_debug_looktargets
 B ai_debug_los
 B ai_debug_nav
 B ai_debug_ragdoll_magnets
 B ai_debug_shoot_positions
 B ai_debug_speech
 B ai_debug_squads
 B ai_debug_think_ticks
 B ai_default_efficient
 B ai_drop_hint
 B ai_ef_hate_npc_duration
 B ai_ef_hate_npc_frequency
 B ai_efficiency_override
 B ai_enable_fear_behavior
 B ai_expression_frametime
 B ai_expression_optimization
 B ai_fear_player_dist
 B ai_find_lateral_cover
 B ai_find_lateral_los
 B ai_follow_use_points
 B ai_follow_use_points_when_moving
 B ai_force_serverside_ragdoll
 B ai_frametime_limit
 B ai_inhibit_spawners
 B ai_lead_time
 B ai_moveprobe_debug
 B ai_moveprobe_jump_debug
 B ai_moveprobe_usetracelist
 B ai_nav_debug_experimental_pathing
 B ai_navigator_generate_spikes
 B ai_navigator_generate_spikes_strength
 B ai_no_local_paths
 B ai_no_node_cache
 B ai_no_select_box
 B ai_no_steer
 B ai_no_talk_delay
 B ai_path_adjust_speed_on_immediate_turns
 B ai_path_insert_pause_at_est_end
 B ai_path_insert_pause_at_obstruction
 B ai_post_frame_navigation
 B ai_radial_max_link_dist
 B ai_reaction_delay_alert
 B ai_reaction_delay_idle
 B ai_rebalance_thinks
 B ai_report_task_timings_on_limit
 B ai_sequence_debug
 B ai_setupbones_debug
 B ai_shot_bias
 B ai_shot_bias_max
 B ai_shot_bias_min
 B ai_shot_stats
 B ai_shot_stats_term
 B ai_show_hull_attacks
 B ai_show_think_tolerance
 B ai_simulate_task_overtime
 B ai_spread_cone_focus_time
 B ai_spread_defocused_cone_multiplier
 B ai_spread_pattern_focus_time
 B ai_strong_optimizations
 B ai_strong_optimizations_no_checkstand
 B ai_task_pre_script
 B ai_test_moveprobe_ignoresmall
 B ai_think_limit_label
 B ai_use_clipped_paths
 B ai_use_efficiency
 B ai_use_frame_think_limits
 B ai_use_think_optimizations
 B ai_use_visibility_cache
 B ai_vehicle_avoidance
 B aimcrosshair
 B allowNPCs
 B anim_forcedamaged
 B anim_min_collision_speed_threshold
 B anim_showstate
 B anim_showstatelog
 B audioparams_t_DataDescInit::g_DataMapHolder
 B autoaim_max_deflect
 B autoaim_max_dist
 B autoaim_viewing_client
 B ballbot_sink_speed
 B blackboxrecorder
 B blobs_paused
 B bot_defend
 B bot_dontmove
 B bot_flipout
 B bot_follow
 B bot_following_distance
 B bot_forceattack2
 B bot_forceattackon
 B bot_forcefireweapon
 B bot_jump
 B bot_look
 B bot_randomnames
 B bot_requestswap
 B bot_selectweapon
 B bot_selectweaponslot
 B bot_selectweaponsubtype
 B bot_taunt
 B bot_throw
 B bounce_auto_trigger_min_speed
 B bounce_ledge_fall_height_boost
 B bounce_paint_color
 B bounce_paint_min_speed
 B bounce_paint_wall_jump_upward_speed
 B bounce_reflect_restitution
 B bounce_reflect_wall_jump_min_up_speed
 B bounce_reflect_wall_jumps_enabled
 B breakable_disable_gib_limit
 B breakable_multiplayer
 B catapult_physics_drag_boost
 B cc_Test_CreateEntity
 B cc_Test_InitRandomEntitySpawner
 B cc_Test_ProxyToggle_EnableProxy
 B cc_Test_ProxyToggle_SetValue
 B cc_Test_RandomPlayerPosition
 B cc_Test_RandomizeInPVS
 B cc_Test_RemoveAllRandomEntities
 B cc_Test_SpawnRandomEntities
 B cc_showmissing
 B change_portalgun_linkage_id
 B checkpointActiveColor
 B checkpointInactiveColor
 B chet_debug_idle
 B choreo_spew_filter
 B cl_disable_survey_panel
 B cl_use_simd_bones
 B cm_current_community_map
 B cm_is_current_community_map_coop
 B collision_shake_amp
 B collision_shake_freq
 B collision_shake_time
 B colorcorrection
 B commentary
 B commentary_available
 B coop_impact_velocity_threshold
 B coop_sink_speed_decay
 B currenttoken
 B curve_bias
 B cvar
 B datacache
 B debug_beam_badsection
 B debug_materialmodifycontrol
 B debug_paint_impact_effects
 B debug_paint_server_blobs
 B debug_paint_sprayer_cone
 B debug_paintable_projected_wall
 B debug_paintblobs_streaking
 B debug_paintbomb_explosion
 B debug_physimpact
 B debug_player_paint_shoot_pos
 B debug_portal_cleanser_search_box
 B debug_touchlinks
 B debug_viewmodel_grabcontroller
 B debug_visibility_monitor
 B debugoverlay
 B debugscriptconditions
 B decalfrequency
 B defaultteam
 B developer
 B displaysoundlist
 B draw_paint_server_blobs
 B draw_paint_splat_particles
 B eggbot_sink_speed
 B engine
 B enginesound
 B enginetrace
 B ent_debugkeys
 B ent_messages_draw
 B ent_show_contexts
 B entityflamePrecache::s_ResourcePrecacher
 B entitytable_t_DataDescInit::g_DataMapHolder
 B env_entity_freezingPrecache::s_ResourcePrecacher
 B erase_color
 B erase_visual_color
 B exploding_futbol_end_color
 B exploding_futbol_explode_on_fizzle
 B exploding_futbol_explosion_damage
 B exploding_futbol_explosion_damage_falloff
 B exploding_futbol_explosion_debug
 B exploding_futbol_explosion_magnitude
 B exploding_futbol_explosion_radius
 B exploding_futbol_flash_duration
 B exploding_futbol_flash_end_color
 B exploding_futbol_flash_start_color
 B exploding_futbol_flash_start_time
 B exploding_futbol_hit_breakables
 B exploding_futbol_phys_mag
 B exploding_futbol_phys_rad
 B exploding_futbol_physics_punt_player
 B exploding_futbol_start_color
 B exploding_futbol_use_cooldown_time
 B fSentencesInit
 B falldamage
 B fast_teleport_enable
 B filelogginglistener
 B filesystem
 B fire_absorbrate
 B fire_dmgbase
 B fire_dmginterval
 B fire_dmgscale
 B fire_energy_ball
 B fire_extabsorb
 B fire_extscale
 B fire_growthrate
 B fire_heatscale
 B fire_incomingheatscale
 B fire_maxabsorb
 B fire_rocket_projectile
 B fish_dormant
 B fizzler_fx_model_end_scale
 B fizzler_fx_model_scale_end_time_offset
 B fizzler_fx_model_scale_start_delay_time
 B flNextDeathTime
 B flashlight
 B flex_expression
 B flex_looktime
 B flex_maxawaytime
 B flex_maxplayertime
 B flex_minawaytime
 B flex_minplayertime
 B flex_talk
 B flexsetting_t_DataDescInit::g_DataMapHolder
 B flexsettinghdr_t_DataDescInit::g_DataMapHolder
 B flexweight_t_DataDescInit::g_DataMapHolder
 B fog_volume_debug
 B fogparams_t_DataDescInit::g_DataMapHolder
 B fogplayerparams_t_DataDescInit::g_DataMapHolder
 B footsteps
 B forcerespawn
 B fraglimit
 B free_pass_peek_debug
 B friendlyfire
 B func_break_max_pieces
 B func_break_reduction_factor
 B func_breakdmg_bullet
 B func_breakdmg_club
 B func_breakdmg_explosive
 B futbol_shooter_distance_from_target
 B futbol_shooter_target_height_offset
 B futbol_shooter_target_reticule_enabled
 B fx_new_sparks
 B gEntList
 B gEvilImpulse101
 B g_AIAgentTaskTimings
 B g_AIConditionsTimer
 B g_AIFoesTalkSemaphore
 B g_AIFollowManager
 B g_AIFriendliesTalkSemaphore
 B g_AIMaintainScheduleTimer
 B g_AIMoveTimer
 B g_AINetworkBuilder
 B g_AINextDisabledMessageTime
 B g_AIPostRunTimer
 B g_AIPrescheduleThinkTimer
 B g_AIRunTimer
 B g_AITaskTimings
 B g_AI_AgentSchedulesManager
 B g_AI_Manager
 B g_AI_MemoryListSaveRestoreOps
 B g_AI_SchedulesManager
 B g_AI_SensedObjectsManager
 B g_AI_SquadManager
 B g_ActBusyAnimDataSystem
 B g_ActiveGibCount
 B g_ActivityList
 B g_ActivityModifiersTable
 B g_ActivityStrings
 B g_AnimatingImagePanelLinkerHack
 B g_AnimatingImagePanelPullInModule
 B g_AreaPortals
 B g_AssaultPointString
 B g_AttribColorDefs
 B g_BanMasks
 B g_BitWriteMasks
 B g_BullseyeList
 B g_ButtonLinkerHack
 B g_ButtonPullInModule
 B g_ButtonSoundNames
 B g_CBaseAnimating_ScriptDesc
 B g_CBaseEntity_ScriptDesc
 B g_CBaseFlex_ScriptDesc
 B g_CBaseMultiplayerPlayer_ScriptDesc
 B g_CBasePlayer_ScriptDesc
 B g_CBitmapImagePanelLinkerHack
 B g_CBitmapImagePanelPullInModule
 B g_CEnvEntityMaker_ScriptDesc
 B g_CLinkedPortalDoor_ScriptDesc
 B g_CPlayerVoiceListener_ScriptDesc
 B g_CPortal_Player_ScriptDesc
 B g_CPropLinkedPortalDoor_ScriptDesc
 B g_CSceneEntity_ScriptDesc
 B g_CScriptEntityIterator_ScriptDesc
 B g_CScriptKeyValues_ScriptDesc
 B g_CTreeViewListControlLinkerHack
 B g_CTreeViewListControlPullInModule
 B g_CTriggerCamera_ScriptDesc
 B g_ChallengeModeEndNodeKeys
 B g_ChallengeNodeData
 B g_CheckButtonLinkerHack
 B g_CheckButtonPullInModule
 B g_CheckClient
 B g_CircularProgressBarLinkerHack
 B g_CircularProgressBarPullInModule
 B g_Collisions
 B g_ComboBoxLinkerHack
 B g_ComboBoxPullInModule
 B g_CommentarySystem
 B g_Commentary_SaveRestoreBlockHandler
 B g_ComputedVis
 B g_ConceptInfos
 B g_CvarToggleCheckButtonLinkerHack
 B g_CvarToggleCheckButtonPullInModule
 B g_DamageDatabase
 B g_DefaultResponseSystemSaveRestoreBlockHandler
 B g_DividerLinkerHack
 B g_DividerPullInModule
 B g_EditablePanelLinkerHack
 B g_EditablePanelPullInModule
 B g_EntListMemPool
 B g_EntityClassnames
 B g_EntityCollisionHash
 B g_EntityListPool
 B g_EntityOrientations
 B g_EntityPositions
 B g_EntitySaveRestoreBlockHandler
 B g_EntsByClassname
 B g_EventList
 B g_EventQueue
 B g_EventQueue_SaveRestoreBlockHandler
 B g_EventStrings
 B g_ExpandButtonLinkerHack
 B g_ExpandButtonPullInModule
 B g_ExpressionEvaluator
 B g_ExtraMasks
 B g_FlexSceneFileManager
 B g_FuncBumpingEntityList
 B g_FuncNoPortalVolumeList
 B g_FuncPortalDetectorList
 B g_FuncPortalOrientationVolumeList
 B g_GameTimescale
 B g_GraphPanelLinkerHack
 B g_GraphPanelPullInModule
 B g_HandleTest
 B g_ImagePanelLinkerHack
 B g_ImagePanelPullInModule
 B g_InfoCameraLinkList
 B g_ItemGenerationSystem
 B g_KeyValuesErrorStack
 B g_KillEaterAttr
 B g_LabelLinkerHack
 B g_LabelPullInModule
 B g_Language
 B g_ListPanelLinkerHack
 B g_ListPanelPullInModule
 B g_ListViewPanelLinkerHack
 B g_ListViewPanelPullInModule
 B g_MapEntityRefs
 B g_MatrixPool
 B g_MemoryLog
 B g_MenuBarLinkerHack
 B g_MenuBarPullInModule
 B g_MenuButtonLinkerHack
 B g_MenuButtonPullInModule
 B g_MenuItemLinkerHack
 B g_MenuItemPullInModule
 B g_MenuLinkerHack
 B g_MenuPullInModule
 B g_MessageBoxLinkerHack
 B g_MessageBoxPullInModule
 B g_MultiDamage
 B g_NPCEventResponseSystem
 B g_NetworkPropertyEventMgr
 B g_PanelLinkerHack
 B g_PanelPullInModule
 B g_PhysObjSaveRestoreOps
 B g_PhysSaveRestoreBlockHandler
 B g_PhysWorldObject
 B g_PhysicsHook
 B g_PlayerModEnable
 B g_PlayerSurfaceTriggers
 B g_PlayerVoiceListener
 B g_PointCameraList
 B g_PointTemplatePrecacher
 B g_Portal2ResearchDataTracker
 B g_PortalGameStats
 B g_PortalInventoryManager
 B g_PortalVortexManager
 B g_PostFrameNavigationHook
 B g_PostSimulationQueue
 B g_PrecacheOtherList
 B g_ProgressBarLinkerHack
 B g_ProgressBarPullInModule
 B g_PropDataSystem
 B g_QuaternionPool
 B g_RadioButtonLinkerHack
 B g_RadioButtonPullInModule
 B g_RagdollLVManager
 B g_RallyPointString
 B g_RemarkableList
 B g_ResponseQueueManager
 B g_RichTextLinkerHack
 B g_RichTextPullInModule
 B g_SaveRestoreBlockSet
 B g_ScalableImagePanelLinkerHack
 B g_ScalableImagePanelPullInModule
 B g_ScriptEntityIterator
 B g_ScrollBarLinkerHack
 B g_ScrollBarPullInModule
 B g_ScrollBar_HorizontalLinkerHack
 B g_ScrollBar_HorizontalPullInModule
 B g_ScrollBar_VerticalLinkerHack
 B g_ScrollBar_VerticalPullInModule
 B g_SentBanMasks
 B g_SentGameRulesMasks
 B g_ServerGameDLL
 B g_SimThinkManager
 B g_SkyList
 B g_SolverList
 B g_SoundscapeSystem
 B g_StaticCollisionPolyhedronCache
 B g_StressEntities
 B g_StressEntityRegs
 B g_StringTableGameRules
 B g_StudioHdrToActivityMaps
 B g_StudioHdrToActivityMapsLock
 B g_Teams
 B g_TemplateEntityHook
 B g_Template_SaveRestoreBlockHandler
 B g_TextEntryLinkerHack
 B g_TextEntryPullInModule
 B g_TextStatsMgr
 B g_ToggleButtonLinkerHack
 B g_ToggleButtonPullInModule
 B g_TokenProcessor
 B g_TractorBeamManager
 B g_TreeViewLinkerHack
 B g_TreeViewPullInModule
 B g_URLLabelLinkerHack
 B g_URLLabelPullInModule
 B g_VBAllocTracker
 B g_VScriptGameSystem
 B g_VScriptSaveRestoreBlockHandler
 B g_VectorPool
 B g_VguiScreenStringOps
 B g_VoiceGameMgr
 B g_VoiceGameMgrHelper
 B g_WeaponList
 B g_WorkshopLogColor
 B g_WorldEntity
 B g_ai_norebuildgraph
 B g_ai_threadedgraphbuild
 B g_bAIDebugStep
 B g_bAIDisabledByUser
 B g_bAllowForcePortalTrace
 B g_bBehaviorHost_PreventBaseClassGatherConditions
 B g_bBulletPortalTrace
 B g_bBumpedByLinkedPortal
 B g_bDisableEhandleAccess
 B g_bForcePortalTrace
 B g_bInCommentaryMode
 B g_bReceivedChainedUpdateOnRemove
 B g_bUnget
 B g_bWantModEnable
 B g_cv_BlendBonesMode
 B g_debug_angularsensor
 B g_debug_constraint_sounds
 B g_debug_doors
 B g_debug_npc_vehicle_roles
 B g_debug_physcannon
 B g_debug_ragdoll_removal
 B g_debug_trackpather
 B g_debug_transitions
 B g_debug_turret
 B g_debug_vehiclebase
 B g_debug_vehicledriver
 B g_debug_vehicleexit
 B g_debug_vehiclesound
 B g_fGameOver
 B g_hActiveSkybox
 B g_hIntroScript
 B g_hWeaponFireTriggers
 B g_iCurrentTemplateInstance
 B g_iDevShotCameraCount
 B g_iFrameLastSimplified
 B g_iSkillLevel
 B g_interactionHitByPlayerThrownPhysObj
 B g_interactionScriptedTarget
 B g_interactionTurretStillStanding
 B g_iszFuncBrushClassname
 B g_iszPhysicsPropClassname
 B g_nAITasksRun
 B g_nInsideDispatchUpdateTransmitState
 B g_nPortal2PromoFlags
 B g_nResourceFrameCount
 B g_pAINetworkManager
 B g_pAVI
 B g_pAsyncFileSystem
 B g_pBIK
 B g_pBigAINet
 B g_pBodyQueueHead
 B g_pCVar
 B g_pCurVisArea
 B g_pDataCache
 B g_pDeveloper
 B g_pDmeMakefileUtils
 B g_pEventSystem
 B g_pForceAttachEdict
 B g_pFullFileSystem
 B g_pGameRules
 B g_pGameUISystemMgr
 B g_pInputStackSystem
 B g_pInputSystem
 B g_pLastSpawn
 B g_pLocalize
 B g_pMDLCache
 B g_pMatSystemSurface
 B g_pMatchFramework
 B g_pMaterialSystem
 B g_pMaterialSystem2
 B g_pMaterialSystemDebugTextureInfo
 B g_pMaterialSystemHardwareConfig
 B g_pMeshSystem
 B g_pNavNodeHash
 B g_pNavVisPairHash
 B g_pNetworkSystem
 B g_pPhysics2
 B g_pPhysics2ActorManager
 B g_pPhysics2ResourceManager
 B g_pPhysicsCollision
 B g_pPlayerResource
 B g_pPortalMPGameRules
 B g_pPrecacheSystem
 B g_pProcessUtils
 B g_pQueuedLoader
 B g_pQueuedNavigationQueryJob
 B g_pRRConceptTable
 B g_pRenderDevice
 B g_pRenderDeviceMgr
 B g_pRenderHardwareConfig
 B g_pResourceAccessControl
 B g_pResourceSystem
 B g_pSceneSystem
 B g_pScriptVM
 B g_pServerClassHead
 B g_pShadowEntities
 B g_pShadowEntities_Main
 B g_pSharedChangeInfo
 B g_pSoundEmitterSystem
 B g_pSoundSystem
 B g_pStringTableClientSideChoreoScenes
 B g_pStringTableEffectDispatch
 B g_pStringTableExtraParticleFiles
 B g_pStringTableInfoPanel
 B g_pStringTableMaterials
 B g_pStringTableMovies
 B g_pStringTableParticleEffectNames
 B g_pStringTableVguiScreen
 B g_pStudioRender
 B g_pUtlSortVectorQSortContext
 B g_pVGui
 B g_pVGuiInput
 B g_pVGuiLocalize
 B g_pVGuiPanel
 B g_pVGuiRenderSurface
 B g_pVGuiSchemeManager
 B g_pVGuiSurface
 B g_pVGuiSystem
 B g_pVoiceServer
 B g_pWorldRendererMgr
 B g_portal_ui_controller
 B g_ragdoll_important_maxcount
 B g_ragdoll_maxcount
 B g_sModelIndexBloodDrop
 B g_sModelIndexBloodSpray
 B g_sModelIndexBubbles
 B g_sModelIndexFireball
 B g_sModelIndexSmoke
 B g_sModelIndexWExplosion
 B g_vecAttackDir
 B g_vecLocalMapPlayOrder
 B game_shadowcontrol_params_t_DataDescInit::g_DataMapHolder
 B gameeventmanager
 B gamestats_file_output_directory
 B gamestatsuploader
 B giPrecacheGrunt
 B globalentity_t_DataDescInit::g_DataMapHolder
 B gpGlobals
 B groundlinksallocated
 B group_paint_impact_effects
 B hidden
 B hide_gun_when_holding
 B hitbox_damage_enabled
 B hl2_episodic
 B hot_potato_end_color
 B hot_potato_explode_on_fizzle
 B hot_potato_explosion_damage
 B hot_potato_explosion_damage_falloff
 B hot_potato_explosion_debug
 B hot_potato_explosion_magnitude
 B hot_potato_explosion_radius
 B hot_potato_flash_duration
 B hot_potato_flash_end_color
 B hot_potato_flash_start_color
 B hot_potato_flash_start_time
 B hot_potato_hit_breakables
 B hot_potato_phys_mag
 B hot_potato_phys_rad
 B hot_potato_physics_punt_player
 B hot_potato_start_color
 B hot_potato_use_cooldown_time
 B ice_falling_damage_scale
 B item_enable_content_streaming
 B item_enable_dynamic_loading
 B jump_button_can_activate_trampoline_bounce
 B jump_helper_debug_enabled
 B jump_helper_enabled
 B jump_helper_late_jump_max_time
 B jump_helper_look_ahead_time
 B key_field
 B lineartolightmap
 B lineartovertex
 B linksallocated
 B locksound_t_DataDescInit::g_DataMapHolder
 B look_dependent_auto_long_jump_enabled
 B look_dependent_auto_long_jump_min_cos_angle
 B loopsingleplayermaps
 B lservercfgfile
 B m_debugOverlayLine
 B magnetted_objects_t_DataDescInit::g_DataMapHolder
 B mapcyclefile
 B mat_hdr_tonemapscale
 B materials
 B max_hitbox_damage_effects_per_entity
 B max_noisy_blobs_per_second
 B max_sound_channels_per_paint_stream
 B mdlcache
 B mdllib
 B min_adjusted_pitch_percentage
 B mod_load_preload
 B modelinfo
 B modifiedconvars_t_DataDescInit::g_DataMapHolder
 B mortar_visualize
 B movement_anim_playback_minrate
 B mp_allowspectators
 B mp_chattime
 B mp_clan_ready_signal
 B mp_clan_readyrestart
 B mp_dev_gamemode
 B mp_dev_wait_for_other_player
 B mp_dump_completion_data
 B mp_earn_taunt
 B mp_facefronttime
 B mp_fadetoblack
 B mp_feetyawrate
 B mp_forcecamera
 B mp_ik
 B mp_lock_all_taunts
 B mp_lock_taunt
 B mp_mark_all_maps_complete
 B mp_mark_all_maps_incomplete
 B mp_mark_course_complete
 B mp_restartgame
 B mp_server_player_team
 B mp_should_gib_bots
 B mp_showgestureslots
 B mp_slammoveyaw
 B mp_taunt_item
 B mp_timelimit
 B mp_wait_for_other_player_notconnecting_timeout
 B mp_wait_for_other_player_timeout
 B mp_waitingforplayers_cancel
 B mp_waitingforplayers_restart
 B mp_waitingforplayers_time
 B name
 B nav_area_bgcolor
 B nav_area_max_size
 B nav_coplanar_slope_limit
 B nav_coplanar_slope_limit_displacement
 B nav_corner_adjust_adjacent
 B nav_create_area_at_feet
 B nav_create_place_on_ground
 B nav_debug_blocked
 B nav_displacement_test
 B nav_drag_selection_volume_zmax_offset
 B nav_drag_selection_volume_zmin_offset
 B nav_draw_limit
 B nav_edit
 B nav_generate_fencetops
 B nav_generate_fixup_jump_areas
 B nav_generate_incremental_range
 B nav_generate_incremental_tolerance
 B nav_max_view_distance
 B nav_max_vis_delta_list_length
 B nav_potentially_visible_dot_tolerance
 B nav_quicksave
 B nav_selected_set_border_color
 B nav_selected_set_color
 B nav_show_approach_points
 B nav_show_area_info
 B nav_show_compass
 B nav_show_contiguous
 B nav_show_danger
 B nav_show_light_intensity
 B nav_show_node_grid
 B nav_show_node_id
 B nav_show_nodes
 B nav_show_player_counts
 B nav_show_potentially_visible
 B nav_slope_limit
 B nav_slope_tolerance
 B nav_snap_to_grid
 B nav_solid_props
 B nav_split_place_on_ground
 B nav_test_node
 B nav_test_node_crouch
 B nav_test_node_crouch_dir
 B nav_update_visibility_on_edit
 B nav_world_center
 B networkstringtable
 B new_portal_laser
 B nextlevel
 B noclip_fixup
 B notarget
 B npc_ally_deathmessage
 B npc_create_equipment
 B npc_height_adjust
 B npc_sentences
 B npc_vphysics
 B ogs_catapult_data
 B ogs_death_data
 B ogs_fizzled_data
 B ogs_portal_data
 B ogs_puzzle_data
 B ogs_stuck_data
 B ogs_taunt_data
 B ogs_tractor_data
 B old_radius_damage
 B p4
 B paint_color_max_diff
 B paint_compute_contacts_simd
 B paint_impact_accumulate_sound_distance_threshold
 B paint_impact_count_to_max_adjusted_volume
 B paint_impact_count_to_min_adjusted_pitch_after_full_volume
 B paint_impact_particles_distance_threshold
 B paint_impact_particles_duration
 B paint_location_distance_threshold_square
 B paint_max_impact_particles
 B paint_min_impact_particles
 B paint_power_look_ahead_sample_density
 B paintblob_air_drag
 B paintblob_applies_impulse
 B paintblob_beam_radius_offset
 B paintblob_collision_box_size
 B paintblob_gravity_scale
 B paintblob_lifetime
 B paintblob_limited_range
 B paintblob_max_radius_scale
 B paintblob_min_radius_scale
 B paintblob_minimum_portal_exit_velocity
 B paintblob_old_data_time_offset
 B paintblob_radius_while_streaking
 B paintblob_streak_angle_threshold
 B paintblob_streak_particles_enabled
 B paintblob_streak_trace_range
 B paintblob_tbeam_accel
 B paintblob_tbeam_portal_vortex_circulation
 B paintblob_tbeam_vortex_accel
 B paintblob_tbeam_vortex_circulation
 B paintblob_tbeam_vortex_distance
 B paintblob_tbeam_vortex_radius_rate
 B paintblob_update_per_second
 B paintbomb_blobs_max_streak_speed_dampen
 B paintbomb_blobs_max_streak_time
 B paintbomb_blobs_min_streak_speed_dampen
 B paintbomb_blobs_min_streak_time
 B paintbomb_explosion_radius
 B paintbomb_horizontal_angle_split
 B paintbomb_streak_speed_max
 B paintbomb_streak_speed_min
 B paintbomb_vertical_angle_split
 B panel_test_title_safe
 B particle_test_attach_attachment
 B particle_test_attach_mode
 B particle_test_file
 B partition
 B phys_debug_check_contacts
 B phys_impactforcescale
 B phys_pushscale
 B phys_show_active
 B phys_speeds
 B phys_stressbodyweights
 B phys_timescale
 B phys_upimpactforcescale
 B physcannon_maxforce
 B physcannon_maxmass
 B physcannon_mega_enabled
 B physcannon_minforce
 B physcannon_tracelength
 B physcollision
 B physenv
 B physenv_main
 B physfollower_t_DataDescInit::g_DataMapHolder
 B physics
 B physprops
 B player_can_use_painted_power
 B player_debug_print_damage
 B player_held_object_collide_with_player
 B player_held_object_debug_error
 B player_held_object_distance
 B player_held_object_distance_turret_vm
 B player_held_object_distance_vm
 B player_held_object_look_down_adjustment
 B player_held_object_max_knock_magnitude
 B player_held_object_max_throw_magnitude
 B player_held_object_min_distance
 B player_held_object_offset_up_cube
 B player_held_object_offset_up_cube_vm
 B player_held_object_offset_up_sphere
 B player_held_object_offset_up_turret_vm
 B player_held_object_transform_bump_ray
 B player_held_object_use_view_model
 B player_hold_column_max_size
 B player_hold_object_in_column
 B player_loses_painted_power_over_time
 B player_paint_effects_duration
 B player_paint_effects_enabled
 B player_paint_screen_effect_restart_delay
 B player_paint_shoot_pos_forward_scale
 B player_paint_shoot_pos_right_scale
 B player_paint_shoot_pos_up_scale
 B player_throwforce
 B playtest_random_death
 B portal2_portal_width
 B portal2_square_portals
 B portal_beamtrace_optimization
 B portal_carve_vphysics_clips
 B portal_clone_displacements
 B portal_deathcam_dist
 B portal_environment_radius
 B portal_funnel_debug
 B portal_ghost_force_hitbox
 B portal_ghost_show_bbox
 B portal_ghosts_scale
 B portal_laser_high_precision_update
 B portal_laser_normal_update
 B portal_paint_color
 B portal_player_interaction_quadtest_epsilon
 B portal_pointpush_debug
 B portal_pointpush_think_rate
 B portal_test_resting_surface_for_paint
 B portal_trace_shrink_ray_each_query
 B portal_triangles_overlap
 B portal_use_player_avoidance
 B portalgun_fire_delay
 B portalgun_held_button_fire_delay
 B prevent_crouch_jump
 B procedural_generator_debug
 B procedural_generator_laser_catcher_at_different_height
 B procedural_generator_laser_catcher_at_same_height
 B prop_active_gib_limit
 B prop_active_gib_max_fade_time
 B prop_break_disable_float
 B props_break_max_pieces
 B props_break_max_pieces_perframe
 B r_AirboatViewDampenDamp
 B r_AirboatViewDampenFreq
 B r_AirboatViewZHeight
 B r_JeepFOV
 B r_JeepViewDampenDamp
 B r_JeepViewDampenFreq
 B r_JeepViewZHeight
 B r_VehicleViewDampen
 B r_vehicleBrakeRate
 B r_visualizetraces
 B random_valve
 B reflector_cube_disable_when_on_laser
 B reflector_cube_disabled_nudge_time
 B reflector_cube_disabled_think_rate
 B reflector_cube_disabled_use_touch_check
 B rgv3tStuckTable
 B rr_debug_qa
 B rr_debugresponseconcept
 B rr_debugresponses
 B rr_debugrule
 B rr_dumpresponses
 B rr_followup_maxdist
 B rr_remarkable_max_distance
 B rr_remarkable_world_entities_replay_limit
 B rr_remarkables_enabled
 B rr_thenany_score_slop
 B s_ChildrenInfoUnpack
 B s_ColorCorrectionSystem
 B s_DMXAllocator
 B s_DragDropHelper
 B s_FogSystem
 B s_NoEscConversion
 B s_PortalModelPrecacher
 B s_PostProcessSystem
 B s_PushedEntities
 B s_RagdollLRU
 B s_StringCharConversion
 B s_TonemapSystem
 B s_bMathlibInitialized
 B s_dragSelectionSetAddColor
 B s_dragSelectionSetBorderColor
 B s_dragSelectionSetDeleteColor
 B s_pConv
 B s_pInterfaceRegs
 B s_pParticleSystemDefinitionUnpack
 B s_selectedSetBorderColor
 B s_selectedSetColor
 B s_vcollide_wireframe
 B scene_clientflex
 B scene_clientplayback
 B scene_flatturn
 B scene_print
 B scenefilecache
 B script_connect_debugger_on_mapspawn
 B scriptmanager
 B servercfgfile
 B serverenginetools
 B serverfoundry
 B serverpluginhelpers
 B show_player_paint_power_debug
 B showanimstate_activities
 B showanimstate_log
 B showhitlocation
 B showtriggers
 B sk_allow_autoaim
 B sk_ally_regen_time
 B sk_ammo_qty_scale1
 B sk_ammo_qty_scale2
 B sk_ammo_qty_scale3
 B sk_auto_reload_time
 B sk_autoaim_mode
 B sk_autoaim_scale1
 B sk_autoaim_scale2
 B sk_bullseye_health
 B sk_combine_ball_search_radius
 B sk_combineball_guidefactor
 B sk_combineball_seek_angle
 B sk_combineball_seek_kill
 B sk_dmg_inflict_scale1
 B sk_dmg_inflict_scale2
 B sk_dmg_inflict_scale3
 B sk_dmg_sniper_penetrate_npc
 B sk_dmg_sniper_penetrate_plr
 B sk_dmg_take_scale1
 B sk_dmg_take_scale2
 B sk_dmg_take_scale3
 B sk_fraggrenade_radius
 B sk_hover_turret_health
 B sk_max_357
 B sk_max_alyxgun
 B sk_max_ar2
 B sk_max_ar2_altfire
 B sk_max_buckshot
 B sk_max_crossbow
 B sk_max_gauss_round
 B sk_max_grenade
 B sk_max_pistol
 B sk_max_rpg_round
 B sk_max_smg1
 B sk_max_smg1_grenade
 B sk_max_sniper_round
 B sk_npc_arm
 B sk_npc_chest
 B sk_npc_dmg_357
 B sk_npc_dmg_airboat
 B sk_npc_dmg_alyxgun
 B sk_npc_dmg_ar2
 B sk_npc_dmg_buckshot
 B sk_npc_dmg_combineball
 B sk_npc_dmg_crossbow
 B sk_npc_dmg_fraggrenade
 B sk_npc_dmg_grenade
 B sk_npc_dmg_gunship
 B sk_npc_dmg_gunship_to_plr
 B sk_npc_dmg_pistol
 B sk_npc_dmg_rpg_round
 B sk_npc_dmg_smg1
 B sk_npc_dmg_smg1_grenade
 B sk_npc_dmg_sniper_round
 B sk_npc_head
 B sk_npc_leg
 B sk_npc_stomach
 B sk_player_arm
 B sk_player_chest
 B sk_player_head
 B sk_player_leg
 B sk_player_stomach
 B sk_plr_dmg_357
 B sk_plr_dmg_airboat
 B sk_plr_dmg_alyxgun
 B sk_plr_dmg_ar2
 B sk_plr_dmg_buckshot
 B sk_plr_dmg_crossbow
 B sk_plr_dmg_fraggrenade
 B sk_plr_dmg_grenade
 B sk_plr_dmg_pistol
 B sk_plr_dmg_rpg_round
 B sk_plr_dmg_smg1
 B sk_plr_dmg_smg1_grenade
 B sk_plr_dmg_sniper_round
 B sk_plr_grenade_drop_time
 B sk_plr_health_drop_time
 B sk_plr_num_shotgun_pellets
 B skill
 B sky3dparams_t_DataDescInit::g_DataMapHolder
 B snd_prevent_ss_duplicates
 B snd_sos_show_server_xmit
 B soundemitterbase
 B soundscape_debug
 B sp_fade_and_force_respawn
 B spec_freeze_time
 B spec_freeze_traveltime
 B speed_funnelling_enabled
 B speed_paint_color
 B spraycanPrecache::s_ResourcePrecacher
 B staticpropmgr
 B steamworks_immediate_upload
 B steamworks_sessionid_server
 B steamworks_show_uploads
 B steamworks_stats_disable
 B step_spline
 B studiorender
 B suitvolume
 B sv_accelerate
 B sv_airaccelerate
 B sv_allchat
 B sv_allow_mobile_portal_teleportation
 B sv_allow_mobile_portals
 B sv_alltalk
 B sv_alternateticks
 B sv_autosave
 B sv_backspeed
 B sv_bonus_challenge
 B sv_bounce
 B sv_bounce_anim_time_continue
 B sv_bounce_anim_time_predict
 B sv_bounce_paint_forward_velocity_bonus
 B sv_bounce_reflect_enabled
 B sv_bowie_maneuver_threshold
 B sv_box_physgundrop_angle_threshold
 B sv_cheats
 B sv_clearhinthistory
 B sv_clip_contacts_to_portals
 B sv_contact_region_thickness
 B sv_debug_bounce_reflection
 B sv_debug_bounce_reflection_time
 B sv_debug_draw_contacts
 B sv_debug_laser
 B sv_debug_physicsshadowclones
 B sv_debug_player_use
 B sv_debug_portal_race_checkpoint
 B sv_disable_querycache
 B sv_edgefriction
 B sv_enable_paint_power_user_debug
 B sv_enableholdrotation
 B sv_erase_surface_sphere_radius
 B sv_footsteps
 B sv_force_transmit_ents
 B sv_friction
 B sv_fullsyncclones
 B sv_futbol_fake_force
 B sv_futbol_floor_exit_angle
 B sv_futbol_force_players_to_catch
 B sv_futbol_funnel_max_correct
 B sv_futbol_use_cooldown_time
 B sv_futbol_use_steals_from_holding_player
 B sv_gravity
 B sv_hl2mp_item_respawn_time
 B sv_hl2mp_weapon_respawn_time
 B sv_holdrotationsensitivity
 B sv_infinite_ammo
 B sv_lagcompensationforcerestore
 B sv_lagflushbonecache
 B sv_lagpushticks
 B sv_laser_cube_autoaim
 B sv_laser_tight_box
 B sv_massreport
 B sv_maxreplay
 B sv_maxspeed
 B sv_maxunlag
 B sv_maxvelocity
 B sv_monster_turret_velocity
 B sv_netvisdist
 B sv_noclipaccelerate
 B sv_noclipduringpause
 B sv_noclipspeed
 B sv_npc_talker_maxdist
 B sv_paint_alpha_coat
 B sv_paint_detection_sphere_radius
 B sv_paint_surface_sphere_radius
 B sv_paint_trigger_sound_delay
 B sv_paintairacceleration
 B sv_paintblob_damage
 B sv_personality_core_pca_pitch
 B sv_personality_core_pca_roll
 B sv_personality_core_pca_yaw
 B sv_player_collide_with_laser
 B sv_player_funnel_gimme_dot
 B sv_player_funnel_height_adjust
 B sv_player_funnel_into_portals
 B sv_player_funnel_snap_threshold
 B sv_player_funnel_speed_bonus
 B sv_player_trace_through_portals
 B sv_player_use_cone_size
 B sv_player_well_above_height
 B sv_portal2_button_hint_range
 B sv_portal2_pickup_hint_range
 B sv_portal_cleanser_think_rate
 B sv_portal_cleanser_vortex_distance
 B sv_portal_coop_ping_cooldown_time
 B sv_portal_coop_ping_hud_indicitator_duration
 B sv_portal_coop_ping_indicator_show_to_all_players
 B sv_portal_debug_touch
 B sv_portal_enable_microphone
 B sv_portal_high_speed_physics_early_untouch
 B sv_portal_microphone_max_range
 B sv_portal_microphone_sensitivity
 B sv_portal_new_player_trace
 B sv_portal_new_player_trace_vs_remote_ents
 B sv_portal_new_trace_debugboxes
 B sv_portal_new_velocity_check
 B sv_portal_pathtrack_track_width_on
 B sv_portal_placement_debug
 B sv_portal_placement_never_bump
 B sv_portal_placement_never_fail
 B sv_portal_placement_on_paint
 B sv_portal_players
 B sv_portal_race_checkpoint_model_scale
 B sv_portal_shot_fizzles_enemy_portals
 B sv_portal_shot_fizzles_friendly_portals
 B sv_portal_shot_push
 B sv_portal_staticcollisioncache_cachebrushes
 B sv_portal_staticcollisioncache_cachestaticprops
 B sv_portal_teleportation_resets_collision_events
 B sv_portal_trace_vs_displacements
 B sv_portal_trace_vs_holywall
 B sv_portal_trace_vs_staticprops
 B sv_portal_trace_vs_world
 B sv_portal_turret_burn_time_max
 B sv_portal_turret_burn_time_min
 B sv_portal_turret_fire_cone_z_tolerance
 B sv_portal_turret_shoot_at_death
 B sv_portal_turret_shoot_through_portals_proximity
 B sv_portal_unified_velocity
 B sv_portals_block_other_players
 B sv_post_teleportation_box_time
 B sv_press_jump_to_bounce
 B sv_projected_entities_use_placement_helper
 B sv_props_funnel_into_portals
 B sv_props_funnel_into_portals_deceleration
 B sv_pushaway_clientside
 B sv_pushaway_clientside_size
 B sv_pushaway_force
 B sv_pushaway_max_force
 B sv_pushaway_max_player_force
 B sv_pushaway_min_player_speed
 B sv_pushaway_player_force
 B sv_pvsskipanimation
 B sv_randomize_nugget_availability
 B sv_randomize_nugget_availability_groupavailability
 B sv_randomize_nugget_availability_ungroupedavailability
 B sv_regeneration_force_on
 B sv_regeneration_wait_time
 B sv_report_client_settings
 B sv_robust_explosions
 B sv_rollangle
 B sv_rollspeed
 B sv_script_think_interval
 B sv_show_placement_help_in_preview
 B sv_showanimstate
 B sv_showladders
 B sv_showlagcompensation
 B sv_skyname
 B sv_slippery_cube_button
 B sv_soundemitter_trace
 B sv_soundemitter_version
 B sv_specaccelerate
 B sv_specnoclip
 B sv_specspeed
 B sv_speed_normal
 B sv_speed_paint_acceleration
 B sv_speed_paint_max
 B sv_speed_paint_on_bounce_deceleration_delay
 B sv_speed_paint_ramp_acceleration
 B sv_speed_paint_side_move_factor
 B sv_speed_paint_straf_accel_scale
 B sv_stepsize
 B sv_stopspeed
 B sv_strict_notarget
 B sv_suppress_viewpunch
 B sv_test_scripted_sequences
 B sv_teststepsimulation
 B sv_thinnerprojectedwalls
 B sv_transition_fade_time
 B sv_turbophysics
 B sv_unlag
 B sv_unlag_debug
 B sv_unlag_fixstuck
 B sv_unlockedchapters
 B sv_use_bendy_model
 B sv_use_edgefriction
 B sv_use_find_closest_passable_space
 B sv_use_shadow_clones
 B sv_use_trace_duration
 B sv_use_transformed_collideables
 B sv_vehicle_autoaim_scale
 B sv_wall_bounce_trade
 B sv_wall_jump_help
 B sv_wall_jump_help_amount
 B sv_wall_jump_help_debug
 B sv_wall_jump_help_threshold
 B sv_wateraccelerate
 B sv_waterdist
 B sv_waterfriction
 B sv_weapon_pickup_time_delay
 B sv_zoom_stop_movement_threashold
 B sv_zoom_stop_time_threashold
 B swap_model_for_fizzler_fx
 B tbeam_air_ctrl_threshold
 B tbeam_allow_player_struggle
 B tbeam_prevent_players_from_colliding
 B teamlist
 B teamoverride
 B teamplay
 B template_debug
 B template_t_DataDescInit::g_DataMapHolder
 B test_for_vphysics_clips_when_dropping
 B test_it
 B tf_escort_score_rate
 B think_limit
 B thinkfunc_t_DataDescInit::g_DataMapHolder
 B thrown_objects_t_DataDescInit::g_DataMapHolder
 B token
 B tokencount
 B trace_report
 B trampoline_bounce_min_impact_speed
 B trampoline_bounce_off_walls_while_on_ground
 B tv_delaymapchange
 B use_server_portal_particles
 B vehicle_crashsound_t_DataDescInit::g_DataMapHolder
 B vehicle_gear_t_DataDescInit::g_DataMapHolder
 B vehiclesounds_t_DataDescInit::g_DataMapHolder
 B vehicleview_t_DataDescInit::g_DataMapHolder
 B vgui::BuildGroup::m_HandleTable
 B vgui::Button::s_pUnpackParams
 B vgui::CBuildFactoryHelper::m_sHelpers
 B vgui::Label::s_pUnpackParams
 B vgui::Panel::s_NavLock
 B vgui::Panel::s_pUnpackParams
 B vgui_screenPrecache::s_ResourcePrecacher
 B vismon_poll_frequency
 B vismon_trace_limit
 B voice_player_speaking_delay_threshold
 B voice_serverdebug
 B vprof_scope_entity_gamephys
 B vprof_scope_entity_thinks
 B vprof_think_limit
 B wall_debug
 B wall_debug_time
 B weapon_portalgunPrecache::s_ResourcePrecacher
 B weapon_promo_antenna_ballPrecache::s_ResourcePrecacher
 B weapon_promo_antenna_eggPrecache::s_ResourcePrecacher
 B weapon_promo_helmet_ballPrecache::s_ResourcePrecacher
 B weapon_promo_helmet_eggPrecache::s_ResourcePrecacher
 B weapon_showproficiency
 B weaponstay
 B wearable_itemPrecache::s_ResourcePrecacher
 B xbox_autothrottle
 B xbox_steering_deadzone
 B xbox_throttlebias
 B xbox_throttlespoof
 B xboxsystem
 B xc_crouch_debounce
 COM_TimestampedLog
 CThreadEvent::CThreadEvent(bool)
 CThreadEvent::Set()
 CThreadFastMutex::Lock(unsigned int, unsigned int) volatile
 CThreadMutex::TryLock()
 CThreadRWLock::LockForWrite()
 CThreadRWLock::UnlockWrite()
 CThreadRWLock::WaitForRead()
 CThreadSpinRWLock::SpinLockForRead()
 CThreadSpinRWLock::SpinLockForWrite()
 CThreadSyncObject::~CThreadSyncObject()
 CUniformRandomStream::CUniformRandomStream()
 CUniformRandomStream::RandomFloat(float, float)
 CUniformRandomStream::RandomInt(int, int)
 CUniformRandomStream::SetSeed(int)
 CVProfNode::EnterScope()
 CVProfNode::ExitScope()
 CVProfNode::GetSubNode(char const*, int, char const*, int)
 CVProfNode::MarkFrame()
 CVProfNode::Pause()
 CVProfNode::Reset()
 CVProfNode::Resume()
 CVProfile::BudgetGroupNameToBudgetGroupID(char const*)
 CVProfile::FindOrCreateCounter(char const*, CounterGroup_t)
 CVProfile::OutputReport(int, char const*, int)
 CommandLine
 ConColorMsg(Color const&, char const*, ...)
 ConMsg(char const*, ...)
 Coroutine_Continue
 Coroutine_Create
 Coroutine_YieldToMain
 CreateSimpleThread
 D ACT_MYCUSTOMACTIVITY
 D AIAgentSaveHeader_t::m_DataMap
 D AIAgentScheduleState_t::m_DataMap
 D AIBehaviorChannelSaveHeader_t::m_DataMap
 D AIChannelScheduleState_t::m_DataMap
 D AIExtendedSaveHeader_t::m_DataMap
 D AIScheduleState_t::m_DataMap
 D AISquadEnemyInfo_t::m_DataMap
 D AI_EnemyInfo_t::m_DataMap
 D AI_FollowNavInfo_t::m_DataMap
 D AI_FollowParams_t::m_DataMap
 D AI_FreePassParams_t::m_DataMap
 D AI_LeadArgs_t::m_DataMap
 D AI_StandoffParams_t::m_DataMap
 D AI_Waypoint_t::m_DataMap
 D AR2Explosion::m_DataMap
 D AllocTempVector()::s_nIndex
 D AllocTempVector()::s_vecTemp
 D CAISound::m_DataMap
 D CAI_AccelDecay::m_DataMap
 D CAI_ActBusyBehavior::gm_SchedLoadStatus
 D CAI_ActBusyBehavior::gm_pszErrorClassName
 D CAI_ActBusyBehavior::m_DataMap
 D CAI_ActBusyGoal::m_DataMap
 D CAI_ActBusyQueueGoal::m_DataMap
 D CAI_AddOn::m_DataMap
 D CAI_Agent::m_DataMap
 D CAI_AllySpeechManager::m_DataMap
 D CAI_AssaultBehavior::m_DataMap
 D CAI_AssaultGoal::m_DataMap
 D CAI_BaseActor::m_DataMap
 D CAI_BaseFlyingBot::m_DataMap
 D CAI_BaseNPC::m_DataMap
 D CAI_BaseNPC::m_nDebugPauseIndex
 D CAI_BaseNPC::m_pClassSendTable
 D CAI_BasePhysicsFlyingBot::m_DataMap
 D CAI_BattleLine::m_DataMap
 D CAI_BehaviorBase::m_DataMap
 D CAI_BlendedMotor::m_DataMap
 D CAI_ChangeHintGroup::m_DataMap
 D CAI_ChangeTarget::m_DataMap
 D CAI_DynamicLink::m_DataMap
 D CAI_DynamicLinkController::m_DataMap
 D CAI_Enemies::m_DataMap
 D CAI_Expresser::m_DataMap
 D CAI_FearBehavior::m_DataMap
 D CAI_FightFromCoverBehavior::m_DataMap
 D CAI_FightFromCoverGoal::m_DataMap
 D CAI_FollowBehavior::m_DataMap
 D CAI_FollowGoal::m_DataMap
 D CAI_FreePass::m_DataMap
 D CAI_FuncTankBehavior::m_DataMap
 D CAI_GoalEntity::m_DataMap
 D CAI_Hint::m_DataMap
 D CAI_InterestTarget_t::m_DataMap
 D CAI_LeadBehavior::m_DataMap
 D CAI_LeadGoal::m_DataMap
 D CAI_LeadGoal_Weapon::m_DataMap
 D CAI_LocalNavigator::m_DataMap
 D CAI_LookTarget::m_DataMap
 D CAI_Motor::m_DataMap
 D CAI_MoveAndShootOverlay::m_DataMap
 D CAI_MoveMonitor::m_DataMap
 D CAI_MoveProbe::m_DataMap
 D CAI_Navigator::m_DataMap
 D CAI_Network::GetNode(int, bool) const::warningCount
 D CAI_NetworkEditTools::m_flAirEditDistance
 D CAI_NetworkEditTools::m_iGConnectivityNode
 D CAI_NetworkEditTools::m_iVisibilityNode
 D CAI_NetworkManager::m_DataMap
 D CAI_Path::m_DataMap
 D CAI_Pathfinder::m_DataMap
 D CAI_PlayerAlly::gm_SchedLoadStatus
 D CAI_PlayerAlly::gm_pszErrorClassName
 D CAI_PlayerAlly::m_DataMap
 D CAI_ProxTester::m_DataMap
 D CAI_RadialLinkController::m_DataMap
 D CAI_RappelBehavior::m_DataMap
 D CAI_Relationship::m_DataMap
 D CAI_ScriptConditions::gm_Evaluators
 D CAI_ScriptConditions::m_DataMap
 D CAI_ScriptConditionsElement::m_DataMap
 D CAI_ScriptedSchedule::m_DataMap
 D CAI_ScriptedSentence::m_DataMap
 D CAI_ScriptedSequence::m_DataMap
 D CAI_Senses::m_DataMap
 D CAI_SentenceBase::m_DataMap
 D CAI_ShotRegulator::m_DataMap
 D CAI_SpeechFilter::m_DataMap
 D CAI_Squad::m_DataMap
 D CAI_StandoffBehavior::m_DataMap
 D CAI_StandoffGoal::m_DataMap
 D CAI_TacticalServices::m_DataMap
 D CAI_TrackPather::m_DataMap
 D CAmbientGeneric::m_DataMap
 D CAnimationLayer::m_DataMap
 D CAreaPortal::m_DataMap
 D CAssaultPoint::m_DataMap
 D CAttributeContainer::m_DataMap
 D CAttributeContainerPlayer::m_DataMap
 D CAttributeList::m_DataMap
 D CAttributeManager::m_DataMap
 D CBaseAnimating::m_DataMap
 D CBaseAnimating::m_pClassSendTable
 D CBaseAnimatingOverlay::m_DataMap
 D CBaseAnimatingOverlay::m_pClassSendTable
 D CBaseAnimatingProjectile::m_DataMap
 D CBaseAttributableItem::m_DataMap
 D CBaseButton::m_DataMap
 D CBaseCombatCharacter::m_DataMap
 D CBaseCombatCharacter::m_pClassSendTable
 D CBaseCombatWeapon::m_DataMap
 D CBaseCombatWeapon::m_pClassSendTable
 D CBaseDMStart::m_DataMap
 D CBaseDoor::m_DataMap
 D CBaseEntity::GetPreTemplateName()::szStrippedName
 D CBaseEntity::ScriptEyePosition()::vec
 D CBaseEntity::ScriptGetAngles()::vec
 D CBaseEntity::ScriptGetForward()::vecForward
 D CBaseEntity::ScriptGetLeft()::vecLeft
 D CBaseEntity::ScriptGetUp()::vecUp
 D CBaseEntity::m_DataMap
 D CBaseEntity::m_nDebugPlayer
 D CBaseEntity::m_nDebugSteps
 D CBaseEntity::m_nPredictionRandomSeed
 D CBaseEntity::m_pClassSendTable
 D CBaseEntity::s_bAbsQueriesValid
 D CBaseEntity::sm_bAccurateTriggerBboxChecks
 D CBaseEntityOutput::m_DataMap
 D CBaseFilter::m_DataMap
 D CBaseFire::m_DataMap
 D CBaseFlex::m_DataMap
 D CBaseFlex::m_pClassSendTable
 D CBaseGrenade::m_DataMap
 D CBaseGrenadeConcussion::m_DataMap
 D CBaseHLCombatWeapon::m_DataMap
 D CBaseHLCombatWeapon::m_pClassSendTable
 D CBaseMoveBehavior::m_DataMap
 D CBaseNPCMaker::m_DataMap
 D CBaseParticleEntity::m_pClassSendTable
 D CBasePlatTrain::m_DataMap
 D CBasePlayer::m_DataMap
 D CBasePlayer::m_pClassSendTable
 D CBasePortalCombatWeapon::m_DataMap
 D CBasePortalCombatWeapon::m_pClassSendTable
 D CBaseProjectedEntity::m_DataMap
 D CBaseProjectedEntity::m_pClassSendTable
 D CBaseProjectile::m_DataMap
 D CBaseProjector::m_DataMap
 D CBaseProjector::m_pClassSendTable
 D CBasePropDoor::m_DataMap
 D CBasePropDoor::m_pClassSendTable
 D CBaseServerVehicle::m_DataMap
 D CBaseSpriteProjectile::m_DataMap
 D CBaseTempEntity::m_pClassSendTable
 D CBaseToggle::m_DataMap
 D CBaseToggle::m_pClassSendTable
 D CBaseTrigger::m_DataMap
 D CBaseTrigger::m_pClassSendTable
 D CBaseVPhysicsTrigger::m_DataMap
 D CBaseVPhysicsTrigger::m_pClassSendTable
 D CBaseViewModel::m_DataMap
 D CBaseViewModel::m_pClassSendTable
 D CBeam::m_DataMap
 D CBeamSpotlight::m_DataMap
 D CBlendingCycler::m_DataMap
 D CBlood::m_DataMap
 D CBoneFollower::m_DataMap
 D CBoneFollowerManager::m_DataMap
 D CBreakable::m_DataMap
 D CBreakable::pSpawnObjects
 D CBreakableProp::m_DataMap
 D CBreakableProp::m_pClassSendTable
 D CBreakableSurface::m_DataMap
 D CBubbling::m_DataMap
 D CBuildModeNavCombo::ChainToAnimationMap()::chained
 D CBuildModeNavCombo::ChainToMap()::chained
 D CBuildModeNavCombo::GetKBMap()::s_pMap
 D CBuildModeNavCombo::GetMessageMap()::s_pMap
 D CBuildModeNavCombo::KB_ChainToMap()::chained
 D CChallengeModeEndNode::m_DataMap
 D CChangeLevel::m_DataMap
 D CChoreoEvent::s_nGlobalID
 D CChoreoGenericServerVehicle::m_DataMap
 D CCitadelEnergyCore::m_DataMap
 D CCollisionProperty::m_DataMap
 D CColorCorrection::m_DataMap
 D CColorCorrectionVolume::m_DataMap
 D CCommentaryAuto::m_DataMap
 D CCommentarySystem::InitCommentary()::commentarySpawnedSemaphoreName
 D CCommentarySystem::InitCommentary()::infoTargetStr
 D CCommentarySystem::m_DataMap
 D CConstantForceController::m_DataMap
 D CConstraintAnchor::m_DataMap
 D CCopyRecipientFilter::m_DataMap
 D CCredits::m_DataMap
 D CCubeRotationController::m_DataMap
 D CCycler::m_DataMap
 D CDebugHistory::m_DataMap
 D CDecal::m_DataMap
 D CDmxElement* const& CDmxAttribute::GetValue<CDmxElement*>() const::defaultValue
 D CDmxElement* const& CDmxElement::GetValue<CDmxElement*>(char const*) const::defaultValue
 D CDragDropHelperPanel::ChainToAnimationMap()::chained
 D CDragDropHelperPanel::ChainToMap()::chained
 D CDragDropHelperPanel::GetKBMap()::s_pMap
 D CDragDropHelperPanel::GetMessageMap()::s_pMap
 D CDragDropHelperPanel::KB_ChainToMap()::chained
 D CDynamicLight::m_DataMap
 D CDynamicProp::m_DataMap
 D CDynamicProp::m_pClassSendTable
 D CEconEntity::m_DataMap
 D CEconItemView::m_DataMap
 D CEconWearable::m_DataMap
 D CEmbers::m_DataMap
 D CEnergyBallLauncher::m_DataMap
 D CEntityDissolve::m_DataMap
 D CEntityFlame::m_DataMap
 D CEntityFreezing::m_DataMap
 D CEntityParticleTrail::m_DataMap
 D CEnvAR2Explosion::m_DataMap
 D CEnvAmbientLight::m_DataMap
 D CEnvBeam::m_DataMap
 D CEnvBeverage::m_DataMap
 D CEnvDOFController::m_DataMap
 D CEnvDustPuff::m_DataMap
 D CEnvEffectsScript::m_DataMap
 D CEnvEntityIgniter::m_DataMap
 D CEnvEntityMaker::m_DataMap
 D CEnvExplosion::m_DataMap
 D CEnvFade::m_DataMap
 D CEnvFireSensor::m_DataMap
 D CEnvFireSource::m_DataMap
 D CEnvFunnel::m_DataMap
 D CEnvGlobal::m_DataMap
 D CEnvGunfire::m_DataMap
 D CEnvHudHint::m_DataMap
 D CEnvInstructorHint::m_DataMap
 D CEnvLaser::m_DataMap
 D CEnvMicrophone::m_DataMap
 D CEnvMuzzleFlash::m_DataMap
 D CEnvParticleScript::m_DataMap
 D CEnvPlayerSurfaceTrigger::m_DataMap
 D CEnvPortalPathTrack::m_DataMap
 D CEnvProjectedTexture::m_DataMap
 D CEnvQuadraticBeam::m_DataMap
 D CEnvScreenEffect::m_DataMap
 D CEnvScreenOverlay::m_DataMap
 D CEnvShake::m_DataMap
 D CEnvShooter::m_DataMap
 D CEnvSoundscape::m_DataMap
 D CEnvSoundscapeProxy::m_DataMap
 D CEnvSoundscapeTriggerable::m_DataMap
 D CEnvSpark::m_DataMap
 D CEnvSplash::m_DataMap
 D CEnvTilt::m_DataMap
 D CEnvTonemapController::m_DataMap
 D CEnvTracer::m_DataMap
 D CEnvViewPunch::m_DataMap
 D CEnvWind::m_DataMap
 D CEnvZoom::m_DataMap
 D CEnv_Lightrail_Endpoint::m_DataMap
 D CEventAction::m_DataMap
 D CEventQueue::m_DataMap
 D CFilterClass::m_DataMap
 D CFilterCombineBall::m_DataMap
 D CFilterContext::m_DataMap
 D CFilterEnemy::m_DataMap
 D CFilterMassGreater::m_DataMap
 D CFilterModel::m_DataMap
 D CFilterMultiple::m_DataMap
 D CFilterName::m_DataMap
 D CFilterPlayerHeld::m_DataMap
 D CFilterSize::m_DataMap
 D CFire::m_DataMap
 D CFireSmoke::m_DataMap
 D CFireTrail::m_DataMap
 D CFish::m_DataMap
 D CFishPool::m_DataMap
 D CFlexCycler::m_DataMap
 D CFlexExpresser::m_DataMap
 D CFlextalkActor::m_DataMap
 D CFmtStrN<1024>::CFmtStrN(char const*, ...)::scAsserted
 D CFmtStrN<128>::CFmtStrN(char const*, ...)::scAsserted
 D CFmtStrN<256>::CFmtStrN(char const**, ...)::scAsserted
 D CFmtStrN<256>::CFmtStrN(char const*, ...)::scAsserted
 D CFmtStrN<256>::sprintf(char const*, ...)::scAsserted
 D CFmtStrN<32>::CFmtStrN(char const*, ...)::scAsserted
 D CFogController::m_DataMap
 D CFogTrigger::m_DataMap
 D CFogVolume::m_DataMap
 D CFourWheelServerVehicle::m_DataMap
 D CFourWheelVehiclePhysics::m_DataMap
 D CFuncAreaPortalBase::m_DataMap
 D CFuncAreaPortalWindow::m_DataMap
 D CFuncBrush::m_DataMap
 D CFuncBrush::m_pClassSendTable
 D CFuncCombineBallSpawner::m_DataMap
 D CFuncConveyor::m_DataMap
 D CFuncInstanceIoProxy::m_DataMap
 D CFuncLadder::m_DataMap
 D CFuncMonitor::m_DataMap
 D CFuncMoveLinear::m_DataMap
 D CFuncNavBlocker::m_DataMap
 D CFuncNavObstruction::m_DataMap
 D CFuncNoPortalVolume::m_DataMap
 D CFuncOccluder::m_DataMap
 D CFuncPlacementClip::m_DataMap
 D CFuncPlat::m_DataMap
 D CFuncPlatRot::m_DataMap
 D CFuncPortalBumper::m_DataMap
 D CFuncPortalDetector::m_DataMap
 D CFuncPortalOrientation::m_DataMap
 D CFuncReflectiveGlass::m_DataMap
 D CFuncRotating::m_DataMap
 D CFuncSmokeVolume::m_DataMap
 D CFuncTank::m_DataMap
 D CFuncTankCombineCannon::m_DataMap
 D CFuncTankLaser::m_DataMap
 D CFuncTankMortar::m_DataMap
 D CFuncTankPhysCannister::m_DataMap
 D CFuncTankPulseLaser::m_DataMap
 D CFuncTankTrain::m_DataMap
 D CFuncTrackAuto::m_DataMap
 D CFuncTrackChange::m_DataMap
 D CFuncTrackTrain::m_DataMap
 D CFuncTrain::m_DataMap
 D CFuncTrainControls::m_DataMap
 D CFuncVPhysicsClip::m_DataMap
 D CFuncVehicleClip::m_DataMap
 D CFuncWall::m_DataMap
 D CFuncWallToggle::m_DataMap
 D CFunc_Dust::m_DataMap
 D CFunc_LOD::m_DataMap
 D CFunc_Portalled::m_DataMap
 D CFutbolCatcher::m_DataMap
 D CGameEnd::m_DataMap
 D CGameGibManager::m_DataMap
 D CGamePlayerEquip::m_DataMap
 D CGamePlayerZone::m_DataMap
 D CGameRulesProxy::m_pClassSendTable
 D CGameScore::m_DataMap
 D CGameString::gm_iSerialNumber
 D CGameText::m_DataMap
 D CGameUI::m_DataMap
 D CGameWeaponManager::m_DataMap
 D CGenericActor::m_DataMap
 D CGenericClassmap<CAI_BehaviorBase>::Lookup(char const*)::lookup
 D CGib::m_DataMap
 D CGibShooter::m_DataMap
 D CGlobalState::m_DataMap
 D CGrabController::m_DataMap
 D CGrenadeBeam::m_DataMap
 D CGrenadeBeamChaser::m_DataMap
 D CGrenadeFrag::m_DataMap
 D CGunTarget::m_DataMap
 D CHLMachineGun::m_DataMap
 D CHLMachineGun::m_pClassSendTable
 D CHLSelectFireMachineGun::m_DataMap
 D CHotPotato::m_DataMap
 D CHotPotatoCatcher::m_DataMap
 D CHotPotatoSpawner::m_DataMap
 D CHoverTurretTether::m_DataMap
 D CInfoCameraLink::m_DataMap
 D CInfoGameEventProxy::m_DataMap
 D CInfoInstructorHintTarget::m_DataMap
 D CInfoOverlayAccessor::m_DataMap
 D CInfoPlacementHelper::m_DataMap
 D CInfoPortalScore::m_DataMap
 D CInfoRemarkable::m_DataMap
 D CInfoTargetPersonalitySphere::m_DataMap
 D CInfo_Coop_Spawn::m_DataMap
 D CInfo_Player_Ping_Detector::m_DataMap
 D CInstancedSceneEntity::m_DataMap
 D CItem::m_DataMap
 D CItemSoda::m_DataMap
 D CItem_Nugget::m_DataMap
 D CKeepUpright::m_DataMap
 D CLabIndicatorPanel::m_DataMap
 D CLaserCatcher::m_DataMap
 D CLaserRelay::m_DataMap
 D CLevelPlacardDisplay::m_DataMap
 D CLight::m_DataMap
 D CLightGlow::m_DataMap
 D CLinkedPortalDoor::m_DataMap
 D CLogicAchievement::m_DataMap
 D CLogicActiveAutosave::m_DataMap
 D CLogicAuto::m_DataMap
 D CLogicAutosave::m_DataMap
 D CLogicBranch::m_DataMap
 D CLogicBranchList::m_DataMap
 D CLogicCase::m_DataMap
 D CLogicCollisionPair::m_DataMap
 D CLogicCompare::m_DataMap
 D CLogicCompareInteger::m_DataMap
 D CLogicCoopManager::m_DataMap
 D CLogicEventListener::m_DataMap
 D CLogicLineToEntity::m_DataMap
 D CLogicMeasureMovement::m_DataMap
 D CLogicNavigation::m_DataMap
 D CLogicPlayMovie::m_DataMap
 D CLogicPlayerProxy::m_DataMap
 D CLogicPlayerViewFinder::m_DataMap
 D CLogicRandomOutputs::m_DataMap
 D CLogicRegisterActivator::m_DataMap
 D CLogicRelay::m_DataMap
 D CLogicScript::m_DataMap
 D CLogicTimeScale::m_DataMap
 D CMP_LobbyScreen::m_DataMap
 D CMaterialModifyControl::m_DataMap
 D CMathColorBlend::m_DataMap
 D CMathCounter::m_DataMap
 D CMathRemap::m_DataMap
 D CMessage::m_DataMap
 D CMessageEntity::m_DataMap
 D CMomentaryRotButton::m_DataMap
 D CMortarShell::m_DataMap
 D CMotorController::m_DataMap
 D CMovementSpeedMod::m_DataMap
 D CMovieDisplay::m_DataMap
 D CMultiDamage::m_DataMap
 D CMultiSource::m_DataMap
 D CNPCEventResponseSystemEntity::m_DataMap
 D CNPCMaker::m_DataMap
 D CNPCSimpleTalker::m_DataMap
 D CNPCSimpleTalkerExpresser::m_DataMap
 D CNPCSpawnDestination::m_DataMap
 D CNPC_Bullseye::m_DataMap
 D CNPC_EnemyFinder::gm_SchedLoadStatus
 D CNPC_EnemyFinder::gm_pszErrorClassName
 D CNPC_EnemyFinder::m_DataMap
 D CNPC_EnemyFinderCombineCannon::m_DataMap
 D CNPC_FloorTurret::fMaxTipControllerAngularVelocity
 D CNPC_FloorTurret::fMaxTipControllerVelocity
 D CNPC_FloorTurret::gm_SchedLoadStatus
 D CNPC_FloorTurret::gm_pszErrorClassName
 D CNPC_FloorTurret::m_DataMap
 D CNPC_Furniture::m_DataMap
 D CNPC_HoverTurret::gm_SchedLoadStatus
 D CNPC_HoverTurret::gm_pszErrorClassName
 D CNPC_HoverTurret::m_DataMap
 D CNPC_PersonalityCore::gm_SchedLoadStatus
 D CNPC_PersonalityCore::gm_pszErrorClassName
 D CNPC_PersonalityCore::m_DataMap
 D CNPC_Portal_FloorTurret::m_DataMap
 D CNPC_RocketTurret::m_DataMap
 D CNPC_SecurityCamera::m_DataMap
 D CNPC_VehicleDriver::gm_SchedLoadStatus
 D CNPC_VehicleDriver::gm_pszErrorClassName
 D CNPC_VehicleDriver::m_DataMap
 D CNPC_Wheatley_Boss::m_DataMap
 D CNavArea::m_masterMarker
 D CNavArea::m_nextID
 D CNavLadder::m_nextID
 D CNavNode::m_nextID
 D CNeurotoxinCountdown::m_DataMap
 D CNewNPC::gm_SchedLoadStatus
 D CNewNPC::gm_pszErrorClassName
 D CNewNPC::m_DataMap
 D CNewRecharge::m_DataMap
 D CNodeEnt::m_DataMap
 D COrnamentProp::m_DataMap
 D COuttroStats::m_DataMap
 D CPaintPowerPickup::m_DataMap
 D CPaintSphere::m_DataMap
 D CPaintSprayer::m_DataMap
 D CPaintStream::m_DataMap
 D CPaintStreamManager::m_pPaintMaterialNames
 D CPaintStreamManager::s_SoundEffectNames
 D CPaintableEntity<CBaseMultiplayerPlayer>::DataMapInit()::dataDesc
 D CPaintableEntity<CBaseMultiplayerPlayer>::DataMapInit()::nameHolder
 D CPaintableEntity<CBaseMultiplayerPlayer>::m_DataMap
 D CPaintableEntity<CBaseProjectedEntity>::DataMapInit()::dataDesc
 D CPaintableEntity<CBaseProjectedEntity>::DataMapInit()::nameHolder
 D CPaintableEntity<CBaseProjectedEntity>::m_DataMap
 D CPaintableEntity<CNPC_FloorTurret>::DataMapInit()::dataDesc
 D CPaintableEntity<CNPC_FloorTurret>::DataMapInit()::nameHolder
 D CPaintableEntity<CNPC_FloorTurret>::m_DataMap
 D CPaintableEntity<CPhysicsProp>::DataMapInit()::dataDesc
 D CPaintableEntity<CPhysicsProp>::DataMapInit()::nameHolder
 D CPaintableEntity<CPhysicsProp>::m_DataMap
 D CParticleFire::m_DataMap
 D CParticleLight::m_DataMap
 D CParticlePerformanceMonitor::m_DataMap
 D CParticleSystem::m_DataMap
 D CPassengerInfo::m_DataMap
 D CPathCorner::m_DataMap
 D CPathKeyFrame::m_DataMap
 D CPathTrack::m_DataMap
 D CPhysBox::m_DataMap
 D CPhysBox::m_pClassSendTable
 D CPhysBoxMultiplayer::m_DataMap
 D CPhysConstraint::m_DataMap
 D CPhysConstraintSystem::m_DataMap
 D CPhysConvert::m_DataMap
 D CPhysExplosion::m_DataMap
 D CPhysForce::m_DataMap
 D CPhysHinge::m_DataMap
 D CPhysImpact::m_DataMap
 D CPhysLength::m_DataMap
 D CPhysMagnet::m_DataMap
 D CPhysMotor::m_DataMap
 D CPhysPulley::m_DataMap
 D CPhysSlideConstraint::m_DataMap
 D CPhysThruster::m_DataMap
 D CPhysTorque::m_DataMap
 D CPhysicsCannister::m_DataMap
 D CPhysicsEntitySolver::m_DataMap
 D CPhysicsNPCSolver::m_DataMap
 D CPhysicsProp::m_DataMap
 D CPhysicsProp::m_pClassSendTable
 D CPhysicsPropMultiplayer::m_DataMap
 D CPhysicsPropRespawnable::m_DataMap
 D CPhysicsShake::m_DataMap
 D CPhysicsSpring::m_DataMap
 D CPhysicsWind::m_DataMap
 D CPhysicsWire::m_DataMap
 D CPlasma::m_DataMap
 D CPlayerLocalData::m_DataMap
 D CPlayerPickupController::m_DataMap
 D CPlayerResource::m_DataMap
 D CPlayerState::m_DataMap
 D CPointAngleSensor::m_DataMap
 D CPointAngularVelocitySensor::m_DataMap
 D CPointBonusMapsAccessor::m_DataMap
 D CPointBroadcastClientCommand::m_DataMap
 D CPointCamera::m_DataMap
 D CPointChangelevel::m_DataMap
 D CPointClientCommand::m_DataMap
 D CPointCombineBallLauncher::m_DataMap
 D CPointCommentaryNode::m_DataMap
 D CPointDevShotCamera::m_DataMap
 D CPointEntityFinder::m_DataMap
 D CPointFutbolShooter::m_DataMap
 D CPointGamestatsCounter::m_DataMap
 D CPointHurt::m_DataMap
 D CPointPlayerMoveConstraint::m_DataMap
 D CPointProximitySensor::m_DataMap
 D CPointServerCommand::m_DataMap
 D CPointSpotlight::m_DataMap
 D CPointSurvey::m_DataMap
 D CPointTeleport::m_DataMap
 D CPointTemplate::m_DataMap
 D CPointVelocitySensor::m_DataMap
 D CPortalButtonTrigger::m_DataMap
 D CPortalCredits::m_DataMap
 D CPortalLaser::m_DataMap
 D CPortalLaserTarget::m_DataMap
 D CPortalMPGameRulesProxy::m_DataMap
 D CPortalPlayerLocalData::m_DataMap
 D CPortalRaceCheckpoint::m_DataMap
 D CPortalRagdoll::m_DataMap
 D CPortalStatsController::m_DataMap
 D CPortal_Base2D::m_DataMap
 D CPortal_Base2D::m_pClassSendTable
 D CPortal_Base2D::s_szDeactivatePortalNowContext
 D CPortal_Base2D::s_szTestRestingSurfaceThinkContext
 D CPortal_Player::m_DataMap
 D CPortal_PointPush::m_DataMap
 D CPoseController::m_DataMap
 D CPostProcessController::m_DataMap
 D CPrecipitation::m_DataMap
 D CPrecipitationBlocker::m_DataMap
 D CProjectedDecal::m_DataMap
 D CProjectedTractorBeamEntity::m_DataMap
 D CProjectedWallEntity::m_DataMap
 D CProjectedWallEntity::s_HardLightBridgeSurfaceProps
 D CPropButton::m_DataMap
 D CPropCombineBall::m_DataMap
 D CPropCombineBall::m_pClassSendTable
 D CPropDoorRotating::m_DataMap
 D CPropEnergyBall::m_DataMap
 D CPropExplodingFutbol::m_DataMap
 D CPropFloorBallButton::m_DataMap
 D CPropFloorButton::m_DataMap
 D CPropFloorCubeButton::m_DataMap
 D CPropFutbolSpawner::m_DataMap
 D CPropGladosCore::m_DataMap
 D CPropGlassFutbol::m_DataMap
 D CPropIndicatorPanel::m_DataMap
 D CPropLinkedPortalDoor::OffsetPosition() const::vOffsetVector
 D CPropLinkedPortalDoor::m_DataMap
 D CPropMonsterBox::m_DataMap
 D CPropPaintBomb::m_DataMap
 D CPropPersonalitySphere::m_DataMap
 D CPropPortalStatsDisplay::m_DataMap
 D CPropRocketTripwire::m_DataMap
 D CPropTelescopicArm::m_DataMap
 D CPropTestChamberDoor::m_DataMap
 D CPropTicTacToePanel::m_DataMap
 D CPropTractorBeamProjector::m_DataMap
 D CPropUnderButton::m_DataMap
 D CPropUnderFloorButton::m_DataMap
 D CPropVehicle::m_DataMap
 D CPropVehicleChoreoGeneric::m_DataMap
 D CPropVehicleDriveable::m_DataMap
 D CPropVehicleViewController::m_DataMap
 D CPropWallProjector::m_DataMap
 D CPropWeightedCube::m_DataMap
 D CProp_Hallucination::m_DataMap
 D CProp_Mirror::m_DataMap
 D CProp_Portal::m_DataMap
 D CProp_Portal::ms_DefaultPortalHalfHeight
 D CProp_Portal::ms_DefaultPortalHalfWidth
 D CProp_Portal::s_szDelayedPlacementThinkContext
 D CRagdollBoogie::m_DataMap
 D CRagdollConstraint::m_DataMap
 D CRagdollMagnet::m_DataMap
 D CRagdollManager::m_DataMap
 D CRagdollProp::m_DataMap
 D CRagdollProp::m_pClassSendTable
 D CRagdollPropAttached::m_DataMap
 D CRallyPoint::m_DataMap
 D CRandSimTimer::m_DataMap
 D CRandStopwatch::m_DataMap
 D CRecharge::m_DataMap
 D CRevertSaved::m_DataMap
 D CRocket_Turret_Projectile::m_DataMap
 D CRopeAnchor::m_DataMap
 D CRopeKeyframe::m_DataMap
 D CRotDoor::m_DataMap
 D CRotorWashShooter::m_DataMap
 D CRuleEntity::m_DataMap
 D CRulePointEntity::m_DataMap
 D CSceneEntity::m_DataMap
 D CSceneListManager::m_DataMap
 D CSceneManager::m_DataMap
 D CScriptIntro::m_DataMap
 D CScriptedTarget::m_DataMap
 D CServerNetworkProperty::m_DataMap
 D CShadowControl::m_DataMap
 D CSimTimer::m_DataMap
 D CSimpleSimTimer::m_DataMap
 D CSkyCamera::m_DataMap
 D CSkyboxSwapper::m_DataMap
 D CSlideshowDisplay::m_DataMap
 D CSmallTextEntry::ChainToAnimationMap()::chained
 D CSmallTextEntry::ChainToMap()::chained
 D CSmallTextEntry::GetKBMap()::s_pMap
 D CSmallTextEntry::GetMessageMap()::s_pMap
 D CSmallTextEntry::KB_ChainToMap()::chained
 D CSmokeStack::m_DataMap
 D CSmokeStackLightInfo::m_DataMap
 D CSound::m_DataMap
 D CSoundEmitterSystem::GetCaptionHash(char const*, bool, unsigned int&)::s_MissingHashes
 D CSoundEmitterSystem::PrecacheScriptSound(char const*)::s_PrecacheScriptSoundFailures
 D CSoundEnt::m_DataMap
 D CSoundEnvelope::m_DataMap
 D CSoundPatch::m_DataMap
 D CSpatialEntity::m_DataMap
 D CSpatialEntity::m_pClassSendTable
 D CSpeaker::m_DataMap
 D CSpotlightEnd::m_DataMap
 D CSprite::m_DataMap
 D CSprite::m_pClassSendTable
 D CSpriteTrail::m_DataMap
 D CStatueProp::m_DataMap
 D CSteamJet::m_DataMap
 D CStopwatch::m_DataMap
 D CStopwatchBase::m_DataMap
 D CStripWeapons::m_DataMap
 D CSun::m_DataMap
 D CSunlightShadowControl::m_DataMap
 D CTEBaseBeam::m_pClassSendTable
 D CTEMetalSparks::m_pClassSendTable
 D CTEParticleSystem::m_pClassSendTable
 D CTakeDamageInfo::m_DataMap
 D CTankTargetChange::m_DataMap
 D CTankTrainAI::m_DataMap
 D CTargetCDAudioRep::m_DataMap
 D CTargetChangeGravity::m_DataMap
 D CTeamSpawnPoint::m_DataMap
 D CTeamVehicleSpawnPoint::m_DataMap
 D CTemplateNPCMaker::m_DataMap
 D CTesla::m_DataMap
 D CTestTraceline::m_DataMap
 D CTextureToggle::m_DataMap
 D CThrustController::m_DataMap
 D CTimeline::m_DataMap
 D CTimerEntity::m_DataMap
 D CTonemapTrigger::m_DataMap
 D CTraceFilterValidForDecal::ShouldHitEntity(IHandleEntity*, int)::ppszIgnoredClasses
 D CTriggerAutoCrouch::m_DataMap
 D CTriggerBrush::m_DataMap
 D CTriggerCamera::m_DataMap
 D CTriggerCameraMultiplayer::m_DataMap
 D CTriggerCatapult::m_DataMap
 D CTriggerCatapult::s_szPlayerPassesTriggerFiltersThinkContext
 D CTriggerGravity::m_DataMap
 D CTriggerHierarchy::m_DataMap
 D CTriggerHurt::m_DataMap
 D CTriggerImpact::m_DataMap
 D CTriggerLook::m_DataMap
 D CTriggerMultiple::m_DataMap
 D CTriggerPaintCleanser::m_DataMap
 D CTriggerPhysicsTrap::m_DataMap
 D CTriggerPingDetector::m_DataMap
 D CTriggerPlayerMovement::m_DataMap
 D CTriggerPlayerTeam::m_DataMap
 D CTriggerPortalCleanser::m_DataMap
 D CTriggerPortalCleanser::s_szPlayerPassesTriggerFiltersThinkContext
 D CTriggerProximity::m_DataMap
 D CTriggerPush::m_DataMap
 D CTriggerRemove::m_DataMap
 D CTriggerSave::m_DataMap
 D CTriggerSoundscape::m_DataMap
 D CTriggerTeleport::m_DataMap
 D CTriggerToggleSave::m_DataMap
 D CTriggerVPhysicsMotion::m_DataMap
 D CTriggerViewProxy::m_DataMap
 D CTriggerWateryDeath::m_DataMap
 D CTriggerWeaponDissolve::m_DataMap
 D CTriggerWeaponStrip::m_DataMap
 D CTriggerWind::m_DataMap
 D CTrigger_TractorBeam::m_DataMap
 D CTurretTipController::m_DataMap
 D CUBE_ANTIQUE_MODEL
 D CUBE_FX_FIZZLER_MODEL
 D CUBE_MODEL
 D CUBE_REFLECT_MODEL
 D CUBE_SCHRODINGER_MODEL
 D CUBE_SPHERE_MODEL
 D CUtlLinkedList<AI_Follower_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<AI_Follower_t, int> > >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CBaseCombatWeapon*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBaseCombatWeapon*, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CEnvWindShared*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CEnvWindShared*, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CFoundryEntitySpawnRecord*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CFoundryEntitySpawnRecord*, int>, int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CFuncAreaPortalBase*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFuncAreaPortalBase*, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CFuncNavBlocker*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFuncNavBlocker*, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CHandle<CBaseAnimating>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CHandle<CBaseAnimating>, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CInfoCameraLink*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CInfoCameraLink*, int> > >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CInfoRemarkable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CInfoRemarkable*, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CMapEntityRef, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CMapEntityRef, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CPlayerCmdInfo, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CPlayerCmdInfo, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CPlayerSimInfo, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CPlayerSimInfo, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CRagdollEntry, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRagdollEntry, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CResponseQueue::CDeferredResponse, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CResponseQueue::CDeferredResponse, int> > >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CUtlMultiList<watcher_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<watcher_t, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<GCSDK::CJobMgr::JobTimeout_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<GCSDK::CJobMgr::JobTimeout_t, int>, int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<GCSDK::CJobMgr::JobYielding_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<GCSDK::CJobMgr::JobYielding_t, int>, int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<GCSDK::IMsgNetPacket*, int, false, int, CUtlMemory<UtlLinkedListElem_t<GCSDK::IMsgNetPacket*, int>, int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<LagRecord, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<LagRecord, int> > >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<ResponseRules::CRR_Concept, unsigned short, false, unsigned int, CUtlMemory<UtlLinkedListElem_t<ResponseRules::CRR_Concept, unsigned short>, unsigned int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<vgui::FastSortListPanelItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::FastSortListPanelItem*, int>, int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<vgui::ListPanel::column_t, unsigned char, false, unsigned char, CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<vgui::ListViewItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::ListViewItem*, int>, int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<vgui::MenuItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::MenuItem*, int>, int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<vgui::PanelListPanel::dataitem_s, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::PanelListPanel::dataitem_s, int>, int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<vgui::TreeNode*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::TreeNode*, int>, int> >::AllocInternal(bool)::__executeCount
 D CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Alloc()::__executeCount
 D CUtlMultiList<watcher_t, unsigned short>::Alloc()::__executeCount
 D CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CBreakModelsPrecached::breakable_precache_t, unsigned short, bool (*)(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&), CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CKeyBindingsMgr::KBContext_t, int, bool (*)(CKeyBindingsMgr::KBContext_t const&, CKeyBindingsMgr::KBContext_t const&), CUtlMemory<UtlRBTreeNode_t<CKeyBindingsMgr::KBContext_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char>, unsigned char> >::Links(unsigned char) const::s_Sentinel
 D CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int, CUtlMap<char const*, CActivityRemapCache, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CBitVec<64>, int>::Node_t, int, CUtlMap<char const*, CBitVec<64>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBitVec<64>, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int, CUtlMap<char const*, CEconItemSetDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int, CUtlMap<char const*, CEconLootListDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int, CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CNavArea*, int>::Node_t, int, CUtlMap<char const*, CNavArea*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short>, short> >::Links(short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short>, short> >::Links(short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short>, short> >::Links(short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int, CUtlMap<int, CEconItemDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, attachedparticlesystem_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<int, int, unsigned short>::Node_t, unsigned short, CUtlMap<int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char>, char> >::Links(char) const::s_Sentinel
 D CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int, CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<unsigned int, int, int>::Node_t, int, CUtlMap<unsigned int, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int, CUtlMap<unsigned long long, GCSDK::CJob*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<unsigned long long, int, int>::Node_t, int, CUtlMap<unsigned long long, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, int, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<GCSDK::JobType_t const*, unsigned short, bool (*)(GCSDK::JobType_t const* const&, GCSDK::JobType_t const* const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::JobType_t const*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::Links(short) const::s_Sentinel
 D CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlString const& CDmxAttribute::GetValue<CUtlString>() const::defaultValue
 D CUtlString const& CDmxElement::GetValue<CUtlString>(char const*) const::defaultValue
 D CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> > const& CDmxAttribute::GetArray<CDmxElement*>() const::defaultArray
 D CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> > const& CDmxElement::GetArray<CDmxElement*>(char const*) const::defaultValue
 D CUtlVector<float, CUtlMemory<float, int> > const& CDmxAttribute::GetArray<float>() const::defaultArray
 D CUtlVectorUltraConservative<HidingSpot*, CUtlVectorUltraConservativeAllocator>::StaticData()::staticData
 D CUtlVectorUltraConservative<NavConnect, CUtlVectorUltraConservativeAllocator>::StaticData()::staticData
 D CUtlVectorUltraConservative<NavLadderConnect, CUtlVectorUltraConservativeAllocator>::StaticData()::staticData
 D CUtlVectorUltraConservative<SpotEncounter*, CUtlVectorUltraConservativeAllocator>::StaticData()::staticData
 D CVGuiScreen::m_DataMap
 D CWC_UpdateIgnoreList::m_DataMap
 D CWaterBullet::m_DataMap
 D CWaterLODControl::m_DataMap
 D CWateryDeathLeech::m_DataMap
 D CWeaponCycler::m_DataMap
 D CWeaponItemBase::m_DataMap
 D CWeaponItemBase::m_pClassSendTable
 D CWeaponPaintGun::m_DataMap
 D CWeaponPortalBase::m_DataMap
 D CWeaponPortalBase::m_pClassSendTable
 D CWeaponPortalgun::GetBulletSpread()::cone
 D CWeaponPortalgun::m_DataMap
 D CWeaponPortalgun::m_acttable
 D CWeaponPortalgun::s_szGunEffectsThinkContext
 D CWeaponPortalgun::s_szTogglePotatosThinkContext
 D CWeaponPromoAntennaBall::m_DataMap
 D CWeaponPromoAntennaEgg::m_DataMap
 D CWeaponPromoHelmetBall::m_DataMap
 D CWeaponPromoHelmetEgg::m_DataMap
 D CWeightButton::m_DataMap
 D CWindowPane::m_DataMap
 D CWorld::m_DataMap
 D CWorldItem::m_DataMap
 D CWreckage::m_DataMap
 D CaptionLookup_t::m_DataMap
 D CompiledCaptionHeader_t::m_DataMap
 D ConceptHistory_t::m_DataMap
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<CParticleSystemDefinition>(CParticleSystemDefinition*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<ParticleChildrenInfo_t>(ParticleChildrenInfo_t*)::unpack
 D DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Button>(vgui::Button*)::unpack
 D DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Label>(vgui::Label*)::unpack
 D DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Panel>(vgui::Panel*)::unpack
 D DustTrail::m_DataMap
 D ENTITYIO_FIXUP_STRING
 D EntityParticleTrailInfo_t::m_DataMap
 D EventQueuePrioritizedEvent_t::m_DataMap
 D FilterDamageType::m_DataMap
 D FilterTeam::m_DataMap
 D FirstBitInWord(unsigned int, int)::firstBitLUT
 D FizzlerEffects::m_DataMap
 D FizzlerMultiOriginSoundPlayer::m_DataMap
 D GCResultString
 D GCSDK::CProtoBufMsg<CMsgConVarValue>::s_Mutex
 D GCSDK::CProtoBufMsg<CMsgConVarValue>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgConVarValue>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgReplicateConVars>::s_Mutex
 D GCSDK::CProtoBufMsg<CMsgReplicateConVars>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgReplicateConVars>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>::s_Mutex
 D GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::s_Mutex
 D GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::s_Mutex
 D GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::s_Mutex
 D GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::s_Mutex
 D GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::s_Mutex
 D GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgSOSingleObject>::s_Mutex
 D GCSDK::CProtoBufMsg<CMsgSOSingleObject>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgSOSingleObject>::s_pMemoryPool
 D GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>::s_Mutex
 D GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>::s_bRegisteredWithMemoryPoolMgr
 D GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>::s_pMemoryPool
 D GCSDK::g_MsgInfo
 D GCSDK::g_SOMsgInfo
 D GCSDK::g_nMaxLogLevel
 D GCSDK::g_nMaxSpewLevel
 D GetBitForBitnum(int)::bitsForBitnum
 D GetEndMask(int)::bitStringEndMasks
 D GetStartBitMask(int)::g_StartMask
 D GetStdStringDataOps()::ops
 D HidingSpot::m_nextID
 D HintNodeData::m_DataMap
 D IGameStatTracker::CGameStatList<SCatapultData>* IGameStatTracker::GetStatTable<SCatapultData>()::s_vecOfType
 D IGameStatTracker::CGameStatList<SDeaths>* IGameStatTracker::GetStatTable<SDeaths>()::s_vecOfType
 D IGameStatTracker::CGameStatList<SFizzledData>* IGameStatTracker::GetStatTable<SFizzledData>()::s_vecOfType
 D IGameStatTracker::CGameStatList<SMPMapStats>* IGameStatTracker::GetStatTable<SMPMapStats>()::s_vecOfType
 D IGameStatTracker::CGameStatList<SPortalData>* IGameStatTracker::GetStatTable<SPortalData>()::s_vecOfType
 D IGameStatTracker::CGameStatList<SPuzzleData>* IGameStatTracker::GetStatTable<SPuzzleData>()::s_vecOfType
 D IGameStatTracker::CGameStatList<SStuckPlayers>* IGameStatTracker::GetStatTable<SStuckPlayers>()::s_vecOfType
 D IGameStatTracker::CGameStatList<STaunts>* IGameStatTracker::GetStatTable<STaunts>()::s_vecOfType
 D IGameStatTracker::CGameStatList<STractorBeamData>* IGameStatTracker::GetStatTable<STractorBeamData>()::s_vecOfType
 D ISaveRestoreOps* CUtlMapDataopsInstantiator<2, 10>::GetDataOps<CUtlMap<string_t, CSimpleSimTimer, char> >(CUtlMap<string_t, CSimpleSimTimer, char>*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CAI_InterestTarget>(CAI_InterestTarget*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> > >(CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> > >(CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> > >(CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> > >(CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> > >(CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> > >(CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> > >(CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> > >(CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> > >(CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> > >(CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> > >(CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> > >(CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> > >(CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> > >(CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> > >(CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<template_t, CUtlMemory<template_t, int> > >(CUtlVector<template_t, CUtlMemory<template_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> > >(CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> > >(CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> > >(CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<12>::GetDataOps<CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> > >(CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> > >(CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CBaseCombatWeapon>, CUtlMemory<CHandle<CBaseCombatWeapon>, int> > >(CUtlVector<CHandle<CBaseCombatWeapon>, CUtlMemory<CHandle<CBaseCombatWeapon>, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> > >(CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> > >(CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> > >(CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> > >(CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> > >(CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> > >(CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> > >(CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<16>::GetDataOps<CUtlVector<float, CUtlMemory<float, int> > >(CUtlVector<float, CUtlMemory<float, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<2>::GetDataOps<CUtlVector<string_t, CUtlMemory<string_t, int> > >(CUtlVector<string_t, CUtlMemory<string_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<3>::GetDataOps<CUtlVector<Vector, CUtlMemory<Vector, int> > >(CUtlVector<Vector, CUtlMemory<Vector, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<5>::GetDataOps<CUtlVector<int, CUtlMemory<int, int> > >(CUtlVector<int, CUtlMemory<int, int> >*)::ops
 D ISaveRestoreOps* GetBitstringDataOps<CBitVec<32> >(CBitVec<32>*)::ops
 D IntervalTimer::m_DataMap
 D MOVE_HEIGHT_EPSILON
 D NavColors
 D Opposite
 D PAINTED_SURFACE_PROPERTY_INDEX
 D PS_SD_Static_World_StaticProps_ClippedProp_t::szTraceSurfaceName
 D PaintPowerInfo_t::m_DataMap
 D ParticleSmokeGrenade::m_DataMap
 D PhysBlockHeader_t::m_DataMap
 D PhysObjectHeader_t::m_DataMap
 D PortalPlayerStatistics_t::m_DataMap
 D PropPaintPowerUser<CNPC_FloorTurret>::DataMapInit()::dataDesc
 D PropPaintPowerUser<CNPC_FloorTurret>::DataMapInit()::nameHolder
 D PropPaintPowerUser<CNPC_FloorTurret>::GetSpeedMaterialIndex()::s_SpeedMaterialIndex
 D PropPaintPowerUser<CNPC_FloorTurret>::m_DataMap
 D PropPaintPowerUser<CPhysicsProp>::DataMapInit()::dataDesc
 D PropPaintPowerUser<CPhysicsProp>::DataMapInit()::nameHolder
 D PropPaintPowerUser<CPhysicsProp>::GetSpeedMaterialIndex()::s_SpeedMaterialIndex
 D PropPaintPowerUser<CPhysicsProp>::m_DataMap
 D Relationship_t::m_DataMap
 D ResponseContext_t::m_DataMap
 D ResponseRules::CRR_Response::m_DataMap
 D ResponseRules::IEngineEmulator::s_pSingleton
 D ResponseRules::ParserResponse::m_DataMap
 D ResponseRules::ResponseGroup::m_DataMap
 D ResponseRules::ResponseParams::m_DataMap
 D RocketTrail::m_DataMap
 D SURFACEPROP_MANIFEST_FILE
 D SaveRestoreBlockHeader_t::m_DataMap
 D ScriptClassDesc_t::GetDescList()::pHead
 D ScriptVariant_t::operator Vector const&() const::vecNull
 D ScriptedNPCInteraction_Phases_t::m_DataMap
 D ScriptedNPCInteraction_t::m_DataMap
 D SmokeTrail::m_DataMap
 D SoundCommand_t::m_DataMap
 D SporeExplosion::m_DataMap
 D SporeTrail::m_DataMap
 D SteamGameServerInternal_ModuleContext()::s_CallbackCounterAndContext
 D SteamInternal_ModuleContext()::s_CallbackCounterAndContext
 D TemplateEntityData_t::m_DataMap
 D TheNavAttributeTable
 D UniqueStatID_t<SCatapultData>::s_nLastID
 D UniqueStatID_t<SDeaths>::s_nLastID
 D UniqueStatID_t<SFizzledData>::s_nLastID
 D UniqueStatID_t<SMPMapStats>::s_nLastID
 D UniqueStatID_t<SPortalData>::s_nLastID
 D UniqueStatID_t<SPuzzleData>::s_nLastID
 D UniqueStatID_t<SStuckPlayers>::s_nLastID
 D UniqueStatID_t<STaunts>::s_nLastID
 D UniqueStatID_t<STractorBeamData>::s_nLastID
 D UnreachableEnt_t::m_DataMap
 D VTT for CBuildModeNavCombo
 D VTT for CDragDropHelperPanel
 D VTT for CSmallTextEntry
 D VTT for ColumnButton
 D VTT for Dragger
 D VTT for vgui::AnimatingImagePanel
 D VTT for vgui::AnimationController
 D VTT for vgui::BuildModeDialog
 D VTT for vgui::Button
 D VTT for vgui::CBitmapImagePanel
 D VTT for vgui::CTreeViewListControl
 D VTT for vgui::CheckButton
 D VTT for vgui::CircularProgressBar
 D VTT for vgui::ClickPanel
 D VTT for vgui::ComboBox
 D VTT for vgui::ComboBoxButton
 D VTT for vgui::ContinuousProgressBar
 D VTT for vgui::CvarToggleCheckButton<ConVarRef>
 D VTT for vgui::Divider
 D VTT for vgui::EditablePanel
 D VTT for vgui::ExpandButton
 D VTT for vgui::Frame
 D VTT for vgui::FrameButton
 D VTT for vgui::FrameSystemButton
 D VTT for vgui::GraphPanel
 D VTT for vgui::ImagePanel
 D VTT for vgui::Label
 D VTT for vgui::ListPanel
 D VTT for vgui::ListViewItem
 D VTT for vgui::ListViewPanel
 D VTT for vgui::Menu
 D VTT for vgui::MenuBar
 D VTT for vgui::MenuButton
 D VTT for vgui::MenuItem
 D VTT for vgui::MenuSeparator
 D VTT for vgui::MessageBox
 D VTT for vgui::Panel
 D VTT for vgui::PanelListPanel
 D VTT for vgui::ProgressBar
 D VTT for vgui::RadioButton
 D VTT for vgui::RichText
 D VTT for vgui::RichTextInterior
 D VTT for vgui::ScalableImagePanel
 D VTT for vgui::ScrollBar
 D VTT for vgui::ScrollBarSlider
 D VTT for vgui::TextEntry
 D VTT for vgui::ToggleButton
 D VTT for vgui::TreeNode
 D VTT for vgui::TreeNodeDropPanel
 D VTT for vgui::TreeNodeImage
 D VTT for vgui::TreeNodeText
 D VTT for vgui::TreeView
 D VTT for vgui::TreeViewSubPanel
 D VTT for vgui::URLLabel
 D ViewSmoothingData_t::m_DataMap
 D _ZZN13CUtlMultiListI9watcher_ttE5AllocEvE14__executeCount45
 D _ZZN13CUtlMultiListIN16CDataManagerBase22resource_lru_element_tEtE5AllocEvE14__executeCount4
 D _ZZN14CUtlLinkedListI13AI_Follower_tiLb1Ei15CUtlFixedMemoryI19UtlLinkedListElem_tIS0_iEEE13AllocInternalEbE14__executeCount114
 D _ZZN14CUtlLinkedListI13CMapEntityReftLb0Et10CUtlMemoryI19UtlLinkedListElem_tIS0_tEtEE13AllocInternalEbE14__executeCount266
 D _ZZN14CUtlLinkedListI13CRagdollEntrytLb0Et10CUtlMemoryI19UtlLinkedListElem_tIS0_tEtEE13AllocInternalEbE14__executeCount30
 D _ZZN14CUtlLinkedListI14CPlayerCmdInfotLb0Et10CUtlMemoryI19UtlLinkedListElem_tIS0_tEtEE13AllocInternalEbE14__executeCount415
 D _ZZN14CUtlLinkedListI14CPlayerSimInfotLb0Et10CUtlMemoryI19UtlLinkedListElem_tIS0_tEtEE13AllocInternalEbE14__executeCount417
 D _ZZN14CUtlLinkedListI7CHandleI14CBaseAnimatingEtLb0Et10CUtlMemoryI19UtlLinkedListElem_tIS2_tEtEE13AllocInternalEbE14__executeCount115
 D _ZZN14CUtlLinkedListI9LagRecordiLb1Ei15CUtlFixedMemoryI19UtlLinkedListElem_tIS0_iEEE13AllocInternalEbE14__executeCount43
 D _ZZN14CUtlLinkedListIN13CUtlMultiListI9watcher_ttE6List_tEtLb0Et10CUtlMemoryI19UtlLinkedListElem_tIS3_tEtEE13AllocInternalEbE14__executeCount48
 D _ZZN14CUtlLinkedListIN13CUtlMultiListIN16CDataManagerBase22resource_lru_element_tEtE6List_tEtLb0Et10CUtlMemoryI19UtlLinkedListElem_tIS4_tEtEE13AllocInternalEbE14__executeCount7
 D _ZZN14CUtlLinkedListIN13ResponseRules11CRR_ConceptEtLb0Ej10CUtlMemoryI19UtlLinkedListElem_tIS1_tEjEE13AllocInternalEbE14__executeCount120
 D _ZZN14CUtlLinkedListIN14CResponseQueue17CDeferredResponseEiLb1Ei15CUtlFixedMemoryI19UtlLinkedListElem_tIS1_iEEE13AllocInternalEbE14__executeCount17
 D _ZZN14CUtlLinkedListIN4vgui14PanelListPanel10dataitem_sEiLb0Ei10CUtlMemoryI19UtlLinkedListElem_tIS2_iEiEE13AllocInternalEbE14__executeCount16
 D _ZZN14CUtlLinkedListIN4vgui9ListPanel8column_tEhLb0Eh10CUtlMemoryI19UtlLinkedListElem_tIS2_hEhEE13AllocInternalEbE14__executeCount51
 D _ZZN14CUtlLinkedListIN5GCSDK7CJobMgr12JobTimeout_tEiLb0Ei10CUtlMemoryI19UtlLinkedListElem_tIS2_iEiEE13AllocInternalEbE14__executeCount30
 D _ZZN14CUtlLinkedListIN5GCSDK7CJobMgr13JobYielding_tEiLb0Ei10CUtlMemoryI19UtlLinkedListElem_tIS2_iEiEE13AllocInternalEbE14__executeCount32
 D _ZZN14CUtlLinkedListIP14CEnvWindSharedtLb0Et10CUtlMemoryI19UtlLinkedListElem_tIS1_tEtEE13AllocInternalEbE14__executeCount6
 D _ZZN14CUtlLinkedListIP15CFuncNavBlockertLb0Et10CUtlMemoryI19UtlLinkedListElem_tIS1_tEtEE13AllocInternalEbE14__executeCount29
 D _ZZN14CUtlLinkedListIP15CInfoCameraLinkiLb1Ei15CUtlFixedMemoryI19UtlLinkedListElem_tIS1_iEEE13AllocInternalEbE14__executeCount16
 D _ZZN14CUtlLinkedListIP15CInfoRemarkabletLb0Et10CUtlMemoryI19UtlLinkedListElem_tIS1_tEtEE13AllocInternalEbE14__executeCount13
 D _ZZN14CUtlLinkedListIP17CBaseCombatWeapontLb0Et10CUtlMemoryI19UtlLinkedListElem_tIS1_tEtEE13AllocInternalEbE14__executeCount96
 D _ZZN14CUtlLinkedListIP19CFuncAreaPortalBasetLb0Et10CUtlMemoryI19UtlLinkedListElem_tIS1_tEtEE13AllocInternalEbE14__executeCount11
 D _ZZN14CUtlLinkedListIP25CFoundryEntitySpawnRecordiLb0Ei10CUtlMemoryI19UtlLinkedListElem_tIS1_iEiEE13AllocInternalEbE14__executeCount18
 D _ZZN14CUtlLinkedListIPN4vgui12ListViewItemEiLb0Ei10CUtlMemoryI19UtlLinkedListElem_tIS2_iEiEE13AllocInternalEbE14__executeCount18
 D _ZZN14CUtlLinkedListIPN4vgui21FastSortListPanelItemEiLb0Ei10CUtlMemoryI19UtlLinkedListElem_tIS2_iEiEE13AllocInternalEbE14__executeCount48
 D _ZZN14CUtlLinkedListIPN4vgui8MenuItemEiLb0Ei10CUtlMemoryI19UtlLinkedListElem_tIS2_iEiEE13AllocInternalEbE14__executeCount26
 D _ZZN14CUtlLinkedListIPN4vgui8TreeNodeEiLb0Ei10CUtlMemoryI19UtlLinkedListElem_tIS2_iEiEE13AllocInternalEbE14__executeCount37
 D _ZZN14CUtlLinkedListIPN5GCSDK13IMsgNetPacketEiLb0Ei10CUtlMemoryI19UtlLinkedListElem_tIS2_iEiEE13AllocInternalEbE14__executeCount35
 D audioparams_t::m_DataMap
 D bool CNavMesh::ForAllAreasInRadius<NavAreaCollector>(NavAreaCollector&, Vector const&, float)::searchMarker
 D bool CNavMesh::ForAllAreasOverlappingExtent<CFuncNavBlocker>(CFuncNavBlocker&, Extent const&)::__executeCount
 D bool CNavMesh::ForAllAreasOverlappingExtent<CFuncNavBlocker>(CFuncNavBlocker&, Extent const&)::searchMarker
 D bool CNavMesh::ForAllAreasOverlappingExtent<CFuncNavObstruction>(CFuncNavObstruction&, Extent const&)::__executeCount
 D bool CNavMesh::ForAllAreasOverlappingExtent<CFuncNavObstruction>(CFuncNavObstruction&, Extent const&)::searchMarker
 D bool CNavMesh::ForAllAreasOverlappingExtent<COverlapCheck>(COverlapCheck&, Extent const&)::__executeCount
 D bool CNavMesh::ForAllAreasOverlappingExtent<COverlapCheck>(COverlapCheck&, Extent const&)::searchMarker
 D bool CNavMesh::ForAllAreasOverlappingExtent<NavAreaCollector>(NavAreaCollector&, Extent const&)::__executeCount
 D bool CNavMesh::ForAllAreasOverlappingExtent<NavAreaCollector>(NavAreaCollector&, Extent const&)::searchMarker
 D bool const& CDmxAttribute::GetValue<bool>() const::defaultValue
 D bool const& CDmxElement::GetValue<bool>(char const*) const::defaultValue
 D construction vtable for vgui::Button-in-ColumnButton
 D construction vtable for vgui::Button-in-vgui::CheckButton
 D construction vtable for vgui::Button-in-vgui::ComboBoxButton
 D construction vtable for vgui::Button-in-vgui::CvarToggleCheckButton<ConVarRef>
 D construction vtable for vgui::Button-in-vgui::ExpandButton
 D construction vtable for vgui::Button-in-vgui::FrameButton
 D construction vtable for vgui::Button-in-vgui::FrameSystemButton
 D construction vtable for vgui::Button-in-vgui::MenuButton
 D construction vtable for vgui::Button-in-vgui::MenuItem
 D construction vtable for vgui::Button-in-vgui::RadioButton
 D construction vtable for vgui::Button-in-vgui::ToggleButton
 D construction vtable for vgui::CheckButton-in-vgui::CvarToggleCheckButton<ConVarRef>
 D construction vtable for vgui::ComboBox-in-CBuildModeNavCombo
 D construction vtable for vgui::EditablePanel-in-vgui::BuildModeDialog
 D construction vtable for vgui::EditablePanel-in-vgui::Frame
 D construction vtable for vgui::EditablePanel-in-vgui::MessageBox
 D construction vtable for vgui::Frame-in-vgui::BuildModeDialog
 D construction vtable for vgui::Frame-in-vgui::MessageBox
 D construction vtable for vgui::ImagePanel-in-vgui::TreeNodeImage
 D construction vtable for vgui::Label-in-ColumnButton
 D construction vtable for vgui::Label-in-vgui::Button
 D construction vtable for vgui::Label-in-vgui::CheckButton
 D construction vtable for vgui::Label-in-vgui::ComboBoxButton
 D construction vtable for vgui::Label-in-vgui::CvarToggleCheckButton<ConVarRef>
 D construction vtable for vgui::Label-in-vgui::ExpandButton
 D construction vtable for vgui::Label-in-vgui::FrameButton
 D construction vtable for vgui::Label-in-vgui::FrameSystemButton
 D construction vtable for vgui::Label-in-vgui::ListViewItem
 D construction vtable for vgui::Label-in-vgui::MenuButton
 D construction vtable for vgui::Label-in-vgui::MenuItem
 D construction vtable for vgui::Label-in-vgui::RadioButton
 D construction vtable for vgui::Label-in-vgui::ToggleButton
 D construction vtable for vgui::Label-in-vgui::URLLabel
 D construction vtable for vgui::MenuButton-in-vgui::FrameSystemButton
 D construction vtable for vgui::Panel-in-CBuildModeNavCombo
 D construction vtable for vgui::Panel-in-CDragDropHelperPanel
 D construction vtable for vgui::Panel-in-CSmallTextEntry
 D construction vtable for vgui::Panel-in-ColumnButton
 D construction vtable for vgui::Panel-in-Dragger
 D construction vtable for vgui::Panel-in-vgui::AnimatingImagePanel
 D construction vtable for vgui::Panel-in-vgui::AnimationController
 D construction vtable for vgui::Panel-in-vgui::BuildModeDialog
 D construction vtable for vgui::Panel-in-vgui::Button
 D construction vtable for vgui::Panel-in-vgui::CBitmapImagePanel
 D construction vtable for vgui::Panel-in-vgui::CTreeViewListControl
 D construction vtable for vgui::Panel-in-vgui::CheckButton
 D construction vtable for vgui::Panel-in-vgui::CircularProgressBar
 D construction vtable for vgui::Panel-in-vgui::ClickPanel
 D construction vtable for vgui::Panel-in-vgui::ComboBox
 D construction vtable for vgui::Panel-in-vgui::ComboBoxButton
 D construction vtable for vgui::Panel-in-vgui::ContinuousProgressBar
 D construction vtable for vgui::Panel-in-vgui::CvarToggleCheckButton<ConVarRef>
 D construction vtable for vgui::Panel-in-vgui::Divider
 D construction vtable for vgui::Panel-in-vgui::EditablePanel
 D construction vtable for vgui::Panel-in-vgui::ExpandButton
 D construction vtable for vgui::Panel-in-vgui::Frame
 D construction vtable for vgui::Panel-in-vgui::FrameButton
 D construction vtable for vgui::Panel-in-vgui::FrameSystemButton
 D construction vtable for vgui::Panel-in-vgui::GraphPanel
 D construction vtable for vgui::Panel-in-vgui::ImagePanel
 D construction vtable for vgui::Panel-in-vgui::Label
 D construction vtable for vgui::Panel-in-vgui::ListPanel
 D construction vtable for vgui::Panel-in-vgui::ListViewItem
 D construction vtable for vgui::Panel-in-vgui::ListViewPanel
 D construction vtable for vgui::Panel-in-vgui::Menu
 D construction vtable for vgui::Panel-in-vgui::MenuBar
 D construction vtable for vgui::Panel-in-vgui::MenuButton
 D construction vtable for vgui::Panel-in-vgui::MenuItem
 D construction vtable for vgui::Panel-in-vgui::MenuSeparator
 D construction vtable for vgui::Panel-in-vgui::MessageBox
 D construction vtable for vgui::Panel-in-vgui::PanelListPanel
 D construction vtable for vgui::Panel-in-vgui::ProgressBar
 D construction vtable for vgui::Panel-in-vgui::RadioButton
 D construction vtable for vgui::Panel-in-vgui::RichText
 D construction vtable for vgui::Panel-in-vgui::RichTextInterior
 D construction vtable for vgui::Panel-in-vgui::ScalableImagePanel
 D construction vtable for vgui::Panel-in-vgui::ScrollBar
 D construction vtable for vgui::Panel-in-vgui::ScrollBarSlider
 D construction vtable for vgui::Panel-in-vgui::TextEntry
 D construction vtable for vgui::Panel-in-vgui::ToggleButton
 D construction vtable for vgui::Panel-in-vgui::TreeNode
 D construction vtable for vgui::Panel-in-vgui::TreeNodeDropPanel
 D construction vtable for vgui::Panel-in-vgui::TreeNodeImage
 D construction vtable for vgui::Panel-in-vgui::TreeNodeText
 D construction vtable for vgui::Panel-in-vgui::TreeView
 D construction vtable for vgui::Panel-in-vgui::TreeViewSubPanel
 D construction vtable for vgui::Panel-in-vgui::URLLabel
 D construction vtable for vgui::ProgressBar-in-vgui::CircularProgressBar
 D construction vtable for vgui::ProgressBar-in-vgui::ContinuousProgressBar
 D construction vtable for vgui::TextEntry-in-CBuildModeNavCombo
 D construction vtable for vgui::TextEntry-in-CSmallTextEntry
 D construction vtable for vgui::TextEntry-in-vgui::ComboBox
 D construction vtable for vgui::TextEntry-in-vgui::TreeNodeText
 D construction vtable for vgui::ToggleButton-in-vgui::CheckButton
 D construction vtable for vgui::ToggleButton-in-vgui::CvarToggleCheckButton<ConVarRef>
 D construction vtable for vgui::ToggleButton-in-vgui::ExpandButton
 D construction vtable for vgui::ToggleButton-in-vgui::RadioButton
 D datamap_t* DataMapInit<AIAgentSaveHeader_t>(AIAgentSaveHeader_t*)::dataDesc
 D datamap_t* DataMapInit<AIAgentSaveHeader_t>(AIAgentSaveHeader_t*)::nameHolder
 D datamap_t* DataMapInit<AIAgentScheduleState_t>(AIAgentScheduleState_t*)::dataDesc
 D datamap_t* DataMapInit<AIAgentScheduleState_t>(AIAgentScheduleState_t*)::nameHolder
 D datamap_t* DataMapInit<AIBehaviorChannelSaveHeader_t>(AIBehaviorChannelSaveHeader_t*)::dataDesc
 D datamap_t* DataMapInit<AIBehaviorChannelSaveHeader_t>(AIBehaviorChannelSaveHeader_t*)::nameHolder
 D datamap_t* DataMapInit<AIChannelScheduleState_t>(AIChannelScheduleState_t*)::dataDesc
 D datamap_t* DataMapInit<AIChannelScheduleState_t>(AIChannelScheduleState_t*)::nameHolder
 D datamap_t* DataMapInit<AIExtendedSaveHeader_t>(AIExtendedSaveHeader_t*)::dataDesc
 D datamap_t* DataMapInit<AIExtendedSaveHeader_t>(AIExtendedSaveHeader_t*)::nameHolder
 D datamap_t* DataMapInit<AIScheduleState_t>(AIScheduleState_t*)::dataDesc
 D datamap_t* DataMapInit<AIScheduleState_t>(AIScheduleState_t*)::nameHolder
 D datamap_t* DataMapInit<AISquadEnemyInfo_t>(AISquadEnemyInfo_t*)::dataDesc
 D datamap_t* DataMapInit<AISquadEnemyInfo_t>(AISquadEnemyInfo_t*)::nameHolder
 D datamap_t* DataMapInit<AI_EnemyInfo_t>(AI_EnemyInfo_t*)::dataDesc
 D datamap_t* DataMapInit<AI_EnemyInfo_t>(AI_EnemyInfo_t*)::nameHolder
 D datamap_t* DataMapInit<AI_FollowNavInfo_t>(AI_FollowNavInfo_t*)::dataDesc
 D datamap_t* DataMapInit<AI_FollowNavInfo_t>(AI_FollowNavInfo_t*)::nameHolder
 D datamap_t* DataMapInit<AI_FollowParams_t>(AI_FollowParams_t*)::dataDesc
 D datamap_t* DataMapInit<AI_FollowParams_t>(AI_FollowParams_t*)::nameHolder
 D datamap_t* DataMapInit<AI_FreePassParams_t>(AI_FreePassParams_t*)::dataDesc
 D datamap_t* DataMapInit<AI_FreePassParams_t>(AI_FreePassParams_t*)::nameHolder
 D datamap_t* DataMapInit<AI_LeadArgs_t>(AI_LeadArgs_t*)::dataDesc
 D datamap_t* DataMapInit<AI_LeadArgs_t>(AI_LeadArgs_t*)::nameHolder
 D datamap_t* DataMapInit<AI_StandoffParams_t>(AI_StandoffParams_t*)::dataDesc
 D datamap_t* DataMapInit<AI_StandoffParams_t>(AI_StandoffParams_t*)::nameHolder
 D datamap_t* DataMapInit<AI_Waypoint_t>(AI_Waypoint_t*)::dataDesc
 D datamap_t* DataMapInit<AI_Waypoint_t>(AI_Waypoint_t*)::nameHolder
 D datamap_t* DataMapInit<AR2Explosion>(AR2Explosion*)::dataDesc
 D datamap_t* DataMapInit<AR2Explosion>(AR2Explosion*)::nameHolder
 D datamap_t* DataMapInit<CAISound>(CAISound*)::dataDesc
 D datamap_t* DataMapInit<CAISound>(CAISound*)::nameHolder
 D datamap_t* DataMapInit<CAI_AccelDecay>(CAI_AccelDecay*)::dataDesc
 D datamap_t* DataMapInit<CAI_AccelDecay>(CAI_AccelDecay*)::nameHolder
 D datamap_t* DataMapInit<CAI_ActBusyBehavior>(CAI_ActBusyBehavior*)::dataDesc
 D datamap_t* DataMapInit<CAI_ActBusyBehavior>(CAI_ActBusyBehavior*)::nameHolder
 D datamap_t* DataMapInit<CAI_ActBusyGoal>(CAI_ActBusyGoal*)::dataDesc
 D datamap_t* DataMapInit<CAI_ActBusyGoal>(CAI_ActBusyGoal*)::nameHolder
 D datamap_t* DataMapInit<CAI_ActBusyQueueGoal>(CAI_ActBusyQueueGoal*)::dataDesc
 D datamap_t* DataMapInit<CAI_ActBusyQueueGoal>(CAI_ActBusyQueueGoal*)::nameHolder
 D datamap_t* DataMapInit<CAI_AddOn>(CAI_AddOn*)::dataDesc
 D datamap_t* DataMapInit<CAI_AddOn>(CAI_AddOn*)::nameHolder
 D datamap_t* DataMapInit<CAI_Agent>(CAI_Agent*)::dataDesc
 D datamap_t* DataMapInit<CAI_Agent>(CAI_Agent*)::nameHolder
 D datamap_t* DataMapInit<CAI_AllySpeechManager>(CAI_AllySpeechManager*)::dataDesc
 D datamap_t* DataMapInit<CAI_AllySpeechManager>(CAI_AllySpeechManager*)::nameHolder
 D datamap_t* DataMapInit<CAI_AssaultBehavior>(CAI_AssaultBehavior*)::dataDesc
 D datamap_t* DataMapInit<CAI_AssaultBehavior>(CAI_AssaultBehavior*)::nameHolder
 D datamap_t* DataMapInit<CAI_AssaultGoal>(CAI_AssaultGoal*)::dataDesc
 D datamap_t* DataMapInit<CAI_AssaultGoal>(CAI_AssaultGoal*)::nameHolder
 D datamap_t* DataMapInit<CAI_BaseActor>(CAI_BaseActor*)::dataDesc
 D datamap_t* DataMapInit<CAI_BaseActor>(CAI_BaseActor*)::nameHolder
 D datamap_t* DataMapInit<CAI_BaseFlyingBot>(CAI_BaseFlyingBot*)::dataDesc
 D datamap_t* DataMapInit<CAI_BaseFlyingBot>(CAI_BaseFlyingBot*)::nameHolder
 D datamap_t* DataMapInit<CAI_BaseNPC>(CAI_BaseNPC*)::dataDesc
 D datamap_t* DataMapInit<CAI_BaseNPC>(CAI_BaseNPC*)::nameHolder
 D datamap_t* DataMapInit<CAI_BasePhysicsFlyingBot>(CAI_BasePhysicsFlyingBot*)::dataDesc
 D datamap_t* DataMapInit<CAI_BasePhysicsFlyingBot>(CAI_BasePhysicsFlyingBot*)::nameHolder
 D datamap_t* DataMapInit<CAI_BattleLine>(CAI_BattleLine*)::dataDesc
 D datamap_t* DataMapInit<CAI_BattleLine>(CAI_BattleLine*)::nameHolder
 D datamap_t* DataMapInit<CAI_BehaviorBase>(CAI_BehaviorBase*)::dataDesc
 D datamap_t* DataMapInit<CAI_BehaviorBase>(CAI_BehaviorBase*)::nameHolder
 D datamap_t* DataMapInit<CAI_BlendedMotor>(CAI_BlendedMotor*)::dataDesc
 D datamap_t* DataMapInit<CAI_BlendedMotor>(CAI_BlendedMotor*)::nameHolder
 D datamap_t* DataMapInit<CAI_ChangeHintGroup>(CAI_ChangeHintGroup*)::dataDesc
 D datamap_t* DataMapInit<CAI_ChangeHintGroup>(CAI_ChangeHintGroup*)::nameHolder
 D datamap_t* DataMapInit<CAI_ChangeTarget>(CAI_ChangeTarget*)::dataDesc
 D datamap_t* DataMapInit<CAI_ChangeTarget>(CAI_ChangeTarget*)::nameHolder
 D datamap_t* DataMapInit<CAI_DynamicLink>(CAI_DynamicLink*)::dataDesc
 D datamap_t* DataMapInit<CAI_DynamicLink>(CAI_DynamicLink*)::nameHolder
 D datamap_t* DataMapInit<CAI_DynamicLinkController>(CAI_DynamicLinkController*)::dataDesc
 D datamap_t* DataMapInit<CAI_DynamicLinkController>(CAI_DynamicLinkController*)::nameHolder
 D datamap_t* DataMapInit<CAI_Enemies>(CAI_Enemies*)::dataDesc
 D datamap_t* DataMapInit<CAI_Enemies>(CAI_Enemies*)::nameHolder
 D datamap_t* DataMapInit<CAI_Expresser>(CAI_Expresser*)::dataDesc
 D datamap_t* DataMapInit<CAI_Expresser>(CAI_Expresser*)::nameHolder
 D datamap_t* DataMapInit<CAI_FearBehavior>(CAI_FearBehavior*)::dataDesc
 D datamap_t* DataMapInit<CAI_FearBehavior>(CAI_FearBehavior*)::nameHolder
 D datamap_t* DataMapInit<CAI_FightFromCoverBehavior>(CAI_FightFromCoverBehavior*)::dataDesc
 D datamap_t* DataMapInit<CAI_FightFromCoverBehavior>(CAI_FightFromCoverBehavior*)::nameHolder
 D datamap_t* DataMapInit<CAI_FightFromCoverGoal>(CAI_FightFromCoverGoal*)::dataDesc
 D datamap_t* DataMapInit<CAI_FightFromCoverGoal>(CAI_FightFromCoverGoal*)::nameHolder
 D datamap_t* DataMapInit<CAI_FollowBehavior>(CAI_FollowBehavior*)::dataDesc
 D datamap_t* DataMapInit<CAI_FollowBehavior>(CAI_FollowBehavior*)::nameHolder
 D datamap_t* DataMapInit<CAI_FollowGoal>(CAI_FollowGoal*)::dataDesc
 D datamap_t* DataMapInit<CAI_FollowGoal>(CAI_FollowGoal*)::nameHolder
 D datamap_t* DataMapInit<CAI_FreePass>(CAI_FreePass*)::dataDesc
 D datamap_t* DataMapInit<CAI_FreePass>(CAI_FreePass*)::nameHolder
 D datamap_t* DataMapInit<CAI_FuncTankBehavior>(CAI_FuncTankBehavior*)::dataDesc
 D datamap_t* DataMapInit<CAI_FuncTankBehavior>(CAI_FuncTankBehavior*)::nameHolder
 D datamap_t* DataMapInit<CAI_GoalEntity>(CAI_GoalEntity*)::dataDesc
 D datamap_t* DataMapInit<CAI_GoalEntity>(CAI_GoalEntity*)::nameHolder
 D datamap_t* DataMapInit<CAI_Hint>(CAI_Hint*)::dataDesc
 D datamap_t* DataMapInit<CAI_Hint>(CAI_Hint*)::nameHolder
 D datamap_t* DataMapInit<CAI_InterestTarget_t>(CAI_InterestTarget_t*)::dataDesc
 D datamap_t* DataMapInit<CAI_InterestTarget_t>(CAI_InterestTarget_t*)::nameHolder
 D datamap_t* DataMapInit<CAI_LeadBehavior>(CAI_LeadBehavior*)::dataDesc
 D datamap_t* DataMapInit<CAI_LeadBehavior>(CAI_LeadBehavior*)::nameHolder
 D datamap_t* DataMapInit<CAI_LeadGoal>(CAI_LeadGoal*)::dataDesc
 D datamap_t* DataMapInit<CAI_LeadGoal>(CAI_LeadGoal*)::nameHolder
 D datamap_t* DataMapInit<CAI_LeadGoal_Weapon>(CAI_LeadGoal_Weapon*)::dataDesc
 D datamap_t* DataMapInit<CAI_LeadGoal_Weapon>(CAI_LeadGoal_Weapon*)::nameHolder
 D datamap_t* DataMapInit<CAI_LocalNavigator>(CAI_LocalNavigator*)::dataDesc
 D datamap_t* DataMapInit<CAI_LocalNavigator>(CAI_LocalNavigator*)::nameHolder
 D datamap_t* DataMapInit<CAI_LookTarget>(CAI_LookTarget*)::dataDesc
 D datamap_t* DataMapInit<CAI_LookTarget>(CAI_LookTarget*)::nameHolder
 D datamap_t* DataMapInit<CAI_Motor>(CAI_Motor*)::dataDesc
 D datamap_t* DataMapInit<CAI_Motor>(CAI_Motor*)::nameHolder
 D datamap_t* DataMapInit<CAI_MoveAndShootOverlay>(CAI_MoveAndShootOverlay*)::dataDesc
 D datamap_t* DataMapInit<CAI_MoveAndShootOverlay>(CAI_MoveAndShootOverlay*)::nameHolder
 D datamap_t* DataMapInit<CAI_MoveMonitor>(CAI_MoveMonitor*)::dataDesc
 D datamap_t* DataMapInit<CAI_MoveMonitor>(CAI_MoveMonitor*)::nameHolder
 D datamap_t* DataMapInit<CAI_MoveProbe>(CAI_MoveProbe*)::dataDesc
 D datamap_t* DataMapInit<CAI_MoveProbe>(CAI_MoveProbe*)::nameHolder
 D datamap_t* DataMapInit<CAI_Navigator>(CAI_Navigator*)::dataDesc
 D datamap_t* DataMapInit<CAI_Navigator>(CAI_Navigator*)::nameHolder
 D datamap_t* DataMapInit<CAI_NetworkManager>(CAI_NetworkManager*)::dataDesc
 D datamap_t* DataMapInit<CAI_NetworkManager>(CAI_NetworkManager*)::nameHolder
 D datamap_t* DataMapInit<CAI_Path>(CAI_Path*)::dataDesc
 D datamap_t* DataMapInit<CAI_Path>(CAI_Path*)::nameHolder
 D datamap_t* DataMapInit<CAI_Pathfinder>(CAI_Pathfinder*)::dataDesc
 D datamap_t* DataMapInit<CAI_Pathfinder>(CAI_Pathfinder*)::nameHolder
 D datamap_t* DataMapInit<CAI_PlayerAlly>(CAI_PlayerAlly*)::dataDesc
 D datamap_t* DataMapInit<CAI_PlayerAlly>(CAI_PlayerAlly*)::nameHolder
 D datamap_t* DataMapInit<CAI_ProxTester>(CAI_ProxTester*)::dataDesc
 D datamap_t* DataMapInit<CAI_ProxTester>(CAI_ProxTester*)::nameHolder
 D datamap_t* DataMapInit<CAI_RadialLinkController>(CAI_RadialLinkController*)::dataDesc
 D datamap_t* DataMapInit<CAI_RadialLinkController>(CAI_RadialLinkController*)::nameHolder
 D datamap_t* DataMapInit<CAI_RappelBehavior>(CAI_RappelBehavior*)::dataDesc
 D datamap_t* DataMapInit<CAI_RappelBehavior>(CAI_RappelBehavior*)::nameHolder
 D datamap_t* DataMapInit<CAI_Relationship>(CAI_Relationship*)::dataDesc
 D datamap_t* DataMapInit<CAI_Relationship>(CAI_Relationship*)::nameHolder
 D datamap_t* DataMapInit<CAI_ScriptConditions>(CAI_ScriptConditions*)::dataDesc
 D datamap_t* DataMapInit<CAI_ScriptConditions>(CAI_ScriptConditions*)::nameHolder
 D datamap_t* DataMapInit<CAI_ScriptConditionsElement>(CAI_ScriptConditionsElement*)::dataDesc
 D datamap_t* DataMapInit<CAI_ScriptConditionsElement>(CAI_ScriptConditionsElement*)::nameHolder
 D datamap_t* DataMapInit<CAI_ScriptedSchedule>(CAI_ScriptedSchedule*)::dataDesc
 D datamap_t* DataMapInit<CAI_ScriptedSchedule>(CAI_ScriptedSchedule*)::nameHolder
 D datamap_t* DataMapInit<CAI_ScriptedSentence>(CAI_ScriptedSentence*)::dataDesc
 D datamap_t* DataMapInit<CAI_ScriptedSentence>(CAI_ScriptedSentence*)::nameHolder
 D datamap_t* DataMapInit<CAI_ScriptedSequence>(CAI_ScriptedSequence*)::dataDesc
 D datamap_t* DataMapInit<CAI_ScriptedSequence>(CAI_ScriptedSequence*)::nameHolder
 D datamap_t* DataMapInit<CAI_Senses>(CAI_Senses*)::dataDesc
 D datamap_t* DataMapInit<CAI_Senses>(CAI_Senses*)::nameHolder
 D datamap_t* DataMapInit<CAI_SentenceBase>(CAI_SentenceBase*)::dataDesc
 D datamap_t* DataMapInit<CAI_SentenceBase>(CAI_SentenceBase*)::nameHolder
 D datamap_t* DataMapInit<CAI_ShotRegulator>(CAI_ShotRegulator*)::dataDesc
 D datamap_t* DataMapInit<CAI_ShotRegulator>(CAI_ShotRegulator*)::nameHolder
 D datamap_t* DataMapInit<CAI_SpeechFilter>(CAI_SpeechFilter*)::dataDesc
 D datamap_t* DataMapInit<CAI_SpeechFilter>(CAI_SpeechFilter*)::nameHolder
 D datamap_t* DataMapInit<CAI_Squad>(CAI_Squad*)::dataDesc
 D datamap_t* DataMapInit<CAI_Squad>(CAI_Squad*)::nameHolder
 D datamap_t* DataMapInit<CAI_StandoffBehavior>(CAI_StandoffBehavior*)::dataDesc
 D datamap_t* DataMapInit<CAI_StandoffBehavior>(CAI_StandoffBehavior*)::nameHolder
 D datamap_t* DataMapInit<CAI_StandoffGoal>(CAI_StandoffGoal*)::dataDesc
 D datamap_t* DataMapInit<CAI_StandoffGoal>(CAI_StandoffGoal*)::nameHolder
 D datamap_t* DataMapInit<CAI_TacticalServices>(CAI_TacticalServices*)::dataDesc
 D datamap_t* DataMapInit<CAI_TacticalServices>(CAI_TacticalServices*)::nameHolder
 D datamap_t* DataMapInit<CAI_TrackPather>(CAI_TrackPather*)::dataDesc
 D datamap_t* DataMapInit<CAI_TrackPather>(CAI_TrackPather*)::nameHolder
 D datamap_t* DataMapInit<CAmbientGeneric>(CAmbientGeneric*)::dataDesc
 D datamap_t* DataMapInit<CAmbientGeneric>(CAmbientGeneric*)::nameHolder
 D datamap_t* DataMapInit<CAnimationLayer>(CAnimationLayer*)::dataDesc
 D datamap_t* DataMapInit<CAnimationLayer>(CAnimationLayer*)::nameHolder
 D datamap_t* DataMapInit<CAreaPortal>(CAreaPortal*)::dataDesc
 D datamap_t* DataMapInit<CAreaPortal>(CAreaPortal*)::nameHolder
 D datamap_t* DataMapInit<CAssaultPoint>(CAssaultPoint*)::dataDesc
 D datamap_t* DataMapInit<CAssaultPoint>(CAssaultPoint*)::nameHolder
 D datamap_t* DataMapInit<CAttributeContainer>(CAttributeContainer*)::dataDesc
 D datamap_t* DataMapInit<CAttributeContainer>(CAttributeContainer*)::nameHolder
 D datamap_t* DataMapInit<CAttributeContainerPlayer>(CAttributeContainerPlayer*)::dataDesc
 D datamap_t* DataMapInit<CAttributeContainerPlayer>(CAttributeContainerPlayer*)::nameHolder
 D datamap_t* DataMapInit<CAttributeList>(CAttributeList*)::dataDesc
 D datamap_t* DataMapInit<CAttributeList>(CAttributeList*)::nameHolder
 D datamap_t* DataMapInit<CAttributeManager>(CAttributeManager*)::dataDesc
 D datamap_t* DataMapInit<CAttributeManager>(CAttributeManager*)::nameHolder
 D datamap_t* DataMapInit<CBaseAnimating>(CBaseAnimating*)::dataDesc
 D datamap_t* DataMapInit<CBaseAnimating>(CBaseAnimating*)::nameHolder
 D datamap_t* DataMapInit<CBaseAnimatingOverlay>(CBaseAnimatingOverlay*)::dataDesc
 D datamap_t* DataMapInit<CBaseAnimatingOverlay>(CBaseAnimatingOverlay*)::nameHolder
 D datamap_t* DataMapInit<CBaseAnimatingProjectile>(CBaseAnimatingProjectile*)::dataDesc
 D datamap_t* DataMapInit<CBaseAnimatingProjectile>(CBaseAnimatingProjectile*)::nameHolder
 D datamap_t* DataMapInit<CBaseAttributableItem>(CBaseAttributableItem*)::dataDesc
 D datamap_t* DataMapInit<CBaseAttributableItem>(CBaseAttributableItem*)::nameHolder
 D datamap_t* DataMapInit<CBaseButton>(CBaseButton*)::dataDesc
 D datamap_t* DataMapInit<CBaseButton>(CBaseButton*)::nameHolder
 D datamap_t* DataMapInit<CBaseCombatCharacter>(CBaseCombatCharacter*)::dataDesc
 D datamap_t* DataMapInit<CBaseCombatCharacter>(CBaseCombatCharacter*)::nameHolder
 D datamap_t* DataMapInit<CBaseCombatWeapon>(CBaseCombatWeapon*)::dataDesc
 D datamap_t* DataMapInit<CBaseCombatWeapon>(CBaseCombatWeapon*)::nameHolder
 D datamap_t* DataMapInit<CBaseDMStart>(CBaseDMStart*)::dataDesc
 D datamap_t* DataMapInit<CBaseDMStart>(CBaseDMStart*)::nameHolder
 D datamap_t* DataMapInit<CBaseDoor>(CBaseDoor*)::dataDesc
 D datamap_t* DataMapInit<CBaseDoor>(CBaseDoor*)::nameHolder
 D datamap_t* DataMapInit<CBaseEntity>(CBaseEntity*)::dataDesc
 D datamap_t* DataMapInit<CBaseEntity>(CBaseEntity*)::nameHolder
 D datamap_t* DataMapInit<CBaseEntityOutput>(CBaseEntityOutput*)::dataDesc
 D datamap_t* DataMapInit<CBaseEntityOutput>(CBaseEntityOutput*)::nameHolder
 D datamap_t* DataMapInit<CBaseFilter>(CBaseFilter*)::dataDesc
 D datamap_t* DataMapInit<CBaseFilter>(CBaseFilter*)::nameHolder
 D datamap_t* DataMapInit<CBaseFire>(CBaseFire*)::dataDesc
 D datamap_t* DataMapInit<CBaseFire>(CBaseFire*)::nameHolder
 D datamap_t* DataMapInit<CBaseFlex>(CBaseFlex*)::dataDesc
 D datamap_t* DataMapInit<CBaseFlex>(CBaseFlex*)::nameHolder
 D datamap_t* DataMapInit<CBaseGrenade>(CBaseGrenade*)::dataDesc
 D datamap_t* DataMapInit<CBaseGrenade>(CBaseGrenade*)::nameHolder
 D datamap_t* DataMapInit<CBaseGrenadeConcussion>(CBaseGrenadeConcussion*)::dataDesc
 D datamap_t* DataMapInit<CBaseGrenadeConcussion>(CBaseGrenadeConcussion*)::nameHolder
 D datamap_t* DataMapInit<CBaseHLCombatWeapon>(CBaseHLCombatWeapon*)::dataDesc
 D datamap_t* DataMapInit<CBaseHLCombatWeapon>(CBaseHLCombatWeapon*)::nameHolder
 D datamap_t* DataMapInit<CBaseMoveBehavior>(CBaseMoveBehavior*)::dataDesc
 D datamap_t* DataMapInit<CBaseMoveBehavior>(CBaseMoveBehavior*)::nameHolder
 D datamap_t* DataMapInit<CBaseNPCMaker>(CBaseNPCMaker*)::dataDesc
 D datamap_t* DataMapInit<CBaseNPCMaker>(CBaseNPCMaker*)::nameHolder
 D datamap_t* DataMapInit<CBasePlatTrain>(CBasePlatTrain*)::dataDesc
 D datamap_t* DataMapInit<CBasePlatTrain>(CBasePlatTrain*)::nameHolder
 D datamap_t* DataMapInit<CBasePlayer>(CBasePlayer*)::dataDesc
 D datamap_t* DataMapInit<CBasePlayer>(CBasePlayer*)::nameHolder
 D datamap_t* DataMapInit<CBasePortalCombatWeapon>(CBasePortalCombatWeapon*)::dataDesc
 D datamap_t* DataMapInit<CBasePortalCombatWeapon>(CBasePortalCombatWeapon*)::nameHolder
 D datamap_t* DataMapInit<CBaseProjectedEntity>(CBaseProjectedEntity*)::dataDesc
 D datamap_t* DataMapInit<CBaseProjectedEntity>(CBaseProjectedEntity*)::nameHolder
 D datamap_t* DataMapInit<CBaseProjectile>(CBaseProjectile*)::dataDesc
 D datamap_t* DataMapInit<CBaseProjectile>(CBaseProjectile*)::nameHolder
 D datamap_t* DataMapInit<CBaseProjector>(CBaseProjector*)::dataDesc
 D datamap_t* DataMapInit<CBaseProjector>(CBaseProjector*)::nameHolder
 D datamap_t* DataMapInit<CBasePropDoor>(CBasePropDoor*)::dataDesc
 D datamap_t* DataMapInit<CBasePropDoor>(CBasePropDoor*)::nameHolder
 D datamap_t* DataMapInit<CBaseServerVehicle>(CBaseServerVehicle*)::dataDesc
 D datamap_t* DataMapInit<CBaseServerVehicle>(CBaseServerVehicle*)::nameHolder
 D datamap_t* DataMapInit<CBaseSpriteProjectile>(CBaseSpriteProjectile*)::dataDesc
 D datamap_t* DataMapInit<CBaseSpriteProjectile>(CBaseSpriteProjectile*)::nameHolder
 D datamap_t* DataMapInit<CBaseToggle>(CBaseToggle*)::dataDesc
 D datamap_t* DataMapInit<CBaseToggle>(CBaseToggle*)::nameHolder
 D datamap_t* DataMapInit<CBaseTrigger>(CBaseTrigger*)::dataDesc
 D datamap_t* DataMapInit<CBaseTrigger>(CBaseTrigger*)::nameHolder
 D datamap_t* DataMapInit<CBaseVPhysicsTrigger>(CBaseVPhysicsTrigger*)::dataDesc
 D datamap_t* DataMapInit<CBaseVPhysicsTrigger>(CBaseVPhysicsTrigger*)::nameHolder
 D datamap_t* DataMapInit<CBaseViewModel>(CBaseViewModel*)::dataDesc
 D datamap_t* DataMapInit<CBaseViewModel>(CBaseViewModel*)::nameHolder
 D datamap_t* DataMapInit<CBeam>(CBeam*)::dataDesc
 D datamap_t* DataMapInit<CBeam>(CBeam*)::nameHolder
 D datamap_t* DataMapInit<CBeamSpotlight>(CBeamSpotlight*)::dataDesc
 D datamap_t* DataMapInit<CBeamSpotlight>(CBeamSpotlight*)::nameHolder
 D datamap_t* DataMapInit<CBlendingCycler>(CBlendingCycler*)::dataDesc
 D datamap_t* DataMapInit<CBlendingCycler>(CBlendingCycler*)::nameHolder
 D datamap_t* DataMapInit<CBlood>(CBlood*)::dataDesc
 D datamap_t* DataMapInit<CBlood>(CBlood*)::nameHolder
 D datamap_t* DataMapInit<CBoneFollower>(CBoneFollower*)::dataDesc
 D datamap_t* DataMapInit<CBoneFollower>(CBoneFollower*)::nameHolder
 D datamap_t* DataMapInit<CBoneFollowerManager>(CBoneFollowerManager*)::dataDesc
 D datamap_t* DataMapInit<CBoneFollowerManager>(CBoneFollowerManager*)::nameHolder
 D datamap_t* DataMapInit<CBreakable>(CBreakable*)::dataDesc
 D datamap_t* DataMapInit<CBreakable>(CBreakable*)::nameHolder
 D datamap_t* DataMapInit<CBreakableProp>(CBreakableProp*)::dataDesc
 D datamap_t* DataMapInit<CBreakableProp>(CBreakableProp*)::nameHolder
 D datamap_t* DataMapInit<CBreakableSurface>(CBreakableSurface*)::dataDesc
 D datamap_t* DataMapInit<CBreakableSurface>(CBreakableSurface*)::nameHolder
 D datamap_t* DataMapInit<CBubbling>(CBubbling*)::dataDesc
 D datamap_t* DataMapInit<CBubbling>(CBubbling*)::nameHolder
 D datamap_t* DataMapInit<CChallengeModeEndNode>(CChallengeModeEndNode*)::dataDesc
 D datamap_t* DataMapInit<CChallengeModeEndNode>(CChallengeModeEndNode*)::nameHolder
 D datamap_t* DataMapInit<CChangeLevel>(CChangeLevel*)::dataDesc
 D datamap_t* DataMapInit<CChangeLevel>(CChangeLevel*)::nameHolder
 D datamap_t* DataMapInit<CChoreoGenericServerVehicle>(CChoreoGenericServerVehicle*)::dataDesc
 D datamap_t* DataMapInit<CChoreoGenericServerVehicle>(CChoreoGenericServerVehicle*)::nameHolder
 D datamap_t* DataMapInit<CCitadelEnergyCore>(CCitadelEnergyCore*)::dataDesc
 D datamap_t* DataMapInit<CCitadelEnergyCore>(CCitadelEnergyCore*)::nameHolder
 D datamap_t* DataMapInit<CCollisionProperty>(CCollisionProperty*)::dataDesc
 D datamap_t* DataMapInit<CCollisionProperty>(CCollisionProperty*)::nameHolder
 D datamap_t* DataMapInit<CColorCorrection>(CColorCorrection*)::dataDesc
 D datamap_t* DataMapInit<CColorCorrection>(CColorCorrection*)::nameHolder
 D datamap_t* DataMapInit<CColorCorrectionVolume>(CColorCorrectionVolume*)::dataDesc
 D datamap_t* DataMapInit<CColorCorrectionVolume>(CColorCorrectionVolume*)::nameHolder
 D datamap_t* DataMapInit<CCommentaryAuto>(CCommentaryAuto*)::dataDesc
 D datamap_t* DataMapInit<CCommentaryAuto>(CCommentaryAuto*)::nameHolder
 D datamap_t* DataMapInit<CCommentarySystem>(CCommentarySystem*)::dataDesc
 D datamap_t* DataMapInit<CCommentarySystem>(CCommentarySystem*)::nameHolder
 D datamap_t* DataMapInit<CConstantForceController>(CConstantForceController*)::dataDesc
 D datamap_t* DataMapInit<CConstantForceController>(CConstantForceController*)::nameHolder
 D datamap_t* DataMapInit<CConstraintAnchor>(CConstraintAnchor*)::dataDesc
 D datamap_t* DataMapInit<CConstraintAnchor>(CConstraintAnchor*)::nameHolder
 D datamap_t* DataMapInit<CCopyRecipientFilter>(CCopyRecipientFilter*)::dataDesc
 D datamap_t* DataMapInit<CCopyRecipientFilter>(CCopyRecipientFilter*)::nameHolder
 D datamap_t* DataMapInit<CCredits>(CCredits*)::dataDesc
 D datamap_t* DataMapInit<CCredits>(CCredits*)::nameHolder
 D datamap_t* DataMapInit<CCubeRotationController>(CCubeRotationController*)::dataDesc
 D datamap_t* DataMapInit<CCubeRotationController>(CCubeRotationController*)::nameHolder
 D datamap_t* DataMapInit<CCycler>(CCycler*)::dataDesc
 D datamap_t* DataMapInit<CCycler>(CCycler*)::nameHolder
 D datamap_t* DataMapInit<CDebugHistory>(CDebugHistory*)::dataDesc
 D datamap_t* DataMapInit<CDebugHistory>(CDebugHistory*)::nameHolder
 D datamap_t* DataMapInit<CDecal>(CDecal*)::dataDesc
 D datamap_t* DataMapInit<CDecal>(CDecal*)::nameHolder
 D datamap_t* DataMapInit<CDynamicLight>(CDynamicLight*)::dataDesc
 D datamap_t* DataMapInit<CDynamicLight>(CDynamicLight*)::nameHolder
 D datamap_t* DataMapInit<CDynamicProp>(CDynamicProp*)::dataDesc
 D datamap_t* DataMapInit<CDynamicProp>(CDynamicProp*)::nameHolder
 D datamap_t* DataMapInit<CEconEntity>(CEconEntity*)::dataDesc
 D datamap_t* DataMapInit<CEconEntity>(CEconEntity*)::nameHolder
 D datamap_t* DataMapInit<CEconItemView>(CEconItemView*)::dataDesc
 D datamap_t* DataMapInit<CEconItemView>(CEconItemView*)::nameHolder
 D datamap_t* DataMapInit<CEconWearable>(CEconWearable*)::dataDesc
 D datamap_t* DataMapInit<CEconWearable>(CEconWearable*)::nameHolder
 D datamap_t* DataMapInit<CEmbers>(CEmbers*)::dataDesc
 D datamap_t* DataMapInit<CEmbers>(CEmbers*)::nameHolder
 D datamap_t* DataMapInit<CEnergyBallLauncher>(CEnergyBallLauncher*)::dataDesc
 D datamap_t* DataMapInit<CEnergyBallLauncher>(CEnergyBallLauncher*)::nameHolder
 D datamap_t* DataMapInit<CEntityDissolve>(CEntityDissolve*)::dataDesc
 D datamap_t* DataMapInit<CEntityDissolve>(CEntityDissolve*)::nameHolder
 D datamap_t* DataMapInit<CEntityFlame>(CEntityFlame*)::dataDesc
 D datamap_t* DataMapInit<CEntityFlame>(CEntityFlame*)::nameHolder
 D datamap_t* DataMapInit<CEntityFreezing>(CEntityFreezing*)::dataDesc
 D datamap_t* DataMapInit<CEntityFreezing>(CEntityFreezing*)::nameHolder
 D datamap_t* DataMapInit<CEntityParticleTrail>(CEntityParticleTrail*)::dataDesc
 D datamap_t* DataMapInit<CEntityParticleTrail>(CEntityParticleTrail*)::nameHolder
 D datamap_t* DataMapInit<CEnvAR2Explosion>(CEnvAR2Explosion*)::dataDesc
 D datamap_t* DataMapInit<CEnvAR2Explosion>(CEnvAR2Explosion*)::nameHolder
 D datamap_t* DataMapInit<CEnvAmbientLight>(CEnvAmbientLight*)::dataDesc
 D datamap_t* DataMapInit<CEnvAmbientLight>(CEnvAmbientLight*)::nameHolder
 D datamap_t* DataMapInit<CEnvBeam>(CEnvBeam*)::dataDesc
 D datamap_t* DataMapInit<CEnvBeam>(CEnvBeam*)::nameHolder
 D datamap_t* DataMapInit<CEnvBeverage>(CEnvBeverage*)::dataDesc
 D datamap_t* DataMapInit<CEnvBeverage>(CEnvBeverage*)::nameHolder
 D datamap_t* DataMapInit<CEnvDOFController>(CEnvDOFController*)::dataDesc
 D datamap_t* DataMapInit<CEnvDOFController>(CEnvDOFController*)::nameHolder
 D datamap_t* DataMapInit<CEnvDustPuff>(CEnvDustPuff*)::dataDesc
 D datamap_t* DataMapInit<CEnvDustPuff>(CEnvDustPuff*)::nameHolder
 D datamap_t* DataMapInit<CEnvEffectsScript>(CEnvEffectsScript*)::dataDesc
 D datamap_t* DataMapInit<CEnvEffectsScript>(CEnvEffectsScript*)::nameHolder
 D datamap_t* DataMapInit<CEnvEntityIgniter>(CEnvEntityIgniter*)::dataDesc
 D datamap_t* DataMapInit<CEnvEntityIgniter>(CEnvEntityIgniter*)::nameHolder
 D datamap_t* DataMapInit<CEnvEntityMaker>(CEnvEntityMaker*)::dataDesc
 D datamap_t* DataMapInit<CEnvEntityMaker>(CEnvEntityMaker*)::nameHolder
 D datamap_t* DataMapInit<CEnvExplosion>(CEnvExplosion*)::dataDesc
 D datamap_t* DataMapInit<CEnvExplosion>(CEnvExplosion*)::nameHolder
 D datamap_t* DataMapInit<CEnvFade>(CEnvFade*)::dataDesc
 D datamap_t* DataMapInit<CEnvFade>(CEnvFade*)::nameHolder
 D datamap_t* DataMapInit<CEnvFireSensor>(CEnvFireSensor*)::dataDesc
 D datamap_t* DataMapInit<CEnvFireSensor>(CEnvFireSensor*)::nameHolder
 D datamap_t* DataMapInit<CEnvFireSource>(CEnvFireSource*)::dataDesc
 D datamap_t* DataMapInit<CEnvFireSource>(CEnvFireSource*)::nameHolder
 D datamap_t* DataMapInit<CEnvFunnel>(CEnvFunnel*)::dataDesc
 D datamap_t* DataMapInit<CEnvFunnel>(CEnvFunnel*)::nameHolder
 D datamap_t* DataMapInit<CEnvGlobal>(CEnvGlobal*)::dataDesc
 D datamap_t* DataMapInit<CEnvGlobal>(CEnvGlobal*)::nameHolder
 D datamap_t* DataMapInit<CEnvGunfire>(CEnvGunfire*)::dataDesc
 D datamap_t* DataMapInit<CEnvGunfire>(CEnvGunfire*)::nameHolder
 D datamap_t* DataMapInit<CEnvHudHint>(CEnvHudHint*)::dataDesc
 D datamap_t* DataMapInit<CEnvHudHint>(CEnvHudHint*)::nameHolder
 D datamap_t* DataMapInit<CEnvInstructorHint>(CEnvInstructorHint*)::dataDesc
 D datamap_t* DataMapInit<CEnvInstructorHint>(CEnvInstructorHint*)::nameHolder
 D datamap_t* DataMapInit<CEnvLaser>(CEnvLaser*)::dataDesc
 D datamap_t* DataMapInit<CEnvLaser>(CEnvLaser*)::nameHolder
 D datamap_t* DataMapInit<CEnvMicrophone>(CEnvMicrophone*)::dataDesc
 D datamap_t* DataMapInit<CEnvMicrophone>(CEnvMicrophone*)::nameHolder
 D datamap_t* DataMapInit<CEnvMuzzleFlash>(CEnvMuzzleFlash*)::dataDesc
 D datamap_t* DataMapInit<CEnvMuzzleFlash>(CEnvMuzzleFlash*)::nameHolder
 D datamap_t* DataMapInit<CEnvParticleScript>(CEnvParticleScript*)::dataDesc
 D datamap_t* DataMapInit<CEnvParticleScript>(CEnvParticleScript*)::nameHolder
 D datamap_t* DataMapInit<CEnvPlayerSurfaceTrigger>(CEnvPlayerSurfaceTrigger*)::dataDesc
 D datamap_t* DataMapInit<CEnvPlayerSurfaceTrigger>(CEnvPlayerSurfaceTrigger*)::nameHolder
 D datamap_t* DataMapInit<CEnvPortalPathTrack>(CEnvPortalPathTrack*)::dataDesc
 D datamap_t* DataMapInit<CEnvPortalPathTrack>(CEnvPortalPathTrack*)::nameHolder
 D datamap_t* DataMapInit<CEnvProjectedTexture>(CEnvProjectedTexture*)::dataDesc
 D datamap_t* DataMapInit<CEnvProjectedTexture>(CEnvProjectedTexture*)::nameHolder
 D datamap_t* DataMapInit<CEnvQuadraticBeam>(CEnvQuadraticBeam*)::dataDesc
 D datamap_t* DataMapInit<CEnvQuadraticBeam>(CEnvQuadraticBeam*)::nameHolder
 D datamap_t* DataMapInit<CEnvScreenEffect>(CEnvScreenEffect*)::dataDesc
 D datamap_t* DataMapInit<CEnvScreenEffect>(CEnvScreenEffect*)::nameHolder
 D datamap_t* DataMapInit<CEnvScreenOverlay>(CEnvScreenOverlay*)::dataDesc
 D datamap_t* DataMapInit<CEnvScreenOverlay>(CEnvScreenOverlay*)::nameHolder
 D datamap_t* DataMapInit<CEnvShake>(CEnvShake*)::dataDesc
 D datamap_t* DataMapInit<CEnvShake>(CEnvShake*)::nameHolder
 D datamap_t* DataMapInit<CEnvShooter>(CEnvShooter*)::dataDesc
 D datamap_t* DataMapInit<CEnvShooter>(CEnvShooter*)::nameHolder
 D datamap_t* DataMapInit<CEnvSoundscape>(CEnvSoundscape*)::dataDesc
 D datamap_t* DataMapInit<CEnvSoundscape>(CEnvSoundscape*)::nameHolder
 D datamap_t* DataMapInit<CEnvSoundscapeProxy>(CEnvSoundscapeProxy*)::dataDesc
 D datamap_t* DataMapInit<CEnvSoundscapeProxy>(CEnvSoundscapeProxy*)::nameHolder
 D datamap_t* DataMapInit<CEnvSoundscapeTriggerable>(CEnvSoundscapeTriggerable*)::dataDesc
 D datamap_t* DataMapInit<CEnvSoundscapeTriggerable>(CEnvSoundscapeTriggerable*)::nameHolder
 D datamap_t* DataMapInit<CEnvSpark>(CEnvSpark*)::dataDesc
 D datamap_t* DataMapInit<CEnvSpark>(CEnvSpark*)::nameHolder
 D datamap_t* DataMapInit<CEnvSplash>(CEnvSplash*)::dataDesc
 D datamap_t* DataMapInit<CEnvSplash>(CEnvSplash*)::nameHolder
 D datamap_t* DataMapInit<CEnvTilt>(CEnvTilt*)::dataDesc
 D datamap_t* DataMapInit<CEnvTilt>(CEnvTilt*)::nameHolder
 D datamap_t* DataMapInit<CEnvTonemapController>(CEnvTonemapController*)::dataDesc
 D datamap_t* DataMapInit<CEnvTonemapController>(CEnvTonemapController*)::nameHolder
 D datamap_t* DataMapInit<CEnvTracer>(CEnvTracer*)::dataDesc
 D datamap_t* DataMapInit<CEnvTracer>(CEnvTracer*)::nameHolder
 D datamap_t* DataMapInit<CEnvViewPunch>(CEnvViewPunch*)::dataDesc
 D datamap_t* DataMapInit<CEnvViewPunch>(CEnvViewPunch*)::nameHolder
 D datamap_t* DataMapInit<CEnvWind>(CEnvWind*)::dataDesc
 D datamap_t* DataMapInit<CEnvWind>(CEnvWind*)::nameHolder
 D datamap_t* DataMapInit<CEnvZoom>(CEnvZoom*)::dataDesc
 D datamap_t* DataMapInit<CEnvZoom>(CEnvZoom*)::nameHolder
 D datamap_t* DataMapInit<CEnv_Lightrail_Endpoint>(CEnv_Lightrail_Endpoint*)::dataDesc
 D datamap_t* DataMapInit<CEnv_Lightrail_Endpoint>(CEnv_Lightrail_Endpoint*)::nameHolder
 D datamap_t* DataMapInit<CEventAction>(CEventAction*)::dataDesc
 D datamap_t* DataMapInit<CEventAction>(CEventAction*)::nameHolder
 D datamap_t* DataMapInit<CEventQueue>(CEventQueue*)::dataDesc
 D datamap_t* DataMapInit<CEventQueue>(CEventQueue*)::nameHolder
 D datamap_t* DataMapInit<CFilterClass>(CFilterClass*)::dataDesc
 D datamap_t* DataMapInit<CFilterClass>(CFilterClass*)::nameHolder
 D datamap_t* DataMapInit<CFilterCombineBall>(CFilterCombineBall*)::dataDesc
 D datamap_t* DataMapInit<CFilterCombineBall>(CFilterCombineBall*)::nameHolder
 D datamap_t* DataMapInit<CFilterContext>(CFilterContext*)::dataDesc
 D datamap_t* DataMapInit<CFilterContext>(CFilterContext*)::nameHolder
 D datamap_t* DataMapInit<CFilterEnemy>(CFilterEnemy*)::dataDesc
 D datamap_t* DataMapInit<CFilterEnemy>(CFilterEnemy*)::nameHolder
 D datamap_t* DataMapInit<CFilterMassGreater>(CFilterMassGreater*)::dataDesc
 D datamap_t* DataMapInit<CFilterMassGreater>(CFilterMassGreater*)::nameHolder
 D datamap_t* DataMapInit<CFilterModel>(CFilterModel*)::dataDesc
 D datamap_t* DataMapInit<CFilterModel>(CFilterModel*)::nameHolder
 D datamap_t* DataMapInit<CFilterMultiple>(CFilterMultiple*)::dataDesc
 D datamap_t* DataMapInit<CFilterMultiple>(CFilterMultiple*)::nameHolder
 D datamap_t* DataMapInit<CFilterName>(CFilterName*)::dataDesc
 D datamap_t* DataMapInit<CFilterName>(CFilterName*)::nameHolder
 D datamap_t* DataMapInit<CFilterPlayerHeld>(CFilterPlayerHeld*)::dataDesc
 D datamap_t* DataMapInit<CFilterPlayerHeld>(CFilterPlayerHeld*)::nameHolder
 D datamap_t* DataMapInit<CFilterSize>(CFilterSize*)::dataDesc
 D datamap_t* DataMapInit<CFilterSize>(CFilterSize*)::nameHolder
 D datamap_t* DataMapInit<CFire>(CFire*)::dataDesc
 D datamap_t* DataMapInit<CFire>(CFire*)::nameHolder
 D datamap_t* DataMapInit<CFireSmoke>(CFireSmoke*)::dataDesc
 D datamap_t* DataMapInit<CFireSmoke>(CFireSmoke*)::nameHolder
 D datamap_t* DataMapInit<CFireTrail>(CFireTrail*)::dataDesc
 D datamap_t* DataMapInit<CFireTrail>(CFireTrail*)::nameHolder
 D datamap_t* DataMapInit<CFish>(CFish*)::dataDesc
 D datamap_t* DataMapInit<CFish>(CFish*)::nameHolder
 D datamap_t* DataMapInit<CFishPool>(CFishPool*)::dataDesc
 D datamap_t* DataMapInit<CFishPool>(CFishPool*)::nameHolder
 D datamap_t* DataMapInit<CFlexCycler>(CFlexCycler*)::dataDesc
 D datamap_t* DataMapInit<CFlexCycler>(CFlexCycler*)::nameHolder
 D datamap_t* DataMapInit<CFlexExpresser>(CFlexExpresser*)::dataDesc
 D datamap_t* DataMapInit<CFlexExpresser>(CFlexExpresser*)::nameHolder
 D datamap_t* DataMapInit<CFlextalkActor>(CFlextalkActor*)::dataDesc
 D datamap_t* DataMapInit<CFlextalkActor>(CFlextalkActor*)::nameHolder
 D datamap_t* DataMapInit<CFogController>(CFogController*)::dataDesc
 D datamap_t* DataMapInit<CFogController>(CFogController*)::nameHolder
 D datamap_t* DataMapInit<CFogTrigger>(CFogTrigger*)::dataDesc
 D datamap_t* DataMapInit<CFogTrigger>(CFogTrigger*)::nameHolder
 D datamap_t* DataMapInit<CFogVolume>(CFogVolume*)::dataDesc
 D datamap_t* DataMapInit<CFogVolume>(CFogVolume*)::nameHolder
 D datamap_t* DataMapInit<CFourWheelServerVehicle>(CFourWheelServerVehicle*)::dataDesc
 D datamap_t* DataMapInit<CFourWheelServerVehicle>(CFourWheelServerVehicle*)::nameHolder
 D datamap_t* DataMapInit<CFourWheelVehiclePhysics>(CFourWheelVehiclePhysics*)::dataDesc
 D datamap_t* DataMapInit<CFourWheelVehiclePhysics>(CFourWheelVehiclePhysics*)::nameHolder
 D datamap_t* DataMapInit<CFuncAreaPortalBase>(CFuncAreaPortalBase*)::dataDesc
 D datamap_t* DataMapInit<CFuncAreaPortalBase>(CFuncAreaPortalBase*)::nameHolder
 D datamap_t* DataMapInit<CFuncAreaPortalWindow>(CFuncAreaPortalWindow*)::dataDesc
 D datamap_t* DataMapInit<CFuncAreaPortalWindow>(CFuncAreaPortalWindow*)::nameHolder
 D datamap_t* DataMapInit<CFuncBrush>(CFuncBrush*)::dataDesc
 D datamap_t* DataMapInit<CFuncBrush>(CFuncBrush*)::nameHolder
 D datamap_t* DataMapInit<CFuncCombineBallSpawner>(CFuncCombineBallSpawner*)::dataDesc
 D datamap_t* DataMapInit<CFuncCombineBallSpawner>(CFuncCombineBallSpawner*)::nameHolder
 D datamap_t* DataMapInit<CFuncConveyor>(CFuncConveyor*)::dataDesc
 D datamap_t* DataMapInit<CFuncConveyor>(CFuncConveyor*)::nameHolder
 D datamap_t* DataMapInit<CFuncInstanceIoProxy>(CFuncInstanceIoProxy*)::dataDesc
 D datamap_t* DataMapInit<CFuncInstanceIoProxy>(CFuncInstanceIoProxy*)::nameHolder
 D datamap_t* DataMapInit<CFuncLadder>(CFuncLadder*)::dataDesc
 D datamap_t* DataMapInit<CFuncLadder>(CFuncLadder*)::nameHolder
 D datamap_t* DataMapInit<CFuncMonitor>(CFuncMonitor*)::dataDesc
 D datamap_t* DataMapInit<CFuncMonitor>(CFuncMonitor*)::nameHolder
 D datamap_t* DataMapInit<CFuncMoveLinear>(CFuncMoveLinear*)::dataDesc
 D datamap_t* DataMapInit<CFuncMoveLinear>(CFuncMoveLinear*)::nameHolder
 D datamap_t* DataMapInit<CFuncNavBlocker>(CFuncNavBlocker*)::dataDesc
 D datamap_t* DataMapInit<CFuncNavBlocker>(CFuncNavBlocker*)::nameHolder
 D datamap_t* DataMapInit<CFuncNavObstruction>(CFuncNavObstruction*)::dataDesc
 D datamap_t* DataMapInit<CFuncNavObstruction>(CFuncNavObstruction*)::nameHolder
 D datamap_t* DataMapInit<CFuncNoPortalVolume>(CFuncNoPortalVolume*)::dataDesc
 D datamap_t* DataMapInit<CFuncNoPortalVolume>(CFuncNoPortalVolume*)::nameHolder
 D datamap_t* DataMapInit<CFuncOccluder>(CFuncOccluder*)::dataDesc
 D datamap_t* DataMapInit<CFuncOccluder>(CFuncOccluder*)::nameHolder
 D datamap_t* DataMapInit<CFuncPlacementClip>(CFuncPlacementClip*)::dataDesc
 D datamap_t* DataMapInit<CFuncPlacementClip>(CFuncPlacementClip*)::nameHolder
 D datamap_t* DataMapInit<CFuncPlat>(CFuncPlat*)::dataDesc
 D datamap_t* DataMapInit<CFuncPlat>(CFuncPlat*)::nameHolder
 D datamap_t* DataMapInit<CFuncPlatRot>(CFuncPlatRot*)::dataDesc
 D datamap_t* DataMapInit<CFuncPlatRot>(CFuncPlatRot*)::nameHolder
 D datamap_t* DataMapInit<CFuncPortalBumper>(CFuncPortalBumper*)::dataDesc
 D datamap_t* DataMapInit<CFuncPortalBumper>(CFuncPortalBumper*)::nameHolder
 D datamap_t* DataMapInit<CFuncPortalDetector>(CFuncPortalDetector*)::dataDesc
 D datamap_t* DataMapInit<CFuncPortalDetector>(CFuncPortalDetector*)::nameHolder
 D datamap_t* DataMapInit<CFuncPortalOrientation>(CFuncPortalOrientation*)::dataDesc
 D datamap_t* DataMapInit<CFuncPortalOrientation>(CFuncPortalOrientation*)::nameHolder
 D datamap_t* DataMapInit<CFuncReflectiveGlass>(CFuncReflectiveGlass*)::dataDesc
 D datamap_t* DataMapInit<CFuncReflectiveGlass>(CFuncReflectiveGlass*)::nameHolder
 D datamap_t* DataMapInit<CFuncRotating>(CFuncRotating*)::dataDesc
 D datamap_t* DataMapInit<CFuncRotating>(CFuncRotating*)::nameHolder
 D datamap_t* DataMapInit<CFuncSmokeVolume>(CFuncSmokeVolume*)::dataDesc
 D datamap_t* DataMapInit<CFuncSmokeVolume>(CFuncSmokeVolume*)::nameHolder
 D datamap_t* DataMapInit<CFuncTank>(CFuncTank*)::dataDesc
 D datamap_t* DataMapInit<CFuncTank>(CFuncTank*)::nameHolder
 D datamap_t* DataMapInit<CFuncTankCombineCannon>(CFuncTankCombineCannon*)::dataDesc
 D datamap_t* DataMapInit<CFuncTankCombineCannon>(CFuncTankCombineCannon*)::nameHolder
 D datamap_t* DataMapInit<CFuncTankLaser>(CFuncTankLaser*)::dataDesc
 D datamap_t* DataMapInit<CFuncTankLaser>(CFuncTankLaser*)::nameHolder
 D datamap_t* DataMapInit<CFuncTankMortar>(CFuncTankMortar*)::dataDesc
 D datamap_t* DataMapInit<CFuncTankMortar>(CFuncTankMortar*)::nameHolder
 D datamap_t* DataMapInit<CFuncTankPhysCannister>(CFuncTankPhysCannister*)::dataDesc
 D datamap_t* DataMapInit<CFuncTankPhysCannister>(CFuncTankPhysCannister*)::nameHolder
 D datamap_t* DataMapInit<CFuncTankPulseLaser>(CFuncTankPulseLaser*)::dataDesc
 D datamap_t* DataMapInit<CFuncTankPulseLaser>(CFuncTankPulseLaser*)::nameHolder
 D datamap_t* DataMapInit<CFuncTankTrain>(CFuncTankTrain*)::dataDesc
 D datamap_t* DataMapInit<CFuncTankTrain>(CFuncTankTrain*)::nameHolder
 D datamap_t* DataMapInit<CFuncTrackAuto>(CFuncTrackAuto*)::dataDesc
 D datamap_t* DataMapInit<CFuncTrackAuto>(CFuncTrackAuto*)::nameHolder
 D datamap_t* DataMapInit<CFuncTrackChange>(CFuncTrackChange*)::dataDesc
 D datamap_t* DataMapInit<CFuncTrackChange>(CFuncTrackChange*)::nameHolder
 D datamap_t* DataMapInit<CFuncTrackTrain>(CFuncTrackTrain*)::dataDesc
 D datamap_t* DataMapInit<CFuncTrackTrain>(CFuncTrackTrain*)::nameHolder
 D datamap_t* DataMapInit<CFuncTrain>(CFuncTrain*)::dataDesc
 D datamap_t* DataMapInit<CFuncTrain>(CFuncTrain*)::nameHolder
 D datamap_t* DataMapInit<CFuncTrainControls>(CFuncTrainControls*)::dataDesc
 D datamap_t* DataMapInit<CFuncTrainControls>(CFuncTrainControls*)::nameHolder
 D datamap_t* DataMapInit<CFuncVPhysicsClip>(CFuncVPhysicsClip*)::dataDesc
 D datamap_t* DataMapInit<CFuncVPhysicsClip>(CFuncVPhysicsClip*)::nameHolder
 D datamap_t* DataMapInit<CFuncVehicleClip>(CFuncVehicleClip*)::dataDesc
 D datamap_t* DataMapInit<CFuncVehicleClip>(CFuncVehicleClip*)::nameHolder
 D datamap_t* DataMapInit<CFuncWall>(CFuncWall*)::dataDesc
 D datamap_t* DataMapInit<CFuncWall>(CFuncWall*)::nameHolder
 D datamap_t* DataMapInit<CFuncWallToggle>(CFuncWallToggle*)::dataDesc
 D datamap_t* DataMapInit<CFuncWallToggle>(CFuncWallToggle*)::nameHolder
 D datamap_t* DataMapInit<CFunc_Dust>(CFunc_Dust*)::dataDesc
 D datamap_t* DataMapInit<CFunc_Dust>(CFunc_Dust*)::nameHolder
 D datamap_t* DataMapInit<CFunc_LOD>(CFunc_LOD*)::dataDesc
 D datamap_t* DataMapInit<CFunc_LOD>(CFunc_LOD*)::nameHolder
 D datamap_t* DataMapInit<CFunc_Portalled>(CFunc_Portalled*)::dataDesc
 D datamap_t* DataMapInit<CFunc_Portalled>(CFunc_Portalled*)::nameHolder
 D datamap_t* DataMapInit<CFutbolCatcher>(CFutbolCatcher*)::dataDesc
 D datamap_t* DataMapInit<CFutbolCatcher>(CFutbolCatcher*)::nameHolder
 D datamap_t* DataMapInit<CGameEnd>(CGameEnd*)::dataDesc
 D datamap_t* DataMapInit<CGameEnd>(CGameEnd*)::nameHolder
 D datamap_t* DataMapInit<CGameGibManager>(CGameGibManager*)::dataDesc
 D datamap_t* DataMapInit<CGameGibManager>(CGameGibManager*)::nameHolder
 D datamap_t* DataMapInit<CGamePlayerEquip>(CGamePlayerEquip*)::dataDesc
 D datamap_t* DataMapInit<CGamePlayerEquip>(CGamePlayerEquip*)::nameHolder
 D datamap_t* DataMapInit<CGamePlayerZone>(CGamePlayerZone*)::dataDesc
 D datamap_t* DataMapInit<CGamePlayerZone>(CGamePlayerZone*)::nameHolder
 D datamap_t* DataMapInit<CGameScore>(CGameScore*)::dataDesc
 D datamap_t* DataMapInit<CGameScore>(CGameScore*)::nameHolder
 D datamap_t* DataMapInit<CGameText>(CGameText*)::dataDesc
 D datamap_t* DataMapInit<CGameText>(CGameText*)::nameHolder
 D datamap_t* DataMapInit<CGameUI>(CGameUI*)::dataDesc
 D datamap_t* DataMapInit<CGameUI>(CGameUI*)::nameHolder
 D datamap_t* DataMapInit<CGameWeaponManager>(CGameWeaponManager*)::dataDesc
 D datamap_t* DataMapInit<CGameWeaponManager>(CGameWeaponManager*)::nameHolder
 D datamap_t* DataMapInit<CGenericActor>(CGenericActor*)::dataDesc
 D datamap_t* DataMapInit<CGenericActor>(CGenericActor*)::nameHolder
 D datamap_t* DataMapInit<CGib>(CGib*)::dataDesc
 D datamap_t* DataMapInit<CGib>(CGib*)::nameHolder
 D datamap_t* DataMapInit<CGibShooter>(CGibShooter*)::dataDesc
 D datamap_t* DataMapInit<CGibShooter>(CGibShooter*)::nameHolder
 D datamap_t* DataMapInit<CGlobalState>(CGlobalState*)::dataDesc
 D datamap_t* DataMapInit<CGlobalState>(CGlobalState*)::nameHolder
 D datamap_t* DataMapInit<CGrabController>(CGrabController*)::dataDesc
 D datamap_t* DataMapInit<CGrabController>(CGrabController*)::nameHolder
 D datamap_t* DataMapInit<CGrenadeBeam>(CGrenadeBeam*)::dataDesc
 D datamap_t* DataMapInit<CGrenadeBeam>(CGrenadeBeam*)::nameHolder
 D datamap_t* DataMapInit<CGrenadeBeamChaser>(CGrenadeBeamChaser*)::dataDesc
 D datamap_t* DataMapInit<CGrenadeBeamChaser>(CGrenadeBeamChaser*)::nameHolder
 D datamap_t* DataMapInit<CGrenadeFrag>(CGrenadeFrag*)::dataDesc
 D datamap_t* DataMapInit<CGrenadeFrag>(CGrenadeFrag*)::nameHolder
 D datamap_t* DataMapInit<CGunTarget>(CGunTarget*)::dataDesc
 D datamap_t* DataMapInit<CGunTarget>(CGunTarget*)::nameHolder
 D datamap_t* DataMapInit<CHLMachineGun>(CHLMachineGun*)::dataDesc
 D datamap_t* DataMapInit<CHLMachineGun>(CHLMachineGun*)::nameHolder
 D datamap_t* DataMapInit<CHLSelectFireMachineGun>(CHLSelectFireMachineGun*)::dataDesc
 D datamap_t* DataMapInit<CHLSelectFireMachineGun>(CHLSelectFireMachineGun*)::nameHolder
 D datamap_t* DataMapInit<CHotPotato>(CHotPotato*)::dataDesc
 D datamap_t* DataMapInit<CHotPotato>(CHotPotato*)::nameHolder
 D datamap_t* DataMapInit<CHotPotatoCatcher>(CHotPotatoCatcher*)::dataDesc
 D datamap_t* DataMapInit<CHotPotatoCatcher>(CHotPotatoCatcher*)::nameHolder
 D datamap_t* DataMapInit<CHotPotatoSpawner>(CHotPotatoSpawner*)::dataDesc
 D datamap_t* DataMapInit<CHotPotatoSpawner>(CHotPotatoSpawner*)::nameHolder
 D datamap_t* DataMapInit<CHoverTurretTether>(CHoverTurretTether*)::dataDesc
 D datamap_t* DataMapInit<CHoverTurretTether>(CHoverTurretTether*)::nameHolder
 D datamap_t* DataMapInit<CInfoCameraLink>(CInfoCameraLink*)::dataDesc
 D datamap_t* DataMapInit<CInfoCameraLink>(CInfoCameraLink*)::nameHolder
 D datamap_t* DataMapInit<CInfoGameEventProxy>(CInfoGameEventProxy*)::dataDesc
 D datamap_t* DataMapInit<CInfoGameEventProxy>(CInfoGameEventProxy*)::nameHolder
 D datamap_t* DataMapInit<CInfoInstructorHintTarget>(CInfoInstructorHintTarget*)::dataDesc
 D datamap_t* DataMapInit<CInfoInstructorHintTarget>(CInfoInstructorHintTarget*)::nameHolder
 D datamap_t* DataMapInit<CInfoOverlayAccessor>(CInfoOverlayAccessor*)::dataDesc
 D datamap_t* DataMapInit<CInfoOverlayAccessor>(CInfoOverlayAccessor*)::nameHolder
 D datamap_t* DataMapInit<CInfoPlacementHelper>(CInfoPlacementHelper*)::dataDesc
 D datamap_t* DataMapInit<CInfoPlacementHelper>(CInfoPlacementHelper*)::nameHolder
 D datamap_t* DataMapInit<CInfoPortalScore>(CInfoPortalScore*)::dataDesc
 D datamap_t* DataMapInit<CInfoPortalScore>(CInfoPortalScore*)::nameHolder
 D datamap_t* DataMapInit<CInfoRemarkable>(CInfoRemarkable*)::dataDesc
 D datamap_t* DataMapInit<CInfoRemarkable>(CInfoRemarkable*)::nameHolder
 D datamap_t* DataMapInit<CInfoTargetPersonalitySphere>(CInfoTargetPersonalitySphere*)::dataDesc
 D datamap_t* DataMapInit<CInfoTargetPersonalitySphere>(CInfoTargetPersonalitySphere*)::nameHolder
 D datamap_t* DataMapInit<CInfo_Coop_Spawn>(CInfo_Coop_Spawn*)::dataDesc
 D datamap_t* DataMapInit<CInfo_Coop_Spawn>(CInfo_Coop_Spawn*)::nameHolder
 D datamap_t* DataMapInit<CInfo_Player_Ping_Detector>(CInfo_Player_Ping_Detector*)::dataDesc
 D datamap_t* DataMapInit<CInfo_Player_Ping_Detector>(CInfo_Player_Ping_Detector*)::nameHolder
 D datamap_t* DataMapInit<CInstancedSceneEntity>(CInstancedSceneEntity*)::dataDesc
 D datamap_t* DataMapInit<CInstancedSceneEntity>(CInstancedSceneEntity*)::nameHolder
 D datamap_t* DataMapInit<CItem>(CItem*)::dataDesc
 D datamap_t* DataMapInit<CItem>(CItem*)::nameHolder
 D datamap_t* DataMapInit<CItemSoda>(CItemSoda*)::dataDesc
 D datamap_t* DataMapInit<CItemSoda>(CItemSoda*)::nameHolder
 D datamap_t* DataMapInit<CItem_Nugget>(CItem_Nugget*)::dataDesc
 D datamap_t* DataMapInit<CItem_Nugget>(CItem_Nugget*)::nameHolder
 D datamap_t* DataMapInit<CKeepUpright>(CKeepUpright*)::dataDesc
 D datamap_t* DataMapInit<CKeepUpright>(CKeepUpright*)::nameHolder
 D datamap_t* DataMapInit<CLabIndicatorPanel>(CLabIndicatorPanel*)::dataDesc
 D datamap_t* DataMapInit<CLabIndicatorPanel>(CLabIndicatorPanel*)::nameHolder
 D datamap_t* DataMapInit<CLaserCatcher>(CLaserCatcher*)::dataDesc
 D datamap_t* DataMapInit<CLaserCatcher>(CLaserCatcher*)::nameHolder
 D datamap_t* DataMapInit<CLaserRelay>(CLaserRelay*)::dataDesc
 D datamap_t* DataMapInit<CLaserRelay>(CLaserRelay*)::nameHolder
 D datamap_t* DataMapInit<CLevelPlacardDisplay>(CLevelPlacardDisplay*)::dataDesc
 D datamap_t* DataMapInit<CLevelPlacardDisplay>(CLevelPlacardDisplay*)::nameHolder
 D datamap_t* DataMapInit<CLight>(CLight*)::dataDesc
 D datamap_t* DataMapInit<CLight>(CLight*)::nameHolder
 D datamap_t* DataMapInit<CLightGlow>(CLightGlow*)::dataDesc
 D datamap_t* DataMapInit<CLightGlow>(CLightGlow*)::nameHolder
 D datamap_t* DataMapInit<CLinkedPortalDoor>(CLinkedPortalDoor*)::dataDesc
 D datamap_t* DataMapInit<CLinkedPortalDoor>(CLinkedPortalDoor*)::nameHolder
 D datamap_t* DataMapInit<CLogicAchievement>(CLogicAchievement*)::dataDesc
 D datamap_t* DataMapInit<CLogicAchievement>(CLogicAchievement*)::nameHolder
 D datamap_t* DataMapInit<CLogicActiveAutosave>(CLogicActiveAutosave*)::dataDesc
 D datamap_t* DataMapInit<CLogicActiveAutosave>(CLogicActiveAutosave*)::nameHolder
 D datamap_t* DataMapInit<CLogicAuto>(CLogicAuto*)::dataDesc
 D datamap_t* DataMapInit<CLogicAuto>(CLogicAuto*)::nameHolder
 D datamap_t* DataMapInit<CLogicAutosave>(CLogicAutosave*)::dataDesc
 D datamap_t* DataMapInit<CLogicAutosave>(CLogicAutosave*)::nameHolder
 D datamap_t* DataMapInit<CLogicBranch>(CLogicBranch*)::dataDesc
 D datamap_t* DataMapInit<CLogicBranch>(CLogicBranch*)::nameHolder
 D datamap_t* DataMapInit<CLogicBranchList>(CLogicBranchList*)::dataDesc
 D datamap_t* DataMapInit<CLogicBranchList>(CLogicBranchList*)::nameHolder
 D datamap_t* DataMapInit<CLogicCase>(CLogicCase*)::dataDesc
 D datamap_t* DataMapInit<CLogicCase>(CLogicCase*)::nameHolder
 D datamap_t* DataMapInit<CLogicCollisionPair>(CLogicCollisionPair*)::dataDesc
 D datamap_t* DataMapInit<CLogicCollisionPair>(CLogicCollisionPair*)::nameHolder
 D datamap_t* DataMapInit<CLogicCompare>(CLogicCompare*)::dataDesc
 D datamap_t* DataMapInit<CLogicCompare>(CLogicCompare*)::nameHolder
 D datamap_t* DataMapInit<CLogicCompareInteger>(CLogicCompareInteger*)::dataDesc
 D datamap_t* DataMapInit<CLogicCompareInteger>(CLogicCompareInteger*)::nameHolder
 D datamap_t* DataMapInit<CLogicCoopManager>(CLogicCoopManager*)::dataDesc
 D datamap_t* DataMapInit<CLogicCoopManager>(CLogicCoopManager*)::nameHolder
 D datamap_t* DataMapInit<CLogicEventListener>(CLogicEventListener*)::dataDesc
 D datamap_t* DataMapInit<CLogicEventListener>(CLogicEventListener*)::nameHolder
 D datamap_t* DataMapInit<CLogicLineToEntity>(CLogicLineToEntity*)::dataDesc
 D datamap_t* DataMapInit<CLogicLineToEntity>(CLogicLineToEntity*)::nameHolder
 D datamap_t* DataMapInit<CLogicMeasureMovement>(CLogicMeasureMovement*)::dataDesc
 D datamap_t* DataMapInit<CLogicMeasureMovement>(CLogicMeasureMovement*)::nameHolder
 D datamap_t* DataMapInit<CLogicNavigation>(CLogicNavigation*)::dataDesc
 D datamap_t* DataMapInit<CLogicNavigation>(CLogicNavigation*)::nameHolder
 D datamap_t* DataMapInit<CLogicPlayMovie>(CLogicPlayMovie*)::dataDesc
 D datamap_t* DataMapInit<CLogicPlayMovie>(CLogicPlayMovie*)::nameHolder
 D datamap_t* DataMapInit<CLogicPlayerProxy>(CLogicPlayerProxy*)::dataDesc
 D datamap_t* DataMapInit<CLogicPlayerProxy>(CLogicPlayerProxy*)::nameHolder
 D datamap_t* DataMapInit<CLogicPlayerViewFinder>(CLogicPlayerViewFinder*)::dataDesc
 D datamap_t* DataMapInit<CLogicPlayerViewFinder>(CLogicPlayerViewFinder*)::nameHolder
 D datamap_t* DataMapInit<CLogicRandomOutputs>(CLogicRandomOutputs*)::dataDesc
 D datamap_t* DataMapInit<CLogicRandomOutputs>(CLogicRandomOutputs*)::nameHolder
 D datamap_t* DataMapInit<CLogicRegisterActivator>(CLogicRegisterActivator*)::dataDesc
 D datamap_t* DataMapInit<CLogicRegisterActivator>(CLogicRegisterActivator*)::nameHolder
 D datamap_t* DataMapInit<CLogicRelay>(CLogicRelay*)::dataDesc
 D datamap_t* DataMapInit<CLogicRelay>(CLogicRelay*)::nameHolder
 D datamap_t* DataMapInit<CLogicScript>(CLogicScript*)::dataDesc
 D datamap_t* DataMapInit<CLogicScript>(CLogicScript*)::nameHolder
 D datamap_t* DataMapInit<CLogicTimeScale>(CLogicTimeScale*)::dataDesc
 D datamap_t* DataMapInit<CLogicTimeScale>(CLogicTimeScale*)::nameHolder
 D datamap_t* DataMapInit<CMP_LobbyScreen>(CMP_LobbyScreen*)::dataDesc
 D datamap_t* DataMapInit<CMP_LobbyScreen>(CMP_LobbyScreen*)::nameHolder
 D datamap_t* DataMapInit<CMaterialModifyControl>(CMaterialModifyControl*)::dataDesc
 D datamap_t* DataMapInit<CMaterialModifyControl>(CMaterialModifyControl*)::nameHolder
 D datamap_t* DataMapInit<CMathColorBlend>(CMathColorBlend*)::dataDesc
 D datamap_t* DataMapInit<CMathColorBlend>(CMathColorBlend*)::nameHolder
 D datamap_t* DataMapInit<CMathCounter>(CMathCounter*)::dataDesc
 D datamap_t* DataMapInit<CMathCounter>(CMathCounter*)::nameHolder
 D datamap_t* DataMapInit<CMathRemap>(CMathRemap*)::dataDesc
 D datamap_t* DataMapInit<CMathRemap>(CMathRemap*)::nameHolder
 D datamap_t* DataMapInit<CMessage>(CMessage*)::dataDesc
 D datamap_t* DataMapInit<CMessage>(CMessage*)::nameHolder
 D datamap_t* DataMapInit<CMessageEntity>(CMessageEntity*)::dataDesc
 D datamap_t* DataMapInit<CMessageEntity>(CMessageEntity*)::nameHolder
 D datamap_t* DataMapInit<CMomentaryRotButton>(CMomentaryRotButton*)::dataDesc
 D datamap_t* DataMapInit<CMomentaryRotButton>(CMomentaryRotButton*)::nameHolder
 D datamap_t* DataMapInit<CMortarShell>(CMortarShell*)::dataDesc
 D datamap_t* DataMapInit<CMortarShell>(CMortarShell*)::nameHolder
 D datamap_t* DataMapInit<CMotorController>(CMotorController*)::dataDesc
 D datamap_t* DataMapInit<CMotorController>(CMotorController*)::nameHolder
 D datamap_t* DataMapInit<CMovementSpeedMod>(CMovementSpeedMod*)::dataDesc
 D datamap_t* DataMapInit<CMovementSpeedMod>(CMovementSpeedMod*)::nameHolder
 D datamap_t* DataMapInit<CMovieDisplay>(CMovieDisplay*)::dataDesc
 D datamap_t* DataMapInit<CMovieDisplay>(CMovieDisplay*)::nameHolder
 D datamap_t* DataMapInit<CMultiDamage>(CMultiDamage*)::dataDesc
 D datamap_t* DataMapInit<CMultiDamage>(CMultiDamage*)::nameHolder
 D datamap_t* DataMapInit<CMultiSource>(CMultiSource*)::dataDesc
 D datamap_t* DataMapInit<CMultiSource>(CMultiSource*)::nameHolder
 D datamap_t* DataMapInit<CNPCEventResponseSystemEntity>(CNPCEventResponseSystemEntity*)::dataDesc
 D datamap_t* DataMapInit<CNPCEventResponseSystemEntity>(CNPCEventResponseSystemEntity*)::nameHolder
 D datamap_t* DataMapInit<CNPCMaker>(CNPCMaker*)::dataDesc
 D datamap_t* DataMapInit<CNPCMaker>(CNPCMaker*)::nameHolder
 D datamap_t* DataMapInit<CNPCSimpleTalker>(CNPCSimpleTalker*)::dataDesc
 D datamap_t* DataMapInit<CNPCSimpleTalker>(CNPCSimpleTalker*)::nameHolder
 D datamap_t* DataMapInit<CNPCSimpleTalkerExpresser>(CNPCSimpleTalkerExpresser*)::dataDesc
 D datamap_t* DataMapInit<CNPCSimpleTalkerExpresser>(CNPCSimpleTalkerExpresser*)::nameHolder
 D datamap_t* DataMapInit<CNPCSpawnDestination>(CNPCSpawnDestination*)::dataDesc
 D datamap_t* DataMapInit<CNPCSpawnDestination>(CNPCSpawnDestination*)::nameHolder
 D datamap_t* DataMapInit<CNPC_Bullseye>(CNPC_Bullseye*)::dataDesc
 D datamap_t* DataMapInit<CNPC_Bullseye>(CNPC_Bullseye*)::nameHolder
 D datamap_t* DataMapInit<CNPC_EnemyFinder>(CNPC_EnemyFinder*)::dataDesc
 D datamap_t* DataMapInit<CNPC_EnemyFinder>(CNPC_EnemyFinder*)::nameHolder
 D datamap_t* DataMapInit<CNPC_EnemyFinderCombineCannon>(CNPC_EnemyFinderCombineCannon*)::dataDesc
 D datamap_t* DataMapInit<CNPC_EnemyFinderCombineCannon>(CNPC_EnemyFinderCombineCannon*)::nameHolder
 D datamap_t* DataMapInit<CNPC_FloorTurret>(CNPC_FloorTurret*)::dataDesc
 D datamap_t* DataMapInit<CNPC_FloorTurret>(CNPC_FloorTurret*)::nameHolder
 D datamap_t* DataMapInit<CNPC_Furniture>(CNPC_Furniture*)::dataDesc
 D datamap_t* DataMapInit<CNPC_Furniture>(CNPC_Furniture*)::nameHolder
 D datamap_t* DataMapInit<CNPC_HoverTurret>(CNPC_HoverTurret*)::dataDesc
 D datamap_t* DataMapInit<CNPC_HoverTurret>(CNPC_HoverTurret*)::nameHolder
 D datamap_t* DataMapInit<CNPC_PersonalityCore>(CNPC_PersonalityCore*)::dataDesc
 D datamap_t* DataMapInit<CNPC_PersonalityCore>(CNPC_PersonalityCore*)::nameHolder
 D datamap_t* DataMapInit<CNPC_Portal_FloorTurret>(CNPC_Portal_FloorTurret*)::dataDesc
 D datamap_t* DataMapInit<CNPC_Portal_FloorTurret>(CNPC_Portal_FloorTurret*)::nameHolder
 D datamap_t* DataMapInit<CNPC_RocketTurret>(CNPC_RocketTurret*)::dataDesc
 D datamap_t* DataMapInit<CNPC_RocketTurret>(CNPC_RocketTurret*)::nameHolder
 D datamap_t* DataMapInit<CNPC_SecurityCamera>(CNPC_SecurityCamera*)::dataDesc
 D datamap_t* DataMapInit<CNPC_SecurityCamera>(CNPC_SecurityCamera*)::nameHolder
 D datamap_t* DataMapInit<CNPC_VehicleDriver>(CNPC_VehicleDriver*)::dataDesc
 D datamap_t* DataMapInit<CNPC_VehicleDriver>(CNPC_VehicleDriver*)::nameHolder
 D datamap_t* DataMapInit<CNPC_Wheatley_Boss>(CNPC_Wheatley_Boss*)::dataDesc
 D datamap_t* DataMapInit<CNPC_Wheatley_Boss>(CNPC_Wheatley_Boss*)::nameHolder
 D datamap_t* DataMapInit<CNeurotoxinCountdown>(CNeurotoxinCountdown*)::dataDesc
 D datamap_t* DataMapInit<CNeurotoxinCountdown>(CNeurotoxinCountdown*)::nameHolder
 D datamap_t* DataMapInit<CNewNPC>(CNewNPC*)::dataDesc
 D datamap_t* DataMapInit<CNewNPC>(CNewNPC*)::nameHolder
 D datamap_t* DataMapInit<CNewRecharge>(CNewRecharge*)::dataDesc
 D datamap_t* DataMapInit<CNewRecharge>(CNewRecharge*)::nameHolder
 D datamap_t* DataMapInit<CNodeEnt>(CNodeEnt*)::dataDesc
 D datamap_t* DataMapInit<CNodeEnt>(CNodeEnt*)::nameHolder
 D datamap_t* DataMapInit<COrnamentProp>(COrnamentProp*)::dataDesc
 D datamap_t* DataMapInit<COrnamentProp>(COrnamentProp*)::nameHolder
 D datamap_t* DataMapInit<COuttroStats>(COuttroStats*)::dataDesc
 D datamap_t* DataMapInit<COuttroStats>(COuttroStats*)::nameHolder
 D datamap_t* DataMapInit<CPaintPowerPickup>(CPaintPowerPickup*)::dataDesc
 D datamap_t* DataMapInit<CPaintPowerPickup>(CPaintPowerPickup*)::nameHolder
 D datamap_t* DataMapInit<CPaintSphere>(CPaintSphere*)::dataDesc
 D datamap_t* DataMapInit<CPaintSphere>(CPaintSphere*)::nameHolder
 D datamap_t* DataMapInit<CPaintSprayer>(CPaintSprayer*)::dataDesc
 D datamap_t* DataMapInit<CPaintSprayer>(CPaintSprayer*)::nameHolder
 D datamap_t* DataMapInit<CPaintStream>(CPaintStream*)::dataDesc
 D datamap_t* DataMapInit<CPaintStream>(CPaintStream*)::nameHolder
 D datamap_t* DataMapInit<CParticleFire>(CParticleFire*)::dataDesc
 D datamap_t* DataMapInit<CParticleFire>(CParticleFire*)::nameHolder
 D datamap_t* DataMapInit<CParticleLight>(CParticleLight*)::dataDesc
 D datamap_t* DataMapInit<CParticleLight>(CParticleLight*)::nameHolder
 D datamap_t* DataMapInit<CParticlePerformanceMonitor>(CParticlePerformanceMonitor*)::dataDesc
 D datamap_t* DataMapInit<CParticlePerformanceMonitor>(CParticlePerformanceMonitor*)::nameHolder
 D datamap_t* DataMapInit<CParticleSystem>(CParticleSystem*)::dataDesc
 D datamap_t* DataMapInit<CParticleSystem>(CParticleSystem*)::nameHolder
 D datamap_t* DataMapInit<CPassengerInfo>(CPassengerInfo*)::dataDesc
 D datamap_t* DataMapInit<CPassengerInfo>(CPassengerInfo*)::nameHolder
 D datamap_t* DataMapInit<CPathCorner>(CPathCorner*)::dataDesc
 D datamap_t* DataMapInit<CPathCorner>(CPathCorner*)::nameHolder
 D datamap_t* DataMapInit<CPathKeyFrame>(CPathKeyFrame*)::dataDesc
 D datamap_t* DataMapInit<CPathKeyFrame>(CPathKeyFrame*)::nameHolder
 D datamap_t* DataMapInit<CPathTrack>(CPathTrack*)::dataDesc
 D datamap_t* DataMapInit<CPathTrack>(CPathTrack*)::nameHolder
 D datamap_t* DataMapInit<CPhysBox>(CPhysBox*)::dataDesc
 D datamap_t* DataMapInit<CPhysBox>(CPhysBox*)::nameHolder
 D datamap_t* DataMapInit<CPhysBoxMultiplayer>(CPhysBoxMultiplayer*)::dataDesc
 D datamap_t* DataMapInit<CPhysBoxMultiplayer>(CPhysBoxMultiplayer*)::nameHolder
 D datamap_t* DataMapInit<CPhysConstraint>(CPhysConstraint*)::dataDesc
 D datamap_t* DataMapInit<CPhysConstraint>(CPhysConstraint*)::nameHolder
 D datamap_t* DataMapInit<CPhysConstraintSystem>(CPhysConstraintSystem*)::dataDesc
 D datamap_t* DataMapInit<CPhysConstraintSystem>(CPhysConstraintSystem*)::nameHolder
 D datamap_t* DataMapInit<CPhysConvert>(CPhysConvert*)::dataDesc
 D datamap_t* DataMapInit<CPhysConvert>(CPhysConvert*)::nameHolder
 D datamap_t* DataMapInit<CPhysExplosion>(CPhysExplosion*)::dataDesc
 D datamap_t* DataMapInit<CPhysExplosion>(CPhysExplosion*)::nameHolder
 D datamap_t* DataMapInit<CPhysForce>(CPhysForce*)::dataDesc
 D datamap_t* DataMapInit<CPhysForce>(CPhysForce*)::nameHolder
 D datamap_t* DataMapInit<CPhysHinge>(CPhysHinge*)::dataDesc
 D datamap_t* DataMapInit<CPhysHinge>(CPhysHinge*)::nameHolder
 D datamap_t* DataMapInit<CPhysImpact>(CPhysImpact*)::dataDesc
 D datamap_t* DataMapInit<CPhysImpact>(CPhysImpact*)::nameHolder
 D datamap_t* DataMapInit<CPhysLength>(CPhysLength*)::dataDesc
 D datamap_t* DataMapInit<CPhysLength>(CPhysLength*)::nameHolder
 D datamap_t* DataMapInit<CPhysMagnet>(CPhysMagnet*)::dataDesc
 D datamap_t* DataMapInit<CPhysMagnet>(CPhysMagnet*)::nameHolder
 D datamap_t* DataMapInit<CPhysMotor>(CPhysMotor*)::dataDesc
 D datamap_t* DataMapInit<CPhysMotor>(CPhysMotor*)::nameHolder
 D datamap_t* DataMapInit<CPhysPulley>(CPhysPulley*)::dataDesc
 D datamap_t* DataMapInit<CPhysPulley>(CPhysPulley*)::nameHolder
 D datamap_t* DataMapInit<CPhysSlideConstraint>(CPhysSlideConstraint*)::dataDesc
 D datamap_t* DataMapInit<CPhysSlideConstraint>(CPhysSlideConstraint*)::nameHolder
 D datamap_t* DataMapInit<CPhysThruster>(CPhysThruster*)::dataDesc
 D datamap_t* DataMapInit<CPhysThruster>(CPhysThruster*)::nameHolder
 D datamap_t* DataMapInit<CPhysTorque>(CPhysTorque*)::dataDesc
 D datamap_t* DataMapInit<CPhysTorque>(CPhysTorque*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsCannister>(CPhysicsCannister*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsCannister>(CPhysicsCannister*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsEntitySolver>(CPhysicsEntitySolver*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsEntitySolver>(CPhysicsEntitySolver*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsNPCSolver>(CPhysicsNPCSolver*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsNPCSolver>(CPhysicsNPCSolver*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsProp>(CPhysicsProp*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsProp>(CPhysicsProp*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsPropMultiplayer>(CPhysicsPropMultiplayer*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsPropMultiplayer>(CPhysicsPropMultiplayer*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsPropRespawnable>(CPhysicsPropRespawnable*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsPropRespawnable>(CPhysicsPropRespawnable*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsShake>(CPhysicsShake*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsShake>(CPhysicsShake*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsSpring>(CPhysicsSpring*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsSpring>(CPhysicsSpring*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsWind>(CPhysicsWind*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsWind>(CPhysicsWind*)::nameHolder
 D datamap_t* DataMapInit<CPhysicsWire>(CPhysicsWire*)::dataDesc
 D datamap_t* DataMapInit<CPhysicsWire>(CPhysicsWire*)::nameHolder
 D datamap_t* DataMapInit<CPlasma>(CPlasma*)::dataDesc
 D datamap_t* DataMapInit<CPlasma>(CPlasma*)::nameHolder
 D datamap_t* DataMapInit<CPlayerLocalData>(CPlayerLocalData*)::dataDesc
 D datamap_t* DataMapInit<CPlayerLocalData>(CPlayerLocalData*)::nameHolder
 D datamap_t* DataMapInit<CPlayerPickupController>(CPlayerPickupController*)::dataDesc
 D datamap_t* DataMapInit<CPlayerPickupController>(CPlayerPickupController*)::nameHolder
 D datamap_t* DataMapInit<CPlayerResource>(CPlayerResource*)::dataDesc
 D datamap_t* DataMapInit<CPlayerResource>(CPlayerResource*)::nameHolder
 D datamap_t* DataMapInit<CPlayerState>(CPlayerState*)::dataDesc
 D datamap_t* DataMapInit<CPlayerState>(CPlayerState*)::nameHolder
 D datamap_t* DataMapInit<CPointAngleSensor>(CPointAngleSensor*)::dataDesc
 D datamap_t* DataMapInit<CPointAngleSensor>(CPointAngleSensor*)::nameHolder
 D datamap_t* DataMapInit<CPointAngularVelocitySensor>(CPointAngularVelocitySensor*)::dataDesc
 D datamap_t* DataMapInit<CPointAngularVelocitySensor>(CPointAngularVelocitySensor*)::nameHolder
 D datamap_t* DataMapInit<CPointBonusMapsAccessor>(CPointBonusMapsAccessor*)::dataDesc
 D datamap_t* DataMapInit<CPointBonusMapsAccessor>(CPointBonusMapsAccessor*)::nameHolder
 D datamap_t* DataMapInit<CPointBroadcastClientCommand>(CPointBroadcastClientCommand*)::dataDesc
 D datamap_t* DataMapInit<CPointBroadcastClientCommand>(CPointBroadcastClientCommand*)::nameHolder
 D datamap_t* DataMapInit<CPointCamera>(CPointCamera*)::dataDesc
 D datamap_t* DataMapInit<CPointCamera>(CPointCamera*)::nameHolder
 D datamap_t* DataMapInit<CPointChangelevel>(CPointChangelevel*)::dataDesc
 D datamap_t* DataMapInit<CPointChangelevel>(CPointChangelevel*)::nameHolder
 D datamap_t* DataMapInit<CPointClientCommand>(CPointClientCommand*)::dataDesc
 D datamap_t* DataMapInit<CPointClientCommand>(CPointClientCommand*)::nameHolder
 D datamap_t* DataMapInit<CPointCombineBallLauncher>(CPointCombineBallLauncher*)::dataDesc
 D datamap_t* DataMapInit<CPointCombineBallLauncher>(CPointCombineBallLauncher*)::nameHolder
 D datamap_t* DataMapInit<CPointCommentaryNode>(CPointCommentaryNode*)::dataDesc
 D datamap_t* DataMapInit<CPointCommentaryNode>(CPointCommentaryNode*)::nameHolder
 D datamap_t* DataMapInit<CPointDevShotCamera>(CPointDevShotCamera*)::dataDesc
 D datamap_t* DataMapInit<CPointDevShotCamera>(CPointDevShotCamera*)::nameHolder
 D datamap_t* DataMapInit<CPointEntityFinder>(CPointEntityFinder*)::dataDesc
 D datamap_t* DataMapInit<CPointEntityFinder>(CPointEntityFinder*)::nameHolder
 D datamap_t* DataMapInit<CPointFutbolShooter>(CPointFutbolShooter*)::dataDesc
 D datamap_t* DataMapInit<CPointFutbolShooter>(CPointFutbolShooter*)::nameHolder
 D datamap_t* DataMapInit<CPointGamestatsCounter>(CPointGamestatsCounter*)::dataDesc
 D datamap_t* DataMapInit<CPointGamestatsCounter>(CPointGamestatsCounter*)::nameHolder
 D datamap_t* DataMapInit<CPointHurt>(CPointHurt*)::dataDesc
 D datamap_t* DataMapInit<CPointHurt>(CPointHurt*)::nameHolder
 D datamap_t* DataMapInit<CPointPlayerMoveConstraint>(CPointPlayerMoveConstraint*)::dataDesc
 D datamap_t* DataMapInit<CPointPlayerMoveConstraint>(CPointPlayerMoveConstraint*)::nameHolder
 D datamap_t* DataMapInit<CPointProximitySensor>(CPointProximitySensor*)::dataDesc
 D datamap_t* DataMapInit<CPointProximitySensor>(CPointProximitySensor*)::nameHolder
 D datamap_t* DataMapInit<CPointServerCommand>(CPointServerCommand*)::dataDesc
 D datamap_t* DataMapInit<CPointServerCommand>(CPointServerCommand*)::nameHolder
 D datamap_t* DataMapInit<CPointSpotlight>(CPointSpotlight*)::dataDesc
 D datamap_t* DataMapInit<CPointSpotlight>(CPointSpotlight*)::nameHolder
 D datamap_t* DataMapInit<CPointSurvey>(CPointSurvey*)::dataDesc
 D datamap_t* DataMapInit<CPointSurvey>(CPointSurvey*)::nameHolder
 D datamap_t* DataMapInit<CPointTeleport>(CPointTeleport*)::dataDesc
 D datamap_t* DataMapInit<CPointTeleport>(CPointTeleport*)::nameHolder
 D datamap_t* DataMapInit<CPointTemplate>(CPointTemplate*)::dataDesc
 D datamap_t* DataMapInit<CPointTemplate>(CPointTemplate*)::nameHolder
 D datamap_t* DataMapInit<CPointVelocitySensor>(CPointVelocitySensor*)::dataDesc
 D datamap_t* DataMapInit<CPointVelocitySensor>(CPointVelocitySensor*)::nameHolder
 D datamap_t* DataMapInit<CPortalButtonTrigger>(CPortalButtonTrigger*)::dataDesc
 D datamap_t* DataMapInit<CPortalButtonTrigger>(CPortalButtonTrigger*)::nameHolder
 D datamap_t* DataMapInit<CPortalCredits>(CPortalCredits*)::dataDesc
 D datamap_t* DataMapInit<CPortalCredits>(CPortalCredits*)::nameHolder
 D datamap_t* DataMapInit<CPortalLaser>(CPortalLaser*)::dataDesc
 D datamap_t* DataMapInit<CPortalLaser>(CPortalLaser*)::nameHolder
 D datamap_t* DataMapInit<CPortalLaserTarget>(CPortalLaserTarget*)::dataDesc
 D datamap_t* DataMapInit<CPortalLaserTarget>(CPortalLaserTarget*)::nameHolder
 D datamap_t* DataMapInit<CPortalMPGameRulesProxy>(CPortalMPGameRulesProxy*)::dataDesc
 D datamap_t* DataMapInit<CPortalMPGameRulesProxy>(CPortalMPGameRulesProxy*)::nameHolder
 D datamap_t* DataMapInit<CPortalPlayerLocalData>(CPortalPlayerLocalData*)::dataDesc
 D datamap_t* DataMapInit<CPortalPlayerLocalData>(CPortalPlayerLocalData*)::nameHolder
 D datamap_t* DataMapInit<CPortalRaceCheckpoint>(CPortalRaceCheckpoint*)::dataDesc
 D datamap_t* DataMapInit<CPortalRaceCheckpoint>(CPortalRaceCheckpoint*)::nameHolder
 D datamap_t* DataMapInit<CPortalRagdoll>(CPortalRagdoll*)::dataDesc
 D datamap_t* DataMapInit<CPortalRagdoll>(CPortalRagdoll*)::nameHolder
 D datamap_t* DataMapInit<CPortalStatsController>(CPortalStatsController*)::dataDesc
 D datamap_t* DataMapInit<CPortalStatsController>(CPortalStatsController*)::nameHolder
 D datamap_t* DataMapInit<CPortal_Base2D>(CPortal_Base2D*)::dataDesc
 D datamap_t* DataMapInit<CPortal_Base2D>(CPortal_Base2D*)::nameHolder
 D datamap_t* DataMapInit<CPortal_Player>(CPortal_Player*)::dataDesc
 D datamap_t* DataMapInit<CPortal_Player>(CPortal_Player*)::nameHolder
 D datamap_t* DataMapInit<CPortal_PointPush>(CPortal_PointPush*)::dataDesc
 D datamap_t* DataMapInit<CPortal_PointPush>(CPortal_PointPush*)::nameHolder
 D datamap_t* DataMapInit<CPoseController>(CPoseController*)::dataDesc
 D datamap_t* DataMapInit<CPoseController>(CPoseController*)::nameHolder
 D datamap_t* DataMapInit<CPostProcessController>(CPostProcessController*)::dataDesc
 D datamap_t* DataMapInit<CPostProcessController>(CPostProcessController*)::nameHolder
 D datamap_t* DataMapInit<CPrecipitation>(CPrecipitation*)::dataDesc
 D datamap_t* DataMapInit<CPrecipitation>(CPrecipitation*)::nameHolder
 D datamap_t* DataMapInit<CPrecipitationBlocker>(CPrecipitationBlocker*)::dataDesc
 D datamap_t* DataMapInit<CPrecipitationBlocker>(CPrecipitationBlocker*)::nameHolder
 D datamap_t* DataMapInit<CProjectedDecal>(CProjectedDecal*)::dataDesc
 D datamap_t* DataMapInit<CProjectedDecal>(CProjectedDecal*)::nameHolder
 D datamap_t* DataMapInit<CProjectedTractorBeamEntity>(CProjectedTractorBeamEntity*)::dataDesc
 D datamap_t* DataMapInit<CProjectedTractorBeamEntity>(CProjectedTractorBeamEntity*)::nameHolder
 D datamap_t* DataMapInit<CProjectedWallEntity>(CProjectedWallEntity*)::dataDesc
 D datamap_t* DataMapInit<CProjectedWallEntity>(CProjectedWallEntity*)::nameHolder
 D datamap_t* DataMapInit<CPropButton>(CPropButton*)::dataDesc
 D datamap_t* DataMapInit<CPropButton>(CPropButton*)::nameHolder
 D datamap_t* DataMapInit<CPropCombineBall>(CPropCombineBall*)::dataDesc
 D datamap_t* DataMapInit<CPropCombineBall>(CPropCombineBall*)::nameHolder
 D datamap_t* DataMapInit<CPropDoorRotating>(CPropDoorRotating*)::dataDesc
 D datamap_t* DataMapInit<CPropDoorRotating>(CPropDoorRotating*)::nameHolder
 D datamap_t* DataMapInit<CPropEnergyBall>(CPropEnergyBall*)::dataDesc
 D datamap_t* DataMapInit<CPropEnergyBall>(CPropEnergyBall*)::nameHolder
 D datamap_t* DataMapInit<CPropExplodingFutbol>(CPropExplodingFutbol*)::dataDesc
 D datamap_t* DataMapInit<CPropExplodingFutbol>(CPropExplodingFutbol*)::nameHolder
 D datamap_t* DataMapInit<CPropFloorBallButton>(CPropFloorBallButton*)::dataDesc
 D datamap_t* DataMapInit<CPropFloorBallButton>(CPropFloorBallButton*)::nameHolder
 D datamap_t* DataMapInit<CPropFloorButton>(CPropFloorButton*)::dataDesc
 D datamap_t* DataMapInit<CPropFloorButton>(CPropFloorButton*)::nameHolder
 D datamap_t* DataMapInit<CPropFloorCubeButton>(CPropFloorCubeButton*)::dataDesc
 D datamap_t* DataMapInit<CPropFloorCubeButton>(CPropFloorCubeButton*)::nameHolder
 D datamap_t* DataMapInit<CPropFutbolSpawner>(CPropFutbolSpawner*)::dataDesc
 D datamap_t* DataMapInit<CPropFutbolSpawner>(CPropFutbolSpawner*)::nameHolder
 D datamap_t* DataMapInit<CPropGladosCore>(CPropGladosCore*)::dataDesc
 D datamap_t* DataMapInit<CPropGladosCore>(CPropGladosCore*)::nameHolder
 D datamap_t* DataMapInit<CPropGlassFutbol>(CPropGlassFutbol*)::dataDesc
 D datamap_t* DataMapInit<CPropGlassFutbol>(CPropGlassFutbol*)::nameHolder
 D datamap_t* DataMapInit<CPropIndicatorPanel>(CPropIndicatorPanel*)::dataDesc
 D datamap_t* DataMapInit<CPropIndicatorPanel>(CPropIndicatorPanel*)::nameHolder
 D datamap_t* DataMapInit<CPropLinkedPortalDoor>(CPropLinkedPortalDoor*)::dataDesc
 D datamap_t* DataMapInit<CPropLinkedPortalDoor>(CPropLinkedPortalDoor*)::nameHolder
 D datamap_t* DataMapInit<CPropMonsterBox>(CPropMonsterBox*)::dataDesc
 D datamap_t* DataMapInit<CPropMonsterBox>(CPropMonsterBox*)::nameHolder
 D datamap_t* DataMapInit<CPropPaintBomb>(CPropPaintBomb*)::dataDesc
 D datamap_t* DataMapInit<CPropPaintBomb>(CPropPaintBomb*)::nameHolder
 D datamap_t* DataMapInit<CPropPersonalitySphere>(CPropPersonalitySphere*)::dataDesc
 D datamap_t* DataMapInit<CPropPersonalitySphere>(CPropPersonalitySphere*)::nameHolder
 D datamap_t* DataMapInit<CPropPortalStatsDisplay>(CPropPortalStatsDisplay*)::dataDesc
 D datamap_t* DataMapInit<CPropPortalStatsDisplay>(CPropPortalStatsDisplay*)::nameHolder
 D datamap_t* DataMapInit<CPropRocketTripwire>(CPropRocketTripwire*)::dataDesc
 D datamap_t* DataMapInit<CPropRocketTripwire>(CPropRocketTripwire*)::nameHolder
 D datamap_t* DataMapInit<CPropTelescopicArm>(CPropTelescopicArm*)::dataDesc
 D datamap_t* DataMapInit<CPropTelescopicArm>(CPropTelescopicArm*)::nameHolder
 D datamap_t* DataMapInit<CPropTestChamberDoor>(CPropTestChamberDoor*)::dataDesc
 D datamap_t* DataMapInit<CPropTestChamberDoor>(CPropTestChamberDoor*)::nameHolder
 D datamap_t* DataMapInit<CPropTicTacToePanel>(CPropTicTacToePanel*)::dataDesc
 D datamap_t* DataMapInit<CPropTicTacToePanel>(CPropTicTacToePanel*)::nameHolder
 D datamap_t* DataMapInit<CPropTractorBeamProjector>(CPropTractorBeamProjector*)::dataDesc
 D datamap_t* DataMapInit<CPropTractorBeamProjector>(CPropTractorBeamProjector*)::nameHolder
 D datamap_t* DataMapInit<CPropUnderButton>(CPropUnderButton*)::dataDesc
 D datamap_t* DataMapInit<CPropUnderButton>(CPropUnderButton*)::nameHolder
 D datamap_t* DataMapInit<CPropUnderFloorButton>(CPropUnderFloorButton*)::dataDesc
 D datamap_t* DataMapInit<CPropUnderFloorButton>(CPropUnderFloorButton*)::nameHolder
 D datamap_t* DataMapInit<CPropVehicle>(CPropVehicle*)::dataDesc
 D datamap_t* DataMapInit<CPropVehicle>(CPropVehicle*)::nameHolder
 D datamap_t* DataMapInit<CPropVehicleChoreoGeneric>(CPropVehicleChoreoGeneric*)::dataDesc
 D datamap_t* DataMapInit<CPropVehicleChoreoGeneric>(CPropVehicleChoreoGeneric*)::nameHolder
 D datamap_t* DataMapInit<CPropVehicleDriveable>(CPropVehicleDriveable*)::dataDesc
 D datamap_t* DataMapInit<CPropVehicleDriveable>(CPropVehicleDriveable*)::nameHolder
 D datamap_t* DataMapInit<CPropVehicleViewController>(CPropVehicleViewController*)::dataDesc
 D datamap_t* DataMapInit<CPropVehicleViewController>(CPropVehicleViewController*)::nameHolder
 D datamap_t* DataMapInit<CPropWallProjector>(CPropWallProjector*)::dataDesc
 D datamap_t* DataMapInit<CPropWallProjector>(CPropWallProjector*)::nameHolder
 D datamap_t* DataMapInit<CPropWeightedCube>(CPropWeightedCube*)::dataDesc
 D datamap_t* DataMapInit<CPropWeightedCube>(CPropWeightedCube*)::nameHolder
 D datamap_t* DataMapInit<CProp_Hallucination>(CProp_Hallucination*)::dataDesc
 D datamap_t* DataMapInit<CProp_Hallucination>(CProp_Hallucination*)::nameHolder
 D datamap_t* DataMapInit<CProp_Mirror>(CProp_Mirror*)::dataDesc
 D datamap_t* DataMapInit<CProp_Mirror>(CProp_Mirror*)::nameHolder
 D datamap_t* DataMapInit<CProp_Portal>(CProp_Portal*)::dataDesc
 D datamap_t* DataMapInit<CProp_Portal>(CProp_Portal*)::nameHolder
 D datamap_t* DataMapInit<CRagdollBoogie>(CRagdollBoogie*)::dataDesc
 D datamap_t* DataMapInit<CRagdollBoogie>(CRagdollBoogie*)::nameHolder
 D datamap_t* DataMapInit<CRagdollConstraint>(CRagdollConstraint*)::dataDesc
 D datamap_t* DataMapInit<CRagdollConstraint>(CRagdollConstraint*)::nameHolder
 D datamap_t* DataMapInit<CRagdollMagnet>(CRagdollMagnet*)::dataDesc
 D datamap_t* DataMapInit<CRagdollMagnet>(CRagdollMagnet*)::nameHolder
 D datamap_t* DataMapInit<CRagdollManager>(CRagdollManager*)::dataDesc
 D datamap_t* DataMapInit<CRagdollManager>(CRagdollManager*)::nameHolder
 D datamap_t* DataMapInit<CRagdollProp>(CRagdollProp*)::dataDesc
 D datamap_t* DataMapInit<CRagdollProp>(CRagdollProp*)::nameHolder
 D datamap_t* DataMapInit<CRagdollPropAttached>(CRagdollPropAttached*)::dataDesc
 D datamap_t* DataMapInit<CRagdollPropAttached>(CRagdollPropAttached*)::nameHolder
 D datamap_t* DataMapInit<CRallyPoint>(CRallyPoint*)::dataDesc
 D datamap_t* DataMapInit<CRallyPoint>(CRallyPoint*)::nameHolder
 D datamap_t* DataMapInit<CRandSimTimer>(CRandSimTimer*)::dataDesc
 D datamap_t* DataMapInit<CRandSimTimer>(CRandSimTimer*)::nameHolder
 D datamap_t* DataMapInit<CRandStopwatch>(CRandStopwatch*)::dataDesc
 D datamap_t* DataMapInit<CRandStopwatch>(CRandStopwatch*)::nameHolder
 D datamap_t* DataMapInit<CRecharge>(CRecharge*)::dataDesc
 D datamap_t* DataMapInit<CRecharge>(CRecharge*)::nameHolder
 D datamap_t* DataMapInit<CRevertSaved>(CRevertSaved*)::dataDesc
 D datamap_t* DataMapInit<CRevertSaved>(CRevertSaved*)::nameHolder
 D datamap_t* DataMapInit<CRocket_Turret_Projectile>(CRocket_Turret_Projectile*)::dataDesc
 D datamap_t* DataMapInit<CRocket_Turret_Projectile>(CRocket_Turret_Projectile*)::nameHolder
 D datamap_t* DataMapInit<CRopeAnchor>(CRopeAnchor*)::dataDesc
 D datamap_t* DataMapInit<CRopeAnchor>(CRopeAnchor*)::nameHolder
 D datamap_t* DataMapInit<CRopeKeyframe>(CRopeKeyframe*)::dataDesc
 D datamap_t* DataMapInit<CRopeKeyframe>(CRopeKeyframe*)::nameHolder
 D datamap_t* DataMapInit<CRotDoor>(CRotDoor*)::dataDesc
 D datamap_t* DataMapInit<CRotDoor>(CRotDoor*)::nameHolder
 D datamap_t* DataMapInit<CRotorWashShooter>(CRotorWashShooter*)::dataDesc
 D datamap_t* DataMapInit<CRotorWashShooter>(CRotorWashShooter*)::nameHolder
 D datamap_t* DataMapInit<CRuleEntity>(CRuleEntity*)::dataDesc
 D datamap_t* DataMapInit<CRuleEntity>(CRuleEntity*)::nameHolder
 D datamap_t* DataMapInit<CRulePointEntity>(CRulePointEntity*)::dataDesc
 D datamap_t* DataMapInit<CRulePointEntity>(CRulePointEntity*)::nameHolder
 D datamap_t* DataMapInit<CSceneEntity>(CSceneEntity*)::dataDesc
 D datamap_t* DataMapInit<CSceneEntity>(CSceneEntity*)::nameHolder
 D datamap_t* DataMapInit<CSceneListManager>(CSceneListManager*)::dataDesc
 D datamap_t* DataMapInit<CSceneListManager>(CSceneListManager*)::nameHolder
 D datamap_t* DataMapInit<CSceneManager>(CSceneManager*)::dataDesc
 D datamap_t* DataMapInit<CSceneManager>(CSceneManager*)::nameHolder
 D datamap_t* DataMapInit<CScriptIntro>(CScriptIntro*)::dataDesc
 D datamap_t* DataMapInit<CScriptIntro>(CScriptIntro*)::nameHolder
 D datamap_t* DataMapInit<CScriptedTarget>(CScriptedTarget*)::dataDesc
 D datamap_t* DataMapInit<CScriptedTarget>(CScriptedTarget*)::nameHolder
 D datamap_t* DataMapInit<CServerNetworkProperty>(CServerNetworkProperty*)::dataDesc
 D datamap_t* DataMapInit<CServerNetworkProperty>(CServerNetworkProperty*)::nameHolder
 D datamap_t* DataMapInit<CShadowControl>(CShadowControl*)::dataDesc
 D datamap_t* DataMapInit<CShadowControl>(CShadowControl*)::nameHolder
 D datamap_t* DataMapInit<CSimTimer>(CSimTimer*)::dataDesc
 D datamap_t* DataMapInit<CSimTimer>(CSimTimer*)::nameHolder
 D datamap_t* DataMapInit<CSimpleSimTimer>(CSimpleSimTimer*)::dataDesc
 D datamap_t* DataMapInit<CSimpleSimTimer>(CSimpleSimTimer*)::nameHolder
 D datamap_t* DataMapInit<CSkyCamera>(CSkyCamera*)::dataDesc
 D datamap_t* DataMapInit<CSkyCamera>(CSkyCamera*)::nameHolder
 D datamap_t* DataMapInit<CSkyboxSwapper>(CSkyboxSwapper*)::dataDesc
 D datamap_t* DataMapInit<CSkyboxSwapper>(CSkyboxSwapper*)::nameHolder
 D datamap_t* DataMapInit<CSlideshowDisplay>(CSlideshowDisplay*)::dataDesc
 D datamap_t* DataMapInit<CSlideshowDisplay>(CSlideshowDisplay*)::nameHolder
 D datamap_t* DataMapInit<CSmokeStack>(CSmokeStack*)::dataDesc
 D datamap_t* DataMapInit<CSmokeStack>(CSmokeStack*)::nameHolder
 D datamap_t* DataMapInit<CSmokeStackLightInfo>(CSmokeStackLightInfo*)::dataDesc
 D datamap_t* DataMapInit<CSmokeStackLightInfo>(CSmokeStackLightInfo*)::nameHolder
 D datamap_t* DataMapInit<CSound>(CSound*)::dataDesc
 D datamap_t* DataMapInit<CSound>(CSound*)::nameHolder
 D datamap_t* DataMapInit<CSoundEnt>(CSoundEnt*)::dataDesc
 D datamap_t* DataMapInit<CSoundEnt>(CSoundEnt*)::nameHolder
 D datamap_t* DataMapInit<CSoundEnvelope>(CSoundEnvelope*)::dataDesc
 D datamap_t* DataMapInit<CSoundEnvelope>(CSoundEnvelope*)::nameHolder
 D datamap_t* DataMapInit<CSoundPatch>(CSoundPatch*)::dataDesc
 D datamap_t* DataMapInit<CSoundPatch>(CSoundPatch*)::nameHolder
 D datamap_t* DataMapInit<CSpatialEntity>(CSpatialEntity*)::dataDesc
 D datamap_t* DataMapInit<CSpatialEntity>(CSpatialEntity*)::nameHolder
 D datamap_t* DataMapInit<CSpeaker>(CSpeaker*)::dataDesc
 D datamap_t* DataMapInit<CSpeaker>(CSpeaker*)::nameHolder
 D datamap_t* DataMapInit<CSpotlightEnd>(CSpotlightEnd*)::dataDesc
 D datamap_t* DataMapInit<CSpotlightEnd>(CSpotlightEnd*)::nameHolder
 D datamap_t* DataMapInit<CSprite>(CSprite*)::dataDesc
 D datamap_t* DataMapInit<CSprite>(CSprite*)::nameHolder
 D datamap_t* DataMapInit<CSpriteTrail>(CSpriteTrail*)::dataDesc
 D datamap_t* DataMapInit<CSpriteTrail>(CSpriteTrail*)::nameHolder
 D datamap_t* DataMapInit<CStatueProp>(CStatueProp*)::dataDesc
 D datamap_t* DataMapInit<CStatueProp>(CStatueProp*)::nameHolder
 D datamap_t* DataMapInit<CSteamJet>(CSteamJet*)::dataDesc
 D datamap_t* DataMapInit<CSteamJet>(CSteamJet*)::nameHolder
 D datamap_t* DataMapInit<CStopwatch>(CStopwatch*)::dataDesc
 D datamap_t* DataMapInit<CStopwatch>(CStopwatch*)::nameHolder
 D datamap_t* DataMapInit<CStopwatchBase>(CStopwatchBase*)::dataDesc
 D datamap_t* DataMapInit<CStopwatchBase>(CStopwatchBase*)::nameHolder
 D datamap_t* DataMapInit<CStripWeapons>(CStripWeapons*)::dataDesc
 D datamap_t* DataMapInit<CStripWeapons>(CStripWeapons*)::nameHolder
 D datamap_t* DataMapInit<CSun>(CSun*)::dataDesc
 D datamap_t* DataMapInit<CSun>(CSun*)::nameHolder
 D datamap_t* DataMapInit<CSunlightShadowControl>(CSunlightShadowControl*)::dataDesc
 D datamap_t* DataMapInit<CSunlightShadowControl>(CSunlightShadowControl*)::nameHolder
 D datamap_t* DataMapInit<CTakeDamageInfo>(CTakeDamageInfo*)::dataDesc
 D datamap_t* DataMapInit<CTakeDamageInfo>(CTakeDamageInfo*)::nameHolder
 D datamap_t* DataMapInit<CTankTargetChange>(CTankTargetChange*)::dataDesc
 D datamap_t* DataMapInit<CTankTargetChange>(CTankTargetChange*)::nameHolder
 D datamap_t* DataMapInit<CTankTrainAI>(CTankTrainAI*)::dataDesc
 D datamap_t* DataMapInit<CTankTrainAI>(CTankTrainAI*)::nameHolder
 D datamap_t* DataMapInit<CTargetCDAudioRep>(CTargetCDAudioRep*)::dataDesc
 D datamap_t* DataMapInit<CTargetCDAudioRep>(CTargetCDAudioRep*)::nameHolder
 D datamap_t* DataMapInit<CTargetChangeGravity>(CTargetChangeGravity*)::dataDesc
 D datamap_t* DataMapInit<CTargetChangeGravity>(CTargetChangeGravity*)::nameHolder
 D datamap_t* DataMapInit<CTeamSpawnPoint>(CTeamSpawnPoint*)::dataDesc
 D datamap_t* DataMapInit<CTeamSpawnPoint>(CTeamSpawnPoint*)::nameHolder
 D datamap_t* DataMapInit<CTeamVehicleSpawnPoint>(CTeamVehicleSpawnPoint*)::dataDesc
 D datamap_t* DataMapInit<CTeamVehicleSpawnPoint>(CTeamVehicleSpawnPoint*)::nameHolder
 D datamap_t* DataMapInit<CTemplateNPCMaker>(CTemplateNPCMaker*)::dataDesc
 D datamap_t* DataMapInit<CTemplateNPCMaker>(CTemplateNPCMaker*)::nameHolder
 D datamap_t* DataMapInit<CTesla>(CTesla*)::dataDesc
 D datamap_t* DataMapInit<CTesla>(CTesla*)::nameHolder
 D datamap_t* DataMapInit<CTestTraceline>(CTestTraceline*)::dataDesc
 D datamap_t* DataMapInit<CTestTraceline>(CTestTraceline*)::nameHolder
 D datamap_t* DataMapInit<CTextureToggle>(CTextureToggle*)::dataDesc
 D datamap_t* DataMapInit<CTextureToggle>(CTextureToggle*)::nameHolder
 D datamap_t* DataMapInit<CThrustController>(CThrustController*)::dataDesc
 D datamap_t* DataMapInit<CThrustController>(CThrustController*)::nameHolder
 D datamap_t* DataMapInit<CTimeline>(CTimeline*)::dataDesc
 D datamap_t* DataMapInit<CTimeline>(CTimeline*)::nameHolder
 D datamap_t* DataMapInit<CTimerEntity>(CTimerEntity*)::dataDesc
 D datamap_t* DataMapInit<CTimerEntity>(CTimerEntity*)::nameHolder
 D datamap_t* DataMapInit<CTonemapTrigger>(CTonemapTrigger*)::dataDesc
 D datamap_t* DataMapInit<CTonemapTrigger>(CTonemapTrigger*)::nameHolder
 D datamap_t* DataMapInit<CTriggerAutoCrouch>(CTriggerAutoCrouch*)::dataDesc
 D datamap_t* DataMapInit<CTriggerAutoCrouch>(CTriggerAutoCrouch*)::nameHolder
 D datamap_t* DataMapInit<CTriggerBrush>(CTriggerBrush*)::dataDesc
 D datamap_t* DataMapInit<CTriggerBrush>(CTriggerBrush*)::nameHolder
 D datamap_t* DataMapInit<CTriggerCamera>(CTriggerCamera*)::dataDesc
 D datamap_t* DataMapInit<CTriggerCamera>(CTriggerCamera*)::nameHolder
 D datamap_t* DataMapInit<CTriggerCameraMultiplayer>(CTriggerCameraMultiplayer*)::dataDesc
 D datamap_t* DataMapInit<CTriggerCameraMultiplayer>(CTriggerCameraMultiplayer*)::nameHolder
 D datamap_t* DataMapInit<CTriggerCatapult>(CTriggerCatapult*)::dataDesc
 D datamap_t* DataMapInit<CTriggerCatapult>(CTriggerCatapult*)::nameHolder
 D datamap_t* DataMapInit<CTriggerGravity>(CTriggerGravity*)::dataDesc
 D datamap_t* DataMapInit<CTriggerGravity>(CTriggerGravity*)::nameHolder
 D datamap_t* DataMapInit<CTriggerHierarchy>(CTriggerHierarchy*)::dataDesc
 D datamap_t* DataMapInit<CTriggerHierarchy>(CTriggerHierarchy*)::nameHolder
 D datamap_t* DataMapInit<CTriggerHurt>(CTriggerHurt*)::dataDesc
 D datamap_t* DataMapInit<CTriggerHurt>(CTriggerHurt*)::nameHolder
 D datamap_t* DataMapInit<CTriggerImpact>(CTriggerImpact*)::dataDesc
 D datamap_t* DataMapInit<CTriggerImpact>(CTriggerImpact*)::nameHolder
 D datamap_t* DataMapInit<CTriggerLook>(CTriggerLook*)::dataDesc
 D datamap_t* DataMapInit<CTriggerLook>(CTriggerLook*)::nameHolder
 D datamap_t* DataMapInit<CTriggerMultiple>(CTriggerMultiple*)::dataDesc
 D datamap_t* DataMapInit<CTriggerMultiple>(CTriggerMultiple*)::nameHolder
 D datamap_t* DataMapInit<CTriggerPaintCleanser>(CTriggerPaintCleanser*)::dataDesc
 D datamap_t* DataMapInit<CTriggerPaintCleanser>(CTriggerPaintCleanser*)::nameHolder
 D datamap_t* DataMapInit<CTriggerPhysicsTrap>(CTriggerPhysicsTrap*)::dataDesc
 D datamap_t* DataMapInit<CTriggerPhysicsTrap>(CTriggerPhysicsTrap*)::nameHolder
 D datamap_t* DataMapInit<CTriggerPingDetector>(CTriggerPingDetector*)::dataDesc
 D datamap_t* DataMapInit<CTriggerPingDetector>(CTriggerPingDetector*)::nameHolder
 D datamap_t* DataMapInit<CTriggerPlayerMovement>(CTriggerPlayerMovement*)::dataDesc
 D datamap_t* DataMapInit<CTriggerPlayerMovement>(CTriggerPlayerMovement*)::nameHolder
 D datamap_t* DataMapInit<CTriggerPlayerTeam>(CTriggerPlayerTeam*)::dataDesc
 D datamap_t* DataMapInit<CTriggerPlayerTeam>(CTriggerPlayerTeam*)::nameHolder
 D datamap_t* DataMapInit<CTriggerPortalCleanser>(CTriggerPortalCleanser*)::dataDesc
 D datamap_t* DataMapInit<CTriggerPortalCleanser>(CTriggerPortalCleanser*)::nameHolder
 D datamap_t* DataMapInit<CTriggerProximity>(CTriggerProximity*)::dataDesc
 D datamap_t* DataMapInit<CTriggerProximity>(CTriggerProximity*)::nameHolder
 D datamap_t* DataMapInit<CTriggerPush>(CTriggerPush*)::dataDesc
 D datamap_t* DataMapInit<CTriggerPush>(CTriggerPush*)::nameHolder
 D datamap_t* DataMapInit<CTriggerRemove>(CTriggerRemove*)::dataDesc
 D datamap_t* DataMapInit<CTriggerRemove>(CTriggerRemove*)::nameHolder
 D datamap_t* DataMapInit<CTriggerSave>(CTriggerSave*)::dataDesc
 D datamap_t* DataMapInit<CTriggerSave>(CTriggerSave*)::nameHolder
 D datamap_t* DataMapInit<CTriggerSoundscape>(CTriggerSoundscape*)::dataDesc
 D datamap_t* DataMapInit<CTriggerSoundscape>(CTriggerSoundscape*)::nameHolder
 D datamap_t* DataMapInit<CTriggerTeleport>(CTriggerTeleport*)::dataDesc
 D datamap_t* DataMapInit<CTriggerTeleport>(CTriggerTeleport*)::nameHolder
 D datamap_t* DataMapInit<CTriggerToggleSave>(CTriggerToggleSave*)::dataDesc
 D datamap_t* DataMapInit<CTriggerToggleSave>(CTriggerToggleSave*)::nameHolder
 D datamap_t* DataMapInit<CTriggerVPhysicsMotion>(CTriggerVPhysicsMotion*)::dataDesc
 D datamap_t* DataMapInit<CTriggerVPhysicsMotion>(CTriggerVPhysicsMotion*)::nameHolder
 D datamap_t* DataMapInit<CTriggerViewProxy>(CTriggerViewProxy*)::dataDesc
 D datamap_t* DataMapInit<CTriggerViewProxy>(CTriggerViewProxy*)::nameHolder
 D datamap_t* DataMapInit<CTriggerWateryDeath>(CTriggerWateryDeath*)::dataDesc
 D datamap_t* DataMapInit<CTriggerWateryDeath>(CTriggerWateryDeath*)::nameHolder
 D datamap_t* DataMapInit<CTriggerWeaponDissolve>(CTriggerWeaponDissolve*)::dataDesc
 D datamap_t* DataMapInit<CTriggerWeaponDissolve>(CTriggerWeaponDissolve*)::nameHolder
 D datamap_t* DataMapInit<CTriggerWeaponStrip>(CTriggerWeaponStrip*)::dataDesc
 D datamap_t* DataMapInit<CTriggerWeaponStrip>(CTriggerWeaponStrip*)::nameHolder
 D datamap_t* DataMapInit<CTriggerWind>(CTriggerWind*)::dataDesc
 D datamap_t* DataMapInit<CTriggerWind>(CTriggerWind*)::nameHolder
 D datamap_t* DataMapInit<CTrigger_TractorBeam>(CTrigger_TractorBeam*)::dataDesc
 D datamap_t* DataMapInit<CTrigger_TractorBeam>(CTrigger_TractorBeam*)::nameHolder
 D datamap_t* DataMapInit<CTurretTipController>(CTurretTipController*)::dataDesc
 D datamap_t* DataMapInit<CTurretTipController>(CTurretTipController*)::nameHolder
 D datamap_t* DataMapInit<CVGuiScreen>(CVGuiScreen*)::dataDesc
 D datamap_t* DataMapInit<CVGuiScreen>(CVGuiScreen*)::nameHolder
 D datamap_t* DataMapInit<CWC_UpdateIgnoreList>(CWC_UpdateIgnoreList*)::dataDesc
 D datamap_t* DataMapInit<CWC_UpdateIgnoreList>(CWC_UpdateIgnoreList*)::nameHolder
 D datamap_t* DataMapInit<CWaterBullet>(CWaterBullet*)::dataDesc
 D datamap_t* DataMapInit<CWaterBullet>(CWaterBullet*)::nameHolder
 D datamap_t* DataMapInit<CWaterLODControl>(CWaterLODControl*)::dataDesc
 D datamap_t* DataMapInit<CWaterLODControl>(CWaterLODControl*)::nameHolder
 D datamap_t* DataMapInit<CWateryDeathLeech>(CWateryDeathLeech*)::dataDesc
 D datamap_t* DataMapInit<CWateryDeathLeech>(CWateryDeathLeech*)::nameHolder
 D datamap_t* DataMapInit<CWeaponCycler>(CWeaponCycler*)::dataDesc
 D datamap_t* DataMapInit<CWeaponCycler>(CWeaponCycler*)::nameHolder
 D datamap_t* DataMapInit<CWeaponItemBase>(CWeaponItemBase*)::dataDesc
 D datamap_t* DataMapInit<CWeaponItemBase>(CWeaponItemBase*)::nameHolder
 D datamap_t* DataMapInit<CWeaponPaintGun>(CWeaponPaintGun*)::dataDesc
 D datamap_t* DataMapInit<CWeaponPaintGun>(CWeaponPaintGun*)::nameHolder
 D datamap_t* DataMapInit<CWeaponPortalBase>(CWeaponPortalBase*)::dataDesc
 D datamap_t* DataMapInit<CWeaponPortalBase>(CWeaponPortalBase*)::nameHolder
 D datamap_t* DataMapInit<CWeaponPortalgun>(CWeaponPortalgun*)::dataDesc
 D datamap_t* DataMapInit<CWeaponPortalgun>(CWeaponPortalgun*)::nameHolder
 D datamap_t* DataMapInit<CWeaponPromoAntennaBall>(CWeaponPromoAntennaBall*)::dataDesc
 D datamap_t* DataMapInit<CWeaponPromoAntennaBall>(CWeaponPromoAntennaBall*)::nameHolder
 D datamap_t* DataMapInit<CWeaponPromoAntennaEgg>(CWeaponPromoAntennaEgg*)::dataDesc
 D datamap_t* DataMapInit<CWeaponPromoAntennaEgg>(CWeaponPromoAntennaEgg*)::nameHolder
 D datamap_t* DataMapInit<CWeaponPromoHelmetBall>(CWeaponPromoHelmetBall*)::dataDesc
 D datamap_t* DataMapInit<CWeaponPromoHelmetBall>(CWeaponPromoHelmetBall*)::nameHolder
 D datamap_t* DataMapInit<CWeaponPromoHelmetEgg>(CWeaponPromoHelmetEgg*)::dataDesc
 D datamap_t* DataMapInit<CWeaponPromoHelmetEgg>(CWeaponPromoHelmetEgg*)::nameHolder
 D datamap_t* DataMapInit<CWeightButton>(CWeightButton*)::dataDesc
 D datamap_t* DataMapInit<CWeightButton>(CWeightButton*)::nameHolder
 D datamap_t* DataMapInit<CWindowPane>(CWindowPane*)::dataDesc
 D datamap_t* DataMapInit<CWindowPane>(CWindowPane*)::nameHolder
 D datamap_t* DataMapInit<CWorld>(CWorld*)::dataDesc
 D datamap_t* DataMapInit<CWorld>(CWorld*)::nameHolder
 D datamap_t* DataMapInit<CWorldItem>(CWorldItem*)::dataDesc
 D datamap_t* DataMapInit<CWorldItem>(CWorldItem*)::nameHolder
 D datamap_t* DataMapInit<CWreckage>(CWreckage*)::dataDesc
 D datamap_t* DataMapInit<CWreckage>(CWreckage*)::nameHolder
 D datamap_t* DataMapInit<CaptionLookup_t>(CaptionLookup_t*)::dataDesc
 D datamap_t* DataMapInit<CaptionLookup_t>(CaptionLookup_t*)::nameHolder
 D datamap_t* DataMapInit<CompiledCaptionHeader_t>(CompiledCaptionHeader_t*)::dataDesc
 D datamap_t* DataMapInit<CompiledCaptionHeader_t>(CompiledCaptionHeader_t*)::nameHolder
 D datamap_t* DataMapInit<ConceptHistory_t>(ConceptHistory_t*)::dataDesc
 D datamap_t* DataMapInit<ConceptHistory_t>(ConceptHistory_t*)::nameHolder
 D datamap_t* DataMapInit<DustTrail>(DustTrail*)::dataDesc
 D datamap_t* DataMapInit<DustTrail>(DustTrail*)::nameHolder
 D datamap_t* DataMapInit<EntityParticleTrailInfo_t>(EntityParticleTrailInfo_t*)::dataDesc
 D datamap_t* DataMapInit<EntityParticleTrailInfo_t>(EntityParticleTrailInfo_t*)::nameHolder
 D datamap_t* DataMapInit<EventQueuePrioritizedEvent_t>(EventQueuePrioritizedEvent_t*)::dataDesc
 D datamap_t* DataMapInit<EventQueuePrioritizedEvent_t>(EventQueuePrioritizedEvent_t*)::nameHolder
 D datamap_t* DataMapInit<FilterDamageType>(FilterDamageType*)::dataDesc
 D datamap_t* DataMapInit<FilterDamageType>(FilterDamageType*)::nameHolder
 D datamap_t* DataMapInit<FilterTeam>(FilterTeam*)::dataDesc
 D datamap_t* DataMapInit<FilterTeam>(FilterTeam*)::nameHolder
 D datamap_t* DataMapInit<FizzlerEffects>(FizzlerEffects*)::dataDesc
 D datamap_t* DataMapInit<FizzlerEffects>(FizzlerEffects*)::nameHolder
 D datamap_t* DataMapInit<FizzlerMultiOriginSoundPlayer>(FizzlerMultiOriginSoundPlayer*)::dataDesc
 D datamap_t* DataMapInit<FizzlerMultiOriginSoundPlayer>(FizzlerMultiOriginSoundPlayer*)::nameHolder
 D datamap_t* DataMapInit<HintNodeData>(HintNodeData*)::dataDesc
 D datamap_t* DataMapInit<HintNodeData>(HintNodeData*)::nameHolder
 D datamap_t* DataMapInit<IntervalTimer>(IntervalTimer*)::dataDesc
 D datamap_t* DataMapInit<IntervalTimer>(IntervalTimer*)::nameHolder
 D datamap_t* DataMapInit<PaintPowerInfo_t>(PaintPowerInfo_t*)::dataDesc
 D datamap_t* DataMapInit<PaintPowerInfo_t>(PaintPowerInfo_t*)::nameHolder
 D datamap_t* DataMapInit<ParticleSmokeGrenade>(ParticleSmokeGrenade*)::dataDesc
 D datamap_t* DataMapInit<ParticleSmokeGrenade>(ParticleSmokeGrenade*)::nameHolder
 D datamap_t* DataMapInit<PhysBlockHeader_t>(PhysBlockHeader_t*)::dataDesc
 D datamap_t* DataMapInit<PhysBlockHeader_t>(PhysBlockHeader_t*)::nameHolder
 D datamap_t* DataMapInit<PhysObjectHeader_t>(PhysObjectHeader_t*)::dataDesc
 D datamap_t* DataMapInit<PhysObjectHeader_t>(PhysObjectHeader_t*)::nameHolder
 D datamap_t* DataMapInit<PortalPlayerStatistics_t>(PortalPlayerStatistics_t*)::dataDesc
 D datamap_t* DataMapInit<PortalPlayerStatistics_t>(PortalPlayerStatistics_t*)::nameHolder
 D datamap_t* DataMapInit<Relationship_t>(Relationship_t*)::dataDesc
 D datamap_t* DataMapInit<Relationship_t>(Relationship_t*)::nameHolder
 D datamap_t* DataMapInit<ResponseContext_t>(ResponseContext_t*)::dataDesc
 D datamap_t* DataMapInit<ResponseContext_t>(ResponseContext_t*)::nameHolder
 D datamap_t* DataMapInit<ResponseRules::CRR_Response>(ResponseRules::CRR_Response*)::dataDesc
 D datamap_t* DataMapInit<ResponseRules::CRR_Response>(ResponseRules::CRR_Response*)::nameHolder
 D datamap_t* DataMapInit<ResponseRules::ParserResponse>(ResponseRules::ParserResponse*)::dataDesc
 D datamap_t* DataMapInit<ResponseRules::ParserResponse>(ResponseRules::ParserResponse*)::nameHolder
 D datamap_t* DataMapInit<ResponseRules::ResponseGroup>(ResponseRules::ResponseGroup*)::dataDesc
 D datamap_t* DataMapInit<ResponseRules::ResponseGroup>(ResponseRules::ResponseGroup*)::nameHolder
 D datamap_t* DataMapInit<ResponseRules::ResponseParams>(ResponseRules::ResponseParams*)::dataDesc
 D datamap_t* DataMapInit<ResponseRules::ResponseParams>(ResponseRules::ResponseParams*)::nameHolder
 D datamap_t* DataMapInit<RocketTrail>(RocketTrail*)::dataDesc
 D datamap_t* DataMapInit<RocketTrail>(RocketTrail*)::nameHolder
 D datamap_t* DataMapInit<SaveRestoreBlockHeader_t>(SaveRestoreBlockHeader_t*)::dataDesc
 D datamap_t* DataMapInit<SaveRestoreBlockHeader_t>(SaveRestoreBlockHeader_t*)::nameHolder
 D datamap_t* DataMapInit<ScriptedNPCInteraction_Phases_t>(ScriptedNPCInteraction_Phases_t*)::dataDesc
 D datamap_t* DataMapInit<ScriptedNPCInteraction_Phases_t>(ScriptedNPCInteraction_Phases_t*)::nameHolder
 D datamap_t* DataMapInit<ScriptedNPCInteraction_t>(ScriptedNPCInteraction_t*)::dataDesc
 D datamap_t* DataMapInit<ScriptedNPCInteraction_t>(ScriptedNPCInteraction_t*)::nameHolder
 D datamap_t* DataMapInit<SmokeTrail>(SmokeTrail*)::dataDesc
 D datamap_t* DataMapInit<SmokeTrail>(SmokeTrail*)::nameHolder
 D datamap_t* DataMapInit<SoundCommand_t>(SoundCommand_t*)::dataDesc
 D datamap_t* DataMapInit<SoundCommand_t>(SoundCommand_t*)::nameHolder
 D datamap_t* DataMapInit<SporeExplosion>(SporeExplosion*)::dataDesc
 D datamap_t* DataMapInit<SporeExplosion>(SporeExplosion*)::nameHolder
 D datamap_t* DataMapInit<SporeTrail>(SporeTrail*)::dataDesc
 D datamap_t* DataMapInit<SporeTrail>(SporeTrail*)::nameHolder
 D datamap_t* DataMapInit<TemplateEntityData_t>(TemplateEntityData_t*)::dataDesc
 D datamap_t* DataMapInit<TemplateEntityData_t>(TemplateEntityData_t*)::nameHolder
 D datamap_t* DataMapInit<UnreachableEnt_t>(UnreachableEnt_t*)::dataDesc
 D datamap_t* DataMapInit<UnreachableEnt_t>(UnreachableEnt_t*)::nameHolder
 D datamap_t* DataMapInit<ViewSmoothingData_t>(ViewSmoothingData_t*)::dataDesc
 D datamap_t* DataMapInit<ViewSmoothingData_t>(ViewSmoothingData_t*)::nameHolder
 D datamap_t* DataMapInit<audioparams_t>(audioparams_t*)::dataDesc
 D datamap_t* DataMapInit<audioparams_t>(audioparams_t*)::nameHolder
 D datamap_t* DataMapInit<entitytable_t>(entitytable_t*)::dataDesc
 D datamap_t* DataMapInit<entitytable_t>(entitytable_t*)::nameHolder
 D datamap_t* DataMapInit<flexsetting_t>(flexsetting_t*)::dataDesc
 D datamap_t* DataMapInit<flexsetting_t>(flexsetting_t*)::nameHolder
 D datamap_t* DataMapInit<flexsettinghdr_t>(flexsettinghdr_t*)::dataDesc
 D datamap_t* DataMapInit<flexsettinghdr_t>(flexsettinghdr_t*)::nameHolder
 D datamap_t* DataMapInit<flexweight_t>(flexweight_t*)::dataDesc
 D datamap_t* DataMapInit<flexweight_t>(flexweight_t*)::nameHolder
 D datamap_t* DataMapInit<fogparams_t>(fogparams_t*)::dataDesc
 D datamap_t* DataMapInit<fogparams_t>(fogparams_t*)::nameHolder
 D datamap_t* DataMapInit<fogplayerparams_t>(fogplayerparams_t*)::dataDesc
 D datamap_t* DataMapInit<fogplayerparams_t>(fogplayerparams_t*)::nameHolder
 D datamap_t* DataMapInit<game_shadowcontrol_params_t>(game_shadowcontrol_params_t*)::dataDesc
 D datamap_t* DataMapInit<game_shadowcontrol_params_t>(game_shadowcontrol_params_t*)::nameHolder
 D datamap_t* DataMapInit<globalentity_t>(globalentity_t*)::dataDesc
 D datamap_t* DataMapInit<globalentity_t>(globalentity_t*)::nameHolder
 D datamap_t* DataMapInit<locksound_t>(locksound_t*)::dataDesc
 D datamap_t* DataMapInit<locksound_t>(locksound_t*)::nameHolder
 D datamap_t* DataMapInit<magnetted_objects_t>(magnetted_objects_t*)::dataDesc
 D datamap_t* DataMapInit<magnetted_objects_t>(magnetted_objects_t*)::nameHolder
 D datamap_t* DataMapInit<modifiedconvars_t>(modifiedconvars_t*)::dataDesc
 D datamap_t* DataMapInit<modifiedconvars_t>(modifiedconvars_t*)::nameHolder
 D datamap_t* DataMapInit<physfollower_t>(physfollower_t*)::dataDesc
 D datamap_t* DataMapInit<physfollower_t>(physfollower_t*)::nameHolder
 D datamap_t* DataMapInit<sky3dparams_t>(sky3dparams_t*)::dataDesc
 D datamap_t* DataMapInit<sky3dparams_t>(sky3dparams_t*)::nameHolder
 D datamap_t* DataMapInit<template_t>(template_t*)::dataDesc
 D datamap_t* DataMapInit<template_t>(template_t*)::nameHolder
 D datamap_t* DataMapInit<thinkfunc_t>(thinkfunc_t*)::dataDesc
 D datamap_t* DataMapInit<thinkfunc_t>(thinkfunc_t*)::nameHolder
 D datamap_t* DataMapInit<thrown_objects_t>(thrown_objects_t*)::dataDesc
 D datamap_t* DataMapInit<thrown_objects_t>(thrown_objects_t*)::nameHolder
 D datamap_t* DataMapInit<vehicle_crashsound_t>(vehicle_crashsound_t*)::dataDesc
 D datamap_t* DataMapInit<vehicle_crashsound_t>(vehicle_crashsound_t*)::nameHolder
 D datamap_t* DataMapInit<vehicle_gear_t>(vehicle_gear_t*)::dataDesc
 D datamap_t* DataMapInit<vehicle_gear_t>(vehicle_gear_t*)::nameHolder
 D datamap_t* DataMapInit<vehiclesounds_t>(vehiclesounds_t*)::dataDesc
 D datamap_t* DataMapInit<vehiclesounds_t>(vehiclesounds_t*)::nameHolder
 D datamap_t* DataMapInit<vehicleview_t>(vehicleview_t*)::dataDesc
 D datamap_t* DataMapInit<vehicleview_t>(vehicleview_t*)::nameHolder
 D decalsystem
 D entitytable_t::m_DataMap
 D eventFuncs
 D flexsetting_t::m_DataMap
 D flexsettinghdr_t::m_DataMap
 D flexweight_t::m_DataMap
 D fogparams_t::m_DataMap
 D fogplayerparams_t::m_DataMap
 D gDefaultNPCImpactDamageTable
 D gDefaultPlayerImpactDamageTable
 D gDefaultPlayerVehicleImpactDamageTable
 D gGlassImpactDamageTable
 D gInitHUD
 D g_AI_Formations
 D g_AI_SaveRestoreBlockHandler
 D g_AttributeDescriptionFormats
 D g_BaseEntityScriptInstanceHelper
 D g_Capabilities
 D g_ChoreoStringPool
 D g_ClassUsabilityStrings
 D g_ConceptCategoryInfos
 D g_ConceptHistoriesSaveDataOps
 D g_DebugConnectNode1
 D g_DebugConnectNode2
 D g_EffectTypes
 D g_EventsSaveDataOps
 D g_HoverTurretTalkNames
 D g_ItemFlags
 D g_LineNames
 D g_PaintSaveRestoreBlockHandler
 D g_PhysDefaultObjectParams
 D g_PhysGameTrace
 D g_PortalTalkNames
 D g_ResponseRulesEngineWrapper
 D g_ResponseSystemSaveRestoreOps
 D g_ServerGameClients
 D g_SolidSetup
 D g_StandardSendProxies
 D g_StandoffParamsByAgression
 D g_TalkNames
 D g_TeamVisualSections
 D g_ThinkContextsSaveDataOps
 D g_VariantSaveDataOps
 D g_WearableAnimTypeStrings
 D g_bClientFlex
 D g_bIsLogging
 D g_bMovementOptimizations
 D g_bTestMoveTypeStepSimulation
 D g_flFractionScale
 D g_iPortalGunPlayerTeam
 D g_iSoundsToStopOnExit
 D g_nActivityListVersion
 D g_nEventListVersion
 D g_nParticle_Multiplier
 D g_pConstraintEvents
 D g_pEffects
 D g_pEntityList
 D g_pGameMovement
 D g_pGameSaveRestoreBlockSet
 D g_pMoveData
 D g_pNotify
 D g_pParticleSystemMgr
 D g_pParticleSystemQuery
 D g_pPhysSaveRestoreManager
 D g_pPrecacheHandler
 D g_pPrecacheRegister
 D g_pPushedEntities
 D g_pResponseSystem
 D g_pServerBenchmark
 D g_pToolFrameworkServer
 D g_pVoiceGameMgrHelper
 D g_ppszGoalTypes
 D g_ppszPortalPassThroughMaterials
 D g_ppszTaskFailureText
 D g_pszBallBotAnimations
 D g_pszBallBotAntennaModel
 D g_pszBallBotHelmetModel
 D g_pszEggBotAnimations
 D g_pszEggBotAntennaModel
 D g_pszEggBotHelmetModel
 D g_pszHintDescriptions
 D g_pszMPConcepts
 D g_pszPlayerAnimations
 D g_pszPlayerModel
 D g_pszPredictedPowerIgnoreFilter
 D g_pszSCHED_ALERT_FACE
 D g_pszSCHED_ALERT_FACE_BESTSOUND
 D g_pszSCHED_ALERT_REACT_TO_COMBAT_SOUND
 D g_pszSCHED_ALERT_SCAN
 D g_pszSCHED_ALERT_STAND
 D g_pszSCHED_ALERT_WALK
 D g_pszSCHED_AMBUSH
 D g_pszSCHED_ARM_WEAPON
 D g_pszSCHED_BACK_AWAY_FROM_ENEMY
 D g_pszSCHED_BACK_AWAY_FROM_SAVE_POSITION
 D g_pszSCHED_BIG_FLINCH
 D g_pszSCHED_CHASE_ENEMY
 D g_pszSCHED_CHASE_ENEMY_FAILED
 D g_pszSCHED_COMBAT_FACE
 D g_pszSCHED_COMBAT_PATROL
 D g_pszSCHED_COMBAT_STAND
 D g_pszSCHED_COMBAT_SWEEP
 D g_pszSCHED_COMBAT_WALK
 D g_pszSCHED_COWER
 D g_pszSCHED_DIE
 D g_pszSCHED_DIE_RAGDOLL
 D g_pszSCHED_DISARM_WEAPON
 D g_pszSCHED_DROPSHIP_DUSTOFF
 D g_pszSCHED_DUCK_DODGE
 D g_pszSCHED_EFINDER_SEARCH
 D g_pszSCHED_ESTABLISH_LINE_OF_FIRE
 D g_pszSCHED_ESTABLISH_LINE_OF_FIRE_FALLBACK
 D g_pszSCHED_FAIL
 D g_pszSCHED_FAIL_ESTABLISH_LINE_OF_FIRE
 D g_pszSCHED_FAIL_NOSTOP
 D g_pszSCHED_FAIL_TAKE_COVER
 D g_pszSCHED_FALL_TO_GROUND
 D g_pszSCHED_FEAR_FACE
 D g_pszSCHED_FLEE_FROM_BEST_SOUND
 D g_pszSCHED_FLINCH_PHYSICS
 D g_pszSCHED_FORCED_GO
 D g_pszSCHED_FORCED_GO_RUN
 D g_pszSCHED_GET_HEALTHKIT
 D g_pszSCHED_HIDE_AND_RELOAD
 D g_pszSCHED_IDLE_STAND
 D g_pszSCHED_IDLE_WALK
 D g_pszSCHED_IDLE_WANDER
 D g_pszSCHED_INTERACTION_MOVE_TO_PARTNER
 D g_pszSCHED_INTERACTION_WAIT_FOR_PARTNER
 D g_pszSCHED_INVESTIGATE_SOUND
 D g_pszSCHED_MELEE_ATTACK1
 D g_pszSCHED_MELEE_ATTACK2
 D g_pszSCHED_MOVE_AWAY
 D g_pszSCHED_MOVE_AWAY_END
 D g_pszSCHED_MOVE_AWAY_FAIL
 D g_pszSCHED_MOVE_AWAY_FROM_ENEMY
 D g_pszSCHED_MOVE_OFF_OF_NPC
 D g_pszSCHED_MOVE_TO_WEAPON_RANGE
 D g_pszSCHED_NEW_WEAPON
 D g_pszSCHED_NEW_WEAPON_CHEAT
 D g_pszSCHED_NPC_FREEZE
 D g_pszSCHED_PATROL_RUN
 D g_pszSCHED_PATROL_WALK
 D g_pszSCHED_PRE_FAIL_ESTABLISH_LINE_OF_FIRE
 D g_pszSCHED_RANGE_ATTACK1
 D g_pszSCHED_RANGE_ATTACK2
 D g_pszSCHED_RELOAD
 D g_pszSCHED_RUN_FROM_ENEMY
 D g_pszSCHED_RUN_FROM_ENEMY_FALLBACK
 D g_pszSCHED_RUN_FROM_ENEMY_MOB
 D g_pszSCHED_RUN_RANDOM
 D g_pszSCHED_SCENE_GENERIC
 D g_pszSCHED_SCRIPTED_CUSTOM_MOVE
 D g_pszSCHED_SCRIPTED_FACE
 D g_pszSCHED_SCRIPTED_RUN
 D g_pszSCHED_SCRIPTED_WAIT
 D g_pszSCHED_SCRIPTED_WALK
 D g_pszSCHED_SHOOT_ENEMY_COVER
 D g_pszSCHED_SLEEP
 D g_pszSCHED_SMALL_FLINCH
 D g_pszSCHED_SPECIAL_ATTACK1
 D g_pszSCHED_SPECIAL_ATTACK2
 D g_pszSCHED_STANDOFF
 D g_pszSCHED_SWITCH_TO_PENDING_WEAPON
 D g_pszSCHED_TAKE_COVER_FROM_BEST_SOUND
 D g_pszSCHED_TAKE_COVER_FROM_ENEMY
 D g_pszSCHED_TAKE_COVER_FROM_ORIGIN
 D g_pszSCHED_TARGET_CHASE
 D g_pszSCHED_TARGET_FACE
 D g_pszSCHED_VICTORY_DANCE
 D g_pszSCHED_WAIT_FOR_SCRIPT
 D g_pszSCHED_WAIT_FOR_SPEAK_FINISH
 D g_pszSCHED_WAKE_ANGRY
 D g_szCheckpointStartSpinningThinkContext
 D g_szDropTypeStrings
 D g_szExplodingFutbolAnimThinkContext
 D g_szExplodingFutbolKillThinkContext
 D g_szExplodingFutbolTimerThinkContext
 D g_szFutbolAnimThinkContext
 D g_szFutbolThrownThinkContext
 D g_szHotPotatoAnimThinkContext
 D g_szHotPotatoKillThinkContext
 D g_szHotPotatoTimerThinkContext
 D g_szLoadoutStrings
 D g_szLoadoutStringsForDisplay
 D g_szRecipeCategoryStrings
 D g_szWeaponTypeSubstrings
 D game_shadowcontrol_params_t::m_DataMap
 D gamestats
 D globalentity_t::m_DataMap
 D guard variable for AllocTempVector()::s_nIndex
 D guard variable for AllocTempVector()::s_vecTemp
 D guard variable for CBaseEntity::ScriptEyePosition()::vec
 D guard variable for CBaseEntity::ScriptGetAngles()::vec
 D guard variable for CBaseEntity::ScriptGetForward()::vecForward
 D guard variable for CBaseEntity::ScriptGetLeft()::vecLeft
 D guard variable for CBaseEntity::ScriptGetUp()::vecUp
 D guard variable for CBuildModeNavCombo::GetKBMap()::s_pMap
 D guard variable for CBuildModeNavCombo::GetMessageMap()::s_pMap
 D guard variable for CCommentarySystem::InitCommentary()::commentarySpawnedSemaphoreName
 D guard variable for CCommentarySystem::InitCommentary()::infoTargetStr
 D guard variable for CDragDropHelperPanel::GetKBMap()::s_pMap
 D guard variable for CDragDropHelperPanel::GetMessageMap()::s_pMap
 D guard variable for CGenericClassmap<CAI_BehaviorBase>::Lookup(char const*)::lookup
 D guard variable for CPaintableEntity<CBaseMultiplayerPlayer>::DataMapInit()::nameHolder
 D guard variable for CPaintableEntity<CBaseMultiplayerPlayer>::m_DataMap
 D guard variable for CPaintableEntity<CBaseProjectedEntity>::DataMapInit()::nameHolder
 D guard variable for CPaintableEntity<CBaseProjectedEntity>::m_DataMap
 D guard variable for CPaintableEntity<CNPC_FloorTurret>::DataMapInit()::nameHolder
 D guard variable for CPaintableEntity<CNPC_FloorTurret>::m_DataMap
 D guard variable for CPaintableEntity<CPhysicsProp>::DataMapInit()::nameHolder
 D guard variable for CPaintableEntity<CPhysicsProp>::m_DataMap
 D guard variable for CPropLinkedPortalDoor::OffsetPosition() const::vOffsetVector
 D guard variable for CSmallTextEntry::GetKBMap()::s_pMap
 D guard variable for CSmallTextEntry::GetMessageMap()::s_pMap
 D guard variable for CSoundEmitterSystem::GetCaptionHash(char const*, bool, unsigned int&)::s_MissingHashes
 D guard variable for CSoundEmitterSystem::PrecacheScriptSound(char const*)::s_PrecacheScriptSoundFailures
 D guard variable for CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CBreakModelsPrecached::breakable_precache_t, unsigned short, bool (*)(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&), CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CKeyBindingsMgr::KBContext_t, int, bool (*)(CKeyBindingsMgr::KBContext_t const&, CKeyBindingsMgr::KBContext_t const&), CUtlMemory<UtlRBTreeNode_t<CKeyBindingsMgr::KBContext_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char>, unsigned char> >::Links(unsigned char) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int, CUtlMap<char const*, CActivityRemapCache, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CBitVec<64>, int>::Node_t, int, CUtlMap<char const*, CBitVec<64>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBitVec<64>, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int, CUtlMap<char const*, CEconItemSetDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int, CUtlMap<char const*, CEconLootListDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int, CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CNavArea*, int>::Node_t, int, CUtlMap<char const*, CNavArea*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short>, short> >::Links(short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short>, short> >::Links(short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short>, short> >::Links(short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int, CUtlMap<int, CEconItemDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, attachedparticlesystem_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<int, int, unsigned short>::Node_t, unsigned short, CUtlMap<int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char>, char> >::Links(char) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int, CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<unsigned int, int, int>::Node_t, int, CUtlMap<unsigned int, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int, CUtlMap<unsigned long long, GCSDK::CJob*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<unsigned long long, int, int>::Node_t, int, CUtlMap<unsigned long long, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, int, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<GCSDK::JobType_t const*, unsigned short, bool (*)(GCSDK::JobType_t const* const&, GCSDK::JobType_t const* const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::JobType_t const*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::Links(short) const::s_Sentinel
 D guard variable for CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlString const& CDmxAttribute::GetValue<CUtlString>() const::defaultValue
 D guard variable for CUtlString const& CDmxElement::GetValue<CUtlString>(char const*) const::defaultValue
 D guard variable for CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> > const& CDmxAttribute::GetArray<CDmxElement*>() const::defaultArray
 D guard variable for CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> > const& CDmxElement::GetArray<CDmxElement*>(char const*) const::defaultValue
 D guard variable for CUtlVector<float, CUtlMemory<float, int> > const& CDmxAttribute::GetArray<float>() const::defaultArray
 D guard variable for CUtlVectorUltraConservative<NavConnect, CUtlVectorUltraConservativeAllocator>::StaticData()::staticData
 D guard variable for CWeaponPortalgun::GetBulletSpread()::cone
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<CParticleSystemDefinition>(CParticleSystemDefinition*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<ParticleChildrenInfo_t>(ParticleChildrenInfo_t*)::unpack
 D guard variable for DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Button>(vgui::Button*)::unpack
 D guard variable for DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Label>(vgui::Label*)::unpack
 D guard variable for DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Panel>(vgui::Panel*)::unpack
 D guard variable for GCSDK::CProtoBufMsg<CMsgConVarValue>::s_Mutex
 D guard variable for GCSDK::CProtoBufMsg<CMsgReplicateConVars>::s_Mutex
 D guard variable for GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>::s_Mutex
 D guard variable for GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::s_Mutex
 D guard variable for GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::s_Mutex
 D guard variable for GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::s_Mutex
 D guard variable for GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::s_Mutex
 D guard variable for GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::s_Mutex
 D guard variable for GCSDK::CProtoBufMsg<CMsgSOSingleObject>::s_Mutex
 D guard variable for GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>::s_Mutex
 D guard variable for ISaveRestoreOps* CUtlMapDataopsInstantiator<2, 10>::GetDataOps<CUtlMap<string_t, CSimpleSimTimer, char> >(CUtlMap<string_t, CSimpleSimTimer, char>*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CAI_InterestTarget>(CAI_InterestTarget*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> > >(CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> > >(CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> > >(CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> > >(CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> > >(CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> > >(CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> > >(CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> > >(CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> > >(CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> > >(CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> > >(CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> > >(CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> > >(CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> > >(CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> > >(CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<template_t, CUtlMemory<template_t, int> > >(CUtlVector<template_t, CUtlMemory<template_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> > >(CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> > >(CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> > >(CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<12>::GetDataOps<CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> > >(CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> > >(CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CBaseCombatWeapon>, CUtlMemory<CHandle<CBaseCombatWeapon>, int> > >(CUtlVector<CHandle<CBaseCombatWeapon>, CUtlMemory<CHandle<CBaseCombatWeapon>, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> > >(CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> > >(CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> > >(CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> > >(CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> > >(CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> > >(CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<13>::GetDataOps<CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> > >(CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<16>::GetDataOps<CUtlVector<float, CUtlMemory<float, int> > >(CUtlVector<float, CUtlMemory<float, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<2>::GetDataOps<CUtlVector<string_t, CUtlMemory<string_t, int> > >(CUtlVector<string_t, CUtlMemory<string_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<3>::GetDataOps<CUtlVector<Vector, CUtlMemory<Vector, int> > >(CUtlVector<Vector, CUtlMemory<Vector, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<5>::GetDataOps<CUtlVector<int, CUtlMemory<int, int> > >(CUtlVector<int, CUtlMemory<int, int> >*)::ops
 D guard variable for ISaveRestoreOps* GetBitstringDataOps<CBitVec<32> >(CBitVec<32>*)::ops
 D guard variable for PropPaintPowerUser<CNPC_FloorTurret>::DataMapInit()::dataDesc
 D guard variable for PropPaintPowerUser<CNPC_FloorTurret>::DataMapInit()::nameHolder
 D guard variable for PropPaintPowerUser<CNPC_FloorTurret>::GetSpeedMaterialIndex()::s_SpeedMaterialIndex
 D guard variable for PropPaintPowerUser<CNPC_FloorTurret>::m_DataMap
 D guard variable for PropPaintPowerUser<CPhysicsProp>::DataMapInit()::dataDesc
 D guard variable for PropPaintPowerUser<CPhysicsProp>::DataMapInit()::nameHolder
 D guard variable for PropPaintPowerUser<CPhysicsProp>::GetSpeedMaterialIndex()::s_SpeedMaterialIndex
 D guard variable for PropPaintPowerUser<CPhysicsProp>::m_DataMap
 D guard variable for ScriptVariant_t::operator Vector const&() const::vecNull
 D guard variable for bool CNavMesh::ForAllAreasInRadius<NavAreaCollector>(NavAreaCollector&, Vector const&, float)::searchMarker
 D guard variable for bool CNavMesh::ForAllAreasOverlappingExtent<CFuncNavBlocker>(CFuncNavBlocker&, Extent const&)::searchMarker
 D guard variable for bool CNavMesh::ForAllAreasOverlappingExtent<CFuncNavObstruction>(CFuncNavObstruction&, Extent const&)::searchMarker
 D guard variable for bool CNavMesh::ForAllAreasOverlappingExtent<COverlapCheck>(COverlapCheck&, Extent const&)::searchMarker
 D guard variable for bool CNavMesh::ForAllAreasOverlappingExtent<NavAreaCollector>(NavAreaCollector&, Extent const&)::searchMarker
 D guard variable for datamap_t* DataMapInit<AIAgentSaveHeader_t>(AIAgentSaveHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AIAgentScheduleState_t>(AIAgentScheduleState_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AIBehaviorChannelSaveHeader_t>(AIBehaviorChannelSaveHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AIChannelScheduleState_t>(AIChannelScheduleState_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AIExtendedSaveHeader_t>(AIExtendedSaveHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AIScheduleState_t>(AIScheduleState_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AISquadEnemyInfo_t>(AISquadEnemyInfo_t*)::dataDesc
 D guard variable for datamap_t* DataMapInit<AISquadEnemyInfo_t>(AISquadEnemyInfo_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AI_EnemyInfo_t>(AI_EnemyInfo_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AI_FollowNavInfo_t>(AI_FollowNavInfo_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AI_FollowParams_t>(AI_FollowParams_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AI_FreePassParams_t>(AI_FreePassParams_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AI_LeadArgs_t>(AI_LeadArgs_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AI_StandoffParams_t>(AI_StandoffParams_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AI_Waypoint_t>(AI_Waypoint_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<AR2Explosion>(AR2Explosion*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAISound>(CAISound*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_AccelDecay>(CAI_AccelDecay*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ActBusyBehavior>(CAI_ActBusyBehavior*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_ActBusyBehavior>(CAI_ActBusyBehavior*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ActBusyGoal>(CAI_ActBusyGoal*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_ActBusyGoal>(CAI_ActBusyGoal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ActBusyQueueGoal>(CAI_ActBusyQueueGoal*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_ActBusyQueueGoal>(CAI_ActBusyQueueGoal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_AddOn>(CAI_AddOn*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_AddOn>(CAI_AddOn*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Agent>(CAI_Agent*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_AllySpeechManager>(CAI_AllySpeechManager*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_AllySpeechManager>(CAI_AllySpeechManager*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_AssaultBehavior>(CAI_AssaultBehavior*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_AssaultGoal>(CAI_AssaultGoal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_BaseActor>(CAI_BaseActor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_BaseActor>(CAI_BaseActor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_BaseFlyingBot>(CAI_BaseFlyingBot*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_BaseNPC>(CAI_BaseNPC*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_BaseNPC>(CAI_BaseNPC*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_BasePhysicsFlyingBot>(CAI_BasePhysicsFlyingBot*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_BasePhysicsFlyingBot>(CAI_BasePhysicsFlyingBot*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_BattleLine>(CAI_BattleLine*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_BattleLine>(CAI_BattleLine*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_BehaviorBase>(CAI_BehaviorBase*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_BehaviorBase>(CAI_BehaviorBase*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_BlendedMotor>(CAI_BlendedMotor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ChangeHintGroup>(CAI_ChangeHintGroup*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ChangeTarget>(CAI_ChangeTarget*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_DynamicLink>(CAI_DynamicLink*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_DynamicLinkController>(CAI_DynamicLinkController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Enemies>(CAI_Enemies*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Expresser>(CAI_Expresser*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_FearBehavior>(CAI_FearBehavior*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_FightFromCoverBehavior>(CAI_FightFromCoverBehavior*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_FightFromCoverGoal>(CAI_FightFromCoverGoal*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_FightFromCoverGoal>(CAI_FightFromCoverGoal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_FollowBehavior>(CAI_FollowBehavior*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_FollowBehavior>(CAI_FollowBehavior*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_FollowGoal>(CAI_FollowGoal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_FreePass>(CAI_FreePass*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_FuncTankBehavior>(CAI_FuncTankBehavior*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_GoalEntity>(CAI_GoalEntity*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_GoalEntity>(CAI_GoalEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Hint>(CAI_Hint*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_Hint>(CAI_Hint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_InterestTarget_t>(CAI_InterestTarget_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_LeadBehavior>(CAI_LeadBehavior*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_LeadGoal>(CAI_LeadGoal*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_LeadGoal>(CAI_LeadGoal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_LeadGoal_Weapon>(CAI_LeadGoal_Weapon*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_LocalNavigator>(CAI_LocalNavigator*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_LookTarget>(CAI_LookTarget*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Motor>(CAI_Motor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_Motor>(CAI_Motor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_MoveAndShootOverlay>(CAI_MoveAndShootOverlay*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_MoveMonitor>(CAI_MoveMonitor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_MoveProbe>(CAI_MoveProbe*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Navigator>(CAI_Navigator*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_Navigator>(CAI_Navigator*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_NetworkManager>(CAI_NetworkManager*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_NetworkManager>(CAI_NetworkManager*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Path>(CAI_Path*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_Path>(CAI_Path*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Pathfinder>(CAI_Pathfinder*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_PlayerAlly>(CAI_PlayerAlly*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_PlayerAlly>(CAI_PlayerAlly*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ProxTester>(CAI_ProxTester*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_RadialLinkController>(CAI_RadialLinkController*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_RadialLinkController>(CAI_RadialLinkController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_RappelBehavior>(CAI_RappelBehavior*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Relationship>(CAI_Relationship*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_Relationship>(CAI_Relationship*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ScriptConditions>(CAI_ScriptConditions*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_ScriptConditions>(CAI_ScriptConditions*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ScriptConditionsElement>(CAI_ScriptConditionsElement*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ScriptedSchedule>(CAI_ScriptedSchedule*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_ScriptedSchedule>(CAI_ScriptedSchedule*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ScriptedSentence>(CAI_ScriptedSentence*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_ScriptedSentence>(CAI_ScriptedSentence*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ScriptedSequence>(CAI_ScriptedSequence*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_ScriptedSequence>(CAI_ScriptedSequence*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Senses>(CAI_Senses*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_Senses>(CAI_Senses*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_SentenceBase>(CAI_SentenceBase*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_ShotRegulator>(CAI_ShotRegulator*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_SpeechFilter>(CAI_SpeechFilter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_Squad>(CAI_Squad*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAI_Squad>(CAI_Squad*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_StandoffBehavior>(CAI_StandoffBehavior*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_StandoffGoal>(CAI_StandoffGoal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_TacticalServices>(CAI_TacticalServices*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAI_TrackPather>(CAI_TrackPather*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAmbientGeneric>(CAmbientGeneric*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAmbientGeneric>(CAmbientGeneric*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAnimationLayer>(CAnimationLayer*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAnimationLayer>(CAnimationLayer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAreaPortal>(CAreaPortal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAssaultPoint>(CAssaultPoint*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAssaultPoint>(CAssaultPoint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAttributeContainer>(CAttributeContainer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAttributeContainerPlayer>(CAttributeContainerPlayer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAttributeList>(CAttributeList*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CAttributeManager>(CAttributeManager*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CAttributeManager>(CAttributeManager*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseAnimating>(CBaseAnimating*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseAnimating>(CBaseAnimating*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseAnimatingOverlay>(CBaseAnimatingOverlay*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseAnimatingOverlay>(CBaseAnimatingOverlay*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseAnimatingProjectile>(CBaseAnimatingProjectile*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseAttributableItem>(CBaseAttributableItem*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseButton>(CBaseButton*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseButton>(CBaseButton*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseCombatCharacter>(CBaseCombatCharacter*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseCombatCharacter>(CBaseCombatCharacter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseCombatWeapon>(CBaseCombatWeapon*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseCombatWeapon>(CBaseCombatWeapon*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseDMStart>(CBaseDMStart*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseDoor>(CBaseDoor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseDoor>(CBaseDoor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseEntity>(CBaseEntity*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseEntity>(CBaseEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseEntityOutput>(CBaseEntityOutput*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseEntityOutput>(CBaseEntityOutput*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseFilter>(CBaseFilter*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseFilter>(CBaseFilter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseFire>(CBaseFire*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseFlex>(CBaseFlex*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseGrenade>(CBaseGrenade*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseGrenade>(CBaseGrenade*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseGrenadeConcussion>(CBaseGrenadeConcussion*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseGrenadeConcussion>(CBaseGrenadeConcussion*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseHLCombatWeapon>(CBaseHLCombatWeapon*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseMoveBehavior>(CBaseMoveBehavior*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseNPCMaker>(CBaseNPCMaker*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseNPCMaker>(CBaseNPCMaker*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBasePlatTrain>(CBasePlatTrain*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBasePlatTrain>(CBasePlatTrain*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBasePlayer>(CBasePlayer*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBasePlayer>(CBasePlayer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBasePortalCombatWeapon>(CBasePortalCombatWeapon*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseProjectedEntity>(CBaseProjectedEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseProjectile>(CBaseProjectile*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseProjector>(CBaseProjector*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseProjector>(CBaseProjector*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBasePropDoor>(CBasePropDoor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBasePropDoor>(CBasePropDoor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseServerVehicle>(CBaseServerVehicle*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseServerVehicle>(CBaseServerVehicle*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseSpriteProjectile>(CBaseSpriteProjectile*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseToggle>(CBaseToggle*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseTrigger>(CBaseTrigger*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseTrigger>(CBaseTrigger*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseVPhysicsTrigger>(CBaseVPhysicsTrigger*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBaseViewModel>(CBaseViewModel*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBaseViewModel>(CBaseViewModel*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBeam>(CBeam*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBeamSpotlight>(CBeamSpotlight*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBeamSpotlight>(CBeamSpotlight*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBlendingCycler>(CBlendingCycler*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBlood>(CBlood*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBoneFollower>(CBoneFollower*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBoneFollowerManager>(CBoneFollowerManager*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBoneFollowerManager>(CBoneFollowerManager*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBreakable>(CBreakable*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBreakable>(CBreakable*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBreakableProp>(CBreakableProp*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBreakableProp>(CBreakableProp*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBreakableSurface>(CBreakableSurface*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBreakableSurface>(CBreakableSurface*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CBubbling>(CBubbling*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CBubbling>(CBubbling*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CChallengeModeEndNode>(CChallengeModeEndNode*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CChangeLevel>(CChangeLevel*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CChangeLevel>(CChangeLevel*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CChoreoGenericServerVehicle>(CChoreoGenericServerVehicle*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CCitadelEnergyCore>(CCitadelEnergyCore*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CCollisionProperty>(CCollisionProperty*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CColorCorrection>(CColorCorrection*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CColorCorrection>(CColorCorrection*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CColorCorrectionVolume>(CColorCorrectionVolume*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CColorCorrectionVolume>(CColorCorrectionVolume*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CCommentaryAuto>(CCommentaryAuto*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CCommentaryAuto>(CCommentaryAuto*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CCommentarySystem>(CCommentarySystem*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CCommentarySystem>(CCommentarySystem*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CConstantForceController>(CConstantForceController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CConstraintAnchor>(CConstraintAnchor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CCopyRecipientFilter>(CCopyRecipientFilter*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CCopyRecipientFilter>(CCopyRecipientFilter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CCredits>(CCredits*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CCredits>(CCredits*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CCubeRotationController>(CCubeRotationController*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CCubeRotationController>(CCubeRotationController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CCycler>(CCycler*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CDebugHistory>(CDebugHistory*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CDecal>(CDecal*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CDecal>(CDecal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CDynamicLight>(CDynamicLight*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CDynamicLight>(CDynamicLight*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CDynamicProp>(CDynamicProp*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CDynamicProp>(CDynamicProp*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEconEntity>(CEconEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEconItemView>(CEconItemView*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEconWearable>(CEconWearable*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEmbers>(CEmbers*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEmbers>(CEmbers*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnergyBallLauncher>(CEnergyBallLauncher*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnergyBallLauncher>(CEnergyBallLauncher*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEntityDissolve>(CEntityDissolve*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEntityDissolve>(CEntityDissolve*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEntityFlame>(CEntityFlame*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEntityFlame>(CEntityFlame*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEntityFreezing>(CEntityFreezing*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEntityParticleTrail>(CEntityParticleTrail*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvAR2Explosion>(CEnvAR2Explosion*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvAmbientLight>(CEnvAmbientLight*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvBeam>(CEnvBeam*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvBeam>(CEnvBeam*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvBeverage>(CEnvBeverage*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvDOFController>(CEnvDOFController*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvDOFController>(CEnvDOFController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvDustPuff>(CEnvDustPuff*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvEffectsScript>(CEnvEffectsScript*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvEffectsScript>(CEnvEffectsScript*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvEntityIgniter>(CEnvEntityIgniter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvEntityMaker>(CEnvEntityMaker*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvEntityMaker>(CEnvEntityMaker*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvExplosion>(CEnvExplosion*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvExplosion>(CEnvExplosion*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvFade>(CEnvFade*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvFade>(CEnvFade*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvFireSensor>(CEnvFireSensor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvFireSensor>(CEnvFireSensor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvFireSource>(CEnvFireSource*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvFunnel>(CEnvFunnel*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvGlobal>(CEnvGlobal*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvGlobal>(CEnvGlobal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvGunfire>(CEnvGunfire*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvGunfire>(CEnvGunfire*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvHudHint>(CEnvHudHint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvInstructorHint>(CEnvInstructorHint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvLaser>(CEnvLaser*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvLaser>(CEnvLaser*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvMicrophone>(CEnvMicrophone*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvMicrophone>(CEnvMicrophone*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvMuzzleFlash>(CEnvMuzzleFlash*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvParticleScript>(CEnvParticleScript*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvPlayerSurfaceTrigger>(CEnvPlayerSurfaceTrigger*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvPlayerSurfaceTrigger>(CEnvPlayerSurfaceTrigger*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvPortalPathTrack>(CEnvPortalPathTrack*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvPortalPathTrack>(CEnvPortalPathTrack*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvProjectedTexture>(CEnvProjectedTexture*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvProjectedTexture>(CEnvProjectedTexture*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvQuadraticBeam>(CEnvQuadraticBeam*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvScreenEffect>(CEnvScreenEffect*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvScreenOverlay>(CEnvScreenOverlay*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvScreenOverlay>(CEnvScreenOverlay*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvShake>(CEnvShake*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvShake>(CEnvShake*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvShooter>(CEnvShooter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvSoundscape>(CEnvSoundscape*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvSoundscape>(CEnvSoundscape*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvSoundscapeProxy>(CEnvSoundscapeProxy*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvSoundscapeTriggerable>(CEnvSoundscapeTriggerable*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvSpark>(CEnvSpark*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvSpark>(CEnvSpark*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvSplash>(CEnvSplash*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvTilt>(CEnvTilt*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvTonemapController>(CEnvTonemapController*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvTonemapController>(CEnvTonemapController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvTracer>(CEnvTracer*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvTracer>(CEnvTracer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvViewPunch>(CEnvViewPunch*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvWind>(CEnvWind*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CEnvWind>(CEnvWind*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvZoom>(CEnvZoom*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnv_Lightrail_Endpoint>(CEnv_Lightrail_Endpoint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEventAction>(CEventAction*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEventQueue>(CEventQueue*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFilterClass>(CFilterClass*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFilterCombineBall>(CFilterCombineBall*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFilterContext>(CFilterContext*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFilterEnemy>(CFilterEnemy*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFilterMassGreater>(CFilterMassGreater*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFilterModel>(CFilterModel*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFilterMultiple>(CFilterMultiple*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFilterName>(CFilterName*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFilterPlayerHeld>(CFilterPlayerHeld*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFilterSize>(CFilterSize*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFire>(CFire*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFire>(CFire*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFireSmoke>(CFireSmoke*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFireTrail>(CFireTrail*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFish>(CFish*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFishPool>(CFishPool*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFishPool>(CFishPool*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFlexCycler>(CFlexCycler*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFlexExpresser>(CFlexExpresser*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFlextalkActor>(CFlextalkActor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFogController>(CFogController*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFogController>(CFogController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFogTrigger>(CFogTrigger*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFogVolume>(CFogVolume*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFourWheelServerVehicle>(CFourWheelServerVehicle*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFourWheelVehiclePhysics>(CFourWheelVehiclePhysics*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncAreaPortalBase>(CFuncAreaPortalBase*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncAreaPortalWindow>(CFuncAreaPortalWindow*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncBrush>(CFuncBrush*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncCombineBallSpawner>(CFuncCombineBallSpawner*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncCombineBallSpawner>(CFuncCombineBallSpawner*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncConveyor>(CFuncConveyor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncInstanceIoProxy>(CFuncInstanceIoProxy*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncInstanceIoProxy>(CFuncInstanceIoProxy*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncLadder>(CFuncLadder*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncLadder>(CFuncLadder*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncMonitor>(CFuncMonitor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncMoveLinear>(CFuncMoveLinear*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncMoveLinear>(CFuncMoveLinear*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncNavBlocker>(CFuncNavBlocker*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncNavObstruction>(CFuncNavObstruction*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncNoPortalVolume>(CFuncNoPortalVolume*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncNoPortalVolume>(CFuncNoPortalVolume*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncOccluder>(CFuncOccluder*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncPlacementClip>(CFuncPlacementClip*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncPlat>(CFuncPlat*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncPlat>(CFuncPlat*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncPlatRot>(CFuncPlatRot*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncPortalBumper>(CFuncPortalBumper*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncPortalBumper>(CFuncPortalBumper*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncPortalDetector>(CFuncPortalDetector*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncPortalDetector>(CFuncPortalDetector*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncPortalOrientation>(CFuncPortalOrientation*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncReflectiveGlass>(CFuncReflectiveGlass*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncRotating>(CFuncRotating*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncRotating>(CFuncRotating*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncSmokeVolume>(CFuncSmokeVolume*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncTank>(CFuncTank*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncTank>(CFuncTank*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncTankCombineCannon>(CFuncTankCombineCannon*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncTankCombineCannon>(CFuncTankCombineCannon*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncTankLaser>(CFuncTankLaser*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncTankMortar>(CFuncTankMortar*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncTankPhysCannister>(CFuncTankPhysCannister*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncTankPulseLaser>(CFuncTankPulseLaser*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncTankTrain>(CFuncTankTrain*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncTankTrain>(CFuncTankTrain*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncTrackAuto>(CFuncTrackAuto*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncTrackChange>(CFuncTrackChange*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncTrackChange>(CFuncTrackChange*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncTrackTrain>(CFuncTrackTrain*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncTrackTrain>(CFuncTrackTrain*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncTrain>(CFuncTrain*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncTrain>(CFuncTrain*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncTrainControls>(CFuncTrainControls*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFuncTrainControls>(CFuncTrainControls*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncVPhysicsClip>(CFuncVPhysicsClip*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncVehicleClip>(CFuncVehicleClip*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncWall>(CFuncWall*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFuncWallToggle>(CFuncWallToggle*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFunc_Dust>(CFunc_Dust*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFunc_LOD>(CFunc_LOD*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFunc_Portalled>(CFunc_Portalled*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFunc_Portalled>(CFunc_Portalled*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFutbolCatcher>(CFutbolCatcher*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CFutbolCatcher>(CFutbolCatcher*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGameEnd>(CGameEnd*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGameGibManager>(CGameGibManager*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGamePlayerEquip>(CGamePlayerEquip*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGamePlayerZone>(CGamePlayerZone*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CGamePlayerZone>(CGamePlayerZone*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGameScore>(CGameScore*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGameText>(CGameText*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGameUI>(CGameUI*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CGameUI>(CGameUI*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGameWeaponManager>(CGameWeaponManager*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CGameWeaponManager>(CGameWeaponManager*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGenericActor>(CGenericActor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGib>(CGib*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CGib>(CGib*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGibShooter>(CGibShooter*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CGibShooter>(CGibShooter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGlobalState>(CGlobalState*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CGlobalState>(CGlobalState*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGrabController>(CGrabController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGrenadeBeam>(CGrenadeBeam*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CGrenadeBeam>(CGrenadeBeam*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGrenadeBeamChaser>(CGrenadeBeamChaser*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CGrenadeBeamChaser>(CGrenadeBeamChaser*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGrenadeFrag>(CGrenadeFrag*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CGrenadeFrag>(CGrenadeFrag*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CGunTarget>(CGunTarget*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CGunTarget>(CGunTarget*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CHLMachineGun>(CHLMachineGun*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CHLSelectFireMachineGun>(CHLSelectFireMachineGun*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CHLSelectFireMachineGun>(CHLSelectFireMachineGun*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CHotPotato>(CHotPotato*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CHotPotato>(CHotPotato*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CHotPotatoCatcher>(CHotPotatoCatcher*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CHotPotatoCatcher>(CHotPotatoCatcher*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CHotPotatoSpawner>(CHotPotatoSpawner*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CHotPotatoSpawner>(CHotPotatoSpawner*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CHoverTurretTether>(CHoverTurretTether*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CHoverTurretTether>(CHoverTurretTether*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInfoCameraLink>(CInfoCameraLink*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInfoGameEventProxy>(CInfoGameEventProxy*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInfoInstructorHintTarget>(CInfoInstructorHintTarget*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInfoOverlayAccessor>(CInfoOverlayAccessor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInfoPlacementHelper>(CInfoPlacementHelper*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CInfoPlacementHelper>(CInfoPlacementHelper*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInfoPortalScore>(CInfoPortalScore*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CInfoPortalScore>(CInfoPortalScore*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInfoRemarkable>(CInfoRemarkable*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInfoTargetPersonalitySphere>(CInfoTargetPersonalitySphere*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInfo_Coop_Spawn>(CInfo_Coop_Spawn*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInfo_Player_Ping_Detector>(CInfo_Player_Ping_Detector*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CInfo_Player_Ping_Detector>(CInfo_Player_Ping_Detector*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CInstancedSceneEntity>(CInstancedSceneEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CItem>(CItem*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CItem>(CItem*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CItemSoda>(CItemSoda*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CItemSoda>(CItemSoda*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CItem_Nugget>(CItem_Nugget*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CItem_Nugget>(CItem_Nugget*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CKeepUpright>(CKeepUpright*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CKeepUpright>(CKeepUpright*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLabIndicatorPanel>(CLabIndicatorPanel*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLaserCatcher>(CLaserCatcher*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLaserCatcher>(CLaserCatcher*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLaserRelay>(CLaserRelay*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLevelPlacardDisplay>(CLevelPlacardDisplay*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLight>(CLight*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLight>(CLight*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLightGlow>(CLightGlow*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLinkedPortalDoor>(CLinkedPortalDoor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLinkedPortalDoor>(CLinkedPortalDoor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicAchievement>(CLogicAchievement*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicAchievement>(CLogicAchievement*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicActiveAutosave>(CLogicActiveAutosave*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicActiveAutosave>(CLogicActiveAutosave*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicAuto>(CLogicAuto*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicAuto>(CLogicAuto*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicAutosave>(CLogicAutosave*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicBranch>(CLogicBranch*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicBranch>(CLogicBranch*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicBranchList>(CLogicBranchList*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicBranchList>(CLogicBranchList*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicCase>(CLogicCase*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicCase>(CLogicCase*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicCollisionPair>(CLogicCollisionPair*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicCompare>(CLogicCompare*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicCompare>(CLogicCompare*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicCompareInteger>(CLogicCompareInteger*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicCompareInteger>(CLogicCompareInteger*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicCoopManager>(CLogicCoopManager*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicCoopManager>(CLogicCoopManager*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicEventListener>(CLogicEventListener*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicEventListener>(CLogicEventListener*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicLineToEntity>(CLogicLineToEntity*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicLineToEntity>(CLogicLineToEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicMeasureMovement>(CLogicMeasureMovement*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicMeasureMovement>(CLogicMeasureMovement*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicNavigation>(CLogicNavigation*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicPlayMovie>(CLogicPlayMovie*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicPlayMovie>(CLogicPlayMovie*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicPlayerProxy>(CLogicPlayerProxy*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicPlayerProxy>(CLogicPlayerProxy*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicPlayerViewFinder>(CLogicPlayerViewFinder*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicRandomOutputs>(CLogicRandomOutputs*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicRandomOutputs>(CLogicRandomOutputs*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicRegisterActivator>(CLogicRegisterActivator*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicRegisterActivator>(CLogicRegisterActivator*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicRelay>(CLogicRelay*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CLogicRelay>(CLogicRelay*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicScript>(CLogicScript*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CLogicTimeScale>(CLogicTimeScale*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMP_LobbyScreen>(CMP_LobbyScreen*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMaterialModifyControl>(CMaterialModifyControl*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMathColorBlend>(CMathColorBlend*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CMathColorBlend>(CMathColorBlend*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMathCounter>(CMathCounter*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CMathCounter>(CMathCounter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMathRemap>(CMathRemap*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CMathRemap>(CMathRemap*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMessage>(CMessage*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CMessage>(CMessage*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMessageEntity>(CMessageEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMomentaryRotButton>(CMomentaryRotButton*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CMomentaryRotButton>(CMomentaryRotButton*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMortarShell>(CMortarShell*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CMortarShell>(CMortarShell*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMotorController>(CMotorController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMovementSpeedMod>(CMovementSpeedMod*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMovieDisplay>(CMovieDisplay*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMultiDamage>(CMultiDamage*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMultiSource>(CMultiSource*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CMultiSource>(CMultiSource*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPCEventResponseSystemEntity>(CNPCEventResponseSystemEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPCMaker>(CNPCMaker*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPCSimpleTalker>(CNPCSimpleTalker*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CNPCSimpleTalker>(CNPCSimpleTalker*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPCSimpleTalkerExpresser>(CNPCSimpleTalkerExpresser*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPCSpawnDestination>(CNPCSpawnDestination*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CNPCSpawnDestination>(CNPCSpawnDestination*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPC_Bullseye>(CNPC_Bullseye*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CNPC_Bullseye>(CNPC_Bullseye*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPC_EnemyFinder>(CNPC_EnemyFinder*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CNPC_EnemyFinder>(CNPC_EnemyFinder*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPC_EnemyFinderCombineCannon>(CNPC_EnemyFinderCombineCannon*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPC_FloorTurret>(CNPC_FloorTurret*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CNPC_FloorTurret>(CNPC_FloorTurret*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPC_Furniture>(CNPC_Furniture*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPC_HoverTurret>(CNPC_HoverTurret*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CNPC_HoverTurret>(CNPC_HoverTurret*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPC_PersonalityCore>(CNPC_PersonalityCore*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CNPC_PersonalityCore>(CNPC_PersonalityCore*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPC_Portal_FloorTurret>(CNPC_Portal_FloorTurret*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CNPC_Portal_FloorTurret>(CNPC_Portal_FloorTurret*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPC_RocketTurret>(CNPC_RocketTurret*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CNPC_RocketTurret>(CNPC_RocketTurret*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPC_SecurityCamera>(CNPC_SecurityCamera*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CNPC_SecurityCamera>(CNPC_SecurityCamera*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPC_VehicleDriver>(CNPC_VehicleDriver*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNPC_Wheatley_Boss>(CNPC_Wheatley_Boss*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNeurotoxinCountdown>(CNeurotoxinCountdown*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CNeurotoxinCountdown>(CNeurotoxinCountdown*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNewNPC>(CNewNPC*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNewRecharge>(CNewRecharge*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CNewRecharge>(CNewRecharge*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CNodeEnt>(CNodeEnt*)::nameHolder
 D guard variable for datamap_t* DataMapInit<COrnamentProp>(COrnamentProp*)::nameHolder
 D guard variable for datamap_t* DataMapInit<COuttroStats>(COuttroStats*)::dataDesc
 D guard variable for datamap_t* DataMapInit<COuttroStats>(COuttroStats*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPaintPowerPickup>(CPaintPowerPickup*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPaintSphere>(CPaintSphere*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPaintSprayer>(CPaintSprayer*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPaintSprayer>(CPaintSprayer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPaintStream>(CPaintStream*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CParticleFire>(CParticleFire*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CParticleLight>(CParticleLight*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CParticlePerformanceMonitor>(CParticlePerformanceMonitor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CParticleSystem>(CParticleSystem*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CParticleSystem>(CParticleSystem*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPassengerInfo>(CPassengerInfo*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPathCorner>(CPathCorner*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPathCorner>(CPathCorner*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPathKeyFrame>(CPathKeyFrame*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPathTrack>(CPathTrack*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPathTrack>(CPathTrack*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysBox>(CPhysBox*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysBox>(CPhysBox*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysBoxMultiplayer>(CPhysBoxMultiplayer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysConstraint>(CPhysConstraint*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysConstraint>(CPhysConstraint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysConstraintSystem>(CPhysConstraintSystem*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysConstraintSystem>(CPhysConstraintSystem*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysConvert>(CPhysConvert*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysConvert>(CPhysConvert*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysExplosion>(CPhysExplosion*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysExplosion>(CPhysExplosion*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysForce>(CPhysForce*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysForce>(CPhysForce*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysHinge>(CPhysHinge*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysImpact>(CPhysImpact*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysImpact>(CPhysImpact*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysLength>(CPhysLength*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysMagnet>(CPhysMagnet*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysMagnet>(CPhysMagnet*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysMotor>(CPhysMotor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysMotor>(CPhysMotor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysPulley>(CPhysPulley*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysSlideConstraint>(CPhysSlideConstraint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysThruster>(CPhysThruster*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysTorque>(CPhysTorque*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsCannister>(CPhysicsCannister*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysicsCannister>(CPhysicsCannister*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsEntitySolver>(CPhysicsEntitySolver*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsNPCSolver>(CPhysicsNPCSolver*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysicsNPCSolver>(CPhysicsNPCSolver*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsProp>(CPhysicsProp*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysicsProp>(CPhysicsProp*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsPropMultiplayer>(CPhysicsPropMultiplayer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsPropRespawnable>(CPhysicsPropRespawnable*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysicsPropRespawnable>(CPhysicsPropRespawnable*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsShake>(CPhysicsShake*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsSpring>(CPhysicsSpring*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPhysicsSpring>(CPhysicsSpring*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsWind>(CPhysicsWind*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPhysicsWire>(CPhysicsWire*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPlasma>(CPlasma*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPlayerLocalData>(CPlayerLocalData*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPlayerPickupController>(CPlayerPickupController*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPlayerPickupController>(CPlayerPickupController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPlayerResource>(CPlayerResource*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPlayerResource>(CPlayerResource*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPlayerState>(CPlayerState*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointAngleSensor>(CPointAngleSensor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointAngleSensor>(CPointAngleSensor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointAngularVelocitySensor>(CPointAngularVelocitySensor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointAngularVelocitySensor>(CPointAngularVelocitySensor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointBonusMapsAccessor>(CPointBonusMapsAccessor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointBroadcastClientCommand>(CPointBroadcastClientCommand*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointCamera>(CPointCamera*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointCamera>(CPointCamera*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointChangelevel>(CPointChangelevel*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointChangelevel>(CPointChangelevel*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointClientCommand>(CPointClientCommand*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointCombineBallLauncher>(CPointCombineBallLauncher*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointCommentaryNode>(CPointCommentaryNode*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointCommentaryNode>(CPointCommentaryNode*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointDevShotCamera>(CPointDevShotCamera*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointDevShotCamera>(CPointDevShotCamera*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointEntityFinder>(CPointEntityFinder*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointEntityFinder>(CPointEntityFinder*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointFutbolShooter>(CPointFutbolShooter*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointFutbolShooter>(CPointFutbolShooter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointGamestatsCounter>(CPointGamestatsCounter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointHurt>(CPointHurt*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointHurt>(CPointHurt*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointPlayerMoveConstraint>(CPointPlayerMoveConstraint*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointPlayerMoveConstraint>(CPointPlayerMoveConstraint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointProximitySensor>(CPointProximitySensor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointProximitySensor>(CPointProximitySensor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointServerCommand>(CPointServerCommand*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointSpotlight>(CPointSpotlight*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointSpotlight>(CPointSpotlight*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointSurvey>(CPointSurvey*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointSurvey>(CPointSurvey*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointTeleport>(CPointTeleport*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointTemplate>(CPointTemplate*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointTemplate>(CPointTemplate*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPointVelocitySensor>(CPointVelocitySensor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPointVelocitySensor>(CPointVelocitySensor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPortalButtonTrigger>(CPortalButtonTrigger*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPortalCredits>(CPortalCredits*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPortalCredits>(CPortalCredits*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPortalLaser>(CPortalLaser*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPortalLaser>(CPortalLaser*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPortalLaserTarget>(CPortalLaserTarget*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPortalLaserTarget>(CPortalLaserTarget*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPortalMPGameRulesProxy>(CPortalMPGameRulesProxy*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPortalPlayerLocalData>(CPortalPlayerLocalData*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPortalRaceCheckpoint>(CPortalRaceCheckpoint*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPortalRaceCheckpoint>(CPortalRaceCheckpoint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPortalRagdoll>(CPortalRagdoll*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPortalStatsController>(CPortalStatsController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPortal_Base2D>(CPortal_Base2D*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPortal_Base2D>(CPortal_Base2D*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPortal_Player>(CPortal_Player*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPortal_Player>(CPortal_Player*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPortal_PointPush>(CPortal_PointPush*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPortal_PointPush>(CPortal_PointPush*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPoseController>(CPoseController*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPoseController>(CPoseController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPostProcessController>(CPostProcessController*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPostProcessController>(CPostProcessController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPrecipitation>(CPrecipitation*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPrecipitationBlocker>(CPrecipitationBlocker*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CProjectedDecal>(CProjectedDecal*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CProjectedDecal>(CProjectedDecal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CProjectedTractorBeamEntity>(CProjectedTractorBeamEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CProjectedWallEntity>(CProjectedWallEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropButton>(CPropButton*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropButton>(CPropButton*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropCombineBall>(CPropCombineBall*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropCombineBall>(CPropCombineBall*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropDoorRotating>(CPropDoorRotating*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropDoorRotating>(CPropDoorRotating*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropEnergyBall>(CPropEnergyBall*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropEnergyBall>(CPropEnergyBall*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropExplodingFutbol>(CPropExplodingFutbol*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropExplodingFutbol>(CPropExplodingFutbol*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropFloorBallButton>(CPropFloorBallButton*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropFloorButton>(CPropFloorButton*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropFloorButton>(CPropFloorButton*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropFloorCubeButton>(CPropFloorCubeButton*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropFutbolSpawner>(CPropFutbolSpawner*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropFutbolSpawner>(CPropFutbolSpawner*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropGladosCore>(CPropGladosCore*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropGladosCore>(CPropGladosCore*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropGlassFutbol>(CPropGlassFutbol*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropGlassFutbol>(CPropGlassFutbol*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropIndicatorPanel>(CPropIndicatorPanel*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropIndicatorPanel>(CPropIndicatorPanel*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropLinkedPortalDoor>(CPropLinkedPortalDoor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropLinkedPortalDoor>(CPropLinkedPortalDoor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropMonsterBox>(CPropMonsterBox*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropMonsterBox>(CPropMonsterBox*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropPaintBomb>(CPropPaintBomb*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropPaintBomb>(CPropPaintBomb*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropPersonalitySphere>(CPropPersonalitySphere*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropPersonalitySphere>(CPropPersonalitySphere*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropPortalStatsDisplay>(CPropPortalStatsDisplay*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropPortalStatsDisplay>(CPropPortalStatsDisplay*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropRocketTripwire>(CPropRocketTripwire*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropRocketTripwire>(CPropRocketTripwire*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropTelescopicArm>(CPropTelescopicArm*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropTelescopicArm>(CPropTelescopicArm*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropTestChamberDoor>(CPropTestChamberDoor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropTestChamberDoor>(CPropTestChamberDoor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropTicTacToePanel>(CPropTicTacToePanel*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropTicTacToePanel>(CPropTicTacToePanel*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropTractorBeamProjector>(CPropTractorBeamProjector*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropTractorBeamProjector>(CPropTractorBeamProjector*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropUnderButton>(CPropUnderButton*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropUnderFloorButton>(CPropUnderFloorButton*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropVehicle>(CPropVehicle*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropVehicle>(CPropVehicle*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropVehicleChoreoGeneric>(CPropVehicleChoreoGeneric*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropVehicleChoreoGeneric>(CPropVehicleChoreoGeneric*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropVehicleDriveable>(CPropVehicleDriveable*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropVehicleDriveable>(CPropVehicleDriveable*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropVehicleViewController>(CPropVehicleViewController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropWallProjector>(CPropWallProjector*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropWallProjector>(CPropWallProjector*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CPropWeightedCube>(CPropWeightedCube*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CPropWeightedCube>(CPropWeightedCube*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CProp_Hallucination>(CProp_Hallucination*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CProp_Mirror>(CProp_Mirror*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CProp_Portal>(CProp_Portal*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CProp_Portal>(CProp_Portal*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRagdollBoogie>(CRagdollBoogie*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CRagdollBoogie>(CRagdollBoogie*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRagdollConstraint>(CRagdollConstraint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRagdollMagnet>(CRagdollMagnet*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRagdollManager>(CRagdollManager*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRagdollProp>(CRagdollProp*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CRagdollProp>(CRagdollProp*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRagdollPropAttached>(CRagdollPropAttached*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CRagdollPropAttached>(CRagdollPropAttached*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRallyPoint>(CRallyPoint*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CRallyPoint>(CRallyPoint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRandSimTimer>(CRandSimTimer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRandStopwatch>(CRandStopwatch*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRecharge>(CRecharge*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CRecharge>(CRecharge*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRevertSaved>(CRevertSaved*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CRevertSaved>(CRevertSaved*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRocket_Turret_Projectile>(CRocket_Turret_Projectile*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CRocket_Turret_Projectile>(CRocket_Turret_Projectile*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRopeAnchor>(CRopeAnchor*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CRopeAnchor>(CRopeAnchor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRopeKeyframe>(CRopeKeyframe*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRotDoor>(CRotDoor*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRotorWashShooter>(CRotorWashShooter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRuleEntity>(CRuleEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRulePointEntity>(CRulePointEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSceneEntity>(CSceneEntity*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CSceneEntity>(CSceneEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSceneListManager>(CSceneListManager*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CSceneListManager>(CSceneListManager*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSceneManager>(CSceneManager*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CSceneManager>(CSceneManager*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CScriptIntro>(CScriptIntro*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CScriptIntro>(CScriptIntro*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CScriptedTarget>(CScriptedTarget*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CScriptedTarget>(CScriptedTarget*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CServerNetworkProperty>(CServerNetworkProperty*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CShadowControl>(CShadowControl*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSimTimer>(CSimTimer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSimpleSimTimer>(CSimpleSimTimer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSkyCamera>(CSkyCamera*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSkyboxSwapper>(CSkyboxSwapper*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSlideshowDisplay>(CSlideshowDisplay*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSmokeStack>(CSmokeStack*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSmokeStackLightInfo>(CSmokeStackLightInfo*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSound>(CSound*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSoundEnt>(CSoundEnt*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSoundEnvelope>(CSoundEnvelope*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSoundPatch>(CSoundPatch*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSpatialEntity>(CSpatialEntity*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CSpatialEntity>(CSpatialEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSpeaker>(CSpeaker*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CSpeaker>(CSpeaker*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSpotlightEnd>(CSpotlightEnd*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSprite>(CSprite*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CSprite>(CSprite*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSpriteTrail>(CSpriteTrail*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CStatueProp>(CStatueProp*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CStatueProp>(CStatueProp*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSteamJet>(CSteamJet*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CStopwatch>(CStopwatch*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CStopwatchBase>(CStopwatchBase*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CStripWeapons>(CStripWeapons*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSun>(CSun*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSunlightShadowControl>(CSunlightShadowControl*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTakeDamageInfo>(CTakeDamageInfo*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTankTargetChange>(CTankTargetChange*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTankTrainAI>(CTankTrainAI*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTankTrainAI>(CTankTrainAI*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTargetCDAudioRep>(CTargetCDAudioRep*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTargetChangeGravity>(CTargetChangeGravity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTeamSpawnPoint>(CTeamSpawnPoint*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTeamSpawnPoint>(CTeamSpawnPoint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTeamVehicleSpawnPoint>(CTeamVehicleSpawnPoint*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTeamVehicleSpawnPoint>(CTeamVehicleSpawnPoint*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTemplateNPCMaker>(CTemplateNPCMaker*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTesla>(CTesla*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTesla>(CTesla*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTestTraceline>(CTestTraceline*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTestTraceline>(CTestTraceline*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTextureToggle>(CTextureToggle*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CThrustController>(CThrustController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTimeline>(CTimeline*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTimerEntity>(CTimerEntity*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTimerEntity>(CTimerEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTonemapTrigger>(CTonemapTrigger*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerAutoCrouch>(CTriggerAutoCrouch*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerBrush>(CTriggerBrush*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerBrush>(CTriggerBrush*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerCamera>(CTriggerCamera*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerCamera>(CTriggerCamera*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerCameraMultiplayer>(CTriggerCameraMultiplayer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerCatapult>(CTriggerCatapult*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerCatapult>(CTriggerCatapult*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerGravity>(CTriggerGravity*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerGravity>(CTriggerGravity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerHierarchy>(CTriggerHierarchy*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerHurt>(CTriggerHurt*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerHurt>(CTriggerHurt*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerImpact>(CTriggerImpact*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerImpact>(CTriggerImpact*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerLook>(CTriggerLook*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerLook>(CTriggerLook*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerMultiple>(CTriggerMultiple*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerMultiple>(CTriggerMultiple*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerPaintCleanser>(CTriggerPaintCleanser*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerPhysicsTrap>(CTriggerPhysicsTrap*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerPingDetector>(CTriggerPingDetector*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerPingDetector>(CTriggerPingDetector*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerPlayerMovement>(CTriggerPlayerMovement*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerPlayerTeam>(CTriggerPlayerTeam*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerPlayerTeam>(CTriggerPlayerTeam*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerPortalCleanser>(CTriggerPortalCleanser*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerPortalCleanser>(CTriggerPortalCleanser*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerProximity>(CTriggerProximity*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerProximity>(CTriggerProximity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerPush>(CTriggerPush*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerRemove>(CTriggerRemove*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerRemove>(CTriggerRemove*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerSave>(CTriggerSave*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerSoundscape>(CTriggerSoundscape*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerSoundscape>(CTriggerSoundscape*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerTeleport>(CTriggerTeleport*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerToggleSave>(CTriggerToggleSave*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerVPhysicsMotion>(CTriggerVPhysicsMotion*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerVPhysicsMotion>(CTriggerVPhysicsMotion*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerViewProxy>(CTriggerViewProxy*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerViewProxy>(CTriggerViewProxy*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerWateryDeath>(CTriggerWateryDeath*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerWateryDeath>(CTriggerWateryDeath*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerWeaponDissolve>(CTriggerWeaponDissolve*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerWeaponDissolve>(CTriggerWeaponDissolve*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerWeaponStrip>(CTriggerWeaponStrip*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTriggerWind>(CTriggerWind*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTriggerWind>(CTriggerWind*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTrigger_TractorBeam>(CTrigger_TractorBeam*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTrigger_TractorBeam>(CTrigger_TractorBeam*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTurretTipController>(CTurretTipController*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CTurretTipController>(CTurretTipController*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CVGuiScreen>(CVGuiScreen*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWC_UpdateIgnoreList>(CWC_UpdateIgnoreList*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWaterBullet>(CWaterBullet*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CWaterBullet>(CWaterBullet*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWaterLODControl>(CWaterLODControl*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWateryDeathLeech>(CWateryDeathLeech*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CWateryDeathLeech>(CWateryDeathLeech*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWeaponCycler>(CWeaponCycler*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWeaponItemBase>(CWeaponItemBase*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CWeaponItemBase>(CWeaponItemBase*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWeaponPaintGun>(CWeaponPaintGun*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CWeaponPaintGun>(CWeaponPaintGun*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWeaponPortalBase>(CWeaponPortalBase*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWeaponPortalgun>(CWeaponPortalgun*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CWeaponPortalgun>(CWeaponPortalgun*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWeaponPromoAntennaBall>(CWeaponPromoAntennaBall*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWeaponPromoAntennaEgg>(CWeaponPromoAntennaEgg*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWeaponPromoHelmetBall>(CWeaponPromoHelmetBall*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWeaponPromoHelmetEgg>(CWeaponPromoHelmetEgg*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWeightButton>(CWeightButton*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CWeightButton>(CWeightButton*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWindowPane>(CWindowPane*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CWindowPane>(CWindowPane*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWorld>(CWorld*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWorldItem>(CWorldItem*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CWreckage>(CWreckage*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CaptionLookup_t>(CaptionLookup_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CompiledCaptionHeader_t>(CompiledCaptionHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ConceptHistory_t>(ConceptHistory_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<DustTrail>(DustTrail*)::nameHolder
 D guard variable for datamap_t* DataMapInit<EntityParticleTrailInfo_t>(EntityParticleTrailInfo_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<EventQueuePrioritizedEvent_t>(EventQueuePrioritizedEvent_t*)::dataDesc
 D guard variable for datamap_t* DataMapInit<EventQueuePrioritizedEvent_t>(EventQueuePrioritizedEvent_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<FilterDamageType>(FilterDamageType*)::nameHolder
 D guard variable for datamap_t* DataMapInit<FilterTeam>(FilterTeam*)::nameHolder
 D guard variable for datamap_t* DataMapInit<FizzlerEffects>(FizzlerEffects*)::dataDesc
 D guard variable for datamap_t* DataMapInit<FizzlerEffects>(FizzlerEffects*)::nameHolder
 D guard variable for datamap_t* DataMapInit<FizzlerMultiOriginSoundPlayer>(FizzlerMultiOriginSoundPlayer*)::dataDesc
 D guard variable for datamap_t* DataMapInit<FizzlerMultiOriginSoundPlayer>(FizzlerMultiOriginSoundPlayer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<HintNodeData>(HintNodeData*)::nameHolder
 D guard variable for datamap_t* DataMapInit<IntervalTimer>(IntervalTimer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<PaintPowerInfo_t>(PaintPowerInfo_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ParticleSmokeGrenade>(ParticleSmokeGrenade*)::nameHolder
 D guard variable for datamap_t* DataMapInit<PhysBlockHeader_t>(PhysBlockHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<PhysObjectHeader_t>(PhysObjectHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<PortalPlayerStatistics_t>(PortalPlayerStatistics_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<Relationship_t>(Relationship_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ResponseContext_t>(ResponseContext_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ResponseRules::CRR_Response>(ResponseRules::CRR_Response*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ResponseRules::ParserResponse>(ResponseRules::ParserResponse*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ResponseRules::ResponseGroup>(ResponseRules::ResponseGroup*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ResponseRules::ResponseParams>(ResponseRules::ResponseParams*)::nameHolder
 D guard variable for datamap_t* DataMapInit<RocketTrail>(RocketTrail*)::nameHolder
 D guard variable for datamap_t* DataMapInit<SaveRestoreBlockHeader_t>(SaveRestoreBlockHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ScriptedNPCInteraction_Phases_t>(ScriptedNPCInteraction_Phases_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ScriptedNPCInteraction_t>(ScriptedNPCInteraction_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<SmokeTrail>(SmokeTrail*)::nameHolder
 D guard variable for datamap_t* DataMapInit<SoundCommand_t>(SoundCommand_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<SporeExplosion>(SporeExplosion*)::nameHolder
 D guard variable for datamap_t* DataMapInit<SporeTrail>(SporeTrail*)::nameHolder
 D guard variable for datamap_t* DataMapInit<TemplateEntityData_t>(TemplateEntityData_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<UnreachableEnt_t>(UnreachableEnt_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ViewSmoothingData_t>(ViewSmoothingData_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<audioparams_t>(audioparams_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<entitytable_t>(entitytable_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<flexsetting_t>(flexsetting_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<flexsettinghdr_t>(flexsettinghdr_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<flexweight_t>(flexweight_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<fogparams_t>(fogparams_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<fogplayerparams_t>(fogplayerparams_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<game_shadowcontrol_params_t>(game_shadowcontrol_params_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<globalentity_t>(globalentity_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<locksound_t>(locksound_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<magnetted_objects_t>(magnetted_objects_t*)::dataDesc
 D guard variable for datamap_t* DataMapInit<magnetted_objects_t>(magnetted_objects_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<modifiedconvars_t>(modifiedconvars_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<physfollower_t>(physfollower_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<sky3dparams_t>(sky3dparams_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<template_t>(template_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<thinkfunc_t>(thinkfunc_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<thrown_objects_t>(thrown_objects_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<vehicle_crashsound_t>(vehicle_crashsound_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<vehicle_gear_t>(vehicle_gear_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<vehiclesounds_t>(vehiclesounds_t*)::dataDesc
 D guard variable for datamap_t* DataMapInit<vehiclesounds_t>(vehiclesounds_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<vehicleview_t>(vehicleview_t*)::nameHolder
 D guard variable for int ServerClassInit<DT_AI_BaseNPC::ignored>(DT_AI_BaseNPC::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_AR2Explosion::ignored>(DT_AR2Explosion::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_AnimTimeMustBeFirst::ignored>(DT_AnimTimeMustBeFirst::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Animationlayer::ignored>(DT_Animationlayer::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_AttributeContainer::ignored>(DT_AttributeContainer::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_AttributeContainerPlayer::ignored>(DT_AttributeContainerPlayer::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_AttributeList::ignored>(DT_AttributeList::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_AttributeManager::ignored>(DT_AttributeManager::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BCCLocalPlayerExclusive::ignored>(DT_BCCLocalPlayerExclusive::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseAnimating::ignored>(DT_BaseAnimating::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseAnimatingOverlay::ignored>(DT_BaseAnimatingOverlay::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseBeam::ignored>(DT_BaseBeam::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseButton::ignored>(DT_BaseButton::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseCombatCharacter::ignored>(DT_BaseCombatCharacter::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseCombatWeapon::ignored>(DT_BaseCombatWeapon::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseDoor::ignored>(DT_BaseDoor::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseEntity::ignored>(DT_BaseEntity::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseFlex::ignored>(DT_BaseFlex::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseGrenade::ignored>(DT_BaseGrenade::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseHLCombatWeapon::ignored>(DT_BaseHLCombatWeapon::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseParticleEntity::ignored>(DT_BaseParticleEntity::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BasePlayer::ignored>(DT_BasePlayer::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BasePortalCombatWeapon::ignored>(DT_BasePortalCombatWeapon::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseProjectedEntity::ignored>(DT_BaseProjectedEntity::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseProjector::ignored>(DT_BaseProjector::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BasePropDoor::ignored>(DT_BasePropDoor::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseTempEntity::ignored>(DT_BaseTempEntity::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseToggle::ignored>(DT_BaseToggle::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseTrigger::ignored>(DT_BaseTrigger::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseVPhysicsTrigger::ignored>(DT_BaseVPhysicsTrigger::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BaseViewModel::ignored>(DT_BaseViewModel::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Beam::ignored>(DT_Beam::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BeamSpotlight::ignored>(DT_BeamSpotlight::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BoneFollower::ignored>(DT_BoneFollower::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BreakableProp::ignored>(DT_BreakableProp::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_BreakableSurface::ignored>(DT_BreakableSurface::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_CFish::ignored>(DT_CFish::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_CitadelEnergyCore::ignored>(DT_CitadelEnergyCore::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_CollisionProperty::ignored>(DT_CollisionProperty::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ColorCorrection::ignored>(DT_ColorCorrection::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ColorCorrectionVolume::ignored>(DT_ColorCorrectionVolume::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Corpse::ignored>(DT_Corpse::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_CountdownTimer::ignored>(DT_CountdownTimer::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_DetailController::ignored>(DT_DetailController::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_DustTrail::ignored>(DT_DustTrail::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_DynamicLight::ignored>(DT_DynamicLight::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_DynamicProp::ignored>(DT_DynamicProp::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EffectData::ignored>(DT_EffectData::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Embers::ignored>(DT_Embers::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EntityDissolve::ignored>(DT_EntityDissolve::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EntityFlame::ignored>(DT_EntityFlame::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EntityFreezing::ignored>(DT_EntityFreezing::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EntityParticleTrail::ignored>(DT_EntityParticleTrail::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EntityParticleTrailInfo::ignored>(DT_EntityParticleTrailInfo::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EntityPortalledNetworkMessage::ignored>(DT_EntityPortalledNetworkMessage::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EnvAmbientLight::ignored>(DT_EnvAmbientLight::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EnvDOFController::ignored>(DT_EnvDOFController::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EnvParticleScript::ignored>(DT_EnvParticleScript::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EnvPortalPathTrack::ignored>(DT_EnvPortalPathTrack::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EnvProjectedTexture::ignored>(DT_EnvProjectedTexture::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EnvScreenEffect::ignored>(DT_EnvScreenEffect::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EnvScreenOverlay::ignored>(DT_EnvScreenOverlay::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EnvTonemapController::ignored>(DT_EnvTonemapController::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EnvWind::ignored>(DT_EnvWind::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_EnvWindShared::ignored>(DT_EnvWindShared::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Env_Lightrail_Endpoint::ignored>(DT_Env_Lightrail_Endpoint::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FireSmoke::ignored>(DT_FireSmoke::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FireTrail::ignored>(DT_FireTrail::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FizzlerEffects::ignored>(DT_FizzlerEffects::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FizzlerMultiOriginSoundPlayer::ignored>(DT_FizzlerMultiOriginSoundPlayer::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FogController::ignored>(DT_FogController::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncAreaPortalWindow::ignored>(DT_FuncAreaPortalWindow::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncBrush::ignored>(DT_FuncBrush::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncConveyor::ignored>(DT_FuncConveyor::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncLadder::ignored>(DT_FuncLadder::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncMonitor::ignored>(DT_FuncMonitor::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncMoveLinear::ignored>(DT_FuncMoveLinear::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncNoPortalVolume::ignored>(DT_FuncNoPortalVolume::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncOccluder::ignored>(DT_FuncOccluder::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncPortalBumper::ignored>(DT_FuncPortalBumper::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncReflectiveGlass::ignored>(DT_FuncReflectiveGlass::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncRotating::ignored>(DT_FuncRotating::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncSmokeVolume::ignored>(DT_FuncSmokeVolume::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_FuncTrackTrain::ignored>(DT_FuncTrackTrain::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Func_Dust::ignored>(DT_Func_Dust::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Func_LOD::ignored>(DT_Func_LOD::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_GameRulesProxy::ignored>(DT_GameRulesProxy::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_HL2GameRules::ignored>(DT_HL2GameRules::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_HLMachineGun::ignored>(DT_HLMachineGun::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_HLSelectFireMachineGun::ignored>(DT_HLSelectFireMachineGun::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_HalfLife2Proxy::ignored>(DT_HalfLife2Proxy::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_HandleTest::ignored>(DT_HandleTest::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_InfoLadderDismount::ignored>(DT_InfoLadderDismount::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_InfoOverlayAccessor::ignored>(DT_InfoOverlayAccessor::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_InfoPlacementHelper::ignored>(DT_InfoPlacementHelper::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_InfoPortalScore::ignored>(DT_InfoPortalScore::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_IntervalTimer::ignored>(DT_IntervalTimer::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_LabIndicatorPanel::ignored>(DT_LabIndicatorPanel::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_LevelPlacardDisplay::ignored>(DT_LevelPlacardDisplay::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_LightGlow::ignored>(DT_LightGlow::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Local::ignored>(DT_Local::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_LocalActiveWeaponData::ignored>(DT_LocalActiveWeaponData::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_LocalPlayerExclusive::ignored>(DT_LocalPlayerExclusive::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_LocalWeaponData::ignored>(DT_LocalWeaponData::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_MP_LobbyScreen::ignored>(DT_MP_LobbyScreen::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_MaterialModifyControl::ignored>(DT_MaterialModifyControl::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_MortarShell::ignored>(DT_MortarShell::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_MovieDisplay::ignored>(DT_MovieDisplay::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_MovieExplosion::ignored>(DT_MovieExplosion::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_NPC_HoverTurret::ignored>(DT_NPC_HoverTurret::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_NPC_Personality_Core::ignored>(DT_NPC_Personality_Core::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_NPC_Portal_FloorTurret::ignored>(DT_NPC_Portal_FloorTurret::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_NPC_RocketTurret::ignored>(DT_NPC_RocketTurret::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_NPC_Wheatley_Boss::ignored>(DT_NPC_Wheatley_Boss::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_NeurotoxinCountdown::ignored>(DT_NeurotoxinCountdown::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_OverlayVars::ignored>(DT_OverlayVars::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PSCollisionEntity::ignored>(DT_PSCollisionEntity::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PS_InternalData_t::ignored>(DT_PS_InternalData_t::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PS_SimulationData_t::ignored>(DT_PS_SimulationData_t::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PaintSprayer::ignored>(DT_PaintSprayer::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PaintStream::ignored>(DT_PaintStream::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ParticleFire::ignored>(DT_ParticleFire::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ParticlePerformanceMonitor::ignored>(DT_ParticlePerformanceMonitor::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ParticleSmokeGrenade::ignored>(DT_ParticleSmokeGrenade::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ParticleSystem::ignored>(DT_ParticleSystem::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PhysBox::ignored>(DT_PhysBox::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PhysBoxMultiplayer::ignored>(DT_PhysBoxMultiplayer::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PhysMagnet::ignored>(DT_PhysMagnet::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PhysicsProp::ignored>(DT_PhysicsProp::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PhysicsPropMultiplayer::ignored>(DT_PhysicsPropMultiplayer::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Plasma::ignored>(DT_Plasma::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PlayerResource::ignored>(DT_PlayerResource::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PlayerState::ignored>(DT_PlayerState::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PointCamera::ignored>(DT_PointCamera::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PointCommentaryNode::ignored>(DT_PointCommentaryNode::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PointSurvey::ignored>(DT_PointSurvey::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PortalGameRules::ignored>(DT_PortalGameRules::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PortalGameRulesProxy::ignored>(DT_PortalGameRulesProxy::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PortalLaser::ignored>(DT_PortalLaser::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PortalLocal::ignored>(DT_PortalLocal::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PortalLocalPlayerExclusive::ignored>(DT_PortalLocalPlayerExclusive::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PortalMPGameRules::ignored>(DT_PortalMPGameRules::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PortalMPGameRulesProxy::ignored>(DT_PortalMPGameRulesProxy::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PortalMPStatsProxy::ignored>(DT_PortalMPStatsProxy::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PortalNonLocalPlayerExclusive::ignored>(DT_PortalNonLocalPlayerExclusive::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PortalPlayerShared::ignored>(DT_PortalPlayerShared::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PortalPlayerStatistics::ignored>(DT_PortalPlayerStatistics::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PortalPointPush::ignored>(DT_PortalPointPush::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PortalRagdoll::ignored>(DT_PortalRagdoll::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PortalSimulator::ignored>(DT_PortalSimulator::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Portal_Base2D::ignored>(DT_Portal_Base2D::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Portal_MP_Stats::ignored>(DT_Portal_MP_Stats::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Portal_Player::ignored>(DT_Portal_Player::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PoseController::ignored>(DT_PoseController::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PostProcessController::ignored>(DT_PostProcessController::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Precipitation::ignored>(DT_Precipitation::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PrecipitationBlocker::ignored>(DT_PrecipitationBlocker::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PredictedViewModel::ignored>(DT_PredictedViewModel::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ProjectedEntityAmbientSoundProxy::ignored>(DT_ProjectedEntityAmbientSoundProxy::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ProjectedTractorBeamEntity::ignored>(DT_ProjectedTractorBeamEntity::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ProjectedWallEntity::ignored>(DT_ProjectedWallEntity::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PropCombineBall::ignored>(DT_PropCombineBall::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PropDoorRotating::ignored>(DT_PropDoorRotating::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PropEnergyBall::ignored>(DT_PropEnergyBall::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PropFloorButton::ignored>(DT_PropFloorButton::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PropLinkedPortalDoor::ignored>(DT_PropLinkedPortalDoor::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PropPaintBomb::ignored>(DT_PropPaintBomb::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PropPortalStatsDisplay::ignored>(DT_PropPortalStatsDisplay::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PropRocketTripwire::ignored>(DT_PropRocketTripwire::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PropTractorBeamProjector::ignored>(DT_PropTractorBeamProjector::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PropVehicleChoreoGeneric::ignored>(DT_PropVehicleChoreoGeneric::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PropVehicleDriveable::ignored>(DT_PropVehicleDriveable::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_PropWeightedCube::ignored>(DT_PropWeightedCube::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Prop_Hallucination::ignored>(DT_Prop_Hallucination::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Prop_Mirror::ignored>(DT_Prop_Mirror::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Prop_Portal::ignored>(DT_Prop_Portal::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ProxyToggle::ignored>(DT_ProxyToggle::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ProxyToggle_ProxiedData::ignored>(DT_ProxyToggle_ProxiedData::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_QuadraticBeam::ignored>(DT_QuadraticBeam::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Ragdoll::ignored>(DT_Ragdoll::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_RagdollManager::ignored>(DT_RagdollManager::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Ragdoll_Attached::ignored>(DT_Ragdoll_Attached::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_RocketTrail::ignored>(DT_RocketTrail::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_RopeKeyframe::ignored>(DT_RopeKeyframe::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SceneEntity::ignored>(DT_SceneEntity::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ScriptCreatedAttribute::ignored>(DT_ScriptCreatedAttribute::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ScriptCreatedItem::ignored>(DT_ScriptCreatedItem::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ScriptIntro::ignored>(DT_ScriptIntro::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ServerAnimationData::ignored>(DT_ServerAnimationData::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_ShadowControl::ignored>(DT_ShadowControl::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SlideshowDisplay::ignored>(DT_SlideshowDisplay::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SmokeStack::ignored>(DT_SmokeStack::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SmokeTrail::ignored>(DT_SmokeTrail::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SpatialEntity::ignored>(DT_SpatialEntity::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SporeExplosion::ignored>(DT_SporeExplosion::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SporeTrail::ignored>(DT_SporeTrail::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SpotlightEnd::ignored>(DT_SpotlightEnd::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Sprite::ignored>(DT_Sprite::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SpriteOriented::ignored>(DT_SpriteOriented::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SpriteTrail::ignored>(DT_SpriteTrail::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_StatueProp::ignored>(DT_StatueProp::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SteamJet::ignored>(DT_SteamJet::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Sun::ignored>(DT_Sun::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_SunlightShadowControl::ignored>(DT_SunlightShadowControl::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEAntlionDust::ignored>(DT_TEAntlionDust::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEArmorRicochet::ignored>(DT_TEArmorRicochet::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBSPDecal::ignored>(DT_TEBSPDecal::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBeamEntPoint::ignored>(DT_TEBeamEntPoint::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBeamEnts::ignored>(DT_TEBeamEnts::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBeamFollow::ignored>(DT_TEBeamFollow::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBeamLaser::ignored>(DT_TEBeamLaser::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBeamPoints::ignored>(DT_TEBeamPoints::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBeamRing::ignored>(DT_TEBeamRing::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBeamRingPoint::ignored>(DT_TEBeamRingPoint::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBeamSpline::ignored>(DT_TEBeamSpline::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBloodSprite::ignored>(DT_TEBloodSprite::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBloodStream::ignored>(DT_TEBloodStream::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBreakModel::ignored>(DT_TEBreakModel::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBubbleTrail::ignored>(DT_TEBubbleTrail::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEBubbles::ignored>(DT_TEBubbles::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEClientProjectile::ignored>(DT_TEClientProjectile::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEDecal::ignored>(DT_TEDecal::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEDust::ignored>(DT_TEDust::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEDynamicLight::ignored>(DT_TEDynamicLight::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEEffectDispatch::ignored>(DT_TEEffectDispatch::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEEnergySplash::ignored>(DT_TEEnergySplash::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEExplosion::ignored>(DT_TEExplosion::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEFizz::ignored>(DT_TEFizz::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEFootprintDecal::ignored>(DT_TEFootprintDecal::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEFoundryHelpers::ignored>(DT_TEFoundryHelpers::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEGaussExplosion::ignored>(DT_TEGaussExplosion::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEGlowSprite::ignored>(DT_TEGlowSprite::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEImpact::ignored>(DT_TEImpact::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEKillPlayerAttachments::ignored>(DT_TEKillPlayerAttachments::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TELargeFunnel::ignored>(DT_TELargeFunnel::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEMetalSparks::ignored>(DT_TEMetalSparks::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEMuzzleFlash::ignored>(DT_TEMuzzleFlash::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEParticleSystem::ignored>(DT_TEParticleSystem::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEPhysicsProp::ignored>(DT_TEPhysicsProp::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEPlayerAnimEvent::ignored>(DT_TEPlayerAnimEvent::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEPlayerDecal::ignored>(DT_TEPlayerDecal::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEProjectedDecal::ignored>(DT_TEProjectedDecal::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEShatterSurface::ignored>(DT_TEShatterSurface::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEShowLine::ignored>(DT_TEShowLine::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TESmoke::ignored>(DT_TESmoke::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TESparks::ignored>(DT_TESparks::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TESprite::ignored>(DT_TESprite::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TESpriteSpray::ignored>(DT_TESpriteSpray::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEWallPaintedEvent::ignored>(DT_TEWallPaintedEvent::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TEWorldDecal::ignored>(DT_TEWorldDecal::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Team::ignored>(DT_Team::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Tesla::ignored>(DT_Tesla::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TestTraceline::ignored>(DT_TestTraceline::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Timeline::ignored>(DT_Timeline::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TriggerCatapult::ignored>(DT_TriggerCatapult::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TriggerPaintCleanser::ignored>(DT_TriggerPaintCleanser::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TriggerPlayerMovement::ignored>(DT_TriggerPlayerMovement::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_TriggerPortalCleanser::ignored>(DT_TriggerPortalCleanser::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_Trigger_TractorBeam::ignored>(DT_Trigger_TractorBeam::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_VGuiScreen::ignored>(DT_VGuiScreen::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WORLD::ignored>(DT_WORLD::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WaterBullet::ignored>(DT_WaterBullet::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WaterLODControl::ignored>(DT_WaterLODControl::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponCubemap::ignored>(DT_WeaponCubemap::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponCycler::ignored>(DT_WeaponCycler::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponItemBase::ignored>(DT_WeaponItemBase::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponPaintGun::ignored>(DT_WeaponPaintGun::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponPortalBase::ignored>(DT_WeaponPortalBase::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponPortalgun::ignored>(DT_WeaponPortalgun::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponPromoAntennaBall::ignored>(DT_WeaponPromoAntennaBall::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponPromoAntennaEgg::ignored>(DT_WeaponPromoAntennaEgg::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponPromoHelmetBall::ignored>(DT_WeaponPromoHelmetBall::ignored*)::g_SendProps
 D guard variable for int ServerClassInit<DT_WeaponPromoHelmetEgg::ignored>(DT_WeaponPromoHelmetEgg::ignored*)::g_SendProps
 D guard variable for variant_t::Entity() const::hNull
 D guard variable for vgui::AnimatingImagePanel::GetKBMap()::s_pMap
 D guard variable for vgui::AnimatingImagePanel::GetMessageMap()::s_pMap
 D guard variable for vgui::AnimationController::GetKBMap()::s_pMap
 D guard variable for vgui::AnimationController::GetMessageMap()::s_pMap
 D guard variable for vgui::BuildModeDialog::GetKBMap()::s_pMap
 D guard variable for vgui::BuildModeDialog::GetMessageMap()::s_pMap
 D guard variable for vgui::Button::GetKBMap()::s_pMap
 D guard variable for vgui::Button::GetMessageMap()::s_pMap
 D guard variable for vgui::CTreeViewListControl::GetKBMap()::s_pMap
 D guard variable for vgui::CTreeViewListControl::GetMessageMap()::s_pMap
 D guard variable for vgui::CheckButton::GetKBMap()::s_pMap
 D guard variable for vgui::CheckButton::GetMessageMap()::s_pMap
 D guard variable for vgui::CircularProgressBar::GetKBMap()::s_pMap
 D guard variable for vgui::CircularProgressBar::GetMessageMap()::s_pMap
 D guard variable for vgui::ClickPanel::GetKBMap()::s_pMap
 D guard variable for vgui::ClickPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ComboBox::GetKBMap()::s_pMap
 D guard variable for vgui::ComboBox::GetMessageMap()::s_pMap
 D guard variable for vgui::ContinuousProgressBar::GetKBMap()::s_pMap
 D guard variable for vgui::ContinuousProgressBar::GetMessageMap()::s_pMap
 D guard variable for vgui::CvarToggleCheckButton<ConVarRef>::GetKBMap()::s_pMap
 D guard variable for vgui::CvarToggleCheckButton<ConVarRef>::GetMessageMap()::s_pMap
 D guard variable for vgui::Divider::GetKBMap()::s_pMap
 D guard variable for vgui::Divider::GetMessageMap()::s_pMap
 D guard variable for vgui::EditablePanel::GetKBMap()::s_pMap
 D guard variable for vgui::EditablePanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ExpandButton::GetKBMap()::s_pMap
 D guard variable for vgui::ExpandButton::GetMessageMap()::s_pMap
 D guard variable for vgui::Frame::GetKBMap()::s_pMap
 D guard variable for vgui::Frame::GetMessageMap()::s_pMap
 D guard variable for vgui::FrameSystemButton::GetKBMap()::s_pMap
 D guard variable for vgui::FrameSystemButton::GetMessageMap()::s_pMap
 D guard variable for vgui::GraphPanel::GetKBMap()::s_pMap
 D guard variable for vgui::GraphPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ImagePanel::GetKBMap()::s_pMap
 D guard variable for vgui::ImagePanel::GetMessageMap()::s_pMap
 D guard variable for vgui::Label::GetKBMap()::s_pMap
 D guard variable for vgui::Label::GetMessageMap()::s_pMap
 D guard variable for vgui::ListPanel::GetKBMap()::s_pMap
 D guard variable for vgui::ListPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ListViewItem::GetKBMap()::s_pMap
 D guard variable for vgui::ListViewItem::GetMessageMap()::s_pMap
 D guard variable for vgui::ListViewPanel::GetKBMap()::s_pMap
 D guard variable for vgui::ListViewPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::Menu::GetKBMap()::s_pMap
 D guard variable for vgui::Menu::GetMessageMap()::s_pMap
 D guard variable for vgui::MenuBar::GetKBMap()::s_pMap
 D guard variable for vgui::MenuBar::GetMessageMap()::s_pMap
 D guard variable for vgui::MenuButton::GetKBMap()::s_pMap
 D guard variable for vgui::MenuButton::GetMessageMap()::s_pMap
 D guard variable for vgui::MenuItem::GetKBMap()::s_pMap
 D guard variable for vgui::MenuItem::GetMessageMap()::s_pMap
 D guard variable for vgui::MenuSeparator::GetKBMap()::s_pMap
 D guard variable for vgui::MenuSeparator::GetMessageMap()::s_pMap
 D guard variable for vgui::MessageBox::GetKBMap()::s_pMap
 D guard variable for vgui::MessageBox::GetMessageMap()::s_pMap
 D guard variable for vgui::Panel::GetKBMap()::s_pMap
 D guard variable for vgui::Panel::GetMessageMap()::s_pMap
 D guard variable for vgui::PanelListPanel::GetKBMap()::s_pMap
 D guard variable for vgui::PanelListPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ProgressBar::GetKBMap()::s_pMap
 D guard variable for vgui::ProgressBar::GetMessageMap()::s_pMap
 D guard variable for vgui::RadioButton::GetKBMap()::s_pMap
 D guard variable for vgui::RadioButton::GetMessageMap()::s_pMap
 D guard variable for vgui::RichText::GetKBMap()::s_pMap
 D guard variable for vgui::RichText::GetMessageMap()::s_pMap
 D guard variable for vgui::RichTextInterior::GetKBMap()::s_pMap
 D guard variable for vgui::RichTextInterior::GetMessageMap()::s_pMap
 D guard variable for vgui::ScalableImagePanel::GetKBMap()::s_pMap
 D guard variable for vgui::ScalableImagePanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ScrollBar::GetKBMap()::s_pMap
 D guard variable for vgui::ScrollBar::GetMessageMap()::s_pMap
 D guard variable for vgui::ScrollBarSlider::GetKBMap()::s_pMap
 D guard variable for vgui::ScrollBarSlider::GetMessageMap()::s_pMap
 D guard variable for vgui::TextEntry::GetKBMap()::s_pMap
 D guard variable for vgui::TextEntry::GetMessageMap()::s_pMap
 D guard variable for vgui::ToggleButton::GetKBMap()::s_pMap
 D guard variable for vgui::ToggleButton::GetMessageMap()::s_pMap
 D guard variable for vgui::TreeNode::GetKBMap()::s_pMap
 D guard variable for vgui::TreeNode::GetMessageMap()::s_pMap
 D guard variable for vgui::TreeNodeDropPanel::GetKBMap()::s_pMap
 D guard variable for vgui::TreeNodeDropPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::TreeNodeText::GetKBMap()::s_pMap
 D guard variable for vgui::TreeNodeText::GetMessageMap()::s_pMap
 D guard variable for vgui::TreeView::GetKBMap()::s_pMap
 D guard variable for vgui::TreeView::GetMessageMap()::s_pMap
 D guard variable for vgui::URLLabel::GetKBMap()::s_pMap
 D guard variable for vgui::URLLabel::GetMessageMap()::s_pMap
 D hull
 D int ServerClassInit<DT_AI_BaseNPC::ignored>(DT_AI_BaseNPC::ignored*)::g_SendProps
 D int ServerClassInit<DT_AI_BaseNPC::ignored>(DT_AI_BaseNPC::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_AR2Explosion::ignored>(DT_AR2Explosion::ignored*)::g_SendProps
 D int ServerClassInit<DT_AR2Explosion::ignored>(DT_AR2Explosion::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_AnimTimeMustBeFirst::ignored>(DT_AnimTimeMustBeFirst::ignored*)::g_SendProps
 D int ServerClassInit<DT_AnimTimeMustBeFirst::ignored>(DT_AnimTimeMustBeFirst::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Animationlayer::ignored>(DT_Animationlayer::ignored*)::g_SendProps
 D int ServerClassInit<DT_Animationlayer::ignored>(DT_Animationlayer::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_AttributeContainer::ignored>(DT_AttributeContainer::ignored*)::g_SendProps
 D int ServerClassInit<DT_AttributeContainer::ignored>(DT_AttributeContainer::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_AttributeContainerPlayer::ignored>(DT_AttributeContainerPlayer::ignored*)::g_SendProps
 D int ServerClassInit<DT_AttributeContainerPlayer::ignored>(DT_AttributeContainerPlayer::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_AttributeList::ignored>(DT_AttributeList::ignored*)::g_SendProps
 D int ServerClassInit<DT_AttributeList::ignored>(DT_AttributeList::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_AttributeManager::ignored>(DT_AttributeManager::ignored*)::g_SendProps
 D int ServerClassInit<DT_AttributeManager::ignored>(DT_AttributeManager::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BCCLocalPlayerExclusive::ignored>(DT_BCCLocalPlayerExclusive::ignored*)::g_SendProps
 D int ServerClassInit<DT_BCCLocalPlayerExclusive::ignored>(DT_BCCLocalPlayerExclusive::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseAnimating::ignored>(DT_BaseAnimating::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseAnimating::ignored>(DT_BaseAnimating::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseAnimatingOverlay::ignored>(DT_BaseAnimatingOverlay::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseAnimatingOverlay::ignored>(DT_BaseAnimatingOverlay::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseBeam::ignored>(DT_BaseBeam::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseBeam::ignored>(DT_BaseBeam::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseButton::ignored>(DT_BaseButton::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseButton::ignored>(DT_BaseButton::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseCombatCharacter::ignored>(DT_BaseCombatCharacter::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseCombatCharacter::ignored>(DT_BaseCombatCharacter::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseCombatWeapon::ignored>(DT_BaseCombatWeapon::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseCombatWeapon::ignored>(DT_BaseCombatWeapon::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseDoor::ignored>(DT_BaseDoor::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseDoor::ignored>(DT_BaseDoor::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseEntity::ignored>(DT_BaseEntity::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseEntity::ignored>(DT_BaseEntity::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseFlex::ignored>(DT_BaseFlex::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseFlex::ignored>(DT_BaseFlex::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseGrenade::ignored>(DT_BaseGrenade::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseGrenade::ignored>(DT_BaseGrenade::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseHLCombatWeapon::ignored>(DT_BaseHLCombatWeapon::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseHLCombatWeapon::ignored>(DT_BaseHLCombatWeapon::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseParticleEntity::ignored>(DT_BaseParticleEntity::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseParticleEntity::ignored>(DT_BaseParticleEntity::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BasePlayer::ignored>(DT_BasePlayer::ignored*)::g_SendProps
 D int ServerClassInit<DT_BasePlayer::ignored>(DT_BasePlayer::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BasePortalCombatWeapon::ignored>(DT_BasePortalCombatWeapon::ignored*)::g_SendProps
 D int ServerClassInit<DT_BasePortalCombatWeapon::ignored>(DT_BasePortalCombatWeapon::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseProjectedEntity::ignored>(DT_BaseProjectedEntity::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseProjectedEntity::ignored>(DT_BaseProjectedEntity::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseProjector::ignored>(DT_BaseProjector::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseProjector::ignored>(DT_BaseProjector::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BasePropDoor::ignored>(DT_BasePropDoor::ignored*)::g_SendProps
 D int ServerClassInit<DT_BasePropDoor::ignored>(DT_BasePropDoor::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseTempEntity::ignored>(DT_BaseTempEntity::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseTempEntity::ignored>(DT_BaseTempEntity::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseToggle::ignored>(DT_BaseToggle::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseToggle::ignored>(DT_BaseToggle::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseTrigger::ignored>(DT_BaseTrigger::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseTrigger::ignored>(DT_BaseTrigger::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseVPhysicsTrigger::ignored>(DT_BaseVPhysicsTrigger::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseVPhysicsTrigger::ignored>(DT_BaseVPhysicsTrigger::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BaseViewModel::ignored>(DT_BaseViewModel::ignored*)::g_SendProps
 D int ServerClassInit<DT_BaseViewModel::ignored>(DT_BaseViewModel::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Beam::ignored>(DT_Beam::ignored*)::g_SendProps
 D int ServerClassInit<DT_Beam::ignored>(DT_Beam::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BeamSpotlight::ignored>(DT_BeamSpotlight::ignored*)::g_SendProps
 D int ServerClassInit<DT_BeamSpotlight::ignored>(DT_BeamSpotlight::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BoneFollower::ignored>(DT_BoneFollower::ignored*)::g_SendProps
 D int ServerClassInit<DT_BoneFollower::ignored>(DT_BoneFollower::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BreakableProp::ignored>(DT_BreakableProp::ignored*)::g_SendProps
 D int ServerClassInit<DT_BreakableProp::ignored>(DT_BreakableProp::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_BreakableSurface::ignored>(DT_BreakableSurface::ignored*)::g_SendProps
 D int ServerClassInit<DT_BreakableSurface::ignored>(DT_BreakableSurface::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_CFish::ignored>(DT_CFish::ignored*)::g_SendProps
 D int ServerClassInit<DT_CFish::ignored>(DT_CFish::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_CitadelEnergyCore::ignored>(DT_CitadelEnergyCore::ignored*)::g_SendProps
 D int ServerClassInit<DT_CitadelEnergyCore::ignored>(DT_CitadelEnergyCore::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_CollisionProperty::ignored>(DT_CollisionProperty::ignored*)::g_SendProps
 D int ServerClassInit<DT_CollisionProperty::ignored>(DT_CollisionProperty::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ColorCorrection::ignored>(DT_ColorCorrection::ignored*)::g_SendProps
 D int ServerClassInit<DT_ColorCorrection::ignored>(DT_ColorCorrection::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ColorCorrectionVolume::ignored>(DT_ColorCorrectionVolume::ignored*)::g_SendProps
 D int ServerClassInit<DT_ColorCorrectionVolume::ignored>(DT_ColorCorrectionVolume::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Corpse::ignored>(DT_Corpse::ignored*)::g_SendProps
 D int ServerClassInit<DT_Corpse::ignored>(DT_Corpse::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_CountdownTimer::ignored>(DT_CountdownTimer::ignored*)::g_SendProps
 D int ServerClassInit<DT_CountdownTimer::ignored>(DT_CountdownTimer::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_DetailController::ignored>(DT_DetailController::ignored*)::g_SendProps
 D int ServerClassInit<DT_DetailController::ignored>(DT_DetailController::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_DustTrail::ignored>(DT_DustTrail::ignored*)::g_SendProps
 D int ServerClassInit<DT_DustTrail::ignored>(DT_DustTrail::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_DynamicLight::ignored>(DT_DynamicLight::ignored*)::g_SendProps
 D int ServerClassInit<DT_DynamicLight::ignored>(DT_DynamicLight::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_DynamicProp::ignored>(DT_DynamicProp::ignored*)::g_SendProps
 D int ServerClassInit<DT_DynamicProp::ignored>(DT_DynamicProp::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EffectData::ignored>(DT_EffectData::ignored*)::g_SendProps
 D int ServerClassInit<DT_EffectData::ignored>(DT_EffectData::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Embers::ignored>(DT_Embers::ignored*)::g_SendProps
 D int ServerClassInit<DT_Embers::ignored>(DT_Embers::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EntityDissolve::ignored>(DT_EntityDissolve::ignored*)::g_SendProps
 D int ServerClassInit<DT_EntityDissolve::ignored>(DT_EntityDissolve::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EntityFlame::ignored>(DT_EntityFlame::ignored*)::g_SendProps
 D int ServerClassInit<DT_EntityFlame::ignored>(DT_EntityFlame::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EntityFreezing::ignored>(DT_EntityFreezing::ignored*)::g_SendProps
 D int ServerClassInit<DT_EntityFreezing::ignored>(DT_EntityFreezing::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EntityParticleTrail::ignored>(DT_EntityParticleTrail::ignored*)::g_SendProps
 D int ServerClassInit<DT_EntityParticleTrail::ignored>(DT_EntityParticleTrail::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EntityParticleTrailInfo::ignored>(DT_EntityParticleTrailInfo::ignored*)::g_SendProps
 D int ServerClassInit<DT_EntityParticleTrailInfo::ignored>(DT_EntityParticleTrailInfo::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EntityPortalledNetworkMessage::ignored>(DT_EntityPortalledNetworkMessage::ignored*)::g_SendProps
 D int ServerClassInit<DT_EntityPortalledNetworkMessage::ignored>(DT_EntityPortalledNetworkMessage::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EnvAmbientLight::ignored>(DT_EnvAmbientLight::ignored*)::g_SendProps
 D int ServerClassInit<DT_EnvAmbientLight::ignored>(DT_EnvAmbientLight::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EnvDOFController::ignored>(DT_EnvDOFController::ignored*)::g_SendProps
 D int ServerClassInit<DT_EnvDOFController::ignored>(DT_EnvDOFController::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EnvParticleScript::ignored>(DT_EnvParticleScript::ignored*)::g_SendProps
 D int ServerClassInit<DT_EnvParticleScript::ignored>(DT_EnvParticleScript::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EnvPortalPathTrack::ignored>(DT_EnvPortalPathTrack::ignored*)::g_SendProps
 D int ServerClassInit<DT_EnvPortalPathTrack::ignored>(DT_EnvPortalPathTrack::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EnvProjectedTexture::ignored>(DT_EnvProjectedTexture::ignored*)::g_SendProps
 D int ServerClassInit<DT_EnvProjectedTexture::ignored>(DT_EnvProjectedTexture::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EnvScreenEffect::ignored>(DT_EnvScreenEffect::ignored*)::g_SendProps
 D int ServerClassInit<DT_EnvScreenEffect::ignored>(DT_EnvScreenEffect::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EnvScreenOverlay::ignored>(DT_EnvScreenOverlay::ignored*)::g_SendProps
 D int ServerClassInit<DT_EnvScreenOverlay::ignored>(DT_EnvScreenOverlay::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EnvTonemapController::ignored>(DT_EnvTonemapController::ignored*)::g_SendProps
 D int ServerClassInit<DT_EnvTonemapController::ignored>(DT_EnvTonemapController::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EnvWind::ignored>(DT_EnvWind::ignored*)::g_SendProps
 D int ServerClassInit<DT_EnvWind::ignored>(DT_EnvWind::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_EnvWindShared::ignored>(DT_EnvWindShared::ignored*)::g_SendProps
 D int ServerClassInit<DT_EnvWindShared::ignored>(DT_EnvWindShared::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Env_Lightrail_Endpoint::ignored>(DT_Env_Lightrail_Endpoint::ignored*)::g_SendProps
 D int ServerClassInit<DT_Env_Lightrail_Endpoint::ignored>(DT_Env_Lightrail_Endpoint::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FireSmoke::ignored>(DT_FireSmoke::ignored*)::g_SendProps
 D int ServerClassInit<DT_FireSmoke::ignored>(DT_FireSmoke::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FireTrail::ignored>(DT_FireTrail::ignored*)::g_SendProps
 D int ServerClassInit<DT_FireTrail::ignored>(DT_FireTrail::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FizzlerEffects::ignored>(DT_FizzlerEffects::ignored*)::g_SendProps
 D int ServerClassInit<DT_FizzlerEffects::ignored>(DT_FizzlerEffects::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FizzlerMultiOriginSoundPlayer::ignored>(DT_FizzlerMultiOriginSoundPlayer::ignored*)::g_SendProps
 D int ServerClassInit<DT_FizzlerMultiOriginSoundPlayer::ignored>(DT_FizzlerMultiOriginSoundPlayer::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FogController::ignored>(DT_FogController::ignored*)::g_SendProps
 D int ServerClassInit<DT_FogController::ignored>(DT_FogController::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncAreaPortalWindow::ignored>(DT_FuncAreaPortalWindow::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncAreaPortalWindow::ignored>(DT_FuncAreaPortalWindow::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncBrush::ignored>(DT_FuncBrush::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncBrush::ignored>(DT_FuncBrush::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncConveyor::ignored>(DT_FuncConveyor::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncConveyor::ignored>(DT_FuncConveyor::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncLadder::ignored>(DT_FuncLadder::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncLadder::ignored>(DT_FuncLadder::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncMonitor::ignored>(DT_FuncMonitor::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncMonitor::ignored>(DT_FuncMonitor::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncMoveLinear::ignored>(DT_FuncMoveLinear::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncMoveLinear::ignored>(DT_FuncMoveLinear::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncNoPortalVolume::ignored>(DT_FuncNoPortalVolume::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncNoPortalVolume::ignored>(DT_FuncNoPortalVolume::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncOccluder::ignored>(DT_FuncOccluder::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncOccluder::ignored>(DT_FuncOccluder::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncPortalBumper::ignored>(DT_FuncPortalBumper::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncPortalBumper::ignored>(DT_FuncPortalBumper::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncReflectiveGlass::ignored>(DT_FuncReflectiveGlass::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncReflectiveGlass::ignored>(DT_FuncReflectiveGlass::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncRotating::ignored>(DT_FuncRotating::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncRotating::ignored>(DT_FuncRotating::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncSmokeVolume::ignored>(DT_FuncSmokeVolume::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncSmokeVolume::ignored>(DT_FuncSmokeVolume::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_FuncTrackTrain::ignored>(DT_FuncTrackTrain::ignored*)::g_SendProps
 D int ServerClassInit<DT_FuncTrackTrain::ignored>(DT_FuncTrackTrain::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Func_Dust::ignored>(DT_Func_Dust::ignored*)::g_SendProps
 D int ServerClassInit<DT_Func_Dust::ignored>(DT_Func_Dust::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Func_LOD::ignored>(DT_Func_LOD::ignored*)::g_SendProps
 D int ServerClassInit<DT_Func_LOD::ignored>(DT_Func_LOD::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_GameRulesProxy::ignored>(DT_GameRulesProxy::ignored*)::g_SendProps
 D int ServerClassInit<DT_GameRulesProxy::ignored>(DT_GameRulesProxy::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_HL2GameRules::ignored>(DT_HL2GameRules::ignored*)::g_SendProps
 D int ServerClassInit<DT_HL2GameRules::ignored>(DT_HL2GameRules::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_HLMachineGun::ignored>(DT_HLMachineGun::ignored*)::g_SendProps
 D int ServerClassInit<DT_HLMachineGun::ignored>(DT_HLMachineGun::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_HLSelectFireMachineGun::ignored>(DT_HLSelectFireMachineGun::ignored*)::g_SendProps
 D int ServerClassInit<DT_HLSelectFireMachineGun::ignored>(DT_HLSelectFireMachineGun::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_HalfLife2Proxy::ignored>(DT_HalfLife2Proxy::ignored*)::g_SendProps
 D int ServerClassInit<DT_HalfLife2Proxy::ignored>(DT_HalfLife2Proxy::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_HandleTest::ignored>(DT_HandleTest::ignored*)::g_SendProps
 D int ServerClassInit<DT_HandleTest::ignored>(DT_HandleTest::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_InfoLadderDismount::ignored>(DT_InfoLadderDismount::ignored*)::g_SendProps
 D int ServerClassInit<DT_InfoLadderDismount::ignored>(DT_InfoLadderDismount::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_InfoOverlayAccessor::ignored>(DT_InfoOverlayAccessor::ignored*)::g_SendProps
 D int ServerClassInit<DT_InfoOverlayAccessor::ignored>(DT_InfoOverlayAccessor::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_InfoPlacementHelper::ignored>(DT_InfoPlacementHelper::ignored*)::g_SendProps
 D int ServerClassInit<DT_InfoPlacementHelper::ignored>(DT_InfoPlacementHelper::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_InfoPortalScore::ignored>(DT_InfoPortalScore::ignored*)::g_SendProps
 D int ServerClassInit<DT_InfoPortalScore::ignored>(DT_InfoPortalScore::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_IntervalTimer::ignored>(DT_IntervalTimer::ignored*)::g_SendProps
 D int ServerClassInit<DT_IntervalTimer::ignored>(DT_IntervalTimer::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_LabIndicatorPanel::ignored>(DT_LabIndicatorPanel::ignored*)::g_SendProps
 D int ServerClassInit<DT_LabIndicatorPanel::ignored>(DT_LabIndicatorPanel::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_LevelPlacardDisplay::ignored>(DT_LevelPlacardDisplay::ignored*)::g_SendProps
 D int ServerClassInit<DT_LevelPlacardDisplay::ignored>(DT_LevelPlacardDisplay::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_LightGlow::ignored>(DT_LightGlow::ignored*)::g_SendProps
 D int ServerClassInit<DT_LightGlow::ignored>(DT_LightGlow::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Local::ignored>(DT_Local::ignored*)::g_SendProps
 D int ServerClassInit<DT_Local::ignored>(DT_Local::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_LocalActiveWeaponData::ignored>(DT_LocalActiveWeaponData::ignored*)::g_SendProps
 D int ServerClassInit<DT_LocalActiveWeaponData::ignored>(DT_LocalActiveWeaponData::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_LocalPlayerExclusive::ignored>(DT_LocalPlayerExclusive::ignored*)::g_SendProps
 D int ServerClassInit<DT_LocalPlayerExclusive::ignored>(DT_LocalPlayerExclusive::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_LocalWeaponData::ignored>(DT_LocalWeaponData::ignored*)::g_SendProps
 D int ServerClassInit<DT_LocalWeaponData::ignored>(DT_LocalWeaponData::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_MP_LobbyScreen::ignored>(DT_MP_LobbyScreen::ignored*)::g_SendProps
 D int ServerClassInit<DT_MP_LobbyScreen::ignored>(DT_MP_LobbyScreen::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_MaterialModifyControl::ignored>(DT_MaterialModifyControl::ignored*)::g_SendProps
 D int ServerClassInit<DT_MaterialModifyControl::ignored>(DT_MaterialModifyControl::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_MortarShell::ignored>(DT_MortarShell::ignored*)::g_SendProps
 D int ServerClassInit<DT_MortarShell::ignored>(DT_MortarShell::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_MovieDisplay::ignored>(DT_MovieDisplay::ignored*)::g_SendProps
 D int ServerClassInit<DT_MovieDisplay::ignored>(DT_MovieDisplay::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_MovieExplosion::ignored>(DT_MovieExplosion::ignored*)::g_SendProps
 D int ServerClassInit<DT_MovieExplosion::ignored>(DT_MovieExplosion::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_NPC_HoverTurret::ignored>(DT_NPC_HoverTurret::ignored*)::g_SendProps
 D int ServerClassInit<DT_NPC_HoverTurret::ignored>(DT_NPC_HoverTurret::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_NPC_Personality_Core::ignored>(DT_NPC_Personality_Core::ignored*)::g_SendProps
 D int ServerClassInit<DT_NPC_Personality_Core::ignored>(DT_NPC_Personality_Core::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_NPC_Portal_FloorTurret::ignored>(DT_NPC_Portal_FloorTurret::ignored*)::g_SendProps
 D int ServerClassInit<DT_NPC_Portal_FloorTurret::ignored>(DT_NPC_Portal_FloorTurret::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_NPC_RocketTurret::ignored>(DT_NPC_RocketTurret::ignored*)::g_SendProps
 D int ServerClassInit<DT_NPC_RocketTurret::ignored>(DT_NPC_RocketTurret::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_NPC_Wheatley_Boss::ignored>(DT_NPC_Wheatley_Boss::ignored*)::g_SendProps
 D int ServerClassInit<DT_NPC_Wheatley_Boss::ignored>(DT_NPC_Wheatley_Boss::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_NeurotoxinCountdown::ignored>(DT_NeurotoxinCountdown::ignored*)::g_SendProps
 D int ServerClassInit<DT_NeurotoxinCountdown::ignored>(DT_NeurotoxinCountdown::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_OverlayVars::ignored>(DT_OverlayVars::ignored*)::g_SendProps
 D int ServerClassInit<DT_OverlayVars::ignored>(DT_OverlayVars::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PSCollisionEntity::ignored>(DT_PSCollisionEntity::ignored*)::g_SendProps
 D int ServerClassInit<DT_PSCollisionEntity::ignored>(DT_PSCollisionEntity::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PS_InternalData_t::ignored>(DT_PS_InternalData_t::ignored*)::g_SendProps
 D int ServerClassInit<DT_PS_InternalData_t::ignored>(DT_PS_InternalData_t::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PS_SimulationData_t::ignored>(DT_PS_SimulationData_t::ignored*)::g_SendProps
 D int ServerClassInit<DT_PS_SimulationData_t::ignored>(DT_PS_SimulationData_t::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PaintSprayer::ignored>(DT_PaintSprayer::ignored*)::g_SendProps
 D int ServerClassInit<DT_PaintSprayer::ignored>(DT_PaintSprayer::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PaintStream::ignored>(DT_PaintStream::ignored*)::g_SendProps
 D int ServerClassInit<DT_PaintStream::ignored>(DT_PaintStream::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ParticleFire::ignored>(DT_ParticleFire::ignored*)::g_SendProps
 D int ServerClassInit<DT_ParticleFire::ignored>(DT_ParticleFire::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ParticlePerformanceMonitor::ignored>(DT_ParticlePerformanceMonitor::ignored*)::g_SendProps
 D int ServerClassInit<DT_ParticlePerformanceMonitor::ignored>(DT_ParticlePerformanceMonitor::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ParticleSmokeGrenade::ignored>(DT_ParticleSmokeGrenade::ignored*)::g_SendProps
 D int ServerClassInit<DT_ParticleSmokeGrenade::ignored>(DT_ParticleSmokeGrenade::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ParticleSystem::ignored>(DT_ParticleSystem::ignored*)::g_SendProps
 D int ServerClassInit<DT_ParticleSystem::ignored>(DT_ParticleSystem::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PhysBox::ignored>(DT_PhysBox::ignored*)::g_SendProps
 D int ServerClassInit<DT_PhysBox::ignored>(DT_PhysBox::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PhysBoxMultiplayer::ignored>(DT_PhysBoxMultiplayer::ignored*)::g_SendProps
 D int ServerClassInit<DT_PhysBoxMultiplayer::ignored>(DT_PhysBoxMultiplayer::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PhysMagnet::ignored>(DT_PhysMagnet::ignored*)::g_SendProps
 D int ServerClassInit<DT_PhysMagnet::ignored>(DT_PhysMagnet::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PhysicsProp::ignored>(DT_PhysicsProp::ignored*)::g_SendProps
 D int ServerClassInit<DT_PhysicsProp::ignored>(DT_PhysicsProp::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PhysicsPropMultiplayer::ignored>(DT_PhysicsPropMultiplayer::ignored*)::g_SendProps
 D int ServerClassInit<DT_PhysicsPropMultiplayer::ignored>(DT_PhysicsPropMultiplayer::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Plasma::ignored>(DT_Plasma::ignored*)::g_SendProps
 D int ServerClassInit<DT_Plasma::ignored>(DT_Plasma::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PlayerResource::ignored>(DT_PlayerResource::ignored*)::g_SendProps
 D int ServerClassInit<DT_PlayerResource::ignored>(DT_PlayerResource::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PlayerState::ignored>(DT_PlayerState::ignored*)::g_SendProps
 D int ServerClassInit<DT_PlayerState::ignored>(DT_PlayerState::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PointCamera::ignored>(DT_PointCamera::ignored*)::g_SendProps
 D int ServerClassInit<DT_PointCamera::ignored>(DT_PointCamera::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PointCommentaryNode::ignored>(DT_PointCommentaryNode::ignored*)::g_SendProps
 D int ServerClassInit<DT_PointCommentaryNode::ignored>(DT_PointCommentaryNode::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PointSurvey::ignored>(DT_PointSurvey::ignored*)::g_SendProps
 D int ServerClassInit<DT_PointSurvey::ignored>(DT_PointSurvey::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PortalGameRules::ignored>(DT_PortalGameRules::ignored*)::g_SendProps
 D int ServerClassInit<DT_PortalGameRules::ignored>(DT_PortalGameRules::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PortalGameRulesProxy::ignored>(DT_PortalGameRulesProxy::ignored*)::g_SendProps
 D int ServerClassInit<DT_PortalGameRulesProxy::ignored>(DT_PortalGameRulesProxy::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PortalLaser::ignored>(DT_PortalLaser::ignored*)::g_SendProps
 D int ServerClassInit<DT_PortalLaser::ignored>(DT_PortalLaser::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PortalLocal::ignored>(DT_PortalLocal::ignored*)::g_SendProps
 D int ServerClassInit<DT_PortalLocal::ignored>(DT_PortalLocal::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PortalLocalPlayerExclusive::ignored>(DT_PortalLocalPlayerExclusive::ignored*)::g_SendProps
 D int ServerClassInit<DT_PortalLocalPlayerExclusive::ignored>(DT_PortalLocalPlayerExclusive::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PortalMPGameRules::ignored>(DT_PortalMPGameRules::ignored*)::g_SendProps
 D int ServerClassInit<DT_PortalMPGameRules::ignored>(DT_PortalMPGameRules::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PortalMPGameRulesProxy::ignored>(DT_PortalMPGameRulesProxy::ignored*)::g_SendProps
 D int ServerClassInit<DT_PortalMPGameRulesProxy::ignored>(DT_PortalMPGameRulesProxy::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PortalMPStatsProxy::ignored>(DT_PortalMPStatsProxy::ignored*)::g_SendProps
 D int ServerClassInit<DT_PortalMPStatsProxy::ignored>(DT_PortalMPStatsProxy::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PortalNonLocalPlayerExclusive::ignored>(DT_PortalNonLocalPlayerExclusive::ignored*)::g_SendProps
 D int ServerClassInit<DT_PortalNonLocalPlayerExclusive::ignored>(DT_PortalNonLocalPlayerExclusive::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PortalPlayerShared::ignored>(DT_PortalPlayerShared::ignored*)::g_SendProps
 D int ServerClassInit<DT_PortalPlayerShared::ignored>(DT_PortalPlayerShared::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PortalPlayerStatistics::ignored>(DT_PortalPlayerStatistics::ignored*)::g_SendProps
 D int ServerClassInit<DT_PortalPlayerStatistics::ignored>(DT_PortalPlayerStatistics::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PortalPointPush::ignored>(DT_PortalPointPush::ignored*)::g_SendProps
 D int ServerClassInit<DT_PortalPointPush::ignored>(DT_PortalPointPush::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PortalRagdoll::ignored>(DT_PortalRagdoll::ignored*)::g_SendProps
 D int ServerClassInit<DT_PortalRagdoll::ignored>(DT_PortalRagdoll::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PortalSimulator::ignored>(DT_PortalSimulator::ignored*)::g_SendProps
 D int ServerClassInit<DT_PortalSimulator::ignored>(DT_PortalSimulator::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Portal_Base2D::ignored>(DT_Portal_Base2D::ignored*)::g_SendProps
 D int ServerClassInit<DT_Portal_Base2D::ignored>(DT_Portal_Base2D::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Portal_MP_Stats::ignored>(DT_Portal_MP_Stats::ignored*)::g_SendProps
 D int ServerClassInit<DT_Portal_MP_Stats::ignored>(DT_Portal_MP_Stats::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Portal_Player::ignored>(DT_Portal_Player::ignored*)::g_SendProps
 D int ServerClassInit<DT_Portal_Player::ignored>(DT_Portal_Player::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PoseController::ignored>(DT_PoseController::ignored*)::g_SendProps
 D int ServerClassInit<DT_PoseController::ignored>(DT_PoseController::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PostProcessController::ignored>(DT_PostProcessController::ignored*)::g_SendProps
 D int ServerClassInit<DT_PostProcessController::ignored>(DT_PostProcessController::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Precipitation::ignored>(DT_Precipitation::ignored*)::g_SendProps
 D int ServerClassInit<DT_Precipitation::ignored>(DT_Precipitation::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PrecipitationBlocker::ignored>(DT_PrecipitationBlocker::ignored*)::g_SendProps
 D int ServerClassInit<DT_PrecipitationBlocker::ignored>(DT_PrecipitationBlocker::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PredictedViewModel::ignored>(DT_PredictedViewModel::ignored*)::g_SendProps
 D int ServerClassInit<DT_PredictedViewModel::ignored>(DT_PredictedViewModel::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ProjectedEntityAmbientSoundProxy::ignored>(DT_ProjectedEntityAmbientSoundProxy::ignored*)::g_SendProps
 D int ServerClassInit<DT_ProjectedEntityAmbientSoundProxy::ignored>(DT_ProjectedEntityAmbientSoundProxy::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ProjectedTractorBeamEntity::ignored>(DT_ProjectedTractorBeamEntity::ignored*)::g_SendProps
 D int ServerClassInit<DT_ProjectedTractorBeamEntity::ignored>(DT_ProjectedTractorBeamEntity::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ProjectedWallEntity::ignored>(DT_ProjectedWallEntity::ignored*)::g_SendProps
 D int ServerClassInit<DT_ProjectedWallEntity::ignored>(DT_ProjectedWallEntity::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PropCombineBall::ignored>(DT_PropCombineBall::ignored*)::g_SendProps
 D int ServerClassInit<DT_PropCombineBall::ignored>(DT_PropCombineBall::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PropDoorRotating::ignored>(DT_PropDoorRotating::ignored*)::g_SendProps
 D int ServerClassInit<DT_PropDoorRotating::ignored>(DT_PropDoorRotating::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PropEnergyBall::ignored>(DT_PropEnergyBall::ignored*)::g_SendProps
 D int ServerClassInit<DT_PropEnergyBall::ignored>(DT_PropEnergyBall::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PropFloorButton::ignored>(DT_PropFloorButton::ignored*)::g_SendProps
 D int ServerClassInit<DT_PropFloorButton::ignored>(DT_PropFloorButton::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PropLinkedPortalDoor::ignored>(DT_PropLinkedPortalDoor::ignored*)::g_SendProps
 D int ServerClassInit<DT_PropLinkedPortalDoor::ignored>(DT_PropLinkedPortalDoor::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PropPaintBomb::ignored>(DT_PropPaintBomb::ignored*)::g_SendProps
 D int ServerClassInit<DT_PropPaintBomb::ignored>(DT_PropPaintBomb::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PropPortalStatsDisplay::ignored>(DT_PropPortalStatsDisplay::ignored*)::g_SendProps
 D int ServerClassInit<DT_PropPortalStatsDisplay::ignored>(DT_PropPortalStatsDisplay::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PropRocketTripwire::ignored>(DT_PropRocketTripwire::ignored*)::g_SendProps
 D int ServerClassInit<DT_PropRocketTripwire::ignored>(DT_PropRocketTripwire::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PropTractorBeamProjector::ignored>(DT_PropTractorBeamProjector::ignored*)::g_SendProps
 D int ServerClassInit<DT_PropTractorBeamProjector::ignored>(DT_PropTractorBeamProjector::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PropVehicleChoreoGeneric::ignored>(DT_PropVehicleChoreoGeneric::ignored*)::g_SendProps
 D int ServerClassInit<DT_PropVehicleChoreoGeneric::ignored>(DT_PropVehicleChoreoGeneric::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PropVehicleDriveable::ignored>(DT_PropVehicleDriveable::ignored*)::g_SendProps
 D int ServerClassInit<DT_PropVehicleDriveable::ignored>(DT_PropVehicleDriveable::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_PropWeightedCube::ignored>(DT_PropWeightedCube::ignored*)::g_SendProps
 D int ServerClassInit<DT_PropWeightedCube::ignored>(DT_PropWeightedCube::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Prop_Hallucination::ignored>(DT_Prop_Hallucination::ignored*)::g_SendProps
 D int ServerClassInit<DT_Prop_Hallucination::ignored>(DT_Prop_Hallucination::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Prop_Mirror::ignored>(DT_Prop_Mirror::ignored*)::g_SendProps
 D int ServerClassInit<DT_Prop_Mirror::ignored>(DT_Prop_Mirror::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Prop_Portal::ignored>(DT_Prop_Portal::ignored*)::g_SendProps
 D int ServerClassInit<DT_Prop_Portal::ignored>(DT_Prop_Portal::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ProxyToggle::ignored>(DT_ProxyToggle::ignored*)::g_SendProps
 D int ServerClassInit<DT_ProxyToggle::ignored>(DT_ProxyToggle::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ProxyToggle_ProxiedData::ignored>(DT_ProxyToggle_ProxiedData::ignored*)::g_SendProps
 D int ServerClassInit<DT_ProxyToggle_ProxiedData::ignored>(DT_ProxyToggle_ProxiedData::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_QuadraticBeam::ignored>(DT_QuadraticBeam::ignored*)::g_SendProps
 D int ServerClassInit<DT_QuadraticBeam::ignored>(DT_QuadraticBeam::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Ragdoll::ignored>(DT_Ragdoll::ignored*)::g_SendProps
 D int ServerClassInit<DT_Ragdoll::ignored>(DT_Ragdoll::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_RagdollManager::ignored>(DT_RagdollManager::ignored*)::g_SendProps
 D int ServerClassInit<DT_RagdollManager::ignored>(DT_RagdollManager::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Ragdoll_Attached::ignored>(DT_Ragdoll_Attached::ignored*)::g_SendProps
 D int ServerClassInit<DT_Ragdoll_Attached::ignored>(DT_Ragdoll_Attached::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_RocketTrail::ignored>(DT_RocketTrail::ignored*)::g_SendProps
 D int ServerClassInit<DT_RocketTrail::ignored>(DT_RocketTrail::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_RopeKeyframe::ignored>(DT_RopeKeyframe::ignored*)::g_SendProps
 D int ServerClassInit<DT_RopeKeyframe::ignored>(DT_RopeKeyframe::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SceneEntity::ignored>(DT_SceneEntity::ignored*)::g_SendProps
 D int ServerClassInit<DT_SceneEntity::ignored>(DT_SceneEntity::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ScriptCreatedAttribute::ignored>(DT_ScriptCreatedAttribute::ignored*)::g_SendProps
 D int ServerClassInit<DT_ScriptCreatedAttribute::ignored>(DT_ScriptCreatedAttribute::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ScriptCreatedItem::ignored>(DT_ScriptCreatedItem::ignored*)::g_SendProps
 D int ServerClassInit<DT_ScriptCreatedItem::ignored>(DT_ScriptCreatedItem::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ScriptIntro::ignored>(DT_ScriptIntro::ignored*)::g_SendProps
 D int ServerClassInit<DT_ScriptIntro::ignored>(DT_ScriptIntro::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ServerAnimationData::ignored>(DT_ServerAnimationData::ignored*)::g_SendProps
 D int ServerClassInit<DT_ServerAnimationData::ignored>(DT_ServerAnimationData::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_ShadowControl::ignored>(DT_ShadowControl::ignored*)::g_SendProps
 D int ServerClassInit<DT_ShadowControl::ignored>(DT_ShadowControl::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SlideshowDisplay::ignored>(DT_SlideshowDisplay::ignored*)::g_SendProps
 D int ServerClassInit<DT_SlideshowDisplay::ignored>(DT_SlideshowDisplay::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SmokeStack::ignored>(DT_SmokeStack::ignored*)::g_SendProps
 D int ServerClassInit<DT_SmokeStack::ignored>(DT_SmokeStack::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SmokeTrail::ignored>(DT_SmokeTrail::ignored*)::g_SendProps
 D int ServerClassInit<DT_SmokeTrail::ignored>(DT_SmokeTrail::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SpatialEntity::ignored>(DT_SpatialEntity::ignored*)::g_SendProps
 D int ServerClassInit<DT_SpatialEntity::ignored>(DT_SpatialEntity::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SporeExplosion::ignored>(DT_SporeExplosion::ignored*)::g_SendProps
 D int ServerClassInit<DT_SporeExplosion::ignored>(DT_SporeExplosion::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SporeTrail::ignored>(DT_SporeTrail::ignored*)::g_SendProps
 D int ServerClassInit<DT_SporeTrail::ignored>(DT_SporeTrail::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SpotlightEnd::ignored>(DT_SpotlightEnd::ignored*)::g_SendProps
 D int ServerClassInit<DT_SpotlightEnd::ignored>(DT_SpotlightEnd::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Sprite::ignored>(DT_Sprite::ignored*)::g_SendProps
 D int ServerClassInit<DT_Sprite::ignored>(DT_Sprite::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SpriteOriented::ignored>(DT_SpriteOriented::ignored*)::g_SendProps
 D int ServerClassInit<DT_SpriteOriented::ignored>(DT_SpriteOriented::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SpriteTrail::ignored>(DT_SpriteTrail::ignored*)::g_SendProps
 D int ServerClassInit<DT_SpriteTrail::ignored>(DT_SpriteTrail::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_StatueProp::ignored>(DT_StatueProp::ignored*)::g_SendProps
 D int ServerClassInit<DT_StatueProp::ignored>(DT_StatueProp::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SteamJet::ignored>(DT_SteamJet::ignored*)::g_SendProps
 D int ServerClassInit<DT_SteamJet::ignored>(DT_SteamJet::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Sun::ignored>(DT_Sun::ignored*)::g_SendProps
 D int ServerClassInit<DT_Sun::ignored>(DT_Sun::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_SunlightShadowControl::ignored>(DT_SunlightShadowControl::ignored*)::g_SendProps
 D int ServerClassInit<DT_SunlightShadowControl::ignored>(DT_SunlightShadowControl::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEAntlionDust::ignored>(DT_TEAntlionDust::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEAntlionDust::ignored>(DT_TEAntlionDust::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEArmorRicochet::ignored>(DT_TEArmorRicochet::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEArmorRicochet::ignored>(DT_TEArmorRicochet::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBSPDecal::ignored>(DT_TEBSPDecal::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBSPDecal::ignored>(DT_TEBSPDecal::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBeamEntPoint::ignored>(DT_TEBeamEntPoint::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBeamEntPoint::ignored>(DT_TEBeamEntPoint::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBeamEnts::ignored>(DT_TEBeamEnts::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBeamEnts::ignored>(DT_TEBeamEnts::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBeamFollow::ignored>(DT_TEBeamFollow::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBeamFollow::ignored>(DT_TEBeamFollow::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBeamLaser::ignored>(DT_TEBeamLaser::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBeamLaser::ignored>(DT_TEBeamLaser::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBeamPoints::ignored>(DT_TEBeamPoints::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBeamPoints::ignored>(DT_TEBeamPoints::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBeamRing::ignored>(DT_TEBeamRing::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBeamRing::ignored>(DT_TEBeamRing::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBeamRingPoint::ignored>(DT_TEBeamRingPoint::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBeamRingPoint::ignored>(DT_TEBeamRingPoint::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBeamSpline::ignored>(DT_TEBeamSpline::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBeamSpline::ignored>(DT_TEBeamSpline::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBloodSprite::ignored>(DT_TEBloodSprite::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBloodSprite::ignored>(DT_TEBloodSprite::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBloodStream::ignored>(DT_TEBloodStream::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBloodStream::ignored>(DT_TEBloodStream::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBreakModel::ignored>(DT_TEBreakModel::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBreakModel::ignored>(DT_TEBreakModel::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBubbleTrail::ignored>(DT_TEBubbleTrail::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBubbleTrail::ignored>(DT_TEBubbleTrail::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEBubbles::ignored>(DT_TEBubbles::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEBubbles::ignored>(DT_TEBubbles::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEClientProjectile::ignored>(DT_TEClientProjectile::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEClientProjectile::ignored>(DT_TEClientProjectile::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEDecal::ignored>(DT_TEDecal::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEDecal::ignored>(DT_TEDecal::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEDust::ignored>(DT_TEDust::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEDust::ignored>(DT_TEDust::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEDynamicLight::ignored>(DT_TEDynamicLight::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEDynamicLight::ignored>(DT_TEDynamicLight::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEEffectDispatch::ignored>(DT_TEEffectDispatch::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEEffectDispatch::ignored>(DT_TEEffectDispatch::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEEnergySplash::ignored>(DT_TEEnergySplash::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEEnergySplash::ignored>(DT_TEEnergySplash::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEExplosion::ignored>(DT_TEExplosion::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEExplosion::ignored>(DT_TEExplosion::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEFizz::ignored>(DT_TEFizz::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEFizz::ignored>(DT_TEFizz::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEFootprintDecal::ignored>(DT_TEFootprintDecal::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEFootprintDecal::ignored>(DT_TEFootprintDecal::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEFoundryHelpers::ignored>(DT_TEFoundryHelpers::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEFoundryHelpers::ignored>(DT_TEFoundryHelpers::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEGaussExplosion::ignored>(DT_TEGaussExplosion::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEGaussExplosion::ignored>(DT_TEGaussExplosion::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEGlowSprite::ignored>(DT_TEGlowSprite::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEGlowSprite::ignored>(DT_TEGlowSprite::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEImpact::ignored>(DT_TEImpact::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEImpact::ignored>(DT_TEImpact::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEKillPlayerAttachments::ignored>(DT_TEKillPlayerAttachments::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEKillPlayerAttachments::ignored>(DT_TEKillPlayerAttachments::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TELargeFunnel::ignored>(DT_TELargeFunnel::ignored*)::g_SendProps
 D int ServerClassInit<DT_TELargeFunnel::ignored>(DT_TELargeFunnel::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEMetalSparks::ignored>(DT_TEMetalSparks::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEMetalSparks::ignored>(DT_TEMetalSparks::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEMuzzleFlash::ignored>(DT_TEMuzzleFlash::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEMuzzleFlash::ignored>(DT_TEMuzzleFlash::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEParticleSystem::ignored>(DT_TEParticleSystem::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEParticleSystem::ignored>(DT_TEParticleSystem::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEPhysicsProp::ignored>(DT_TEPhysicsProp::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEPhysicsProp::ignored>(DT_TEPhysicsProp::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEPlayerAnimEvent::ignored>(DT_TEPlayerAnimEvent::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEPlayerAnimEvent::ignored>(DT_TEPlayerAnimEvent::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEPlayerDecal::ignored>(DT_TEPlayerDecal::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEPlayerDecal::ignored>(DT_TEPlayerDecal::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEProjectedDecal::ignored>(DT_TEProjectedDecal::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEProjectedDecal::ignored>(DT_TEProjectedDecal::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEShatterSurface::ignored>(DT_TEShatterSurface::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEShatterSurface::ignored>(DT_TEShatterSurface::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEShowLine::ignored>(DT_TEShowLine::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEShowLine::ignored>(DT_TEShowLine::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TESmoke::ignored>(DT_TESmoke::ignored*)::g_SendProps
 D int ServerClassInit<DT_TESmoke::ignored>(DT_TESmoke::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TESparks::ignored>(DT_TESparks::ignored*)::g_SendProps
 D int ServerClassInit<DT_TESparks::ignored>(DT_TESparks::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TESprite::ignored>(DT_TESprite::ignored*)::g_SendProps
 D int ServerClassInit<DT_TESprite::ignored>(DT_TESprite::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TESpriteSpray::ignored>(DT_TESpriteSpray::ignored*)::g_SendProps
 D int ServerClassInit<DT_TESpriteSpray::ignored>(DT_TESpriteSpray::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEWallPaintedEvent::ignored>(DT_TEWallPaintedEvent::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEWallPaintedEvent::ignored>(DT_TEWallPaintedEvent::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TEWorldDecal::ignored>(DT_TEWorldDecal::ignored*)::g_SendProps
 D int ServerClassInit<DT_TEWorldDecal::ignored>(DT_TEWorldDecal::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Team::ignored>(DT_Team::ignored*)::g_SendProps
 D int ServerClassInit<DT_Team::ignored>(DT_Team::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Tesla::ignored>(DT_Tesla::ignored*)::g_SendProps
 D int ServerClassInit<DT_Tesla::ignored>(DT_Tesla::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TestTraceline::ignored>(DT_TestTraceline::ignored*)::g_SendProps
 D int ServerClassInit<DT_TestTraceline::ignored>(DT_TestTraceline::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Timeline::ignored>(DT_Timeline::ignored*)::g_SendProps
 D int ServerClassInit<DT_Timeline::ignored>(DT_Timeline::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TriggerCatapult::ignored>(DT_TriggerCatapult::ignored*)::g_SendProps
 D int ServerClassInit<DT_TriggerCatapult::ignored>(DT_TriggerCatapult::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TriggerPaintCleanser::ignored>(DT_TriggerPaintCleanser::ignored*)::g_SendProps
 D int ServerClassInit<DT_TriggerPaintCleanser::ignored>(DT_TriggerPaintCleanser::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TriggerPlayerMovement::ignored>(DT_TriggerPlayerMovement::ignored*)::g_SendProps
 D int ServerClassInit<DT_TriggerPlayerMovement::ignored>(DT_TriggerPlayerMovement::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_TriggerPortalCleanser::ignored>(DT_TriggerPortalCleanser::ignored*)::g_SendProps
 D int ServerClassInit<DT_TriggerPortalCleanser::ignored>(DT_TriggerPortalCleanser::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_Trigger_TractorBeam::ignored>(DT_Trigger_TractorBeam::ignored*)::g_SendProps
 D int ServerClassInit<DT_Trigger_TractorBeam::ignored>(DT_Trigger_TractorBeam::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_VGuiScreen::ignored>(DT_VGuiScreen::ignored*)::g_SendProps
 D int ServerClassInit<DT_VGuiScreen::ignored>(DT_VGuiScreen::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WORLD::ignored>(DT_WORLD::ignored*)::g_SendProps
 D int ServerClassInit<DT_WORLD::ignored>(DT_WORLD::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WaterBullet::ignored>(DT_WaterBullet::ignored*)::g_SendProps
 D int ServerClassInit<DT_WaterBullet::ignored>(DT_WaterBullet::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WaterLODControl::ignored>(DT_WaterLODControl::ignored*)::g_SendProps
 D int ServerClassInit<DT_WaterLODControl::ignored>(DT_WaterLODControl::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponCubemap::ignored>(DT_WeaponCubemap::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponCubemap::ignored>(DT_WeaponCubemap::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponCycler::ignored>(DT_WeaponCycler::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponCycler::ignored>(DT_WeaponCycler::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponItemBase::ignored>(DT_WeaponItemBase::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponItemBase::ignored>(DT_WeaponItemBase::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponPaintGun::ignored>(DT_WeaponPaintGun::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponPaintGun::ignored>(DT_WeaponPaintGun::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponPortalBase::ignored>(DT_WeaponPortalBase::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponPortalBase::ignored>(DT_WeaponPortalBase::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponPortalgun::ignored>(DT_WeaponPortalgun::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponPortalgun::ignored>(DT_WeaponPortalgun::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponPromoAntennaBall::ignored>(DT_WeaponPromoAntennaBall::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponPromoAntennaBall::ignored>(DT_WeaponPromoAntennaBall::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponPromoAntennaEgg::ignored>(DT_WeaponPromoAntennaEgg::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponPromoAntennaEgg::ignored>(DT_WeaponPromoAntennaEgg::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponPromoHelmetBall::ignored>(DT_WeaponPromoHelmetBall::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponPromoHelmetBall::ignored>(DT_WeaponPromoHelmetBall::ignored*)::g_pSendTableName
 D int ServerClassInit<DT_WeaponPromoHelmetEgg::ignored>(DT_WeaponPromoHelmetEgg::ignored*)::g_SendProps
 D int ServerClassInit<DT_WeaponPromoHelmetEgg::ignored>(DT_WeaponPromoHelmetEgg::ignored*)::g_pSendTableName
 D lagcompensation
 D locksound_t::m_DataMap
 D m_nDebugOverlayIndex
 D magnetted_objects_t::m_DataMap
 D modifiedconvars_t::m_DataMap
 D pFGDPropData
 D pRocketTurretFollowerBoneNames
 D pSoundStateNames
 D pWeaponSoundCategories
 D paintSplatCallbacks
 D physfollower_t::m_DataMap
 D physgametrace
 D predef_flexcontroller_names
 D predef_flexcontroller_values
 D responseSystemSaveRestoreOps
 D rgdpvpreset
 D sPropdataInteractionSections
 D sTeamNames
 D s_ElementNames
 D s_PluginCheck
 D s_PortalServerDllPropPortalLocator
 D s_aGestureSlotNames
 D s_nExplosionTexture
 D s_pDebrisContext
 D s_pFadeOutContext
 D sky3dparams_t::m_DataMap
 D steamapicontext
 D steamgameserverapicontext
 D te
 D template_t::m_DataMap
 D thinkcontextFuncs
 D thinkfunc_t::m_DataMap
 D thrown_objects_t::m_DataMap
 D typeinfo for AR2Explosion
 D typeinfo for BlobTraceEnum
 D typeinfo for CAISound
 D typeinfo for CAI_ActBusyBehavior
 D typeinfo for CAI_ActBusyGoal
 D typeinfo for CAI_ActBusyQueueGoal
 D typeinfo for CAI_AllySpeechManager
 D typeinfo for CAI_AssaultBehavior
 D typeinfo for CAI_AssaultGoal
 D typeinfo for CAI_BaseActor
 D typeinfo for CAI_BaseHumanoid
 D typeinfo for CAI_BaseNPC
 D typeinfo for CAI_BasePhysicsFlyingBot
 D typeinfo for CAI_BattleLine
 D typeinfo for CAI_Behavior<CAI_BaseNPC, 100000>
 D typeinfo for CAI_BehaviorBase
 D typeinfo for CAI_BehaviorHost<CAI_BaseNPC>
 D typeinfo for CAI_BehaviorHostBase<CAI_BaseNPC>
 D typeinfo for CAI_BlendedMotor
 D typeinfo for CAI_BlendingHost<CAI_BehaviorHost<CAI_BaseNPC> >
 D typeinfo for CAI_ChangeHintGroup
 D typeinfo for CAI_ChangeTarget
 D typeinfo for CAI_Component
 D typeinfo for CAI_ComponentWithOuter<CAI_BaseNPC, CAI_BehaviorBase>
 D typeinfo for CAI_DefMovementSink
 D typeinfo for CAI_DynamicLink
 D typeinfo for CAI_DynamicLinkController
 D typeinfo for CAI_EnemiesListSaveRestoreOps
 D typeinfo for CAI_Expresser
 D typeinfo for CAI_ExpresserHost<CAI_BaseHumanoid>
 D typeinfo for CAI_ExpresserHost<CBasePlayer>
 D typeinfo for CAI_ExpresserHost<CFlexExpresserShim>
 D typeinfo for CAI_ExpresserSink
 D typeinfo for CAI_ExpresserWithFollowup
 D typeinfo for CAI_FightFromCoverBehavior
 D typeinfo for CAI_FightFromCoverGoal
 D typeinfo for CAI_FollowBehavior
 D typeinfo for CAI_FollowGoal
 D typeinfo for CAI_FreePass
 D typeinfo for CAI_FuncTankBehavior
 D typeinfo for CAI_GoalEntity
 D typeinfo for CAI_Hint
 D typeinfo for CAI_LeadBehavior
 D typeinfo for CAI_LeadBehaviorHandler
 D typeinfo for CAI_LeadGoal
 D typeinfo for CAI_LeadGoal_Weapon
 D typeinfo for CAI_LocalNavigator
 D typeinfo for CAI_MappedActivityBehavior_Temporary
 D typeinfo for CAI_Motor
 D typeinfo for CAI_MoveAndShootOverlay
 D typeinfo for CAI_MoveProbe
 D typeinfo for CAI_NavInHintGroupFilter
 D typeinfo for CAI_Navigator
 D typeinfo for CAI_Network
 D typeinfo for CAI_NetworkManager
 D typeinfo for CAI_Pathfinder
 D typeinfo for CAI_PlayerAlly
 D typeinfo for CAI_ProxyMovementSink
 D typeinfo for CAI_RadialLinkController
 D typeinfo for CAI_Relationship
 D typeinfo for CAI_SaveRestoreBlockHandler
 D typeinfo for CAI_ScriptConditions
 D typeinfo for CAI_ScriptedSchedule
 D typeinfo for CAI_ScriptedSentence
 D typeinfo for CAI_ScriptedSequence
 D typeinfo for CAI_SensedObjectsManager
 D typeinfo for CAI_Senses
 D typeinfo for CAI_SpeechFilter
 D typeinfo for CAI_StandoffBehavior
 D typeinfo for CAI_StandoffGoal
 D typeinfo for CAI_SystemHook
 D typeinfo for CAI_TacticalServices
 D typeinfo for CAI_TestHull
 D typeinfo for CActBusyAnimData
 D typeinfo for CActivityDataOps
 D typeinfo for CAimTargetManager
 D typeinfo for CAmbientGeneric
 D typeinfo for CAmmoDef
 D typeinfo for CAnchorList
 D typeinfo for CAreaPortal
 D typeinfo for CAssaultPoint
 D typeinfo for CAttributeContainer
 D typeinfo for CAttributeContainer::NetworkVar_m_Item
 D typeinfo for CAttributeList
 D typeinfo for CAttributeManager
 D typeinfo for CAutoGameSystem
 D typeinfo for CAutoGameSystemPerFrame
 D typeinfo for CBaseAnimating
 D typeinfo for CBaseAnimatingOverlay
 D typeinfo for CBaseAnimatingProjectile
 D typeinfo for CBaseAppSystem<IParticleSystemQuery>
 D typeinfo for CBaseButton
 D typeinfo for CBaseCombatCharacter
 D typeinfo for CBaseCombatWeapon
 D typeinfo for CBaseDMStart
 D typeinfo for CBaseDoor
 D typeinfo for CBaseEntity
 D typeinfo for CBaseEntity::NetworkVar_m_Collision
 D typeinfo for CBaseEntityClassList
 D typeinfo for CBaseEntityList
 D typeinfo for CBaseEntityScriptInstanceHelper
 D typeinfo for CBaseFilter
 D typeinfo for CBaseFire
 D typeinfo for CBaseFlex
 D typeinfo for CBaseGameStats
 D typeinfo for CBaseGameStats_Driver
 D typeinfo for CBaseGameSystem
 D typeinfo for CBaseGameSystemPerFrame
 D typeinfo for CBaseGrenade
 D typeinfo for CBaseGrenadeConcussion
 D typeinfo for CBaseGrenadeContact
 D typeinfo for CBaseGrenadeTimed
 D typeinfo for CBaseHLCombatWeapon
 D typeinfo for CBaseMoveBehavior
 D typeinfo for CBaseMultiplayerPlayer
 D typeinfo for CBaseNPCMaker
 D typeinfo for CBasePaintBlob
 D typeinfo for CBaseParticleEntity
 D typeinfo for CBasePlatTrain
 D typeinfo for CBasePlayer
 D typeinfo for CBasePlayer::NetworkVar_m_Local
 D typeinfo for CBasePlayer::NetworkVar_m_PlayerFog
 D typeinfo for CBasePlayer::NetworkVar_pl
 D typeinfo for CBasePortalCombatWeapon
 D typeinfo for CBaseProjectedEntity
 D typeinfo for CBaseProjectile
 D typeinfo for CBaseProjector
 D typeinfo for CBaseProp
 D typeinfo for CBasePropDoor
 D typeinfo for CBaseResourcePrecacher
 D typeinfo for CBaseServerVehicle
 D typeinfo for CBaseSpriteProjectile
 D typeinfo for CBaseTempEntity
 D typeinfo for CBaseToggle
 D typeinfo for CBaseTrigger
 D typeinfo for CBaseVPhysicsTrigger
 D typeinfo for CBaseViewModel
 D typeinfo for CBeam
 D typeinfo for CBeamSpotlight
 D typeinfo for CBlendingCycler
 D typeinfo for CBlood
 D typeinfo for CBloodSplat
 D typeinfo for CBoneFollower
 D typeinfo for CBoolProperty
 D typeinfo for CBotCmd
 D typeinfo for CBreakModelsPrecached
 D typeinfo for CBreakParser
 D typeinfo for CBreakable
 D typeinfo for CBreakableProp
 D typeinfo for CBreakableSurface
 D typeinfo for CBroadcastRecipientFilter
 D typeinfo for CBrushEntityList
 D typeinfo for CBubbling
 D typeinfo for CBuildModeNavCombo
 D typeinfo for CBulletsTraceFilter
 D typeinfo for CBullseyeList
 D typeinfo for CCallResult<CGCUpdateItemSchema, HTTPRequestCompleted_t>
 D typeinfo for CCallback<CGCServerSystem, SteamServersConnected_t, true>
 D typeinfo for CCallback<CSteamWorksGameStatsUploader, GameStatsSessionClosed_t, true>
 D typeinfo for CCallback<CSteamWorksGameStatsUploader, GameStatsSessionIssued_t, true>
 D typeinfo for CCallback<GCSDK::CGCClient, GCMessageAvailable_t, false>
 D typeinfo for CCallbackBase
 D typeinfo for CCallbackImpl<12>
 D typeinfo for CCallbackImpl<16>
 D typeinfo for CCallbackImpl<1>
 D typeinfo for CCallbackImpl<4>
 D typeinfo for CCatcher
 D typeinfo for CChallengeModeEndNode
 D typeinfo for CChallengeModeEndNodeKeys
 D typeinfo for CChangeLevel
 D typeinfo for CCheckClient
 D typeinfo for CChildOperatorDefinition
 D typeinfo for CChoreoEvent
 D typeinfo for CChoreoGenericServerVehicle
 D typeinfo for CChoreoScene
 D typeinfo for CChoreoStringPool
 D typeinfo for CCitadelEnergyCore
 D typeinfo for CClassPtrSaveRestoreOps
 D typeinfo for CCleanupDefaultRelationShips
 D typeinfo for CCollisionEvent
 D typeinfo for CCollisionProperty
 D typeinfo for CColorCorrection
 D typeinfo for CColorCorrectionSystem
 D typeinfo for CColorCorrectionVolume
 D typeinfo for CColorProperty
 D typeinfo for CCombatCharVisCache
 D typeinfo for CCommentaryAuto
 D typeinfo for CCommentarySystem
 D typeinfo for CCommentaryViewPosition
 D typeinfo for CCommentary_SaveRestoreBlockHandler
 D typeinfo for CCommunity_GamePersonalDataCategoryInfo
 D typeinfo for CCommunity_GetGamePersonalDataCategories_Request
 D typeinfo for CCommunity_GetGamePersonalDataCategories_Response
 D typeinfo for CCommunity_GetGamePersonalDataEntries_Request
 D typeinfo for CCommunity_GetGamePersonalDataEntries_Response
 D typeinfo for CCommunity_TerminateGamePersonalDataEntries_Request
 D typeinfo for CCommunity_TerminateGamePersonalDataEntries_Response
 D typeinfo for CConceptHistoriesDataOps
 D typeinfo for CConstantForceController
 D typeinfo for CConstraintAnchor
 D typeinfo for CCopyRecipientFilter
 D typeinfo for CCorpse
 D typeinfo for CCredits
 D typeinfo for CCubeRotationController
 D typeinfo for CCycler
 D typeinfo for CCyclicalHoliday
 D typeinfo for CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>
 D typeinfo for CDataManagerBase
 D typeinfo for CDataObjectAccessSystem
 D typeinfo for CDateBasedHoliday
 D typeinfo for CDebugHistory
 D typeinfo for CDecal
 D typeinfo for CDecalEmitterSystem
 D typeinfo for CDefSaveRestoreBlockHandler
 D typeinfo for CDefSaveRestoreOps
 D typeinfo for CDefaultAccessor
 D typeinfo for CDefaultParticleSystemQuery
 D typeinfo for CDefaultPlayerPickupVPhysics
 D typeinfo for CDefaultResponseSystem
 D typeinfo for CDefaultResponseSystemSaveRestoreBlockHandler
 D typeinfo for CDetailBlocker
 D typeinfo for CDevShotSystem
 D typeinfo for CDirtySpatialPartitionEntityList
 D typeinfo for CDllDemandLoader
 D typeinfo for CDragDropHelperPanel
 D typeinfo for CDynamicLight
 D typeinfo for CDynamicProp
 D typeinfo for CEconCraftingRecipeDefinition
 D typeinfo for CEconEntity
 D typeinfo for CEconEntity::NetworkVar_m_AttributeManager
 D typeinfo for CEconItem
 D typeinfo for CEconItemAttribute
 D typeinfo for CEconItemDefinition
 D typeinfo for CEconItemSchema
 D typeinfo for CEconItemSystem
 D typeinfo for CEconItemView
 D typeinfo for CEconItemView::NetworkVar_m_AttributeList
 D typeinfo for CEconStyleInfo
 D typeinfo for CEconTool_BackpackExpander
 D typeinfo for CEconTool_ClaimCode
 D typeinfo for CEconTool_Collection
 D typeinfo for CEconTool_CrateKey
 D typeinfo for CEconTool_CustomizeTexture
 D typeinfo for CEconTool_Default
 D typeinfo for CEconTool_DescTag
 D typeinfo for CEconTool_DuelingMinigame
 D typeinfo for CEconTool_Gift
 D typeinfo for CEconTool_GiftWrap
 D typeinfo for CEconTool_NameTag
 D typeinfo for CEconTool_Noisemaker
 D typeinfo for CEconTool_PaintCan
 D typeinfo for CEconTool_WeddingRing
 D typeinfo for CEconTool_WrappedGift
 D typeinfo for CEconWearable
 D typeinfo for CEffectsServer
 D typeinfo for CEmbers
 D typeinfo for CEmptyConVar
 D typeinfo for CEnableMotionFixup
 D typeinfo for CEnergyBallLauncher
 D typeinfo for CEntFireAutoCompletionFunctor
 D typeinfo for CEntityBlocker
 D typeinfo for CEntityClassList<CFuncNoPortalVolume>
 D typeinfo for CEntityClassList<CFuncPortalDetector>
 D typeinfo for CEntityClassList<CFuncPortalOrientation>
 D typeinfo for CEntityClassList<CPhysicsNPCSolver>
 D typeinfo for CEntityClassList<CPointCamera>
 D typeinfo for CEntityClassList<CSkyCamera>
 D typeinfo for CEntityDataInstantiator<CWatcherList>
 D typeinfo for CEntityDataInstantiator<ModelScale>
 D typeinfo for CEntityDataInstantiator<StepSimulationData>
 D typeinfo for CEntityDataInstantiator<groundlink_t>
 D typeinfo for CEntityDataInstantiator<physicspushlist_t>
 D typeinfo for CEntityDataInstantiator<touchlink_t>
 D typeinfo for CEntityDataInstantiator<vphysicsupdateai_t>
 D typeinfo for CEntityDissolve
 D typeinfo for CEntityFactory<AR2Explosion>
 D typeinfo for CEntityFactory<CAISound>
 D typeinfo for CEntityFactory<CAI_ActBusyGoal>
 D typeinfo for CEntityFactory<CAI_ActBusyQueueGoal>
 D typeinfo for CEntityFactory<CAI_AllySpeechManager>
 D typeinfo for CEntityFactory<CAI_AssaultGoal>
 D typeinfo for CEntityFactory<CAI_BattleLine>
 D typeinfo for CEntityFactory<CAI_ChangeHintGroup>
 D typeinfo for CEntityFactory<CAI_ChangeTarget>
 D typeinfo for CEntityFactory<CAI_DynamicLink>
 D typeinfo for CEntityFactory<CAI_DynamicLinkController>
 D typeinfo for CEntityFactory<CAI_FightFromCoverGoal>
 D typeinfo for CEntityFactory<CAI_FollowGoal>
 D typeinfo for CEntityFactory<CAI_Hint>
 D typeinfo for CEntityFactory<CAI_LeadGoal>
 D typeinfo for CEntityFactory<CAI_LeadGoal_Weapon>
 D typeinfo for CEntityFactory<CAI_NetworkManager>
 D typeinfo for CEntityFactory<CAI_RadialLinkController>
 D typeinfo for CEntityFactory<CAI_Relationship>
 D typeinfo for CEntityFactory<CAI_ScriptConditions>
 D typeinfo for CEntityFactory<CAI_ScriptedSchedule>
 D typeinfo for CEntityFactory<CAI_ScriptedSentence>
 D typeinfo for CEntityFactory<CAI_ScriptedSequence>
 D typeinfo for CEntityFactory<CAI_SpeechFilter>
 D typeinfo for CEntityFactory<CAI_StandoffGoal>
 D typeinfo for CEntityFactory<CAI_TestHull>
 D typeinfo for CEntityFactory<CAmbientGeneric>
 D typeinfo for CEntityFactory<CAreaPortal>
 D typeinfo for CEntityFactory<CAssaultPoint>
 D typeinfo for CEntityFactory<CBaseAnimatingProjectile>
 D typeinfo for CEntityFactory<CBaseButton>
 D typeinfo for CEntityFactory<CBaseDMStart>
 D typeinfo for CEntityFactory<CBaseDoor>
 D typeinfo for CEntityFactory<CBaseEntity>
 D typeinfo for CEntityFactory<CBaseFilter>
 D typeinfo for CEntityFactory<CBaseFlex>
 D typeinfo for CEntityFactory<CBaseGrenade>
 D typeinfo for CEntityFactory<CBaseGrenadeConcussion>
 D typeinfo for CEntityFactory<CBaseGrenadeContact>
 D typeinfo for CEntityFactory<CBaseGrenadeTimed>
 D typeinfo for CEntityFactory<CBaseHLCombatWeapon>
 D typeinfo for CEntityFactory<CBaseMoveBehavior>
 D typeinfo for CEntityFactory<CBasePortalCombatWeapon>
 D typeinfo for CEntityFactory<CBaseProjectile>
 D typeinfo for CEntityFactory<CBaseSpriteProjectile>
 D typeinfo for CEntityFactory<CBaseTrigger>
 D typeinfo for CEntityFactory<CBaseViewModel>
 D typeinfo for CEntityFactory<CBeam>
 D typeinfo for CEntityFactory<CBeamSpotlight>
 D typeinfo for CEntityFactory<CBlendingCycler>
 D typeinfo for CEntityFactory<CBlood>
 D typeinfo for CEntityFactory<CBoneFollower>
 D typeinfo for CEntityFactory<CBreakable>
 D typeinfo for CEntityFactory<CBreakableSurface>
 D typeinfo for CEntityFactory<CBubbling>
 D typeinfo for CEntityFactory<CChallengeModeEndNode>
 D typeinfo for CEntityFactory<CChangeLevel>
 D typeinfo for CEntityFactory<CCitadelEnergyCore>
 D typeinfo for CEntityFactory<CColorCorrection>
 D typeinfo for CEntityFactory<CColorCorrectionVolume>
 D typeinfo for CEntityFactory<CCommentaryAuto>
 D typeinfo for CEntityFactory<CCommentaryViewPosition>
 D typeinfo for CEntityFactory<CConstraintAnchor>
 D typeinfo for CEntityFactory<CCorpse>
 D typeinfo for CEntityFactory<CCredits>
 D typeinfo for CEntityFactory<CCubeRotationController>
 D typeinfo for CEntityFactory<CDebugHistory>
 D typeinfo for CEntityFactory<CDecal>
 D typeinfo for CEntityFactory<CDetailBlocker>
 D typeinfo for CEntityFactory<CDynamicLight>
 D typeinfo for CEntityFactory<CDynamicProp>
 D typeinfo for CEntityFactory<CEconWearable>
 D typeinfo for CEntityFactory<CEmbers>
 D typeinfo for CEntityFactory<CEnableMotionFixup>
 D typeinfo for CEntityFactory<CEnergyBallLauncher>
 D typeinfo for CEntityFactory<CEntityBlocker>
 D typeinfo for CEntityFactory<CEntityDissolve>
 D typeinfo for CEntityFactory<CEntityFlame>
 D typeinfo for CEntityFactory<CEntityFreezing>
 D typeinfo for CEntityFactory<CEntityParticleTrail>
 D typeinfo for CEntityFactory<CEnvAR2Explosion>
 D typeinfo for CEntityFactory<CEnvAmbientLight>
 D typeinfo for CEntityFactory<CEnvBeam>
 D typeinfo for CEntityFactory<CEnvBeverage>
 D typeinfo for CEntityFactory<CEnvDOFController>
 D typeinfo for CEntityFactory<CEnvDetailController>
 D typeinfo for CEntityFactory<CEnvDustPuff>
 D typeinfo for CEntityFactory<CEnvEffectsScript>
 D typeinfo for CEntityFactory<CEnvEntityIgniter>
 D typeinfo for CEntityFactory<CEnvEntityMaker>
 D typeinfo for CEntityFactory<CEnvExplosion>
 D typeinfo for CEntityFactory<CEnvFade>
 D typeinfo for CEntityFactory<CEnvFireSensor>
 D typeinfo for CEntityFactory<CEnvFireSource>
 D typeinfo for CEntityFactory<CEnvFunnel>
 D typeinfo for CEntityFactory<CEnvGlobal>
 D typeinfo for CEntityFactory<CEnvGunfire>
 D typeinfo for CEntityFactory<CEnvHudHint>
 D typeinfo for CEntityFactory<CEnvInstructorHint>
 D typeinfo for CEntityFactory<CEnvLaser>
 D typeinfo for CEntityFactory<CEnvLight>
 D typeinfo for CEntityFactory<CEnvMicrophone>
 D typeinfo for CEntityFactory<CEnvMuzzleFlash>
 D typeinfo for CEntityFactory<CEnvParticleScript>
 D typeinfo for CEntityFactory<CEnvPlayerSurfaceTrigger>
 D typeinfo for CEntityFactory<CEnvPortalPathTrack>
 D typeinfo for CEntityFactory<CEnvProjectedTexture>
 D typeinfo for CEntityFactory<CEnvQuadraticBeam>
 D typeinfo for CEntityFactory<CEnvScreenEffect>
 D typeinfo for CEntityFactory<CEnvScreenOverlay>
 D typeinfo for CEntityFactory<CEnvShake>
 D typeinfo for CEntityFactory<CEnvShooter>
 D typeinfo for CEntityFactory<CEnvSoundscape>
 D typeinfo for CEntityFactory<CEnvSoundscapeProxy>
 D typeinfo for CEntityFactory<CEnvSoundscapeTriggerable>
 D typeinfo for CEntityFactory<CEnvSpark>
 D typeinfo for CEntityFactory<CEnvSplash>
 D typeinfo for CEntityFactory<CEnvTilt>
 D typeinfo for CEntityFactory<CEnvTonemapController>
 D typeinfo for CEntityFactory<CEnvTracer>
 D typeinfo for CEntityFactory<CEnvViewPunch>
 D typeinfo for CEntityFactory<CEnvWind>
 D typeinfo for CEntityFactory<CEnvZoom>
 D typeinfo for CEntityFactory<CEnv_Lightrail_Endpoint>
 D typeinfo for CEntityFactory<CEventQueueSaveLoadProxy>
 D typeinfo for CEntityFactory<CFilterClass>
 D typeinfo for CEntityFactory<CFilterCombineBall>
 D typeinfo for CEntityFactory<CFilterContext>
 D typeinfo for CEntityFactory<CFilterEnemy>
 D typeinfo for CEntityFactory<CFilterMassGreater>
 D typeinfo for CEntityFactory<CFilterModel>
 D typeinfo for CEntityFactory<CFilterMultiple>
 D typeinfo for CEntityFactory<CFilterName>
 D typeinfo for CEntityFactory<CFilterPlayerHeld>
 D typeinfo for CEntityFactory<CFilterSize>
 D typeinfo for CEntityFactory<CFire>
 D typeinfo for CEntityFactory<CFireSmoke>
 D typeinfo for CEntityFactory<CFireTrail>
 D typeinfo for CEntityFactory<CFish>
 D typeinfo for CEntityFactory<CFishPool>
 D typeinfo for CEntityFactory<CFlexExpresser>
 D typeinfo for CEntityFactory<CFlextalkActor>
 D typeinfo for CEntityFactory<CFogController>
 D typeinfo for CEntityFactory<CFogTrigger>
 D typeinfo for CEntityFactory<CFogVolume>
 D typeinfo for CEntityFactory<CFuncAreaPortalWindow>
 D typeinfo for CEntityFactory<CFuncBrush>
 D typeinfo for CEntityFactory<CFuncCombineBallSpawner>
 D typeinfo for CEntityFactory<CFuncConveyor>
 D typeinfo for CEntityFactory<CFuncIllusionary>
 D typeinfo for CEntityFactory<CFuncInstanceIoProxy>
 D typeinfo for CEntityFactory<CFuncLadder>
 D typeinfo for CEntityFactory<CFuncLadderEndPoint>
 D typeinfo for CEntityFactory<CFuncMonitor>
 D typeinfo for CEntityFactory<CFuncMoveLinear>
 D typeinfo for CEntityFactory<CFuncNavBlocker>
 D typeinfo for CEntityFactory<CFuncNavObstruction>
 D typeinfo for CEntityFactory<CFuncNoPortalVolume>
 D typeinfo for CEntityFactory<CFuncOccluder>
 D typeinfo for CEntityFactory<CFuncPlacementClip>
 D typeinfo for CEntityFactory<CFuncPlat>
 D typeinfo for CEntityFactory<CFuncPlatRot>
 D typeinfo for CEntityFactory<CFuncPortalBumper>
 D typeinfo for CEntityFactory<CFuncPortalDetector>
 D typeinfo for CEntityFactory<CFuncPortalOrientation>
 D typeinfo for CEntityFactory<CFuncReflectiveGlass>
 D typeinfo for CEntityFactory<CFuncRotating>
 D typeinfo for CEntityFactory<CFuncSmokeVolume>
 D typeinfo for CEntityFactory<CFuncTankCombineCannon>
 D typeinfo for CEntityFactory<CFuncTankGun>
 D typeinfo for CEntityFactory<CFuncTankLaser>
 D typeinfo for CEntityFactory<CFuncTankMortar>
 D typeinfo for CEntityFactory<CFuncTankPhysCannister>
 D typeinfo for CEntityFactory<CFuncTankPulseLaser>
 D typeinfo for CEntityFactory<CFuncTankTrain>
 D typeinfo for CEntityFactory<CFuncTrackAuto>
 D typeinfo for CEntityFactory<CFuncTrackChange>
 D typeinfo for CEntityFactory<CFuncTrackTrain>
 D typeinfo for CEntityFactory<CFuncTrain>
 D typeinfo for CEntityFactory<CFuncTrainControls>
 D typeinfo for CEntityFactory<CFuncVPhysicsClip>
 D typeinfo for CEntityFactory<CFuncVehicleClip>
 D typeinfo for CEntityFactory<CFuncWall>
 D typeinfo for CEntityFactory<CFuncWallToggle>
 D typeinfo for CEntityFactory<CFunc_DustCloud>
 D typeinfo for CEntityFactory<CFunc_DustMotes>
 D typeinfo for CEntityFactory<CFunc_LOD>
 D typeinfo for CEntityFactory<CFunc_Portalled>
 D typeinfo for CEntityFactory<CFutbolCatcher>
 D typeinfo for CEntityFactory<CGameEnd>
 D typeinfo for CEntityFactory<CGameGibManager>
 D typeinfo for CEntityFactory<CGamePlayerEquip>
 D typeinfo for CEntityFactory<CGamePlayerTeam>
 D typeinfo for CEntityFactory<CGamePlayerZone>
 D typeinfo for CEntityFactory<CGameScore>
 D typeinfo for CEntityFactory<CGameText>
 D typeinfo for CEntityFactory<CGameUI>
 D typeinfo for CEntityFactory<CGameWeaponManager>
 D typeinfo for CEntityFactory<CGenericActor>
 D typeinfo for CEntityFactory<CGenericCycler>
 D typeinfo for CEntityFactory<CGenericFlexCycler>
 D typeinfo for CEntityFactory<CGenericNPC>
 D typeinfo for CEntityFactory<CGib>
 D typeinfo for CEntityFactory<CGibShooter>
 D typeinfo for CEntityFactory<CGrenadeBeam>
 D typeinfo for CEntityFactory<CGrenadeBeamChaser>
 D typeinfo for CEntityFactory<CGrenadeFrag>
 D typeinfo for CEntityFactory<CGunTarget>
 D typeinfo for CEntityFactory<CHalfLife2Proxy>
 D typeinfo for CEntityFactory<CHandleDummy>
 D typeinfo for CEntityFactory<CHandleTest>
 D typeinfo for CEntityFactory<CHotPotato>
 D typeinfo for CEntityFactory<CHotPotatoCatcher>
 D typeinfo for CEntityFactory<CHotPotatoSocket>
 D typeinfo for CEntityFactory<CHotPotatoSpawner>
 D typeinfo for CEntityFactory<CHoverTurretTether>
 D typeinfo for CEntityFactory<CInfoCameraLink>
 D typeinfo for CEntityFactory<CInfoGameEventProxy>
 D typeinfo for CEntityFactory<CInfoInstructorHintTarget>
 D typeinfo for CEntityFactory<CInfoIntermission>
 D typeinfo for CEntityFactory<CInfoLadderDismount>
 D typeinfo for CEntityFactory<CInfoLandmark>
 D typeinfo for CEntityFactory<CInfoMassCenter>
 D typeinfo for CEntityFactory<CInfoOverlayAccessor>
 D typeinfo for CEntityFactory<CInfoPlacementHelper>
 D typeinfo for CEntityFactory<CInfoPortalScore>
 D typeinfo for CEntityFactory<CInfoRemarkable>
 D typeinfo for CEntityFactory<CInfoTarget>
 D typeinfo for CEntityFactory<CInfoTargetPersonalitySphere>
 D typeinfo for CEntityFactory<CInfo_Coop_Spawn>
 D typeinfo for CEntityFactory<CInfo_Player_Ping_Detector>
 D typeinfo for CEntityFactory<CInstancedSceneEntity>
 D typeinfo for CEntityFactory<CItemSoda>
 D typeinfo for CEntityFactory<CItemSuit>
 D typeinfo for CEntityFactory<CItem_Nugget>
 D typeinfo for CEntityFactory<CKeepUpright>
 D typeinfo for CEntityFactory<CLabIndicatorPanel>
 D typeinfo for CEntityFactory<CLaserCatcher>
 D typeinfo for CEntityFactory<CLaserRelay>
 D typeinfo for CEntityFactory<CLevelPlacardDisplay>
 D typeinfo for CEntityFactory<CLight>
 D typeinfo for CEntityFactory<CLightGlow>
 D typeinfo for CEntityFactory<CLinkedPortalDoor>
 D typeinfo for CEntityFactory<CLogicAchievement>
 D typeinfo for CEntityFactory<CLogicActiveAutosave>
 D typeinfo for CEntityFactory<CLogicAuto>
 D typeinfo for CEntityFactory<CLogicAutosave>
 D typeinfo for CEntityFactory<CLogicBranch>
 D typeinfo for CEntityFactory<CLogicBranchList>
 D typeinfo for CEntityFactory<CLogicCase>
 D typeinfo for CEntityFactory<CLogicCollisionPair>
 D typeinfo for CEntityFactory<CLogicCompare>
 D typeinfo for CEntityFactory<CLogicCompareInteger>
 D typeinfo for CEntityFactory<CLogicCoopManager>
 D typeinfo for CEntityFactory<CLogicEventListener>
 D typeinfo for CEntityFactory<CLogicLineToEntity>
 D typeinfo for CEntityFactory<CLogicMeasureMovement>
 D typeinfo for CEntityFactory<CLogicNavigation>
 D typeinfo for CEntityFactory<CLogicPlayMovie>
 D typeinfo for CEntityFactory<CLogicPlayerProxy>
 D typeinfo for CEntityFactory<CLogicPlayerViewFinder>
 D typeinfo for CEntityFactory<CLogicRandomOutputs>
 D typeinfo for CEntityFactory<CLogicRegisterActivator>
 D typeinfo for CEntityFactory<CLogicRelay>
 D typeinfo for CEntityFactory<CLogicScript>
 D typeinfo for CEntityFactory<CLogicTimeScale>
 D typeinfo for CEntityFactory<CMP_LobbyScreen>
 D typeinfo for CEntityFactory<CMaterialModifyControl>
 D typeinfo for CEntityFactory<CMathColorBlend>
 D typeinfo for CEntityFactory<CMathCounter>
 D typeinfo for CEntityFactory<CMathRemap>
 D typeinfo for CEntityFactory<CMessage>
 D typeinfo for CEntityFactory<CMessageEntity>
 D typeinfo for CEntityFactory<CMomentaryRotButton>
 D typeinfo for CEntityFactory<CMortarShell>
 D typeinfo for CEntityFactory<CMovementSpeedMod>
 D typeinfo for CEntityFactory<CMovieDisplay>
 D typeinfo for CEntityFactory<CMultiSource>
 D typeinfo for CEntityFactory<CNPCEventResponseSystemEntity>
 D typeinfo for CEntityFactory<CNPCMaker>
 D typeinfo for CEntityFactory<CNPCSpawnDestination>
 D typeinfo for CEntityFactory<CNPC_Bullseye>
 D typeinfo for CEntityFactory<CNPC_EnemyFinder>
 D typeinfo for CEntityFactory<CNPC_EnemyFinderCombineCannon>
 D typeinfo for CEntityFactory<CNPC_FloorTurret>
 D typeinfo for CEntityFactory<CNPC_Furniture>
 D typeinfo for CEntityFactory<CNPC_HoverTurret>
 D typeinfo for CEntityFactory<CNPC_PersonalityCore>
 D typeinfo for CEntityFactory<CNPC_Portal_FloorTurret>
 D typeinfo for CEntityFactory<CNPC_RocketTurret>
 D typeinfo for CEntityFactory<CNPC_SecurityCamera>
 D typeinfo for CEntityFactory<CNPC_VehicleDriver>
 D typeinfo for CEntityFactory<CNPC_Wheatley_Boss>
 D typeinfo for CEntityFactory<CNeurotoxinCountdown>
 D typeinfo for CEntityFactory<CNewNPC>
 D typeinfo for CEntityFactory<CNewRecharge>
 D typeinfo for CEntityFactory<CNodeEnt>
 D typeinfo for CEntityFactory<CNullEntity>
 D typeinfo for CEntityFactory<COrnamentProp>
 D typeinfo for CEntityFactory<COuttroStats>
 D typeinfo for CEntityFactory<CPSCollisionEntity>
 D typeinfo for CEntityFactory<CPaintSphere>
 D typeinfo for CEntityFactory<CPaintSprayer>
 D typeinfo for CEntityFactory<CPaintStream>
 D typeinfo for CEntityFactory<CParticleFire>
 D typeinfo for CEntityFactory<CParticleLight>
 D typeinfo for CEntityFactory<CParticlePerformanceMonitor>
 D typeinfo for CEntityFactory<CParticleSystem>
 D typeinfo for CEntityFactory<CPathCorner>
 D typeinfo for CEntityFactory<CPathCornerCrash>
 D typeinfo for CEntityFactory<CPathKeyFrame>
 D typeinfo for CEntityFactory<CPathTrack>
 D typeinfo for CEntityFactory<CPhysBallSocket>
 D typeinfo for CEntityFactory<CPhysBox>
 D typeinfo for CEntityFactory<CPhysBoxMultiplayer>
 D typeinfo for CEntityFactory<CPhysConstraintSystem>
 D typeinfo for CEntityFactory<CPhysConvert>
 D typeinfo for CEntityFactory<CPhysExplosion>
 D typeinfo for CEntityFactory<CPhysFixed>
 D typeinfo for CEntityFactory<CPhysHinge>
 D typeinfo for CEntityFactory<CPhysImpact>
 D typeinfo for CEntityFactory<CPhysLength>
 D typeinfo for CEntityFactory<CPhysMagnet>
 D typeinfo for CEntityFactory<CPhysMotor>
 D typeinfo for CEntityFactory<CPhysPulley>
 D typeinfo for CEntityFactory<CPhysSlideConstraint>
 D typeinfo for CEntityFactory<CPhysSphere>
 D typeinfo for CEntityFactory<CPhysThruster>
 D typeinfo for CEntityFactory<CPhysTorque>
 D typeinfo for CEntityFactory<CPhysicsCannister>
 D typeinfo for CEntityFactory<CPhysicsCloneArea>
 D typeinfo for CEntityFactory<CPhysicsEntitySolver>
 D typeinfo for CEntityFactory<CPhysicsNPCSolver>
 D typeinfo for CEntityFactory<CPhysicsProp>
 D typeinfo for CEntityFactory<CPhysicsPropMultiplayer>
 D typeinfo for CEntityFactory<CPhysicsPropRespawnable>
 D typeinfo for CEntityFactory<CPhysicsShadowClone>
 D typeinfo for CEntityFactory<CPhysicsSpring>
 D typeinfo for CEntityFactory<CPhysicsWire>
 D typeinfo for CEntityFactory<CPlasma>
 D typeinfo for CEntityFactory<CPlayerPickupController>
 D typeinfo for CEntityFactory<CPlayerResource>
 D typeinfo for CEntityFactory<CPointAngleSensor>
 D typeinfo for CEntityFactory<CPointAngularVelocitySensor>
 D typeinfo for CEntityFactory<CPointBonusMapsAccessor>
 D typeinfo for CEntityFactory<CPointBroadcastClientCommand>
 D typeinfo for CEntityFactory<CPointCamera>
 D typeinfo for CEntityFactory<CPointChangelevel>
 D typeinfo for CEntityFactory<CPointClientCommand>
 D typeinfo for CEntityFactory<CPointCombineBallLauncher>
 D typeinfo for CEntityFactory<CPointCommentaryNode>
 D typeinfo for CEntityFactory<CPointDevShotCamera>
 D typeinfo for CEntityFactory<CPointEntity>
 D typeinfo for CEntityFactory<CPointEntityFinder>
 D typeinfo for CEntityFactory<CPointFutbolShooter>
 D typeinfo for CEntityFactory<CPointGamestatsCounter>
 D typeinfo for CEntityFactory<CPointHurt>
 D typeinfo for CEntityFactory<CPointPlayerMoveConstraint>
 D typeinfo for CEntityFactory<CPointProximitySensor>
 D typeinfo for CEntityFactory<CPointServerCommand>
 D typeinfo for CEntityFactory<CPointSpotlight>
 D typeinfo for CEntityFactory<CPointSurvey>
 D typeinfo for CEntityFactory<CPointTeleport>
 D typeinfo for CEntityFactory<CPointTemplate>
 D typeinfo for CEntityFactory<CPointVelocitySensor>
 D typeinfo for CEntityFactory<CPortalButtonTrigger>
 D typeinfo for CEntityFactory<CPortalCredits>
 D typeinfo for CEntityFactory<CPortalGameRulesProxy>
 D typeinfo for CEntityFactory<CPortalLaser>
 D typeinfo for CEntityFactory<CPortalLaserTarget>
 D typeinfo for CEntityFactory<CPortalMPGameRulesProxy>
 D typeinfo for CEntityFactory<CPortalMPStatsProxy>
 D typeinfo for CEntityFactory<CPortalRaceCheckpoint>
 D typeinfo for CEntityFactory<CPortalRagdoll>
 D typeinfo for CEntityFactory<CPortalStatsController>
 D typeinfo for CEntityFactory<CPortal_Base2D>
 D typeinfo for CEntityFactory<CPortal_Player>
 D typeinfo for CEntityFactory<CPortal_PointPush>
 D typeinfo for CEntityFactory<CPoseController>
 D typeinfo for CEntityFactory<CPostProcessController>
 D typeinfo for CEntityFactory<CPrecipitation>
 D typeinfo for CEntityFactory<CPrecipitationBlocker>
 D typeinfo for CEntityFactory<CPredictedViewModel>
 D typeinfo for CEntityFactory<CProceduralGenerator>
 D typeinfo for CEntityFactory<CProjectedDecal>
 D typeinfo for CEntityFactory<CProjectedTractorBeamEntity>
 D typeinfo for CEntityFactory<CProjectedWallEntity>
 D typeinfo for CEntityFactory<CPropButton>
 D typeinfo for CEntityFactory<CPropCombineBall>
 D typeinfo for CEntityFactory<CPropDoorRotating>
 D typeinfo for CEntityFactory<CPropEnergyBall>
 D typeinfo for CEntityFactory<CPropExplodingFutbol>
 D typeinfo for CEntityFactory<CPropFloorBallButton>
 D typeinfo for CEntityFactory<CPropFloorButton>
 D typeinfo for CEntityFactory<CPropFloorCubeButton>
 D typeinfo for CEntityFactory<CPropFutbolSocket>
 D typeinfo for CEntityFactory<CPropFutbolSpawner>
 D typeinfo for CEntityFactory<CPropGladosCore>
 D typeinfo for CEntityFactory<CPropGlassFutbol>
 D typeinfo for CEntityFactory<CPropIndicatorPanel>
 D typeinfo for CEntityFactory<CPropLinkedPortalDoor>
 D typeinfo for CEntityFactory<CPropMonsterBox>
 D typeinfo for CEntityFactory<CPropPaintBomb>
 D typeinfo for CEntityFactory<CPropPersonalitySphere>
 D typeinfo for CEntityFactory<CPropPhysicsPaintable>
 D typeinfo for CEntityFactory<CPropPortalStatsDisplay>
 D typeinfo for CEntityFactory<CPropRocketTripwire>
 D typeinfo for CEntityFactory<CPropTelescopicArm>
 D typeinfo for CEntityFactory<CPropTestChamberDoor>
 D typeinfo for CEntityFactory<CPropTicTacToePanel>
 D typeinfo for CEntityFactory<CPropTractorBeamProjector>
 D typeinfo for CEntityFactory<CPropUnderButton>
 D typeinfo for CEntityFactory<CPropUnderFloorButton>
 D typeinfo for CEntityFactory<CPropVehicle>
 D typeinfo for CEntityFactory<CPropVehicleChoreoGeneric>
 D typeinfo for CEntityFactory<CPropVehicleDriveable>
 D typeinfo for CEntityFactory<CPropVehicleViewController>
 D typeinfo for CEntityFactory<CPropWallProjector>
 D typeinfo for CEntityFactory<CPropWeightedCube>
 D typeinfo for CEntityFactory<CProp_Hallucination>
 D typeinfo for CEntityFactory<CProp_Mirror>
 D typeinfo for CEntityFactory<CProp_Portal>
 D typeinfo for CEntityFactory<CPushable>
 D typeinfo for CEntityFactory<CRagGib>
 D typeinfo for CEntityFactory<CRagdollBoogie>
 D typeinfo for CEntityFactory<CRagdollConstraint>
 D typeinfo for CEntityFactory<CRagdollMagnet>
 D typeinfo for CEntityFactory<CRagdollManager>
 D typeinfo for CEntityFactory<CRagdollProp>
 D typeinfo for CEntityFactory<CRagdollPropAttached>
 D typeinfo for CEntityFactory<CRallyPoint>
 D typeinfo for CEntityFactory<CRecharge>
 D typeinfo for CEntityFactory<CRevertSaved>
 D typeinfo for CEntityFactory<CRocket_Turret_Projectile>
 D typeinfo for CEntityFactory<CRopeAnchor>
 D typeinfo for CEntityFactory<CRopeKeyframe>
 D typeinfo for CEntityFactory<CRotButton>
 D typeinfo for CEntityFactory<CRotDoor>
 D typeinfo for CEntityFactory<CRotorWashShooter>
 D typeinfo for CEntityFactory<CSceneEntity>
 D typeinfo for CEntityFactory<CSceneListManager>
 D typeinfo for CEntityFactory<CSceneManager>
 D typeinfo for CEntityFactory<CScriptIntro>
 D typeinfo for CEntityFactory<CScriptedTarget>
 D typeinfo for CEntityFactory<CServerRagdollTrigger>
 D typeinfo for CEntityFactory<CShadowControl>
 D typeinfo for CEntityFactory<CShower>
 D typeinfo for CEntityFactory<CSimplePhysicsBrush>
 D typeinfo for CEntityFactory<CSimplePhysicsProp>
 D typeinfo for CEntityFactory<CSkyCamera>
 D typeinfo for CEntityFactory<CSkyboxSwapper>
 D typeinfo for CEntityFactory<CSlideshowDisplay>
 D typeinfo for CEntityFactory<CSmokeStack>
 D typeinfo for CEntityFactory<CSoundEnt>
 D typeinfo for CEntityFactory<CSpeaker>
 D typeinfo for CEntityFactory<CSpotlightEnd>
 D typeinfo for CEntityFactory<CSprayCan>
 D typeinfo for CEntityFactory<CSprite>
 D typeinfo for CEntityFactory<CSpriteOriented>
 D typeinfo for CEntityFactory<CSpriteTrail>
 D typeinfo for CEntityFactory<CStatueProp>
 D typeinfo for CEntityFactory<CSteamJet>
 D typeinfo for CEntityFactory<CStripWeapons>
 D typeinfo for CEntityFactory<CSun>
 D typeinfo for CEntityFactory<CSunlightShadowControl>
 D typeinfo for CEntityFactory<CTankTargetChange>
 D typeinfo for CEntityFactory<CTankTrainAI>
 D typeinfo for CEntityFactory<CTargetCDAudioRep>
 D typeinfo for CEntityFactory<CTargetChangeGravity>
 D typeinfo for CEntityFactory<CTeam>
 D typeinfo for CEntityFactory<CTeamSpawnPoint>
 D typeinfo for CEntityFactory<CTeamVehicleSpawnPoint>
 D typeinfo for CEntityFactory<CTempEntTester>
 D typeinfo for CEntityFactory<CTemplateNPCMaker>
 D typeinfo for CEntityFactory<CTesla>
 D typeinfo for CEntityFactory<CTestEffect>
 D typeinfo for CEntityFactory<CTestTraceline>
 D typeinfo for CEntityFactory<CTest_ProxyToggle_Networkable>
 D typeinfo for CEntityFactory<CTextureToggle>
 D typeinfo for CEntityFactory<CTimerEntity>
 D typeinfo for CEntityFactory<CTonemapTrigger>
 D typeinfo for CEntityFactory<CTriggerAutoCrouch>
 D typeinfo for CEntityFactory<CTriggerBrush>
 D typeinfo for CEntityFactory<CTriggerCDAudio>
 D typeinfo for CEntityFactory<CTriggerCamera>
 D typeinfo for CEntityFactory<CTriggerCameraMultiplayer>
 D typeinfo for CEntityFactory<CTriggerCatapult>
 D typeinfo for CEntityFactory<CTriggerGravity>
 D typeinfo for CEntityFactory<CTriggerHierarchy>
 D typeinfo for CEntityFactory<CTriggerHurt>
 D typeinfo for CEntityFactory<CTriggerImpact>
 D typeinfo for CEntityFactory<CTriggerLook>
 D typeinfo for CEntityFactory<CTriggerMultiple>
 D typeinfo for CEntityFactory<CTriggerOnce>
 D typeinfo for CEntityFactory<CTriggerPaintCleanser>
 D typeinfo for CEntityFactory<CTriggerPhysicsTrap>
 D typeinfo for CEntityFactory<CTriggerPingDetector>
 D typeinfo for CEntityFactory<CTriggerPlayerMovement>
 D typeinfo for CEntityFactory<CTriggerPlayerTeam>
 D typeinfo for CEntityFactory<CTriggerPortalCleanser>
 D typeinfo for CEntityFactory<CTriggerProximity>
 D typeinfo for CEntityFactory<CTriggerPush>
 D typeinfo for CEntityFactory<CTriggerRPGFire>
 D typeinfo for CEntityFactory<CTriggerRemove>
 D typeinfo for CEntityFactory<CTriggerSave>
 D typeinfo for CEntityFactory<CTriggerSoundscape>
 D typeinfo for CEntityFactory<CTriggerTeleport>
 D typeinfo for CEntityFactory<CTriggerToggleSave>
 D typeinfo for CEntityFactory<CTriggerVPhysicsMotion>
 D typeinfo for CEntityFactory<CTriggerViewProxy>
 D typeinfo for CEntityFactory<CTriggerVolume>
 D typeinfo for CEntityFactory<CTriggerWateryDeath>
 D typeinfo for CEntityFactory<CTriggerWeaponDissolve>
 D typeinfo for CEntityFactory<CTriggerWeaponStrip>
 D typeinfo for CEntityFactory<CTriggerWind>
 D typeinfo for CEntityFactory<CTrigger_TractorBeam>
 D typeinfo for CEntityFactory<CTurretTipController>
 D typeinfo for CEntityFactory<CVGuiScreen>
 D typeinfo for CEntityFactory<CWC_UpdateIgnoreList>
 D typeinfo for CEntityFactory<CWaterBullet>
 D typeinfo for CEntityFactory<CWaterLODControl>
 D typeinfo for CEntityFactory<CWateryDeathLeech>
 D typeinfo for CEntityFactory<CWeaponCubemap>
 D typeinfo for CEntityFactory<CWeaponCycler>
 D typeinfo for CEntityFactory<CWeaponPortalBase>
 D typeinfo for CEntityFactory<CWeaponPortalgun>
 D typeinfo for CEntityFactory<CWeaponPromoAntennaBall>
 D typeinfo for CEntityFactory<CWeaponPromoAntennaEgg>
 D typeinfo for CEntityFactory<CWeaponPromoHelmetBall>
 D typeinfo for CEntityFactory<CWeaponPromoHelmetEgg>
 D typeinfo for CEntityFactory<CWeightButton>
 D typeinfo for CEntityFactory<CWindowPane>
 D typeinfo for CEntityFactory<CWorld>
 D typeinfo for CEntityFactory<CWorldItem>
 D typeinfo for CEntityFactory<CWreckage>
 D typeinfo for CEntityFactory<DustTrail>
 D typeinfo for CEntityFactory<FilterDamageType>
 D typeinfo for CEntityFactory<FilterTeam>
 D typeinfo for CEntityFactory<FizzlerEffects>
 D typeinfo for CEntityFactory<FizzlerMultiOriginSoundPlayer>
 D typeinfo for CEntityFactory<MovieExplosion>
 D typeinfo for CEntityFactory<ParticleSmokeGrenade>
 D typeinfo for CEntityFactory<ProjectedEntityAmbientSoundProxy>
 D typeinfo for CEntityFactory<RocketTrail>
 D typeinfo for CEntityFactory<SmokeTrail>
 D typeinfo for CEntityFactory<SporeExplosion>
 D typeinfo for CEntityFactory<SporeTrail>
 D typeinfo for CEntityFactoryDictionary
 D typeinfo for CEntityFlame
 D typeinfo for CEntityFreezing
 D typeinfo for CEntityListSystem
 D typeinfo for CEntityParticleTrail
 D typeinfo for CEntityParticleTrail::NetworkVar_m_Info
 D typeinfo for CEntitySaveRestoreBlockHandler
 D typeinfo for CEntitySaveUtils
 D typeinfo for CEntityTouchManager
 D typeinfo for CEnvAR2Explosion
 D typeinfo for CEnvAmbientLight
 D typeinfo for CEnvBeam
 D typeinfo for CEnvBeverage
 D typeinfo for CEnvDOFController
 D typeinfo for CEnvDetailController
 D typeinfo for CEnvDustPuff
 D typeinfo for CEnvEffectsScript
 D typeinfo for CEnvEntityIgniter
 D typeinfo for CEnvEntityMaker
 D typeinfo for CEnvExplosion
 D typeinfo for CEnvFade
 D typeinfo for CEnvFireSensor
 D typeinfo for CEnvFireSource
 D typeinfo for CEnvFunnel
 D typeinfo for CEnvGlobal
 D typeinfo for CEnvGunfire
 D typeinfo for CEnvHudHint
 D typeinfo for CEnvInstructorHint
 D typeinfo for CEnvLaser
 D typeinfo for CEnvLight
 D typeinfo for CEnvMicrophone
 D typeinfo for CEnvMuzzleFlash
 D typeinfo for CEnvParticleScript
 D typeinfo for CEnvPlayerSurfaceTrigger
 D typeinfo for CEnvPortalPathTrack
 D typeinfo for CEnvProjectedTexture
 D typeinfo for CEnvQuadraticBeam
 D typeinfo for CEnvScreenEffect
 D typeinfo for CEnvScreenOverlay
 D typeinfo for CEnvShake
 D typeinfo for CEnvShooter
 D typeinfo for CEnvSoundscape
 D typeinfo for CEnvSoundscapeProxy
 D typeinfo for CEnvSoundscapeTriggerable
 D typeinfo for CEnvSpark
 D typeinfo for CEnvSplash
 D typeinfo for CEnvTilt
 D typeinfo for CEnvTonemapController
 D typeinfo for CEnvTracer
 D typeinfo for CEnvViewPunch
 D typeinfo for CEnvWind
 D typeinfo for CEnvWindShared
 D typeinfo for CEnvZoom
 D typeinfo for CEnv_Lightrail_Endpoint
 D typeinfo for CEventLog
 D typeinfo for CEventQueueSaveLoadProxy
 D typeinfo for CEventQueue_SaveRestoreBlockHandler
 D typeinfo for CEventsSaveDataOps
 D typeinfo for CFilterClass
 D typeinfo for CFilterCombineBall
 D typeinfo for CFilterContext
 D typeinfo for CFilterEnemy
 D typeinfo for CFilterMassGreater
 D typeinfo for CFilterModel
 D typeinfo for CFilterMultiple
 D typeinfo for CFilterName
 D typeinfo for CFilterOnlyGlassFutbol
 D typeinfo for CFilterOnlyHotPotato
 D typeinfo for CFilterPlayerHeld
 D typeinfo for CFilterSize
 D typeinfo for CFire
 D typeinfo for CFireSmoke
 D typeinfo for CFireSphere
 D typeinfo for CFireTrail
 D typeinfo for CFish
 D typeinfo for CFishPool
 D typeinfo for CFlaggedEntitiesEnum
 D typeinfo for CFlexAnimationTrack
 D typeinfo for CFlexCycler
 D typeinfo for CFlexExpresser
 D typeinfo for CFlexExpresserShim
 D typeinfo for CFlexSceneFileManager
 D typeinfo for CFlextalkActor
 D typeinfo for CFloatProperty
 D typeinfo for CFmtStrN<1024>
 D typeinfo for CFmtStrN<128>
 D typeinfo for CFmtStrN<256>
 D typeinfo for CFmtStrN<32>
 D typeinfo for CFogController
 D typeinfo for CFogController::NetworkVar_m_fog
 D typeinfo for CFogSystem
 D typeinfo for CFogTrigger
 D typeinfo for CFogVolume
 D typeinfo for CFourWheelServerVehicle
 D typeinfo for CFourWheelVehiclePhysics
 D typeinfo for CFuncAreaPortalBase
 D typeinfo for CFuncAreaPortalWindow
 D typeinfo for CFuncBrush
 D typeinfo for CFuncCombineBallSpawner
 D typeinfo for CFuncConveyor
 D typeinfo for CFuncIllusionary
 D typeinfo for CFuncInstanceIoProxy
 D typeinfo for CFuncLadder
 D typeinfo for CFuncLadderEndPoint
 D typeinfo for CFuncMonitor
 D typeinfo for CFuncMoveLinear
 D typeinfo for CFuncNavBlocker
 D typeinfo for CFuncNavObstruction
 D typeinfo for CFuncNoPortalVolume
 D typeinfo for CFuncOccluder
 D typeinfo for CFuncPlacementClip
 D typeinfo for CFuncPlat
 D typeinfo for CFuncPlatRot
 D typeinfo for CFuncPortalBumper
 D typeinfo for CFuncPortalDetector
 D typeinfo for CFuncPortalOrientation
 D typeinfo for CFuncReflectiveGlass
 D typeinfo for CFuncRotating
 D typeinfo for CFuncSmokeVolume
 D typeinfo for CFuncTank
 D typeinfo for CFuncTankCombineCannon
 D typeinfo for CFuncTankGun
 D typeinfo for CFuncTankLaser
 D typeinfo for CFuncTankMortar
 D typeinfo for CFuncTankPhysCannister
 D typeinfo for CFuncTankPulseLaser
 D typeinfo for CFuncTankTrain
 D typeinfo for CFuncTrackAuto
 D typeinfo for CFuncTrackChange
 D typeinfo for CFuncTrackTrain
 D typeinfo for CFuncTrain
 D typeinfo for CFuncTrainControls
 D typeinfo for CFuncVPhysicsClip
 D typeinfo for CFuncVehicleClip
 D typeinfo for CFuncWall
 D typeinfo for CFuncWallToggle
 D typeinfo for CFunc_Dust
 D typeinfo for CFunc_DustCloud
 D typeinfo for CFunc_DustMotes
 D typeinfo for CFunc_LOD
 D typeinfo for CFunc_Portalled
 D typeinfo for CFunc_VPhysics_Clip_Watcher
 D typeinfo for CFunctor
 D typeinfo for CFunctor1<void (*)(CBaseEntity*), CBaseEntity*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor1<void (*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor2<void (*)(CFunctor**, unsigned int), CFunctor**, int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor2<void (*)(IPhysicsObject*, Vector const&), IPhysicsObject*, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor3<void (*)(IPhysicsObject*, Vector const&, Vector const&), IPhysicsObject*, Vector, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctor4<CBaseEntity* (*)(CBaseEntity*, CBaseEntity*, bool, float), CBaseEntity*, CBaseEntity*, bool, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CFunctorJob
 D typeinfo for CFutbolCatcher
 D typeinfo for CGCDev_NewItemRequestResponse
 D typeinfo for CGCMsgGetIPLocation
 D typeinfo for CGCMsgGetIPLocationResponse
 D typeinfo for CGCMsgGetSystemStats
 D typeinfo for CGCMsgGetSystemStatsResponse
 D typeinfo for CGCMsgMemCachedDelete
 D typeinfo for CGCMsgMemCachedGet
 D typeinfo for CGCMsgMemCachedGetResponse
 D typeinfo for CGCMsgMemCachedGetResponse_ValueTag
 D typeinfo for CGCMsgMemCachedSet
 D typeinfo for CGCMsgMemCachedSet_KeyPair
 D typeinfo for CGCMsgSystemStatsSchema
 D typeinfo for CGCReplicateConVars
 D typeinfo for CGCServerSystem
 D typeinfo for CGCStorePurchaseInit_LineItem
 D typeinfo for CGCUpdateConVar
 D typeinfo for CGCUpdateItemSchema
 D typeinfo for CGameDLL_ConVarAccessor
 D typeinfo for CGameEnd
 D typeinfo for CGameEventListener
 D typeinfo for CGameGibManager
 D typeinfo for CGameMovement
 D typeinfo for CGamePlayerEquip
 D typeinfo for CGamePlayerTeam
 D typeinfo for CGamePlayerZone
 D typeinfo for CGameResponseSystem
 D typeinfo for CGameRules
 D typeinfo for CGameRulesProxy
 D typeinfo for CGameScore
 D typeinfo for CGameStringPool
 D typeinfo for CGameText
 D typeinfo for CGameTimescale
 D typeinfo for CGameUI
 D typeinfo for CGameWeaponManager
 D typeinfo for CGenericActor
 D typeinfo for CGenericCycler
 D typeinfo for CGenericFlexCycler
 D typeinfo for CGenericNPC
 D typeinfo for CGib
 D typeinfo for CGibShooter
 D typeinfo for CGlobalEntityList
 D typeinfo for CGlobalEventLog
 D typeinfo for CGlobalState
 D typeinfo for CGrabController
 D typeinfo for CGrenadeBeam
 D typeinfo for CGrenadeBeamChaser
 D typeinfo for CGrenadeFrag
 D typeinfo for CGunTarget
 D typeinfo for CHFontProperty
 D typeinfo for CHL2EventLog
 D typeinfo for CHL2_Player
 D typeinfo for CHLPlayerMove
 D typeinfo for CHLTVDirector
 D typeinfo for CHalfLife2
 D typeinfo for CHalfLife2Proxy
 D typeinfo for CHandleDummy
 D typeinfo for CHandleTest
 D typeinfo for CHotPotato
 D typeinfo for CHotPotatoCatcher
 D typeinfo for CHotPotatoSocket
 D typeinfo for CHotPotatoSpawner
 D typeinfo for CHoverTurretTether
 D typeinfo for CIKSaveRestoreOps
 D typeinfo for CIPLocationInfo
 D typeinfo for CInfoCameraLink
 D typeinfo for CInfoGameEventProxy
 D typeinfo for CInfoInstructorHintTarget
 D typeinfo for CInfoIntermission
 D typeinfo for CInfoLadderDismount
 D typeinfo for CInfoLandmark
 D typeinfo for CInfoMassCenter
 D typeinfo for CInfoOverlayAccessor
 D typeinfo for CInfoPlacementHelper
 D typeinfo for CInfoPlacementManager
 D typeinfo for CInfoPortalScore
 D typeinfo for CInfoRemarkable
 D typeinfo for CInfoTarget
 D typeinfo for CInfoTargetEntityEnumerator
 D typeinfo for CInfoTargetPersonalitySphere
 D typeinfo for CInfo_Coop_Spawn
 D typeinfo for CInfo_Player_Ping_Detector
 D typeinfo for CInstancedResponseSystem
 D typeinfo for CInstancedSceneEntity
 D typeinfo for CIntProperty
 D typeinfo for CInventoryManager
 D typeinfo for CItem
 D typeinfo for CItemGeneration
 D typeinfo for CItemSelectionCriteria::CCondition
 D typeinfo for CItemSelectionCriteria::CFloatCondition
 D typeinfo for CItemSelectionCriteria::CSetCondition
 D typeinfo for CItemSelectionCriteria::CStringCondition
 D typeinfo for CItemSoda
 D typeinfo for CItemSuit
 D typeinfo for CItem_Nugget
 D typeinfo for CJob
 D typeinfo for CKeepUpright
 D typeinfo for CKeyValuesDumpContextAsDevMsg
 D typeinfo for CLabIndicatorPanel
 D typeinfo for CLagCompensationManager
 D typeinfo for CLaserCatcher
 D typeinfo for CLaserRelay
 D typeinfo for CLevelPlacardDisplay
 D typeinfo for CLight
 D typeinfo for CLightGlow
 D typeinfo for CLinkedPortalDoor
 D typeinfo for CLogicAchievement
 D typeinfo for CLogicActiveAutosave
 D typeinfo for CLogicAuto
 D typeinfo for CLogicAutosave
 D typeinfo for CLogicBranch
 D typeinfo for CLogicBranchList
 D typeinfo for CLogicCase
 D typeinfo for CLogicCollisionPair
 D typeinfo for CLogicCompare
 D typeinfo for CLogicCompareInteger
 D typeinfo for CLogicCoopManager
 D typeinfo for CLogicEventListener
 D typeinfo for CLogicLineToEntity
 D typeinfo for CLogicMeasureMovement
 D typeinfo for CLogicNavigation
 D typeinfo for CLogicPlayMovie
 D typeinfo for CLogicPlayerProxy
 D typeinfo for CLogicPlayerViewFinder
 D typeinfo for CLogicRandomOutputs
 D typeinfo for CLogicRegisterActivator
 D typeinfo for CLogicRelay
 D typeinfo for CLogicScript
 D typeinfo for CLogicTimeScale
 D typeinfo for CLogicalEntity
 D typeinfo for CMP_LobbyScreen
 D typeinfo for CMapLoadEntityFilter
 D typeinfo for CMaterialModifyControl
 D typeinfo for CMathColorBlend
 D typeinfo for CMathCounter
 D typeinfo for CMathRemap
 D typeinfo for CMemZeroOnNew
 D typeinfo for CMemberFunctor0<CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>*, void (CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor0<CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>*, void (CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor0<CPropCombineBall*, void (CPropCombineBall::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor1<CAI_Navigator*, bool (CAI_Navigator::*)(Vector const&), Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor1<CPortal_Base2D*, void (CPortal_Base2D::*)(CBaseEntity*), CBaseEntity*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor2<CAI_Navigator*, bool (CAI_Navigator::*)(AI_NavGoal_t const&, unsigned int), AI_NavGoal_t, unsigned int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor3<CBreakableProp*, void (CBreakableProp::*)(Vector const&, Vector const&, QAngle const&), Vector, Vector, QAngle, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemoryLog
 D typeinfo for CMessage
 D typeinfo for CMessageEntity
 D typeinfo for CModelPrecacheSystem
 D typeinfo for CModelSoundsCache
 D typeinfo for CModelSoundsCacheSaver
 D typeinfo for CMomentaryRotButton
 D typeinfo for CMortarShell
 D typeinfo for CMotorController
 D typeinfo for CMoveHelperServer
 D typeinfo for CMoveableCamera
 D typeinfo for CMovementSpeedMod
 D typeinfo for CMovieDisplay
 D typeinfo for CMsgAMAddFreeLicense
 D typeinfo for CMsgAMAddFreeLicenseResponse
 D typeinfo for CMsgAMFindAccounts
 D typeinfo for CMsgAMFindAccountsResponse
 D typeinfo for CMsgAMGetLicenses
 D typeinfo for CMsgAMGetLicensesResponse
 D typeinfo for CMsgAMGetUserGameStats
 D typeinfo for CMsgAMGetUserGameStatsResponse
 D typeinfo for CMsgAMGetUserGameStatsResponse_Achievement_Blocks
 D typeinfo for CMsgAMGetUserGameStatsResponse_Stats
 D typeinfo for CMsgAMSendEmail
 D typeinfo for CMsgAMSendEmailResponse
 D typeinfo for CMsgAMSendEmail_PersonaNameReplacementToken
 D typeinfo for CMsgAMSendEmail_ReplacementToken
 D typeinfo for CMsgAdjustItemEquippedState
 D typeinfo for CMsgCommunityMapAddQueueHistoryEntry
 D typeinfo for CMsgCommunityMapItemVoteSummary
 D typeinfo for CMsgCommunityMapItemVoteSummaryResponse
 D typeinfo for CMsgConVarValue
 D typeinfo for CMsgDevDebugRollLootRequest
 D typeinfo for CMsgDevNewItemRequest
 D typeinfo for CMsgGCClientDisplayNotification
 D typeinfo for CMsgGCError
 D typeinfo for CMsgGCGetCommandList
 D typeinfo for CMsgGCGetCommandListResponse
 D typeinfo for CMsgGCGetEmailTemplate
 D typeinfo for CMsgGCGetEmailTemplateResponse
 D typeinfo for CMsgGCNameItemNotification
 D typeinfo for CMsgGCReportAbuse
 D typeinfo for CMsgGCReportAbuseResponse
 D typeinfo for CMsgGCStorePurchaseInit
 D typeinfo for CMsgGCStorePurchaseInitResponse
 D typeinfo for CMsgGameServerInfo
 D typeinfo for CMsgHttpRequest
 D typeinfo for CMsgHttpRequest_QueryParam
 D typeinfo for CMsgHttpRequest_RequestHeader
 D typeinfo for CMsgHttpResponse
 D typeinfo for CMsgHttpResponse_ResponseHeader
 D typeinfo for CMsgIncrementKillCountAttribute
 D typeinfo for CMsgInvitationCreated
 D typeinfo for CMsgInviteToParty
 D typeinfo for CMsgItemAcknowledged
 D typeinfo for CMsgKickFromParty
 D typeinfo for CMsgLeaveParty
 D typeinfo for CMsgNotifyWatchdog
 D typeinfo for CMsgPackageLicense
 D typeinfo for CMsgPartyInviteResponse
 D typeinfo for CMsgPlaytestMarkDemoForDelete
 D typeinfo for CMsgPlaytestMarkDemoNotNew
 D typeinfo for CMsgPlaytestRemoveDemo
 D typeinfo for CMsgPlaytestReportDemo
 D typeinfo for CMsgPlaytestReportDemoSession
 D typeinfo for CMsgPlaytestRetrieveDemoHandles
 D typeinfo for CMsgPlaytestRetrieveDemoHandlesResponse
 D typeinfo for CMsgPlaytestRetrieveDemoPlayersForMap
 D typeinfo for CMsgPlaytestRetrieveDemoPlayersForMapResponse
 D typeinfo for CMsgPlaytestRetrieveNewDemoCountResponse
 D typeinfo for CMsgPlaytestTestMessage
 D typeinfo for CMsgProtoBufHeader
 D typeinfo for CMsgReplayUploadedToYouTube
 D typeinfo for CMsgReplicateConVars
 D typeinfo for CMsgRequestInventoryRefresh
 D typeinfo for CMsgRequestItemSchemaData
 D typeinfo for CMsgSOCacheSubscribed
 D typeinfo for CMsgSOCacheSubscribed_SubscribedType
 D typeinfo for CMsgSOCacheSubscriptionCheck
 D typeinfo for CMsgSOCacheSubscriptionRefresh
 D typeinfo for CMsgSOCacheUnsubscribed
 D typeinfo for CMsgSOCacheVersion
 D typeinfo for CMsgSOMultipleObjects
 D typeinfo for CMsgSOMultipleObjects_SingleObject
 D typeinfo for CMsgSOSingleObject
 D typeinfo for CMsgSelectItemPresetForClass
 D typeinfo for CMsgSelectItemPresetForClassReply
 D typeinfo for CMsgServerAvailable
 D typeinfo for CMsgSetPresetItemPosition
 D typeinfo for CMsgSortItems
 D typeinfo for CMsgStoreGetUserData
 D typeinfo for CMsgStoreGetUserDataResponse
 D typeinfo for CMsgSystemBroadcast
 D typeinfo for CMsgUpdateItemSchema
 D typeinfo for CMsgUpdatePeriodicEvent
 D typeinfo for CMsgUseItem
 D typeinfo for CMsgWebAPIKey
 D typeinfo for CMsgWebAPIRequest
 D typeinfo for CMultiPlayerAnimState
 D typeinfo for CMultiSource
 D typeinfo for CMultiplayRules
 D typeinfo for CMultiplayer_Expresser
 D typeinfo for CNPCBaseInteractive<CAI_BaseNPC>
 D typeinfo for CNPCBaseInteractive<CAI_BasePhysicsFlyingBot>
 D typeinfo for CNPCEventResponseSystem
 D typeinfo for CNPCEventResponseSystemEntity
 D typeinfo for CNPCMaker
 D typeinfo for CNPCSpawnDestination
 D typeinfo for CNPC_Bullseye
 D typeinfo for CNPC_EnemyFinder
 D typeinfo for CNPC_EnemyFinderCombineCannon
 D typeinfo for CNPC_FloorTurret
 D typeinfo for CNPC_Furniture
 D typeinfo for CNPC_HoverTurret
 D typeinfo for CNPC_PersonalityCore
 D typeinfo for CNPC_Portal_FloorTurret
 D typeinfo for CNPC_RocketTurret
 D typeinfo for CNPC_SecurityCamera
 D typeinfo for CNPC_VehicleDriver
 D typeinfo for CNPC_Wheatley_Boss
 D typeinfo for CNavArea
 D typeinfo for CNavAreaCriticalData
 D typeinfo for CNavMesh
 D typeinfo for CNeurotoxinCountdown
 D typeinfo for CNewNPC
 D typeinfo for CNewRecharge
 D typeinfo for CNoHoliday
 D typeinfo for CNodeEnt
 D typeinfo for CNodeFilter
 D typeinfo for CNotifyList
 D typeinfo for CNuggetDirector
 D typeinfo for CNullEntity
 D typeinfo for COrHoliday
 D typeinfo for COrnamentProp
 D typeinfo for COuttroStats
 D typeinfo for CPASAttenuationFilter
 D typeinfo for CPASFilter
 D typeinfo for CPSCollisionEntity
 D typeinfo for CPS_AutoGameSys_EntityListener
 D typeinfo for CPVSFilter
 D typeinfo for CPVS_Extender
 D typeinfo for CPaintAffectedEntityList
 D typeinfo for CPaintBlob
 D typeinfo for CPaintCleanserManager
 D typeinfo for CPaintDatabase
 D typeinfo for CPaintSaveRestoreBlockHandler
 D typeinfo for CPaintSphere
 D typeinfo for CPaintSprayer
 D typeinfo for CPaintStream
 D typeinfo for CPaintStreamManager
 D typeinfo for CPaintableEntity<CBaseMultiplayerPlayer>
 D typeinfo for CPaintableEntity<CBaseProjectedEntity>
 D typeinfo for CPaintableEntity<CNPC_FloorTurret>
 D typeinfo for CPaintableEntity<CPhysicsProp>
 D typeinfo for CParticleFire
 D typeinfo for CParticleLight
 D typeinfo for CParticlePerformanceMonitor
 D typeinfo for CParticleSystem
 D typeinfo for CParticleSystemQuery
 D typeinfo for CPathCorner
 D typeinfo for CPathCornerCrash
 D typeinfo for CPathKeyFrame
 D typeinfo for CPathTrack
 D typeinfo for CPathfindNearestNodeFilter
 D typeinfo for CPhysBallSocket
 D typeinfo for CPhysBox
 D typeinfo for CPhysBoxMultiplayer
 D typeinfo for CPhysConstraint
 D typeinfo for CPhysConstraintEvents
 D typeinfo for CPhysConstraintSystem
 D typeinfo for CPhysConvert
 D typeinfo for CPhysExplosion
 D typeinfo for CPhysFixed
 D typeinfo for CPhysForce
 D typeinfo for CPhysHinge
 D typeinfo for CPhysImpact
 D typeinfo for CPhysLength
 D typeinfo for CPhysMagnet
 D typeinfo for CPhysMotor
 D typeinfo for CPhysObjSaveRestoreOps
 D typeinfo for CPhysPulley
 D typeinfo for CPhysSaveRestoreBlockHandler
 D typeinfo for CPhysSlideConstraint
 D typeinfo for CPhysSphere
 D typeinfo for CPhysThruster
 D typeinfo for CPhysTorque
 D typeinfo for CPhysicsCannister
 D typeinfo for CPhysicsCloneArea
 D typeinfo for CPhysicsEntitySolver
 D typeinfo for CPhysicsGameTrace
 D typeinfo for CPhysicsHook
 D typeinfo for CPhysicsNPCSolver
 D typeinfo for CPhysicsProp
 D typeinfo for CPhysicsPropMultiplayer
 D typeinfo for CPhysicsPropRespawnable
 D typeinfo for CPhysicsPushedEntities
 D typeinfo for CPhysicsShadowClone
 D typeinfo for CPhysicsShake
 D typeinfo for CPhysicsSpring
 D typeinfo for CPhysicsWind
 D typeinfo for CPhysicsWire
 D typeinfo for CPlasma
 D typeinfo for CPlatTrigger
 D typeinfo for CPlayerInfo
 D typeinfo for CPlayerInfoManager
 D typeinfo for CPlayerInventory
 D typeinfo for CPlayerLocalData
 D typeinfo for CPlayerLocalData::NetworkVar_m_PlayerFog
 D typeinfo for CPlayerLocalData::NetworkVar_m_audio
 D typeinfo for CPlayerLocalData::NetworkVar_m_skybox3d
 D typeinfo for CPlayerMove
 D typeinfo for CPlayerPickupController
 D typeinfo for CPlayerResource
 D typeinfo for CPlayerState
 D typeinfo for CPlayerVoiceListener
 D typeinfo for CPluginBotManager
 D typeinfo for CPluginHelpersCheck
 D typeinfo for CPointAngleSensor
 D typeinfo for CPointAngularVelocitySensor
 D typeinfo for CPointBonusMapsAccessor
 D typeinfo for CPointBroadcastClientCommand
 D typeinfo for CPointCamera
 D typeinfo for CPointChangelevel
 D typeinfo for CPointClientCommand
 D typeinfo for CPointCombineBallLauncher
 D typeinfo for CPointCommentaryNode
 D typeinfo for CPointDevShotCamera
 D typeinfo for CPointEntity
 D typeinfo for CPointEntityFinder
 D typeinfo for CPointFutbolShooter
 D typeinfo for CPointGamestatsCounter
 D typeinfo for CPointHurt
 D typeinfo for CPointPlayerMoveConstraint
 D typeinfo for CPointProximitySensor
 D typeinfo for CPointServerCommand
 D typeinfo for CPointSpotlight
 D typeinfo for CPointSurvey
 D typeinfo for CPointTeleport
 D typeinfo for CPointTemplate
 D typeinfo for CPointTemplatePrecacher
 D typeinfo for CPointVelocitySensor
 D typeinfo for CPolyhedron
 D typeinfo for CPolyhedron_AllocByNew
 D typeinfo for CPolyhedron_LumpedMemory
 D typeinfo for CPolyhedron_TempMemory
 D typeinfo for CPortal2ItemDefinition
 D typeinfo for CPortal2ItemSchema
 D typeinfo for CPortal2ItemSystem
 D typeinfo for CPortal2ResearchDataTracker
 D typeinfo for CPortalButtonTrigger
 D typeinfo for CPortalCollideableEnumerator
 D typeinfo for CPortalCredits
 D typeinfo for CPortalGameMovement
 D typeinfo for CPortalGameRules
 D typeinfo for CPortalGameRulesProxy
 D typeinfo for CPortalGameStats
 D typeinfo for CPortalInventoryManager
 D typeinfo for CPortalLaser
 D typeinfo for CPortalLaserTarget
 D typeinfo for CPortalMPGameRules
 D typeinfo for CPortalMPGameRulesProxy
 D typeinfo for CPortalMPStats
 D typeinfo for CPortalMPStatsProxy
 D typeinfo for CPortalPlayerAnimState
 D typeinfo for CPortalPlayerInventory
 D typeinfo for CPortalPlayerLocalData
 D typeinfo for CPortalPlayerLocalData::NetworkVar_m_PaintedPowerTimer
 D typeinfo for CPortalPlayerModelPrecacher
 D typeinfo for CPortalPlayerShared
 D typeinfo for CPortalRaceCheckpoint
 D typeinfo for CPortalRagdoll
 D typeinfo for CPortalServerDllPropPortalLocator
 D typeinfo for CPortalSimulator
 D typeinfo for CPortalSimulator::NetworkVar_m_InternalData
 D typeinfo for CPortalSimulatorEventCallbacks
 D typeinfo for CPortalStatsController
 D typeinfo for CPortalVortexEffectManager
 D typeinfo for CPortal_Base2D
 D typeinfo for CPortal_Base2D::NetworkVar_m_PortalSimulator
 D typeinfo for CPortal_Base2D_Shared
 D typeinfo for CPortal_CollisionEvent
 D typeinfo for CPortal_Player
 D typeinfo for CPortal_Player::NetworkVar_m_PortalLocal
 D typeinfo for CPortal_Player::NetworkVar_m_Shared
 D typeinfo for CPortal_Player::NetworkVar_m_StatsThisLevel
 D typeinfo for CPortal_PointPush
 D typeinfo for CPortal_UI_Controller
 D typeinfo for CPoseController
 D typeinfo for CPostFrameNavigationHook
 D typeinfo for CPostProcessController
 D typeinfo for CPostProcessSystem
 D typeinfo for CPrecacheHandler
 D typeinfo for CPrecacheOtherList
 D typeinfo for CPrecacheRegister
 D typeinfo for CPrecipitation
 D typeinfo for CPrecipitationBlocker
 D typeinfo for CPredictedViewModel
 D typeinfo for CProceduralGenerator
 D typeinfo for CProjectedDecal
 D typeinfo for CProjectedTractorBeamEntity
 D typeinfo for CProjectedWallEntity
 D typeinfo for CProjectorCollideList
 D typeinfo for CPropButton
 D typeinfo for CPropCombineBall
 D typeinfo for CPropData
 D typeinfo for CPropDoorRotating
 D typeinfo for CPropEnergyBall
 D typeinfo for CPropExplodingFutbol
 D typeinfo for CPropFloorBallButton
 D typeinfo for CPropFloorButton
 D typeinfo for CPropFloorCubeButton
 D typeinfo for CPropFutbolSocket
 D typeinfo for CPropFutbolSpawner
 D typeinfo for CPropGladosCore
 D typeinfo for CPropGlassFutbol
 D typeinfo for CPropIndicatorPanel
 D typeinfo for CPropLinkedPortalDoor
 D typeinfo for CPropMonsterBox
 D typeinfo for CPropPaintBomb
 D typeinfo for CPropPersonalitySphere
 D typeinfo for CPropPhysicsPaintable
 D typeinfo for CPropPortalStatsDisplay
 D typeinfo for CPropRocketTripwire
 D typeinfo for CPropTelescopicArm
 D typeinfo for CPropTestChamberDoor
 D typeinfo for CPropTicTacToePanel
 D typeinfo for CPropTractorBeamProjector
 D typeinfo for CPropUnderButton
 D typeinfo for CPropUnderFloorButton
 D typeinfo for CPropVehicle
 D typeinfo for CPropVehicleChoreoGeneric
 D typeinfo for CPropVehicleChoreoGeneric::NetworkVar_m_vehicleView
 D typeinfo for CPropVehicleDriveable
 D typeinfo for CPropVehicleViewController
 D typeinfo for CPropWallProjector
 D typeinfo for CPropWeightedCube
 D typeinfo for CProp_Hallucination
 D typeinfo for CProp_Mirror
 D typeinfo for CProp_Portal
 D typeinfo for CProportionalFloatProperty
 D typeinfo for CProportionalIntProperty
 D typeinfo for CProportionalXPosProperty
 D typeinfo for CProportionalYPosProperty
 D typeinfo for CPushBlockerEnum
 D typeinfo for CPushable
 D typeinfo for CRagGib
 D typeinfo for CRagdollBoogie
 D typeinfo for CRagdollConstraint
 D typeinfo for CRagdollLRURetirement
 D typeinfo for CRagdollMagnet
 D typeinfo for CRagdollManager
 D typeinfo for CRagdollProp
 D typeinfo for CRagdollPropAttached
 D typeinfo for CRallyPoint
 D typeinfo for CRecharge
 D typeinfo for CRecipientFilter
 D typeinfo for CRefCountServiceBase<true, CRefMT>
 D typeinfo for CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >
 D typeinfo for CRefCounted1<IRefCounted, CRefCountServiceBase<true, CRefMT> >
 D typeinfo for CRegistry
 D typeinfo for CReliableBroadcastRecipientFilter
 D typeinfo for CRemarkableEntityList
 D typeinfo for CRemoteBugHelper
 D typeinfo for CRespawnEntitiesFilter
 D typeinfo for CResponseQueueManager
 D typeinfo for CResponseRulesToEngineInterface
 D typeinfo for CResponseSystemSaveRestoreOps
 D typeinfo for CRestore
 D typeinfo for CRevertSaved
 D typeinfo for CRocket_Turret_Projectile
 D typeinfo for CRopeAnchor
 D typeinfo for CRopeKeyframe
 D typeinfo for CRotButton
 D typeinfo for CRotDoor
 D typeinfo for CRotorWashShooter
 D typeinfo for CRuleBrushEntity
 D typeinfo for CRuleEntity
 D typeinfo for CRulePointEntity
 D typeinfo for CSOEconClaimCode
 D typeinfo for CSOEconGameAccountClient
 D typeinfo for CSOEconItem
 D typeinfo for CSOEconItemAttribute
 D typeinfo for CSOEconItemEquipped
 D typeinfo for CSOEconItemPresetInstance
 D typeinfo for CSOItemCommunityMap
 D typeinfo for CSOItemCriteria
 D typeinfo for CSOItemCriteriaCondition
 D typeinfo for CSOItemRecipe
 D typeinfo for CSOLobbyInvite
 D typeinfo for CSOPartyInvite
 D typeinfo for CSOSelectedItemPreset
 D typeinfo for CSave
 D typeinfo for CSaveRestoreBlockSet
 D typeinfo for CSceneEntity
 D typeinfo for CSceneFindMarkFilter
 D typeinfo for CSceneFindNearestMarkFilter
 D typeinfo for CSceneListManager
 D typeinfo for CSceneManager
 D typeinfo for CScenePrecacheSystem
 D typeinfo for CSceneTokenProcessor
 D typeinfo for CScriptIntro
 D typeinfo for CScriptedTarget
 D typeinfo for CServerBenchmark
 D typeinfo for CServerDLLSharedAppSystems
 D typeinfo for CServerGameClients
 D typeinfo for CServerGameDLL
 D typeinfo for CServerGameEnts
 D typeinfo for CServerGameTags
 D typeinfo for CServerNetworkProperty
 D typeinfo for CServerOnlyEntity
 D typeinfo for CServerOnlyPointEntity
 D typeinfo for CServerRagdollTrigger
 D typeinfo for CServerTools
 D typeinfo for CShadowControl
 D typeinfo for CSharedUtlVectorBase<BlobInterpolationData_t, CPaintStream::SharedVar_m_sharedBlobData>
 D typeinfo for CSharedVarBase<CThreadFastMutex, CPaintStream::SharedVar_m_sharedBlobDataMutex>
 D typeinfo for CSharedVarBase<CUtlVector<BlobInterpolationData_t, CUtlMemory<BlobInterpolationData_t, int> >, CPaintStream::SharedVar_m_sharedBlobData>
 D typeinfo for CShower
 D typeinfo for CSimThinkManager
 D typeinfo for CSimplePhysicsBrush
 D typeinfo for CSimplePhysicsProp
 D typeinfo for CSingleDayHoliday
 D typeinfo for CSingleUserRecipientFilter
 D typeinfo for CSingleplayRules
 D typeinfo for CSkipKeys
 D typeinfo for CSkyCamera
 D typeinfo for CSkyboxSwapper
 D typeinfo for CSlideshowDisplay
 D typeinfo for CSmallTextEntry
 D typeinfo for CSmokeStack
 D typeinfo for CSolidSetDefaults
 D typeinfo for CSoundControllerImp
 D typeinfo for CSoundEmitterSystem
 D typeinfo for CSoundEnt
 D typeinfo for CSoundEnvelopeController
 D typeinfo for CSoundPatchSaveRestoreOps
 D typeinfo for CSoundscapeSystem
 D typeinfo for CSpatialEntity
 D typeinfo for CSpeaker
 D typeinfo for CSpotlightEnd
 D typeinfo for CSprayCan
 D typeinfo for CSprite
 D typeinfo for CSpriteOriented
 D typeinfo for CSpriteTrail
 D typeinfo for CStaticCollisionPolyhedronCache
 D typeinfo for CStatueProp
 D typeinfo for CStdStringSaveRestoreOps
 D typeinfo for CSteamJet
 D typeinfo for CSteamWorksGameStatsUploader
 D typeinfo for CStringPool
 D typeinfo for CStringProperty
 D typeinfo for CStringTableSaveRestoreOps
 D typeinfo for CStripWeapons
 D typeinfo for CSun
 D typeinfo for CSunlightShadowControl
 D typeinfo for CTEAntlionDust
 D typeinfo for CTEArmorRicochet
 D typeinfo for CTEBSPDecal
 D typeinfo for CTEBaseBeam
 D typeinfo for CTEBeamEntPoint
 D typeinfo for CTEBeamEnts
 D typeinfo for CTEBeamFollow
 D typeinfo for CTEBeamLaser
 D typeinfo for CTEBeamPoints
 D typeinfo for CTEBeamRing
 D typeinfo for CTEBeamRingPoint
 D typeinfo for CTEBeamSpline
 D typeinfo for CTEBloodSprite
 D typeinfo for CTEBloodStream
 D typeinfo for CTEBreakModel
 D typeinfo for CTEBubbleTrail
 D typeinfo for CTEBubbles
 D typeinfo for CTEClientProjectile
 D typeinfo for CTEDecal
 D typeinfo for CTEDust
 D typeinfo for CTEDynamicLight
 D typeinfo for CTEEffectDispatch
 D typeinfo for CTEEnergySplash
 D typeinfo for CTEExplosion
 D typeinfo for CTEFizz
 D typeinfo for CTEFootprintDecal
 D typeinfo for CTEFoundryHelpers
 D typeinfo for CTEGaussExplosion
 D typeinfo for CTEGlowSprite
 D typeinfo for CTEImpact
 D typeinfo for CTEKillPlayerAttachments
 D typeinfo for CTELargeFunnel
 D typeinfo for CTEMetalSparks
 D typeinfo for CTEMuzzleFlash
 D typeinfo for CTEParticleSystem
 D typeinfo for CTEPhysicsProp
 D typeinfo for CTEPlayerAnimEvent
 D typeinfo for CTEPlayerDecal
 D typeinfo for CTEProjectedDecal
 D typeinfo for CTEShatterSurface
 D typeinfo for CTEShowLine
 D typeinfo for CTESmoke
 D typeinfo for CTESparks
 D typeinfo for CTESprite
 D typeinfo for CTESpriteSpray
 D typeinfo for CTEWallPaintedEvent
 D typeinfo for CTEWorldDecal
 D typeinfo for CTankTargetChange
 D typeinfo for CTankTrainAI
 D typeinfo for CTargetCDAudioRep
 D typeinfo for CTargetChangeGravity
 D typeinfo for CTeam
 D typeinfo for CTeamSpawnPoint
 D typeinfo for CTeamVehicleSpawnPoint
 D typeinfo for CTeamplayRules
 D typeinfo for CTempEntTester
 D typeinfo for CTempEntsSystem
 D typeinfo for CTemplateNPCMaker
 D typeinfo for CTemplate_SaveRestoreBlockHandler
 D typeinfo for CTemplatesHook
 D typeinfo for CTesla
 D typeinfo for CTestEffect
 D typeinfo for CTestTraceline
 D typeinfo for CTest_ProxyToggle_Networkable
 D typeinfo for CTextureIdProperty
 D typeinfo for CTextureToggle
 D typeinfo for CThinkContextsSaveDataOps
 D typeinfo for CThrustController
 D typeinfo for CTimerEntity
 D typeinfo for CTonemapSystem
 D typeinfo for CTonemapTrigger
 D typeinfo for CToolFrameworkServer
 D typeinfo for CTraceFilter
 D typeinfo for CTraceFilterAgainstEntityList
 D typeinfo for CTraceFilterCollisionGroupDelta
 D typeinfo for CTraceFilterDoor
 D typeinfo for CTraceFilterEntitiesOnly
 D typeinfo for CTraceFilterEntity
 D typeinfo for CTraceFilterEntityIgnoreOther
 D typeinfo for CTraceFilterGroundEntities
 D typeinfo for CTraceFilterHitAll
 D typeinfo for CTraceFilterLOS
 D typeinfo for CTraceFilterMelee
 D typeinfo for CTraceFilterNav
 D typeinfo for CTraceFilterNoCombatCharacters
 D typeinfo for CTraceFilterNoNPCsOrPlayer
 D typeinfo for CTraceFilterNoPlayers
 D typeinfo for CTraceFilterOnlyHitThis
 D typeinfo for CTraceFilterOnlyNPCsAndPlayer
 D typeinfo for CTraceFilterPlayersNPCs
 D typeinfo for CTraceFilterPlayersNPCsPhysicsProps
 D typeinfo for CTraceFilterPushFinal
 D typeinfo for CTraceFilterPushMove
 D typeinfo for CTraceFilterSimple
 D typeinfo for CTraceFilterSimpleClassnameList
 D typeinfo for CTraceFilterSimpleList
 D typeinfo for CTraceFilterSkipNPCs
 D typeinfo for CTraceFilterSkipTwoEntities
 D typeinfo for CTraceFilterSkipTwoEntitiesAndTeammates
 D typeinfo for CTraceFilterTranslateClones
 D typeinfo for CTraceFilterValidForDecal
 D typeinfo for CTraceFilterWalkableEntities
 D typeinfo for CTraceFilterWorldAndPropsOnly
 D typeinfo for CTraceFilterWorldOnly
 D typeinfo for CTracePassFilter
 D typeinfo for CTraceTypeWrapper
 D typeinfo for CTractorBeam_Manager
 D typeinfo for CTransformedCollideable
 D typeinfo for CTriggerAutoCrouch
 D typeinfo for CTriggerBrush
 D typeinfo for CTriggerCDAudio
 D typeinfo for CTriggerCamera
 D typeinfo for CTriggerCameraMultiplayer
 D typeinfo for CTriggerCatapult
 D typeinfo for CTriggerGravity
 D typeinfo for CTriggerHierarchy
 D typeinfo for CTriggerHurt
 D typeinfo for CTriggerImpact
 D typeinfo for CTriggerLook
 D typeinfo for CTriggerMultiple
 D typeinfo for CTriggerOnce
 D typeinfo for CTriggerPaintCleanser
 D typeinfo for CTriggerPhysicsTrap
 D typeinfo for CTriggerPingDetector
 D typeinfo for CTriggerPlayerMovement
 D typeinfo for CTriggerPlayerTeam
 D typeinfo for CTriggerPortalCleanser
 D typeinfo for CTriggerProximity
 D typeinfo for CTriggerPush
 D typeinfo for CTriggerRPGFire
 D typeinfo for CTriggerRemove
 D typeinfo for CTriggerSave
 D typeinfo for CTriggerSoundscape
 D typeinfo for CTriggerTeleport
 D typeinfo for CTriggerToggleSave
 D typeinfo for CTriggerTraceEnum
 D typeinfo for CTriggerVPhysicsMotion
 D typeinfo for CTriggerViewProxy
 D typeinfo for CTriggerVolume
 D typeinfo for CTriggerWateryDeath
 D typeinfo for CTriggerWeaponDissolve
 D typeinfo for CTriggerWeaponStrip
 D typeinfo for CTriggerWind
 D typeinfo for CTrigger_TractorBeam
 D typeinfo for CTurretTipController
 D typeinfo for CUsePushFilter
 D typeinfo for CUserCmd
 D typeinfo for CUtlCStringConversion
 D typeinfo for CUtlCachedFileData<CModelSoundsCache>
 D typeinfo for CUtlCharConversion
 D typeinfo for CUtlMapDataOps<CUtlMap<string_t, CSimpleSimTimer, char>, 2, 10>
 D typeinfo for CUtlNoEscConversion
 D typeinfo for CUtlSymbolDataOps
 D typeinfo for CUtlVector<SCatapultData*, CUtlMemory<SCatapultData*, int> >
 D typeinfo for CUtlVector<SDeaths*, CUtlMemory<SDeaths*, int> >
 D typeinfo for CUtlVector<SFizzledData*, CUtlMemory<SFizzledData*, int> >
 D typeinfo for CUtlVector<SMPMapStats*, CUtlMemory<SMPMapStats*, int> >
 D typeinfo for CUtlVector<SPortalData*, CUtlMemory<SPortalData*, int> >
 D typeinfo for CUtlVector<SPuzzleData*, CUtlMemory<SPuzzleData*, int> >
 D typeinfo for CUtlVector<SStuckPlayers*, CUtlMemory<SStuckPlayers*, int> >
 D typeinfo for CUtlVector<STaunts*, CUtlMemory<STaunts*, int> >
 D typeinfo for CUtlVector<STractorBeamData*, CUtlMemory<STractorBeamData*, int> >
 D typeinfo for CUtlVectorDataOps<CAI_InterestTarget, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >, 12>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >, 13>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CHandle<CBaseCombatWeapon>, CUtlMemory<CHandle<CBaseCombatWeapon>, int> >, 13>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, 13>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >, 13>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >, 13>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >, 13>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >, 13>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >, 13>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >, 13>
 D typeinfo for CUtlVectorDataOps<CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<Vector, CUtlMemory<Vector, int> >, 3>
 D typeinfo for CUtlVectorDataOps<CUtlVector<float, CUtlMemory<float, int> >, 16>
 D typeinfo for CUtlVectorDataOps<CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>
 D typeinfo for CUtlVectorDataOps<CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<string_t, CUtlMemory<string_t, int> >, 2>
 D typeinfo for CUtlVectorDataOps<CUtlVector<template_t, CUtlMemory<template_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >, 10>
 D typeinfo for CVGuiScreen
 D typeinfo for CVScriptGameSystem
 D typeinfo for CVScriptSaveRestoreBlockHandler
 D typeinfo for CVarBitVecSaveRestoreOps<CBitVec<32> >
 D typeinfo for CVariantSaveDataOps
 D typeinfo for CVehicleChoreoViewParser
 D typeinfo for CVehicleSoundsParser
 D typeinfo for CVisibilityMonitor
 D typeinfo for CVoiceGameMgr
 D typeinfo for CVoiceGameMgrHelper
 D typeinfo for CWC_UpdateIgnoreList
 D typeinfo for CWaterBullet
 D typeinfo for CWaterLODControl
 D typeinfo for CWateryDeathLeech
 D typeinfo for CWeaponCubemap
 D typeinfo for CWeaponCycler
 D typeinfo for CWeaponItemBase
 D typeinfo for CWeaponLOSFilter
 D typeinfo for CWeaponList
 D typeinfo for CWeaponPaintGun
 D typeinfo for CWeaponPortalBase
 D typeinfo for CWeaponPortalgun
 D typeinfo for CWeaponPromoAntennaBall
 D typeinfo for CWeaponPromoAntennaEgg
 D typeinfo for CWeaponPromoHelmetBall
 D typeinfo for CWeaponPromoHelmetEgg
 D typeinfo for CWeeksBasedHoliday
 D typeinfo for CWeightButton
 D typeinfo for CWindowPane
 D typeinfo for CWorld
 D typeinfo for CWorldItem
 D typeinfo for CWreckage
 D typeinfo for CheckImage
 D typeinfo for CleanserVortexTraceEnum
 D typeinfo for ClientGamePrecachePrecache::CResourcePrecacher
 D typeinfo for ClientPrecachePrecache::CResourcePrecacher
 D typeinfo for ColumnButton
 D typeinfo for ConCommand
 D typeinfo for ConCommandBase
 D typeinfo for ConVar
 D typeinfo for CountdownTimer
 D typeinfo for DamageDatabase
 D typeinfo for DelayedSchemaData_GCDirectData
 D typeinfo for DelayedSchemaData_HTTPResponseData
 D typeinfo for Dragger
 D typeinfo for DustTrail
 D typeinfo for EffectsPrecachePrecache::CResourcePrecacher
 D typeinfo for EntityParticleTrailInfo_t
 D typeinfo for FileWeaponInfo_t
 D typeinfo for FilterDamageType
 D typeinfo for FilterTeam
 D typeinfo for FizzlerEffects
 D typeinfo for FizzlerMultiOriginSoundPlayer
 D typeinfo for GCSDK::CGCClient
 D typeinfo for GCSDK::CGCClientJob
 D typeinfo for GCSDK::CGCClientSharedObjectCache
 D typeinfo for GCSDK::CGCClientSharedObjectTypeCache
 D typeinfo for GCSDK::CGCMsg<MsgGCVerifyCacheSubscription_t>
 D typeinfo for GCSDK::CGCSOCacheSubscribedJob
 D typeinfo for GCSDK::CGCSOCacheSubscriptionCheck
 D typeinfo for GCSDK::CGCSOCacheUnsubscribedJob
 D typeinfo for GCSDK::CGCSOCreateJob
 D typeinfo for GCSDK::CGCSODestroyJob
 D typeinfo for GCSDK::CGCSOUpdateJob
 D typeinfo for GCSDK::CGCSOUpdateMultipleJob
 D typeinfo for GCSDK::CJob
 D typeinfo for GCSDK::CMsgBase_t<GCSDK::GCMsgHdrEx_t>
 D typeinfo for GCSDK::CProtoBufGCClientSendHandler
 D typeinfo for GCSDK::CProtoBufMsg<CMsgConVarValue>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgReplicateConVars>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgSOSingleObject>
 D typeinfo for GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgConVarValue>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgProtoBufHeader>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgReplicateConVars>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgRequestItemSchemaData>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscribed>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionCheck>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionRefresh>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheUnsubscribed>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgSOMultipleObjects>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgSOSingleObject>
 D typeinfo for GCSDK::CProtoBufMsgMemoryPool<CMsgUpdateItemSchema>
 D typeinfo for GCSDK::CProtoBufNetPacket
 D typeinfo for GCSDK::CRefCount
 D typeinfo for GCSDK::CSharedObject
 D typeinfo for GCSDK::CSharedObjectCache
 D typeinfo for GCSDK::CSharedObjectTypeCache
 D typeinfo for GCSDK::CStructNetPacket
 D typeinfo for GCSDK::IMsgNetPacket
 D typeinfo for GCSDK::IProtoBufMsg
 D typeinfo for GCSDK::IProtoBufMsg::IProtoBufSendHandler
 D typeinfo for GCSDK::IProtoBufMsgMemoryPool
 D typeinfo for GCSDK::ISharedObjectListener
 D typeinfo for HidingSpot
 D typeinfo for HitBoxDamagedEntity<PlayerPickupPaintPowerUser<CNPC_FloorTurret> >
 D typeinfo for IAI_BehaviorBridge
 D typeinfo for IAI_MovementSink
 D typeinfo for IAppSystem
 D typeinfo for IBaseCacheInfo
 D typeinfo for IBaseInterface
 D typeinfo for IBotController
 D typeinfo for IBotManager
 D typeinfo for IBreakableWithPropData
 D typeinfo for ICatcher
 D typeinfo for IChoreoEventCallback
 D typeinfo for IChoreoStringPool
 D typeinfo for ICollideable
 D typeinfo for ICommandCallback
 D typeinfo for ICommandCompletionCallback
 D typeinfo for IConCommandBaseAccessor
 D typeinfo for IConVar
 D typeinfo for ICountedPartitionEnumerator
 D typeinfo for ICurveDataAccessor
 D typeinfo for IDecalEmitterSystem
 D typeinfo for IDelayedSchemaData
 D typeinfo for IDrivableVehicle
 D typeinfo for IEconItemInterface
 D typeinfo for IEconTool
 D typeinfo for IEffects
 D typeinfo for IEntityDataInstantiator
 D typeinfo for IEntityEnumerator
 D typeinfo for IEntityFactory
 D typeinfo for IEntityFactoryDictionary
 D typeinfo for IEntityFindFilter
 D typeinfo for IEntityListener
 D typeinfo for IEntitySaveUtils
 D typeinfo for IEventRegisterCallback
 D typeinfo for IGCUser
 D typeinfo for IGameEventListener2
 D typeinfo for IGameMovement
 D typeinfo for IGameStatTracker
 D typeinfo for IGameStatTracker::CGameStatList<SCatapultData>
 D typeinfo for IGameStatTracker::CGameStatList<SDeaths>
 D typeinfo for IGameStatTracker::CGameStatList<SFizzledData>
 D typeinfo for IGameStatTracker::CGameStatList<SMPMapStats>
 D typeinfo for IGameStatTracker::CGameStatList<SPortalData>
 D typeinfo for IGameStatTracker::CGameStatList<SPuzzleData>
 D typeinfo for IGameStatTracker::CGameStatList<SStuckPlayers>
 D typeinfo for IGameStatTracker::CGameStatList<STaunts>
 D typeinfo for IGameStatTracker::CGameStatList<STractorBeamData>
 D typeinfo for IGameStatTracker::IStatContainer
 D typeinfo for IGameSystem
 D typeinfo for IGameSystemPerFrame
 D typeinfo for IHLTVDirector
 D typeinfo for IHandleEntity
 D typeinfo for IHasAttributes
 D typeinfo for IInventoryUpdateListener
 D typeinfo for IIsHolidayActive
 D typeinfo for IKeyValuesDumpContext
 D typeinfo for IKeyValuesDumpContextAsText
 D typeinfo for ILagCompensationManager
 D typeinfo for IMapEntityFilter
 D typeinfo for IMatchEventsSink
 D typeinfo for IMotionEvent
 D typeinfo for IMoveHelper
 D typeinfo for IMultiplayerPhysics
 D typeinfo for INPCInteractive
 D typeinfo for INPCPassengerCarrier
 D typeinfo for INavAvoidanceObstacle
 D typeinfo for INearestNodeFilter
 D typeinfo for INodeListFilter
 D typeinfo for INotify
 D typeinfo for IPaintPowerUser
 D typeinfo for IPaintStreamAutoList
 D typeinfo for IPaintableEntity
 D typeinfo for IParentPropInteraction
 D typeinfo for IParticleOperatorDefinition
 D typeinfo for IParticleSystemQuery
 D typeinfo for IPartitionEnumerator
 D typeinfo for IPartitionQueryCallback
 D typeinfo for IPhysSaveRestoreManager
 D typeinfo for IPhysicsCollisionEvent
 D typeinfo for IPhysicsCollisionSolver
 D typeinfo for IPhysicsConstraintEvent
 D typeinfo for IPhysicsGameTrace
 D typeinfo for IPhysicsObjectEvent
 D typeinfo for IPlayerInfo
 D typeinfo for IPlayerInfoManager
 D typeinfo for IPlayerPickupVPhysics
 D typeinfo for IPluginHelpersCheck
 D typeinfo for IPortalLaserAutoList
 D typeinfo for IPortalServerDllPropPortalLocator
 D typeinfo for IPositionWatcher
 D typeinfo for IPrecacheHandler
 D typeinfo for IPredictionSystem
 D typeinfo for IProjectedWallEntityAutoList
 D typeinfo for IPropWeightedCubeAutoList
 D typeinfo for IRecipientFilter
 D typeinfo for IRefCounted
 D typeinfo for IRegistry
 D typeinfo for IResourcePrecacher
 D typeinfo for IRestore
 D typeinfo for IRotorWashShooter
 D typeinfo for ISave
 D typeinfo for ISaveRestoreBlockHandler
 D typeinfo for ISaveRestoreBlockSet
 D typeinfo for ISaveRestoreOps
 D typeinfo for ISceneTokenProcessor
 D typeinfo for IScorer
 D typeinfo for IScriptInstanceHelper
 D typeinfo for IServerBenchmark
 D typeinfo for IServerDLLSharedAppSystems
 D typeinfo for IServerEntity
 D typeinfo for IServerGameClients
 D typeinfo for IServerGameDLL
 D typeinfo for IServerGameEnts
 D typeinfo for IServerGameTags
 D typeinfo for IServerNetworkable
 D typeinfo for IServerTools
 D typeinfo for IServerUnknown
 D typeinfo for IServerVehicle
 D typeinfo for ISharedVarBase
 D typeinfo for ITempEntsSystem
 D typeinfo for IToolFrameworkServer
 D typeinfo for ITraceFilter
 D typeinfo for ITriggerCatapultAutoList
 D typeinfo for ITriggerPortalCleanserAutoList
 D typeinfo for ITriggerTractorBeamAutoList
 D typeinfo for IVPhysicsKeyHandler
 D typeinfo for IVPhysicsWatcher
 D typeinfo for IVehicle
 D typeinfo for IVoiceGameMgrHelper
 D typeinfo for IWatcherCallback
 D typeinfo for IntervalTimer
 D typeinfo for MaterialIndexDataOpsProxy
 D typeinfo for MenuItemCheckImage
 D typeinfo for MovieExplosion
 D typeinfo for PS_InternalData_t
 D typeinfo for PS_InternalData_t::NetworkVar_Simulation
 D typeinfo for PS_SimulationData_t
 D typeinfo for PaintPowerInfo_t
 D typeinfo for PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >
 D typeinfo for PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >
 D typeinfo for PaintPowerUser<CPaintableEntity<CPhysicsProp> >
 D typeinfo for ParticleSmokeGrenade
 D typeinfo for PhysFrictionEffectPrecache::CResourcePrecacher
 D typeinfo for PlayerPickupPaintPowerUser<CNPC_FloorTurret>
 D typeinfo for PlayerPickupPaintPowerUser<CPhysicsProp>
 D typeinfo for PortalPlayerStatistics_t
 D typeinfo for PrecachePointCommentaryNodePrecache::CResourcePrecacher
 D typeinfo for ProjectedEntityAmbientSoundProxy
 D typeinfo for PropPaintPowerUser<CNPC_FloorTurret>
 D typeinfo for PropPaintPowerUser<CPhysicsProp>
 D typeinfo for RR::CApplyContextOperator
 D typeinfo for RR::CDecrementOperator
 D typeinfo for RR::CIncrementOperator
 D typeinfo for RR::CToggleOperator
 D typeinfo for RadioImage
 D typeinfo for ResponseRules::CResponseSystem
 D typeinfo for ResponseRules::IEngineEmulator
 D typeinfo for ResponseRules::IResponseFilter
 D typeinfo for ResponseRules::IResponseSystem
 D typeinfo for RocketTrail
 D typeinfo for SendProp
 D typeinfo for SmokeTrail
 D typeinfo for SporeExplosion
 D typeinfo for SporeTrail
 D typeinfo for WeaponResourcesPrecache::CResourcePrecacher
 D typeinfo for audioparams_t
 D typeinfo for entityflamePrecache::CResourcePrecacher
 D typeinfo for env_entity_freezingPrecache::CResourcePrecacher
 D typeinfo for fogparams_t
 D typeinfo for fogplayerparams_t
 D typeinfo for locksound_t
 D typeinfo for sky3dparams_t
 D typeinfo for sky3dparams_t::NetworkVar_fog
 D typeinfo for spraycanPrecache::CResourcePrecacher
 D typeinfo for vehicle_crashsound_t
 D typeinfo for vehicle_gear_t
 D typeinfo for vehiclesounds_t
 D typeinfo for vehicleview_t
 D typeinfo for vgui::AnimatingImagePanel
 D typeinfo for vgui::AnimationController
 D typeinfo for vgui::BaseTooltip
 D typeinfo for vgui::BuildGroup
 D typeinfo for vgui::BuildModeDialog
 D typeinfo for vgui::Button
 D typeinfo for vgui::CBitmapImagePanel
 D typeinfo for vgui::CTreeViewListControl
 D typeinfo for vgui::CheckButton
 D typeinfo for vgui::CircularProgressBar
 D typeinfo for vgui::ClickPanel
 D typeinfo for vgui::ComboBox
 D typeinfo for vgui::ComboBoxButton
 D typeinfo for vgui::ContinuousProgressBar
 D typeinfo for vgui::CvarToggleCheckButton<ConVarRef>
 D typeinfo for vgui::Divider
 D typeinfo for vgui::EditablePanel
 D typeinfo for vgui::ExpandButton
 D typeinfo for vgui::FocusNavGroup
 D typeinfo for vgui::Frame
 D typeinfo for vgui::FrameButton
 D typeinfo for vgui::FrameSystemButton
 D typeinfo for vgui::GraphPanel
 D typeinfo for vgui::IClientPanel
 D typeinfo for vgui::IImage
 D typeinfo for vgui::IPanelAnimationPropertyConverter
 D typeinfo for vgui::Image
 D typeinfo for vgui::ImagePanel
 D typeinfo for vgui::Label
 D typeinfo for vgui::ListPanel
 D typeinfo for vgui::ListViewItem
 D typeinfo for vgui::ListViewPanel
 D typeinfo for vgui::Menu
 D typeinfo for vgui::MenuBar
 D typeinfo for vgui::MenuButton
 D typeinfo for vgui::MenuItem
 D typeinfo for vgui::MenuSeparator
 D typeinfo for vgui::MessageBox
 D typeinfo for vgui::Panel
 D typeinfo for vgui::PanelListPanel
 D typeinfo for vgui::ProgressBar
 D typeinfo for vgui::RadioButton
 D typeinfo for vgui::RichText
 D typeinfo for vgui::RichTextInterior
 D typeinfo for vgui::ScalableImagePanel
 D typeinfo for vgui::ScrollBar
 D typeinfo for vgui::ScrollBarSlider
 D typeinfo for vgui::TextEntry
 D typeinfo for vgui::TextImage
 D typeinfo for vgui::TextTooltip
 D typeinfo for vgui::ToggleButton
 D typeinfo for vgui::TreeNode
 D typeinfo for vgui::TreeNodeDropPanel
 D typeinfo for vgui::TreeNodeImage
 D typeinfo for vgui::TreeNodeText
 D typeinfo for vgui::TreeView
 D typeinfo for vgui::TreeViewSubPanel
 D typeinfo for vgui::URLLabel
 D typeinfo for vgui_screenPrecache::CResourcePrecacher
 D typeinfo for weapon_portalgunPrecache::CResourcePrecacher
 D typeinfo for weapon_promo_antenna_ballPrecache::CResourcePrecacher
 D typeinfo for weapon_promo_antenna_eggPrecache::CResourcePrecacher
 D typeinfo for weapon_promo_helmet_ballPrecache::CResourcePrecacher
 D typeinfo for weapon_promo_helmet_eggPrecache::CResourcePrecacher
 D typeinfo for wearable_itemPrecache::CResourcePrecacher
 D usermessages
 D variantFuncs
 D variant_t::Entity() const::hNull
 D variant_t::m_SaveBool
 D variant_t::m_SaveColor
 D variant_t::m_SaveEHandle
 D variant_t::m_SaveFloat
 D variant_t::m_SaveInt
 D variant_t::m_SavePositionVector
 D variant_t::m_SaveString
 D variant_t::m_SaveVector
 D vehicle_crashsound_t::m_DataMap
 D vehicle_gear_t::m_DataMap
 D vehiclesound_parsenames
 D vehiclesounds_t::m_DataMap
 D vehicleview_t::m_DataMap
 D vgui::AnimatingImagePanel::ChainToAnimationMap()::chained
 D vgui::AnimatingImagePanel::ChainToMap()::chained
 D vgui::AnimatingImagePanel::GetKBMap()::s_pMap
 D vgui::AnimatingImagePanel::GetMessageMap()::s_pMap
 D vgui::AnimatingImagePanel::KB_ChainToMap()::chained
 D vgui::AnimationController::ChainToAnimationMap()::chained
 D vgui::AnimationController::ChainToMap()::chained
 D vgui::AnimationController::GetKBMap()::s_pMap
 D vgui::AnimationController::GetMessageMap()::s_pMap
 D vgui::AnimationController::KB_ChainToMap()::chained
 D vgui::BuildModeDialog::ChainToAnimationMap()::chained
 D vgui::BuildModeDialog::ChainToMap()::chained
 D vgui::BuildModeDialog::GetKBMap()::s_pMap
 D vgui::BuildModeDialog::GetMessageMap()::s_pMap
 D vgui::BuildModeDialog::KB_ChainToMap()::chained
 D vgui::BuildModeDialog::PanelMessageFunc_ApplyDataToControls::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_DoCopy::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_DoPaste::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_DoUndo::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_EnableSaveButton::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnChangeChild::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnCreateNewControl::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnDeletePanel::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnPanelMoved::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnReloadLocalization::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnSetClipboardText::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnShowNewControlMenu::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnTextKillFocus::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_SetActiveControl::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_ShutdownBuildMode::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_StoreUndoSettings::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_UpdateControlData::InitVar()::bAdded
 D vgui::Button::ChainToAnimationMap()::chained
 D vgui::Button::ChainToMap()::chained
 D vgui::Button::GetKBMap()::s_pMap
 D vgui::Button::GetMessageMap()::s_pMap
 D vgui::Button::KB_ChainToMap()::chained
 D vgui::Button::PanelMessageFunc_DoClick::InitVar()::bAdded
 D vgui::Button::PanelMessageFunc_OnHotkey::InitVar()::bAdded
 D vgui::Button::PanelMessageFunc_OnSetState::InitVar()::bAdded
 D vgui::Button::PanelMessageFunc_SetAsCurrentDefaultButton::InitVar()::bAdded
 D vgui::Button::PanelMessageFunc_SetAsDefaultButton::InitVar()::bAdded
 D vgui::CTreeViewListControl::ChainToAnimationMap()::chained
 D vgui::CTreeViewListControl::ChainToMap()::chained
 D vgui::CTreeViewListControl::GetKBMap()::s_pMap
 D vgui::CTreeViewListControl::GetMessageMap()::s_pMap
 D vgui::CTreeViewListControl::KB_ChainToMap()::chained
 D vgui::CheckButton::ChainToAnimationMap()::chained
 D vgui::CheckButton::ChainToMap()::chained
 D vgui::CheckButton::GetKBMap()::s_pMap
 D vgui::CheckButton::GetMessageMap()::s_pMap
 D vgui::CheckButton::KB_ChainToMap()::chained
 D vgui::CheckButton::PanelMessageFunc_OnCheckButtonChecked::InitVar()::bAdded
 D vgui::CircularProgressBar::ChainToAnimationMap()::chained
 D vgui::CircularProgressBar::ChainToMap()::chained
 D vgui::CircularProgressBar::GetKBMap()::s_pMap
 D vgui::CircularProgressBar::GetMessageMap()::s_pMap
 D vgui::CircularProgressBar::KB_ChainToMap()::chained
 D vgui::ClickPanel::ChainToAnimationMap()::chained
 D vgui::ClickPanel::ChainToMap()::chained
 D vgui::ClickPanel::GetKBMap()::s_pMap
 D vgui::ClickPanel::GetMessageMap()::s_pMap
 D vgui::ClickPanel::KB_ChainToMap()::chained
 D vgui::ComboBox::ChainToAnimationMap()::chained
 D vgui::ComboBox::ChainToMap()::chained
 D vgui::ComboBox::GetKBMap()::s_pMap
 D vgui::ComboBox::GetMessageMap()::s_pMap
 D vgui::ComboBox::KB_ChainToMap()::chained
 D vgui::ComboBox::PanelMessageFunc_ActivateItem::InitVar()::bAdded
 D vgui::ComboBox::PanelMessageFunc_OnMenuClose::InitVar()::bAdded
 D vgui::ComboBox::PanelMessageFunc_OnMenuItemSelected::InitVar()::bAdded
 D vgui::ComboBox::PanelMessageFunc_OnSetText::InitVar()::bAdded
 D vgui::ContinuousProgressBar::ChainToAnimationMap()::chained
 D vgui::ContinuousProgressBar::ChainToMap()::chained
 D vgui::ContinuousProgressBar::GetKBMap()::s_pMap
 D vgui::ContinuousProgressBar::GetMessageMap()::s_pMap
 D vgui::ContinuousProgressBar::KB_ChainToMap()::chained
 D vgui::CvarToggleCheckButton<ConVarRef>::ChainToAnimationMap()::chained
 D vgui::CvarToggleCheckButton<ConVarRef>::ChainToMap()::chained
 D vgui::CvarToggleCheckButton<ConVarRef>::GetKBMap()::s_pMap
 D vgui::CvarToggleCheckButton<ConVarRef>::GetMessageMap()::s_pMap
 D vgui::CvarToggleCheckButton<ConVarRef>::KB_ChainToMap()::chained
 D vgui::CvarToggleCheckButton<ConVarRef>::PanelMessageFunc_OnApplyChanges::InitVar()::bAdded
 D vgui::CvarToggleCheckButton<ConVarRef>::PanelMessageFunc_OnButtonChecked::InitVar()::bAdded
 D vgui::Divider::ChainToAnimationMap()::chained
 D vgui::Divider::ChainToMap()::chained
 D vgui::Divider::GetKBMap()::s_pMap
 D vgui::Divider::GetMessageMap()::s_pMap
 D vgui::Divider::KB_ChainToMap()::chained
 D vgui::EditablePanel::ChainToAnimationMap()::chained
 D vgui::EditablePanel::ChainToMap()::chained
 D vgui::EditablePanel::GetKBMap()::s_pMap
 D vgui::EditablePanel::GetMessageMap()::s_pMap
 D vgui::EditablePanel::KB_ChainToMap()::chained
 D vgui::EditablePanel::PanelMessageFunc_OnCurrentDefaultButtonSet::InitVar()::bAdded
 D vgui::EditablePanel::PanelMessageFunc_OnDefaultButtonSet::InitVar()::bAdded
 D vgui::EditablePanel::PanelMessageFunc_OnFindDefaultButton::InitVar()::bAdded
 D vgui::ExpandButton::ChainToAnimationMap()::chained
 D vgui::ExpandButton::ChainToMap()::chained
 D vgui::ExpandButton::GetKBMap()::s_pMap
 D vgui::ExpandButton::GetMessageMap()::s_pMap
 D vgui::ExpandButton::KB_ChainToMap()::chained
 D vgui::ExpandButton::PanelMessageFunc_OnExpanded::InitVar()::bAdded
 D vgui::Frame::ChainToAnimationMap()::chained
 D vgui::Frame::ChainToMap()::chained
 D vgui::Frame::GetKBMap()::s_pMap
 D vgui::Frame::GetMessageMap()::s_pMap
 D vgui::Frame::KB_ChainToMap()::chained
 D vgui::Frame::PanelAnimationVar_m_iTitleTextInsetXOverride::InitVar()::bAdded
 D vgui::Frame::PanelAnimationVar_m_iTitleTextInsetYOverride::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_Close::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_CloseModal::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_InternalFlashWindow::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_InternalSetTitle::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_OnCloseFrameButtonPressed::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_OnDialogVariablesChanged::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_OnMinimize::InitVar()::bAdded
 D vgui::FrameSystemButton::ChainToAnimationMap()::chained
 D vgui::FrameSystemButton::ChainToMap()::chained
 D vgui::FrameSystemButton::GetKBMap()::s_pMap
 D vgui::FrameSystemButton::GetMessageMap()::s_pMap
 D vgui::FrameSystemButton::KB_ChainToMap()::chained
 D vgui::GraphPanel::ChainToAnimationMap()::chained
 D vgui::GraphPanel::ChainToMap()::chained
 D vgui::GraphPanel::GetKBMap()::s_pMap
 D vgui::GraphPanel::GetMessageMap()::s_pMap
 D vgui::GraphPanel::KB_ChainToMap()::chained
 D vgui::ImagePanel::ChainToAnimationMap()::chained
 D vgui::ImagePanel::ChainToMap()::chained
 D vgui::ImagePanel::GetKBMap()::s_pMap
 D vgui::ImagePanel::GetMessageMap()::s_pMap
 D vgui::ImagePanel::KB_ChainToMap()::chained
 D vgui::Label::ChainToAnimationMap()::chained
 D vgui::Label::ChainToMap()::chained
 D vgui::Label::GetKBMap()::s_pMap
 D vgui::Label::GetMessageMap()::s_pMap
 D vgui::Label::KB_ChainToMap()::chained
 D vgui::Label::PanelMessageFunc_OnDialogVariablesChanged::InitVar()::bAdded
 D vgui::Label::PanelMessageFunc_OnHotkeyPressed::InitVar()::bAdded
 D vgui::Label::PanelMessageFunc_OnSetText::InitVar()::bAdded
 D vgui::ListPanel::ChainToAnimationMap()::chained
 D vgui::ListPanel::ChainToMap()::chained
 D vgui::ListPanel::GetKBMap()::s_pMap
 D vgui::ListPanel::GetMessageMap()::s_pMap
 D vgui::ListPanel::KB_ChainToMap()::chained
 D vgui::ListPanel::PanelMessageFunc_OnColumnResized::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_OnSetSortColumn::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_OnToggleColumnVisible::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_OpenColumnChoiceMenu::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_ResizeColumnToContents::InitVar()::bAdded
 D vgui::ListViewItem::ChainToAnimationMap()::chained
 D vgui::ListViewItem::ChainToMap()::chained
 D vgui::ListViewItem::GetKBMap()::s_pMap
 D vgui::ListViewItem::GetMessageMap()::s_pMap
 D vgui::ListViewItem::KB_ChainToMap()::chained
 D vgui::ListViewPanel::ChainToAnimationMap()::chained
 D vgui::ListViewPanel::ChainToMap()::chained
 D vgui::ListViewPanel::GetKBMap()::s_pMap
 D vgui::ListViewPanel::GetMessageMap()::s_pMap
 D vgui::ListViewPanel::KB_ChainToMap()::chained
 D vgui::ListViewPanel::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::Menu::ChainToAnimationMap()::chained
 D vgui::Menu::ChainToMap()::chained
 D vgui::Menu::GetKBMap()::s_pMap
 D vgui::Menu::GetMessageMap()::s_pMap
 D vgui::Menu::KB_ChainToMap()::chained
 D vgui::Menu::PanelMessageFunc_OnCursorEnteredMenuItem::InitVar()::bAdded
 D vgui::Menu::PanelMessageFunc_OnCursorExitedMenuItem::InitVar()::bAdded
 D vgui::Menu::PanelMessageFunc_OnKeyModeSet::InitVar()::bAdded
 D vgui::Menu::PanelMessageFunc_OnMenuItemSelected::InitVar()::bAdded
 D vgui::Menu::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::MenuBar::ChainToAnimationMap()::chained
 D vgui::MenuBar::ChainToMap()::chained
 D vgui::MenuBar::GetKBMap()::s_pMap
 D vgui::MenuBar::GetMessageMap()::s_pMap
 D vgui::MenuBar::KB_ChainToMap()::chained
 D vgui::MenuBar::PanelMessageFunc_OnCursorEnteredMenuButton::InitVar()::bAdded
 D vgui::MenuBar::PanelMessageFunc_OnMenuClose::InitVar()::bAdded
 D vgui::MenuButton::ChainToAnimationMap()::chained
 D vgui::MenuButton::ChainToMap()::chained
 D vgui::MenuButton::GetKBMap()::s_pMap
 D vgui::MenuButton::GetMessageMap()::s_pMap
 D vgui::MenuButton::KB_ChainToMap()::chained
 D vgui::MenuButton::PanelMessageFunc_OnKillFocus::InitVar()::bAdded
 D vgui::MenuButton::PanelMessageFunc_OnMenuClose::InitVar()::bAdded
 D vgui::MenuItem::ChainToAnimationMap()::chained
 D vgui::MenuItem::ChainToMap()::chained
 D vgui::MenuItem::GetKBMap()::s_pMap
 D vgui::MenuItem::GetMessageMap()::s_pMap
 D vgui::MenuItem::KB_ChainToMap()::chained
 D vgui::MenuItem::PanelMessageFunc_ArmItem::InitVar()::bAdded
 D vgui::MenuItem::PanelMessageFunc_DisarmItem::InitVar()::bAdded
 D vgui::MenuItem::PanelMessageFunc_OnKeyModeSet::InitVar()::bAdded
 D vgui::MenuItem::PanelMessageFunc_OnKillFocus::InitVar()::bAdded
 D vgui::MenuSeparator::ChainToAnimationMap()::chained
 D vgui::MenuSeparator::ChainToMap()::chained
 D vgui::MenuSeparator::GetKBMap()::s_pMap
 D vgui::MenuSeparator::GetMessageMap()::s_pMap
 D vgui::MenuSeparator::KB_ChainToMap()::chained
 D vgui::MessageBox::ChainToAnimationMap()::chained
 D vgui::MessageBox::ChainToMap()::chained
 D vgui::MessageBox::GetKBMap()::s_pMap
 D vgui::MessageBox::GetMessageMap()::s_pMap
 D vgui::MessageBox::KB_ChainToMap()::chained
 D vgui::MessageBox::PanelMessageFunc_OnShutdownRequest::InitVar()::bAdded
 D vgui::Panel::ChainToAnimationMap()::chained
 D vgui::Panel::ChainToMap()::chained
 D vgui::Panel::GetKBMap()::s_pMap
 D vgui::Panel::GetMessageMap()::s_pMap
 D vgui::Panel::KB_ChainToMap()::chained
 D vgui::Panel::PanelAnimationVar_m_flAlpha::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nBgTextureId1::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nBgTextureId2::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nBgTextureId3::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nBgTextureId4::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nPaintBackgroundType::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalCursorEntered::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalCursorExited::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalCursorMoved::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalInvalidateLayout::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyCodePressed::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyCodeReleased::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyCodeTyped::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyFocusTicked::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyTyped::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseDoublePressed::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseFocusTicked::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMousePressed::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseReleased::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseTriplePressed::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseWheeled::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMove::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnCommand::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnCursorMoved::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnDelete::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnKillFocus::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnMouseCaptureLost::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnMouseFocusTicked::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnNavigateFrom::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnNavigateTo::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnRequestFocus::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnScreenSizeChanged::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnSetFocus::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_Repaint::InitVar()::bAdded
 D vgui::Panel::m_MessageMap
 D vgui::Panel::m_PanelMap
 D vgui::PanelListPanel::ChainToAnimationMap()::chained
 D vgui::PanelListPanel::ChainToMap()::chained
 D vgui::PanelListPanel::GetKBMap()::s_pMap
 D vgui::PanelListPanel::GetMessageMap()::s_pMap
 D vgui::PanelListPanel::KB_ChainToMap()::chained
 D vgui::PanelListPanel::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::ProgressBar::ChainToAnimationMap()::chained
 D vgui::ProgressBar::ChainToMap()::chained
 D vgui::ProgressBar::GetKBMap()::s_pMap
 D vgui::ProgressBar::GetMessageMap()::s_pMap
 D vgui::ProgressBar::KB_ChainToMap()::chained
 D vgui::ProgressBar::PanelMessageFunc_OnDialogVariablesChanged::InitVar()::bAdded
 D vgui::ProgressBar::PanelMessageFunc_SetProgress::InitVar()::bAdded
 D vgui::RadioButton::ChainToAnimationMap()::chained
 D vgui::RadioButton::ChainToMap()::chained
 D vgui::RadioButton::GetKBMap()::s_pMap
 D vgui::RadioButton::GetMessageMap()::s_pMap
 D vgui::RadioButton::KB_ChainToMap()::chained
 D vgui::RadioButton::PanelMessageFunc_OnRadioButtonChecked::InitVar()::bAdded
 D vgui::RichText::ChainToAnimationMap()::chained
 D vgui::RichText::ChainToMap()::chained
 D vgui::RichText::GetKBMap()::s_pMap
 D vgui::RichText::GetMessageMap()::s_pMap
 D vgui::RichText::KB_ChainToMap()::chained
 D vgui::RichText::PanelMessageFunc_CopySelected::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_CutSelected::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_MoveScrollBar::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_MoveScrollBarDirect::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_OnClickPanel::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_OnSetText::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::RichTextInterior::ChainToAnimationMap()::chained
 D vgui::RichTextInterior::ChainToMap()::chained
 D vgui::RichTextInterior::GetKBMap()::s_pMap
 D vgui::RichTextInterior::GetMessageMap()::s_pMap
 D vgui::RichTextInterior::KB_ChainToMap()::chained
 D vgui::ScalableImagePanel::ChainToAnimationMap()::chained
 D vgui::ScalableImagePanel::ChainToMap()::chained
 D vgui::ScalableImagePanel::GetKBMap()::s_pMap
 D vgui::ScalableImagePanel::GetMessageMap()::s_pMap
 D vgui::ScalableImagePanel::KB_ChainToMap()::chained
 D vgui::ScrollBar::ChainToAnimationMap()::chained
 D vgui::ScrollBar::ChainToMap()::chained
 D vgui::ScrollBar::GetKBMap()::s_pMap
 D vgui::ScrollBar::GetMessageMap()::s_pMap
 D vgui::ScrollBar::KB_ChainToMap()::chained
 D vgui::ScrollBar::PanelAnimationVar_m_bAutoHideButtons::InitVar()::bAdded
 D vgui::ScrollBar::PanelAnimationVar_m_bAutoHideSelf::InitVar()::bAdded
 D vgui::ScrollBar::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::ScrollBar::PanelMessageFunc_OnSliderReleased::InitVar()::bAdded
 D vgui::ScrollBarSlider::ChainToAnimationMap()::chained
 D vgui::ScrollBarSlider::ChainToMap()::chained
 D vgui::ScrollBarSlider::GetKBMap()::s_pMap
 D vgui::ScrollBarSlider::GetMessageMap()::s_pMap
 D vgui::ScrollBarSlider::KB_ChainToMap()::chained
 D vgui::Segments
 D vgui::TextEntry::ChainToAnimationMap()::chained
 D vgui::TextEntry::ChainToMap()::chained
 D vgui::TextEntry::GetKBMap()::s_pMap
 D vgui::TextEntry::GetMessageMap()::s_pMap
 D vgui::TextEntry::KB_ChainToMap()::chained
 D vgui::TextEntry::PanelMessageFunc_CompositionString::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_ConversionModeChanged::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_CopySelected::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_CutSelected::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_HideIMECandidates::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_LanguageChanged::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_OnSetState::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_OnSetText::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_Paste::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_SentenceModeChanged::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_ShowIMECandidates::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_UpdateIMECandidates::InitVar()::bAdded
 D vgui::ToggleButton::ChainToAnimationMap()::chained
 D vgui::ToggleButton::ChainToMap()::chained
 D vgui::ToggleButton::GetKBMap()::s_pMap
 D vgui::ToggleButton::GetMessageMap()::s_pMap
 D vgui::ToggleButton::KB_ChainToMap()::chained
 D vgui::TreeNode::ChainToAnimationMap()::chained
 D vgui::TreeNode::ChainToMap()::chained
 D vgui::TreeNode::GetKBMap()::s_pMap
 D vgui::TreeNode::GetMessageMap()::s_pMap
 D vgui::TreeNode::KB_ChainToMap()::chained
 D vgui::TreeNode::PanelMessageFunc_OnLabelChanged::InitVar()::bAdded
 D vgui::TreeNodeDropPanel::ChainToAnimationMap()::chained
 D vgui::TreeNodeDropPanel::ChainToMap()::chained
 D vgui::TreeNodeDropPanel::GetKBMap()::s_pMap
 D vgui::TreeNodeDropPanel::GetMessageMap()::s_pMap
 D vgui::TreeNodeDropPanel::KB_ChainToMap()::chained
 D vgui::TreeNodeText::ChainToAnimationMap()::chained
 D vgui::TreeNodeText::ChainToMap()::chained
 D vgui::TreeNodeText::GetKBMap()::s_pMap
 D vgui::TreeNodeText::GetMessageMap()::s_pMap
 D vgui::TreeNodeText::KB_ChainToMap()::chained
 D vgui::TreeNodeText::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D vgui::TreeView::ChainToAnimationMap()::chained
 D vgui::TreeView::ChainToMap()::chained
 D vgui::TreeView::GetKBMap()::s_pMap
 D vgui::TreeView::GetMessageMap()::s_pMap
 D vgui::TreeView::KB_ChainToMap()::chained
 D vgui::TreeView::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::URLLabel::ChainToAnimationMap()::chained
 D vgui::URLLabel::ChainToMap()::chained
 D vgui::URLLabel::GetKBMap()::s_pMap
 D vgui::URLLabel::GetMessageMap()::s_pMap
 D vgui::URLLabel::KB_ChainToMap()::chained
 D vtable for AR2Explosion
 D vtable for BlobTraceEnum
 D vtable for CAISound
 D vtable for CAI_ActBusyBehavior
 D vtable for CAI_ActBusyGoal
 D vtable for CAI_ActBusyQueueGoal
 D vtable for CAI_AllySpeechManager
 D vtable for CAI_AssaultGoal
 D vtable for CAI_BaseActor
 D vtable for CAI_BaseNPC
 D vtable for CAI_BasePhysicsFlyingBot
 D vtable for CAI_BattleLine
 D vtable for CAI_BehaviorBase
 D vtable for CAI_BlendedMotor
 D vtable for CAI_ChangeHintGroup
 D vtable for CAI_ChangeTarget
 D vtable for CAI_DynamicLink
 D vtable for CAI_DynamicLinkController
 D vtable for CAI_EnemiesListSaveRestoreOps
 D vtable for CAI_Expresser
 D vtable for CAI_ExpresserWithFollowup
 D vtable for CAI_FightFromCoverGoal
 D vtable for CAI_FollowGoal
 D vtable for CAI_FreePass
 D vtable for CAI_GoalEntity
 D vtable for CAI_Hint
 D vtable for CAI_LeadGoal
 D vtable for CAI_LeadGoal_Weapon
 D vtable for CAI_LocalNavigator
 D vtable for CAI_Motor
 D vtable for CAI_MoveAndShootOverlay
 D vtable for CAI_MoveProbe
 D vtable for CAI_NavInHintGroupFilter
 D vtable for CAI_Navigator
 D vtable for CAI_Network
 D vtable for CAI_NetworkManager
 D vtable for CAI_Pathfinder
 D vtable for CAI_PlayerAlly
 D vtable for CAI_RadialLinkController
 D vtable for CAI_Relationship
 D vtable for CAI_SaveRestoreBlockHandler
 D vtable for CAI_ScriptConditions
 D vtable for CAI_ScriptedSchedule
 D vtable for CAI_ScriptedSentence
 D vtable for CAI_ScriptedSequence
 D vtable for CAI_SensedObjectsManager
 D vtable for CAI_Senses
 D vtable for CAI_SpeechFilter
 D vtable for CAI_StandoffGoal
 D vtable for CAI_SystemHook
 D vtable for CAI_TacticalServices
 D vtable for CAI_TestHull
 D vtable for CActBusyAnimData
 D vtable for CActivityDataOps
 D vtable for CAimTargetManager
 D vtable for CAmbientGeneric
 D vtable for CAmmoDef
 D vtable for CAnchorList
 D vtable for CAreaPortal
 D vtable for CAssaultPoint
 D vtable for CAttributeContainer
 D vtable for CAttributeContainer::NetworkVar_m_Item
 D vtable for CAttributeList
 D vtable for CAttributeManager
 D vtable for CAutoGameSystem
 D vtable for CAutoGameSystemPerFrame
 D vtable for CBaseAnimating
 D vtable for CBaseAnimatingOverlay
 D vtable for CBaseAnimatingProjectile
 D vtable for CBaseButton
 D vtable for CBaseCombatCharacter
 D vtable for CBaseCombatWeapon
 D vtable for CBaseDMStart
 D vtable for CBaseDoor
 D vtable for CBaseEntity
 D vtable for CBaseEntity::NetworkVar_m_Collision
 D vtable for CBaseEntityClassList
 D vtable for CBaseEntityList
 D vtable for CBaseEntityScriptInstanceHelper
 D vtable for CBaseFilter
 D vtable for CBaseFire
 D vtable for CBaseFlex
 D vtable for CBaseGameStats
 D vtable for CBaseGameStats_Driver
 D vtable for CBaseGrenade
 D vtable for CBaseGrenadeConcussion
 D vtable for CBaseGrenadeContact
 D vtable for CBaseGrenadeTimed
 D vtable for CBaseHLCombatWeapon
 D vtable for CBaseMoveBehavior
 D vtable for CBaseMultiplayerPlayer
 D vtable for CBaseNPCMaker
 D vtable for CBasePaintBlob
 D vtable for CBaseParticleEntity
 D vtable for CBasePlatTrain
 D vtable for CBasePlayer
 D vtable for CBasePlayer::NetworkVar_m_Local
 D vtable for CBasePlayer::NetworkVar_m_PlayerFog
 D vtable for CBasePlayer::NetworkVar_pl
 D vtable for CBasePortalCombatWeapon
 D vtable for CBaseProjectedEntity
 D vtable for CBaseProjectile
 D vtable for CBaseProjector
 D vtable for CBasePropDoor
 D vtable for CBaseServerVehicle
 D vtable for CBaseSpriteProjectile
 D vtable for CBaseTempEntity
 D vtable for CBaseToggle
 D vtable for CBaseTrigger
 D vtable for CBaseVPhysicsTrigger
 D vtable for CBaseViewModel
 D vtable for CBeam
 D vtable for CBeamSpotlight
 D vtable for CBlendingCycler
 D vtable for CBlood
 D vtable for CBloodSplat
 D vtable for CBoneFollower
 D vtable for CBoolProperty
 D vtable for CBotCmd
 D vtable for CBreakModelsPrecached
 D vtable for CBreakParser
 D vtable for CBreakable
 D vtable for CBreakableProp
 D vtable for CBreakableSurface
 D vtable for CBroadcastRecipientFilter
 D vtable for CBrushEntityList
 D vtable for CBubbling
 D vtable for CBuildModeNavCombo
 D vtable for CBulletsTraceFilter
 D vtable for CBullseyeList
 D vtable for CCallResult<CGCUpdateItemSchema, HTTPRequestCompleted_t>
 D vtable for CCallback<CGCServerSystem, SteamServersConnected_t, true>
 D vtable for CCallback<CSteamWorksGameStatsUploader, GameStatsSessionClosed_t, true>
 D vtable for CCallback<CSteamWorksGameStatsUploader, GameStatsSessionIssued_t, true>
 D vtable for CCallback<GCSDK::CGCClient, GCMessageAvailable_t, false>
 D vtable for CCallbackImpl<12>
 D vtable for CCallbackImpl<16>
 D vtable for CCallbackImpl<1>
 D vtable for CCallbackImpl<4>
 D vtable for CChallengeModeEndNode
 D vtable for CChallengeModeEndNodeKeys
 D vtable for CChangeLevel
 D vtable for CCheckClient
 D vtable for CChildOperatorDefinition
 D vtable for CChoreoEvent
 D vtable for CChoreoGenericServerVehicle
 D vtable for CChoreoScene
 D vtable for CChoreoStringPool
 D vtable for CCitadelEnergyCore
 D vtable for CCleanupDefaultRelationShips
 D vtable for CCollisionEvent
 D vtable for CCollisionProperty
 D vtable for CColorCorrection
 D vtable for CColorCorrectionSystem
 D vtable for CColorCorrectionVolume
 D vtable for CColorProperty
 D vtable for CCombatCharVisCache
 D vtable for CCommentaryAuto
 D vtable for CCommentarySystem
 D vtable for CCommentaryViewPosition
 D vtable for CCommentary_SaveRestoreBlockHandler
 D vtable for CCommunity_GamePersonalDataCategoryInfo
 D vtable for CCommunity_GetGamePersonalDataCategories_Request
 D vtable for CCommunity_GetGamePersonalDataCategories_Response
 D vtable for CCommunity_GetGamePersonalDataEntries_Request
 D vtable for CCommunity_GetGamePersonalDataEntries_Response
 D vtable for CCommunity_TerminateGamePersonalDataEntries_Request
 D vtable for CCommunity_TerminateGamePersonalDataEntries_Response
 D vtable for CConceptHistoriesDataOps
 D vtable for CConstantForceController
 D vtable for CConstraintAnchor
 D vtable for CCopyRecipientFilter
 D vtable for CCorpse
 D vtable for CCredits
 D vtable for CCubeRotationController
 D vtable for CCyclicalHoliday
 D vtable for CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>
 D vtable for CDataManagerBase
 D vtable for CDataObjectAccessSystem
 D vtable for CDateBasedHoliday
 D vtable for CDebugHistory
 D vtable for CDecal
 D vtable for CDecalEmitterSystem
 D vtable for CDefaultAccessor
 D vtable for CDefaultParticleSystemQuery
 D vtable for CDefaultResponseSystem
 D vtable for CDefaultResponseSystemSaveRestoreBlockHandler
 D vtable for CDetailBlocker
 D vtable for CDevShotSystem
 D vtable for CDirtySpatialPartitionEntityList
 D vtable for CDllDemandLoader
 D vtable for CDragDropHelperPanel
 D vtable for CDynamicLight
 D vtable for CDynamicProp
 D vtable for CEconCraftingRecipeDefinition
 D vtable for CEconEntity
 D vtable for CEconEntity::NetworkVar_m_AttributeManager
 D vtable for CEconItem
 D vtable for CEconItemAttribute
 D vtable for CEconItemDefinition
 D vtable for CEconItemSchema
 D vtable for CEconItemSystem
 D vtable for CEconItemView
 D vtable for CEconItemView::NetworkVar_m_AttributeList
 D vtable for CEconStyleInfo
 D vtable for CEconTool_BackpackExpander
 D vtable for CEconTool_ClaimCode
 D vtable for CEconTool_Collection
 D vtable for CEconTool_CrateKey
 D vtable for CEconTool_CustomizeTexture
 D vtable for CEconTool_Default
 D vtable for CEconTool_DescTag
 D vtable for CEconTool_DuelingMinigame
 D vtable for CEconTool_Gift
 D vtable for CEconTool_GiftWrap
 D vtable for CEconTool_NameTag
 D vtable for CEconTool_Noisemaker
 D vtable for CEconTool_PaintCan
 D vtable for CEconTool_WeddingRing
 D vtable for CEconTool_WrappedGift
 D vtable for CEconWearable
 D vtable for CEffectsServer
 D vtable for CEmbers
 D vtable for CEmptyConVar
 D vtable for CEnableMotionFixup
 D vtable for CEnergyBallLauncher
 D vtable for CEntFireAutoCompletionFunctor
 D vtable for CEntityBlocker
 D vtable for CEntityClassList<CFuncNoPortalVolume>
 D vtable for CEntityClassList<CFuncPortalDetector>
 D vtable for CEntityClassList<CFuncPortalOrientation>
 D vtable for CEntityClassList<CPhysicsNPCSolver>
 D vtable for CEntityClassList<CPointCamera>
 D vtable for CEntityClassList<CSkyCamera>
 D vtable for CEntityDataInstantiator<CWatcherList>
 D vtable for CEntityDataInstantiator<ModelScale>
 D vtable for CEntityDataInstantiator<StepSimulationData>
 D vtable for CEntityDataInstantiator<groundlink_t>
 D vtable for CEntityDataInstantiator<physicspushlist_t>
 D vtable for CEntityDataInstantiator<touchlink_t>
 D vtable for CEntityDataInstantiator<vphysicsupdateai_t>
 D vtable for CEntityDissolve
 D vtable for CEntityFactory<AR2Explosion>
 D vtable for CEntityFactory<CAISound>
 D vtable for CEntityFactory<CAI_ActBusyGoal>
 D vtable for CEntityFactory<CAI_ActBusyQueueGoal>
 D vtable for CEntityFactory<CAI_AllySpeechManager>
 D vtable for CEntityFactory<CAI_AssaultGoal>
 D vtable for CEntityFactory<CAI_BattleLine>
 D vtable for CEntityFactory<CAI_ChangeHintGroup>
 D vtable for CEntityFactory<CAI_ChangeTarget>
 D vtable for CEntityFactory<CAI_DynamicLink>
 D vtable for CEntityFactory<CAI_DynamicLinkController>
 D vtable for CEntityFactory<CAI_FightFromCoverGoal>
 D vtable for CEntityFactory<CAI_FollowGoal>
 D vtable for CEntityFactory<CAI_Hint>
 D vtable for CEntityFactory<CAI_LeadGoal>
 D vtable for CEntityFactory<CAI_LeadGoal_Weapon>
 D vtable for CEntityFactory<CAI_NetworkManager>
 D vtable for CEntityFactory<CAI_RadialLinkController>
 D vtable for CEntityFactory<CAI_Relationship>
 D vtable for CEntityFactory<CAI_ScriptConditions>
 D vtable for CEntityFactory<CAI_ScriptedSchedule>
 D vtable for CEntityFactory<CAI_ScriptedSentence>
 D vtable for CEntityFactory<CAI_ScriptedSequence>
 D vtable for CEntityFactory<CAI_SpeechFilter>
 D vtable for CEntityFactory<CAI_StandoffGoal>
 D vtable for CEntityFactory<CAI_TestHull>
 D vtable for CEntityFactory<CAmbientGeneric>
 D vtable for CEntityFactory<CAreaPortal>
 D vtable for CEntityFactory<CAssaultPoint>
 D vtable for CEntityFactory<CBaseAnimatingProjectile>
 D vtable for CEntityFactory<CBaseButton>
 D vtable for CEntityFactory<CBaseDMStart>
 D vtable for CEntityFactory<CBaseDoor>
 D vtable for CEntityFactory<CBaseEntity>
 D vtable for CEntityFactory<CBaseFilter>
 D vtable for CEntityFactory<CBaseFlex>
 D vtable for CEntityFactory<CBaseGrenade>
 D vtable for CEntityFactory<CBaseGrenadeConcussion>
 D vtable for CEntityFactory<CBaseGrenadeContact>
 D vtable for CEntityFactory<CBaseGrenadeTimed>
 D vtable for CEntityFactory<CBaseHLCombatWeapon>
 D vtable for CEntityFactory<CBaseMoveBehavior>
 D vtable for CEntityFactory<CBasePortalCombatWeapon>
 D vtable for CEntityFactory<CBaseProjectile>
 D vtable for CEntityFactory<CBaseSpriteProjectile>
 D vtable for CEntityFactory<CBaseTrigger>
 D vtable for CEntityFactory<CBaseViewModel>
 D vtable for CEntityFactory<CBeam>
 D vtable for CEntityFactory<CBeamSpotlight>
 D vtable for CEntityFactory<CBlendingCycler>
 D vtable for CEntityFactory<CBlood>
 D vtable for CEntityFactory<CBoneFollower>
 D vtable for CEntityFactory<CBreakable>
 D vtable for CEntityFactory<CBreakableSurface>
 D vtable for CEntityFactory<CBubbling>
 D vtable for CEntityFactory<CChallengeModeEndNode>
 D vtable for CEntityFactory<CChangeLevel>
 D vtable for CEntityFactory<CCitadelEnergyCore>
 D vtable for CEntityFactory<CColorCorrection>
 D vtable for CEntityFactory<CColorCorrectionVolume>
 D vtable for CEntityFactory<CCommentaryAuto>
 D vtable for CEntityFactory<CCommentaryViewPosition>
 D vtable for CEntityFactory<CConstraintAnchor>
 D vtable for CEntityFactory<CCorpse>
 D vtable for CEntityFactory<CCredits>
 D vtable for CEntityFactory<CCubeRotationController>
 D vtable for CEntityFactory<CDebugHistory>
 D vtable for CEntityFactory<CDecal>
 D vtable for CEntityFactory<CDetailBlocker>
 D vtable for CEntityFactory<CDynamicLight>
 D vtable for CEntityFactory<CDynamicProp>
 D vtable for CEntityFactory<CEconWearable>
 D vtable for CEntityFactory<CEmbers>
 D vtable for CEntityFactory<CEnableMotionFixup>
 D vtable for CEntityFactory<CEnergyBallLauncher>
 D vtable for CEntityFactory<CEntityBlocker>
 D vtable for CEntityFactory<CEntityDissolve>
 D vtable for CEntityFactory<CEntityFlame>
 D vtable for CEntityFactory<CEntityFreezing>
 D vtable for CEntityFactory<CEntityParticleTrail>
 D vtable for CEntityFactory<CEnvAR2Explosion>
 D vtable for CEntityFactory<CEnvAmbientLight>
 D vtable for CEntityFactory<CEnvBeam>
 D vtable for CEntityFactory<CEnvBeverage>
 D vtable for CEntityFactory<CEnvDOFController>
 D vtable for CEntityFactory<CEnvDetailController>
 D vtable for CEntityFactory<CEnvDustPuff>
 D vtable for CEntityFactory<CEnvEffectsScript>
 D vtable for CEntityFactory<CEnvEntityIgniter>
 D vtable for CEntityFactory<CEnvEntityMaker>
 D vtable for CEntityFactory<CEnvExplosion>
 D vtable for CEntityFactory<CEnvFade>
 D vtable for CEntityFactory<CEnvFireSensor>
 D vtable for CEntityFactory<CEnvFireSource>
 D vtable for CEntityFactory<CEnvFunnel>
 D vtable for CEntityFactory<CEnvGlobal>
 D vtable for CEntityFactory<CEnvGunfire>
 D vtable for CEntityFactory<CEnvHudHint>
 D vtable for CEntityFactory<CEnvInstructorHint>
 D vtable for CEntityFactory<CEnvLaser>
 D vtable for CEntityFactory<CEnvLight>
 D vtable for CEntityFactory<CEnvMicrophone>
 D vtable for CEntityFactory<CEnvMuzzleFlash>
 D vtable for CEntityFactory<CEnvParticleScript>
 D vtable for CEntityFactory<CEnvPlayerSurfaceTrigger>
 D vtable for CEntityFactory<CEnvPortalPathTrack>
 D vtable for CEntityFactory<CEnvProjectedTexture>
 D vtable for CEntityFactory<CEnvQuadraticBeam>
 D vtable for CEntityFactory<CEnvScreenEffect>
 D vtable for CEntityFactory<CEnvScreenOverlay>
 D vtable for CEntityFactory<CEnvShake>
 D vtable for CEntityFactory<CEnvShooter>
 D vtable for CEntityFactory<CEnvSoundscape>
 D vtable for CEntityFactory<CEnvSoundscapeProxy>
 D vtable for CEntityFactory<CEnvSoundscapeTriggerable>
 D vtable for CEntityFactory<CEnvSpark>
 D vtable for CEntityFactory<CEnvSplash>
 D vtable for CEntityFactory<CEnvTilt>
 D vtable for CEntityFactory<CEnvTonemapController>
 D vtable for CEntityFactory<CEnvTracer>
 D vtable for CEntityFactory<CEnvViewPunch>
 D vtable for CEntityFactory<CEnvWind>
 D vtable for CEntityFactory<CEnvZoom>
 D vtable for CEntityFactory<CEnv_Lightrail_Endpoint>
 D vtable for CEntityFactory<CEventQueueSaveLoadProxy>
 D vtable for CEntityFactory<CFilterClass>
 D vtable for CEntityFactory<CFilterCombineBall>
 D vtable for CEntityFactory<CFilterContext>
 D vtable for CEntityFactory<CFilterEnemy>
 D vtable for CEntityFactory<CFilterMassGreater>
 D vtable for CEntityFactory<CFilterModel>
 D vtable for CEntityFactory<CFilterMultiple>
 D vtable for CEntityFactory<CFilterName>
 D vtable for CEntityFactory<CFilterPlayerHeld>
 D vtable for CEntityFactory<CFilterSize>
 D vtable for CEntityFactory<CFire>
 D vtable for CEntityFactory<CFireSmoke>
 D vtable for CEntityFactory<CFireTrail>
 D vtable for CEntityFactory<CFish>
 D vtable for CEntityFactory<CFishPool>
 D vtable for CEntityFactory<CFlexExpresser>
 D vtable for CEntityFactory<CFlextalkActor>
 D vtable for CEntityFactory<CFogController>
 D vtable for CEntityFactory<CFogTrigger>
 D vtable for CEntityFactory<CFogVolume>
 D vtable for CEntityFactory<CFuncAreaPortalWindow>
 D vtable for CEntityFactory<CFuncBrush>
 D vtable for CEntityFactory<CFuncCombineBallSpawner>
 D vtable for CEntityFactory<CFuncConveyor>
 D vtable for CEntityFactory<CFuncIllusionary>
 D vtable for CEntityFactory<CFuncInstanceIoProxy>
 D vtable for CEntityFactory<CFuncLadder>
 D vtable for CEntityFactory<CFuncLadderEndPoint>
 D vtable for CEntityFactory<CFuncMonitor>
 D vtable for CEntityFactory<CFuncMoveLinear>
 D vtable for CEntityFactory<CFuncNavBlocker>
 D vtable for CEntityFactory<CFuncNavObstruction>
 D vtable for CEntityFactory<CFuncNoPortalVolume>
 D vtable for CEntityFactory<CFuncOccluder>
 D vtable for CEntityFactory<CFuncPlacementClip>
 D vtable for CEntityFactory<CFuncPlat>
 D vtable for CEntityFactory<CFuncPlatRot>
 D vtable for CEntityFactory<CFuncPortalBumper>
 D vtable for CEntityFactory<CFuncPortalDetector>
 D vtable for CEntityFactory<CFuncPortalOrientation>
 D vtable for CEntityFactory<CFuncReflectiveGlass>
 D vtable for CEntityFactory<CFuncRotating>
 D vtable for CEntityFactory<CFuncSmokeVolume>
 D vtable for CEntityFactory<CFuncTankCombineCannon>
 D vtable for CEntityFactory<CFuncTankGun>
 D vtable for CEntityFactory<CFuncTankLaser>
 D vtable for CEntityFactory<CFuncTankMortar>
 D vtable for CEntityFactory<CFuncTankPhysCannister>
 D vtable for CEntityFactory<CFuncTankPulseLaser>
 D vtable for CEntityFactory<CFuncTankTrain>
 D vtable for CEntityFactory<CFuncTrackAuto>
 D vtable for CEntityFactory<CFuncTrackChange>
 D vtable for CEntityFactory<CFuncTrackTrain>
 D vtable for CEntityFactory<CFuncTrain>
 D vtable for CEntityFactory<CFuncTrainControls>
 D vtable for CEntityFactory<CFuncVPhysicsClip>
 D vtable for CEntityFactory<CFuncVehicleClip>
 D vtable for CEntityFactory<CFuncWall>
 D vtable for CEntityFactory<CFuncWallToggle>
 D vtable for CEntityFactory<CFunc_DustCloud>
 D vtable for CEntityFactory<CFunc_DustMotes>
 D vtable for CEntityFactory<CFunc_LOD>
 D vtable for CEntityFactory<CFunc_Portalled>
 D vtable for CEntityFactory<CFutbolCatcher>
 D vtable for CEntityFactory<CGameEnd>
 D vtable for CEntityFactory<CGameGibManager>
 D vtable for CEntityFactory<CGamePlayerEquip>
 D vtable for CEntityFactory<CGamePlayerTeam>
 D vtable for CEntityFactory<CGamePlayerZone>
 D vtable for CEntityFactory<CGameScore>
 D vtable for CEntityFactory<CGameText>
 D vtable for CEntityFactory<CGameUI>
 D vtable for CEntityFactory<CGameWeaponManager>
 D vtable for CEntityFactory<CGenericActor>
 D vtable for CEntityFactory<CGenericCycler>
 D vtable for CEntityFactory<CGenericFlexCycler>
 D vtable for CEntityFactory<CGenericNPC>
 D vtable for CEntityFactory<CGib>
 D vtable for CEntityFactory<CGibShooter>
 D vtable for CEntityFactory<CGrenadeBeam>
 D vtable for CEntityFactory<CGrenadeBeamChaser>
 D vtable for CEntityFactory<CGrenadeFrag>
 D vtable for CEntityFactory<CGunTarget>
 D vtable for CEntityFactory<CHalfLife2Proxy>
 D vtable for CEntityFactory<CHandleDummy>
 D vtable for CEntityFactory<CHandleTest>
 D vtable for CEntityFactory<CHotPotato>
 D vtable for CEntityFactory<CHotPotatoCatcher>
 D vtable for CEntityFactory<CHotPotatoSocket>
 D vtable for CEntityFactory<CHotPotatoSpawner>
 D vtable for CEntityFactory<CHoverTurretTether>
 D vtable for CEntityFactory<CInfoCameraLink>
 D vtable for CEntityFactory<CInfoGameEventProxy>
 D vtable for CEntityFactory<CInfoInstructorHintTarget>
 D vtable for CEntityFactory<CInfoIntermission>
 D vtable for CEntityFactory<CInfoLadderDismount>
 D vtable for CEntityFactory<CInfoLandmark>
 D vtable for CEntityFactory<CInfoMassCenter>
 D vtable for CEntityFactory<CInfoOverlayAccessor>
 D vtable for CEntityFactory<CInfoPlacementHelper>
 D vtable for CEntityFactory<CInfoPortalScore>
 D vtable for CEntityFactory<CInfoRemarkable>
 D vtable for CEntityFactory<CInfoTarget>
 D vtable for CEntityFactory<CInfoTargetPersonalitySphere>
 D vtable for CEntityFactory<CInfo_Coop_Spawn>
 D vtable for CEntityFactory<CInfo_Player_Ping_Detector>
 D vtable for CEntityFactory<CInstancedSceneEntity>
 D vtable for CEntityFactory<CItemSoda>
 D vtable for CEntityFactory<CItemSuit>
 D vtable for CEntityFactory<CItem_Nugget>
 D vtable for CEntityFactory<CKeepUpright>
 D vtable for CEntityFactory<CLabIndicatorPanel>
 D vtable for CEntityFactory<CLaserCatcher>
 D vtable for CEntityFactory<CLaserRelay>
 D vtable for CEntityFactory<CLevelPlacardDisplay>
 D vtable for CEntityFactory<CLight>
 D vtable for CEntityFactory<CLightGlow>
 D vtable for CEntityFactory<CLinkedPortalDoor>
 D vtable for CEntityFactory<CLogicAchievement>
 D vtable for CEntityFactory<CLogicActiveAutosave>
 D vtable for CEntityFactory<CLogicAuto>
 D vtable for CEntityFactory<CLogicAutosave>
 D vtable for CEntityFactory<CLogicBranch>
 D vtable for CEntityFactory<CLogicBranchList>
 D vtable for CEntityFactory<CLogicCase>
 D vtable for CEntityFactory<CLogicCollisionPair>
 D vtable for CEntityFactory<CLogicCompare>
 D vtable for CEntityFactory<CLogicCompareInteger>
 D vtable for CEntityFactory<CLogicCoopManager>
 D vtable for CEntityFactory<CLogicEventListener>
 D vtable for CEntityFactory<CLogicLineToEntity>
 D vtable for CEntityFactory<CLogicMeasureMovement>
 D vtable for CEntityFactory<CLogicNavigation>
 D vtable for CEntityFactory<CLogicPlayMovie>
 D vtable for CEntityFactory<CLogicPlayerProxy>
 D vtable for CEntityFactory<CLogicPlayerViewFinder>
 D vtable for CEntityFactory<CLogicRandomOutputs>
 D vtable for CEntityFactory<CLogicRegisterActivator>
 D vtable for CEntityFactory<CLogicRelay>
 D vtable for CEntityFactory<CLogicScript>
 D vtable for CEntityFactory<CLogicTimeScale>
 D vtable for CEntityFactory<CMP_LobbyScreen>
 D vtable for CEntityFactory<CMaterialModifyControl>
 D vtable for CEntityFactory<CMathColorBlend>
 D vtable for CEntityFactory<CMathCounter>
 D vtable for CEntityFactory<CMathRemap>
 D vtable for CEntityFactory<CMessage>
 D vtable for CEntityFactory<CMessageEntity>
 D vtable for CEntityFactory<CMomentaryRotButton>
 D vtable for CEntityFactory<CMortarShell>
 D vtable for CEntityFactory<CMovementSpeedMod>
 D vtable for CEntityFactory<CMovieDisplay>
 D vtable for CEntityFactory<CMultiSource>
 D vtable for CEntityFactory<CNPCEventResponseSystemEntity>
 D vtable for CEntityFactory<CNPCMaker>
 D vtable for CEntityFactory<CNPCSpawnDestination>
 D vtable for CEntityFactory<CNPC_Bullseye>
 D vtable for CEntityFactory<CNPC_EnemyFinder>
 D vtable for CEntityFactory<CNPC_EnemyFinderCombineCannon>
 D vtable for CEntityFactory<CNPC_FloorTurret>
 D vtable for CEntityFactory<CNPC_Furniture>
 D vtable for CEntityFactory<CNPC_HoverTurret>
 D vtable for CEntityFactory<CNPC_PersonalityCore>
 D vtable for CEntityFactory<CNPC_Portal_FloorTurret>
 D vtable for CEntityFactory<CNPC_RocketTurret>
 D vtable for CEntityFactory<CNPC_SecurityCamera>
 D vtable for CEntityFactory<CNPC_VehicleDriver>
 D vtable for CEntityFactory<CNPC_Wheatley_Boss>
 D vtable for CEntityFactory<CNeurotoxinCountdown>
 D vtable for CEntityFactory<CNewNPC>
 D vtable for CEntityFactory<CNewRecharge>
 D vtable for CEntityFactory<CNodeEnt>
 D vtable for CEntityFactory<CNullEntity>
 D vtable for CEntityFactory<COrnamentProp>
 D vtable for CEntityFactory<COuttroStats>
 D vtable for CEntityFactory<CPSCollisionEntity>
 D vtable for CEntityFactory<CPaintSphere>
 D vtable for CEntityFactory<CPaintSprayer>
 D vtable for CEntityFactory<CPaintStream>
 D vtable for CEntityFactory<CParticleFire>
 D vtable for CEntityFactory<CParticleLight>
 D vtable for CEntityFactory<CParticlePerformanceMonitor>
 D vtable for CEntityFactory<CParticleSystem>
 D vtable for CEntityFactory<CPathCorner>
 D vtable for CEntityFactory<CPathCornerCrash>
 D vtable for CEntityFactory<CPathKeyFrame>
 D vtable for CEntityFactory<CPathTrack>
 D vtable for CEntityFactory<CPhysBallSocket>
 D vtable for CEntityFactory<CPhysBox>
 D vtable for CEntityFactory<CPhysBoxMultiplayer>
 D vtable for CEntityFactory<CPhysConstraintSystem>
 D vtable for CEntityFactory<CPhysConvert>
 D vtable for CEntityFactory<CPhysExplosion>
 D vtable for CEntityFactory<CPhysFixed>
 D vtable for CEntityFactory<CPhysHinge>
 D vtable for CEntityFactory<CPhysImpact>
 D vtable for CEntityFactory<CPhysLength>
 D vtable for CEntityFactory<CPhysMagnet>
 D vtable for CEntityFactory<CPhysMotor>
 D vtable for CEntityFactory<CPhysPulley>
 D vtable for CEntityFactory<CPhysSlideConstraint>
 D vtable for CEntityFactory<CPhysSphere>
 D vtable for CEntityFactory<CPhysThruster>
 D vtable for CEntityFactory<CPhysTorque>
 D vtable for CEntityFactory<CPhysicsCannister>
 D vtable for CEntityFactory<CPhysicsCloneArea>
 D vtable for CEntityFactory<CPhysicsEntitySolver>
 D vtable for CEntityFactory<CPhysicsNPCSolver>
 D vtable for CEntityFactory<CPhysicsProp>
 D vtable for CEntityFactory<CPhysicsPropMultiplayer>
 D vtable for CEntityFactory<CPhysicsPropRespawnable>
 D vtable for CEntityFactory<CPhysicsShadowClone>
 D vtable for CEntityFactory<CPhysicsSpring>
 D vtable for CEntityFactory<CPhysicsWire>
 D vtable for CEntityFactory<CPlasma>
 D vtable for CEntityFactory<CPlayerPickupController>
 D vtable for CEntityFactory<CPlayerResource>
 D vtable for CEntityFactory<CPointAngleSensor>
 D vtable for CEntityFactory<CPointAngularVelocitySensor>
 D vtable for CEntityFactory<CPointBonusMapsAccessor>
 D vtable for CEntityFactory<CPointBroadcastClientCommand>
 D vtable for CEntityFactory<CPointCamera>
 D vtable for CEntityFactory<CPointChangelevel>
 D vtable for CEntityFactory<CPointClientCommand>
 D vtable for CEntityFactory<CPointCombineBallLauncher>
 D vtable for CEntityFactory<CPointCommentaryNode>
 D vtable for CEntityFactory<CPointDevShotCamera>
 D vtable for CEntityFactory<CPointEntity>
 D vtable for CEntityFactory<CPointEntityFinder>
 D vtable for CEntityFactory<CPointFutbolShooter>
 D vtable for CEntityFactory<CPointGamestatsCounter>
 D vtable for CEntityFactory<CPointHurt>
 D vtable for CEntityFactory<CPointPlayerMoveConstraint>
 D vtable for CEntityFactory<CPointProximitySensor>
 D vtable for CEntityFactory<CPointServerCommand>
 D vtable for CEntityFactory<CPointSpotlight>
 D vtable for CEntityFactory<CPointSurvey>
 D vtable for CEntityFactory<CPointTeleport>
 D vtable for CEntityFactory<CPointTemplate>
 D vtable for CEntityFactory<CPointVelocitySensor>
 D vtable for CEntityFactory<CPortalButtonTrigger>
 D vtable for CEntityFactory<CPortalCredits>
 D vtable for CEntityFactory<CPortalGameRulesProxy>
 D vtable for CEntityFactory<CPortalLaser>
 D vtable for CEntityFactory<CPortalLaserTarget>
 D vtable for CEntityFactory<CPortalMPGameRulesProxy>
 D vtable for CEntityFactory<CPortalMPStatsProxy>
 D vtable for CEntityFactory<CPortalRaceCheckpoint>
 D vtable for CEntityFactory<CPortalRagdoll>
 D vtable for CEntityFactory<CPortalStatsController>
 D vtable for CEntityFactory<CPortal_Base2D>
 D vtable for CEntityFactory<CPortal_Player>
 D vtable for CEntityFactory<CPortal_PointPush>
 D vtable for CEntityFactory<CPoseController>
 D vtable for CEntityFactory<CPostProcessController>
 D vtable for CEntityFactory<CPrecipitation>
 D vtable for CEntityFactory<CPrecipitationBlocker>
 D vtable for CEntityFactory<CPredictedViewModel>
 D vtable for CEntityFactory<CProceduralGenerator>
 D vtable for CEntityFactory<CProjectedDecal>
 D vtable for CEntityFactory<CProjectedTractorBeamEntity>
 D vtable for CEntityFactory<CProjectedWallEntity>
 D vtable for CEntityFactory<CPropButton>
 D vtable for CEntityFactory<CPropCombineBall>
 D vtable for CEntityFactory<CPropDoorRotating>
 D vtable for CEntityFactory<CPropEnergyBall>
 D vtable for CEntityFactory<CPropExplodingFutbol>
 D vtable for CEntityFactory<CPropFloorBallButton>
 D vtable for CEntityFactory<CPropFloorButton>
 D vtable for CEntityFactory<CPropFloorCubeButton>
 D vtable for CEntityFactory<CPropFutbolSocket>
 D vtable for CEntityFactory<CPropFutbolSpawner>
 D vtable for CEntityFactory<CPropGladosCore>
 D vtable for CEntityFactory<CPropGlassFutbol>
 D vtable for CEntityFactory<CPropIndicatorPanel>
 D vtable for CEntityFactory<CPropLinkedPortalDoor>
 D vtable for CEntityFactory<CPropMonsterBox>
 D vtable for CEntityFactory<CPropPaintBomb>
 D vtable for CEntityFactory<CPropPersonalitySphere>
 D vtable for CEntityFactory<CPropPhysicsPaintable>
 D vtable for CEntityFactory<CPropPortalStatsDisplay>
 D vtable for CEntityFactory<CPropRocketTripwire>
 D vtable for CEntityFactory<CPropTelescopicArm>
 D vtable for CEntityFactory<CPropTestChamberDoor>
 D vtable for CEntityFactory<CPropTicTacToePanel>
 D vtable for CEntityFactory<CPropTractorBeamProjector>
 D vtable for CEntityFactory<CPropUnderButton>
 D vtable for CEntityFactory<CPropUnderFloorButton>
 D vtable for CEntityFactory<CPropVehicle>
 D vtable for CEntityFactory<CPropVehicleChoreoGeneric>
 D vtable for CEntityFactory<CPropVehicleDriveable>
 D vtable for CEntityFactory<CPropVehicleViewController>
 D vtable for CEntityFactory<CPropWallProjector>
 D vtable for CEntityFactory<CPropWeightedCube>
 D vtable for CEntityFactory<CProp_Hallucination>
 D vtable for CEntityFactory<CProp_Mirror>
 D vtable for CEntityFactory<CProp_Portal>
 D vtable for CEntityFactory<CPushable>
 D vtable for CEntityFactory<CRagGib>
 D vtable for CEntityFactory<CRagdollBoogie>
 D vtable for CEntityFactory<CRagdollConstraint>
 D vtable for CEntityFactory<CRagdollMagnet>
 D vtable for CEntityFactory<CRagdollManager>
 D vtable for CEntityFactory<CRagdollProp>
 D vtable for CEntityFactory<CRagdollPropAttached>
 D vtable for CEntityFactory<CRallyPoint>
 D vtable for CEntityFactory<CRecharge>
 D vtable for CEntityFactory<CRevertSaved>
 D vtable for CEntityFactory<CRocket_Turret_Projectile>
 D vtable for CEntityFactory<CRopeAnchor>
 D vtable for CEntityFactory<CRopeKeyframe>
 D vtable for CEntityFactory<CRotButton>
 D vtable for CEntityFactory<CRotDoor>
 D vtable for CEntityFactory<CRotorWashShooter>
 D vtable for CEntityFactory<CSceneEntity>
 D vtable for CEntityFactory<CSceneListManager>
 D vtable for CEntityFactory<CSceneManager>
 D vtable for CEntityFactory<CScriptIntro>
 D vtable for CEntityFactory<CScriptedTarget>
 D vtable for CEntityFactory<CServerRagdollTrigger>
 D vtable for CEntityFactory<CShadowControl>
 D vtable for CEntityFactory<CShower>
 D vtable for CEntityFactory<CSimplePhysicsBrush>
 D vtable for CEntityFactory<CSimplePhysicsProp>
 D vtable for CEntityFactory<CSkyCamera>
 D vtable for CEntityFactory<CSkyboxSwapper>
 D vtable for CEntityFactory<CSlideshowDisplay>
 D vtable for CEntityFactory<CSmokeStack>
 D vtable for CEntityFactory<CSoundEnt>
 D vtable for CEntityFactory<CSpeaker>
 D vtable for CEntityFactory<CSpotlightEnd>
 D vtable for CEntityFactory<CSprayCan>
 D vtable for CEntityFactory<CSprite>
 D vtable for CEntityFactory<CSpriteOriented>
 D vtable for CEntityFactory<CSpriteTrail>
 D vtable for CEntityFactory<CStatueProp>
 D vtable for CEntityFactory<CSteamJet>
 D vtable for CEntityFactory<CStripWeapons>
 D vtable for CEntityFactory<CSun>
 D vtable for CEntityFactory<CSunlightShadowControl>
 D vtable for CEntityFactory<CTankTargetChange>
 D vtable for CEntityFactory<CTankTrainAI>
 D vtable for CEntityFactory<CTargetCDAudioRep>
 D vtable for CEntityFactory<CTargetChangeGravity>
 D vtable for CEntityFactory<CTeam>
 D vtable for CEntityFactory<CTeamSpawnPoint>
 D vtable for CEntityFactory<CTeamVehicleSpawnPoint>
 D vtable for CEntityFactory<CTempEntTester>
 D vtable for CEntityFactory<CTemplateNPCMaker>
 D vtable for CEntityFactory<CTesla>
 D vtable for CEntityFactory<CTestEffect>
 D vtable for CEntityFactory<CTestTraceline>
 D vtable for CEntityFactory<CTest_ProxyToggle_Networkable>
 D vtable for CEntityFactory<CTextureToggle>
 D vtable for CEntityFactory<CTimerEntity>
 D vtable for CEntityFactory<CTonemapTrigger>
 D vtable for CEntityFactory<CTriggerAutoCrouch>
 D vtable for CEntityFactory<CTriggerBrush>
 D vtable for CEntityFactory<CTriggerCDAudio>
 D vtable for CEntityFactory<CTriggerCamera>
 D vtable for CEntityFactory<CTriggerCameraMultiplayer>
 D vtable for CEntityFactory<CTriggerCatapult>
 D vtable for CEntityFactory<CTriggerGravity>
 D vtable for CEntityFactory<CTriggerHierarchy>
 D vtable for CEntityFactory<CTriggerHurt>
 D vtable for CEntityFactory<CTriggerImpact>
 D vtable for CEntityFactory<CTriggerLook>
 D vtable for CEntityFactory<CTriggerMultiple>
 D vtable for CEntityFactory<CTriggerOnce>
 D vtable for CEntityFactory<CTriggerPaintCleanser>
 D vtable for CEntityFactory<CTriggerPhysicsTrap>
 D vtable for CEntityFactory<CTriggerPingDetector>
 D vtable for CEntityFactory<CTriggerPlayerMovement>
 D vtable for CEntityFactory<CTriggerPlayerTeam>
 D vtable for CEntityFactory<CTriggerPortalCleanser>
 D vtable for CEntityFactory<CTriggerProximity>
 D vtable for CEntityFactory<CTriggerPush>
 D vtable for CEntityFactory<CTriggerRPGFire>
 D vtable for CEntityFactory<CTriggerRemove>
 D vtable for CEntityFactory<CTriggerSave>
 D vtable for CEntityFactory<CTriggerSoundscape>
 D vtable for CEntityFactory<CTriggerTeleport>
 D vtable for CEntityFactory<CTriggerToggleSave>
 D vtable for CEntityFactory<CTriggerVPhysicsMotion>
 D vtable for CEntityFactory<CTriggerViewProxy>
 D vtable for CEntityFactory<CTriggerVolume>
 D vtable for CEntityFactory<CTriggerWateryDeath>
 D vtable for CEntityFactory<CTriggerWeaponDissolve>
 D vtable for CEntityFactory<CTriggerWeaponStrip>
 D vtable for CEntityFactory<CTriggerWind>
 D vtable for CEntityFactory<CTrigger_TractorBeam>
 D vtable for CEntityFactory<CTurretTipController>
 D vtable for CEntityFactory<CVGuiScreen>
 D vtable for CEntityFactory<CWC_UpdateIgnoreList>
 D vtable for CEntityFactory<CWaterBullet>
 D vtable for CEntityFactory<CWaterLODControl>
 D vtable for CEntityFactory<CWateryDeathLeech>
 D vtable for CEntityFactory<CWeaponCubemap>
 D vtable for CEntityFactory<CWeaponCycler>
 D vtable for CEntityFactory<CWeaponPortalBase>
 D vtable for CEntityFactory<CWeaponPortalgun>
 D vtable for CEntityFactory<CWeaponPromoAntennaBall>
 D vtable for CEntityFactory<CWeaponPromoAntennaEgg>
 D vtable for CEntityFactory<CWeaponPromoHelmetBall>
 D vtable for CEntityFactory<CWeaponPromoHelmetEgg>
 D vtable for CEntityFactory<CWeightButton>
 D vtable for CEntityFactory<CWindowPane>
 D vtable for CEntityFactory<CWorld>
 D vtable for CEntityFactory<CWorldItem>
 D vtable for CEntityFactory<CWreckage>
 D vtable for CEntityFactory<DustTrail>
 D vtable for CEntityFactory<FilterDamageType>
 D vtable for CEntityFactory<FilterTeam>
 D vtable for CEntityFactory<FizzlerEffects>
 D vtable for CEntityFactory<FizzlerMultiOriginSoundPlayer>
 D vtable for CEntityFactory<MovieExplosion>
 D vtable for CEntityFactory<ParticleSmokeGrenade>
 D vtable for CEntityFactory<ProjectedEntityAmbientSoundProxy>
 D vtable for CEntityFactory<RocketTrail>
 D vtable for CEntityFactory<SmokeTrail>
 D vtable for CEntityFactory<SporeExplosion>
 D vtable for CEntityFactory<SporeTrail>
 D vtable for CEntityFactoryDictionary
 D vtable for CEntityFlame
 D vtable for CEntityFreezing
 D vtable for CEntityListSystem
 D vtable for CEntityParticleTrail
 D vtable for CEntityParticleTrail::NetworkVar_m_Info
 D vtable for CEntitySaveRestoreBlockHandler
 D vtable for CEntitySaveUtils
 D vtable for CEntityTouchManager
 D vtable for CEnvAR2Explosion
 D vtable for CEnvAmbientLight
 D vtable for CEnvBeam
 D vtable for CEnvBeverage
 D vtable for CEnvDOFController
 D vtable for CEnvDetailController
 D vtable for CEnvDustPuff
 D vtable for CEnvEffectsScript
 D vtable for CEnvEntityIgniter
 D vtable for CEnvEntityMaker
 D vtable for CEnvExplosion
 D vtable for CEnvFade
 D vtable for CEnvFireSensor
 D vtable for CEnvFireSource
 D vtable for CEnvFunnel
 D vtable for CEnvGlobal
 D vtable for CEnvGunfire
 D vtable for CEnvHudHint
 D vtable for CEnvInstructorHint
 D vtable for CEnvLaser
 D vtable for CEnvLight
 D vtable for CEnvMicrophone
 D vtable for CEnvMuzzleFlash
 D vtable for CEnvParticleScript
 D vtable for CEnvPlayerSurfaceTrigger
 D vtable for CEnvPortalPathTrack
 D vtable for CEnvProjectedTexture
 D vtable for CEnvQuadraticBeam
 D vtable for CEnvScreenEffect
 D vtable for CEnvScreenOverlay
 D vtable for CEnvShake
 D vtable for CEnvShooter
 D vtable for CEnvSoundscape
 D vtable for CEnvSoundscapeProxy
 D vtable for CEnvSoundscapeTriggerable
 D vtable for CEnvSpark
 D vtable for CEnvSplash
 D vtable for CEnvTilt
 D vtable for CEnvTonemapController
 D vtable for CEnvTracer
 D vtable for CEnvViewPunch
 D vtable for CEnvWind
 D vtable for CEnvWindShared
 D vtable for CEnvZoom
 D vtable for CEnv_Lightrail_Endpoint
 D vtable for CEventLog
 D vtable for CEventQueueSaveLoadProxy
 D vtable for CEventQueue_SaveRestoreBlockHandler
 D vtable for CEventsSaveDataOps
 D vtable for CFilterClass
 D vtable for CFilterCombineBall
 D vtable for CFilterContext
 D vtable for CFilterEnemy
 D vtable for CFilterMassGreater
 D vtable for CFilterModel
 D vtable for CFilterMultiple
 D vtable for CFilterName
 D vtable for CFilterOnlyGlassFutbol
 D vtable for CFilterOnlyHotPotato
 D vtable for CFilterPlayerHeld
 D vtable for CFilterSize
 D vtable for CFire
 D vtable for CFireSmoke
 D vtable for CFireSphere
 D vtable for CFireTrail
 D vtable for CFish
 D vtable for CFishPool
 D vtable for CFlaggedEntitiesEnum
 D vtable for CFlexAnimationTrack
 D vtable for CFlexExpresser
 D vtable for CFlexSceneFileManager
 D vtable for CFlextalkActor
 D vtable for CFloatProperty
 D vtable for CFmtStrN<1024>
 D vtable for CFmtStrN<128>
 D vtable for CFmtStrN<256>
 D vtable for CFmtStrN<32>
 D vtable for CFogController
 D vtable for CFogController::NetworkVar_m_fog
 D vtable for CFogSystem
 D vtable for CFogTrigger
 D vtable for CFogVolume
 D vtable for CFourWheelServerVehicle
 D vtable for CFourWheelVehiclePhysics
 D vtable for CFuncAreaPortalBase
 D vtable for CFuncAreaPortalWindow
 D vtable for CFuncBrush
 D vtable for CFuncCombineBallSpawner
 D vtable for CFuncConveyor
 D vtable for CFuncIllusionary
 D vtable for CFuncInstanceIoProxy
 D vtable for CFuncLadder
 D vtable for CFuncLadderEndPoint
 D vtable for CFuncMonitor
 D vtable for CFuncMoveLinear
 D vtable for CFuncNavBlocker
 D vtable for CFuncNavObstruction
 D vtable for CFuncNoPortalVolume
 D vtable for CFuncOccluder
 D vtable for CFuncPlacementClip
 D vtable for CFuncPlat
 D vtable for CFuncPlatRot
 D vtable for CFuncPortalBumper
 D vtable for CFuncPortalDetector
 D vtable for CFuncPortalOrientation
 D vtable for CFuncReflectiveGlass
 D vtable for CFuncRotating
 D vtable for CFuncSmokeVolume
 D vtable for CFuncTank
 D vtable for CFuncTankCombineCannon
 D vtable for CFuncTankGun
 D vtable for CFuncTankLaser
 D vtable for CFuncTankMortar
 D vtable for CFuncTankPhysCannister
 D vtable for CFuncTankPulseLaser
 D vtable for CFuncTankTrain
 D vtable for CFuncTrackAuto
 D vtable for CFuncTrackChange
 D vtable for CFuncTrackTrain
 D vtable for CFuncTrain
 D vtable for CFuncTrainControls
 D vtable for CFuncVPhysicsClip
 D vtable for CFuncVehicleClip
 D vtable for CFuncWall
 D vtable for CFuncWallToggle
 D vtable for CFunc_Dust
 D vtable for CFunc_DustCloud
 D vtable for CFunc_DustMotes
 D vtable for CFunc_LOD
 D vtable for CFunc_Portalled
 D vtable for CFunc_VPhysics_Clip_Watcher
 D vtable for CFunctor1<void (*)(CBaseEntity*), CBaseEntity*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor1<void (*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor2<void (*)(CFunctor**, unsigned int), CFunctor**, int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor2<void (*)(IPhysicsObject*, Vector const&), IPhysicsObject*, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor3<void (*)(IPhysicsObject*, Vector const&, Vector const&), IPhysicsObject*, Vector, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctor4<CBaseEntity* (*)(CBaseEntity*, CBaseEntity*, bool, float), CBaseEntity*, CBaseEntity*, bool, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CFunctorJob
 D vtable for CFutbolCatcher
 D vtable for CGCDev_NewItemRequestResponse
 D vtable for CGCMsgGetIPLocation
 D vtable for CGCMsgGetIPLocationResponse
 D vtable for CGCMsgGetSystemStats
 D vtable for CGCMsgGetSystemStatsResponse
 D vtable for CGCMsgMemCachedDelete
 D vtable for CGCMsgMemCachedGet
 D vtable for CGCMsgMemCachedGetResponse
 D vtable for CGCMsgMemCachedGetResponse_ValueTag
 D vtable for CGCMsgMemCachedSet
 D vtable for CGCMsgMemCachedSet_KeyPair
 D vtable for CGCMsgSystemStatsSchema
 D vtable for CGCReplicateConVars
 D vtable for CGCServerSystem
 D vtable for CGCStorePurchaseInit_LineItem
 D vtable for CGCUpdateConVar
 D vtable for CGCUpdateItemSchema
 D vtable for CGameDLL_ConVarAccessor
 D vtable for CGameEnd
 D vtable for CGameEventListener
 D vtable for CGameGibManager
 D vtable for CGameMovement
 D vtable for CGamePlayerEquip
 D vtable for CGamePlayerTeam
 D vtable for CGamePlayerZone
 D vtable for CGameResponseSystem
 D vtable for CGameRules
 D vtable for CGameRulesProxy
 D vtable for CGameScore
 D vtable for CGameStringPool
 D vtable for CGameText
 D vtable for CGameTimescale
 D vtable for CGameUI
 D vtable for CGameWeaponManager
 D vtable for CGenericActor
 D vtable for CGenericCycler
 D vtable for CGenericFlexCycler
 D vtable for CGenericNPC
 D vtable for CGib
 D vtable for CGibShooter
 D vtable for CGlobalEntityList
 D vtable for CGlobalEventLog
 D vtable for CGlobalState
 D vtable for CGrabController
 D vtable for CGrenadeBeam
 D vtable for CGrenadeBeamChaser
 D vtable for CGrenadeFrag
 D vtable for CGunTarget
 D vtable for CHFontProperty
 D vtable for CHL2EventLog
 D vtable for CHLPlayerMove
 D vtable for CHLTVDirector
 D vtable for CHalfLife2
 D vtable for CHalfLife2Proxy
 D vtable for CHandleDummy
 D vtable for CHandleTest
 D vtable for CHotPotato
 D vtable for CHotPotatoCatcher
 D vtable for CHotPotatoSocket
 D vtable for CHotPotatoSpawner
 D vtable for CHoverTurretTether
 D vtable for CIKSaveRestoreOps
 D vtable for CIPLocationInfo
 D vtable for CInfoCameraLink
 D vtable for CInfoGameEventProxy
 D vtable for CInfoInstructorHintTarget
 D vtable for CInfoIntermission
 D vtable for CInfoLadderDismount
 D vtable for CInfoLandmark
 D vtable for CInfoMassCenter
 D vtable for CInfoOverlayAccessor
 D vtable for CInfoPlacementHelper
 D vtable for CInfoPlacementManager
 D vtable for CInfoPortalScore
 D vtable for CInfoRemarkable
 D vtable for CInfoTarget
 D vtable for CInfoTargetEntityEnumerator
 D vtable for CInfoTargetPersonalitySphere
 D vtable for CInfo_Coop_Spawn
 D vtable for CInfo_Player_Ping_Detector
 D vtable for CInstancedResponseSystem
 D vtable for CInstancedSceneEntity
 D vtable for CIntProperty
 D vtable for CInventoryManager
 D vtable for CItem
 D vtable for CItemGeneration
 D vtable for CItemSelectionCriteria::CCondition
 D vtable for CItemSelectionCriteria::CFloatCondition
 D vtable for CItemSelectionCriteria::CSetCondition
 D vtable for CItemSelectionCriteria::CStringCondition
 D vtable for CItemSoda
 D vtable for CItemSuit
 D vtable for CItem_Nugget
 D vtable for CJob
 D vtable for CKeepUpright
 D vtable for CKeyValuesDumpContextAsDevMsg
 D vtable for CLabIndicatorPanel
 D vtable for CLagCompensationManager
 D vtable for CLaserCatcher
 D vtable for CLaserRelay
 D vtable for CLevelPlacardDisplay
 D vtable for CLight
 D vtable for CLightGlow
 D vtable for CLinkedPortalDoor
 D vtable for CLogicAchievement
 D vtable for CLogicActiveAutosave
 D vtable for CLogicAuto
 D vtable for CLogicAutosave
 D vtable for CLogicBranch
 D vtable for CLogicBranchList
 D vtable for CLogicCase
 D vtable for CLogicCollisionPair
 D vtable for CLogicCompare
 D vtable for CLogicCompareInteger
 D vtable for CLogicCoopManager
 D vtable for CLogicEventListener
 D vtable for CLogicLineToEntity
 D vtable for CLogicMeasureMovement
 D vtable for CLogicNavigation
 D vtable for CLogicPlayMovie
 D vtable for CLogicPlayerProxy
 D vtable for CLogicPlayerViewFinder
 D vtable for CLogicRandomOutputs
 D vtable for CLogicRegisterActivator
 D vtable for CLogicRelay
 D vtable for CLogicScript
 D vtable for CLogicTimeScale
 D vtable for CMP_LobbyScreen
 D vtable for CMapLoadEntityFilter
 D vtable for CMaterialModifyControl
 D vtable for CMathColorBlend
 D vtable for CMathCounter
 D vtable for CMathRemap
 D vtable for CMemberFunctor0<CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>*, void (CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor0<CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>*, void (CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor0<CPropCombineBall*, void (CPropCombineBall::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor1<CAI_Navigator*, bool (CAI_Navigator::*)(Vector const&), Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor1<CPortal_Base2D*, void (CPortal_Base2D::*)(CBaseEntity*), CBaseEntity*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor2<CAI_Navigator*, bool (CAI_Navigator::*)(AI_NavGoal_t const&, unsigned int), AI_NavGoal_t, unsigned int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor3<CBreakableProp*, void (CBreakableProp::*)(Vector const&, Vector const&, QAngle const&), Vector, Vector, QAngle, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemoryLog
 D vtable for CMessage
 D vtable for CMessageEntity
 D vtable for CModelPrecacheSystem
 D vtable for CModelSoundsCache
 D vtable for CModelSoundsCacheSaver
 D vtable for CMomentaryRotButton
 D vtable for CMortarShell
 D vtable for CMotorController
 D vtable for CMoveHelperServer
 D vtable for CMovementSpeedMod
 D vtable for CMovieDisplay
 D vtable for CMsgAMAddFreeLicense
 D vtable for CMsgAMAddFreeLicenseResponse
 D vtable for CMsgAMFindAccounts
 D vtable for CMsgAMFindAccountsResponse
 D vtable for CMsgAMGetLicenses
 D vtable for CMsgAMGetLicensesResponse
 D vtable for CMsgAMGetUserGameStats
 D vtable for CMsgAMGetUserGameStatsResponse
 D vtable for CMsgAMGetUserGameStatsResponse_Achievement_Blocks
 D vtable for CMsgAMGetUserGameStatsResponse_Stats
 D vtable for CMsgAMSendEmail
 D vtable for CMsgAMSendEmailResponse
 D vtable for CMsgAMSendEmail_PersonaNameReplacementToken
 D vtable for CMsgAMSendEmail_ReplacementToken
 D vtable for CMsgAdjustItemEquippedState
 D vtable for CMsgCommunityMapAddQueueHistoryEntry
 D vtable for CMsgCommunityMapItemVoteSummary
 D vtable for CMsgCommunityMapItemVoteSummaryResponse
 D vtable for CMsgConVarValue
 D vtable for CMsgDevDebugRollLootRequest
 D vtable for CMsgDevNewItemRequest
 D vtable for CMsgGCClientDisplayNotification
 D vtable for CMsgGCError
 D vtable for CMsgGCGetCommandList
 D vtable for CMsgGCGetCommandListResponse
 D vtable for CMsgGCGetEmailTemplate
 D vtable for CMsgGCGetEmailTemplateResponse
 D vtable for CMsgGCNameItemNotification
 D vtable for CMsgGCReportAbuse
 D vtable for CMsgGCReportAbuseResponse
 D vtable for CMsgGCStorePurchaseInit
 D vtable for CMsgGCStorePurchaseInitResponse
 D vtable for CMsgGameServerInfo
 D vtable for CMsgHttpRequest
 D vtable for CMsgHttpRequest_QueryParam
 D vtable for CMsgHttpRequest_RequestHeader
 D vtable for CMsgHttpResponse
 D vtable for CMsgHttpResponse_ResponseHeader
 D vtable for CMsgIncrementKillCountAttribute
 D vtable for CMsgInvitationCreated
 D vtable for CMsgInviteToParty
 D vtable for CMsgItemAcknowledged
 D vtable for CMsgKickFromParty
 D vtable for CMsgLeaveParty
 D vtable for CMsgNotifyWatchdog
 D vtable for CMsgPackageLicense
 D vtable for CMsgPartyInviteResponse
 D vtable for CMsgPlaytestMarkDemoForDelete
 D vtable for CMsgPlaytestMarkDemoNotNew
 D vtable for CMsgPlaytestRemoveDemo
 D vtable for CMsgPlaytestReportDemo
 D vtable for CMsgPlaytestReportDemoSession
 D vtable for CMsgPlaytestRetrieveDemoHandles
 D vtable for CMsgPlaytestRetrieveDemoHandlesResponse
 D vtable for CMsgPlaytestRetrieveDemoPlayersForMap
 D vtable for CMsgPlaytestRetrieveDemoPlayersForMapResponse
 D vtable for CMsgPlaytestRetrieveNewDemoCountResponse
 D vtable for CMsgPlaytestTestMessage
 D vtable for CMsgProtoBufHeader
 D vtable for CMsgReplayUploadedToYouTube
 D vtable for CMsgReplicateConVars
 D vtable for CMsgRequestInventoryRefresh
 D vtable for CMsgRequestItemSchemaData
 D vtable for CMsgSOCacheSubscribed
 D vtable for CMsgSOCacheSubscribed_SubscribedType
 D vtable for CMsgSOCacheSubscriptionCheck
 D vtable for CMsgSOCacheSubscriptionRefresh
 D vtable for CMsgSOCacheUnsubscribed
 D vtable for CMsgSOCacheVersion
 D vtable for CMsgSOMultipleObjects
 D vtable for CMsgSOMultipleObjects_SingleObject
 D vtable for CMsgSOSingleObject
 D vtable for CMsgSelectItemPresetForClass
 D vtable for CMsgSelectItemPresetForClassReply
 D vtable for CMsgServerAvailable
 D vtable for CMsgSetPresetItemPosition
 D vtable for CMsgSortItems
 D vtable for CMsgStoreGetUserData
 D vtable for CMsgStoreGetUserDataResponse
 D vtable for CMsgSystemBroadcast
 D vtable for CMsgUpdateItemSchema
 D vtable for CMsgUpdatePeriodicEvent
 D vtable for CMsgUseItem
 D vtable for CMsgWebAPIKey
 D vtable for CMsgWebAPIRequest
 D vtable for CMultiPlayerAnimState
 D vtable for CMultiSource
 D vtable for CMultiplayRules
 D vtable for CMultiplayer_Expresser
 D vtable for CNPCBaseInteractive<CAI_BaseNPC>
 D vtable for CNPCBaseInteractive<CAI_BasePhysicsFlyingBot>
 D vtable for CNPCEventResponseSystem
 D vtable for CNPCEventResponseSystemEntity
 D vtable for CNPCMaker
 D vtable for CNPCSpawnDestination
 D vtable for CNPC_Bullseye
 D vtable for CNPC_EnemyFinder
 D vtable for CNPC_EnemyFinderCombineCannon
 D vtable for CNPC_FloorTurret
 D vtable for CNPC_Furniture
 D vtable for CNPC_HoverTurret
 D vtable for CNPC_PersonalityCore
 D vtable for CNPC_Portal_FloorTurret
 D vtable for CNPC_RocketTurret
 D vtable for CNPC_SecurityCamera
 D vtable for CNPC_VehicleDriver
 D vtable for CNPC_Wheatley_Boss
 D vtable for CNavArea
 D vtable for CNavMesh
 D vtable for CNeurotoxinCountdown
 D vtable for CNewNPC
 D vtable for CNewRecharge
 D vtable for CNoHoliday
 D vtable for CNodeEnt
 D vtable for CNodeFilter
 D vtable for CNotifyList
 D vtable for CNuggetDirector
 D vtable for CNullEntity
 D vtable for COrHoliday
 D vtable for COrnamentProp
 D vtable for COuttroStats
 D vtable for CPASAttenuationFilter
 D vtable for CPASFilter
 D vtable for CPSCollisionEntity
 D vtable for CPS_AutoGameSys_EntityListener
 D vtable for CPVSFilter
 D vtable for CPVS_Extender
 D vtable for CPaintAffectedEntityList
 D vtable for CPaintBlob
 D vtable for CPaintCleanserManager
 D vtable for CPaintDatabase
 D vtable for CPaintSaveRestoreBlockHandler
 D vtable for CPaintSphere
 D vtable for CPaintSprayer
 D vtable for CPaintStream
 D vtable for CPaintStreamManager
 D vtable for CPaintableEntity<CBaseProjectedEntity>
 D vtable for CParticleFire
 D vtable for CParticleLight
 D vtable for CParticlePerformanceMonitor
 D vtable for CParticleSystem
 D vtable for CParticleSystemQuery
 D vtable for CPathCorner
 D vtable for CPathCornerCrash
 D vtable for CPathKeyFrame
 D vtable for CPathTrack
 D vtable for CPathfindNearestNodeFilter
 D vtable for CPhysBallSocket
 D vtable for CPhysBox
 D vtable for CPhysBoxMultiplayer
 D vtable for CPhysConstraint
 D vtable for CPhysConstraintEvents
 D vtable for CPhysConstraintSystem
 D vtable for CPhysConvert
 D vtable for CPhysExplosion
 D vtable for CPhysFixed
 D vtable for CPhysForce
 D vtable for CPhysHinge
 D vtable for CPhysImpact
 D vtable for CPhysLength
 D vtable for CPhysMagnet
 D vtable for CPhysMotor
 D vtable for CPhysObjSaveRestoreOps
 D vtable for CPhysPulley
 D vtable for CPhysSaveRestoreBlockHandler
 D vtable for CPhysSlideConstraint
 D vtable for CPhysSphere
 D vtable for CPhysThruster
 D vtable for CPhysTorque
 D vtable for CPhysicsCannister
 D vtable for CPhysicsCloneArea
 D vtable for CPhysicsEntitySolver
 D vtable for CPhysicsGameTrace
 D vtable for CPhysicsHook
 D vtable for CPhysicsNPCSolver
 D vtable for CPhysicsProp
 D vtable for CPhysicsPropMultiplayer
 D vtable for CPhysicsPropRespawnable
 D vtable for CPhysicsPushedEntities
 D vtable for CPhysicsShadowClone
 D vtable for CPhysicsShake
 D vtable for CPhysicsSpring
 D vtable for CPhysicsWind
 D vtable for CPhysicsWire
 D vtable for CPlasma
 D vtable for CPlatTrigger
 D vtable for CPlayerInfo
 D vtable for CPlayerInfoManager
 D vtable for CPlayerInventory
 D vtable for CPlayerLocalData
 D vtable for CPlayerLocalData::NetworkVar_m_PlayerFog
 D vtable for CPlayerLocalData::NetworkVar_m_audio
 D vtable for CPlayerLocalData::NetworkVar_m_skybox3d
 D vtable for CPlayerMove
 D vtable for CPlayerPickupController
 D vtable for CPlayerResource
 D vtable for CPlayerVoiceListener
 D vtable for CPluginBotManager
 D vtable for CPluginHelpersCheck
 D vtable for CPointAngleSensor
 D vtable for CPointAngularVelocitySensor
 D vtable for CPointBonusMapsAccessor
 D vtable for CPointBroadcastClientCommand
 D vtable for CPointCamera
 D vtable for CPointChangelevel
 D vtable for CPointClientCommand
 D vtable for CPointCombineBallLauncher
 D vtable for CPointCommentaryNode
 D vtable for CPointDevShotCamera
 D vtable for CPointEntity
 D vtable for CPointEntityFinder
 D vtable for CPointFutbolShooter
 D vtable for CPointGamestatsCounter
 D vtable for CPointHurt
 D vtable for CPointPlayerMoveConstraint
 D vtable for CPointProximitySensor
 D vtable for CPointServerCommand
 D vtable for CPointSpotlight
 D vtable for CPointSurvey
 D vtable for CPointTeleport
 D vtable for CPointTemplate
 D vtable for CPointTemplatePrecacher
 D vtable for CPointVelocitySensor
 D vtable for CPolyhedron_AllocByNew
 D vtable for CPolyhedron_LumpedMemory
 D vtable for CPolyhedron_TempMemory
 D vtable for CPortal2ItemDefinition
 D vtable for CPortal2ItemSchema
 D vtable for CPortal2ItemSystem
 D vtable for CPortal2ResearchDataTracker
 D vtable for CPortalButtonTrigger
 D vtable for CPortalCollideableEnumerator
 D vtable for CPortalCredits
 D vtable for CPortalGameMovement
 D vtable for CPortalGameRules
 D vtable for CPortalGameRulesProxy
 D vtable for CPortalGameStats
 D vtable for CPortalInventoryManager
 D vtable for CPortalLaser
 D vtable for CPortalLaserTarget
 D vtable for CPortalMPGameRules
 D vtable for CPortalMPGameRulesProxy
 D vtable for CPortalMPStats
 D vtable for CPortalMPStatsProxy
 D vtable for CPortalPlayerAnimState
 D vtable for CPortalPlayerInventory
 D vtable for CPortalPlayerLocalData
 D vtable for CPortalPlayerLocalData::NetworkVar_m_PaintedPowerTimer
 D vtable for CPortalPlayerModelPrecacher
 D vtable for CPortalPlayerShared
 D vtable for CPortalRaceCheckpoint
 D vtable for CPortalRagdoll
 D vtable for CPortalServerDllPropPortalLocator
 D vtable for CPortalSimulator
 D vtable for CPortalSimulator::NetworkVar_m_InternalData
 D vtable for CPortalSimulatorEventCallbacks
 D vtable for CPortalStatsController
 D vtable for CPortalVortexEffectManager
 D vtable for CPortal_Base2D
 D vtable for CPortal_Base2D::NetworkVar_m_PortalSimulator
 D vtable for CPortal_CollisionEvent
 D vtable for CPortal_Player
 D vtable for CPortal_Player::NetworkVar_m_PortalLocal
 D vtable for CPortal_Player::NetworkVar_m_Shared
 D vtable for CPortal_Player::NetworkVar_m_StatsThisLevel
 D vtable for CPortal_PointPush
 D vtable for CPortal_UI_Controller
 D vtable for CPoseController
 D vtable for CPostFrameNavigationHook
 D vtable for CPostProcessController
 D vtable for CPostProcessSystem
 D vtable for CPrecacheHandler
 D vtable for CPrecacheOtherList
 D vtable for CPrecacheRegister
 D vtable for CPrecipitation
 D vtable for CPrecipitationBlocker
 D vtable for CPredictedViewModel
 D vtable for CProceduralGenerator
 D vtable for CProjectedDecal
 D vtable for CProjectedTractorBeamEntity
 D vtable for CProjectedWallEntity
 D vtable for CProjectorCollideList
 D vtable for CPropButton
 D vtable for CPropCombineBall
 D vtable for CPropData
 D vtable for CPropDoorRotating
 D vtable for CPropEnergyBall
 D vtable for CPropExplodingFutbol
 D vtable for CPropFloorBallButton
 D vtable for CPropFloorButton
 D vtable for CPropFloorCubeButton
 D vtable for CPropFutbolSocket
 D vtable for CPropFutbolSpawner
 D vtable for CPropGladosCore
 D vtable for CPropGlassFutbol
 D vtable for CPropIndicatorPanel
 D vtable for CPropLinkedPortalDoor
 D vtable for CPropMonsterBox
 D vtable for CPropPaintBomb
 D vtable for CPropPersonalitySphere
 D vtable for CPropPhysicsPaintable
 D vtable for CPropPortalStatsDisplay
 D vtable for CPropRocketTripwire
 D vtable for CPropTelescopicArm
 D vtable for CPropTestChamberDoor
 D vtable for CPropTicTacToePanel
 D vtable for CPropTractorBeamProjector
 D vtable for CPropUnderButton
 D vtable for CPropUnderFloorButton
 D vtable for CPropVehicle
 D vtable for CPropVehicleChoreoGeneric
 D vtable for CPropVehicleChoreoGeneric::NetworkVar_m_vehicleView
 D vtable for CPropVehicleDriveable
 D vtable for CPropVehicleViewController
 D vtable for CPropWallProjector
 D vtable for CPropWeightedCube
 D vtable for CProp_Hallucination
 D vtable for CProp_Mirror
 D vtable for CProp_Portal
 D vtable for CProportionalFloatProperty
 D vtable for CProportionalIntProperty
 D vtable for CProportionalXPosProperty
 D vtable for CProportionalYPosProperty
 D vtable for CPushBlockerEnum
 D vtable for CPushable
 D vtable for CRagGib
 D vtable for CRagdollBoogie
 D vtable for CRagdollConstraint
 D vtable for CRagdollLRURetirement
 D vtable for CRagdollMagnet
 D vtable for CRagdollManager
 D vtable for CRagdollProp
 D vtable for CRagdollPropAttached
 D vtable for CRallyPoint
 D vtable for CRecharge
 D vtable for CRecipientFilter
 D vtable for CRegistry
 D vtable for CReliableBroadcastRecipientFilter
 D vtable for CRemarkableEntityList
 D vtable for CRemoteBugHelper
 D vtable for CRespawnEntitiesFilter
 D vtable for CResponseQueueManager
 D vtable for CResponseRulesToEngineInterface
 D vtable for CResponseSystemSaveRestoreOps
 D vtable for CRestore
 D vtable for CRevertSaved
 D vtable for CRocket_Turret_Projectile
 D vtable for CRopeAnchor
 D vtable for CRopeKeyframe
 D vtable for CRotButton
 D vtable for CRotDoor
 D vtable for CRotorWashShooter
 D vtable for CSOEconClaimCode
 D vtable for CSOEconGameAccountClient
 D vtable for CSOEconItem
 D vtable for CSOEconItemAttribute
 D vtable for CSOEconItemEquipped
 D vtable for CSOEconItemPresetInstance
 D vtable for CSOItemCommunityMap
 D vtable for CSOItemCriteria
 D vtable for CSOItemCriteriaCondition
 D vtable for CSOItemRecipe
 D vtable for CSOLobbyInvite
 D vtable for CSOPartyInvite
 D vtable for CSOSelectedItemPreset
 D vtable for CSave
 D vtable for CSaveRestoreBlockSet
 D vtable for CSceneEntity
 D vtable for CSceneFindMarkFilter
 D vtable for CSceneFindNearestMarkFilter
 D vtable for CSceneListManager
 D vtable for CSceneManager
 D vtable for CScenePrecacheSystem
 D vtable for CSceneTokenProcessor
 D vtable for CScriptIntro
 D vtable for CScriptedTarget
 D vtable for CServerBenchmark
 D vtable for CServerDLLSharedAppSystems
 D vtable for CServerGameClients
 D vtable for CServerGameDLL
 D vtable for CServerGameEnts
 D vtable for CServerGameTags
 D vtable for CServerNetworkProperty
 D vtable for CServerRagdollTrigger
 D vtable for CServerTools
 D vtable for CShadowControl
 D vtable for CSharedUtlVectorBase<BlobInterpolationData_t, CPaintStream::SharedVar_m_sharedBlobData>
 D vtable for CSharedVarBase<CThreadFastMutex, CPaintStream::SharedVar_m_sharedBlobDataMutex>
 D vtable for CSharedVarBase<CUtlVector<BlobInterpolationData_t, CUtlMemory<BlobInterpolationData_t, int> >, CPaintStream::SharedVar_m_sharedBlobData>
 D vtable for CShower
 D vtable for CSimThinkManager
 D vtable for CSimplePhysicsBrush
 D vtable for CSimplePhysicsProp
 D vtable for CSingleDayHoliday
 D vtable for CSingleUserRecipientFilter
 D vtable for CSingleplayRules
 D vtable for CSkipKeys
 D vtable for CSkyCamera
 D vtable for CSkyboxSwapper
 D vtable for CSlideshowDisplay
 D vtable for CSmallTextEntry
 D vtable for CSmokeStack
 D vtable for CSolidSetDefaults
 D vtable for CSoundControllerImp
 D vtable for CSoundEmitterSystem
 D vtable for CSoundEnt
 D vtable for CSoundEnvelopeController
 D vtable for CSoundPatchSaveRestoreOps
 D vtable for CSoundscapeSystem
 D vtable for CSpatialEntity
 D vtable for CSpeaker
 D vtable for CSpotlightEnd
 D vtable for CSprayCan
 D vtable for CSprite
 D vtable for CSpriteOriented
 D vtable for CSpriteTrail
 D vtable for CStaticCollisionPolyhedronCache
 D vtable for CStatueProp
 D vtable for CStdStringSaveRestoreOps
 D vtable for CSteamJet
 D vtable for CSteamWorksGameStatsUploader
 D vtable for CStringProperty
 D vtable for CStringTableSaveRestoreOps
 D vtable for CStripWeapons
 D vtable for CSun
 D vtable for CSunlightShadowControl
 D vtable for CTEAntlionDust
 D vtable for CTEArmorRicochet
 D vtable for CTEBSPDecal
 D vtable for CTEBaseBeam
 D vtable for CTEBeamEntPoint
 D vtable for CTEBeamEnts
 D vtable for CTEBeamFollow
 D vtable for CTEBeamLaser
 D vtable for CTEBeamPoints
 D vtable for CTEBeamRing
 D vtable for CTEBeamRingPoint
 D vtable for CTEBeamSpline
 D vtable for CTEBloodSprite
 D vtable for CTEBloodStream
 D vtable for CTEBreakModel
 D vtable for CTEBubbleTrail
 D vtable for CTEBubbles
 D vtable for CTEClientProjectile
 D vtable for CTEDecal
 D vtable for CTEDust
 D vtable for CTEDynamicLight
 D vtable for CTEEffectDispatch
 D vtable for CTEEnergySplash
 D vtable for CTEExplosion
 D vtable for CTEFizz
 D vtable for CTEFootprintDecal
 D vtable for CTEFoundryHelpers
 D vtable for CTEGaussExplosion
 D vtable for CTEGlowSprite
 D vtable for CTEImpact
 D vtable for CTEKillPlayerAttachments
 D vtable for CTELargeFunnel
 D vtable for CTEMetalSparks
 D vtable for CTEMuzzleFlash
 D vtable for CTEPhysicsProp
 D vtable for CTEPlayerAnimEvent
 D vtable for CTEPlayerDecal
 D vtable for CTEProjectedDecal
 D vtable for CTEShatterSurface
 D vtable for CTEShowLine
 D vtable for CTESmoke
 D vtable for CTESparks
 D vtable for CTESprite
 D vtable for CTESpriteSpray
 D vtable for CTEWallPaintedEvent
 D vtable for CTEWorldDecal
 D vtable for CTankTargetChange
 D vtable for CTankTrainAI
 D vtable for CTargetCDAudioRep
 D vtable for CTargetChangeGravity
 D vtable for CTeam
 D vtable for CTeamSpawnPoint
 D vtable for CTeamVehicleSpawnPoint
 D vtable for CTeamplayRules
 D vtable for CTempEntTester
 D vtable for CTempEntsSystem
 D vtable for CTemplateNPCMaker
 D vtable for CTemplate_SaveRestoreBlockHandler
 D vtable for CTemplatesHook
 D vtable for CTesla
 D vtable for CTestEffect
 D vtable for CTestTraceline
 D vtable for CTest_ProxyToggle_Networkable
 D vtable for CTextureIdProperty
 D vtable for CTextureToggle
 D vtable for CThinkContextsSaveDataOps
 D vtable for CThrustController
 D vtable for CTimerEntity
 D vtable for CTonemapSystem
 D vtable for CTonemapTrigger
 D vtable for CToolFrameworkServer
 D vtable for CTraceFilterAgainstEntityList
 D vtable for CTraceFilterCollisionGroupDelta
 D vtable for CTraceFilterDoor
 D vtable for CTraceFilterEntity
 D vtable for CTraceFilterEntityIgnoreOther
 D vtable for CTraceFilterGroundEntities
 D vtable for CTraceFilterHitAll
 D vtable for CTraceFilterLOS
 D vtable for CTraceFilterMelee
 D vtable for CTraceFilterNav
 D vtable for CTraceFilterNoCombatCharacters
 D vtable for CTraceFilterNoNPCsOrPlayer
 D vtable for CTraceFilterNoPlayers
 D vtable for CTraceFilterOnlyHitThis
 D vtable for CTraceFilterOnlyNPCsAndPlayer
 D vtable for CTraceFilterPlayersNPCs
 D vtable for CTraceFilterPlayersNPCsPhysicsProps
 D vtable for CTraceFilterPushFinal
 D vtable for CTraceFilterPushMove
 D vtable for CTraceFilterSimple
 D vtable for CTraceFilterSimpleClassnameList
 D vtable for CTraceFilterSimpleList
 D vtable for CTraceFilterSkipNPCs
 D vtable for CTraceFilterSkipTwoEntities
 D vtable for CTraceFilterSkipTwoEntitiesAndTeammates
 D vtable for CTraceFilterTranslateClones
 D vtable for CTraceFilterValidForDecal
 D vtable for CTraceFilterWalkableEntities
 D vtable for CTraceFilterWorldAndPropsOnly
 D vtable for CTraceFilterWorldOnly
 D vtable for CTracePassFilter
 D vtable for CTraceTypeWrapper
 D vtable for CTractorBeam_Manager
 D vtable for CTransformedCollideable
 D vtable for CTriggerAutoCrouch
 D vtable for CTriggerBrush
 D vtable for CTriggerCDAudio
 D vtable for CTriggerCamera
 D vtable for CTriggerCameraMultiplayer
 D vtable for CTriggerCatapult
 D vtable for CTriggerGravity
 D vtable for CTriggerHierarchy
 D vtable for CTriggerHurt
 D vtable for CTriggerImpact
 D vtable for CTriggerLook
 D vtable for CTriggerMultiple
 D vtable for CTriggerOnce
 D vtable for CTriggerPaintCleanser
 D vtable for CTriggerPhysicsTrap
 D vtable for CTriggerPingDetector
 D vtable for CTriggerPlayerMovement
 D vtable for CTriggerPlayerTeam
 D vtable for CTriggerPortalCleanser
 D vtable for CTriggerProximity
 D vtable for CTriggerPush
 D vtable for CTriggerRPGFire
 D vtable for CTriggerRemove
 D vtable for CTriggerSave
 D vtable for CTriggerSoundscape
 D vtable for CTriggerTeleport
 D vtable for CTriggerToggleSave
 D vtable for CTriggerTraceEnum
 D vtable for CTriggerVPhysicsMotion
 D vtable for CTriggerViewProxy
 D vtable for CTriggerVolume
 D vtable for CTriggerWateryDeath
 D vtable for CTriggerWeaponDissolve
 D vtable for CTriggerWeaponStrip
 D vtable for CTriggerWind
 D vtable for CTrigger_TractorBeam
 D vtable for CTurretTipController
 D vtable for CUsePushFilter
 D vtable for CUserCmd
 D vtable for CUtlCStringConversion
 D vtable for CUtlCachedFileData<CModelSoundsCache>
 D vtable for CUtlCharConversion
 D vtable for CUtlMapDataOps<CUtlMap<string_t, CSimpleSimTimer, char>, 2, 10>
 D vtable for CUtlNoEscConversion
 D vtable for CUtlSymbolDataOps
 D vtable for CUtlVectorDataOps<CAI_InterestTarget, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >, 12>
 D vtable for CUtlVectorDataOps<CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >, 13>
 D vtable for CUtlVectorDataOps<CUtlVector<CHandle<CBaseCombatWeapon>, CUtlMemory<CHandle<CBaseCombatWeapon>, int> >, 13>
 D vtable for CUtlVectorDataOps<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, 13>
 D vtable for CUtlVectorDataOps<CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >, 13>
 D vtable for CUtlVectorDataOps<CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >, 13>
 D vtable for CUtlVectorDataOps<CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >, 13>
 D vtable for CUtlVectorDataOps<CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >, 13>
 D vtable for CUtlVectorDataOps<CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >, 13>
 D vtable for CUtlVectorDataOps<CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >, 13>
 D vtable for CUtlVectorDataOps<CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<Vector, CUtlMemory<Vector, int> >, 3>
 D vtable for CUtlVectorDataOps<CUtlVector<float, CUtlMemory<float, int> >, 16>
 D vtable for CUtlVectorDataOps<CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>
 D vtable for CUtlVectorDataOps<CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<string_t, CUtlMemory<string_t, int> >, 2>
 D vtable for CUtlVectorDataOps<CUtlVector<template_t, CUtlMemory<template_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >, 10>
 D vtable for CVGuiScreen
 D vtable for CVScriptGameSystem
 D vtable for CVScriptSaveRestoreBlockHandler
 D vtable for CVarBitVecSaveRestoreOps<CBitVec<32> >
 D vtable for CVariantSaveDataOps
 D vtable for CVehicleChoreoViewParser
 D vtable for CVehicleSoundsParser
 D vtable for CVisibilityMonitor
 D vtable for CVoiceGameMgr
 D vtable for CVoiceGameMgrHelper
 D vtable for CWC_UpdateIgnoreList
 D vtable for CWaterBullet
 D vtable for CWaterLODControl
 D vtable for CWateryDeathLeech
 D vtable for CWeaponCubemap
 D vtable for CWeaponCycler
 D vtable for CWeaponItemBase
 D vtable for CWeaponLOSFilter
 D vtable for CWeaponList
 D vtable for CWeaponPortalBase
 D vtable for CWeaponPortalgun
 D vtable for CWeaponPromoAntennaBall
 D vtable for CWeaponPromoAntennaEgg
 D vtable for CWeaponPromoHelmetBall
 D vtable for CWeaponPromoHelmetEgg
 D vtable for CWeeksBasedHoliday
 D vtable for CWeightButton
 D vtable for CWindowPane
 D vtable for CWorld
 D vtable for CWorldItem
 D vtable for CWreckage
 D vtable for CheckImage
 D vtable for CleanserVortexTraceEnum
 D vtable for ClientGamePrecachePrecache::CResourcePrecacher
 D vtable for ClientPrecachePrecache::CResourcePrecacher
 D vtable for ColumnButton
 D vtable for ConCommand
 D vtable for ConVar
 D vtable for CountdownTimer
 D vtable for DamageDatabase
 D vtable for DelayedSchemaData_GCDirectData
 D vtable for DelayedSchemaData_HTTPResponseData
 D vtable for Dragger
 D vtable for DustTrail
 D vtable for EffectsPrecachePrecache::CResourcePrecacher
 D vtable for EntityParticleTrailInfo_t
 D vtable for FileWeaponInfo_t
 D vtable for FilterDamageType
 D vtable for FilterTeam
 D vtable for FizzlerEffects
 D vtable for FizzlerMultiOriginSoundPlayer
 D vtable for GCSDK::CGCClient
 D vtable for GCSDK::CGCClientSharedObjectCache
 D vtable for GCSDK::CGCClientSharedObjectTypeCache
 D vtable for GCSDK::CGCMsg<MsgGCVerifyCacheSubscription_t>
 D vtable for GCSDK::CGCSOCacheSubscribedJob
 D vtable for GCSDK::CGCSOCacheSubscriptionCheck
 D vtable for GCSDK::CGCSOCacheUnsubscribedJob
 D vtable for GCSDK::CGCSOCreateJob
 D vtable for GCSDK::CGCSODestroyJob
 D vtable for GCSDK::CGCSOUpdateJob
 D vtable for GCSDK::CGCSOUpdateMultipleJob
 D vtable for GCSDK::CJob
 D vtable for GCSDK::CMsgBase_t<GCSDK::GCMsgHdrEx_t>
 D vtable for GCSDK::CProtoBufGCClientSendHandler
 D vtable for GCSDK::CProtoBufMsg<CMsgConVarValue>
 D vtable for GCSDK::CProtoBufMsg<CMsgReplicateConVars>
 D vtable for GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>
 D vtable for GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>
 D vtable for GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>
 D vtable for GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>
 D vtable for GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>
 D vtable for GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>
 D vtable for GCSDK::CProtoBufMsg<CMsgSOSingleObject>
 D vtable for GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgConVarValue>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgProtoBufHeader>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgReplicateConVars>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgRequestItemSchemaData>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscribed>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionCheck>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionRefresh>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheUnsubscribed>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgSOMultipleObjects>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgSOSingleObject>
 D vtable for GCSDK::CProtoBufMsgMemoryPool<CMsgUpdateItemSchema>
 D vtable for GCSDK::CProtoBufNetPacket
 D vtable for GCSDK::CRefCount
 D vtable for GCSDK::CSharedObjectCache
 D vtable for GCSDK::CSharedObjectTypeCache
 D vtable for GCSDK::CStructNetPacket
 D vtable for HidingSpot
 D vtable for HitBoxDamagedEntity<PlayerPickupPaintPowerUser<CNPC_FloorTurret> >
 D vtable for IDecalEmitterSystem
 D vtable for IGameStatTracker::CGameStatList<SCatapultData>
 D vtable for IGameStatTracker::CGameStatList<SDeaths>
 D vtable for IGameStatTracker::CGameStatList<SFizzledData>
 D vtable for IGameStatTracker::CGameStatList<SMPMapStats>
 D vtable for IGameStatTracker::CGameStatList<SPortalData>
 D vtable for IGameStatTracker::CGameStatList<SPuzzleData>
 D vtable for IGameStatTracker::CGameStatList<SStuckPlayers>
 D vtable for IGameStatTracker::CGameStatList<STaunts>
 D vtable for IGameStatTracker::CGameStatList<STractorBeamData>
 D vtable for IGameSystem
 D vtable for IGameSystemPerFrame
 D vtable for IMotionEvent
 D vtable for IPaintStreamAutoList
 D vtable for IPortalLaserAutoList
 D vtable for IPredictionSystem
 D vtable for IProjectedWallEntityAutoList
 D vtable for IPropWeightedCubeAutoList
 D vtable for ITriggerCatapultAutoList
 D vtable for ITriggerPortalCleanserAutoList
 D vtable for ITriggerTractorBeamAutoList
 D vtable for IntervalTimer
 D vtable for MaterialIndexDataOpsProxy
 D vtable for MenuItemCheckImage
 D vtable for MovieExplosion
 D vtable for PS_InternalData_t
 D vtable for PS_InternalData_t::NetworkVar_Simulation
 D vtable for PS_SimulationData_t
 D vtable for PaintPowerInfo_t
 D vtable for PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >
 D vtable for PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >
 D vtable for PaintPowerUser<CPaintableEntity<CPhysicsProp> >
 D vtable for ParticleSmokeGrenade
 D vtable for PhysFrictionEffectPrecache::CResourcePrecacher
 D vtable for PlayerPickupPaintPowerUser<CPhysicsProp>
 D vtable for PrecachePointCommentaryNodePrecache::CResourcePrecacher
 D vtable for ProjectedEntityAmbientSoundProxy
 D vtable for RR::CApplyContextOperator
 D vtable for RR::CDecrementOperator
 D vtable for RR::CIncrementOperator
 D vtable for RR::CToggleOperator
 D vtable for RadioImage
 D vtable for ResponseRules::CResponseSystem
 D vtable for RocketTrail
 D vtable for SendProp
 D vtable for SmokeTrail
 D vtable for SporeExplosion
 D vtable for SporeTrail
 D vtable for WeaponResourcesPrecache::CResourcePrecacher
 D vtable for entityflamePrecache::CResourcePrecacher
 D vtable for env_entity_freezingPrecache::CResourcePrecacher
 D vtable for fogparams_t
 D vtable for locksound_t
 D vtable for sky3dparams_t
 D vtable for sky3dparams_t::NetworkVar_fog
 D vtable for spraycanPrecache::CResourcePrecacher
 D vtable for vehicle_crashsound_t
 D vtable for vehicle_gear_t
 D vtable for vehiclesounds_t
 D vtable for vehicleview_t
 D vtable for vgui::AnimatingImagePanel
 D vtable for vgui::AnimationController
 D vtable for vgui::BaseTooltip
 D vtable for vgui::BuildGroup
 D vtable for vgui::BuildModeDialog
 D vtable for vgui::Button
 D vtable for vgui::CBitmapImagePanel
 D vtable for vgui::CTreeViewListControl
 D vtable for vgui::CheckButton
 D vtable for vgui::CircularProgressBar
 D vtable for vgui::ClickPanel
 D vtable for vgui::ComboBox
 D vtable for vgui::ComboBoxButton
 D vtable for vgui::ContinuousProgressBar
 D vtable for vgui::CvarToggleCheckButton<ConVarRef>
 D vtable for vgui::Divider
 D vtable for vgui::EditablePanel
 D vtable for vgui::ExpandButton
 D vtable for vgui::FocusNavGroup
 D vtable for vgui::Frame
 D vtable for vgui::FrameButton
 D vtable for vgui::FrameSystemButton
 D vtable for vgui::GraphPanel
 D vtable for vgui::IClientPanel
 D vtable for vgui::Image
 D vtable for vgui::ImagePanel
 D vtable for vgui::Label
 D vtable for vgui::ListPanel
 D vtable for vgui::ListViewItem
 D vtable for vgui::ListViewPanel
 D vtable for vgui::Menu
 D vtable for vgui::MenuBar
 D vtable for vgui::MenuButton
 D vtable for vgui::MenuItem
 D vtable for vgui::MenuSeparator
 D vtable for vgui::MessageBox
 D vtable for vgui::Panel
 D vtable for vgui::PanelListPanel
 D vtable for vgui::ProgressBar
 D vtable for vgui::RadioButton
 D vtable for vgui::RichText
 D vtable for vgui::RichTextInterior
 D vtable for vgui::ScalableImagePanel
 D vtable for vgui::ScrollBar
 D vtable for vgui::ScrollBarSlider
 D vtable for vgui::TextEntry
 D vtable for vgui::TextImage
 D vtable for vgui::TextTooltip
 D vtable for vgui::ToggleButton
 D vtable for vgui::TreeNode
 D vtable for vgui::TreeNodeDropPanel
 D vtable for vgui::TreeNodeImage
 D vtable for vgui::TreeNodeText
 D vtable for vgui::TreeView
 D vtable for vgui::TreeViewSubPanel
 D vtable for vgui::URLLabel
 D vtable for vgui_screenPrecache::CResourcePrecacher
 D vtable for weapon_portalgunPrecache::CResourcePrecacher
 D vtable for weapon_promo_antenna_ballPrecache::CResourcePrecacher
 D vtable for weapon_promo_antenna_eggPrecache::CResourcePrecacher
 D vtable for weapon_promo_helmet_ballPrecache::CResourcePrecacher
 D vtable for weapon_promo_helmet_eggPrecache::CResourcePrecacher
 D vtable for wearable_itemPrecache::CResourcePrecacher
 DevMsg
 DevMsg(char const*, ...)
 DevWarning
 DevWarning(char const*, ...)
 DoNewAssertDialog
 Error
 GenericThreadLocals::CThreadLocalBase::CThreadLocalBase()
 GenericThreadLocals::CThreadLocalBase::Get() const
 GenericThreadLocals::CThreadLocalBase::Set(void*)
 GenericThreadLocals::CThreadLocalBase::~CThreadLocalBase()
 GetCPUInformation
 KeyValuesSystem
 LoggingSystem_AddTagToCurrentChannel
 LoggingSystem_IsChannelEnabled
 LoggingSystem_Log
 LoggingSystem_Log(int, LoggingSeverity_t, Color, char const*, ...)
 LoggingSystem_LogAssert
 LoggingSystem_RegisterLoggingChannel
 MemAllocScratch
 MemFreeScratch
 Msg
 Plat_ConvertToLocalTime
 Plat_ExitProcess
 Plat_FloatTime
 Plat_GetLocalTime
 Plat_IsInBenchmarkMode
 Plat_IsInDebugSession
 Plat_MSTime
 Plat_SetBenchmarkMode
 Plat_gmtime
 Plat_timegm
 R CBitBuffer::s_nMaskTable
 R CLogicScript::RunVScripts()::szAddCode
 R Four_2ToThe23s
 R Four_DegToRad
 R Four_Epsilons
 R Four_FLT_MAX
 R Four_NegativeOnes
 R Four_Negative_FLT_MAX
 R Four_Ones
 R Four_PointFives
 R Four_Threes
 R Four_Zeros
 R PS_SD_Static_World_StaticProps_ClippedProp_t::iTraceSurfaceFlags
 R g_SIMD_ComponentMask
 R g_SIMD_Identity
 R g_SIMD_clear_signmask
 R g_SIMD_clear_wmask
 R g_SIMD_signmask
 R nanmask
 R typeinfo name for AR2Explosion
 R typeinfo name for BlobTraceEnum
 R typeinfo name for CAISound
 R typeinfo name for CAI_ActBusyBehavior
 R typeinfo name for CAI_ActBusyGoal
 R typeinfo name for CAI_ActBusyQueueGoal
 R typeinfo name for CAI_AllySpeechManager
 R typeinfo name for CAI_AssaultBehavior
 R typeinfo name for CAI_AssaultGoal
 R typeinfo name for CAI_BaseActor
 R typeinfo name for CAI_BaseHumanoid
 R typeinfo name for CAI_BaseNPC
 R typeinfo name for CAI_BasePhysicsFlyingBot
 R typeinfo name for CAI_BattleLine
 R typeinfo name for CAI_Behavior<CAI_BaseNPC, 100000>
 R typeinfo name for CAI_BehaviorBase
 R typeinfo name for CAI_BehaviorHost<CAI_BaseNPC>
 R typeinfo name for CAI_BehaviorHostBase<CAI_BaseNPC>
 R typeinfo name for CAI_BlendedMotor
 R typeinfo name for CAI_BlendingHost<CAI_BehaviorHost<CAI_BaseNPC> >
 R typeinfo name for CAI_ChangeHintGroup
 R typeinfo name for CAI_ChangeTarget
 R typeinfo name for CAI_Component
 R typeinfo name for CAI_ComponentWithOuter<CAI_BaseNPC, CAI_BehaviorBase>
 R typeinfo name for CAI_DefMovementSink
 R typeinfo name for CAI_DynamicLink
 R typeinfo name for CAI_DynamicLinkController
 R typeinfo name for CAI_EnemiesListSaveRestoreOps
 R typeinfo name for CAI_Expresser
 R typeinfo name for CAI_ExpresserHost<CAI_BaseHumanoid>
 R typeinfo name for CAI_ExpresserHost<CBasePlayer>
 R typeinfo name for CAI_ExpresserHost<CFlexExpresserShim>
 R typeinfo name for CAI_ExpresserSink
 R typeinfo name for CAI_ExpresserWithFollowup
 R typeinfo name for CAI_FightFromCoverBehavior
 R typeinfo name for CAI_FightFromCoverGoal
 R typeinfo name for CAI_FollowBehavior
 R typeinfo name for CAI_FollowGoal
 R typeinfo name for CAI_FreePass
 R typeinfo name for CAI_FuncTankBehavior
 R typeinfo name for CAI_GoalEntity
 R typeinfo name for CAI_Hint
 R typeinfo name for CAI_LeadBehavior
 R typeinfo name for CAI_LeadBehaviorHandler
 R typeinfo name for CAI_LeadGoal
 R typeinfo name for CAI_LeadGoal_Weapon
 R typeinfo name for CAI_LocalNavigator
 R typeinfo name for CAI_MappedActivityBehavior_Temporary
 R typeinfo name for CAI_Motor
 R typeinfo name for CAI_MoveAndShootOverlay
 R typeinfo name for CAI_MoveProbe
 R typeinfo name for CAI_NavInHintGroupFilter
 R typeinfo name for CAI_Navigator
 R typeinfo name for CAI_Network
 R typeinfo name for CAI_NetworkManager
 R typeinfo name for CAI_Pathfinder
 R typeinfo name for CAI_PlayerAlly
 R typeinfo name for CAI_ProxyMovementSink
 R typeinfo name for CAI_RadialLinkController
 R typeinfo name for CAI_Relationship
 R typeinfo name for CAI_SaveRestoreBlockHandler
 R typeinfo name for CAI_ScriptConditions
 R typeinfo name for CAI_ScriptedSchedule
 R typeinfo name for CAI_ScriptedSentence
 R typeinfo name for CAI_ScriptedSequence
 R typeinfo name for CAI_SensedObjectsManager
 R typeinfo name for CAI_Senses
 R typeinfo name for CAI_SpeechFilter
 R typeinfo name for CAI_StandoffBehavior
 R typeinfo name for CAI_StandoffGoal
 R typeinfo name for CAI_SystemHook
 R typeinfo name for CAI_TacticalServices
 R typeinfo name for CAI_TestHull
 R typeinfo name for CActBusyAnimData
 R typeinfo name for CActivityDataOps
 R typeinfo name for CAimTargetManager
 R typeinfo name for CAmbientGeneric
 R typeinfo name for CAmmoDef
 R typeinfo name for CAnchorList
 R typeinfo name for CAreaPortal
 R typeinfo name for CAssaultPoint
 R typeinfo name for CAttributeContainer
 R typeinfo name for CAttributeContainer::NetworkVar_m_Item
 R typeinfo name for CAttributeList
 R typeinfo name for CAttributeManager
 R typeinfo name for CAutoGameSystem
 R typeinfo name for CAutoGameSystemPerFrame
 R typeinfo name for CBaseAnimating
 R typeinfo name for CBaseAnimatingOverlay
 R typeinfo name for CBaseAnimatingProjectile
 R typeinfo name for CBaseAppSystem<IParticleSystemQuery>
 R typeinfo name for CBaseButton
 R typeinfo name for CBaseCombatCharacter
 R typeinfo name for CBaseCombatWeapon
 R typeinfo name for CBaseDMStart
 R typeinfo name for CBaseDoor
 R typeinfo name for CBaseEntity
 R typeinfo name for CBaseEntity*
 R typeinfo name for CBaseEntity::NetworkVar_m_Collision
 R typeinfo name for CBaseEntityClassList
 R typeinfo name for CBaseEntityList
 R typeinfo name for CBaseEntityScriptInstanceHelper
 R typeinfo name for CBaseFilter
 R typeinfo name for CBaseFire
 R typeinfo name for CBaseFlex
 R typeinfo name for CBaseGameStats
 R typeinfo name for CBaseGameStats_Driver
 R typeinfo name for CBaseGameSystem
 R typeinfo name for CBaseGameSystemPerFrame
 R typeinfo name for CBaseGrenade
 R typeinfo name for CBaseGrenadeConcussion
 R typeinfo name for CBaseGrenadeContact
 R typeinfo name for CBaseGrenadeTimed
 R typeinfo name for CBaseHLCombatWeapon
 R typeinfo name for CBaseMoveBehavior
 R typeinfo name for CBaseMultiplayerPlayer
 R typeinfo name for CBaseNPCMaker
 R typeinfo name for CBasePaintBlob
 R typeinfo name for CBaseParticleEntity
 R typeinfo name for CBasePlatTrain
 R typeinfo name for CBasePlayer
 R typeinfo name for CBasePlayer::NetworkVar_m_Local
 R typeinfo name for CBasePlayer::NetworkVar_m_PlayerFog
 R typeinfo name for CBasePlayer::NetworkVar_pl
 R typeinfo name for CBasePortalCombatWeapon
 R typeinfo name for CBaseProjectedEntity
 R typeinfo name for CBaseProjectile
 R typeinfo name for CBaseProjector
 R typeinfo name for CBaseProp
 R typeinfo name for CBasePropDoor
 R typeinfo name for CBaseResourcePrecacher
 R typeinfo name for CBaseServerVehicle
 R typeinfo name for CBaseSpriteProjectile
 R typeinfo name for CBaseTempEntity
 R typeinfo name for CBaseToggle
 R typeinfo name for CBaseTrigger
 R typeinfo name for CBaseVPhysicsTrigger
 R typeinfo name for CBaseViewModel
 R typeinfo name for CBeam
 R typeinfo name for CBeamSpotlight
 R typeinfo name for CBlendingCycler
 R typeinfo name for CBlood
 R typeinfo name for CBloodSplat
 R typeinfo name for CBoneFollower
 R typeinfo name for CBoolProperty
 R typeinfo name for CBotCmd
 R typeinfo name for CBreakModelsPrecached
 R typeinfo name for CBreakParser
 R typeinfo name for CBreakable
 R typeinfo name for CBreakableProp
 R typeinfo name for CBreakableSurface
 R typeinfo name for CBroadcastRecipientFilter
 R typeinfo name for CBrushEntityList
 R typeinfo name for CBubbling
 R typeinfo name for CBuildModeNavCombo
 R typeinfo name for CBulletsTraceFilter
 R typeinfo name for CBullseyeList
 R typeinfo name for CCallResult<CGCUpdateItemSchema, HTTPRequestCompleted_t>
 R typeinfo name for CCallback<CGCServerSystem, SteamServersConnected_t, true>
 R typeinfo name for CCallback<CSteamWorksGameStatsUploader, GameStatsSessionClosed_t, true>
 R typeinfo name for CCallback<CSteamWorksGameStatsUploader, GameStatsSessionIssued_t, true>
 R typeinfo name for CCallback<GCSDK::CGCClient, GCMessageAvailable_t, false>
 R typeinfo name for CCallbackBase
 R typeinfo name for CCallbackImpl<12>
 R typeinfo name for CCallbackImpl<16>
 R typeinfo name for CCallbackImpl<1>
 R typeinfo name for CCallbackImpl<4>
 R typeinfo name for CCatcher
 R typeinfo name for CChallengeModeEndNode
 R typeinfo name for CChallengeModeEndNodeKeys
 R typeinfo name for CChangeLevel
 R typeinfo name for CCheckClient
 R typeinfo name for CChildOperatorDefinition
 R typeinfo name for CChoreoEvent
 R typeinfo name for CChoreoGenericServerVehicle
 R typeinfo name for CChoreoScene
 R typeinfo name for CChoreoStringPool
 R typeinfo name for CCitadelEnergyCore
 R typeinfo name for CClassPtrSaveRestoreOps
 R typeinfo name for CCleanupDefaultRelationShips
 R typeinfo name for CCollisionEvent
 R typeinfo name for CCollisionProperty
 R typeinfo name for CColorCorrection
 R typeinfo name for CColorCorrectionSystem
 R typeinfo name for CColorCorrectionVolume
 R typeinfo name for CColorProperty
 R typeinfo name for CCombatCharVisCache
 R typeinfo name for CCommentaryAuto
 R typeinfo name for CCommentarySystem
 R typeinfo name for CCommentaryViewPosition
 R typeinfo name for CCommentary_SaveRestoreBlockHandler
 R typeinfo name for CCommunity_GamePersonalDataCategoryInfo
 R typeinfo name for CCommunity_GetGamePersonalDataCategories_Request
 R typeinfo name for CCommunity_GetGamePersonalDataCategories_Response
 R typeinfo name for CCommunity_GetGamePersonalDataEntries_Request
 R typeinfo name for CCommunity_GetGamePersonalDataEntries_Response
 R typeinfo name for CCommunity_TerminateGamePersonalDataEntries_Request
 R typeinfo name for CCommunity_TerminateGamePersonalDataEntries_Response
 R typeinfo name for CConceptHistoriesDataOps
 R typeinfo name for CConstantForceController
 R typeinfo name for CConstraintAnchor
 R typeinfo name for CCopyRecipientFilter
 R typeinfo name for CCorpse
 R typeinfo name for CCredits
 R typeinfo name for CCubeRotationController
 R typeinfo name for CCycler
 R typeinfo name for CCyclicalHoliday
 R typeinfo name for CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>
 R typeinfo name for CDataManagerBase
 R typeinfo name for CDataObjectAccessSystem
 R typeinfo name for CDateBasedHoliday
 R typeinfo name for CDebugHistory
 R typeinfo name for CDecal
 R typeinfo name for CDecalEmitterSystem
 R typeinfo name for CDefSaveRestoreBlockHandler
 R typeinfo name for CDefSaveRestoreOps
 R typeinfo name for CDefaultAccessor
 R typeinfo name for CDefaultParticleSystemQuery
 R typeinfo name for CDefaultPlayerPickupVPhysics
 R typeinfo name for CDefaultResponseSystem
 R typeinfo name for CDefaultResponseSystemSaveRestoreBlockHandler
 R typeinfo name for CDetailBlocker
 R typeinfo name for CDevShotSystem
 R typeinfo name for CDirtySpatialPartitionEntityList
 R typeinfo name for CDllDemandLoader
 R typeinfo name for CDragDropHelperPanel
 R typeinfo name for CDynamicLight
 R typeinfo name for CDynamicProp
 R typeinfo name for CEconCraftingRecipeDefinition
 R typeinfo name for CEconEntity
 R typeinfo name for CEconEntity::NetworkVar_m_AttributeManager
 R typeinfo name for CEconItem
 R typeinfo name for CEconItemAttribute
 R typeinfo name for CEconItemDefinition
 R typeinfo name for CEconItemSchema
 R typeinfo name for CEconItemSystem
 R typeinfo name for CEconItemView
 R typeinfo name for CEconItemView::NetworkVar_m_AttributeList
 R typeinfo name for CEconStyleInfo
 R typeinfo name for CEconTool_BackpackExpander
 R typeinfo name for CEconTool_ClaimCode
 R typeinfo name for CEconTool_Collection
 R typeinfo name for CEconTool_CrateKey
 R typeinfo name for CEconTool_CustomizeTexture
 R typeinfo name for CEconTool_Default
 R typeinfo name for CEconTool_DescTag
 R typeinfo name for CEconTool_DuelingMinigame
 R typeinfo name for CEconTool_Gift
 R typeinfo name for CEconTool_GiftWrap
 R typeinfo name for CEconTool_NameTag
 R typeinfo name for CEconTool_Noisemaker
 R typeinfo name for CEconTool_PaintCan
 R typeinfo name for CEconTool_WeddingRing
 R typeinfo name for CEconTool_WrappedGift
 R typeinfo name for CEconWearable
 R typeinfo name for CEffectsServer
 R typeinfo name for CEmbers
 R typeinfo name for CEmptyConVar
 R typeinfo name for CEnableMotionFixup
 R typeinfo name for CEnergyBallLauncher
 R typeinfo name for CEntFireAutoCompletionFunctor
 R typeinfo name for CEntityBlocker
 R typeinfo name for CEntityClassList<CFuncNoPortalVolume>
 R typeinfo name for CEntityClassList<CFuncPortalDetector>
 R typeinfo name for CEntityClassList<CFuncPortalOrientation>
 R typeinfo name for CEntityClassList<CPhysicsNPCSolver>
 R typeinfo name for CEntityClassList<CPointCamera>
 R typeinfo name for CEntityClassList<CSkyCamera>
 R typeinfo name for CEntityDataInstantiator<CWatcherList>
 R typeinfo name for CEntityDataInstantiator<ModelScale>
 R typeinfo name for CEntityDataInstantiator<StepSimulationData>
 R typeinfo name for CEntityDataInstantiator<groundlink_t>
 R typeinfo name for CEntityDataInstantiator<physicspushlist_t>
 R typeinfo name for CEntityDataInstantiator<touchlink_t>
 R typeinfo name for CEntityDataInstantiator<vphysicsupdateai_t>
 R typeinfo name for CEntityDissolve
 R typeinfo name for CEntityFactory<AR2Explosion>
 R typeinfo name for CEntityFactory<CAISound>
 R typeinfo name for CEntityFactory<CAI_ActBusyGoal>
 R typeinfo name for CEntityFactory<CAI_ActBusyQueueGoal>
 R typeinfo name for CEntityFactory<CAI_AllySpeechManager>
 R typeinfo name for CEntityFactory<CAI_AssaultGoal>
 R typeinfo name for CEntityFactory<CAI_BattleLine>
 R typeinfo name for CEntityFactory<CAI_ChangeHintGroup>
 R typeinfo name for CEntityFactory<CAI_ChangeTarget>
 R typeinfo name for CEntityFactory<CAI_DynamicLink>
 R typeinfo name for CEntityFactory<CAI_DynamicLinkController>
 R typeinfo name for CEntityFactory<CAI_FightFromCoverGoal>
 R typeinfo name for CEntityFactory<CAI_FollowGoal>
 R typeinfo name for CEntityFactory<CAI_Hint>
 R typeinfo name for CEntityFactory<CAI_LeadGoal>
 R typeinfo name for CEntityFactory<CAI_LeadGoal_Weapon>
 R typeinfo name for CEntityFactory<CAI_NetworkManager>
 R typeinfo name for CEntityFactory<CAI_RadialLinkController>
 R typeinfo name for CEntityFactory<CAI_Relationship>
 R typeinfo name for CEntityFactory<CAI_ScriptConditions>
 R typeinfo name for CEntityFactory<CAI_ScriptedSchedule>
 R typeinfo name for CEntityFactory<CAI_ScriptedSentence>
 R typeinfo name for CEntityFactory<CAI_ScriptedSequence>
 R typeinfo name for CEntityFactory<CAI_SpeechFilter>
 R typeinfo name for CEntityFactory<CAI_StandoffGoal>
 R typeinfo name for CEntityFactory<CAI_TestHull>
 R typeinfo name for CEntityFactory<CAmbientGeneric>
 R typeinfo name for CEntityFactory<CAreaPortal>
 R typeinfo name for CEntityFactory<CAssaultPoint>
 R typeinfo name for CEntityFactory<CBaseAnimatingProjectile>
 R typeinfo name for CEntityFactory<CBaseButton>
 R typeinfo name for CEntityFactory<CBaseDMStart>
 R typeinfo name for CEntityFactory<CBaseDoor>
 R typeinfo name for CEntityFactory<CBaseEntity>
 R typeinfo name for CEntityFactory<CBaseFilter>
 R typeinfo name for CEntityFactory<CBaseFlex>
 R typeinfo name for CEntityFactory<CBaseGrenade>
 R typeinfo name for CEntityFactory<CBaseGrenadeConcussion>
 R typeinfo name for CEntityFactory<CBaseGrenadeContact>
 R typeinfo name for CEntityFactory<CBaseGrenadeTimed>
 R typeinfo name for CEntityFactory<CBaseHLCombatWeapon>
 R typeinfo name for CEntityFactory<CBaseMoveBehavior>
 R typeinfo name for CEntityFactory<CBasePortalCombatWeapon>
 R typeinfo name for CEntityFactory<CBaseProjectile>
 R typeinfo name for CEntityFactory<CBaseSpriteProjectile>
 R typeinfo name for CEntityFactory<CBaseTrigger>
 R typeinfo name for CEntityFactory<CBaseViewModel>
 R typeinfo name for CEntityFactory<CBeam>
 R typeinfo name for CEntityFactory<CBeamSpotlight>
 R typeinfo name for CEntityFactory<CBlendingCycler>
 R typeinfo name for CEntityFactory<CBlood>
 R typeinfo name for CEntityFactory<CBoneFollower>
 R typeinfo name for CEntityFactory<CBreakable>
 R typeinfo name for CEntityFactory<CBreakableSurface>
 R typeinfo name for CEntityFactory<CBubbling>
 R typeinfo name for CEntityFactory<CChallengeModeEndNode>
 R typeinfo name for CEntityFactory<CChangeLevel>
 R typeinfo name for CEntityFactory<CCitadelEnergyCore>
 R typeinfo name for CEntityFactory<CColorCorrection>
 R typeinfo name for CEntityFactory<CColorCorrectionVolume>
 R typeinfo name for CEntityFactory<CCommentaryAuto>
 R typeinfo name for CEntityFactory<CCommentaryViewPosition>
 R typeinfo name for CEntityFactory<CConstraintAnchor>
 R typeinfo name for CEntityFactory<CCorpse>
 R typeinfo name for CEntityFactory<CCredits>
 R typeinfo name for CEntityFactory<CCubeRotationController>
 R typeinfo name for CEntityFactory<CDebugHistory>
 R typeinfo name for CEntityFactory<CDecal>
 R typeinfo name for CEntityFactory<CDetailBlocker>
 R typeinfo name for CEntityFactory<CDynamicLight>
 R typeinfo name for CEntityFactory<CDynamicProp>
 R typeinfo name for CEntityFactory<CEconWearable>
 R typeinfo name for CEntityFactory<CEmbers>
 R typeinfo name for CEntityFactory<CEnableMotionFixup>
 R typeinfo name for CEntityFactory<CEnergyBallLauncher>
 R typeinfo name for CEntityFactory<CEntityBlocker>
 R typeinfo name for CEntityFactory<CEntityDissolve>
 R typeinfo name for CEntityFactory<CEntityFlame>
 R typeinfo name for CEntityFactory<CEntityFreezing>
 R typeinfo name for CEntityFactory<CEntityParticleTrail>
 R typeinfo name for CEntityFactory<CEnvAR2Explosion>
 R typeinfo name for CEntityFactory<CEnvAmbientLight>
 R typeinfo name for CEntityFactory<CEnvBeam>
 R typeinfo name for CEntityFactory<CEnvBeverage>
 R typeinfo name for CEntityFactory<CEnvDOFController>
 R typeinfo name for CEntityFactory<CEnvDetailController>
 R typeinfo name for CEntityFactory<CEnvDustPuff>
 R typeinfo name for CEntityFactory<CEnvEffectsScript>
 R typeinfo name for CEntityFactory<CEnvEntityIgniter>
 R typeinfo name for CEntityFactory<CEnvEntityMaker>
 R typeinfo name for CEntityFactory<CEnvExplosion>
 R typeinfo name for CEntityFactory<CEnvFade>
 R typeinfo name for CEntityFactory<CEnvFireSensor>
 R typeinfo name for CEntityFactory<CEnvFireSource>
 R typeinfo name for CEntityFactory<CEnvFunnel>
 R typeinfo name for CEntityFactory<CEnvGlobal>
 R typeinfo name for CEntityFactory<CEnvGunfire>
 R typeinfo name for CEntityFactory<CEnvHudHint>
 R typeinfo name for CEntityFactory<CEnvInstructorHint>
 R typeinfo name for CEntityFactory<CEnvLaser>
 R typeinfo name for CEntityFactory<CEnvLight>
 R typeinfo name for CEntityFactory<CEnvMicrophone>
 R typeinfo name for CEntityFactory<CEnvMuzzleFlash>
 R typeinfo name for CEntityFactory<CEnvParticleScript>
 R typeinfo name for CEntityFactory<CEnvPlayerSurfaceTrigger>
 R typeinfo name for CEntityFactory<CEnvPortalPathTrack>
 R typeinfo name for CEntityFactory<CEnvProjectedTexture>
 R typeinfo name for CEntityFactory<CEnvQuadraticBeam>
 R typeinfo name for CEntityFactory<CEnvScreenEffect>
 R typeinfo name for CEntityFactory<CEnvScreenOverlay>
 R typeinfo name for CEntityFactory<CEnvShake>
 R typeinfo name for CEntityFactory<CEnvShooter>
 R typeinfo name for CEntityFactory<CEnvSoundscape>
 R typeinfo name for CEntityFactory<CEnvSoundscapeProxy>
 R typeinfo name for CEntityFactory<CEnvSoundscapeTriggerable>
 R typeinfo name for CEntityFactory<CEnvSpark>
 R typeinfo name for CEntityFactory<CEnvSplash>
 R typeinfo name for CEntityFactory<CEnvTilt>
 R typeinfo name for CEntityFactory<CEnvTonemapController>
 R typeinfo name for CEntityFactory<CEnvTracer>
 R typeinfo name for CEntityFactory<CEnvViewPunch>
 R typeinfo name for CEntityFactory<CEnvWind>
 R typeinfo name for CEntityFactory<CEnvZoom>
 R typeinfo name for CEntityFactory<CEnv_Lightrail_Endpoint>
 R typeinfo name for CEntityFactory<CEventQueueSaveLoadProxy>
 R typeinfo name for CEntityFactory<CFilterClass>
 R typeinfo name for CEntityFactory<CFilterCombineBall>
 R typeinfo name for CEntityFactory<CFilterContext>
 R typeinfo name for CEntityFactory<CFilterEnemy>
 R typeinfo name for CEntityFactory<CFilterMassGreater>
 R typeinfo name for CEntityFactory<CFilterModel>
 R typeinfo name for CEntityFactory<CFilterMultiple>
 R typeinfo name for CEntityFactory<CFilterName>
 R typeinfo name for CEntityFactory<CFilterPlayerHeld>
 R typeinfo name for CEntityFactory<CFilterSize>
 R typeinfo name for CEntityFactory<CFire>
 R typeinfo name for CEntityFactory<CFireSmoke>
 R typeinfo name for CEntityFactory<CFireTrail>
 R typeinfo name for CEntityFactory<CFish>
 R typeinfo name for CEntityFactory<CFishPool>
 R typeinfo name for CEntityFactory<CFlexExpresser>
 R typeinfo name for CEntityFactory<CFlextalkActor>
 R typeinfo name for CEntityFactory<CFogController>
 R typeinfo name for CEntityFactory<CFogTrigger>
 R typeinfo name for CEntityFactory<CFogVolume>
 R typeinfo name for CEntityFactory<CFuncAreaPortalWindow>
 R typeinfo name for CEntityFactory<CFuncBrush>
 R typeinfo name for CEntityFactory<CFuncCombineBallSpawner>
 R typeinfo name for CEntityFactory<CFuncConveyor>
 R typeinfo name for CEntityFactory<CFuncIllusionary>
 R typeinfo name for CEntityFactory<CFuncInstanceIoProxy>
 R typeinfo name for CEntityFactory<CFuncLadder>
 R typeinfo name for CEntityFactory<CFuncLadderEndPoint>
 R typeinfo name for CEntityFactory<CFuncMonitor>
 R typeinfo name for CEntityFactory<CFuncMoveLinear>
 R typeinfo name for CEntityFactory<CFuncNavBlocker>
 R typeinfo name for CEntityFactory<CFuncNavObstruction>
 R typeinfo name for CEntityFactory<CFuncNoPortalVolume>
 R typeinfo name for CEntityFactory<CFuncOccluder>
 R typeinfo name for CEntityFactory<CFuncPlacementClip>
 R typeinfo name for CEntityFactory<CFuncPlat>
 R typeinfo name for CEntityFactory<CFuncPlatRot>
 R typeinfo name for CEntityFactory<CFuncPortalBumper>
 R typeinfo name for CEntityFactory<CFuncPortalDetector>
 R typeinfo name for CEntityFactory<CFuncPortalOrientation>
 R typeinfo name for CEntityFactory<CFuncReflectiveGlass>
 R typeinfo name for CEntityFactory<CFuncRotating>
 R typeinfo name for CEntityFactory<CFuncSmokeVolume>
 R typeinfo name for CEntityFactory<CFuncTankCombineCannon>
 R typeinfo name for CEntityFactory<CFuncTankGun>
 R typeinfo name for CEntityFactory<CFuncTankLaser>
 R typeinfo name for CEntityFactory<CFuncTankMortar>
 R typeinfo name for CEntityFactory<CFuncTankPhysCannister>
 R typeinfo name for CEntityFactory<CFuncTankPulseLaser>
 R typeinfo name for CEntityFactory<CFuncTankTrain>
 R typeinfo name for CEntityFactory<CFuncTrackAuto>
 R typeinfo name for CEntityFactory<CFuncTrackChange>
 R typeinfo name for CEntityFactory<CFuncTrackTrain>
 R typeinfo name for CEntityFactory<CFuncTrain>
 R typeinfo name for CEntityFactory<CFuncTrainControls>
 R typeinfo name for CEntityFactory<CFuncVPhysicsClip>
 R typeinfo name for CEntityFactory<CFuncVehicleClip>
 R typeinfo name for CEntityFactory<CFuncWall>
 R typeinfo name for CEntityFactory<CFuncWallToggle>
 R typeinfo name for CEntityFactory<CFunc_DustCloud>
 R typeinfo name for CEntityFactory<CFunc_DustMotes>
 R typeinfo name for CEntityFactory<CFunc_LOD>
 R typeinfo name for CEntityFactory<CFunc_Portalled>
 R typeinfo name for CEntityFactory<CFutbolCatcher>
 R typeinfo name for CEntityFactory<CGameEnd>
 R typeinfo name for CEntityFactory<CGameGibManager>
 R typeinfo name for CEntityFactory<CGamePlayerEquip>
 R typeinfo name for CEntityFactory<CGamePlayerTeam>
 R typeinfo name for CEntityFactory<CGamePlayerZone>
 R typeinfo name for CEntityFactory<CGameScore>
 R typeinfo name for CEntityFactory<CGameText>
 R typeinfo name for CEntityFactory<CGameUI>
 R typeinfo name for CEntityFactory<CGameWeaponManager>
 R typeinfo name for CEntityFactory<CGenericActor>
 R typeinfo name for CEntityFactory<CGenericCycler>
 R typeinfo name for CEntityFactory<CGenericFlexCycler>
 R typeinfo name for CEntityFactory<CGenericNPC>
 R typeinfo name for CEntityFactory<CGib>
 R typeinfo name for CEntityFactory<CGibShooter>
 R typeinfo name for CEntityFactory<CGrenadeBeam>
 R typeinfo name for CEntityFactory<CGrenadeBeamChaser>
 R typeinfo name for CEntityFactory<CGrenadeFrag>
 R typeinfo name for CEntityFactory<CGunTarget>
 R typeinfo name for CEntityFactory<CHalfLife2Proxy>
 R typeinfo name for CEntityFactory<CHandleDummy>
 R typeinfo name for CEntityFactory<CHandleTest>
 R typeinfo name for CEntityFactory<CHotPotato>
 R typeinfo name for CEntityFactory<CHotPotatoCatcher>
 R typeinfo name for CEntityFactory<CHotPotatoSocket>
 R typeinfo name for CEntityFactory<CHotPotatoSpawner>
 R typeinfo name for CEntityFactory<CHoverTurretTether>
 R typeinfo name for CEntityFactory<CInfoCameraLink>
 R typeinfo name for CEntityFactory<CInfoGameEventProxy>
 R typeinfo name for CEntityFactory<CInfoInstructorHintTarget>
 R typeinfo name for CEntityFactory<CInfoIntermission>
 R typeinfo name for CEntityFactory<CInfoLadderDismount>
 R typeinfo name for CEntityFactory<CInfoLandmark>
 R typeinfo name for CEntityFactory<CInfoMassCenter>
 R typeinfo name for CEntityFactory<CInfoOverlayAccessor>
 R typeinfo name for CEntityFactory<CInfoPlacementHelper>
 R typeinfo name for CEntityFactory<CInfoPortalScore>
 R typeinfo name for CEntityFactory<CInfoRemarkable>
 R typeinfo name for CEntityFactory<CInfoTarget>
 R typeinfo name for CEntityFactory<CInfoTargetPersonalitySphere>
 R typeinfo name for CEntityFactory<CInfo_Coop_Spawn>
 R typeinfo name for CEntityFactory<CInfo_Player_Ping_Detector>
 R typeinfo name for CEntityFactory<CInstancedSceneEntity>
 R typeinfo name for CEntityFactory<CItemSoda>
 R typeinfo name for CEntityFactory<CItemSuit>
 R typeinfo name for CEntityFactory<CItem_Nugget>
 R typeinfo name for CEntityFactory<CKeepUpright>
 R typeinfo name for CEntityFactory<CLabIndicatorPanel>
 R typeinfo name for CEntityFactory<CLaserCatcher>
 R typeinfo name for CEntityFactory<CLaserRelay>
 R typeinfo name for CEntityFactory<CLevelPlacardDisplay>
 R typeinfo name for CEntityFactory<CLight>
 R typeinfo name for CEntityFactory<CLightGlow>
 R typeinfo name for CEntityFactory<CLinkedPortalDoor>
 R typeinfo name for CEntityFactory<CLogicAchievement>
 R typeinfo name for CEntityFactory<CLogicActiveAutosave>
 R typeinfo name for CEntityFactory<CLogicAuto>
 R typeinfo name for CEntityFactory<CLogicAutosave>
 R typeinfo name for CEntityFactory<CLogicBranch>
 R typeinfo name for CEntityFactory<CLogicBranchList>
 R typeinfo name for CEntityFactory<CLogicCase>
 R typeinfo name for CEntityFactory<CLogicCollisionPair>
 R typeinfo name for CEntityFactory<CLogicCompare>
 R typeinfo name for CEntityFactory<CLogicCompareInteger>
 R typeinfo name for CEntityFactory<CLogicCoopManager>
 R typeinfo name for CEntityFactory<CLogicEventListener>
 R typeinfo name for CEntityFactory<CLogicLineToEntity>
 R typeinfo name for CEntityFactory<CLogicMeasureMovement>
 R typeinfo name for CEntityFactory<CLogicNavigation>
 R typeinfo name for CEntityFactory<CLogicPlayMovie>
 R typeinfo name for CEntityFactory<CLogicPlayerProxy>
 R typeinfo name for CEntityFactory<CLogicPlayerViewFinder>
 R typeinfo name for CEntityFactory<CLogicRandomOutputs>
 R typeinfo name for CEntityFactory<CLogicRegisterActivator>
 R typeinfo name for CEntityFactory<CLogicRelay>
 R typeinfo name for CEntityFactory<CLogicScript>
 R typeinfo name for CEntityFactory<CLogicTimeScale>
 R typeinfo name for CEntityFactory<CMP_LobbyScreen>
 R typeinfo name for CEntityFactory<CMaterialModifyControl>
 R typeinfo name for CEntityFactory<CMathColorBlend>
 R typeinfo name for CEntityFactory<CMathCounter>
 R typeinfo name for CEntityFactory<CMathRemap>
 R typeinfo name for CEntityFactory<CMessage>
 R typeinfo name for CEntityFactory<CMessageEntity>
 R typeinfo name for CEntityFactory<CMomentaryRotButton>
 R typeinfo name for CEntityFactory<CMortarShell>
 R typeinfo name for CEntityFactory<CMovementSpeedMod>
 R typeinfo name for CEntityFactory<CMovieDisplay>
 R typeinfo name for CEntityFactory<CMultiSource>
 R typeinfo name for CEntityFactory<CNPCEventResponseSystemEntity>
 R typeinfo name for CEntityFactory<CNPCMaker>
 R typeinfo name for CEntityFactory<CNPCSpawnDestination>
 R typeinfo name for CEntityFactory<CNPC_Bullseye>
 R typeinfo name for CEntityFactory<CNPC_EnemyFinder>
 R typeinfo name for CEntityFactory<CNPC_EnemyFinderCombineCannon>
 R typeinfo name for CEntityFactory<CNPC_FloorTurret>
 R typeinfo name for CEntityFactory<CNPC_Furniture>
 R typeinfo name for CEntityFactory<CNPC_HoverTurret>
 R typeinfo name for CEntityFactory<CNPC_PersonalityCore>
 R typeinfo name for CEntityFactory<CNPC_Portal_FloorTurret>
 R typeinfo name for CEntityFactory<CNPC_RocketTurret>
 R typeinfo name for CEntityFactory<CNPC_SecurityCamera>
 R typeinfo name for CEntityFactory<CNPC_VehicleDriver>
 R typeinfo name for CEntityFactory<CNPC_Wheatley_Boss>
 R typeinfo name for CEntityFactory<CNeurotoxinCountdown>
 R typeinfo name for CEntityFactory<CNewNPC>
 R typeinfo name for CEntityFactory<CNewRecharge>
 R typeinfo name for CEntityFactory<CNodeEnt>
 R typeinfo name for CEntityFactory<CNullEntity>
 R typeinfo name for CEntityFactory<COrnamentProp>
 R typeinfo name for CEntityFactory<COuttroStats>
 R typeinfo name for CEntityFactory<CPSCollisionEntity>
 R typeinfo name for CEntityFactory<CPaintSphere>
 R typeinfo name for CEntityFactory<CPaintSprayer>
 R typeinfo name for CEntityFactory<CPaintStream>
 R typeinfo name for CEntityFactory<CParticleFire>
 R typeinfo name for CEntityFactory<CParticleLight>
 R typeinfo name for CEntityFactory<CParticlePerformanceMonitor>
 R typeinfo name for CEntityFactory<CParticleSystem>
 R typeinfo name for CEntityFactory<CPathCorner>
 R typeinfo name for CEntityFactory<CPathCornerCrash>
 R typeinfo name for CEntityFactory<CPathKeyFrame>
 R typeinfo name for CEntityFactory<CPathTrack>
 R typeinfo name for CEntityFactory<CPhysBallSocket>
 R typeinfo name for CEntityFactory<CPhysBox>
 R typeinfo name for CEntityFactory<CPhysBoxMultiplayer>
 R typeinfo name for CEntityFactory<CPhysConstraintSystem>
 R typeinfo name for CEntityFactory<CPhysConvert>
 R typeinfo name for CEntityFactory<CPhysExplosion>
 R typeinfo name for CEntityFactory<CPhysFixed>
 R typeinfo name for CEntityFactory<CPhysHinge>
 R typeinfo name for CEntityFactory<CPhysImpact>
 R typeinfo name for CEntityFactory<CPhysLength>
 R typeinfo name for CEntityFactory<CPhysMagnet>
 R typeinfo name for CEntityFactory<CPhysMotor>
 R typeinfo name for CEntityFactory<CPhysPulley>
 R typeinfo name for CEntityFactory<CPhysSlideConstraint>
 R typeinfo name for CEntityFactory<CPhysSphere>
 R typeinfo name for CEntityFactory<CPhysThruster>
 R typeinfo name for CEntityFactory<CPhysTorque>
 R typeinfo name for CEntityFactory<CPhysicsCannister>
 R typeinfo name for CEntityFactory<CPhysicsCloneArea>
 R typeinfo name for CEntityFactory<CPhysicsEntitySolver>
 R typeinfo name for CEntityFactory<CPhysicsNPCSolver>
 R typeinfo name for CEntityFactory<CPhysicsProp>
 R typeinfo name for CEntityFactory<CPhysicsPropMultiplayer>
 R typeinfo name for CEntityFactory<CPhysicsPropRespawnable>
 R typeinfo name for CEntityFactory<CPhysicsShadowClone>
 R typeinfo name for CEntityFactory<CPhysicsSpring>
 R typeinfo name for CEntityFactory<CPhysicsWire>
 R typeinfo name for CEntityFactory<CPlasma>
 R typeinfo name for CEntityFactory<CPlayerPickupController>
 R typeinfo name for CEntityFactory<CPlayerResource>
 R typeinfo name for CEntityFactory<CPointAngleSensor>
 R typeinfo name for CEntityFactory<CPointAngularVelocitySensor>
 R typeinfo name for CEntityFactory<CPointBonusMapsAccessor>
 R typeinfo name for CEntityFactory<CPointBroadcastClientCommand>
 R typeinfo name for CEntityFactory<CPointCamera>
 R typeinfo name for CEntityFactory<CPointChangelevel>
 R typeinfo name for CEntityFactory<CPointClientCommand>
 R typeinfo name for CEntityFactory<CPointCombineBallLauncher>
 R typeinfo name for CEntityFactory<CPointCommentaryNode>
 R typeinfo name for CEntityFactory<CPointDevShotCamera>
 R typeinfo name for CEntityFactory<CPointEntity>
 R typeinfo name for CEntityFactory<CPointEntityFinder>
 R typeinfo name for CEntityFactory<CPointFutbolShooter>
 R typeinfo name for CEntityFactory<CPointGamestatsCounter>
 R typeinfo name for CEntityFactory<CPointHurt>
 R typeinfo name for CEntityFactory<CPointPlayerMoveConstraint>
 R typeinfo name for CEntityFactory<CPointProximitySensor>
 R typeinfo name for CEntityFactory<CPointServerCommand>
 R typeinfo name for CEntityFactory<CPointSpotlight>
 R typeinfo name for CEntityFactory<CPointSurvey>
 R typeinfo name for CEntityFactory<CPointTeleport>
 R typeinfo name for CEntityFactory<CPointTemplate>
 R typeinfo name for CEntityFactory<CPointVelocitySensor>
 R typeinfo name for CEntityFactory<CPortalButtonTrigger>
 R typeinfo name for CEntityFactory<CPortalCredits>
 R typeinfo name for CEntityFactory<CPortalGameRulesProxy>
 R typeinfo name for CEntityFactory<CPortalLaser>
 R typeinfo name for CEntityFactory<CPortalLaserTarget>
 R typeinfo name for CEntityFactory<CPortalMPGameRulesProxy>
 R typeinfo name for CEntityFactory<CPortalMPStatsProxy>
 R typeinfo name for CEntityFactory<CPortalRaceCheckpoint>
 R typeinfo name for CEntityFactory<CPortalRagdoll>
 R typeinfo name for CEntityFactory<CPortalStatsController>
 R typeinfo name for CEntityFactory<CPortal_Base2D>
 R typeinfo name for CEntityFactory<CPortal_Player>
 R typeinfo name for CEntityFactory<CPortal_PointPush>
 R typeinfo name for CEntityFactory<CPoseController>
 R typeinfo name for CEntityFactory<CPostProcessController>
 R typeinfo name for CEntityFactory<CPrecipitation>
 R typeinfo name for CEntityFactory<CPrecipitationBlocker>
 R typeinfo name for CEntityFactory<CPredictedViewModel>
 R typeinfo name for CEntityFactory<CProceduralGenerator>
 R typeinfo name for CEntityFactory<CProjectedDecal>
 R typeinfo name for CEntityFactory<CProjectedTractorBeamEntity>
 R typeinfo name for CEntityFactory<CProjectedWallEntity>
 R typeinfo name for CEntityFactory<CPropButton>
 R typeinfo name for CEntityFactory<CPropCombineBall>
 R typeinfo name for CEntityFactory<CPropDoorRotating>
 R typeinfo name for CEntityFactory<CPropEnergyBall>
 R typeinfo name for CEntityFactory<CPropExplodingFutbol>
 R typeinfo name for CEntityFactory<CPropFloorBallButton>
 R typeinfo name for CEntityFactory<CPropFloorButton>
 R typeinfo name for CEntityFactory<CPropFloorCubeButton>
 R typeinfo name for CEntityFactory<CPropFutbolSocket>
 R typeinfo name for CEntityFactory<CPropFutbolSpawner>
 R typeinfo name for CEntityFactory<CPropGladosCore>
 R typeinfo name for CEntityFactory<CPropGlassFutbol>
 R typeinfo name for CEntityFactory<CPropIndicatorPanel>
 R typeinfo name for CEntityFactory<CPropLinkedPortalDoor>
 R typeinfo name for CEntityFactory<CPropMonsterBox>
 R typeinfo name for CEntityFactory<CPropPaintBomb>
 R typeinfo name for CEntityFactory<CPropPersonalitySphere>
 R typeinfo name for CEntityFactory<CPropPhysicsPaintable>
 R typeinfo name for CEntityFactory<CPropPortalStatsDisplay>
 R typeinfo name for CEntityFactory<CPropRocketTripwire>
 R typeinfo name for CEntityFactory<CPropTelescopicArm>
 R typeinfo name for CEntityFactory<CPropTestChamberDoor>
 R typeinfo name for CEntityFactory<CPropTicTacToePanel>
 R typeinfo name for CEntityFactory<CPropTractorBeamProjector>
 R typeinfo name for CEntityFactory<CPropUnderButton>
 R typeinfo name for CEntityFactory<CPropUnderFloorButton>
 R typeinfo name for CEntityFactory<CPropVehicle>
 R typeinfo name for CEntityFactory<CPropVehicleChoreoGeneric>
 R typeinfo name for CEntityFactory<CPropVehicleDriveable>
 R typeinfo name for CEntityFactory<CPropVehicleViewController>
 R typeinfo name for CEntityFactory<CPropWallProjector>
 R typeinfo name for CEntityFactory<CPropWeightedCube>
 R typeinfo name for CEntityFactory<CProp_Hallucination>
 R typeinfo name for CEntityFactory<CProp_Mirror>
 R typeinfo name for CEntityFactory<CProp_Portal>
 R typeinfo name for CEntityFactory<CPushable>
 R typeinfo name for CEntityFactory<CRagGib>
 R typeinfo name for CEntityFactory<CRagdollBoogie>
 R typeinfo name for CEntityFactory<CRagdollConstraint>
 R typeinfo name for CEntityFactory<CRagdollMagnet>
 R typeinfo name for CEntityFactory<CRagdollManager>
 R typeinfo name for CEntityFactory<CRagdollProp>
 R typeinfo name for CEntityFactory<CRagdollPropAttached>
 R typeinfo name for CEntityFactory<CRallyPoint>
 R typeinfo name for CEntityFactory<CRecharge>
 R typeinfo name for CEntityFactory<CRevertSaved>
 R typeinfo name for CEntityFactory<CRocket_Turret_Projectile>
 R typeinfo name for CEntityFactory<CRopeAnchor>
 R typeinfo name for CEntityFactory<CRopeKeyframe>
 R typeinfo name for CEntityFactory<CRotButton>
 R typeinfo name for CEntityFactory<CRotDoor>
 R typeinfo name for CEntityFactory<CRotorWashShooter>
 R typeinfo name for CEntityFactory<CSceneEntity>
 R typeinfo name for CEntityFactory<CSceneListManager>
 R typeinfo name for CEntityFactory<CSceneManager>
 R typeinfo name for CEntityFactory<CScriptIntro>
 R typeinfo name for CEntityFactory<CScriptedTarget>
 R typeinfo name for CEntityFactory<CServerRagdollTrigger>
 R typeinfo name for CEntityFactory<CShadowControl>
 R typeinfo name for CEntityFactory<CShower>
 R typeinfo name for CEntityFactory<CSimplePhysicsBrush>
 R typeinfo name for CEntityFactory<CSimplePhysicsProp>
 R typeinfo name for CEntityFactory<CSkyCamera>
 R typeinfo name for CEntityFactory<CSkyboxSwapper>
 R typeinfo name for CEntityFactory<CSlideshowDisplay>
 R typeinfo name for CEntityFactory<CSmokeStack>
 R typeinfo name for CEntityFactory<CSoundEnt>
 R typeinfo name for CEntityFactory<CSpeaker>
 R typeinfo name for CEntityFactory<CSpotlightEnd>
 R typeinfo name for CEntityFactory<CSprayCan>
 R typeinfo name for CEntityFactory<CSprite>
 R typeinfo name for CEntityFactory<CSpriteOriented>
 R typeinfo name for CEntityFactory<CSpriteTrail>
 R typeinfo name for CEntityFactory<CStatueProp>
 R typeinfo name for CEntityFactory<CSteamJet>
 R typeinfo name for CEntityFactory<CStripWeapons>
 R typeinfo name for CEntityFactory<CSun>
 R typeinfo name for CEntityFactory<CSunlightShadowControl>
 R typeinfo name for CEntityFactory<CTankTargetChange>
 R typeinfo name for CEntityFactory<CTankTrainAI>
 R typeinfo name for CEntityFactory<CTargetCDAudioRep>
 R typeinfo name for CEntityFactory<CTargetChangeGravity>
 R typeinfo name for CEntityFactory<CTeam>
 R typeinfo name for CEntityFactory<CTeamSpawnPoint>
 R typeinfo name for CEntityFactory<CTeamVehicleSpawnPoint>
 R typeinfo name for CEntityFactory<CTempEntTester>
 R typeinfo name for CEntityFactory<CTemplateNPCMaker>
 R typeinfo name for CEntityFactory<CTesla>
 R typeinfo name for CEntityFactory<CTestEffect>
 R typeinfo name for CEntityFactory<CTestTraceline>
 R typeinfo name for CEntityFactory<CTest_ProxyToggle_Networkable>
 R typeinfo name for CEntityFactory<CTextureToggle>
 R typeinfo name for CEntityFactory<CTimerEntity>
 R typeinfo name for CEntityFactory<CTonemapTrigger>
 R typeinfo name for CEntityFactory<CTriggerAutoCrouch>
 R typeinfo name for CEntityFactory<CTriggerBrush>
 R typeinfo name for CEntityFactory<CTriggerCDAudio>
 R typeinfo name for CEntityFactory<CTriggerCamera>
 R typeinfo name for CEntityFactory<CTriggerCameraMultiplayer>
 R typeinfo name for CEntityFactory<CTriggerCatapult>
 R typeinfo name for CEntityFactory<CTriggerGravity>
 R typeinfo name for CEntityFactory<CTriggerHierarchy>
 R typeinfo name for CEntityFactory<CTriggerHurt>
 R typeinfo name for CEntityFactory<CTriggerImpact>
 R typeinfo name for CEntityFactory<CTriggerLook>
 R typeinfo name for CEntityFactory<CTriggerMultiple>
 R typeinfo name for CEntityFactory<CTriggerOnce>
 R typeinfo name for CEntityFactory<CTriggerPaintCleanser>
 R typeinfo name for CEntityFactory<CTriggerPhysicsTrap>
 R typeinfo name for CEntityFactory<CTriggerPingDetector>
 R typeinfo name for CEntityFactory<CTriggerPlayerMovement>
 R typeinfo name for CEntityFactory<CTriggerPlayerTeam>
 R typeinfo name for CEntityFactory<CTriggerPortalCleanser>
 R typeinfo name for CEntityFactory<CTriggerProximity>
 R typeinfo name for CEntityFactory<CTriggerPush>
 R typeinfo name for CEntityFactory<CTriggerRPGFire>
 R typeinfo name for CEntityFactory<CTriggerRemove>
 R typeinfo name for CEntityFactory<CTriggerSave>
 R typeinfo name for CEntityFactory<CTriggerSoundscape>
 R typeinfo name for CEntityFactory<CTriggerTeleport>
 R typeinfo name for CEntityFactory<CTriggerToggleSave>
 R typeinfo name for CEntityFactory<CTriggerVPhysicsMotion>
 R typeinfo name for CEntityFactory<CTriggerViewProxy>
 R typeinfo name for CEntityFactory<CTriggerVolume>
 R typeinfo name for CEntityFactory<CTriggerWateryDeath>
 R typeinfo name for CEntityFactory<CTriggerWeaponDissolve>
 R typeinfo name for CEntityFactory<CTriggerWeaponStrip>
 R typeinfo name for CEntityFactory<CTriggerWind>
 R typeinfo name for CEntityFactory<CTrigger_TractorBeam>
 R typeinfo name for CEntityFactory<CTurretTipController>
 R typeinfo name for CEntityFactory<CVGuiScreen>
 R typeinfo name for CEntityFactory<CWC_UpdateIgnoreList>
 R typeinfo name for CEntityFactory<CWaterBullet>
 R typeinfo name for CEntityFactory<CWaterLODControl>
 R typeinfo name for CEntityFactory<CWateryDeathLeech>
 R typeinfo name for CEntityFactory<CWeaponCubemap>
 R typeinfo name for CEntityFactory<CWeaponCycler>
 R typeinfo name for CEntityFactory<CWeaponPortalBase>
 R typeinfo name for CEntityFactory<CWeaponPortalgun>
 R typeinfo name for CEntityFactory<CWeaponPromoAntennaBall>
 R typeinfo name for CEntityFactory<CWeaponPromoAntennaEgg>
 R typeinfo name for CEntityFactory<CWeaponPromoHelmetBall>
 R typeinfo name for CEntityFactory<CWeaponPromoHelmetEgg>
 R typeinfo name for CEntityFactory<CWeightButton>
 R typeinfo name for CEntityFactory<CWindowPane>
 R typeinfo name for CEntityFactory<CWorld>
 R typeinfo name for CEntityFactory<CWorldItem>
 R typeinfo name for CEntityFactory<CWreckage>
 R typeinfo name for CEntityFactory<DustTrail>
 R typeinfo name for CEntityFactory<FilterDamageType>
 R typeinfo name for CEntityFactory<FilterTeam>
 R typeinfo name for CEntityFactory<FizzlerEffects>
 R typeinfo name for CEntityFactory<FizzlerMultiOriginSoundPlayer>
 R typeinfo name for CEntityFactory<MovieExplosion>
 R typeinfo name for CEntityFactory<ParticleSmokeGrenade>
 R typeinfo name for CEntityFactory<ProjectedEntityAmbientSoundProxy>
 R typeinfo name for CEntityFactory<RocketTrail>
 R typeinfo name for CEntityFactory<SmokeTrail>
 R typeinfo name for CEntityFactory<SporeExplosion>
 R typeinfo name for CEntityFactory<SporeTrail>
 R typeinfo name for CEntityFactoryDictionary
 R typeinfo name for CEntityFlame
 R typeinfo name for CEntityFreezing
 R typeinfo name for CEntityListSystem
 R typeinfo name for CEntityParticleTrail
 R typeinfo name for CEntityParticleTrail::NetworkVar_m_Info
 R typeinfo name for CEntitySaveRestoreBlockHandler
 R typeinfo name for CEntitySaveUtils
 R typeinfo name for CEntityTouchManager
 R typeinfo name for CEnvAR2Explosion
 R typeinfo name for CEnvAmbientLight
 R typeinfo name for CEnvBeam
 R typeinfo name for CEnvBeverage
 R typeinfo name for CEnvDOFController
 R typeinfo name for CEnvDetailController
 R typeinfo name for CEnvDustPuff
 R typeinfo name for CEnvEffectsScript
 R typeinfo name for CEnvEntityIgniter
 R typeinfo name for CEnvEntityMaker
 R typeinfo name for CEnvExplosion
 R typeinfo name for CEnvFade
 R typeinfo name for CEnvFireSensor
 R typeinfo name for CEnvFireSource
 R typeinfo name for CEnvFunnel
 R typeinfo name for CEnvGlobal
 R typeinfo name for CEnvGunfire
 R typeinfo name for CEnvHudHint
 R typeinfo name for CEnvInstructorHint
 R typeinfo name for CEnvLaser
 R typeinfo name for CEnvLight
 R typeinfo name for CEnvMicrophone
 R typeinfo name for CEnvMuzzleFlash
 R typeinfo name for CEnvParticleScript
 R typeinfo name for CEnvPlayerSurfaceTrigger
 R typeinfo name for CEnvPortalPathTrack
 R typeinfo name for CEnvProjectedTexture
 R typeinfo name for CEnvQuadraticBeam
 R typeinfo name for CEnvScreenEffect
 R typeinfo name for CEnvScreenOverlay
 R typeinfo name for CEnvShake
 R typeinfo name for CEnvShooter
 R typeinfo name for CEnvSoundscape
 R typeinfo name for CEnvSoundscapeProxy
 R typeinfo name for CEnvSoundscapeTriggerable
 R typeinfo name for CEnvSpark
 R typeinfo name for CEnvSplash
 R typeinfo name for CEnvTilt
 R typeinfo name for CEnvTonemapController
 R typeinfo name for CEnvTracer
 R typeinfo name for CEnvViewPunch
 R typeinfo name for CEnvWind
 R typeinfo name for CEnvWindShared
 R typeinfo name for CEnvZoom
 R typeinfo name for CEnv_Lightrail_Endpoint
 R typeinfo name for CEventLog
 R typeinfo name for CEventQueueSaveLoadProxy
 R typeinfo name for CEventQueue_SaveRestoreBlockHandler
 R typeinfo name for CEventsSaveDataOps
 R typeinfo name for CFilterClass
 R typeinfo name for CFilterCombineBall
 R typeinfo name for CFilterContext
 R typeinfo name for CFilterEnemy
 R typeinfo name for CFilterMassGreater
 R typeinfo name for CFilterModel
 R typeinfo name for CFilterMultiple
 R typeinfo name for CFilterName
 R typeinfo name for CFilterOnlyGlassFutbol
 R typeinfo name for CFilterOnlyHotPotato
 R typeinfo name for CFilterPlayerHeld
 R typeinfo name for CFilterSize
 R typeinfo name for CFire
 R typeinfo name for CFireSmoke
 R typeinfo name for CFireSphere
 R typeinfo name for CFireTrail
 R typeinfo name for CFish
 R typeinfo name for CFishPool
 R typeinfo name for CFlaggedEntitiesEnum
 R typeinfo name for CFlexAnimationTrack
 R typeinfo name for CFlexCycler
 R typeinfo name for CFlexExpresser
 R typeinfo name for CFlexExpresserShim
 R typeinfo name for CFlexSceneFileManager
 R typeinfo name for CFlextalkActor
 R typeinfo name for CFloatProperty
 R typeinfo name for CFmtStrN<1024>
 R typeinfo name for CFmtStrN<128>
 R typeinfo name for CFmtStrN<256>
 R typeinfo name for CFmtStrN<32>
 R typeinfo name for CFogController
 R typeinfo name for CFogController::NetworkVar_m_fog
 R typeinfo name for CFogSystem
 R typeinfo name for CFogTrigger
 R typeinfo name for CFogVolume
 R typeinfo name for CFourWheelServerVehicle
 R typeinfo name for CFourWheelVehiclePhysics
 R typeinfo name for CFuncAreaPortalBase
 R typeinfo name for CFuncAreaPortalWindow
 R typeinfo name for CFuncBrush
 R typeinfo name for CFuncCombineBallSpawner
 R typeinfo name for CFuncConveyor
 R typeinfo name for CFuncIllusionary
 R typeinfo name for CFuncInstanceIoProxy
 R typeinfo name for CFuncLadder
 R typeinfo name for CFuncLadderEndPoint
 R typeinfo name for CFuncMonitor
 R typeinfo name for CFuncMoveLinear
 R typeinfo name for CFuncNavBlocker
 R typeinfo name for CFuncNavObstruction
 R typeinfo name for CFuncNoPortalVolume
 R typeinfo name for CFuncOccluder
 R typeinfo name for CFuncPlacementClip
 R typeinfo name for CFuncPlat
 R typeinfo name for CFuncPlatRot
 R typeinfo name for CFuncPortalBumper
 R typeinfo name for CFuncPortalDetector
 R typeinfo name for CFuncPortalOrientation
 R typeinfo name for CFuncReflectiveGlass
 R typeinfo name for CFuncRotating
 R typeinfo name for CFuncSmokeVolume
 R typeinfo name for CFuncTank
 R typeinfo name for CFuncTankCombineCannon
 R typeinfo name for CFuncTankGun
 R typeinfo name for CFuncTankLaser
 R typeinfo name for CFuncTankMortar
 R typeinfo name for CFuncTankPhysCannister
 R typeinfo name for CFuncTankPulseLaser
 R typeinfo name for CFuncTankTrain
 R typeinfo name for CFuncTrackAuto
 R typeinfo name for CFuncTrackChange
 R typeinfo name for CFuncTrackTrain
 R typeinfo name for CFuncTrain
 R typeinfo name for CFuncTrainControls
 R typeinfo name for CFuncVPhysicsClip
 R typeinfo name for CFuncVehicleClip
 R typeinfo name for CFuncWall
 R typeinfo name for CFuncWallToggle
 R typeinfo name for CFunc_Dust
 R typeinfo name for CFunc_DustCloud
 R typeinfo name for CFunc_DustMotes
 R typeinfo name for CFunc_LOD
 R typeinfo name for CFunc_Portalled
 R typeinfo name for CFunc_VPhysics_Clip_Watcher
 R typeinfo name for CFunctor
 R typeinfo name for CFunctor1<void (*)(CBaseEntity*), CBaseEntity*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor1<void (*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor2<void (*)(CFunctor**, unsigned int), CFunctor**, int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor2<void (*)(IPhysicsObject*, Vector const&), IPhysicsObject*, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor3<void (*)(IPhysicsObject*, Vector const&, Vector const&), IPhysicsObject*, Vector, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctor4<CBaseEntity* (*)(CBaseEntity*, CBaseEntity*, bool, float), CBaseEntity*, CBaseEntity*, bool, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CFunctorJob
 R typeinfo name for CFutbolCatcher
 R typeinfo name for CGCDev_NewItemRequestResponse
 R typeinfo name for CGCMsgGetIPLocation
 R typeinfo name for CGCMsgGetIPLocationResponse
 R typeinfo name for CGCMsgGetSystemStats
 R typeinfo name for CGCMsgGetSystemStatsResponse
 R typeinfo name for CGCMsgMemCachedDelete
 R typeinfo name for CGCMsgMemCachedGet
 R typeinfo name for CGCMsgMemCachedGetResponse
 R typeinfo name for CGCMsgMemCachedGetResponse_ValueTag
 R typeinfo name for CGCMsgMemCachedSet
 R typeinfo name for CGCMsgMemCachedSet_KeyPair
 R typeinfo name for CGCMsgSystemStatsSchema
 R typeinfo name for CGCReplicateConVars
 R typeinfo name for CGCServerSystem
 R typeinfo name for CGCStorePurchaseInit_LineItem
 R typeinfo name for CGCUpdateConVar
 R typeinfo name for CGCUpdateItemSchema
 R typeinfo name for CGameDLL_ConVarAccessor
 R typeinfo name for CGameEnd
 R typeinfo name for CGameEventListener
 R typeinfo name for CGameGibManager
 R typeinfo name for CGameMovement
 R typeinfo name for CGamePlayerEquip
 R typeinfo name for CGamePlayerTeam
 R typeinfo name for CGamePlayerZone
 R typeinfo name for CGameResponseSystem
 R typeinfo name for CGameRules
 R typeinfo name for CGameRulesProxy
 R typeinfo name for CGameScore
 R typeinfo name for CGameStringPool
 R typeinfo name for CGameText
 R typeinfo name for CGameTimescale
 R typeinfo name for CGameUI
 R typeinfo name for CGameWeaponManager
 R typeinfo name for CGenericActor
 R typeinfo name for CGenericCycler
 R typeinfo name for CGenericFlexCycler
 R typeinfo name for CGenericNPC
 R typeinfo name for CGib
 R typeinfo name for CGibShooter
 R typeinfo name for CGlobalEntityList
 R typeinfo name for CGlobalEventLog
 R typeinfo name for CGlobalState
 R typeinfo name for CGrabController
 R typeinfo name for CGrenadeBeam
 R typeinfo name for CGrenadeBeamChaser
 R typeinfo name for CGrenadeFrag
 R typeinfo name for CGunTarget
 R typeinfo name for CHFontProperty
 R typeinfo name for CHL2EventLog
 R typeinfo name for CHL2_Player
 R typeinfo name for CHLPlayerMove
 R typeinfo name for CHLTVDirector
 R typeinfo name for CHalfLife2
 R typeinfo name for CHalfLife2Proxy
 R typeinfo name for CHandleDummy
 R typeinfo name for CHandleTest
 R typeinfo name for CHotPotato
 R typeinfo name for CHotPotatoCatcher
 R typeinfo name for CHotPotatoSocket
 R typeinfo name for CHotPotatoSpawner
 R typeinfo name for CHoverTurretTether
 R typeinfo name for CIKSaveRestoreOps
 R typeinfo name for CIPLocationInfo
 R typeinfo name for CInfoCameraLink
 R typeinfo name for CInfoGameEventProxy
 R typeinfo name for CInfoInstructorHintTarget
 R typeinfo name for CInfoIntermission
 R typeinfo name for CInfoLadderDismount
 R typeinfo name for CInfoLandmark
 R typeinfo name for CInfoMassCenter
 R typeinfo name for CInfoOverlayAccessor
 R typeinfo name for CInfoPlacementHelper
 R typeinfo name for CInfoPlacementManager
 R typeinfo name for CInfoPortalScore
 R typeinfo name for CInfoRemarkable
 R typeinfo name for CInfoTarget
 R typeinfo name for CInfoTargetEntityEnumerator
 R typeinfo name for CInfoTargetPersonalitySphere
 R typeinfo name for CInfo_Coop_Spawn
 R typeinfo name for CInfo_Player_Ping_Detector
 R typeinfo name for CInstancedResponseSystem
 R typeinfo name for CInstancedSceneEntity
 R typeinfo name for CIntProperty
 R typeinfo name for CInventoryManager
 R typeinfo name for CItem
 R typeinfo name for CItemGeneration
 R typeinfo name for CItemSelectionCriteria::CCondition
 R typeinfo name for CItemSelectionCriteria::CFloatCondition
 R typeinfo name for CItemSelectionCriteria::CSetCondition
 R typeinfo name for CItemSelectionCriteria::CStringCondition
 R typeinfo name for CItemSoda
 R typeinfo name for CItemSuit
 R typeinfo name for CItem_Nugget
 R typeinfo name for CJob
 R typeinfo name for CKeepUpright
 R typeinfo name for CKeyValuesDumpContextAsDevMsg
 R typeinfo name for CLabIndicatorPanel
 R typeinfo name for CLagCompensationManager
 R typeinfo name for CLaserCatcher
 R typeinfo name for CLaserRelay
 R typeinfo name for CLevelPlacardDisplay
 R typeinfo name for CLight
 R typeinfo name for CLightGlow
 R typeinfo name for CLinkedPortalDoor
 R typeinfo name for CLogicAchievement
 R typeinfo name for CLogicActiveAutosave
 R typeinfo name for CLogicAuto
 R typeinfo name for CLogicAutosave
 R typeinfo name for CLogicBranch
 R typeinfo name for CLogicBranchList
 R typeinfo name for CLogicCase
 R typeinfo name for CLogicCollisionPair
 R typeinfo name for CLogicCompare
 R typeinfo name for CLogicCompareInteger
 R typeinfo name for CLogicCoopManager
 R typeinfo name for CLogicEventListener
 R typeinfo name for CLogicLineToEntity
 R typeinfo name for CLogicMeasureMovement
 R typeinfo name for CLogicNavigation
 R typeinfo name for CLogicPlayMovie
 R typeinfo name for CLogicPlayerProxy
 R typeinfo name for CLogicPlayerViewFinder
 R typeinfo name for CLogicRandomOutputs
 R typeinfo name for CLogicRegisterActivator
 R typeinfo name for CLogicRelay
 R typeinfo name for CLogicScript
 R typeinfo name for CLogicTimeScale
 R typeinfo name for CLogicalEntity
 R typeinfo name for CMP_LobbyScreen
 R typeinfo name for CMapLoadEntityFilter
 R typeinfo name for CMaterialModifyControl
 R typeinfo name for CMathColorBlend
 R typeinfo name for CMathCounter
 R typeinfo name for CMathRemap
 R typeinfo name for CMemZeroOnNew
 R typeinfo name for CMemberFunctor0<CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>*, void (CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor0<CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>*, void (CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor0<CPropCombineBall*, void (CPropCombineBall::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor1<CAI_Navigator*, bool (CAI_Navigator::*)(Vector const&), Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor1<CPortal_Base2D*, void (CPortal_Base2D::*)(CBaseEntity*), CBaseEntity*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor2<CAI_Navigator*, bool (CAI_Navigator::*)(AI_NavGoal_t const&, unsigned int), AI_NavGoal_t, unsigned int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor3<CBreakableProp*, void (CBreakableProp::*)(Vector const&, Vector const&, QAngle const&), Vector, Vector, QAngle, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemoryLog
 R typeinfo name for CMessage
 R typeinfo name for CMessageEntity
 R typeinfo name for CModelPrecacheSystem
 R typeinfo name for CModelSoundsCache
 R typeinfo name for CModelSoundsCacheSaver
 R typeinfo name for CMomentaryRotButton
 R typeinfo name for CMortarShell
 R typeinfo name for CMotorController
 R typeinfo name for CMoveHelperServer
 R typeinfo name for CMoveableCamera
 R typeinfo name for CMovementSpeedMod
 R typeinfo name for CMovieDisplay
 R typeinfo name for CMsgAMAddFreeLicense
 R typeinfo name for CMsgAMAddFreeLicenseResponse
 R typeinfo name for CMsgAMFindAccounts
 R typeinfo name for CMsgAMFindAccountsResponse
 R typeinfo name for CMsgAMGetLicenses
 R typeinfo name for CMsgAMGetLicensesResponse
 R typeinfo name for CMsgAMGetUserGameStats
 R typeinfo name for CMsgAMGetUserGameStatsResponse
 R typeinfo name for CMsgAMGetUserGameStatsResponse_Achievement_Blocks
 R typeinfo name for CMsgAMGetUserGameStatsResponse_Stats
 R typeinfo name for CMsgAMSendEmail
 R typeinfo name for CMsgAMSendEmailResponse
 R typeinfo name for CMsgAMSendEmail_PersonaNameReplacementToken
 R typeinfo name for CMsgAMSendEmail_ReplacementToken
 R typeinfo name for CMsgAdjustItemEquippedState
 R typeinfo name for CMsgCommunityMapAddQueueHistoryEntry
 R typeinfo name for CMsgCommunityMapItemVoteSummary
 R typeinfo name for CMsgCommunityMapItemVoteSummaryResponse
 R typeinfo name for CMsgConVarValue
 R typeinfo name for CMsgDevDebugRollLootRequest
 R typeinfo name for CMsgDevNewItemRequest
 R typeinfo name for CMsgGCClientDisplayNotification
 R typeinfo name for CMsgGCError
 R typeinfo name for CMsgGCGetCommandList
 R typeinfo name for CMsgGCGetCommandListResponse
 R typeinfo name for CMsgGCGetEmailTemplate
 R typeinfo name for CMsgGCGetEmailTemplateResponse
 R typeinfo name for CMsgGCNameItemNotification
 R typeinfo name for CMsgGCReportAbuse
 R typeinfo name for CMsgGCReportAbuseResponse
 R typeinfo name for CMsgGCStorePurchaseInit
 R typeinfo name for CMsgGCStorePurchaseInitResponse
 R typeinfo name for CMsgGameServerInfo
 R typeinfo name for CMsgHttpRequest
 R typeinfo name for CMsgHttpRequest_QueryParam
 R typeinfo name for CMsgHttpRequest_RequestHeader
 R typeinfo name for CMsgHttpResponse
 R typeinfo name for CMsgHttpResponse_ResponseHeader
 R typeinfo name for CMsgIncrementKillCountAttribute
 R typeinfo name for CMsgInvitationCreated
 R typeinfo name for CMsgInviteToParty
 R typeinfo name for CMsgItemAcknowledged
 R typeinfo name for CMsgKickFromParty
 R typeinfo name for CMsgLeaveParty
 R typeinfo name for CMsgNotifyWatchdog
 R typeinfo name for CMsgPackageLicense
 R typeinfo name for CMsgPartyInviteResponse
 R typeinfo name for CMsgPlaytestMarkDemoForDelete
 R typeinfo name for CMsgPlaytestMarkDemoNotNew
 R typeinfo name for CMsgPlaytestRemoveDemo
 R typeinfo name for CMsgPlaytestReportDemo
 R typeinfo name for CMsgPlaytestReportDemoSession
 R typeinfo name for CMsgPlaytestRetrieveDemoHandles
 R typeinfo name for CMsgPlaytestRetrieveDemoHandlesResponse
 R typeinfo name for CMsgPlaytestRetrieveDemoPlayersForMap
 R typeinfo name for CMsgPlaytestRetrieveDemoPlayersForMapResponse
 R typeinfo name for CMsgPlaytestRetrieveNewDemoCountResponse
 R typeinfo name for CMsgPlaytestTestMessage
 R typeinfo name for CMsgProtoBufHeader
 R typeinfo name for CMsgReplayUploadedToYouTube
 R typeinfo name for CMsgReplicateConVars
 R typeinfo name for CMsgRequestInventoryRefresh
 R typeinfo name for CMsgRequestItemSchemaData
 R typeinfo name for CMsgSOCacheSubscribed
 R typeinfo name for CMsgSOCacheSubscribed_SubscribedType
 R typeinfo name for CMsgSOCacheSubscriptionCheck
 R typeinfo name for CMsgSOCacheSubscriptionRefresh
 R typeinfo name for CMsgSOCacheUnsubscribed
 R typeinfo name for CMsgSOCacheVersion
 R typeinfo name for CMsgSOMultipleObjects
 R typeinfo name for CMsgSOMultipleObjects_SingleObject
 R typeinfo name for CMsgSOSingleObject
 R typeinfo name for CMsgSelectItemPresetForClass
 R typeinfo name for CMsgSelectItemPresetForClassReply
 R typeinfo name for CMsgServerAvailable
 R typeinfo name for CMsgSetPresetItemPosition
 R typeinfo name for CMsgSortItems
 R typeinfo name for CMsgStoreGetUserData
 R typeinfo name for CMsgStoreGetUserDataResponse
 R typeinfo name for CMsgSystemBroadcast
 R typeinfo name for CMsgUpdateItemSchema
 R typeinfo name for CMsgUpdatePeriodicEvent
 R typeinfo name for CMsgUseItem
 R typeinfo name for CMsgWebAPIKey
 R typeinfo name for CMsgWebAPIRequest
 R typeinfo name for CMultiPlayerAnimState
 R typeinfo name for CMultiSource
 R typeinfo name for CMultiplayRules
 R typeinfo name for CMultiplayer_Expresser
 R typeinfo name for CNPCBaseInteractive<CAI_BaseNPC>
 R typeinfo name for CNPCBaseInteractive<CAI_BasePhysicsFlyingBot>
 R typeinfo name for CNPCEventResponseSystem
 R typeinfo name for CNPCEventResponseSystemEntity
 R typeinfo name for CNPCMaker
 R typeinfo name for CNPCSpawnDestination
 R typeinfo name for CNPC_Bullseye
 R typeinfo name for CNPC_EnemyFinder
 R typeinfo name for CNPC_EnemyFinderCombineCannon
 R typeinfo name for CNPC_FloorTurret
 R typeinfo name for CNPC_Furniture
 R typeinfo name for CNPC_HoverTurret
 R typeinfo name for CNPC_PersonalityCore
 R typeinfo name for CNPC_Portal_FloorTurret
 R typeinfo name for CNPC_RocketTurret
 R typeinfo name for CNPC_SecurityCamera
 R typeinfo name for CNPC_VehicleDriver
 R typeinfo name for CNPC_Wheatley_Boss
 R typeinfo name for CNavArea
 R typeinfo name for CNavAreaCriticalData
 R typeinfo name for CNavMesh
 R typeinfo name for CNeurotoxinCountdown
 R typeinfo name for CNewNPC
 R typeinfo name for CNewRecharge
 R typeinfo name for CNoHoliday
 R typeinfo name for CNodeEnt
 R typeinfo name for CNodeFilter
 R typeinfo name for CNotifyList
 R typeinfo name for CNuggetDirector
 R typeinfo name for CNullEntity
 R typeinfo name for COrHoliday
 R typeinfo name for COrnamentProp
 R typeinfo name for COuttroStats
 R typeinfo name for CPASAttenuationFilter
 R typeinfo name for CPASFilter
 R typeinfo name for CPSCollisionEntity
 R typeinfo name for CPS_AutoGameSys_EntityListener
 R typeinfo name for CPVSFilter
 R typeinfo name for CPVS_Extender
 R typeinfo name for CPaintAffectedEntityList
 R typeinfo name for CPaintBlob
 R typeinfo name for CPaintCleanserManager
 R typeinfo name for CPaintDatabase
 R typeinfo name for CPaintSaveRestoreBlockHandler
 R typeinfo name for CPaintSphere
 R typeinfo name for CPaintSprayer
 R typeinfo name for CPaintStream
 R typeinfo name for CPaintStreamManager
 R typeinfo name for CPaintableEntity<CBaseMultiplayerPlayer>
 R typeinfo name for CPaintableEntity<CBaseProjectedEntity>
 R typeinfo name for CPaintableEntity<CNPC_FloorTurret>
 R typeinfo name for CPaintableEntity<CPhysicsProp>
 R typeinfo name for CParticleFire
 R typeinfo name for CParticleLight
 R typeinfo name for CParticlePerformanceMonitor
 R typeinfo name for CParticleSystem
 R typeinfo name for CParticleSystemQuery
 R typeinfo name for CPathCorner
 R typeinfo name for CPathCornerCrash
 R typeinfo name for CPathKeyFrame
 R typeinfo name for CPathTrack
 R typeinfo name for CPathfindNearestNodeFilter
 R typeinfo name for CPhysBallSocket
 R typeinfo name for CPhysBox
 R typeinfo name for CPhysBoxMultiplayer
 R typeinfo name for CPhysConstraint
 R typeinfo name for CPhysConstraintEvents
 R typeinfo name for CPhysConstraintSystem
 R typeinfo name for CPhysConvert
 R typeinfo name for CPhysExplosion
 R typeinfo name for CPhysFixed
 R typeinfo name for CPhysForce
 R typeinfo name for CPhysHinge
 R typeinfo name for CPhysImpact
 R typeinfo name for CPhysLength
 R typeinfo name for CPhysMagnet
 R typeinfo name for CPhysMotor
 R typeinfo name for CPhysObjSaveRestoreOps
 R typeinfo name for CPhysPulley
 R typeinfo name for CPhysSaveRestoreBlockHandler
 R typeinfo name for CPhysSlideConstraint
 R typeinfo name for CPhysSphere
 R typeinfo name for CPhysThruster
 R typeinfo name for CPhysTorque
 R typeinfo name for CPhysicsCannister
 R typeinfo name for CPhysicsCloneArea
 R typeinfo name for CPhysicsEntitySolver
 R typeinfo name for CPhysicsGameTrace
 R typeinfo name for CPhysicsHook
 R typeinfo name for CPhysicsNPCSolver
 R typeinfo name for CPhysicsProp
 R typeinfo name for CPhysicsPropMultiplayer
 R typeinfo name for CPhysicsPropRespawnable
 R typeinfo name for CPhysicsPushedEntities
 R typeinfo name for CPhysicsShadowClone
 R typeinfo name for CPhysicsShake
 R typeinfo name for CPhysicsSpring
 R typeinfo name for CPhysicsWind
 R typeinfo name for CPhysicsWire
 R typeinfo name for CPlasma
 R typeinfo name for CPlatTrigger
 R typeinfo name for CPlayerInfo
 R typeinfo name for CPlayerInfoManager
 R typeinfo name for CPlayerInventory
 R typeinfo name for CPlayerLocalData
 R typeinfo name for CPlayerLocalData::NetworkVar_m_PlayerFog
 R typeinfo name for CPlayerLocalData::NetworkVar_m_audio
 R typeinfo name for CPlayerLocalData::NetworkVar_m_skybox3d
 R typeinfo name for CPlayerMove
 R typeinfo name for CPlayerPickupController
 R typeinfo name for CPlayerResource
 R typeinfo name for CPlayerState
 R typeinfo name for CPlayerVoiceListener
 R typeinfo name for CPluginBotManager
 R typeinfo name for CPluginHelpersCheck
 R typeinfo name for CPointAngleSensor
 R typeinfo name for CPointAngularVelocitySensor
 R typeinfo name for CPointBonusMapsAccessor
 R typeinfo name for CPointBroadcastClientCommand
 R typeinfo name for CPointCamera
 R typeinfo name for CPointChangelevel
 R typeinfo name for CPointClientCommand
 R typeinfo name for CPointCombineBallLauncher
 R typeinfo name for CPointCommentaryNode
 R typeinfo name for CPointDevShotCamera
 R typeinfo name for CPointEntity
 R typeinfo name for CPointEntityFinder
 R typeinfo name for CPointFutbolShooter
 R typeinfo name for CPointGamestatsCounter
 R typeinfo name for CPointHurt
 R typeinfo name for CPointPlayerMoveConstraint
 R typeinfo name for CPointProximitySensor
 R typeinfo name for CPointServerCommand
 R typeinfo name for CPointSpotlight
 R typeinfo name for CPointSurvey
 R typeinfo name for CPointTeleport
 R typeinfo name for CPointTemplate
 R typeinfo name for CPointTemplatePrecacher
 R typeinfo name for CPointVelocitySensor
 R typeinfo name for CPolyhedron
 R typeinfo name for CPolyhedron_AllocByNew
 R typeinfo name for CPolyhedron_LumpedMemory
 R typeinfo name for CPolyhedron_TempMemory
 R typeinfo name for CPortal2ItemDefinition
 R typeinfo name for CPortal2ItemSchema
 R typeinfo name for CPortal2ItemSystem
 R typeinfo name for CPortal2ResearchDataTracker
 R typeinfo name for CPortalButtonTrigger
 R typeinfo name for CPortalCollideableEnumerator
 R typeinfo name for CPortalCredits
 R typeinfo name for CPortalGameMovement
 R typeinfo name for CPortalGameRules
 R typeinfo name for CPortalGameRulesProxy
 R typeinfo name for CPortalGameStats
 R typeinfo name for CPortalInventoryManager
 R typeinfo name for CPortalLaser
 R typeinfo name for CPortalLaserTarget
 R typeinfo name for CPortalMPGameRules
 R typeinfo name for CPortalMPGameRulesProxy
 R typeinfo name for CPortalMPStats
 R typeinfo name for CPortalMPStatsProxy
 R typeinfo name for CPortalPlayerAnimState
 R typeinfo name for CPortalPlayerInventory
 R typeinfo name for CPortalPlayerLocalData
 R typeinfo name for CPortalPlayerLocalData::NetworkVar_m_PaintedPowerTimer
 R typeinfo name for CPortalPlayerModelPrecacher
 R typeinfo name for CPortalPlayerShared
 R typeinfo name for CPortalRaceCheckpoint
 R typeinfo name for CPortalRagdoll
 R typeinfo name for CPortalServerDllPropPortalLocator
 R typeinfo name for CPortalSimulator
 R typeinfo name for CPortalSimulator::NetworkVar_m_InternalData
 R typeinfo name for CPortalSimulatorEventCallbacks
 R typeinfo name for CPortalStatsController
 R typeinfo name for CPortalVortexEffectManager
 R typeinfo name for CPortal_Base2D
 R typeinfo name for CPortal_Base2D::NetworkVar_m_PortalSimulator
 R typeinfo name for CPortal_Base2D_Shared
 R typeinfo name for CPortal_CollisionEvent
 R typeinfo name for CPortal_Player
 R typeinfo name for CPortal_Player::NetworkVar_m_PortalLocal
 R typeinfo name for CPortal_Player::NetworkVar_m_Shared
 R typeinfo name for CPortal_Player::NetworkVar_m_StatsThisLevel
 R typeinfo name for CPortal_PointPush
 R typeinfo name for CPortal_UI_Controller
 R typeinfo name for CPoseController
 R typeinfo name for CPostFrameNavigationHook
 R typeinfo name for CPostProcessController
 R typeinfo name for CPostProcessSystem
 R typeinfo name for CPrecacheHandler
 R typeinfo name for CPrecacheOtherList
 R typeinfo name for CPrecacheRegister
 R typeinfo name for CPrecipitation
 R typeinfo name for CPrecipitationBlocker
 R typeinfo name for CPredictedViewModel
 R typeinfo name for CProceduralGenerator
 R typeinfo name for CProjectedDecal
 R typeinfo name for CProjectedTractorBeamEntity
 R typeinfo name for CProjectedWallEntity
 R typeinfo name for CProjectorCollideList
 R typeinfo name for CPropButton
 R typeinfo name for CPropCombineBall
 R typeinfo name for CPropData
 R typeinfo name for CPropDoorRotating
 R typeinfo name for CPropEnergyBall
 R typeinfo name for CPropExplodingFutbol
 R typeinfo name for CPropFloorBallButton
 R typeinfo name for CPropFloorButton
 R typeinfo name for CPropFloorCubeButton
 R typeinfo name for CPropFutbolSocket
 R typeinfo name for CPropFutbolSpawner
 R typeinfo name for CPropGladosCore
 R typeinfo name for CPropGlassFutbol
 R typeinfo name for CPropIndicatorPanel
 R typeinfo name for CPropLinkedPortalDoor
 R typeinfo name for CPropMonsterBox
 R typeinfo name for CPropPaintBomb
 R typeinfo name for CPropPersonalitySphere
 R typeinfo name for CPropPhysicsPaintable
 R typeinfo name for CPropPortalStatsDisplay
 R typeinfo name for CPropRocketTripwire
 R typeinfo name for CPropTelescopicArm
 R typeinfo name for CPropTestChamberDoor
 R typeinfo name for CPropTicTacToePanel
 R typeinfo name for CPropTractorBeamProjector
 R typeinfo name for CPropUnderButton
 R typeinfo name for CPropUnderFloorButton
 R typeinfo name for CPropVehicle
 R typeinfo name for CPropVehicleChoreoGeneric
 R typeinfo name for CPropVehicleChoreoGeneric::NetworkVar_m_vehicleView
 R typeinfo name for CPropVehicleDriveable
 R typeinfo name for CPropVehicleViewController
 R typeinfo name for CPropWallProjector
 R typeinfo name for CPropWeightedCube
 R typeinfo name for CProp_Hallucination
 R typeinfo name for CProp_Mirror
 R typeinfo name for CProp_Portal
 R typeinfo name for CProportionalFloatProperty
 R typeinfo name for CProportionalIntProperty
 R typeinfo name for CProportionalXPosProperty
 R typeinfo name for CProportionalYPosProperty
 R typeinfo name for CPushBlockerEnum
 R typeinfo name for CPushable
 R typeinfo name for CRagGib
 R typeinfo name for CRagdollBoogie
 R typeinfo name for CRagdollConstraint
 R typeinfo name for CRagdollLRURetirement
 R typeinfo name for CRagdollMagnet
 R typeinfo name for CRagdollManager
 R typeinfo name for CRagdollProp
 R typeinfo name for CRagdollPropAttached
 R typeinfo name for CRallyPoint
 R typeinfo name for CRecharge
 R typeinfo name for CRecipientFilter
 R typeinfo name for CRefCountServiceBase<true, CRefMT>
 R typeinfo name for CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >
 R typeinfo name for CRefCounted1<IRefCounted, CRefCountServiceBase<true, CRefMT> >
 R typeinfo name for CRegistry
 R typeinfo name for CReliableBroadcastRecipientFilter
 R typeinfo name for CRemarkableEntityList
 R typeinfo name for CRemoteBugHelper
 R typeinfo name for CRespawnEntitiesFilter
 R typeinfo name for CResponseQueueManager
 R typeinfo name for CResponseRulesToEngineInterface
 R typeinfo name for CResponseSystemSaveRestoreOps
 R typeinfo name for CRestore
 R typeinfo name for CRevertSaved
 R typeinfo name for CRocket_Turret_Projectile
 R typeinfo name for CRopeAnchor
 R typeinfo name for CRopeKeyframe
 R typeinfo name for CRotButton
 R typeinfo name for CRotDoor
 R typeinfo name for CRotorWashShooter
 R typeinfo name for CRuleBrushEntity
 R typeinfo name for CRuleEntity
 R typeinfo name for CRulePointEntity
 R typeinfo name for CSOEconClaimCode
 R typeinfo name for CSOEconGameAccountClient
 R typeinfo name for CSOEconItem
 R typeinfo name for CSOEconItemAttribute
 R typeinfo name for CSOEconItemEquipped
 R typeinfo name for CSOEconItemPresetInstance
 R typeinfo name for CSOItemCommunityMap
 R typeinfo name for CSOItemCriteria
 R typeinfo name for CSOItemCriteriaCondition
 R typeinfo name for CSOItemRecipe
 R typeinfo name for CSOLobbyInvite
 R typeinfo name for CSOPartyInvite
 R typeinfo name for CSOSelectedItemPreset
 R typeinfo name for CSave
 R typeinfo name for CSaveRestoreBlockSet
 R typeinfo name for CSceneEntity
 R typeinfo name for CSceneFindMarkFilter
 R typeinfo name for CSceneFindNearestMarkFilter
 R typeinfo name for CSceneListManager
 R typeinfo name for CSceneManager
 R typeinfo name for CScenePrecacheSystem
 R typeinfo name for CSceneTokenProcessor
 R typeinfo name for CScriptIntro
 R typeinfo name for CScriptedTarget
 R typeinfo name for CServerBenchmark
 R typeinfo name for CServerDLLSharedAppSystems
 R typeinfo name for CServerGameClients
 R typeinfo name for CServerGameDLL
 R typeinfo name for CServerGameEnts
 R typeinfo name for CServerGameTags
 R typeinfo name for CServerNetworkProperty
 R typeinfo name for CServerOnlyEntity
 R typeinfo name for CServerOnlyPointEntity
 R typeinfo name for CServerRagdollTrigger
 R typeinfo name for CServerTools
 R typeinfo name for CShadowControl
 R typeinfo name for CSharedUtlVectorBase<BlobInterpolationData_t, CPaintStream::SharedVar_m_sharedBlobData>
 R typeinfo name for CSharedVarBase<CThreadFastMutex, CPaintStream::SharedVar_m_sharedBlobDataMutex>
 R typeinfo name for CSharedVarBase<CUtlVector<BlobInterpolationData_t, CUtlMemory<BlobInterpolationData_t, int> >, CPaintStream::SharedVar_m_sharedBlobData>
 R typeinfo name for CShower
 R typeinfo name for CSimThinkManager
 R typeinfo name for CSimplePhysicsBrush
 R typeinfo name for CSimplePhysicsProp
 R typeinfo name for CSingleDayHoliday
 R typeinfo name for CSingleUserRecipientFilter
 R typeinfo name for CSingleplayRules
 R typeinfo name for CSkipKeys
 R typeinfo name for CSkyCamera
 R typeinfo name for CSkyboxSwapper
 R typeinfo name for CSlideshowDisplay
 R typeinfo name for CSmallTextEntry
 R typeinfo name for CSmokeStack
 R typeinfo name for CSolidSetDefaults
 R typeinfo name for CSoundControllerImp
 R typeinfo name for CSoundEmitterSystem
 R typeinfo name for CSoundEnt
 R typeinfo name for CSoundEnvelopeController
 R typeinfo name for CSoundPatchSaveRestoreOps
 R typeinfo name for CSoundscapeSystem
 R typeinfo name for CSpatialEntity
 R typeinfo name for CSpeaker
 R typeinfo name for CSpotlightEnd
 R typeinfo name for CSprayCan
 R typeinfo name for CSprite
 R typeinfo name for CSpriteOriented
 R typeinfo name for CSpriteTrail
 R typeinfo name for CStaticCollisionPolyhedronCache
 R typeinfo name for CStatueProp
 R typeinfo name for CStdStringSaveRestoreOps
 R typeinfo name for CSteamJet
 R typeinfo name for CSteamWorksGameStatsUploader
 R typeinfo name for CStringPool
 R typeinfo name for CStringProperty
 R typeinfo name for CStringTableSaveRestoreOps
 R typeinfo name for CStripWeapons
 R typeinfo name for CSun
 R typeinfo name for CSunlightShadowControl
 R typeinfo name for CTEAntlionDust
 R typeinfo name for CTEArmorRicochet
 R typeinfo name for CTEBSPDecal
 R typeinfo name for CTEBaseBeam
 R typeinfo name for CTEBeamEntPoint
 R typeinfo name for CTEBeamEnts
 R typeinfo name for CTEBeamFollow
 R typeinfo name for CTEBeamLaser
 R typeinfo name for CTEBeamPoints
 R typeinfo name for CTEBeamRing
 R typeinfo name for CTEBeamRingPoint
 R typeinfo name for CTEBeamSpline
 R typeinfo name for CTEBloodSprite
 R typeinfo name for CTEBloodStream
 R typeinfo name for CTEBreakModel
 R typeinfo name for CTEBubbleTrail
 R typeinfo name for CTEBubbles
 R typeinfo name for CTEClientProjectile
 R typeinfo name for CTEDecal
 R typeinfo name for CTEDust
 R typeinfo name for CTEDynamicLight
 R typeinfo name for CTEEffectDispatch
 R typeinfo name for CTEEnergySplash
 R typeinfo name for CTEExplosion
 R typeinfo name for CTEFizz
 R typeinfo name for CTEFootprintDecal
 R typeinfo name for CTEFoundryHelpers
 R typeinfo name for CTEGaussExplosion
 R typeinfo name for CTEGlowSprite
 R typeinfo name for CTEImpact
 R typeinfo name for CTEKillPlayerAttachments
 R typeinfo name for CTELargeFunnel
 R typeinfo name for CTEMetalSparks
 R typeinfo name for CTEMuzzleFlash
 R typeinfo name for CTEParticleSystem
 R typeinfo name for CTEPhysicsProp
 R typeinfo name for CTEPlayerAnimEvent
 R typeinfo name for CTEPlayerDecal
 R typeinfo name for CTEProjectedDecal
 R typeinfo name for CTEShatterSurface
 R typeinfo name for CTEShowLine
 R typeinfo name for CTESmoke
 R typeinfo name for CTESparks
 R typeinfo name for CTESprite
 R typeinfo name for CTESpriteSpray
 R typeinfo name for CTEWallPaintedEvent
 R typeinfo name for CTEWorldDecal
 R typeinfo name for CTankTargetChange
 R typeinfo name for CTankTrainAI
 R typeinfo name for CTargetCDAudioRep
 R typeinfo name for CTargetChangeGravity
 R typeinfo name for CTeam
 R typeinfo name for CTeamSpawnPoint
 R typeinfo name for CTeamVehicleSpawnPoint
 R typeinfo name for CTeamplayRules
 R typeinfo name for CTempEntTester
 R typeinfo name for CTempEntsSystem
 R typeinfo name for CTemplateNPCMaker
 R typeinfo name for CTemplate_SaveRestoreBlockHandler
 R typeinfo name for CTemplatesHook
 R typeinfo name for CTesla
 R typeinfo name for CTestEffect
 R typeinfo name for CTestTraceline
 R typeinfo name for CTest_ProxyToggle_Networkable
 R typeinfo name for CTextureIdProperty
 R typeinfo name for CTextureToggle
 R typeinfo name for CThinkContextsSaveDataOps
 R typeinfo name for CThrustController
 R typeinfo name for CTimerEntity
 R typeinfo name for CTonemapSystem
 R typeinfo name for CTonemapTrigger
 R typeinfo name for CToolFrameworkServer
 R typeinfo name for CTraceFilter
 R typeinfo name for CTraceFilterAgainstEntityList
 R typeinfo name for CTraceFilterCollisionGroupDelta
 R typeinfo name for CTraceFilterDoor
 R typeinfo name for CTraceFilterEntitiesOnly
 R typeinfo name for CTraceFilterEntity
 R typeinfo name for CTraceFilterEntityIgnoreOther
 R typeinfo name for CTraceFilterGroundEntities
 R typeinfo name for CTraceFilterHitAll
 R typeinfo name for CTraceFilterLOS
 R typeinfo name for CTraceFilterMelee
 R typeinfo name for CTraceFilterNav
 R typeinfo name for CTraceFilterNoCombatCharacters
 R typeinfo name for CTraceFilterNoNPCsOrPlayer
 R typeinfo name for CTraceFilterNoPlayers
 R typeinfo name for CTraceFilterOnlyHitThis
 R typeinfo name for CTraceFilterOnlyNPCsAndPlayer
 R typeinfo name for CTraceFilterPlayersNPCs
 R typeinfo name for CTraceFilterPlayersNPCsPhysicsProps
 R typeinfo name for CTraceFilterPushFinal
 R typeinfo name for CTraceFilterPushMove
 R typeinfo name for CTraceFilterSimple
 R typeinfo name for CTraceFilterSimpleClassnameList
 R typeinfo name for CTraceFilterSimpleList
 R typeinfo name for CTraceFilterSkipNPCs
 R typeinfo name for CTraceFilterSkipTwoEntities
 R typeinfo name for CTraceFilterSkipTwoEntitiesAndTeammates
 R typeinfo name for CTraceFilterTranslateClones
 R typeinfo name for CTraceFilterValidForDecal
 R typeinfo name for CTraceFilterWalkableEntities
 R typeinfo name for CTraceFilterWorldAndPropsOnly
 R typeinfo name for CTraceFilterWorldOnly
 R typeinfo name for CTracePassFilter
 R typeinfo name for CTraceTypeWrapper
 R typeinfo name for CTractorBeam_Manager
 R typeinfo name for CTransformedCollideable
 R typeinfo name for CTriggerAutoCrouch
 R typeinfo name for CTriggerBrush
 R typeinfo name for CTriggerCDAudio
 R typeinfo name for CTriggerCamera
 R typeinfo name for CTriggerCameraMultiplayer
 R typeinfo name for CTriggerCatapult
 R typeinfo name for CTriggerGravity
 R typeinfo name for CTriggerHierarchy
 R typeinfo name for CTriggerHurt
 R typeinfo name for CTriggerImpact
 R typeinfo name for CTriggerLook
 R typeinfo name for CTriggerMultiple
 R typeinfo name for CTriggerOnce
 R typeinfo name for CTriggerPaintCleanser
 R typeinfo name for CTriggerPhysicsTrap
 R typeinfo name for CTriggerPingDetector
 R typeinfo name for CTriggerPlayerMovement
 R typeinfo name for CTriggerPlayerTeam
 R typeinfo name for CTriggerPortalCleanser
 R typeinfo name for CTriggerProximity
 R typeinfo name for CTriggerPush
 R typeinfo name for CTriggerRPGFire
 R typeinfo name for CTriggerRemove
 R typeinfo name for CTriggerSave
 R typeinfo name for CTriggerSoundscape
 R typeinfo name for CTriggerTeleport
 R typeinfo name for CTriggerToggleSave
 R typeinfo name for CTriggerTraceEnum
 R typeinfo name for CTriggerVPhysicsMotion
 R typeinfo name for CTriggerViewProxy
 R typeinfo name for CTriggerVolume
 R typeinfo name for CTriggerWateryDeath
 R typeinfo name for CTriggerWeaponDissolve
 R typeinfo name for CTriggerWeaponStrip
 R typeinfo name for CTriggerWind
 R typeinfo name for CTrigger_TractorBeam
 R typeinfo name for CTurretTipController
 R typeinfo name for CUsePushFilter
 R typeinfo name for CUserCmd
 R typeinfo name for CUtlCStringConversion
 R typeinfo name for CUtlCachedFileData<CModelSoundsCache>
 R typeinfo name for CUtlCharConversion
 R typeinfo name for CUtlMapDataOps<CUtlMap<string_t, CSimpleSimTimer, char>, 2, 10>
 R typeinfo name for CUtlNoEscConversion
 R typeinfo name for CUtlSymbolDataOps
 R typeinfo name for CUtlVector<SCatapultData*, CUtlMemory<SCatapultData*, int> >
 R typeinfo name for CUtlVector<SDeaths*, CUtlMemory<SDeaths*, int> >
 R typeinfo name for CUtlVector<SFizzledData*, CUtlMemory<SFizzledData*, int> >
 R typeinfo name for CUtlVector<SMPMapStats*, CUtlMemory<SMPMapStats*, int> >
 R typeinfo name for CUtlVector<SPortalData*, CUtlMemory<SPortalData*, int> >
 R typeinfo name for CUtlVector<SPuzzleData*, CUtlMemory<SPuzzleData*, int> >
 R typeinfo name for CUtlVector<SStuckPlayers*, CUtlMemory<SStuckPlayers*, int> >
 R typeinfo name for CUtlVector<STaunts*, CUtlMemory<STaunts*, int> >
 R typeinfo name for CUtlVector<STractorBeamData*, CUtlMemory<STractorBeamData*, int> >
 R typeinfo name for CUtlVectorDataOps<CAI_InterestTarget, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >, 12>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >, 13>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CHandle<CBaseCombatWeapon>, CUtlMemory<CHandle<CBaseCombatWeapon>, int> >, 13>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, 13>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >, 13>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >, 13>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >, 13>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >, 13>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >, 13>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >, 13>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<Vector, CUtlMemory<Vector, int> >, 3>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<float, CUtlMemory<float, int> >, 16>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<string_t, CUtlMemory<string_t, int> >, 2>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<template_t, CUtlMemory<template_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >, 10>
 R typeinfo name for CVGuiScreen
 R typeinfo name for CVScriptGameSystem
 R typeinfo name for CVScriptSaveRestoreBlockHandler
 R typeinfo name for CVarBitVecSaveRestoreOps<CBitVec<32> >
 R typeinfo name for CVariantSaveDataOps
 R typeinfo name for CVehicleChoreoViewParser
 R typeinfo name for CVehicleSoundsParser
 R typeinfo name for CVisibilityMonitor
 R typeinfo name for CVoiceGameMgr
 R typeinfo name for CVoiceGameMgrHelper
 R typeinfo name for CWC_UpdateIgnoreList
 R typeinfo name for CWaterBullet
 R typeinfo name for CWaterLODControl
 R typeinfo name for CWateryDeathLeech
 R typeinfo name for CWeaponCubemap
 R typeinfo name for CWeaponCycler
 R typeinfo name for CWeaponItemBase
 R typeinfo name for CWeaponLOSFilter
 R typeinfo name for CWeaponList
 R typeinfo name for CWeaponPaintGun
 R typeinfo name for CWeaponPortalBase
 R typeinfo name for CWeaponPortalgun
 R typeinfo name for CWeaponPromoAntennaBall
 R typeinfo name for CWeaponPromoAntennaEgg
 R typeinfo name for CWeaponPromoHelmetBall
 R typeinfo name for CWeaponPromoHelmetEgg
 R typeinfo name for CWeeksBasedHoliday
 R typeinfo name for CWeightButton
 R typeinfo name for CWindowPane
 R typeinfo name for CWorld
 R typeinfo name for CWorldItem
 R typeinfo name for CWreckage
 R typeinfo name for CheckImage
 R typeinfo name for CleanserVortexTraceEnum
 R typeinfo name for ClientGamePrecachePrecache::CResourcePrecacher
 R typeinfo name for ClientPrecachePrecache::CResourcePrecacher
 R typeinfo name for ColumnButton
 R typeinfo name for ConCommand
 R typeinfo name for ConCommandBase
 R typeinfo name for ConVar
 R typeinfo name for CountdownTimer
 R typeinfo name for DamageDatabase
 R typeinfo name for DelayedSchemaData_GCDirectData
 R typeinfo name for DelayedSchemaData_HTTPResponseData
 R typeinfo name for Dragger
 R typeinfo name for DustTrail
 R typeinfo name for EffectsPrecachePrecache::CResourcePrecacher
 R typeinfo name for EntityParticleTrailInfo_t
 R typeinfo name for FileWeaponInfo_t
 R typeinfo name for FilterDamageType
 R typeinfo name for FilterTeam
 R typeinfo name for FizzlerEffects
 R typeinfo name for FizzlerMultiOriginSoundPlayer
 R typeinfo name for GCSDK::CGCClient
 R typeinfo name for GCSDK::CGCClientJob
 R typeinfo name for GCSDK::CGCClientSharedObjectCache
 R typeinfo name for GCSDK::CGCClientSharedObjectTypeCache
 R typeinfo name for GCSDK::CGCMsg<MsgGCVerifyCacheSubscription_t>
 R typeinfo name for GCSDK::CGCSOCacheSubscribedJob
 R typeinfo name for GCSDK::CGCSOCacheSubscriptionCheck
 R typeinfo name for GCSDK::CGCSOCacheUnsubscribedJob
 R typeinfo name for GCSDK::CGCSOCreateJob
 R typeinfo name for GCSDK::CGCSODestroyJob
 R typeinfo name for GCSDK::CGCSOUpdateJob
 R typeinfo name for GCSDK::CGCSOUpdateMultipleJob
 R typeinfo name for GCSDK::CJob
 R typeinfo name for GCSDK::CMsgBase_t<GCSDK::GCMsgHdrEx_t>
 R typeinfo name for GCSDK::CProtoBufGCClientSendHandler
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgConVarValue>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgReplicateConVars>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgSOSingleObject>
 R typeinfo name for GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgConVarValue>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgProtoBufHeader>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgReplicateConVars>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgRequestItemSchemaData>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscribed>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionCheck>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionRefresh>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheUnsubscribed>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgSOMultipleObjects>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgSOSingleObject>
 R typeinfo name for GCSDK::CProtoBufMsgMemoryPool<CMsgUpdateItemSchema>
 R typeinfo name for GCSDK::CProtoBufNetPacket
 R typeinfo name for GCSDK::CRefCount
 R typeinfo name for GCSDK::CSharedObject
 R typeinfo name for GCSDK::CSharedObjectCache
 R typeinfo name for GCSDK::CSharedObjectTypeCache
 R typeinfo name for GCSDK::CStructNetPacket
 R typeinfo name for GCSDK::IMsgNetPacket
 R typeinfo name for GCSDK::IProtoBufMsg
 R typeinfo name for GCSDK::IProtoBufMsg::IProtoBufSendHandler
 R typeinfo name for GCSDK::IProtoBufMsgMemoryPool
 R typeinfo name for GCSDK::ISharedObjectListener
 R typeinfo name for HidingSpot
 R typeinfo name for HitBoxDamagedEntity<PlayerPickupPaintPowerUser<CNPC_FloorTurret> >
 R typeinfo name for IAI_BehaviorBridge
 R typeinfo name for IAI_MovementSink
 R typeinfo name for IAppSystem
 R typeinfo name for IBaseCacheInfo
 R typeinfo name for IBaseInterface
 R typeinfo name for IBotController
 R typeinfo name for IBotManager
 R typeinfo name for IBreakableWithPropData
 R typeinfo name for ICatcher
 R typeinfo name for IChoreoEventCallback
 R typeinfo name for IChoreoStringPool
 R typeinfo name for ICollideable
 R typeinfo name for ICommandCallback
 R typeinfo name for ICommandCompletionCallback
 R typeinfo name for IConCommandBaseAccessor
 R typeinfo name for IConVar
 R typeinfo name for ICountedPartitionEnumerator
 R typeinfo name for ICurveDataAccessor
 R typeinfo name for IDecalEmitterSystem
 R typeinfo name for IDelayedSchemaData
 R typeinfo name for IDrivableVehicle
 R typeinfo name for IEconItemInterface
 R typeinfo name for IEconTool
 R typeinfo name for IEffects
 R typeinfo name for IEntityDataInstantiator
 R typeinfo name for IEntityEnumerator
 R typeinfo name for IEntityFactory
 R typeinfo name for IEntityFactoryDictionary
 R typeinfo name for IEntityFindFilter
 R typeinfo name for IEntityListener
 R typeinfo name for IEntitySaveUtils
 R typeinfo name for IEventRegisterCallback
 R typeinfo name for IGCUser
 R typeinfo name for IGameEventListener2
 R typeinfo name for IGameMovement
 R typeinfo name for IGameStatTracker
 R typeinfo name for IGameStatTracker::CGameStatList<SCatapultData>
 R typeinfo name for IGameStatTracker::CGameStatList<SDeaths>
 R typeinfo name for IGameStatTracker::CGameStatList<SFizzledData>
 R typeinfo name for IGameStatTracker::CGameStatList<SMPMapStats>
 R typeinfo name for IGameStatTracker::CGameStatList<SPortalData>
 R typeinfo name for IGameStatTracker::CGameStatList<SPuzzleData>
 R typeinfo name for IGameStatTracker::CGameStatList<SStuckPlayers>
 R typeinfo name for IGameStatTracker::CGameStatList<STaunts>
 R typeinfo name for IGameStatTracker::CGameStatList<STractorBeamData>
 R typeinfo name for IGameStatTracker::IStatContainer
 R typeinfo name for IGameSystem
 R typeinfo name for IGameSystemPerFrame
 R typeinfo name for IHLTVDirector
 R typeinfo name for IHandleEntity
 R typeinfo name for IHasAttributes
 R typeinfo name for IInventoryUpdateListener
 R typeinfo name for IIsHolidayActive
 R typeinfo name for IKeyValuesDumpContext
 R typeinfo name for IKeyValuesDumpContextAsText
 R typeinfo name for ILagCompensationManager
 R typeinfo name for IMapEntityFilter
 R typeinfo name for IMatchEventsSink
 R typeinfo name for IMotionEvent
 R typeinfo name for IMoveHelper
 R typeinfo name for IMultiplayerPhysics
 R typeinfo name for INPCInteractive
 R typeinfo name for INPCPassengerCarrier
 R typeinfo name for INavAvoidanceObstacle
 R typeinfo name for INearestNodeFilter
 R typeinfo name for INodeListFilter
 R typeinfo name for INotify
 R typeinfo name for IPaintPowerUser
 R typeinfo name for IPaintStreamAutoList
 R typeinfo name for IPaintableEntity
 R typeinfo name for IParentPropInteraction
 R typeinfo name for IParticleOperatorDefinition
 R typeinfo name for IParticleSystemQuery
 R typeinfo name for IPartitionEnumerator
 R typeinfo name for IPartitionQueryCallback
 R typeinfo name for IPhysSaveRestoreManager
 R typeinfo name for IPhysicsCollisionEvent
 R typeinfo name for IPhysicsCollisionSolver
 R typeinfo name for IPhysicsConstraintEvent
 R typeinfo name for IPhysicsGameTrace
 R typeinfo name for IPhysicsObjectEvent
 R typeinfo name for IPlayerInfo
 R typeinfo name for IPlayerInfoManager
 R typeinfo name for IPlayerPickupVPhysics
 R typeinfo name for IPluginHelpersCheck
 R typeinfo name for IPortalLaserAutoList
 R typeinfo name for IPortalServerDllPropPortalLocator
 R typeinfo name for IPositionWatcher
 R typeinfo name for IPrecacheHandler
 R typeinfo name for IPredictionSystem
 R typeinfo name for IProjectedWallEntityAutoList
 R typeinfo name for IPropWeightedCubeAutoList
 R typeinfo name for IRecipientFilter
 R typeinfo name for IRefCounted
 R typeinfo name for IRegistry
 R typeinfo name for IResourcePrecacher
 R typeinfo name for IRestore
 R typeinfo name for IRotorWashShooter
 R typeinfo name for ISave
 R typeinfo name for ISaveRestoreBlockHandler
 R typeinfo name for ISaveRestoreBlockSet
 R typeinfo name for ISaveRestoreOps
 R typeinfo name for ISceneTokenProcessor
 R typeinfo name for IScorer
 R typeinfo name for IScriptInstanceHelper
 R typeinfo name for IServerBenchmark
 R typeinfo name for IServerDLLSharedAppSystems
 R typeinfo name for IServerEntity
 R typeinfo name for IServerGameClients
 R typeinfo name for IServerGameDLL
 R typeinfo name for IServerGameEnts
 R typeinfo name for IServerGameTags
 R typeinfo name for IServerNetworkable
 R typeinfo name for IServerTools
 R typeinfo name for IServerUnknown
 R typeinfo name for IServerVehicle
 R typeinfo name for ISharedVarBase
 R typeinfo name for ITempEntsSystem
 R typeinfo name for IToolFrameworkServer
 R typeinfo name for ITraceFilter
 R typeinfo name for ITriggerCatapultAutoList
 R typeinfo name for ITriggerPortalCleanserAutoList
 R typeinfo name for ITriggerTractorBeamAutoList
 R typeinfo name for IVPhysicsKeyHandler
 R typeinfo name for IVPhysicsWatcher
 R typeinfo name for IVehicle
 R typeinfo name for IVoiceGameMgrHelper
 R typeinfo name for IWatcherCallback
 R typeinfo name for IntervalTimer
 R typeinfo name for MaterialIndexDataOpsProxy
 R typeinfo name for MenuItemCheckImage
 R typeinfo name for MovieExplosion
 R typeinfo name for PS_InternalData_t
 R typeinfo name for PS_InternalData_t::NetworkVar_Simulation
 R typeinfo name for PS_SimulationData_t
 R typeinfo name for PaintPowerInfo_t
 R typeinfo name for PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >
 R typeinfo name for PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >
 R typeinfo name for PaintPowerUser<CPaintableEntity<CPhysicsProp> >
 R typeinfo name for ParticleSmokeGrenade
 R typeinfo name for PhysFrictionEffectPrecache::CResourcePrecacher
 R typeinfo name for PlayerPickupPaintPowerUser<CNPC_FloorTurret>
 R typeinfo name for PlayerPickupPaintPowerUser<CPhysicsProp>
 R typeinfo name for PortalPlayerStatistics_t
 R typeinfo name for PrecachePointCommentaryNodePrecache::CResourcePrecacher
 R typeinfo name for ProjectedEntityAmbientSoundProxy
 R typeinfo name for PropPaintPowerUser<CNPC_FloorTurret>
 R typeinfo name for PropPaintPowerUser<CPhysicsProp>
 R typeinfo name for RR::CApplyContextOperator
 R typeinfo name for RR::CDecrementOperator
 R typeinfo name for RR::CIncrementOperator
 R typeinfo name for RR::CToggleOperator
 R typeinfo name for RadioImage
 R typeinfo name for ResponseRules::CResponseSystem
 R typeinfo name for ResponseRules::IEngineEmulator
 R typeinfo name for ResponseRules::IResponseFilter
 R typeinfo name for ResponseRules::IResponseSystem
 R typeinfo name for RocketTrail
 R typeinfo name for SendProp
 R typeinfo name for SmokeTrail
 R typeinfo name for SporeExplosion
 R typeinfo name for SporeTrail
 R typeinfo name for WeaponResourcesPrecache::CResourcePrecacher
 R typeinfo name for audioparams_t
 R typeinfo name for entityflamePrecache::CResourcePrecacher
 R typeinfo name for env_entity_freezingPrecache::CResourcePrecacher
 R typeinfo name for fogparams_t
 R typeinfo name for fogplayerparams_t
 R typeinfo name for locksound_t
 R typeinfo name for sky3dparams_t
 R typeinfo name for sky3dparams_t::NetworkVar_fog
 R typeinfo name for spraycanPrecache::CResourcePrecacher
 R typeinfo name for vehicle_crashsound_t
 R typeinfo name for vehicle_gear_t
 R typeinfo name for vehiclesounds_t
 R typeinfo name for vehicleview_t
 R typeinfo name for vgui::AnimatingImagePanel
 R typeinfo name for vgui::AnimationController
 R typeinfo name for vgui::BaseTooltip
 R typeinfo name for vgui::BuildGroup
 R typeinfo name for vgui::BuildModeDialog
 R typeinfo name for vgui::Button
 R typeinfo name for vgui::CBitmapImagePanel
 R typeinfo name for vgui::CTreeViewListControl
 R typeinfo name for vgui::CheckButton
 R typeinfo name for vgui::CircularProgressBar
 R typeinfo name for vgui::ClickPanel
 R typeinfo name for vgui::ComboBox
 R typeinfo name for vgui::ComboBoxButton
 R typeinfo name for vgui::ContinuousProgressBar
 R typeinfo name for vgui::CvarToggleCheckButton<ConVarRef>
 R typeinfo name for vgui::Divider
 R typeinfo name for vgui::EditablePanel
 R typeinfo name for vgui::ExpandButton
 R typeinfo name for vgui::FocusNavGroup
 R typeinfo name for vgui::Frame
 R typeinfo name for vgui::FrameButton
 R typeinfo name for vgui::FrameSystemButton
 R typeinfo name for vgui::GraphPanel
 R typeinfo name for vgui::IClientPanel
 R typeinfo name for vgui::IImage
 R typeinfo name for vgui::IPanelAnimationPropertyConverter
 R typeinfo name for vgui::Image
 R typeinfo name for vgui::ImagePanel
 R typeinfo name for vgui::Label
 R typeinfo name for vgui::ListPanel
 R typeinfo name for vgui::ListViewItem
 R typeinfo name for vgui::ListViewPanel
 R typeinfo name for vgui::Menu
 R typeinfo name for vgui::MenuBar
 R typeinfo name for vgui::MenuButton
 R typeinfo name for vgui::MenuItem
 R typeinfo name for vgui::MenuSeparator
 R typeinfo name for vgui::MessageBox
 R typeinfo name for vgui::Panel
 R typeinfo name for vgui::PanelListPanel
 R typeinfo name for vgui::ProgressBar
 R typeinfo name for vgui::RadioButton
 R typeinfo name for vgui::RichText
 R typeinfo name for vgui::RichTextInterior
 R typeinfo name for vgui::ScalableImagePanel
 R typeinfo name for vgui::ScrollBar
 R typeinfo name for vgui::ScrollBarSlider
 R typeinfo name for vgui::TextEntry
 R typeinfo name for vgui::TextImage
 R typeinfo name for vgui::TextTooltip
 R typeinfo name for vgui::ToggleButton
 R typeinfo name for vgui::TreeNode
 R typeinfo name for vgui::TreeNodeDropPanel
 R typeinfo name for vgui::TreeNodeImage
 R typeinfo name for vgui::TreeNodeText
 R typeinfo name for vgui::TreeView
 R typeinfo name for vgui::TreeViewSubPanel
 R typeinfo name for vgui::URLLabel
 R typeinfo name for vgui_screenPrecache::CResourcePrecacher
 R typeinfo name for weapon_portalgunPrecache::CResourcePrecacher
 R typeinfo name for weapon_promo_antenna_ballPrecache::CResourcePrecacher
 R typeinfo name for weapon_promo_antenna_eggPrecache::CResourcePrecacher
 R typeinfo name for weapon_promo_helmet_ballPrecache::CResourcePrecacher
 R typeinfo name for weapon_promo_helmet_eggPrecache::CResourcePrecacher
 R typeinfo name for wearable_itemPrecache::CResourcePrecacher
 R vec3_angle
 R vec3_invalid
 R vec3_origin
 RandomFloat
 RandomInt
 RandomSeed
 ReleaseThreadHandle
 ShouldUseNewAssertDialog
 SteamAPI_GetHSteamPipe
 SteamAPI_GetHSteamUser
 SteamAPI_InitSafe
 SteamAPI_RegisterCallResult
 SteamAPI_RegisterCallback
 SteamAPI_RestartAppIfNecessary
 SteamAPI_UnregisterCallResult
 SteamAPI_UnregisterCallback
 SteamGameServer_GetHSteamPipe
 SteamGameServer_GetHSteamUser
 SteamInternal_ContextInit
 SteamInternal_CreateInterface
 T AIStrongOpt()
 T AI_ClampYaw(float, float, float, float)
 T AI_TraceLOS(Vector const&, Vector const&, CBaseEntity*, CGameTrace*, ITraceFilter*)
 T AI_Waypoint_t::AI_Waypoint_t()
 T AI_Waypoint_t::AI_Waypoint_t(Vector const&, float, Navigation_t, int, int)
 T AI_Waypoint_t::~AI_Waypoint_t()
 T AR2Explosion::GetDataDescMap()
 T AR2Explosion::GetServerClass()
 T AR2Explosion::YouForgotToImplementOrDeclareServerClass()
 T AR2Explosion::~AR2Explosion()
 T ActivityDataOps()
 T ActivityList_AddActivityEntry(char const*, int, bool)
 T ActivityList_Free()
 T ActivityList_IndexForName(char const*)
 T ActivityList_Init()
 T ActivityList_NameForIndex(int)
 T ActivityList_RegisterPrivateActivity(char const*)
 T ActivityList_RegisterSharedActivities()
 T ActivityList_RegisterSharedActivity(char const*, int)
 T AddAreaToOpenList(CNavArea*, CNavArea*, Vector const&, float)
 T AddBranchLevelName(int, char const*)
 T AddCoopCreditsName(char const*)
 T AddDataToKV(KeyValues*, char const*, bool)
 T AddDataToKV(KeyValues*, char const*, float)
 T AddDataToKV(KeyValues*, char const*, int)
 T AddDataToKV(KeyValues*, char const*, unsigned int)
 T AddDataToKV(KeyValues*, char const*, unsigned long long)
 T AddGladosSpokenFlags(int, int)
 T AddMultiDamage(CTakeDamageInfo const&, CBaseEntity*)
 T AddPointToBounds(Vector const&, Vector&, Vector&)
 T AddPortalCornersToEnginePVS(CPortal_Base2D*)
 T AddPortalVisibilityToPVS(CPortal_Base2D*, int, unsigned char*)
 T AddPositionDataToKV(KeyValues*, char const*, Vector const&)
 T AddRestoredEntity(CBaseEntity*)
 T AddStringDataToKV(KeyValues*, char const*, char const*)
 T AddSurfacepropFile(char const*, IPhysicsSurfaceProps*, IFileSystem*)
 T AddWaypointLists(AI_Waypoint_t*, AI_Waypoint_t*)
 T AimTarget_ForceRepopulateList()
 T AimTarget_ListCopy(CBaseEntity**, int)
 T AimTarget_ListCount()
 T AllEdictsAlongRay(CBaseEntity**, int, Ray_t const&, int)
 T AllocPooledString(char const*)
 T AllocateStringHelper(char const*, ...)
 T AllocateUniqueDataTableName(bool, char const*, ...)
 T AlmostEqual(float, float, int)
 T AngleDiff(float, float)
 T AngleDistance(float, float)
 T AngleIMatrix(QAngle const&, Vector const&, matrix3x4_t&)
 T AngleIMatrix(QAngle const&, matrix3x4_t&)
 T AngleMatrix(QAngle const&, Vector const&, matrix3x4_t&)
 T AngleMatrix(QAngle const&, matrix3x4_t&)
 T AngleMatrix(RadianEuler const&, Vector const&, matrix3x4_t&)
 T AngleNormalize(float)
 T AngleNormalizePositive(float)
 T AngleQuaternion(QAngle const&, Quaternion&)
 T AngleQuaternion(RadianEuler const&, Quaternion&)
 T AngleVectors(QAngle const&, Vector*)
 T AngleVectors(QAngle const&, Vector*, Vector*, Vector*)
 T AngleVectorsTranspose(QAngle const&, Vector*, Vector*, Vector*)
 T Anim_StateLog(char const*, ...)
 T Anim_StatePrintf(int, char const*, ...)
 T AnyPlayersInHierarchy_R(CBaseEntity*)
 T ApplyMultiDamage()
 T ApplyViewLocking(float, float, ViewLockData_t&, RemapAngleRange_CurvePart_t)
 T ApproachAngle(float, float, float)
 T AreSamePower(PaintPowerInfo_t const&, PaintPowerInfo_t const&)
 T AscendingPaintLocationCompare(PaintLocationData_t const*, PaintLocationData_t const*)
 T AsianWordWrap::CanBreakAfter(wchar_t const*)
 T AsyncCaption_t::BlockInfo_t::Less(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&)
 T AsyncCaption_t::LoadFromFile(char const*)
 T AttenuateCaption(char const*, Vector const&, CUtlVector<Vector, CUtlMemory<Vector, int> >&)
 T AxisAngleQuaternion(Vector const&, float, Quaternion&)
 T BSpline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T BasicGameStatsRecord_t::ParseFromBuffer(CUtlBuffer&, int)
 T BasicGameStatsRecord_t::SaveToBuffer(CUtlBuffer&)
 T BasicGameStats_t::Clear()
 T BasicGameStats_t::FindOrAddRecordForMap(char const*)
 T BasicGameStats_t::ParseFromBuffer(CUtlBuffer&, int)
 T BasicGameStats_t::SaveToBuffer(CUtlBuffer&)
 T BeginDMXContext()
 T Bias(float, float)
 T BlendBones(CStudioHdr const*, QuaternionAligned*, Vector*, mstudioseqdesc_t&, int, QuaternionAligned const*, Vector const*, float, int)
 T BlobTraceEnum::EnumElement(IHandleEntity*)
 T BlobTraceEnum::GetCount() const
 T BlobsInAirUpdate_SIMD::BlobsInAirUpdate_SIMD(CUtlVector<CPaintBlob*, CUtlMemory<CPaintBlob*, int> > const&)
 T BlobsInAirUpdate_SIMD::UpdateBlobsInAir_SIMD()
 T BlobsInAirUpdate_SIMD::~BlobsInAirUpdate_SIMD()
 T BlobsInBeamUpdate_SIMD::BlobsInBeamUpdate_SIMD(CTrigger_TractorBeam*)
 T BlobsInBeamUpdate_SIMD::UpdateBlobsInBeam_SIMD()
 T BlobsInBeamUpdate_SIMD::~BlobsInBeamUpdate_SIMD()
 T BlobsInStreakUpdate_SIMD::BlobsInStreakUpdate_SIMD(CUtlVector<CPaintBlob*, CUtlMemory<CPaintBlob*, int> > const&)
 T BlobsInStreakUpdate_SIMD::~BlobsInStreakUpdate_SIMD()
 T BonusMapChallengeNames(char*, char*, char*)
 T BonusMapChallengeObjectives(int&, int&, int&)
 T BotPutInServer(bool, char const*)
 T Bot_RunAll()
 T Bot_Think(CPortal_Player*)
 T BoxOnPlaneSide(float const*, float const*, cplane_t const*)
 T BreakModelCreateSingle(CBaseEntity*, breakmodel_t*, Vector const&, QAngle const&, Vector const&, Vector const&, int, breakablepropparams_t const&)
 T BreakModelList(CUtlVector<breakmodel_t, CUtlMemory<breakmodel_t, int> >&, int, float, int)
 T BuildBoneChain(CStudioHdr const*, matrix3x4a_t const&, Vector const*, Quaternion const*, int, matrix3x4a_t*, CBoneBitList&)
 T BuildBoneChainPartial(CStudioHdr const*, matrix3x4_t const&, Vector const*, Quaternion const*, int, matrix3x4_t*, CBoneBitList&, int)
 T BuildChangeList(levellist_t*, int)
 T BuildGammaTable(float, float, float, int)
 T BuildSelectedSet::WriteConnections(CNavArea*, KeyValues*, NavDirType, char const*)
 T BuildSelectedSet::operator()(CNavArea*)
 T CAIHintVector::~CAIHintVector()
 T CAISound::GetDataDescMap()
 T CAISound::InputEmitAISound(inputdata_t&)
 T CAISound::InputInsertSound(inputdata_t&)
 T CAISound::~CAISound()
 T CAI_ActBusyBehavior::BuildScheduleTestBits()
 T CAI_ActBusyBehavior::CanFlinch()
 T CAI_ActBusyBehavior::CanRunAScriptedNPCInteraction(bool)
 T CAI_ActBusyBehavior::CanSelectSchedule()
 T CAI_ActBusyBehavior::CheckAndCleanupOnExit()
 T CAI_ActBusyBehavior::CollectSafeZoneVolumes(CAI_ActBusyGoal*)
 T CAI_ActBusyBehavior::ComputeAndSetRenderBounds()
 T CAI_ActBusyBehavior::CountEnemiesInSafeZone()
 T CAI_ActBusyBehavior::Enable(CAI_ActBusyGoal*, float, bool)
 T CAI_ActBusyBehavior::EndScheduleSelection()
 T CAI_ActBusyBehavior::FValidateHintType(CAI_Hint*)
 T CAI_ActBusyBehavior::FindCombatActBusyHintNode()
 T CAI_ActBusyBehavior::FindCombatActBusyTeleportHintNode()
 T CAI_ActBusyBehavior::ForceActBusy(CAI_ActBusyGoal*, CAI_Hint*, float, bool, bool, bool, CBaseEntity*, Activity)
 T CAI_ActBusyBehavior::ForceActBusyLeave(bool)
 T CAI_ActBusyBehavior::GatherConditions()
 T CAI_ActBusyBehavior::GetClassNameV()
 T CAI_ActBusyBehavior::GetClassScheduleIdSpace()
 T CAI_ActBusyBehavior::GetDataDescMap()
 T CAI_ActBusyBehavior::GetName()
 T CAI_ActBusyBehavior::GetReasonableFacingDist()
 T CAI_ActBusyBehavior::GetSchedulingErrorName()
 T CAI_ActBusyBehavior::HandleAnimEvent(animevent_t*)
 T CAI_ActBusyBehavior::HasAnimForActBusy(int, busyanimparts_t)
 T CAI_ActBusyBehavior::InitCustomSchedules()
 T CAI_ActBusyBehavior::IsInterruptable()
 T CAI_ActBusyBehavior::LoadedSchedules()
 T CAI_ActBusyBehavior::NPC_TranslateActivity(Activity)
 T CAI_ActBusyBehavior::NotifyBusyEnding()
 T CAI_ActBusyBehavior::OnFriendDamaged(CBaseCombatCharacter*, CBaseEntity*)
 T CAI_ActBusyBehavior::OnRestore()
 T CAI_ActBusyBehavior::OnScheduleChange()
 T CAI_ActBusyBehavior::OnSeeEntity(CBaseEntity*)
 T CAI_ActBusyBehavior::OnTakeDamage_Alive(CTakeDamageInfo const&)
 T CAI_ActBusyBehavior::PlaySoundForActBusy(busyanimparts_t)
 T CAI_ActBusyBehavior::QueryHearSound(CSound*)
 T CAI_ActBusyBehavior::RunTask(Task_t const*)
 T CAI_ActBusyBehavior::SelectSchedule()
 T CAI_ActBusyBehavior::SelectScheduleForLeaving()
 T CAI_ActBusyBehavior::SelectScheduleWhileBusy()
 T CAI_ActBusyBehavior::SelectScheduleWhileNotBusy(int)
 T CAI_ActBusyBehavior::ShouldIgnoreSound(CSound*)
 T CAI_ActBusyBehavior::ShouldPlayerAvoid()
 T CAI_ActBusyBehavior::StartTask(Task_t const*)
 T CAI_ActBusyBehavior::StopBusying()
 T CAI_ActBusyBehavior::~CAI_ActBusyBehavior()
 T CAI_ActBusyGoal::EnableGoal(CAI_BaseNPC*)
 T CAI_ActBusyGoal::GetBusyBehaviorForNPC(CBaseEntity*, char const*)
 T CAI_ActBusyGoal::GetDataDescMap()
 T CAI_ActBusyGoal::InputActivate(inputdata_t&)
 T CAI_ActBusyGoal::InputDeactivate(inputdata_t&)
 T CAI_ActBusyGoal::InputForceNPCToActBusy(inputdata_t&)
 T CAI_ActBusyGoal::InputForceThisNPCToActBusy(inputdata_t&)
 T CAI_ActBusyGoal::InputForceThisNPCToLeave(inputdata_t&)
 T CAI_ActBusyGoal::InputSetBusySearchRange(inputdata_t&)
 T CAI_ActBusyGoal::NPCAbortedMoveTo(CAI_BaseNPC*)
 T CAI_ActBusyGoal::NPCFinishedBusy(CAI_BaseNPC*)
 T CAI_ActBusyGoal::NPCLeft(CAI_BaseNPC*)
 T CAI_ActBusyGoal::NPCLostSeeEntity(CAI_BaseNPC*)
 T CAI_ActBusyGoal::NPCMovingToBusy(CAI_BaseNPC*)
 T CAI_ActBusyGoal::NPCSeeEnemy(CAI_BaseNPC*)
 T CAI_ActBusyGoal::NPCStartedBusy(CAI_BaseNPC*)
 T CAI_ActBusyGoal::NPCStartedLeavingBusy(CAI_BaseNPC*)
 T CAI_ActBusyGoal::~CAI_ActBusyGoal()
 T CAI_ActBusyQueueGoal::DrawDebugGeometryOverlays()
 T CAI_ActBusyQueueGoal::GetDataDescMap()
 T CAI_ActBusyQueueGoal::InputActivate(inputdata_t&)
 T CAI_ActBusyQueueGoal::InputMoveQueueUp(inputdata_t&)
 T CAI_ActBusyQueueGoal::InputPlayerStartedBlocking(inputdata_t&)
 T CAI_ActBusyQueueGoal::InputPlayerStoppedBlocking(inputdata_t&)
 T CAI_ActBusyQueueGoal::MoveQueueUpThink()
 T CAI_ActBusyQueueGoal::NPCAbortedMoveTo(CAI_BaseNPC*)
 T CAI_ActBusyQueueGoal::NPCFinishedBusy(CAI_BaseNPC*)
 T CAI_ActBusyQueueGoal::NPCMovingToBusy(CAI_BaseNPC*)
 T CAI_ActBusyQueueGoal::NPCStartedBusy(CAI_BaseNPC*)
 T CAI_ActBusyQueueGoal::NPCStartedLeavingBusy(CAI_BaseNPC*)
 T CAI_ActBusyQueueGoal::PushNPCBackInQueue(CAI_BaseNPC*, int)
 T CAI_ActBusyQueueGoal::QueueThink()
 T CAI_ActBusyQueueGoal::RecalculateQueueCount()
 T CAI_ActBusyQueueGoal::Spawn()
 T CAI_ActBusyQueueGoal::~CAI_ActBusyQueueGoal()
 T CAI_AddOn::DispatchAddOnThink()
 T CAI_AddOn::InputInstall(inputdata_t&)
 T CAI_AddOn::InputRemove(inputdata_t&)
 T CAI_Agent::InitDefaultConditionSR()
 T CAI_Agent::InitDefaultScheduleSR()
 T CAI_Agent::InitDefaultTaskSR()
 T CAI_Agent::InitSchedulingTables()
 T CAI_Agent::LoadDefaultSchedules()
 T CAI_Agent::Think()
 T CAI_AllySpeechManager* _CreateEntityTemplate<CAI_AllySpeechManager>(CAI_AllySpeechManager*, char const*)
 T CAI_AllySpeechManager::GetDataDescMap()
 T CAI_AllySpeechManager::OnSpokeConcept(CAI_PlayerAlly*, CAI_Concept, ResponseRules::CRR_Response*)
 T CAI_AllySpeechManager::Spawn()
 T CAI_AllySpeechManager::~CAI_AllySpeechManager()
 T CAI_AssaultBehavior::FindAssaultPoint(string_t)
 T CAI_AssaultBehavior::InitializeBehavior()
 T CAI_AssaultBehavior::SetParameters(string_t, AssaultCue_t, int)
 T CAI_AssaultBehavior::UnlockRallyPoint()
 T CAI_AssaultGoal::DisableGoal(CAI_BaseNPC*)
 T CAI_AssaultGoal::EnableGoal(CAI_BaseNPC*)
 T CAI_AssaultGoal::GetDataDescMap()
 T CAI_AssaultGoal::InputBeginAssault(inputdata_t&)
 T CAI_AssaultGoal::~CAI_AssaultGoal()
 T CAI_BaseActor::AddLookTarget(CBaseEntity*, float, float, float)
 T CAI_BaseActor::AddLookTarget(Vector const&, float, float, float)
 T CAI_BaseActor::CheckSceneEventCompletion(CSceneEventInfo*, float, CChoreoScene*, CChoreoEvent*)
 T CAI_BaseActor::ClearHeadAdjustment()
 T CAI_BaseActor::ClearLookTarget(CBaseEntity*)
 T CAI_BaseActor::ClearSceneEvent(CSceneEventInfo*, bool, bool)
 T CAI_BaseActor::CreateComponents()
 T CAI_BaseActor::CreateExpresser()
 T CAI_BaseActor::ExpireCurrentRandomLookTarget()
 T CAI_BaseActor::EyeDirection2D()
 T CAI_BaseActor::EyeDirection3D()
 T CAI_BaseActor::EyePosition()
 T CAI_BaseActor::GatherConditions()
 T CAI_BaseActor::GetDataDescMap()
 T CAI_BaseActor::GetExpresser()
 T CAI_BaseActor::GetHeadDebounce()
 T CAI_BaseActor::HasActiveLookTargets()
 T CAI_BaseActor::HeadDirection2D()
 T CAI_BaseActor::HeadDirection3D()
 T CAI_BaseActor::HeadTargetValidity(Vector const&)
 T CAI_BaseActor::InputSetExpressionOverride(inputdata_t&)
 T CAI_BaseActor::InvalidateBoneCache()
 T CAI_BaseActor::IsServerSideFlexController(char const*)
 T CAI_BaseActor::MaintainLookTargets(float)
 T CAI_BaseActor::MakeRandomLookTarget(AILookTargetArgs_t*, float, float)
 T CAI_BaseActor::OnNewLookTarget()
 T CAI_BaseActor::OnSelectedLookTarget(AILookTargetArgs_t*)
 T CAI_BaseActor::OnStateChange(NPC_STATE, NPC_STATE)
 T CAI_BaseActor::PickLookTarget(CAI_InterestTarget&, bool, float, float)
 T CAI_BaseActor::PickLookTarget(bool, float, float)
 T CAI_BaseActor::PickRandomLookTarget(AILookTargetArgs_t*)
 T CAI_BaseActor::PickTacticalLookTarget(AILookTargetArgs_t*)
 T CAI_BaseActor::PlayExpressionForState(NPC_STATE)
 T CAI_BaseActor::Precache()
 T CAI_BaseActor::ProcessSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CAI_BaseActor::RandomFaceFlex(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CAI_BaseActor::SelectRandomExpressionForState(NPC_STATE)
 T CAI_BaseActor::SetExpression(char const*)
 T CAI_BaseActor::SetHeadDirection(Vector const&, float)
 T CAI_BaseActor::SetModel(char const*)
 T CAI_BaseActor::SetViewtarget(Vector const&)
 T CAI_BaseActor::ShouldBruteForceFailedNav()
 T CAI_BaseActor::StartSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*, CChoreoActor*, CBaseEntity*)
 T CAI_BaseActor::StartTaskRangeAttack1(Task_t const*)
 T CAI_BaseActor::StudioFrameAdvance()
 T CAI_BaseActor::Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T CAI_BaseActor::TestRemarkingUpon(CInfoRemarkable*)
 T CAI_BaseActor::UpdateBodyControl()
 T CAI_BaseActor::UpdateHeadControl(Vector const&, float)
 T CAI_BaseActor::UpdateLatchedValues()
 T CAI_BaseActor::UpdateRemarkableSpeech()
 T CAI_BaseActor::UseSemaphore()
 T CAI_BaseActor::ValidEyeTarget(Vector const&)
 T CAI_BaseActor::~CAI_BaseActor()
 T CAI_BaseHumanoid::BuildScheduleTestBits()
 T CAI_BaseHumanoid::CheckAmmo()
 T CAI_BaseHumanoid::HandleInteraction(int, void*, CBaseCombatCharacter*)
 T CAI_BaseHumanoid::OnMoveBlocked(AIMoveResult_t*)
 T CAI_BaseHumanoid::RunTask(Task_t const*)
 T CAI_BaseHumanoid::RunTaskRangeAttack1(Task_t const*)
 T CAI_BaseHumanoid::StartTask(Task_t const*)
 T CAI_BaseHumanoid::StartTaskRangeAttack1(Task_t const*)
 T CAI_BaseHumanoid::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CAI_BaseNPC::AccessBehaviors()
 T CAI_BaseNPC::Activate()
 T CAI_BaseNPC::AddActivityToSR(char const*, int)
 T CAI_BaseNPC::AddClassRelationship(Class_T, Disposition_t, int)
 T CAI_BaseNPC::AddEntityRelationship(CBaseEntity*, Disposition_t, int)
 T CAI_BaseNPC::AddEventToSR(char const*, int)
 T CAI_BaseNPC::AddFacingTarget(CBaseEntity*, Vector const&, float, float, float)
 T CAI_BaseNPC::AddFacingTarget(CBaseEntity*, float, float, float)
 T CAI_BaseNPC::AddFacingTarget(Vector const&, float, float, float)
 T CAI_BaseNPC::AddLookTarget(CBaseEntity*, float, float, float)
 T CAI_BaseNPC::AddLookTarget(Vector const&, float, float, float)
 T CAI_BaseNPC::AddRelationship(char const*, CBaseEntity*)
 T CAI_BaseNPC::AddScriptedNPCInteraction(ScriptedNPCInteraction_t*)
 T CAI_BaseNPC::AdvanceToIdealActivity()
 T CAI_BaseNPC::AimGun()
 T CAI_BaseNPC::AlertSound()
 T CAI_BaseNPC::AllowedToIgnite()
 T CAI_BaseNPC::AutoMovement(CBaseEntity*, AIMoveTrace_t*)
 T CAI_BaseNPC::AutoMovement(float, CBaseEntity*, AIMoveTrace_t*)
 T CAI_BaseNPC::BBoxFlat()
 T CAI_BaseNPC::BarnacleDeathSound()
 T CAI_BaseNPC::BeginRappel()
 T CAI_BaseNPC::BestEnemy()
 T CAI_BaseNPC::BodyTarget(Vector const&, bool)
 T CAI_BaseNPC::Break(CBaseEntity*)
 T CAI_BaseNPC::BuildScheduleTestBits()
 T CAI_BaseNPC::CAI_BaseNPC()
 T CAI_BaseNPC::CalcIdealYaw(Vector const&)
 T CAI_BaseNPC::CalcReasonableFacing(bool)
 T CAI_BaseNPC::CalcYawSpeed()
 T CAI_BaseNPC::CalculateForcedInteractionPosition()
 T CAI_BaseNPC::CallNPCThink()
 T CAI_BaseNPC::CanBeAnEnemyOf(CBaseEntity*)
 T CAI_BaseNPC::CanBeUsedAsAFriend()
 T CAI_BaseNPC::CanFlinch()
 T CAI_BaseNPC::CanHolsterWeapon()
 T CAI_BaseNPC::CanPlaySentence(bool)
 T CAI_BaseNPC::CanPlaySequence(bool, int)
 T CAI_BaseNPC::CanRespondToEvent(char const*)
 T CAI_BaseNPC::CanRunAScriptedNPCInteraction(bool)
 T CAI_BaseNPC::CanStandOn(CBaseEntity*) const
 T CAI_BaseNPC::CapabilitiesAdd(int)
 T CAI_BaseNPC::CapabilitiesClear()
 T CAI_BaseNPC::CapabilitiesGet() const
 T CAI_BaseNPC::CapabilitiesRemove(int)
 T CAI_BaseNPC::CascadePlayerPush(Vector const&, Vector const&)
 T CAI_BaseNPC::ChangeFaction(int)
 T CAI_BaseNPC::CheckAmmo()
 T CAI_BaseNPC::CheckFlinches()
 T CAI_BaseNPC::CheckOnGround()
 T CAI_BaseNPC::CheckPVSCondition()
 T CAI_BaseNPC::CheckPhysicsContacts()
 T CAI_BaseNPC::CheckSquad()
 T CAI_BaseNPC::CheckTarget(CBaseEntity*)
 T CAI_BaseNPC::ChooseEnemy()
 T CAI_BaseNPC::CineCleanup()
 T CAI_BaseNPC::CleanupOnDeath(CBaseEntity*, bool)
 T CAI_BaseNPC::ClearAllSchedules()
 T CAI_BaseNPC::ClearAttackConditions()
 T CAI_BaseNPC::ClearCommandGoal()
 T CAI_BaseNPC::ClearCondition(int)
 T CAI_BaseNPC::ClearCustomInterruptCondition(int)
 T CAI_BaseNPC::ClearEnemyMemory()
 T CAI_BaseNPC::ClearHintNode(float)
 T CAI_BaseNPC::ClearSchedule(char const*)
 T CAI_BaseNPC::ClearSenseConditions()
 T CAI_BaseNPC::CollectShotStats(Vector const&, Vector const&)
 T CAI_BaseNPC::ConditionInterruptsSchedule(int, int)
 T CAI_BaseNPC::ConditionName(int)
 T CAI_BaseNPC::CorpseFallThink()
 T CAI_BaseNPC::CoverRadius()
 T CAI_BaseNPC::CreateBehaviors()
 T CAI_BaseNPC::CreateComponents()
 T CAI_BaseNPC::CreateCustomTarget(Vector const&, float)
 T CAI_BaseNPC::CreateLocalNavigator()
 T CAI_BaseNPC::CreateMotor()
 T CAI_BaseNPC::CreateMoveProbe()
 T CAI_BaseNPC::CreateNavigator()
 T CAI_BaseNPC::CreatePathfinder()
 T CAI_BaseNPC::CreateSenses()
 T CAI_BaseNPC::CreateTacticalServices()
 T CAI_BaseNPC::CreateVPhysics()
 T CAI_BaseNPC::Crouch()
 T CAI_BaseNPC::CurrentWeaponLOSCondition(Vector const&, bool)
 T CAI_BaseNPC::DeathSound(CTakeDamageInfo const&)
 T CAI_BaseNPC::DecalTrace(CGameTrace*, char const*)
 T CAI_BaseNPC::DeferSchedulingToBehavior(CAI_BehaviorBase*)
 T CAI_BaseNPC::DesireCrouch()
 T CAI_BaseNPC::DiscardScheduleState()
 T CAI_BaseNPC::DoImpactEffect(CGameTrace&, int)
 T CAI_BaseNPC::DrawDebugGeometryOverlays()
 T CAI_BaseNPC::DrawDebugTextOverlays()
 T CAI_BaseNPC::DumpTaskTimings()
 T CAI_BaseNPC::EndTaskOverlay()
 T CAI_BaseNPC::EnemyDistTolerance()
 T CAI_BaseNPC::EnemyDistance(CBaseEntity*)
 T CAI_BaseNPC::Event_Gibbed(CTakeDamageInfo const&)
 T CAI_BaseNPC::Event_Killed(CTakeDamageInfo const&)
 T CAI_BaseNPC::ExitScriptedSequence()
 T CAI_BaseNPC::EyeDirection2D()
 T CAI_BaseNPC::EyeDirection3D()
 T CAI_BaseNPC::EyeLookTarget()
 T CAI_BaseNPC::EyeOffset(Activity)
 T CAI_BaseNPC::EyePosition()
 T CAI_BaseNPC::FCanCheckAttacks()
 T CAI_BaseNPC::FInAimCone(Vector const&)
 T CAI_BaseNPC::FOkToMakeSound(int)
 T CAI_BaseNPC::FScheduleDone()
 T CAI_BaseNPC::FValidateHintType(CAI_Hint*)
 T CAI_BaseNPC::FacingIdeal(float)
 T CAI_BaseNPC::FacingPosition()
 T CAI_BaseNPC::FearSound()
 T CAI_BaseNPC::FindCoverFromEnemy(bool, float, float)
 T CAI_BaseNPC::FindCoverPos(CBaseEntity*, Vector*)
 T CAI_BaseNPC::FindCoverPos(CSound*, Vector*)
 T CAI_BaseNPC::FindCoverPosInRadius(CBaseEntity*, Vector const&, float, Vector*)
 T CAI_BaseNPC::FindNamedEntity(char const*, IEntityFindFilter*)
 T CAI_BaseNPC::FindNearestValidGoalPos(Vector const&, Vector*)
 T CAI_BaseNPC::FindSpotForNPCInRadius(Vector*, Vector const&, CAI_BaseNPC*, float, bool)
 T CAI_BaseNPC::FireBullets(FireBulletsInfo_t const&)
 T CAI_BaseNPC::ForceSelectedGo(CBaseEntity*, Vector const&, Vector const&, bool)
 T CAI_BaseNPC::ForceSelectedGoRandom()
 T CAI_BaseNPC::FoundEnemySound()
 T CAI_BaseNPC::Freeze(float, CBaseEntity*, Ray_t*)
 T CAI_BaseNPC::GatherAttackConditions(CBaseEntity*, float)
 T CAI_BaseNPC::GatherConditions()
 T CAI_BaseNPC::GatherEnemyConditions(CBaseEntity*)
 T CAI_BaseNPC::GetActivityID(char const*)
 T CAI_BaseNPC::GetActivityName(int)
 T CAI_BaseNPC::GetActualShootPosition(Vector const&)
 T CAI_BaseNPC::GetActualShootTrajectory(Vector const&)
 T CAI_BaseNPC::GetAlternateMoveShootTarget()
 T CAI_BaseNPC::GetAttackSpread(CBaseCombatWeapon*, CBaseEntity*)
 T CAI_BaseNPC::GetAutoAimCenter()
 T CAI_BaseNPC::GetBestScent()
 T CAI_BaseNPC::GetBestSound(int)
 T CAI_BaseNPC::GetClassScheduleIdSpace()
 T CAI_BaseNPC::GetCoverActivity(CAI_Hint*)
 T CAI_BaseNPC::GetCrouchEyeOffset()
 T CAI_BaseNPC::GetCrouchGunOffset()
 T CAI_BaseNPC::GetDataDescMap()
 T CAI_BaseNPC::GetDefaultJumpGravity() const
 T CAI_BaseNPC::GetDefaultNavGoalTolerance()
 T CAI_BaseNPC::GetEnemies()
 T CAI_BaseNPC::GetEnemy()
 T CAI_BaseNPC::GetEnemy() const
 T CAI_BaseNPC::GetEnemyLKP() const
 T CAI_BaseNPC::GetEnemyLastTimeSeen() const
 T CAI_BaseNPC::GetExpresser()
 T CAI_BaseNPC::GetFacingDirection(Vector&)
 T CAI_BaseNPC::GetFailSchedule()
 T CAI_BaseNPC::GetFlinchActivity(bool, bool)
 T CAI_BaseNPC::GetGlobalScheduleId(int)
 T CAI_BaseNPC::GetGoalRepathTolerance(CBaseEntity*, GoalType_t, Vector const&, Vector const&)
 T CAI_BaseNPC::GetHintActivity(short, Activity)
 T CAI_BaseNPC::GetHintDelay(short)
 T CAI_BaseNPC::GetHitgroupDamageMultiplier(int, CTakeDamageInfo const&)
 T CAI_BaseNPC::GetJumpGravity() const
 T CAI_BaseNPC::GetLocalScheduleId(int)
 T CAI_BaseNPC::GetLocalTaskId(int)
 T CAI_BaseNPC::GetMaxJumpSpeed() const
 T CAI_BaseNPC::GetMaxTacticalLateralMovement()
 T CAI_BaseNPC::GetMinJumpHeight() const
 T CAI_BaseNPC::GetNavTargetEntity()
 T CAI_BaseNPC::GetNavType() const
 T CAI_BaseNPC::GetNewSchedule()
 T CAI_BaseNPC::GetNodeViewOffset()
 T CAI_BaseNPC::GetReactionDelay(CBaseEntity*)
 T CAI_BaseNPC::GetReasonableFacingDist()
 T CAI_BaseNPC::GetReloadActivity(CAI_Hint*)
 T CAI_BaseNPC::GetSchedule(int)
 T CAI_BaseNPC::GetScheduleOfType(int)
 T CAI_BaseNPC::GetSchedulingErrorName()
 T CAI_BaseNPC::GetScriptCustomMoveActivity()
 T CAI_BaseNPC::GetScriptCustomMoveSequence()
 T CAI_BaseNPC::GetServerClass()
 T CAI_BaseNPC::GetShootEnemyDir(Vector const&, bool)
 T CAI_BaseNPC::GetSmoothedVelocity()
 T CAI_BaseNPC::GetSoundInterests()
 T CAI_BaseNPC::GetSoundPriority(CSound*)
 T CAI_BaseNPC::GetSpreadBias(CBaseCombatWeapon*, CBaseEntity*)
 T CAI_BaseNPC::GetSquadCommandRepresentative()
 T CAI_BaseNPC::GetSquadSlotDebugName(int)
 T CAI_BaseNPC::GetStepDownMultiplier() const
 T CAI_BaseNPC::GetStoppedActivity()
 T CAI_BaseNPC::GetTask()
 T CAI_BaseNPC::GetTimeToNavGoal()
 T CAI_BaseNPC::GetTracerType()
 T CAI_BaseNPC::GiveWeapon(string_t)
 T CAI_BaseNPC::HandleAnimEvent(animevent_t*)
 T CAI_BaseNPC::HandleInteraction(int, void*, CBaseCombatCharacter*)
 T CAI_BaseNPC::HasCondition(int)
 T CAI_BaseNPC::HasCondition(int, bool)
 T CAI_BaseNPC::HeadDirection2D()
 T CAI_BaseNPC::HeadDirection3D()
 T CAI_BaseNPC::HearingSensitivity()
 T CAI_BaseNPC::HolsterWeapon()
 T CAI_BaseNPC::IdleSound()
 T CAI_BaseNPC::Ignite(float, bool, float, bool)
 T CAI_BaseNPC::ImpactTrace(CGameTrace*, int, char*)
 T CAI_BaseNPC::InitDefaultActivitySR()
 T CAI_BaseNPC::InitDefaultConditionSR()
 T CAI_BaseNPC::InitDefaultScheduleSR()
 T CAI_BaseNPC::InitDefaultSquadSlotSR()
 T CAI_BaseNPC::InitDefaultTaskSR()
 T CAI_BaseNPC::InitSchedulingTables()
 T CAI_BaseNPC::InitSquad()
 T CAI_BaseNPC::InnateRange1MaxRange()
 T CAI_BaseNPC::InnateRange1MinRange()
 T CAI_BaseNPC::InnateWeaponLOSCondition(Vector const&, Vector const&, bool)
 T CAI_BaseNPC::InputActivateSpeedModifier(inputdata_t&)
 T CAI_BaseNPC::InputBeginRappel(inputdata_t&)
 T CAI_BaseNPC::InputBreak(inputdata_t&)
 T CAI_BaseNPC::InputCreateAddon(inputdata_t&)
 T CAI_BaseNPC::InputDisableSpeedModifier(inputdata_t&)
 T CAI_BaseNPC::InputForceInteractionWithNPC(inputdata_t&)
 T CAI_BaseNPC::InputForgetEntity(inputdata_t&)
 T CAI_BaseNPC::InputGagDisable(inputdata_t&)
 T CAI_BaseNPC::InputGagEnable(inputdata_t&)
 T CAI_BaseNPC::InputHolsterAndDestroyWeapon(inputdata_t&)
 T CAI_BaseNPC::InputHolsterWeapon(inputdata_t&)
 T CAI_BaseNPC::InputIgnoreDangerSounds(inputdata_t&)
 T CAI_BaseNPC::InputInsideTransition(inputdata_t&)
 T CAI_BaseNPC::InputOutsideTransition(inputdata_t&)
 T CAI_BaseNPC::InputSetEnemyFilter(inputdata_t&)
 T CAI_BaseNPC::InputSetHealth(inputdata_t&)
 T CAI_BaseNPC::InputSetRelationship(inputdata_t&)
 T CAI_BaseNPC::InputSetSpeedModifierRadius(inputdata_t&)
 T CAI_BaseNPC::InputSetSpeedModifierSpeed(inputdata_t&)
 T CAI_BaseNPC::InputSetSquad(inputdata_t&)
 T CAI_BaseNPC::InputStartScripting(inputdata_t&)
 T CAI_BaseNPC::InputStopScripting(inputdata_t&)
 T CAI_BaseNPC::InputUnholsterWeapon(inputdata_t&)
 T CAI_BaseNPC::InputUpdateEnemyMemory(inputdata_t&)
 T CAI_BaseNPC::InputWake(inputdata_t&)
 T CAI_BaseNPC::IsActivityFinished()
 T CAI_BaseNPC::IsActivityMovementPhased(Activity)
 T CAI_BaseNPC::IsAllowedToDodge()
 T CAI_BaseNPC::IsAttackFrozen()
 T CAI_BaseNPC::IsCommandMoving()
 T CAI_BaseNPC::IsCommandable()
 T CAI_BaseNPC::IsCoverPosition(Vector const&, Vector const&)
 T CAI_BaseNPC::IsCrouchedActivity(Activity)
 T CAI_BaseNPC::IsCrouching()
 T CAI_BaseNPC::IsCurSchedule(int, bool)
 T CAI_BaseNPC::IsCurTaskContinuousMove()
 T CAI_BaseNPC::IsHeavyDamage(CTakeDamageInfo const&)
 T CAI_BaseNPC::IsInPlayerSquad() const
 T CAI_BaseNPC::IsInterruptable()
 T CAI_BaseNPC::IsJumpLegal(Vector const&, Vector const&, Vector const&) const
 T CAI_BaseNPC::IsJumpLegal(Vector const&, Vector const&, Vector const&, float, float, float) const
 T CAI_BaseNPC::IsLightDamage(CTakeDamageInfo const&)
 T CAI_BaseNPC::IsMedic()
 T CAI_BaseNPC::IsMovementFrozen()
 T CAI_BaseNPC::IsMoving()
 T CAI_BaseNPC::IsNPC() const
 T CAI_BaseNPC::IsNavigationUrgent()
 T CAI_BaseNPC::IsPlayerAlly(CBasePlayer*)
 T CAI_BaseNPC::IsScheduleValid()
 T CAI_BaseNPC::IsSilentSquadMember() const
 T CAI_BaseNPC::IsSquadmateInSpread(Vector const&, Vector const&, float, float)
 T CAI_BaseNPC::IsTemplate()
 T CAI_BaseNPC::IsUnreachable(CBaseEntity*)
 T CAI_BaseNPC::IsUnusableNode(int, CAI_Hint*)
 T CAI_BaseNPC::IsValidCommandTarget(CBaseEntity*)
 T CAI_BaseNPC::IsValidCover(Vector const&, CAI_Hint const*)
 T CAI_BaseNPC::IsValidEnemy(CBaseEntity*)
 T CAI_BaseNPC::IsValidMoveAwayDest(Vector const&)
 T CAI_BaseNPC::IsValidReasonableFacing(Vector const&, float)
 T CAI_BaseNPC::IsValidShootPosition(Vector const&, CAI_Node*, CAI_Hint const*)
 T CAI_BaseNPC::IsWaitFinished()
 T CAI_BaseNPC::IsWaitingToRappel()
 T CAI_BaseNPC::IsWeaponStateChanging()
 T CAI_BaseNPC::JustMadeSound(int, float)
 T CAI_BaseNPC::KeyValue(char const*, char const*)
 T CAI_BaseNPC::LineOfSightDist(Vector const&, float)
 T CAI_BaseNPC::LoadDefaultSchedules()
 T CAI_BaseNPC::LoadSchedules()
 T CAI_BaseNPC::LoadedSchedules()
 T CAI_BaseNPC::LockBestSound()
 T CAI_BaseNPC::LostEnemySound()
 T CAI_BaseNPC::MaintainActivity()
 T CAI_BaseNPC::MaintainLookTargets(float)
 T CAI_BaseNPC::MaintainSchedule()
 T CAI_BaseNPC::MaintainTurnActivity()
 T CAI_BaseNPC::MakeAIFootstepSound(float, float)
 T CAI_BaseNPC::MakeTracer(Vector const&, CGameTrace const&, int)
 T CAI_BaseNPC::MaxYawSpeed()
 T CAI_BaseNPC::MeleeAttack1Conditions(float, float)
 T CAI_BaseNPC::MeleeAttack2Conditions(float, float)
 T CAI_BaseNPC::ModifyAutoMovement(Vector&)
 T CAI_BaseNPC::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CAI_BaseNPC::MoveOrder(Vector const&, CAI_BaseNPC**, int)
 T CAI_BaseNPC::MovementCost(int, Vector const&, Vector const&, float*)
 T CAI_BaseNPC::NPCInit()
 T CAI_BaseNPC::NPCInitThink()
 T CAI_BaseNPC::NPCThink()
 T CAI_BaseNPC::NPCUse(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CAI_BaseNPC::NPC_TranslateActivity(Activity)
 T CAI_BaseNPC::NetworkStateChanged_m_lifeState()
 T CAI_BaseNPC::NetworkStateChanged_m_lifeState(void*)
 T CAI_BaseNPC::NotifyDeadFriend(CBaseEntity*)
 T CAI_BaseNPC::NotifyFriendsOfDamage(CBaseEntity*)
 T CAI_BaseNPC::NotifyPushMove()
 T CAI_BaseNPC::NumBehaviors()
 T CAI_BaseNPC::ObjectCaps()
 T CAI_BaseNPC::OccupyStrategySlotRange(int, int)
 T CAI_BaseNPC::OnBeginMoveAndShoot()
 T CAI_BaseNPC::OnBehaviorChangeStatus(CAI_BehaviorBase*, bool)
 T CAI_BaseNPC::OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_BaseNPC::OnChangeActiveWeapon(CBaseCombatWeapon*, CBaseCombatWeapon*)
 T CAI_BaseNPC::OnChangeActivity(Activity)
 T CAI_BaseNPC::OnChangeHintGroup(string_t, string_t)
 T CAI_BaseNPC::OnChangeRunningBehavior(CAI_BehaviorBase*, CAI_BehaviorBase*)
 T CAI_BaseNPC::OnClearGoal(CAI_BehaviorBase*, CAI_GoalEntity*)
 T CAI_BaseNPC::OnConditionCleared(int)
 T CAI_BaseNPC::OnConditionSet(int)
 T CAI_BaseNPC::OnDoorBlocked(CBasePropDoor*)
 T CAI_BaseNPC::OnDoorFullyOpen(CBasePropDoor*)
 T CAI_BaseNPC::OnEndMoveAndShoot()
 T CAI_BaseNPC::OnEnemyChanged(CBaseEntity*, CBaseEntity*)
 T CAI_BaseNPC::OnFriendDamaged(CBaseCombatCharacter*, CBaseEntity*)
 T CAI_BaseNPC::OnGivenWeapon(CBaseCombatWeapon*)
 T CAI_BaseNPC::OnListened()
 T CAI_BaseNPC::OnLooked(int)
 T CAI_BaseNPC::OnMoveOrder()
 T CAI_BaseNPC::OnMoveToCommandGoalFailed()
 T CAI_BaseNPC::OnMovementComplete()
 T CAI_BaseNPC::OnMovementFailed()
 T CAI_BaseNPC::OnObstructingDoor(AILocalMoveGoal_t*, CBaseDoor*, float, AIMoveResult_t*)
 T CAI_BaseNPC::OnObstructionPreSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_BaseNPC::OnRangeAttack1()
 T CAI_BaseNPC::OnRestore()
 T CAI_BaseNPC::OnScheduleChange()
 T CAI_BaseNPC::OnSeeEntity(CBaseEntity*)
 T CAI_BaseNPC::OnSetSchedule()
 T CAI_BaseNPC::OnStartScene()
 T CAI_BaseNPC::OnStartSchedule(int)
 T CAI_BaseNPC::OnStateChange(NPC_STATE, NPC_STATE)
 T CAI_BaseNPC::OnTakeDamage_Alive(CTakeDamageInfo const&)
 T CAI_BaseNPC::OnTakeDamage_Dead(CTakeDamageInfo const&)
 T CAI_BaseNPC::OnTakeDamage_Dying(CTakeDamageInfo const&)
 T CAI_BaseNPC::OnTargetOrder()
 T CAI_BaseNPC::OnUpcomingPropDoor(AILocalMoveGoal_t*, CBasePropDoor*, float, AIMoveResult_t*)
 T CAI_BaseNPC::OnUpdateShotRegulator()
 T CAI_BaseNPC::OnlySeeAliveEntities()
 T CAI_BaseNPC::OpenPropDoorBegin(CBasePropDoor*)
 T CAI_BaseNPC::OverrideMove(float)
 T CAI_BaseNPC::OverrideMoveFacing(AILocalMoveGoal_t const&, float)
 T CAI_BaseNPC::PainSound(CTakeDamageInfo const&)
 T CAI_BaseNPC::ParseScriptedNPCInteractions()
 T CAI_BaseNPC::PassesDamageFilter(CTakeDamageInfo const&)
 T CAI_BaseNPC::PhysicsSolidMaskForEntity() const
 T CAI_BaseNPC::PickupItem(CBaseEntity*)
 T CAI_BaseNPC::PickupWeapon(CBaseCombatWeapon*)
 T CAI_BaseNPC::PlayFlinchGesture()
 T CAI_BaseNPC::PlayScriptedSentence(char const*, float, float, soundlevel_t, bool, CBaseEntity*)
 T CAI_BaseNPC::PlaySentence(char const*, float, float, soundlevel_t, CBaseEntity*)
 T CAI_BaseNPC::PlayerHasIlluminatedNPC(CBasePlayer*, float)
 T CAI_BaseNPC::PlayerInSpread(Vector const&, Vector const&, float, float, bool)
 T CAI_BaseNPC::PlayerPenetratingVPhysics()
 T CAI_BaseNPC::PointInSpread(CBaseCombatCharacter*, Vector const&, Vector const&, Vector const&, float, float)
 T CAI_BaseNPC::PopulatePoseParameters()
 T CAI_BaseNPC::PostConstructor(char const*)
 T CAI_BaseNPC::PostMovement()
 T CAI_BaseNPC::PostNPCInit()
 T CAI_BaseNPC::PostRunStopMoving()
 T CAI_BaseNPC::PostscheduleThink()
 T CAI_BaseNPC::PreNPCThink()
 T CAI_BaseNPC::Precache()
 T CAI_BaseNPC::PrescheduleThink()
 T CAI_BaseNPC::QueryHearSound(CSound*)
 T CAI_BaseNPC::QuerySeeEntity(CBaseEntity*, bool)
 T CAI_BaseNPC::RangeAttack1Conditions(float, float)
 T CAI_BaseNPC::RangeAttack2Conditions(float, float)
 T CAI_BaseNPC::RebalanceThinks()
 T CAI_BaseNPC::RelaxAim()
 T CAI_BaseNPC::RememberUnreachable(CBaseEntity*, float)
 T CAI_BaseNPC::RemoveIgnoredConditions()
 T CAI_BaseNPC::RemoveMemory()
 T CAI_BaseNPC::ReportAIState()
 T CAI_BaseNPC::ReportOverThinkLimit(float)
 T CAI_BaseNPC::ResetIdealActivity(Activity)
 T CAI_BaseNPC::ResolveActivityToSequence(Activity, int&, Activity&, Activity&)
 T CAI_BaseNPC::RespondedTo(char const*, bool, bool)
 T CAI_BaseNPC::Restore(IRestore&)
 T CAI_BaseNPC::RunAI()
 T CAI_BaseNPC::RunAnimation()
 T CAI_BaseNPC::RunAttackTask(int)
 T CAI_BaseNPC::RunDieTask()
 T CAI_BaseNPC::RunTask(Task_t const*)
 T CAI_BaseNPC::RunTask(Task_t*)
 T CAI_BaseNPC::RunTaskOverlay()
 T CAI_BaseNPC::Save(ISave&)
 T CAI_BaseNPC::ScheduledFollowPath(int, CBaseEntity*, Activity)
 T CAI_BaseNPC::ScheduledMoveToGoalEntity(int, CBaseEntity*, Activity)
 T CAI_BaseNPC::SelectAlertIdealState()
 T CAI_BaseNPC::SelectAlertSchedule()
 T CAI_BaseNPC::SelectCombatSchedule()
 T CAI_BaseNPC::SelectDeadSchedule()
 T CAI_BaseNPC::SelectDeathPose(CTakeDamageInfo const&)
 T CAI_BaseNPC::SelectFailSchedule(int, int, int)
 T CAI_BaseNPC::SelectFlinchSchedule()
 T CAI_BaseNPC::SelectIdealState()
 T CAI_BaseNPC::SelectIdleIdealState()
 T CAI_BaseNPC::SelectIdleSchedule()
 T CAI_BaseNPC::SelectSchedule()
 T CAI_BaseNPC::SelectScriptIdealState()
 T CAI_BaseNPC::SelectScriptSchedule()
 T CAI_BaseNPC::SetActivity(Activity)
 T CAI_BaseNPC::SetActivityAndSequence(Activity, int, Activity, Activity)
 T CAI_BaseNPC::SetAim(Vector const&)
 T CAI_BaseNPC::SetCommandGoal(Vector const&)
 T CAI_BaseNPC::SetCondition(int)
 T CAI_BaseNPC::SetCustomInterruptCondition(int)
 T CAI_BaseNPC::SetDefaultEyeOffset()
 T CAI_BaseNPC::SetDistLook(float)
 T CAI_BaseNPC::SetEnemy(CBaseEntity*, bool)
 T CAI_BaseNPC::SetEnemyOccluder(CBaseEntity*)
 T CAI_BaseNPC::SetHeadDirection(Vector const&, float)
 T CAI_BaseNPC::SetHintGroup(string_t, bool)
 T CAI_BaseNPC::SetHintNode(CAI_Hint*)
 T CAI_BaseNPC::SetHullSizeNormal(bool)
 T CAI_BaseNPC::SetHullSizeSmall(bool)
 T CAI_BaseNPC::SetIdealActivity(Activity)
 T CAI_BaseNPC::SetNavType(Navigation_t)
 T CAI_BaseNPC::SetPlayerAvoidState()
 T CAI_BaseNPC::SetPrimaryBehavior(CAI_BehaviorBase*)
 T CAI_BaseNPC::SetSchedule(CAI_Schedule*)
 T CAI_BaseNPC::SetSchedule(int)
 T CAI_BaseNPC::SetScriptedScheduleIgnoreConditions(Interruptability_t)
 T CAI_BaseNPC::SetSequenceById(int)
 T CAI_BaseNPC::SetSequenceByName(char*)
 T CAI_BaseNPC::SetSquad(CAI_Squad*)
 T CAI_BaseNPC::SetState(NPC_STATE)
 T CAI_BaseNPC::SetTarget(CBaseEntity*)
 T CAI_BaseNPC::SetTurnActivity()
 T CAI_BaseNPC::SetWait(float, float)
 T CAI_BaseNPC::SetupVPhysicsHull()
 T CAI_BaseNPC::ShouldAcceptGoal(CAI_BehaviorBase*, CAI_GoalEntity*)
 T CAI_BaseNPC::ShouldAlwaysThink()
 T CAI_BaseNPC::ShouldAutoSummon()
 T CAI_BaseNPC::ShouldBecomeStatue()
 T CAI_BaseNPC::ShouldBehaviorSelectSchedule(CAI_BehaviorBase*)
 T CAI_BaseNPC::ShouldBruteForceFailedNav()
 T CAI_BaseNPC::ShouldCheckPhysicsContacts()
 T CAI_BaseNPC::ShouldChooseNewEnemy()
 T CAI_BaseNPC::ShouldFadeOnDeath()
 T CAI_BaseNPC::ShouldFailNav(bool)
 T CAI_BaseNPC::ShouldGib(CTakeDamageInfo const&)
 T CAI_BaseNPC::ShouldGoToIdleState()
 T CAI_BaseNPC::ShouldIgnoreSound(CSound*)
 T CAI_BaseNPC::ShouldLookForBetterWeapon()
 T CAI_BaseNPC::ShouldMoveAndShoot()
 T CAI_BaseNPC::ShouldMoveWait()
 T CAI_BaseNPC::ShouldNotDistanceCull()
 T CAI_BaseNPC::ShouldPickADeathPose()
 T CAI_BaseNPC::ShouldPlayIdleSound()
 T CAI_BaseNPC::ShouldPlayerAvoid()
 T CAI_BaseNPC::ShouldProbeCollideAgainstEntity(CBaseEntity*)
 T CAI_BaseNPC::ShouldSavePhysics()
 T CAI_BaseNPC::Sleep()
 T CAI_BaseNPC::SpeakSentence(int)
 T CAI_BaseNPC::SquadSlotName(int)
 T CAI_BaseNPC::Stand()
 T CAI_BaseNPC::StartNPC()
 T CAI_BaseNPC::StartScriptMoveToTargetTask(int)
 T CAI_BaseNPC::StartTargetHandling(CBaseEntity*)
 T CAI_BaseNPC::StartTask(Task_t const*)
 T CAI_BaseNPC::StartTask(Task_t*)
 T CAI_BaseNPC::StartTouch(CBaseEntity*)
 T CAI_BaseNPC::StepHeight() const
 T CAI_BaseNPC::TargetOrder(CBaseEntity*, CAI_BaseNPC**, int)
 T CAI_BaseNPC::TaskComplete(bool)
 T CAI_BaseNPC::TaskFail(int)
 T CAI_BaseNPC::TaskIsRunning()
 T CAI_BaseNPC::TaskMovementComplete()
 T CAI_BaseNPC::TaskName(int)
 T CAI_BaseNPC::Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T CAI_BaseNPC::TestPlayerPushing(CBaseEntity*)
 T CAI_BaseNPC::TestShootPosition(Vector const&, Vector const&)
 T CAI_BaseNPC::ToggleFreeze()
 T CAI_BaseNPC::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CAI_BaseNPC::TranslateActivity(Activity, Activity*)
 T CAI_BaseNPC::TranslateAddOnAttachment(char*, int)
 T CAI_BaseNPC::TranslateNavGoal(CBaseEntity*, Vector&)
 T CAI_BaseNPC::TranslateSchedule(int)
 T CAI_BaseNPC::TryRestoreHull()
 T CAI_BaseNPC::Unfreeze()
 T CAI_BaseNPC::UnholsterWeapon()
 T CAI_BaseNPC::UpdateEfficiency(bool)
 T CAI_BaseNPC::UpdateEnemyMemory(CBaseEntity*, Vector const&, CBaseEntity*)
 T CAI_BaseNPC::UpdateEnemyPos()
 T CAI_BaseNPC::UpdateOnRemove()
 T CAI_BaseNPC::UpdateSleepState(bool)
 T CAI_BaseNPC::UpdateTargetPos()
 T CAI_BaseNPC::UpdateTransmitState()
 T CAI_BaseNPC::UpdateTurnGesture()
 T CAI_BaseNPC::UseAttackSquadSlots()
 T CAI_BaseNPC::VacateStrategySlot()
 T CAI_BaseNPC::ValidEyeTarget(Vector const&)
 T CAI_BaseNPC::ValidateNavGoal()
 T CAI_BaseNPC::VecToYaw(Vector const&)
 T CAI_BaseNPC::Wake(bool)
 T CAI_BaseNPC::WeaponLOSCondition(Vector const&, Vector const&, bool)
 T CAI_BaseNPC::Weapon_IsBetterAvailable()
 T CAI_BaseNPC::Weapon_ShootPosition()
 T CAI_BaseNPC::WokeThisTick() const
 T CAI_BaseNPC::YouForgotToImplementOrDeclareServerClass()
 T CAI_BaseNPC::~CAI_BaseNPC()
 T CAI_BasePhysicsFlyingBot::BodyAngles()
 T CAI_BasePhysicsFlyingBot::CAI_BasePhysicsFlyingBot()
 T CAI_BasePhysicsFlyingBot::ClampMotorForces(Vector&, Vector&)
 T CAI_BasePhysicsFlyingBot::CreateVPhysics()
 T CAI_BasePhysicsFlyingBot::GetDataDescMap()
 T CAI_BasePhysicsFlyingBot::GetHeadTurnRate()
 T CAI_BasePhysicsFlyingBot::GetVelocity(Vector*, Vector*)
 T CAI_BasePhysicsFlyingBot::MinGroundDist()
 T CAI_BasePhysicsFlyingBot::ShouldSavePhysics()
 T CAI_BasePhysicsFlyingBot::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CAI_BasePhysicsFlyingBot::StartTask(Task_t const*)
 T CAI_BasePhysicsFlyingBot::TranslateNavGoal(CBaseEntity*, Vector&)
 T CAI_BasePhysicsFlyingBot::TurnHeadToTarget(float, Vector const&)
 T CAI_BasePhysicsFlyingBot::~CAI_BasePhysicsFlyingBot()
 T CAI_BattleLine::GetDataDescMap()
 T CAI_BattleLine::InputActivate(inputdata_t&)
 T CAI_BattleLine::InputDeactivate(inputdata_t&)
 T CAI_BattleLine::MovementThink()
 T CAI_BattleLine::NotifyChangeTacticalConstraints()
 T CAI_BattleLine::Spawn()
 T CAI_BattleLine::UpdateOnRemove()
 T CAI_BattleLine::~CAI_BattleLine()
 T CAI_Behavior<CAI_BaseNPC, 100000>::IsBehaviorSchedule(int)
 T CAI_BehaviorBase::AimGun()
 T CAI_BehaviorBase::BeginScheduleSelection()
 T CAI_BehaviorBase::BehaviorBridge_AimGun()
 T CAI_BehaviorBase::BehaviorBridge_BestEnemy()
 T CAI_BehaviorBase::BehaviorBridge_CanFlinch()
 T CAI_BehaviorBase::BehaviorBridge_CanRunAScriptedNPCInteraction(bool)
 T CAI_BehaviorBase::BehaviorBridge_FValidateHintType(CAI_Hint*)
 T CAI_BehaviorBase::BehaviorBridge_GatherConditions()
 T CAI_BehaviorBase::BehaviorBridge_GetDefaultNavGoalTolerance()
 T CAI_BehaviorBase::BehaviorBridge_GetFlinchActivity(bool, bool)
 T CAI_BehaviorBase::BehaviorBridge_GetMaxTacticalLateralMovement()
 T CAI_BehaviorBase::BehaviorBridge_GetReasonableFacingDist()
 T CAI_BehaviorBase::BehaviorBridge_HandleAnimEvent(animevent_t*)
 T CAI_BehaviorBase::BehaviorBridge_IsCoverPosition(Vector const&, Vector const&)
 T CAI_BehaviorBase::BehaviorBridge_IsCrouchedActivity(Activity)
 T CAI_BehaviorBase::BehaviorBridge_IsCrouching()
 T CAI_BehaviorBase::BehaviorBridge_IsCurTaskContinuousMove()
 T CAI_BehaviorBase::BehaviorBridge_IsInterruptable()
 T CAI_BehaviorBase::BehaviorBridge_IsNavigationUrgent()
 T CAI_BehaviorBase::BehaviorBridge_IsValidCover(Vector const&, CAI_Hint const*)
 T CAI_BehaviorBase::BehaviorBridge_IsValidEnemy(CBaseEntity*)
 T CAI_BehaviorBase::BehaviorBridge_IsValidShootPosition(Vector const&, CAI_Node*, CAI_Hint const*)
 T CAI_BehaviorBase::BehaviorBridge_ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CAI_BehaviorBase::BehaviorBridge_NPC_TranslateActivity(Activity)
 T CAI_BehaviorBase::BehaviorBridge_OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_BehaviorBase::BehaviorBridge_OnFriendDamaged(CBaseCombatCharacter*, CBaseEntity*)
 T CAI_BehaviorBase::BehaviorBridge_OnMovementComplete()
 T CAI_BehaviorBase::BehaviorBridge_OnMovementFailed()
 T CAI_BehaviorBase::BehaviorBridge_OnScheduleChange()
 T CAI_BehaviorBase::BehaviorBridge_OnSeeEntity(CBaseEntity*)
 T CAI_BehaviorBase::BehaviorBridge_OnTakeDamage_Alive(CTakeDamageInfo const&)
 T CAI_BehaviorBase::BehaviorBridge_PrescheduleThink()
 T CAI_BehaviorBase::BehaviorBridge_QueryHearSound(CSound*)
 T CAI_BehaviorBase::BehaviorBridge_SelectSchedule()
 T CAI_BehaviorBase::BehaviorBridge_ShouldAlwaysThink()
 T CAI_BehaviorBase::BehaviorBridge_ShouldIgnoreSound(CSound*)
 T CAI_BehaviorBase::BehaviorBridge_ShouldPlayerAvoid()
 T CAI_BehaviorBase::BehaviorBridge_Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T CAI_BehaviorBase::BehaviorBridge_TranslateSchedule(int)
 T CAI_BehaviorBase::BehaviorBridge_WeaponLOSCondition(Vector const&, Vector const&, bool)
 T CAI_BehaviorBase::BestEnemy()
 T CAI_BehaviorBase::BuildScheduleTestBits()
 T CAI_BehaviorBase::BuildScheduleTestBitsNotActive()
 T CAI_BehaviorBase::CanFlinch()
 T CAI_BehaviorBase::CanRunAScriptedNPCInteraction(bool)
 T CAI_BehaviorBase::CanSelectSchedule()
 T CAI_BehaviorBase::CleanupOnDeath(CBaseEntity*, bool)
 T CAI_BehaviorBase::DeleteOnHostDestroy()
 T CAI_BehaviorBase::DrawDebugTextOverlays(int)
 T CAI_BehaviorBase::EndScheduleSelection()
 T CAI_BehaviorBase::Event_Killed(CTakeDamageInfo const&)
 T CAI_BehaviorBase::FValidateHintType(CAI_Hint*)
 T CAI_BehaviorBase::GatherConditions()
 T CAI_BehaviorBase::GatherConditionsNotActive()
 T CAI_BehaviorBase::GetBehaviorClasses()
 T CAI_BehaviorBase::GetClassNameV()
 T CAI_BehaviorBase::GetClassScheduleIdSpace()
 T CAI_BehaviorBase::GetDataDescMap()
 T CAI_BehaviorBase::GetDefaultNavGoalTolerance()
 T CAI_BehaviorBase::GetFlinchActivity(bool, bool)
 T CAI_BehaviorBase::GetJumpGravity() const
 T CAI_BehaviorBase::GetMaxTacticalLateralMovement()
 T CAI_BehaviorBase::GetReasonableFacingDist()
 T CAI_BehaviorBase::GetSchedule(int)
 T CAI_BehaviorBase::GetSchedulingErrorName()
 T CAI_BehaviorBase::HandleAnimEvent(animevent_t*)
 T CAI_BehaviorBase::IsBehaviorSchedule(int)
 T CAI_BehaviorBase::IsCoverPosition(Vector const&, Vector const&)
 T CAI_BehaviorBase::IsCrouchedActivity(Activity)
 T CAI_BehaviorBase::IsCrouching()
 T CAI_BehaviorBase::IsCurSchedule(int, bool)
 T CAI_BehaviorBase::IsCurTaskContinuousMove()
 T CAI_BehaviorBase::IsInterruptable()
 T CAI_BehaviorBase::IsJumpLegal(Vector const&, Vector const&, Vector const&, float, float, float) const
 T CAI_BehaviorBase::IsNavigationUrgent()
 T CAI_BehaviorBase::IsScheduleValid(AIChannelScheduleState_t*)
 T CAI_BehaviorBase::IsValidCover(Vector const&, CAI_Hint const*)
 T CAI_BehaviorBase::IsValidEnemy(CBaseEntity*)
 T CAI_BehaviorBase::IsValidShootPosition(Vector const&, CAI_Node*, CAI_Hint const*)
 T CAI_BehaviorBase::KeyValue(char const*, char const*)
 T CAI_BehaviorBase::MaintainChannelSchedules()
 T CAI_BehaviorBase::MaintainSchedule(int)
 T CAI_BehaviorBase::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CAI_BehaviorBase::MovementCost(int, Vector const&, Vector const&, float*)
 T CAI_BehaviorBase::NPC_TranslateActivity(Activity)
 T CAI_BehaviorBase::NotifyChangeBehaviorStatus(bool)
 T CAI_BehaviorBase::OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_BehaviorBase::OnChangeActiveWeapon(CBaseCombatWeapon*, CBaseCombatWeapon*)
 T CAI_BehaviorBase::OnChangeHintGroup(string_t, string_t)
 T CAI_BehaviorBase::OnFriendDamaged(CBaseCombatCharacter*, CBaseEntity*)
 T CAI_BehaviorBase::OnMovementComplete()
 T CAI_BehaviorBase::OnMovementFailed()
 T CAI_BehaviorBase::OnRestore()
 T CAI_BehaviorBase::OnScheduleChange()
 T CAI_BehaviorBase::OnScheduleChange(int)
 T CAI_BehaviorBase::OnSeeEntity(CBaseEntity*)
 T CAI_BehaviorBase::OnStartSchedule(int)
 T CAI_BehaviorBase::OnStartSchedule(int, int)
 T CAI_BehaviorBase::OnTakeDamage_Alive(CTakeDamageInfo const&)
 T CAI_BehaviorBase::OnUpdateShotRegulator()
 T CAI_BehaviorBase::Precache()
 T CAI_BehaviorBase::PrescheduleThink()
 T CAI_BehaviorBase::QueryHearSound(CSound*)
 T CAI_BehaviorBase::Restore(IRestore&)
 T CAI_BehaviorBase::RestoreBehaviors(IRestore&, CAI_BehaviorBase**, int, bool)
 T CAI_BehaviorBase::RestoreChannels(IRestore&)
 T CAI_BehaviorBase::RunTask(Task_t const*)
 T CAI_BehaviorBase::RunTask(int, Task_t const*)
 T CAI_BehaviorBase::Save(ISave&)
 T CAI_BehaviorBase::SaveBehaviors(ISave&, CAI_BehaviorBase*, CAI_BehaviorBase**, int, bool)
 T CAI_BehaviorBase::SaveChannels(ISave&)
 T CAI_BehaviorBase::SelectFailSchedule(int, int, int)
 T CAI_BehaviorBase::SelectFailSchedule(int, int, int, int)
 T CAI_BehaviorBase::SelectSchedule()
 T CAI_BehaviorBase::SelectSchedule(int)
 T CAI_BehaviorBase::SetSchedule(int, CAI_Schedule*)
 T CAI_BehaviorBase::ShouldAlwaysThink()
 T CAI_BehaviorBase::ShouldIgnoreSound(CSound*)
 T CAI_BehaviorBase::ShouldNPCSave()
 T CAI_BehaviorBase::ShouldPlayerAvoid()
 T CAI_BehaviorBase::Spawn()
 T CAI_BehaviorBase::StartTask(Task_t const*)
 T CAI_BehaviorBase::StartTask(int, Task_t const*)
 T CAI_BehaviorBase::TaskComplete(bool)
 T CAI_BehaviorBase::TaskFail(int)
 T CAI_BehaviorBase::TaskFail(int, int)
 T CAI_BehaviorBase::Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T CAI_BehaviorBase::TranslateSchedule(int)
 T CAI_BehaviorBase::TranslateSchedule(int, int)
 T CAI_BehaviorBase::UpdateOnRemove()
 T CAI_BehaviorBase::WeaponLOSCondition(Vector const&, Vector const&, bool)
 T CAI_BehaviorBase::~CAI_BehaviorBase()
 T CAI_BehaviorHost<CAI_BaseNPC>::AimGun()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_AimGun()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_BestEnemy()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_CanFlinch()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_CanRunAScriptedNPCInteraction(bool)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_FValidateHintType(CAI_Hint*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GatherConditions()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetDefaultNavGoalTolerance()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetFlinchActivity(bool, bool)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetJumpGravity() const
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetMaxTacticalLateralMovement()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetReasonableFacingDist()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_HandleAnimEvent(animevent_t*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsCoverPosition(Vector const&, Vector const&)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsCrouchedActivity(Activity)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsCrouching()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsCurTaskContinuousMove()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsInterruptable()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsJumpLegal(Vector const&, Vector const&, Vector const&, float, float, float) const
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsNavigationUrgent()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsValidCover(Vector const&, CAI_Hint const*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsValidEnemy(CBaseEntity*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsValidShootPosition(Vector const&, CAI_Node*, CAI_Hint const*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_MovementCost(int, Vector const&, Vector const&, float*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_NPC_TranslateActivity(Activity)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnFriendDamaged(CBaseCombatCharacter*, CBaseEntity*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnMovementComplete()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnMovementFailed()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnScheduleChange()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnSeeEntity(CBaseEntity*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnTakeDamage_Alive(CTakeDamageInfo const&)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_PrescheduleThink()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_QueryHearSound(CSound*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_SelectSchedule()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_ShouldAlwaysThink()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_ShouldIgnoreSound(CSound*)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_ShouldPlayerAvoid()
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_TranslateSchedule(int)
 T CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_WeaponLOSCondition(Vector const&, Vector const&, bool)
 T CAI_BehaviorHost<CAI_BaseNPC>::BestEnemy()
 T CAI_BehaviorHost<CAI_BaseNPC>::CanFlinch()
 T CAI_BehaviorHost<CAI_BaseNPC>::CanRunAScriptedNPCInteraction(bool)
 T CAI_BehaviorHost<CAI_BaseNPC>::CleanupOnDeath(CBaseEntity*, bool)
 T CAI_BehaviorHost<CAI_BaseNPC>::Event_Killed(CTakeDamageInfo const&)
 T CAI_BehaviorHost<CAI_BaseNPC>::FValidateHintType(CAI_Hint*)
 T CAI_BehaviorHost<CAI_BaseNPC>::GetDefaultNavGoalTolerance()
 T CAI_BehaviorHost<CAI_BaseNPC>::GetFailSchedule()
 T CAI_BehaviorHost<CAI_BaseNPC>::GetFlinchActivity(bool, bool)
 T CAI_BehaviorHost<CAI_BaseNPC>::GetJumpGravity() const
 T CAI_BehaviorHost<CAI_BaseNPC>::GetMaxTacticalLateralMovement()
 T CAI_BehaviorHost<CAI_BaseNPC>::GetNewSchedule()
 T CAI_BehaviorHost<CAI_BaseNPC>::GetReasonableFacingDist()
 T CAI_BehaviorHost<CAI_BaseNPC>::GetSchedule(int)
 T CAI_BehaviorHost<CAI_BaseNPC>::HandleAnimEvent(animevent_t*)
 T CAI_BehaviorHost<CAI_BaseNPC>::IsCoverPosition(Vector const&, Vector const&)
 T CAI_BehaviorHost<CAI_BaseNPC>::IsCrouchedActivity(Activity)
 T CAI_BehaviorHost<CAI_BaseNPC>::IsCrouching()
 T CAI_BehaviorHost<CAI_BaseNPC>::IsCurTaskContinuousMove()
 T CAI_BehaviorHost<CAI_BaseNPC>::IsInterruptable()
 T CAI_BehaviorHost<CAI_BaseNPC>::IsJumpLegal(Vector const&, Vector const&, Vector const&, float, float, float) const
 T CAI_BehaviorHost<CAI_BaseNPC>::IsNavigationUrgent()
 T CAI_BehaviorHost<CAI_BaseNPC>::IsValidCover(Vector const&, CAI_Hint const*)
 T CAI_BehaviorHost<CAI_BaseNPC>::IsValidEnemy(CBaseEntity*)
 T CAI_BehaviorHost<CAI_BaseNPC>::IsValidShootPosition(Vector const&, CAI_Node*, CAI_Hint const*)
 T CAI_BehaviorHost<CAI_BaseNPC>::MovementCost(int, Vector const&, Vector const&, float*)
 T CAI_BehaviorHost<CAI_BaseNPC>::NPC_TranslateActivity(Activity)
 T CAI_BehaviorHost<CAI_BaseNPC>::OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_BehaviorHost<CAI_BaseNPC>::OnChangeActiveWeapon(CBaseCombatWeapon*, CBaseCombatWeapon*)
 T CAI_BehaviorHost<CAI_BaseNPC>::OnChangeHintGroup(string_t, string_t)
 T CAI_BehaviorHost<CAI_BaseNPC>::OnFriendDamaged(CBaseCombatCharacter*, CBaseEntity*)
 T CAI_BehaviorHost<CAI_BaseNPC>::OnMovementComplete()
 T CAI_BehaviorHost<CAI_BaseNPC>::OnMovementFailed()
 T CAI_BehaviorHost<CAI_BaseNPC>::OnRestore()
 T CAI_BehaviorHost<CAI_BaseNPC>::OnScheduleChange()
 T CAI_BehaviorHost<CAI_BaseNPC>::OnSeeEntity(CBaseEntity*)
 T CAI_BehaviorHost<CAI_BaseNPC>::OnStartSchedule(int)
 T CAI_BehaviorHost<CAI_BaseNPC>::OnTakeDamage_Alive(CTakeDamageInfo const&)
 T CAI_BehaviorHost<CAI_BaseNPC>::PrescheduleThink()
 T CAI_BehaviorHost<CAI_BaseNPC>::QueryHearSound(CSound*)
 T CAI_BehaviorHost<CAI_BaseNPC>::Restore(IRestore&)
 T CAI_BehaviorHost<CAI_BaseNPC>::Save(ISave&)
 T CAI_BehaviorHost<CAI_BaseNPC>::SelectFailSchedule(int, int, int)
 T CAI_BehaviorHost<CAI_BaseNPC>::SelectSchedule()
 T CAI_BehaviorHost<CAI_BaseNPC>::ShouldAlwaysThink()
 T CAI_BehaviorHost<CAI_BaseNPC>::ShouldIgnoreSound(CSound*)
 T CAI_BehaviorHost<CAI_BaseNPC>::ShouldPlayerAvoid()
 T CAI_BehaviorHost<CAI_BaseNPC>::TaskName(int)
 T CAI_BehaviorHost<CAI_BaseNPC>::TranslateSchedule(int)
 T CAI_BehaviorHost<CAI_BaseNPC>::UpdateOnRemove()
 T CAI_BehaviorHost<CAI_BaseNPC>::WeaponLOSCondition(Vector const&, Vector const&, bool)
 T CAI_BlendedMotor::AddTurnGesture(float)
 T CAI_BlendedMotor::BuildInsertNode(int, float)
 T CAI_BlendedMotor::BuildTurnScript(AILocalMoveGoal_t const&)
 T CAI_BlendedMotor::BuildTurnScript(int, int)
 T CAI_BlendedMotor::BuildVelocityScript(AILocalMoveGoal_t const&)
 T CAI_BlendedMotor::GetInteriorSequence(int)
 T CAI_BlendedMotor::GetMoveScriptTotalTime()
 T CAI_BlendedMotor::GetMoveScriptYaw()
 T CAI_BlendedMotor::InsertSlowdown(float, float, bool)
 T CAI_BlendedMotor::MaintainTurnActivity()
 T CAI_BlendedMotor::MoveClimbStart(Vector const&, Vector const&, float, float)
 T CAI_BlendedMotor::MoveContinue()
 T CAI_BlendedMotor::MoveFlyExecute(AILocalMoveGoal_t const&, AIMoveTrace_t*)
 T CAI_BlendedMotor::MoveGroundExecute(AILocalMoveGoal_t const&, AIMoveTrace_t*)
 T CAI_BlendedMotor::MoveJumpStart(Vector const&)
 T CAI_BlendedMotor::MovePaused()
 T CAI_BlendedMotor::MoveStart()
 T CAI_BlendedMotor::MoveStop()
 T CAI_BlendedMotor::OverrideMaxYawSpeed(Activity)
 T CAI_BlendedMotor::RecalculateYawSpeed()
 T CAI_BlendedMotor::ResetGoalSequence()
 T CAI_BlendedMotor::ResetMoveCalculations()
 T CAI_BlendedMotor::SetMoveScriptAnim(float)
 T CAI_BlendedMotor::UpdateYaw(int)
 T CAI_BlendedMotor::~CAI_BlendedMotor()
 T CAI_BlendingHost<CAI_BehaviorHost<CAI_BaseNPC> >::CreateMotor()
 T CAI_BlendingHost<CAI_BehaviorHost<CAI_BaseNPC> >::CreateNavigator()
 T CAI_BlendingHost<CAI_BehaviorHost<CAI_BaseNPC> >::GetTimeToNavGoal()
 T CAI_BlendingHost<CAI_BehaviorHost<CAI_BaseNPC> >::MaxYawSpeed()
 T CAI_ChangeHintGroup::FindQualifiedNPC(CAI_BaseNPC*, CBaseEntity*, CBaseEntity*)
 T CAI_ChangeHintGroup::GetDataDescMap()
 T CAI_ChangeHintGroup::InputActivate(inputdata_t&)
 T CAI_ChangeHintGroup::ObjectCaps()
 T CAI_ChangeHintGroup::~CAI_ChangeHintGroup()
 T CAI_ChangeTarget::GetDataDescMap()
 T CAI_ChangeTarget::InputActivate(inputdata_t&)
 T CAI_ChangeTarget::ObjectCaps()
 T CAI_ChangeTarget::~CAI_ChangeTarget()
 T CAI_Component::SetOuter(CAI_BaseNPC*)
 T CAI_Component::TaskComplete(bool)
 T CAI_Component::TaskFail(int)
 T CAI_ComponentWithOuter<CAI_BaseNPC, CAI_BehaviorBase>::SetOuter(CAI_BaseNPC*)
 T CAI_DefMovementSink::OnFailedLocalNavigation(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_DefMovementSink::OnFailedSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_DefMovementSink::OnInsufficientStopDist(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_DefMovementSink::OnMoveBlocked(AIMoveResult_t*)
 T CAI_DefMovementSink::OnMoveExecuteFailed(AILocalMoveGoal_t const&, AIMoveTrace_t const&, AIMotorMoveResult_t, AIMoveResult_t*)
 T CAI_DefMovementSink::OnMoveStalled(AILocalMoveGoal_t const&)
 T CAI_DynamicLink::GenerateControllerLinks()
 T CAI_DynamicLink::GetDataDescMap()
 T CAI_DynamicLink::GetDynamicLink(int, int)
 T CAI_DynamicLink::InitDynamicLinks()
 T CAI_DynamicLink::InputTurnOff(inputdata_t&)
 T CAI_DynamicLink::InputTurnOn(inputdata_t&)
 T CAI_DynamicLink::ObjectCaps()
 T CAI_DynamicLink::PurgeDynamicLinks()
 T CAI_DynamicLink::ResetDynamicLinks()
 T CAI_DynamicLink::SetLinkState()
 T CAI_DynamicLink::~CAI_DynamicLink()
 T CAI_DynamicLinkController::GenerateLinksFromVolume()
 T CAI_DynamicLinkController::GetDataDescMap()
 T CAI_DynamicLinkController::InputSetAllowed(inputdata_t&)
 T CAI_DynamicLinkController::InputSetInvert(inputdata_t&)
 T CAI_DynamicLinkController::InputTurnOff(inputdata_t&)
 T CAI_DynamicLinkController::InputTurnOn(inputdata_t&)
 T CAI_DynamicLinkController::~CAI_DynamicLinkController()
 T CAI_Enemies::CAI_Enemies()
 T CAI_Enemies::ClearMemory(CBaseEntity*)
 T CAI_Enemies::Find(CBaseEntity*, bool)
 T CAI_Enemies::FirstTimeSeen(CBaseEntity*)
 T CAI_Enemies::GetDangerMemory()
 T CAI_Enemies::GetFirst(AIEnemiesIter_t__**)
 T CAI_Enemies::GetNext(AIEnemiesIter_t__**)
 T CAI_Enemies::HasEludedMe(CBaseEntity*)
 T CAI_Enemies::HasMemory(CBaseEntity*)
 T CAI_Enemies::LastKnownPosition(CBaseEntity*)
 T CAI_Enemies::LastTimeSeen(CBaseEntity*, bool)
 T CAI_Enemies::MarkAsEluded(CBaseEntity*)
 T CAI_Enemies::OnTookDamageFrom(CBaseEntity*)
 T CAI_Enemies::RefreshMemories()
 T CAI_Enemies::SetEnemyDiscardTime(float)
 T CAI_Enemies::SetFreeKnowledgeDuration(float)
 T CAI_Enemies::UpdateMemory(CAI_Network*, CBaseEntity*, Vector const&, float, bool)
 T CAI_Enemies::~CAI_Enemies()
 T CAI_EnemiesListSaveRestoreOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CAI_EnemiesListSaveRestoreOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CAI_EnemiesListSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CAI_EnemiesListSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CAI_Expresser::CAI_Expresser(CBaseFlex*)
 T CAI_Expresser::CanSpeak()
 T CAI_Expresser::CanSpeakAfterMyself()
 T CAI_Expresser::CanSpeakConcept(CAI_Concept)
 T CAI_Expresser::FindResponse(ResponseRules::CRR_Response&, CAI_Concept&, ResponseRules::CriteriaSet*)
 T CAI_Expresser::FireEntIOFromResponse(char*, CBaseEntity*)
 T CAI_Expresser::GatherCriteria(ResponseRules::CriteriaSet*, CAI_Concept const&, char const*)
 T CAI_Expresser::GetResponseDuration(ResponseRules::CRR_Response*)
 T CAI_Expresser::GetTimeSpokeConcept(CAI_Concept)
 T CAI_Expresser::IsSpeaking()
 T CAI_Expresser::IsSpeechGloballySuppressed()
 T CAI_Expresser::IsValidResponse(ResponseRules::ResponseType_t, char const*)
 T CAI_Expresser::NoteSpeaking(float, float)
 T CAI_Expresser::OnSpeechFinished()
 T CAI_Expresser::SemaphoreIsAvailable(CBaseEntity*)
 T CAI_Expresser::SetSpokeConcept(CAI_Concept, ResponseRules::CRR_Response*, bool)
 T CAI_Expresser::Speak(CAI_Concept&, ResponseRules::CriteriaSet*, char*, unsigned long, IRecipientFilter*)
 T CAI_Expresser::Speak(CAI_Concept&, char const*, char*, unsigned long, IRecipientFilter*)
 T CAI_Expresser::SpeakDispatchResponse(CAI_Concept&, ResponseRules::CRR_Response*, ResponseRules::CriteriaSet*, IRecipientFilter*)
 T CAI_Expresser::SpeakRawScene(char const*, float, ResponseRules::CRR_Response*, IRecipientFilter*)
 T CAI_Expresser::SpeakRawSentence(char const*, float, float, soundlevel_t, CBaseEntity*)
 T CAI_Expresser::SpeechMsg(CBaseEntity*, char const*, ...)
 T CAI_Expresser::SpokeConcept(CAI_Concept)
 T CAI_Expresser::TestAllResponses()
 T CAI_Expresser::~CAI_Expresser()
 T CAI_ExpresserHost<CAI_BaseHumanoid>::DispatchResponse(char const*)
 T CAI_ExpresserHost<CAI_BaseHumanoid>::GetResponseSystem()
 T CAI_ExpresserHost<CAI_BaseHumanoid>::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CAI_ExpresserHost<CAI_BaseHumanoid>::NoteSpeaking(float, float)
 T CAI_ExpresserHost<CAI_BaseHumanoid>::PlaySentence(char const*, float, float, soundlevel_t, CBaseEntity*)
 T CAI_ExpresserHost<CAI_BaseHumanoid>::PostSpeakDispatchResponse(CAI_Concept, ResponseRules::CRR_Response*)
 T CAI_ExpresserHost<CAI_BaseHumanoid>::Speak(CAI_Concept, ResponseRules::CriteriaSet*, char*, unsigned long, IRecipientFilter*)
 T CAI_ExpresserHost<CAI_BaseHumanoid>::Speak(CAI_Concept, char const*, char*, unsigned long, IRecipientFilter*)
 T CAI_ExpresserHost<CBasePlayer>::DispatchResponse(char const*)
 T CAI_ExpresserHost<CBasePlayer>::GetResponseSystem()
 T CAI_ExpresserHost<CBasePlayer>::NoteSpeaking(float, float)
 T CAI_ExpresserHost<CBasePlayer>::PostSpeakDispatchResponse(CAI_Concept, ResponseRules::CRR_Response*)
 T CAI_ExpresserHost<CBasePlayer>::Speak(CAI_Concept, ResponseRules::CriteriaSet*, char*, unsigned long, IRecipientFilter*)
 T CAI_ExpresserHost<CBasePlayer>::Speak(CAI_Concept, char const*, char*, unsigned long, IRecipientFilter*)
 T CAI_ExpresserHost<CFlexExpresserShim>::DispatchResponse(char const*)
 T CAI_ExpresserHost<CFlexExpresserShim>::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CAI_ExpresserHost<CFlexExpresserShim>::NoteSpeaking(float, float)
 T CAI_ExpresserHost<CFlexExpresserShim>::PostSpeakDispatchResponse(CAI_Concept, ResponseRules::CRR_Response*)
 T CAI_ExpresserHost<CFlexExpresserShim>::Speak(CAI_Concept, ResponseRules::CriteriaSet*, char*, unsigned long, IRecipientFilter*)
 T CAI_ExpresserHost<CFlexExpresserShim>::Speak(CAI_Concept, char const*, char*, unsigned long, IRecipientFilter*)
 T CAI_ExpresserHost_NPC_DoModifyOrAppendCriteria(CAI_BaseNPC*, ResponseRules::CriteriaSet&)
 T CAI_ExpresserSink::OnSpokeConcept(CAI_Concept, ResponseRules::CRR_Response*)
 T CAI_ExpresserSink::OnStartSpeaking()
 T CAI_ExpresserSink::UseSemaphore()
 T CAI_ExpresserWithFollowup::DispatchFollowupThroughQueue(CAI_Concept const&, char const*, CResponseQueue::CFollowupTargetSpec_t const&, float, CBaseEntity*)
 T CAI_ExpresserWithFollowup::OnSpeechFinished()
 T CAI_ExpresserWithFollowup::Speak(CAI_Concept&, char const*, char*, unsigned long, IRecipientFilter*)
 T CAI_ExpresserWithFollowup::SpeakDispatchFollowup(ResponseRules::AI_ResponseFollowup&)
 T CAI_ExpresserWithFollowup::SpeakDispatchResponse(CAI_Concept&, ResponseRules::CRR_Response*, ResponseRules::CriteriaSet*, IRecipientFilter*)
 T CAI_FightFromCoverGoal* _CreateEntityTemplate<CAI_FightFromCoverGoal>(CAI_FightFromCoverGoal*, char const*)
 T CAI_FightFromCoverGoal::BeginMovingFront()
 T CAI_FightFromCoverGoal::DisableGoal(CAI_BaseNPC*)
 T CAI_FightFromCoverGoal::DrawDebugTextOverlays()
 T CAI_FightFromCoverGoal::EnableGoal(CAI_BaseNPC*)
 T CAI_FightFromCoverGoal::FrontThink()
 T CAI_FightFromCoverGoal::GetDataDescMap()
 T CAI_FightFromCoverGoal::InputSetDirectionalMarker(inputdata_t&)
 T CAI_FightFromCoverGoal::OnActivate()
 T CAI_FightFromCoverGoal::OnDeactivate()
 T CAI_FightFromCoverGoal::ResolveNames()
 T CAI_FightFromCoverGoal::~CAI_FightFromCoverGoal()
 T CAI_FollowBehavior::SetFollowGoal(CAI_FollowGoal*, bool)
 T CAI_FollowBehavior::SetFollowTarget(CBaseEntity*, bool)
 T CAI_FollowGoal::DisableGoal(CAI_BaseNPC*)
 T CAI_FollowGoal::EnableGoal(CAI_BaseNPC*)
 T CAI_FollowGoal::GetDataDescMap()
 T CAI_FollowGoal::~CAI_FollowGoal()
 T CAI_FollowManager::AddFollower(CBaseEntity*, CAI_BaseNPC*, AI_Formations_t, AI_FollowManagerInfoHandle_t*)
 T CAI_FollowManager::ChangeFormation(AI_FollowManagerInfoHandle_t&, AI_Formations_t)
 T CAI_FollowManager::FindCreateGroup(CBaseEntity*, AI_Formations_t)
 T CAI_FollowManager::RedistributeSlots(AI_FollowGroup_t*)
 T CAI_FollowManager::RemoveFollower(AI_FollowManagerInfoHandle_t&)
 T CAI_FollowManager::RemoveGroup(AI_FollowGroup_t*)
 T CAI_FollowManager::~CAI_FollowManager()
 T CAI_FreePass::ShouldAllowFVisible(bool)
 T CAI_FreePass::Update()
 T CAI_FreePass::~CAI_FreePass()
 T CAI_FuncTankBehavior::Dismount()
 T CAI_FuncTankBehavior::SetFuncTank(CHandle<CFuncTank>)
 T CAI_GlobalNamespace::AddSymbol(char const*, int)
 T CAI_GlobalNamespace::CAI_GlobalNamespace()
 T CAI_GlobalNamespace::Clear()
 T CAI_GlobalNamespace::IdToSymbol(int) const
 T CAI_GlobalNamespace::NextGlobalBase() const
 T CAI_GlobalNamespace::SymbolToId(char const*) const
 T CAI_GlobalNamespace::~CAI_GlobalNamespace()
 T CAI_GlobalScheduleNamespace::~CAI_GlobalScheduleNamespace()
 T CAI_GoalEntity::DelayedRefresh()
 T CAI_GoalEntity::DisableGoal(CAI_BaseNPC*)
 T CAI_GoalEntity::DrawDebugTextOverlays()
 T CAI_GoalEntity::EnableGoal(CAI_BaseNPC*)
 T CAI_GoalEntity::GetDataDescMap()
 T CAI_GoalEntity::InputActivate(inputdata_t&)
 T CAI_GoalEntity::InputDeactivate(inputdata_t&)
 T CAI_GoalEntity::InputUpdateActors(inputdata_t&)
 T CAI_GoalEntity::ObjectCaps()
 T CAI_GoalEntity::OnActivate()
 T CAI_GoalEntity::OnDeactivate()
 T CAI_GoalEntity::OnEntityCreated(CBaseEntity*)
 T CAI_GoalEntity::OnEntityDeleted(CBaseEntity*)
 T CAI_GoalEntity::OnRestore()
 T CAI_GoalEntity::PruneActors()
 T CAI_GoalEntity::ResolveNames()
 T CAI_GoalEntity::Spawn()
 T CAI_GoalEntity::UpdateOnRemove()
 T CAI_GoalEntity::~CAI_GoalEntity()
 T CAI_Hint::Activate()
 T CAI_Hint::DisableForSeconds(float)
 T CAI_Hint::DrawDebugTextOverlays()
 T CAI_Hint::EnableThink()
 T CAI_Hint::FixupTargetNode()
 T CAI_Hint::GetDataDescMap()
 T CAI_Hint::GetDirection()
 T CAI_Hint::GetPosition(CBaseCombatCharacter*, Vector*)
 T CAI_Hint::HintMatchesCriteria(CAI_BaseNPC*, CHintCriteria const&, Vector const&, float*, bool, bool)
 T CAI_Hint::InputDisableHint(inputdata_t&)
 T CAI_Hint::InputEnableHint(inputdata_t&)
 T CAI_Hint::IsInNodeFOV(CBaseEntity*)
 T CAI_Hint::IsLocked()
 T CAI_Hint::IsLockedBy(CBaseEntity*)
 T CAI_Hint::IsViewable()
 T CAI_Hint::Lock(CBaseEntity*)
 T CAI_Hint::NPCStartedUsing(CAI_BaseNPC*)
 T CAI_Hint::NPCStoppedUsing(CAI_BaseNPC*)
 T CAI_Hint::ObjectCaps()
 T CAI_Hint::OnRestore()
 T CAI_Hint::SetHintType(int, bool)
 T CAI_Hint::Spawn()
 T CAI_Hint::Unlock(float)
 T CAI_Hint::UpdateOnRemove()
 T CAI_Hint::Yaw()
 T CAI_Hint::~CAI_Hint()
 T CAI_HintManager::AddHint(CAI_Hint*)
 T CAI_HintManager::AddHintByType(CAI_Hint*)
 T CAI_HintManager::CreateHint(HintNodeData*, char const*)
 T CAI_HintManager::DrawHintOverlays(float)
 T CAI_HintManager::DumpHints()
 T CAI_HintManager::FindAllHints(CAI_BaseNPC*, Vector const&, CHintCriteria const&, CUtlVector<CAI_Hint*, CUtlMemory<CAI_Hint*, int> >*)
 T CAI_HintManager::FindHint(CAI_BaseNPC*, CHintCriteria const&)
 T CAI_HintManager::FindHint(CAI_BaseNPC*, Hint_e, int, float, Vector const*)
 T CAI_HintManager::FindHint(CAI_BaseNPC*, Vector const&, CHintCriteria const&)
 T CAI_HintManager::FindHint(Vector const&, CHintCriteria const&)
 T CAI_HintManager::FindHintRandom(CAI_BaseNPC*, Vector const&, CHintCriteria const&)
 T CAI_HintManager::GetFirstHint(AIHintIter_t__**)
 T CAI_HintManager::GetFlags(char const*)
 T CAI_HintManager::GetNextHint(AIHintIter_t__**)
 T CAI_HintManager::RemoveHint(CAI_Hint*)
 T CAI_HintManager::RemoveHintByType(CAI_Hint*)
 T CAI_InterestTarget::Add(CAI_InterestTarget_t::CAI_InterestTarget_e, CBaseEntity*, Vector const&, float, float, float)
 T CAI_InterestTarget::Add(CBaseEntity*, Vector const&, float, float, float)
 T CAI_InterestTarget::Add(CBaseEntity*, float, float, float)
 T CAI_InterestTarget::Add(Vector const&, float, float, float)
 T CAI_InterestTarget_t::GetPosition()
 T CAI_InterestTarget_t::Interest()
 T CAI_InterestTarget_t::IsActive()
 T CAI_InterestTarget_t::IsThis(CBaseEntity*)
 T CAI_LeadBehavior::LeadPlayer(AI_LeadArgs_t const&, CAI_LeadBehaviorHandler*)
 T CAI_LeadBehavior::SetGoal(AI_LeadArgs_t const&)
 T CAI_LeadGoal::GetConceptModifiers(char const*)
 T CAI_LeadGoal::GetDataDescMap()
 T CAI_LeadGoal::GetLeadBehavior()
 T CAI_LeadGoal::InputActivate(inputdata_t&)
 T CAI_LeadGoal::InputDeactivate(inputdata_t&)
 T CAI_LeadGoal::InputSetFailure(inputdata_t&)
 T CAI_LeadGoal::InputSetSuccess(inputdata_t&)
 T CAI_LeadGoal::OnEvent(int)
 T CAI_LeadGoal::~CAI_LeadGoal()
 T CAI_LeadGoal_Weapon::GetConceptModifiers(char const*)
 T CAI_LeadGoal_Weapon::GetDataDescMap()
 T CAI_LeadGoal_Weapon::InputActivate(inputdata_t&)
 T CAI_LeadGoal_Weapon::~CAI_LeadGoal_Weapon()
 T CAI_Link::CAI_Link()
 T CAI_LocalIdSpace::AddSymbol(char const*, int, char const*, char const*)
 T CAI_LocalIdSpace::CAI_LocalIdSpace(bool)
 T CAI_LocalIdSpace::GlobalToLocal(int) const
 T CAI_LocalIdSpace::Init(CAI_GlobalNamespace*, CAI_LocalIdSpace*)
 T CAI_LocalIdSpace::LocalToGlobal(int) const
 T CAI_LocalNavigator::CAI_LocalNavigator(CAI_BaseNPC*)
 T CAI_LocalNavigator::Init(IAI_MovementSink*)
 T CAI_LocalNavigator::IsSegmentBlockedByGlobalObstacles(Vector const&, Vector const&)
 T CAI_LocalNavigator::MoveCalc(AILocalMoveGoal_t*, bool)
 T CAI_LocalNavigator::MoveCalcDirect(AILocalMoveGoal_t*, bool, float*, AIMoveResult_t*)
 T CAI_LocalNavigator::MoveCalcRaw(AILocalMoveGoal_t*, bool)
 T CAI_LocalNavigator::MoveCalcSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_LocalNavigator::RemoveGlobalObstacle(Obstacle_t__*)
 T CAI_LocalNavigator::ResetMoveCalculations()
 T CAI_LocalNavigator::~CAI_LocalNavigator()
 T CAI_Manager::AccessAIs()
 T CAI_Manager::NumAIs()
 T CAI_Manager::~CAI_Manager()
 T CAI_Motor::AddFacingTarget(CBaseEntity*, Vector const&, float, float, float)
 T CAI_Motor::AddFacingTarget(CBaseEntity*, float, float, float)
 T CAI_Motor::AddFacingTarget(Vector const&, float, float, float)
 T CAI_Motor::AddTurnGesture(float)
 T CAI_Motor::CAI_Motor(CAI_BaseNPC*)
 T CAI_Motor::CalcIntervalMove()
 T CAI_Motor::DeltaIdealYaw()
 T CAI_Motor::GetFacingDirection(Vector&)
 T CAI_Motor::GetIdealAccel() const
 T CAI_Motor::GetIdealSpeed() const
 T CAI_Motor::GetNavigator()
 T CAI_Motor::GetPlaybackRate() const
 T CAI_Motor::GetSequenceGroundSpeed(int)
 T CAI_Motor::Init(IAI_MovementSink*)
 T CAI_Motor::MaintainTurnActivity()
 T CAI_Motor::MinCheckDist()
 T CAI_Motor::MinStoppingDist(float)
 T CAI_Motor::MoveClimbExecute(Vector const&, Vector const&, float, float, int)
 T CAI_Motor::MoveClimbStart(Vector const&, Vector const&, float, float)
 T CAI_Motor::MoveClimbStop()
 T CAI_Motor::MoveFacing(AILocalMoveGoal_t const&)
 T CAI_Motor::MoveFlyExecute(AILocalMoveGoal_t const&, AIMoveTrace_t*)
 T CAI_Motor::MoveGroundExecute(AILocalMoveGoal_t const&, AIMoveTrace_t*)
 T CAI_Motor::MoveGroundExecuteWalk(AILocalMoveGoal_t const&, float, float, AIMoveTrace_t*)
 T CAI_Motor::MoveGroundStep(Vector const&, CBaseEntity*, float, bool, bool, AIMoveTrace_t*)
 T CAI_Motor::MoveJumpExecute()
 T CAI_Motor::MoveJumpStart(Vector const&)
 T CAI_Motor::MoveJumpStop()
 T CAI_Motor::MoveNormalExecute(AILocalMoveGoal_t const&)
 T CAI_Motor::MovePaused()
 T CAI_Motor::MoveStart()
 T CAI_Motor::MoveStop()
 T CAI_Motor::OverrideMaxYawSpeed(Activity)
 T CAI_Motor::RecalculateYawSpeed()
 T CAI_Motor::ResetMoveCalculations()
 T CAI_Motor::SelectWeightedSequence(Activity)
 T CAI_Motor::SetIdealYawAndUpdate(float, float)
 T CAI_Motor::SetIdealYawToTarget(Vector const&, float, float)
 T CAI_Motor::SetIdealYawToTargetAndUpdate(Vector const&, float)
 T CAI_Motor::SetPlaybackRate(float)
 T CAI_Motor::UpdateYaw(int)
 T CAI_Motor::~CAI_Motor()
 T CAI_MoveAndShootOverlay::CAI_MoveAndShootOverlay()
 T CAI_MoveAndShootOverlay::CanAimAtEnemy()
 T CAI_MoveAndShootOverlay::EndShootWhileMove()
 T CAI_MoveAndShootOverlay::NoShootWhileMove()
 T CAI_MoveAndShootOverlay::RunShootWhileMove()
 T CAI_MoveAndShootOverlay::StartShootWhileMove()
 T CAI_MoveAndShootOverlay::~CAI_MoveAndShootOverlay()
 T CAI_MoveProbe::CAI_MoveProbe(CAI_BaseNPC*)
 T CAI_MoveProbe::CalcJumpLaunchVelocity(Vector const&, Vector const&, float, float*, float, Vector*) const
 T CAI_MoveProbe::CheckStandPosition(Vector const&, unsigned int) const
 T CAI_MoveProbe::CheckStep(CAI_MoveProbe::CheckStepArgs_t const&, CAI_MoveProbe::CheckStepResult_t*) const
 T CAI_MoveProbe::CheckStepOverLargeCrawl(CAI_MoveProbe::CheckStepResult_t*, CAI_MoveProbe::CheckStepArgs_t const&, Vector const&, Vector const&, CGameTrace const&) const
 T CAI_MoveProbe::ClimbMoveLimit(Vector const&, Vector const&, CBaseEntity const*, AIMoveTrace_t*) const
 T CAI_MoveProbe::Confirm3DConnectivity(AIMoveTrace_t*, unsigned int, Vector const&) const
 T CAI_MoveProbe::FloorPoint(Vector const&, unsigned int, float, float, Vector*) const
 T CAI_MoveProbe::FlyMoveLimit(Vector const&, Vector const&, unsigned int, CBaseEntity const*, AIMoveTrace_t*) const
 T CAI_MoveProbe::GroundMoveLimit(Vector const&, Vector const&, unsigned int, CBaseEntity const*, unsigned int, float, AIMoveTrace_t*) const
 T CAI_MoveProbe::JumpMoveLimit(Vector const&, Vector const&, unsigned int, CBaseEntity const*, AIMoveTrace_t*) const
 T CAI_MoveProbe::MoveLimit(Navigation_t, Vector const&, Vector const&, unsigned int, CBaseEntity const*, float, unsigned int, AIMoveTrace_t*)
 T CAI_MoveProbe::SetupCheckStepTraceListData(CAI_MoveProbe::CheckStepArgs_t const&) const
 T CAI_MoveProbe::ShouldBrushBeIgnored(CBaseEntity*)
 T CAI_MoveProbe::TestGroundMove(Vector const&, Vector const&, unsigned int, float, unsigned int, AIMoveTrace_t*) const
 T CAI_MoveProbe::TraceHull(Vector const&, Vector const&, Vector const&, Vector const&, unsigned int, CGameTrace*) const
 T CAI_MoveProbe::TraceHull(Vector const&, Vector const&, unsigned int, CGameTrace*) const
 T CAI_MoveProbe::TraceLine(Vector const&, Vector const&, unsigned int, bool, CGameTrace*) const
 T CAI_MoveProbe::~CAI_MoveProbe()
 T CAI_MoveSolver::Solve(AI_MoveSuggestion_t const*, int, AI_MoveSolution_t*)
 T CAI_MoveSolver::VisualizeRegulations(Vector const&)
 T CAI_NamespaceInfos::Compare(AI_NamespaceAddInfo_t const*, AI_NamespaceAddInfo_t const*)
 T CAI_NavInHintGroupFilter::IsValid(CAI_Node*)
 T CAI_NavInHintGroupFilter::ShouldContinue()
 T CAI_Navigator::AdvancePath()
 T CAI_Navigator::BuildAndGetPathDistToGoal()
 T CAI_Navigator::CAI_Navigator(CAI_BaseNPC*)
 T CAI_Navigator::CalcYawSpeed()
 T CAI_Navigator::CanFitAtNode(int, unsigned int)
 T CAI_Navigator::CanFitAtPosition(Vector const&, unsigned int, bool, bool)
 T CAI_Navigator::ClearGoal()
 T CAI_Navigator::ClearPath()
 T CAI_Navigator::CurWaypointIsGoal() const
 T CAI_Navigator::DelayNavigationFailure(AIMoveTrace_t const&)
 T CAI_Navigator::DoFindPath()
 T CAI_Navigator::DoFindPathToPathcorner(CBaseEntity*)
 T CAI_Navigator::DoFindPathToPos()
 T CAI_Navigator::DrawDebugRouteOverlay()
 T CAI_Navigator::FindPath(AI_NavGoal_t const&, unsigned int)
 T CAI_Navigator::FindPath(bool, bool)
 T CAI_Navigator::FindVectorGoal(Vector*, Vector const&, float, float, bool)
 T CAI_Navigator::GetArrivalActivity() const
 T CAI_Navigator::GetArrivalDirection()
 T CAI_Navigator::GetArrivalDistance() const
 T CAI_Navigator::GetArrivalSequence(int)
 T CAI_Navigator::GetArrivalSpeed()
 T CAI_Navigator::GetCurWaypointPos() const
 T CAI_Navigator::GetGoalFlags() const
 T CAI_Navigator::GetGoalPos() const
 T CAI_Navigator::GetGoalTarget()
 T CAI_Navigator::GetGoalType() const
 T CAI_Navigator::GetMovementActivity() const
 T CAI_Navigator::GetMovementSequence()
 T CAI_Navigator::GetNavFailCounter() const
 T CAI_Navigator::GetPathTimeToGoal()
 T CAI_Navigator::GetPointAlongPath(Vector*, float, bool)
 T CAI_Navigator::GetStepDownMultiplier()
 T CAI_Navigator::GetStoppingPath(CAI_WaypointList*)
 T CAI_Navigator::IgnoreStoppingPath()
 T CAI_Navigator::Init(CAI_Network*)
 T CAI_Navigator::IsGoalActive() const
 T CAI_Navigator::IsGoalSet() const
 T CAI_Navigator::MarkCurWaypointFailedLink()
 T CAI_Navigator::Move(float)
 T CAI_Navigator::MoveCalcBaseGoal(AILocalMoveGoal_t*)
 T CAI_Navigator::MoveClimb()
 T CAI_Navigator::MoveCrawl()
 T CAI_Navigator::MoveEnact(AILocalMoveGoal_t const&)
 T CAI_Navigator::MoveJump()
 T CAI_Navigator::MoveNormal()
 T CAI_Navigator::MoveUpdateWaypoint(AIMoveResult_t*)
 T CAI_Navigator::MovementCost(int, Vector&, Vector&)
 T CAI_Navigator::OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_Navigator::OnClearPath()
 T CAI_Navigator::OnFailedLocalNavigation(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_Navigator::OnFailedSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_Navigator::OnInsufficientStopDist(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_Navigator::OnMoveBlocked(AIMoveResult_t*)
 T CAI_Navigator::OnMoveExecuteFailed(AILocalMoveGoal_t const&, AIMoveTrace_t const&, AIMotorMoveResult_t, AIMoveResult_t*)
 T CAI_Navigator::OnMoveStalled(AILocalMoveGoal_t const&)
 T CAI_Navigator::OnNavComplete()
 T CAI_Navigator::OnNavFailed(bool)
 T CAI_Navigator::OnNavFailed(int, bool)
 T CAI_Navigator::OnNewGoal()
 T CAI_Navigator::OnObstructionPreSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_Navigator::OnScheduleChange()
 T CAI_Navigator::PreMove()
 T CAI_Navigator::PrependLocalAvoidance(float, AIMoveTrace_t const&)
 T CAI_Navigator::RefindPathToGoal(bool, bool)
 T CAI_Navigator::Restore(IRestore&)
 T CAI_Navigator::Save(ISave&)
 T CAI_Navigator::SetArrivalActivity(Activity)
 T CAI_Navigator::SetArrivalDirection(CBaseEntity*)
 T CAI_Navigator::SetArrivalDirection(QAngle const&)
 T CAI_Navigator::SetArrivalDirection(Vector const&)
 T CAI_Navigator::SetArrivalDistance(float)
 T CAI_Navigator::SetArrivalSequence(int)
 T CAI_Navigator::SetGoal(AI_NavGoal_t const&, unsigned int)
 T CAI_Navigator::SetGoalFromStoppingPath()
 T CAI_Navigator::SetGoalTarget(CBaseEntity*, Vector const&)
 T CAI_Navigator::SetGoalTolerance(float)
 T CAI_Navigator::SetMovementActivity(Activity)
 T CAI_Navigator::SetNavType(Navigation_t)
 T CAI_Navigator::SetRandomGoal(Vector const&, float, Vector const&)
 T CAI_Navigator::SetRandomGoal(float, Vector const&)
 T CAI_Navigator::SetVectorGoal(Vector const&, float, float, bool)
 T CAI_Navigator::SetVectorGoalFromTarget(Vector const&, float, bool)
 T CAI_Navigator::SetWanderGoal(float, float)
 T CAI_Navigator::ShouldAttemptSimplifyTo(Vector const&)
 T CAI_Navigator::ShouldMove(bool)
 T CAI_Navigator::ShouldOptimizeInitialPathSegment(AI_Waypoint_t*)
 T CAI_Navigator::SimplifyPath(bool, float)
 T CAI_Navigator::SimplifyPathBacktrack()
 T CAI_Navigator::SimplifyPathForward(float)
 T CAI_Navigator::SimplifyPathForwardScan(CAI_Navigator::SimplifyForwardScanParams const&)
 T CAI_Navigator::SimplifyPathForwardScan(CAI_Navigator::SimplifyForwardScanParams const&, AI_Waypoint_t*, Vector const&, float, bool, bool, int*)
 T CAI_Navigator::SimplifyPathInsertSimplification(AI_Waypoint_t*, Vector const&)
 T CAI_Navigator::StopMoving(bool)
 T CAI_Navigator::TeleportAlongPath()
 T CAI_Navigator::UpdateGoalPos(Vector const&)
 T CAI_Navigator::~CAI_Navigator()
 T CAI_Network::AddNode(Vector const&, float)
 T CAI_Network::CAI_Network()
 T CAI_Network::CreateLink(int, int, CAI_DynamicLink*)
 T CAI_Network::EnumElement(IHandleEntity*)
 T CAI_Network::FindBSSmallest(CVarBitVec*, float*, int)
 T CAI_Network::GetCachedNearestNode(Vector const&, CAI_BaseNPC*, int*)
 T CAI_Network::GetNodePosition(CBaseCombatCharacter*, int)
 T CAI_Network::GetNodePosition(Hull_t, int)
 T CAI_Network::GetNodeYaw(int)
 T CAI_Network::IsConnected(int, int)
 T CAI_Network::ListNodesInBox(CNodeList&, int, Vector const&, Vector const&, INodeListFilter*)
 T CAI_Network::NearestNodeToPoint(CAI_BaseNPC*, Vector const&, bool, INearestNodeFilter*)
 T CAI_Network::NearestNodeToPoint(Vector const&, bool)
 T CAI_Network::~CAI_Network()
 T CAI_NetworkBuilder::Build(CAI_Network*)
 T CAI_NetworkBuilder::ComputeConnection(CAI_Node*, CAI_Node*, Hull_t)
 T CAI_NetworkBuilder::EndBuild()
 T CAI_NetworkBuilder::FloodFillZone(CAI_Node**, CAI_Node*, int)
 T CAI_NetworkBuilder::ForceDynamicLinkNeighbors()
 T CAI_NetworkBuilder::InitClimbNodePosition(CAI_Network*, CAI_Node*)
 T CAI_NetworkBuilder::InitGroundNodePosition(CAI_Network*, CAI_Node*)
 T CAI_NetworkBuilder::InitLinks(CAI_Network*, CAI_Node*)
 T CAI_NetworkBuilder::InitNeighbors(CAI_Network*, CAI_Node*)
 T CAI_NetworkBuilder::InitNodePosition(CAI_Network*, CAI_Node*)
 T CAI_NetworkBuilder::InitVisibility(CAI_Network*, CAI_Node*)
 T CAI_NetworkBuilder::InitZones(CAI_Network*)
 T CAI_NetworkBuilder::Rebuild(CAI_Network*)
 T CAI_NetworkBuilder::~CAI_NetworkBuilder()
 T CAI_NetworkEditTools::DrawAINetworkOverlay()
 T CAI_NetworkEditTools::DrawEditInfoOverlay()
 T CAI_NetworkEditTools::DrawHull(Hull_t)
 T CAI_NetworkEditTools::DrawNextHull(char const*)
 T CAI_NetworkEditTools::FindAILinkNearestFacing(Vector const&, Vector const&, float)
 T CAI_NetworkEditTools::FindAINodeNearestFacing(Vector const&, Vector const&, float, int)
 T CAI_NetworkEditTools::GetNodeIdFromWCId(int)
 T CAI_NetworkEditTools::GetWCIdFromNodeId(int)
 T CAI_NetworkEditTools::RecalcUsableNodesForHull()
 T CAI_NetworkEditTools::SetDebugBits(char const*, int)
 T CAI_NetworkEditTools::SetRebuildFlags()
 T CAI_NetworkManager::BuildNetworkGraph()
 T CAI_NetworkManager::CAI_NetworkManager()
 T CAI_NetworkManager::DelayedInit()
 T CAI_NetworkManager::DeleteAllAINetworks()
 T CAI_NetworkManager::GetDataDescMap()
 T CAI_NetworkManager::InitializeAINetworks()
 T CAI_NetworkManager::IsAIFileCurrent(char const*)
 T CAI_NetworkManager::ObjectCaps()
 T CAI_NetworkManager::RebuildNetworkGraph()
 T CAI_NetworkManager::RebuildThink()
 T CAI_NetworkManager::Spawn()
 T CAI_NetworkManager::StartRebuild()
 T CAI_NetworkManager::ThreadedBuildJob(void*)
 T CAI_NetworkManager::ThreadedInit()
 T CAI_NetworkManager::~CAI_NetworkManager()
 T CAI_Node::AddLink(CAI_Link*)
 T CAI_Node::CAI_Node(int, Vector const&, float)
 T CAI_Node::GetLink(int)
 T CAI_Node::GetPosition(int) const
 T CAI_Node::GetShuffeledLink(int)
 T CAI_Node::HasLink(int)
 T CAI_Node::ShuffleLinks()
 T CAI_Path::ActualGoalPosition() const
 T CAI_Path::Advance()
 T CAI_Path::BaseGoalPosition() const
 T CAI_Path::CAI_Path()
 T CAI_Path::Clear()
 T CAI_Path::CurWaypointIsGoal() const
 T CAI_Path::CurWaypointNavType() const
 T CAI_Path::CurWaypointPos() const
 T CAI_Path::CurWaypointYaw() const
 T CAI_Path::GetArrivalActivity() const
 T CAI_Path::GetArrivalSequence() const
 T CAI_Path::GetGoalDirection(Vector const&)
 T CAI_Path::GetGoalSpeed(Vector const&)
 T CAI_Path::GetGoalStoppingDistance() const
 T CAI_Path::GetPathDistanceToGoal(Vector const&)
 T CAI_Path::GetPathLength()
 T CAI_Path::GoalFlags() const
 T CAI_Path::GoalType() const
 T CAI_Path::PrependWaypoint(Vector const&, Navigation_t, unsigned int)
 T CAI_Path::PrependWaypoints(AI_Waypoint_t*)
 T CAI_Path::ResetGoalPosition(Vector const&)
 T CAI_Path::SetArrivalActivity(Activity)
 T CAI_Path::SetArrivalSequence(int)
 T CAI_Path::SetGoalDirection(CBaseEntity*)
 T CAI_Path::SetGoalDirection(Vector const&)
 T CAI_Path::SetGoalSpeed(CBaseEntity*)
 T CAI_Path::SetGoalSpeed(float)
 T CAI_Path::SetGoalStoppingDistance(float)
 T CAI_Path::SetGoalType(GoalType_t)
 T CAI_Path::SetLastNodeAsGoal(bool)
 T CAI_Path::SetMovementActivity(Activity)
 T CAI_Path::SetWaypoints(AI_Waypoint_t*, bool)
 T CAI_Path::~CAI_Path()
 T CAI_Pathfinder::BuildComplexRoute(Navigation_t, Vector const&, Vector const&, CBaseEntity const*, int, int, int, float, float, float)
 T CAI_Pathfinder::BuildLocalRoute(Vector const&, Vector const&, CBaseEntity const*, int, int, int, float)
 T CAI_Pathfinder::BuildNodeRoute(Vector const&, Vector const&, int, float)
 T CAI_Pathfinder::BuildOBBAvoidanceRoute(Vector const&, Vector const&, CBaseEntity const*, CBaseEntity const*, Navigation_t)
 T CAI_Pathfinder::BuildRadialRoute(Vector const&, Vector const&, Vector const&, float, float, float, bool, float, bool)
 T CAI_Pathfinder::BuildRoute(Vector const&, Vector const&, CBaseEntity*, float, Navigation_t, int)
 T CAI_Pathfinder::BuildRouteThroughPoints(Vector*, int, int, int, int, Navigation_t, CBaseEntity*)
 T CAI_Pathfinder::BuildSimpleRoute(Navigation_t, Vector const&, Vector const&, CBaseEntity const*, int, int, int, float)
 T CAI_Pathfinder::BuildTriangulationRoute(Vector const&, Vector const&, CBaseEntity const*, int, int, float, float, Navigation_t)
 T CAI_Pathfinder::CTriDebugOverlay::AddTriOverlayLine(Vector const&, Vector const&, int, int, int, bool)
 T CAI_Pathfinder::CTriDebugOverlay::AddTriOverlayLines(Vector const&, Vector const&, Vector const&, AIMoveTrace_t const&, AIMoveTrace_t const&, bool)
 T CAI_Pathfinder::CanUseLocalNavigation()
 T CAI_Pathfinder::CheckStaleNavTypeRoute(Navigation_t, Vector const&, Vector const&)
 T CAI_Pathfinder::CheckStaleRoute(Vector const&, Vector const&, int)
 T CAI_Pathfinder::ComputeWaypointType(bool*, CAI_Node**, int, int)
 T CAI_Pathfinder::CreateNodeWaypoint(Hull_t, int, int)
 T CAI_Pathfinder::DrawDebugGeometryOverlays(int)
 T CAI_Pathfinder::FindBestPath(int, int)
 T CAI_Pathfinder::FindShortRandomPath(int, float, Vector const&)
 T CAI_Pathfinder::Init(CAI_Network*)
 T CAI_Pathfinder::IsLinkStillStale(int, CAI_Link*)
 T CAI_Pathfinder::IsLinkUsable(CAI_Link*, int)
 T CAI_Pathfinder::MakeRouteFromParents(int*, int)
 T CAI_Pathfinder::NearestNodeToNPC()
 T CAI_Pathfinder::NearestNodeToPoint(Vector const&)
 T CAI_Pathfinder::RouteFromNode(Vector const&, int, int, float)
 T CAI_Pathfinder::RouteToNode(Vector const&, int, int, float)
 T CAI_Pathfinder::TestTriangulationRoute(Navigation_t, Vector const&, Vector const&, Vector const&, CBaseEntity const*, AIMoveTrace_t*)
 T CAI_Pathfinder::Triangulate(Navigation_t, Vector const&, Vector const&, float, CBaseEntity const*, Vector*)
 T CAI_Pathfinder::UnlockRouteNodes(AI_Waypoint_t*)
 T CAI_Pathfinder::~CAI_Pathfinder()
 T CAI_PlaneSolver::AddObstacle(Vector const&, float, CBaseEntity*, AI_MoveSuggType_t)
 T CAI_PlaneSolver::AdjustSolutionForFliers(AILocalMoveGoal_t const&, float, Vector*)
 T CAI_PlaneSolver::CAI_PlaneSolver(CAI_BaseNPC*)
 T CAI_PlaneSolver::CalcProbeDist(float)
 T CAI_PlaneSolver::DetectUnsolvable(AILocalMoveGoal_t const&)
 T CAI_PlaneSolver::GenerateCircleObstacleSuggestion(CAI_PlaneSolver::CircleObstacles_t const&, AILocalMoveGoal_t const&, float, Vector const&, float)
 T CAI_PlaneSolver::GenerateCircleObstacleSuggestions(AILocalMoveGoal_t const&, float)
 T CAI_PlaneSolver::GenerateObstacleNpcs(AILocalMoveGoal_t const&, float)
 T CAI_PlaneSolver::GenerateObstacleSuggestion(AILocalMoveGoal_t const&, float, float, float, int)
 T CAI_PlaneSolver::GenerateObstacleSuggestions(AILocalMoveGoal_t const&, AIMoveTrace_t const&, float, float, float, int)
 T CAI_PlaneSolver::GenerateSuggestionFromTrace(AILocalMoveGoal_t const&, AIMoveTrace_t const&, float, float, float, int)
 T CAI_PlaneSolver::IsSegmentBlockedByGlobalObstacles(Vector const&, Vector const&)
 T CAI_PlaneSolver::RemoveGlobalObstacle(Obstacle_t__*)
 T CAI_PlaneSolver::RunMoveSolver(AILocalMoveGoal_t const&, AIMoveTrace_t const&, float, bool, Vector*)
 T CAI_PlaneSolver::Solve(AILocalMoveGoal_t const&, float, Vector*)
 T CAI_PlaneSolver::VisualizeSolution(Vector const&, Vector const&)
 T CAI_PlayerAlly::AnswerQuestion(CAI_PlayerAlly*, int, bool)
 T CAI_PlayerAlly::CAI_PlayerAlly()
 T CAI_PlayerAlly::CScheduleLoader::CScheduleLoader()
 T CAI_PlayerAlly::CanPlaySentence(bool)
 T CAI_PlayerAlly::CanRespondToEvent(char const*)
 T CAI_PlayerAlly::CreateVPhysics()
 T CAI_PlayerAlly::DisplayDeathMessage()
 T CAI_PlayerAlly::Event_Killed(CTakeDamageInfo const&)
 T CAI_PlayerAlly::EyeLookTarget()
 T CAI_PlayerAlly::FindNamedEntity(char const*, IEntityFindFilter*)
 T CAI_PlayerAlly::FindSpeechTarget(int)
 T CAI_PlayerAlly::GatherConditions()
 T CAI_PlayerAlly::GatherEnemyConditions(CBaseEntity*)
 T CAI_PlayerAlly::GetClassScheduleIdSpace()
 T CAI_PlayerAlly::GetDataDescMap()
 T CAI_PlayerAlly::GetDeathMessageText()
 T CAI_PlayerAlly::GetSchedulingErrorName()
 T CAI_PlayerAlly::InitCustomSchedules()
 T CAI_PlayerAlly::InputAnswerQuestion(inputdata_t&)
 T CAI_PlayerAlly::InputAnswerQuestionHello(inputdata_t&)
 T CAI_PlayerAlly::InputDisableSpeakWhileScripting(inputdata_t&)
 T CAI_PlayerAlly::InputEnableSpeakWhileScripting(inputdata_t&)
 T CAI_PlayerAlly::InputIdleRespond(inputdata_t&)
 T CAI_PlayerAlly::InputMakeGameEndAlly(inputdata_t&)
 T CAI_PlayerAlly::InputMakeRegularAlly(inputdata_t&)
 T CAI_PlayerAlly::InputSpeakResponseConcept(inputdata_t&)
 T CAI_PlayerAlly::IsAllowedToSpeak(CAI_Concept, bool)
 T CAI_PlayerAlly::IsOkToSpeak(ConceptCategory_t, bool)
 T CAI_PlayerAlly::IsOkToSpeakInResponseToPlayer()
 T CAI_PlayerAlly::IsValidSpeechTarget(int, CBaseEntity*)
 T CAI_PlayerAlly::LoadSchedules()
 T CAI_PlayerAlly::LoadedSchedules()
 T CAI_PlayerAlly::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CAI_PlayerAlly::ObjectCaps()
 T CAI_PlayerAlly::OnKilledNPC(CBaseCombatCharacter*)
 T CAI_PlayerAlly::OnSpokeConcept(CAI_Concept, ResponseRules::CRR_Response*)
 T CAI_PlayerAlly::OnStartSchedule(int)
 T CAI_PlayerAlly::OnStartSpeaking()
 T CAI_PlayerAlly::OnStateChange(NPC_STATE, NPC_STATE)
 T CAI_PlayerAlly::OnTakeDamage_Alive(CTakeDamageInfo const&)
 T CAI_PlayerAlly::PainSound(CTakeDamageInfo const&)
 T CAI_PlayerAlly::PlayScriptedSentence(char const*, float, float, soundlevel_t, bool, CBaseEntity*)
 T CAI_PlayerAlly::PostSpeakDispatchResponse(CAI_Concept, ResponseRules::CRR_Response*)
 T CAI_PlayerAlly::PrescheduleThink()
 T CAI_PlayerAlly::RespondedTo(char const*, bool, bool)
 T CAI_PlayerAlly::RunTask(Task_t const*)
 T CAI_PlayerAlly::SelectAlertSpeech(AISpeechSelection_t*)
 T CAI_PlayerAlly::SelectAnswerFriend(CBaseEntity*, AISpeechSelection_t*, bool)
 T CAI_PlayerAlly::SelectIdleSpeech(AISpeechSelection_t*)
 T CAI_PlayerAlly::SelectInterjection()
 T CAI_PlayerAlly::SelectNonCombatSpeechSchedule()
 T CAI_PlayerAlly::SelectPlayerUseSpeech()
 T CAI_PlayerAlly::SelectQuestionAndAnswerSpeech(AISpeechSelection_t*)
 T CAI_PlayerAlly::SelectQuestionFriend(CBaseEntity*, AISpeechSelection_t*)
 T CAI_PlayerAlly::SelectSchedule()
 T CAI_PlayerAlly::SelectSpeechResponse(CAI_Concept, char const*, CBaseEntity*, AISpeechSelection_t*)
 T CAI_PlayerAlly::ShouldSpeakRandom(CAI_Concept, int)
 T CAI_PlayerAlly::SpeakIfAllowed(CAI_Concept, char const*, bool, char*, unsigned long)
 T CAI_PlayerAlly::SpeakMapmakerInterruptConcept(string_t)
 T CAI_PlayerAlly::SquadSlotName(int)
 T CAI_PlayerAlly::StartTask(Task_t const*)
 T CAI_PlayerAlly::TakeHealth(float, int)
 T CAI_PlayerAlly::TaskFail(int)
 T CAI_PlayerAlly::Touch(CBaseEntity*)
 T CAI_PlayerAlly::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CAI_PlayerAlly::TranslateSchedule(int)
 T CAI_PlayerAlly::~CAI_PlayerAlly()
 T CAI_ProxTester::Check(CBaseEntity*, CBaseEntity*)
 T CAI_ProxyMovementSink::CalcYawSpeed()
 T CAI_ProxyMovementSink::OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_ProxyMovementSink::OnFailedLocalNavigation(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_ProxyMovementSink::OnFailedSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_ProxyMovementSink::OnInsufficientStopDist(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_ProxyMovementSink::OnMoveBlocked(AIMoveResult_t*)
 T CAI_ProxyMovementSink::OnMoveExecuteFailed(AILocalMoveGoal_t const&, AIMoveTrace_t const&, AIMotorMoveResult_t, AIMoveResult_t*)
 T CAI_ProxyMovementSink::OnMoveStalled(AILocalMoveGoal_t const&)
 T CAI_ProxyMovementSink::OnObstructionPreSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T CAI_RadialLinkController::Activate()
 T CAI_RadialLinkController::GetDataDescMap()
 T CAI_RadialLinkController::ModifyNodeLinks(bool)
 T CAI_RadialLinkController::PollMotionThink()
 T CAI_RadialLinkController::Spawn()
 T CAI_RadialLinkController::~CAI_RadialLinkController()
 T CAI_Relationship::Activate()
 T CAI_Relationship::ApplyRelationship(CBaseEntity*, CBaseEntity*)
 T CAI_Relationship::ApplyRelationshipThink()
 T CAI_Relationship::ChangeRelationships(int, int, CBaseEntity*, CBaseEntity*)
 T CAI_Relationship::GetDataDescMap()
 T CAI_Relationship::InputApplyRelationship(inputdata_t&)
 T CAI_Relationship::InputRevertRelationship(inputdata_t&)
 T CAI_Relationship::InputRevertToDefaultRelationship(inputdata_t&)
 T CAI_Relationship::OnEntityDeleted(CBaseEntity*)
 T CAI_Relationship::OnEntitySpawned(CBaseEntity*)
 T CAI_Relationship::OnRestore()
 T CAI_Relationship::Spawn()
 T CAI_Relationship::UpdateOnRemove()
 T CAI_Relationship::~CAI_Relationship()
 T CAI_SaveRestoreBlockHandler::GetBlockName()
 T CAI_SaveRestoreBlockHandler::PostRestore()
 T CAI_SaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CAI_SaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CAI_SaveRestoreBlockHandler::Save(ISave*)
 T CAI_SaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CAI_SchedulesManager::CreateSchedule(char*, int)
 T CAI_SchedulesManager::CreateStringRegistries()
 T CAI_SchedulesManager::DeleteAllSchedules()
 T CAI_SchedulesManager::DestroyStringRegistries()
 T CAI_SchedulesManager::GetMemoryID(char const*)
 T CAI_SchedulesManager::GetScheduleByName(char const*)
 T CAI_SchedulesManager::GetScheduleFromID(int)
 T CAI_SchedulesManager::GetStateID(char const*)
 T CAI_SchedulesManager::LoadAllSchedules()
 T CAI_SchedulesManager::LoadSchedulesFromBuffer(char const*, char*, CAI_ClassScheduleIdSpace*, CAI_GlobalScheduleNamespace*)
 T CAI_ScriptConditions::Activate()
 T CAI_ScriptConditions::AddNewElement(CBaseEntity*)
 T CAI_ScriptConditions::Enable()
 T CAI_ScriptConditions::EvalActorSeePlayer(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalActorSeeTarget(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalActorTargetProximity(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalPlayerActorLOS(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalPlayerActorLook(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalPlayerActorProximity(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalPlayerBlockingActor(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalPlayerTargetLOS(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalPlayerTargetLook(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalPlayerTargetProximity(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvalState(CAI_ScriptConditions::EvalArgs_t const&)
 T CAI_ScriptConditions::EvaluationThink()
 T CAI_ScriptConditions::GetDataDescMap()
 T CAI_ScriptConditions::InputDisable(inputdata_t&)
 T CAI_ScriptConditions::InputEnable(inputdata_t&)
 T CAI_ScriptConditions::IsInFOV(CBaseEntity*, CBaseEntity*, float, bool)
 T CAI_ScriptConditions::OnEntitySpawned(CBaseEntity*)
 T CAI_ScriptConditions::OnRestore()
 T CAI_ScriptConditions::Spawn()
 T CAI_ScriptConditions::UpdateOnRemove()
 T CAI_ScriptConditions::~CAI_ScriptConditions()
 T CAI_ScriptedSchedule::FindScriptEntity(bool)
 T CAI_ScriptedSchedule::GetDataDescMap()
 T CAI_ScriptedSchedule::InputStartSchedule(inputdata_t&)
 T CAI_ScriptedSchedule::InputStopSchedule(inputdata_t&)
 T CAI_ScriptedSchedule::ScriptThink()
 T CAI_ScriptedSchedule::StartSchedule(CAI_BaseNPC*)
 T CAI_ScriptedSchedule::~CAI_ScriptedSchedule()
 T CAI_ScriptedSentence::DelayThink()
 T CAI_ScriptedSentence::FindEntity()
 T CAI_ScriptedSentence::FindThink()
 T CAI_ScriptedSentence::GetDataDescMap()
 T CAI_ScriptedSentence::InputBeginSentence(inputdata_t&)
 T CAI_ScriptedSentence::KeyValue(char const*, char const*)
 T CAI_ScriptedSentence::ObjectCaps()
 T CAI_ScriptedSentence::Spawn()
 T CAI_ScriptedSentence::StartSentence(CAI_BaseNPC*)
 T CAI_ScriptedSentence::~CAI_ScriptedSentence()
 T CAI_ScriptedSequence::Activate()
 T CAI_ScriptedSequence::AllowInterrupt(bool)
 T CAI_ScriptedSequence::Blocked(CBaseEntity*)
 T CAI_ScriptedSequence::CanEnqueueAfter()
 T CAI_ScriptedSequence::CanInterrupt()
 T CAI_ScriptedSequence::CancelScript()
 T CAI_ScriptedSequence::DelayStart(bool)
 T CAI_ScriptedSequence::DrawDebugGeometryOverlays()
 T CAI_ScriptedSequence::DrawDebugTextOverlays()
 T CAI_ScriptedSequence::FindScriptEntity()
 T CAI_ScriptedSequence::FinishedActionSequence(CAI_BaseNPC*)
 T CAI_ScriptedSequence::FireScriptEvent(int)
 T CAI_ScriptedSequence::FixScriptNPCSchedule(CAI_BaseNPC*, int)
 T CAI_ScriptedSequence::GetDataDescMap()
 T CAI_ScriptedSequence::GetSpawnPreIdleSequenceForScript(CBaseEntity*)
 T CAI_ScriptedSequence::InputBeginSequence(inputdata_t&)
 T CAI_ScriptedSequence::InputCancelSequence(inputdata_t&)
 T CAI_ScriptedSequence::InputMoveToPosition(inputdata_t&)
 T CAI_ScriptedSequence::InputScriptPlayerDeath(inputdata_t&)
 T CAI_ScriptedSequence::IsTimeToStart()
 T CAI_ScriptedSequence::IsWaitingForBegin()
 T CAI_ScriptedSequence::ModifyScriptedAutoMovement(Vector*)
 T CAI_ScriptedSequence::ObjectCaps()
 T CAI_ScriptedSequence::OnBeginSequence()
 T CAI_ScriptedSequence::PostIdleDone(CAI_BaseNPC*)
 T CAI_ScriptedSequence::RemoveIgnoredConditions()
 T CAI_ScriptedSequence::ScriptEntityCancel(CBaseEntity*, bool)
 T CAI_ScriptedSequence::ScriptThink()
 T CAI_ScriptedSequence::SequenceDone(CAI_BaseNPC*)
 T CAI_ScriptedSequence::Spawn()
 T CAI_ScriptedSequence::StartScript()
 T CAI_ScriptedSequence::StartSequence(CAI_BaseNPC*, string_t, bool)
 T CAI_ScriptedSequence::StopActionLoop(bool)
 T CAI_ScriptedSequence::SynchNewSequence(CAI_BaseNPC::SCRIPTSTATE, string_t, bool)
 T CAI_ScriptedSequence::SynchronizeSequence(CAI_BaseNPC*)
 T CAI_ScriptedSequence::Touch(CBaseEntity*)
 T CAI_ScriptedSequence::UpdateOnRemove()
 T CAI_ScriptedSequence::~CAI_ScriptedSequence()
 T CAI_SensedObjectsManager::AddEntity(CBaseEntity*)
 T CAI_SensedObjectsManager::Init()
 T CAI_SensedObjectsManager::OnEntityDeleted(CBaseEntity*)
 T CAI_SensedObjectsManager::OnEntitySpawned(CBaseEntity*)
 T CAI_SensedObjectsManager::Term()
 T CAI_SensedObjectsManager::~CAI_SensedObjectsManager()
 T CAI_Senses::CanHearSound(CSound*)
 T CAI_Senses::CanSeeEntity(CBaseEntity*)
 T CAI_Senses::DidSeeEntity(CBaseEntity*) const
 T CAI_Senses::GetClosestSound(bool, int, bool)
 T CAI_Senses::GetFirstHeardSound(AISoundIter_t__**)
 T CAI_Senses::GetFirstSeenEntity(AISightIter_t__**, seentype_t) const
 T CAI_Senses::GetNextHeardSound(AISoundIter_t__**)
 T CAI_Senses::GetNextSeenEntity(AISightIter_t__**) const
 T CAI_Senses::GetTimeLastUpdate(CBaseEntity*)
 T CAI_Senses::IsWithinSenseDistance(Vector const&, Vector const&, float)
 T CAI_Senses::Listen()
 T CAI_Senses::Look(CBaseEntity*)
 T CAI_Senses::Look(int)
 T CAI_Senses::LookForHighPriorityEntities(int)
 T CAI_Senses::LookForNPCs(int)
 T CAI_Senses::LookForObjects(int)
 T CAI_Senses::LookThroughPortal(CPortal_Base2D const*, CBaseEntity*)
 T CAI_Senses::PerformSensing()
 T CAI_Senses::ShouldSeeEntity(CBaseEntity*)
 T CAI_Senses::WaitingUntilSeen(CBaseEntity*)
 T CAI_Senses::~CAI_Senses()
 T CAI_ShotRegulator::CAI_ShotRegulator()
 T CAI_ShotRegulator::FireNoEarlierThan(float)
 T CAI_ShotRegulator::IsInRestInterval() const
 T CAI_ShotRegulator::NextShotTime() const
 T CAI_ShotRegulator::OnFiredWeapon()
 T CAI_ShotRegulator::Reset(bool)
 T CAI_ShotRegulator::SetBurstInterval(float, float)
 T CAI_ShotRegulator::SetBurstShotCountRange(int, int)
 T CAI_ShotRegulator::SetRestInterval(float, float)
 T CAI_ShotRegulator::ShouldShoot() const
 T CAI_SpeechFilter::Activate()
 T CAI_SpeechFilter::GetDataDescMap()
 T CAI_SpeechFilter::InputDisable(inputdata_t&)
 T CAI_SpeechFilter::InputEnable(inputdata_t&)
 T CAI_SpeechFilter::InputSetIdleModifier(inputdata_t&)
 T CAI_SpeechFilter::OnEntityCreated(CBaseEntity*)
 T CAI_SpeechFilter::OnEntityDeleted(CBaseEntity*)
 T CAI_SpeechFilter::PopulateSubjectList(bool)
 T CAI_SpeechFilter::Spawn()
 T CAI_SpeechFilter::UpdateOnRemove()
 T CAI_SpeechFilter::~CAI_SpeechFilter()
 T CAI_Squad::AddToSquad(CAI_BaseNPC*)
 T CAI_Squad::CAI_Squad()
 T CAI_Squad::ComputeSquadCentroid(bool, CBaseCombatCharacter*)
 T CAI_Squad::FOkToMakeSound(int)
 T CAI_Squad::FindEnemyInfo(CBaseEntity*)
 T CAI_Squad::GetFirstMember(AISquadIter_t__**, bool)
 T CAI_Squad::GetLeader()
 T CAI_Squad::GetNextMember(AISquadIter_t__**, bool)
 T CAI_Squad::IsLeader(CAI_BaseNPC*)
 T CAI_Squad::IsSilentMember(CAI_BaseNPC const*)
 T CAI_Squad::JustMadeSound(int, float)
 T CAI_Squad::NumMembers(bool)
 T CAI_Squad::OccupyStrategySlotRange(CBaseEntity*, int, int, int*)
 T CAI_Squad::RemoveFromSquad(CAI_BaseNPC*, bool)
 T CAI_Squad::SquadIsMember(CBaseEntity*)
 T CAI_Squad::SquadNewEnemy(CBaseEntity*)
 T CAI_Squad::UpdateEnemyMemory(CAI_BaseNPC*, CBaseEntity*, Vector const&)
 T CAI_Squad::VacateStrategySlot(CBaseEntity*, int)
 T CAI_Squad::~CAI_Squad()
 T CAI_SquadManager::CreateSquad(string_t)
 T CAI_SquadManager::DeleteAllSquads()
 T CAI_SquadManager::FindSquad(string_t)
 T CAI_SquadManager::NumSquads()
 T CAI_StandoffGoal::DisableGoal(CAI_BaseNPC*)
 T CAI_StandoffGoal::EnableGoal(CAI_BaseNPC*)
 T CAI_StandoffGoal::GetDataDescMap()
 T CAI_StandoffGoal::InputActivate(inputdata_t&)
 T CAI_StandoffGoal::InputDeactivate(inputdata_t&)
 T CAI_StandoffGoal::InputSetAggressiveness(inputdata_t&)
 T CAI_StandoffGoal::SetBehaviorParams(CAI_StandoffBehavior*)
 T CAI_StandoffGoal::~CAI_StandoffGoal()
 T CAI_SystemHook::LevelInitPostEntity()
 T CAI_SystemHook::LevelInitPreEntity()
 T CAI_SystemHook::LevelShutdownPostEntity()
 T CAI_SystemHook::LevelShutdownPreEntity()
 T CAI_SystemHook::~CAI_SystemHook()
 T CAI_TacticalServices::FindBackAwayNode(Vector const&)
 T CAI_TacticalServices::FindBackAwayPos(Vector const&, Vector*)
 T CAI_TacticalServices::FindCoverNode(Vector const&, Vector const&, Vector const&, float, float)
 T CAI_TacticalServices::FindCoverPos(Vector const&, Vector const&, Vector const&, float, float, Vector*)
 T CAI_TacticalServices::FindCoverPos(Vector const&, Vector const&, float, float, Vector*)
 T CAI_TacticalServices::FindLateralCover(Vector const&, Vector const&, float, float, int, Vector*)
 T CAI_TacticalServices::FindLateralCover(Vector const&, float, Vector*)
 T CAI_TacticalServices::FindLateralLos(Vector const&, Vector*)
 T CAI_TacticalServices::FindLos(Vector const&, Vector const&, float, float, float, FlankType_t, Vector const&, float, Vector*)
 T CAI_TacticalServices::FindLos(Vector const&, Vector const&, float, float, float, Vector*)
 T CAI_TacticalServices::FindLosNode(Vector const&, Vector const&, float, float, float, FlankType_t, Vector const&, float)
 T CAI_TacticalServices::Init(CAI_Network*)
 T CAI_TacticalServices::TestLateralCover(Vector const&, Vector const&, float)
 T CAI_TacticalServices::TestLateralLos(Vector const&, Vector const&)
 T CAI_TacticalServices::~CAI_TacticalServices()
 T CAI_TestHull::GetTestHull()
 T CAI_TestHull::IsJumpLegal(Vector const&, Vector const&, Vector const&) const
 T CAI_TestHull::ObjectCaps()
 T CAI_TestHull::Precache()
 T CAI_TestHull::ReturnTestHull()
 T CAI_TestHull::Spawn()
 T CAI_TestHull::~CAI_TestHull()
 T CAI_TrackPather::BestPointOnPath(CPathTrack*, Vector const&, float, bool, bool)
 T CAI_TrackPather::InputChooseFarthestPathPoint(inputdata_t&)
 T CAI_TrackPather::InputChooseNearestPathPoint(inputdata_t&)
 T CAI_TrackPather::InputSetTrack(inputdata_t&)
 T CAI_TrackPather::InputStartBreakableMovement(inputdata_t&)
 T CAI_TrackPather::InputStartLeading(inputdata_t&)
 T CAI_TrackPather::InputStartPatrol(inputdata_t&)
 T CAI_TrackPather::InputStartPatrolBreakable(inputdata_t&)
 T CAI_TrackPather::InputStopBreakableMovement(inputdata_t&)
 T CAI_TrackPather::InputStopLeading(inputdata_t&)
 T CAI_TrackPather::InputStopPatrol(inputdata_t&)
 T CAI_TrackPather::IsOnSameTrack(CPathTrack*, CPathTrack*) const
 T CAI_TrackPather::MoveToClosestTrackPoint(CPathTrack*)
 T CAI_TrackPather::SetTrack(string_t)
 T CAI_TrackPather::SetupNewCurrentTarget(CPathTrack*)
 T CAI_WaypointList::GetLast()
 T CAI_WaypointList::PrependWaypoint(Vector const&, Navigation_t, unsigned int, float)
 T CAI_WaypointList::PrependWaypoints(AI_Waypoint_t*)
 T CAI_WaypointList::RemoveAll()
 T CAI_WaypointList::Set(AI_Waypoint_t*)
 T CActBusyAnimData::FindBusyAnim(Activity, char const*)
 T CActBusyAnimData::LevelInitPostEntity()
 T CActBusyAnimData::LevelShutdownPostEntity()
 T CActBusyAnimData::ParseActBusyFromKV(busyanim_t*, KeyValues*)
 T CActBusyAnimData::ParseAnimDataFile()
 T CActBusyAnimData::~CActBusyAnimData()
 T CActivityDataOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CActivityDataOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CActivityDataOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CActivityDataOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CAimTargetManager::ForceRepopulateList()
 T CAimTargetManager::LevelShutdownPostEntity()
 T CAimTargetManager::OnEntityCreated(CBaseEntity*)
 T CAimTargetManager::OnEntityDeleted(CBaseEntity*)
 T CAimTargetManager::OnEntitySpawned(CBaseEntity*)
 T CAimTargetManager::~CAimTargetManager()
 T CAmbientGeneric::Activate()
 T CAmbientGeneric::ComputeMaxAudibleDistance()
 T CAmbientGeneric::GetDataDescMap()
 T CAmbientGeneric::InitModulationParms()
 T CAmbientGeneric::InputFadeIn(inputdata_t&)
 T CAmbientGeneric::InputFadeOut(inputdata_t&)
 T CAmbientGeneric::InputPitch(inputdata_t&)
 T CAmbientGeneric::InputPlaySound(inputdata_t&)
 T CAmbientGeneric::InputStopSound(inputdata_t&)
 T CAmbientGeneric::InputToggleSound(inputdata_t&)
 T CAmbientGeneric::InputVolume(inputdata_t&)
 T CAmbientGeneric::KeyValue(char const*, char const*)
 T CAmbientGeneric::Precache()
 T CAmbientGeneric::RampThink()
 T CAmbientGeneric::SendSound(SoundFlags_t)
 T CAmbientGeneric::SetTransmit(CCheckTransmitInfo*, bool)
 T CAmbientGeneric::Spawn()
 T CAmbientGeneric::ToggleSound()
 T CAmbientGeneric::UpdateOnRemove()
 T CAmbientGeneric::~CAmbientGeneric()
 T CAmmoDef::AddAmmoType(char const*, int, int, char const*, char const*, char const*, float, int, int, int)
 T CAmmoDef::AddAmmoType(char const*, int, int, int, int, int, float, int, int, int)
 T CAmmoDef::CAmmoDef()
 T CAmmoDef::CanCarryInfiniteAmmo(int)
 T CAmmoDef::DamageForce(int)
 T CAmmoDef::DamageType(int)
 T CAmmoDef::Flags(int)
 T CAmmoDef::GetAmmoOfIndex(int)
 T CAmmoDef::Index(char const*)
 T CAmmoDef::MaxCarry(int, CBaseCombatCharacter const*)
 T CAmmoDef::MaxSplashSize(int)
 T CAmmoDef::MinSplashSize(int)
 T CAmmoDef::NPCDamage(int)
 T CAmmoDef::PlrDamage(int)
 T CAmmoDef::TracerType(int)
 T CAmmoDef::~CAmmoDef()
 T CAnchorList::AddToList(CBaseEntity*, float)
 T CAnchorList::LevelShutdownPostEntity()
 T CAnchorList::~CAnchorList()
 T CAnimationLayer::CAnimationLayer()
 T CAnimationLayer::DispatchAnimEvents(CBaseAnimating*, CBaseAnimating*)
 T CAnimationLayer::Init(CBaseAnimatingOverlay*)
 T CAnimationLayer::StudioFrameAdvance(float, CBaseAnimating*)
 T CAreaPortal::GetDataDescMap()
 T CAreaPortal::InputClose(inputdata_t&)
 T CAreaPortal::InputOpen(inputdata_t&)
 T CAreaPortal::InputToggle(inputdata_t&)
 T CAreaPortal::KeyValue(char const*, char const*)
 T CAreaPortal::Precache()
 T CAreaPortal::Spawn()
 T CAreaPortal::UpdateTransmitState()
 T CAreaPortal::UpdateVisibility(CUtlVector<Vector, CUtlMemory<Vector, int> > const&, float, bool&)
 T CAreaPortal::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CAreaPortal::~CAreaPortal()
 T CAssaultPoint::GetDataDescMap()
 T CAssaultPoint::InputSetAllowDiversion(inputdata_t&)
 T CAssaultPoint::InputSetClearOnContact(inputdata_t&)
 T CAssaultPoint::InputSetForceClear(inputdata_t&)
 T CAssaultPoint::~CAssaultPoint()
 T CAttributeContainer::ApplyAttributeFloat(float, CBaseEntity*, char const*, string_t, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >*)
 T CAttributeContainer::GetDataDescMap()
 T CAttributeContainer::InitializeAttributes(CBaseEntity*)
 T CAttributeContainer::NetworkStateChanged()
 T CAttributeContainer::NetworkStateChanged(void*)
 T CAttributeContainer::NetworkVar_m_Item::NetworkStateChanged()
 T CAttributeContainer::NetworkVar_m_Item::NetworkStateChanged(void*)
 T CAttributeContainer::NetworkVar_m_Item::~NetworkVar_m_Item()
 T CAttributeContainer::~CAttributeContainer()
 T CAttributeList::AddAttribute(CEconItemAttribute*)
 T CAttributeList::GetDataDescMap()
 T CAttributeList::NetworkStateChanged()
 T CAttributeList::NetworkStateChanged(void*)
 T CAttributeList::SetManager(CAttributeManager*)
 T CAttributeManager::AddProvider(CBaseEntity*)
 T CAttributeManager::ApplyAttributeFloat(float, CBaseEntity*, char const*, string_t, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >*)
 T CAttributeManager::ApplyAttributeFloatWrapper(float, CBaseEntity*, string_t, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >*)
 T CAttributeManager::ClearCache()
 T CAttributeManager::GetDataDescMap()
 T CAttributeManager::InitializeAttributes(CBaseEntity*)
 T CAttributeManager::NetworkStateChanged()
 T CAttributeManager::NetworkStateChanged(void*)
 T CAttributeManager::NetworkStateChanged_m_ProviderType()
 T CAttributeManager::NetworkStateChanged_m_ProviderType(void*)
 T CAttributeManager::NetworkStateChanged_m_hOuter()
 T CAttributeManager::NetworkStateChanged_m_hOuter(void*)
 T CAttributeManager::NetworkStateChanged_m_iReapplyProvisionParity()
 T CAttributeManager::NetworkStateChanged_m_iReapplyProvisionParity(void*)
 T CAttributeManager::ProvideTo(CBaseEntity*)
 T CAttributeManager::StopProvidingTo(CBaseEntity*)
 T CAttributeManager::~CAttributeManager()
 T CAutoGameSystem::CAutoGameSystem(char const*)
 T CAutoGameSystem::Name()
 T CAutoGameSystem::~CAutoGameSystem()
 T CAutoGameSystemPerFrame::CAutoGameSystemPerFrame(char const*)
 T CAutoGameSystemPerFrame::Name()
 T CAutoGameSystemPerFrame::~CAutoGameSystemPerFrame()
 T CBaseAnimating::Activate()
 T CBaseAnimating::BecomeRagdollOnClient(Vector const&)
 T CBaseAnimating::BuildMatricesWithBoneMerge(CStudioHdr const*, QAngle const&, Vector const&, Vector const*, Quaternion const*, matrix3x4_t*, CBaseAnimating*, CBoneCache*)
 T CBaseAnimating::CBaseAnimating()
 T CBaseAnimating::CalculateIKLocks(float)
 T CBaseAnimating::CanBecomeRagdoll()
 T CBaseAnimating::CanSkipAnimation()
 T CBaseAnimating::ClampRagdollForce(Vector const&, Vector*)
 T CBaseAnimating::ComputeHitboxSurroundingBox(Vector*, Vector*)
 T CBaseAnimating::CopyAnimationDataFrom(CBaseAnimating*)
 T CBaseAnimating::DispatchAnimEvents(CBaseAnimating*)
 T CBaseAnimating::Dissolve(char const*, float, bool, int, Vector, int)
 T CBaseAnimating::DoMuzzleFlash()
 T CBaseAnimating::DrawDebugTextOverlays()
 T CBaseAnimating::DrawRawSkeleton(matrix3x4_t*, int, bool, float, bool)
 T CBaseAnimating::DrawServerHitboxes(float, bool)
 T CBaseAnimating::EdgeLimitPoseParameter(int, float, float)
 T CBaseAnimating::Extinguish()
 T CBaseAnimating::ExtractBbox(int, Vector&, Vector&)
 T CBaseAnimating::FindBodygroupByName(char const*)
 T CBaseAnimating::FindTransitionSequence(int, int, int*)
 T CBaseAnimating::Freeze(float, CBaseEntity*, Ray_t*)
 T CBaseAnimating::GetAnimTimeInterval() const
 T CBaseAnimating::GetAttachment(char const*, Vector&, QAngle&)
 T CBaseAnimating::GetAttachment(char const*, Vector&, Vector*, Vector*, Vector*)
 T CBaseAnimating::GetAttachment(int, Vector&, QAngle&)
 T CBaseAnimating::GetAttachment(int, Vector&, Vector*, Vector*, Vector*)
 T CBaseAnimating::GetAttachment(int, matrix3x4_t&)
 T CBaseAnimating::GetAttachmentBone(int)
 T CBaseAnimating::GetAttachmentLocal(int, Vector&, QAngle&)
 T CBaseAnimating::GetBaseAnimating()
 T CBaseAnimating::GetBoneCache()
 T CBaseAnimating::GetBonePosition(int, Vector&, QAngle&)
 T CBaseAnimating::GetBoneTransform(int, matrix3x4_t&)
 T CBaseAnimating::GetDataDescMap()
 T CBaseAnimating::GetEntryVelocity(int)
 T CBaseAnimating::GetFlexControllerName(LocalFlexController_t)
 T CBaseAnimating::GetFlexControllerType(LocalFlexController_t)
 T CBaseAnimating::GetGroundSpeedVelocity()
 T CBaseAnimating::GetHitboxBone(int)
 T CBaseAnimating::GetHitboxSet()
 T CBaseAnimating::GetHitboxesFrontside(int*, int, Vector const&, float)
 T CBaseAnimating::GetIdealAccel() const
 T CBaseAnimating::GetIdealSpeed() const
 T CBaseAnimating::GetInstantaneousVelocity(float)
 T CBaseAnimating::GetIntervalMovement(float, bool&, Vector&, QAngle&)
 T CBaseAnimating::GetLastVisibleCycle(CStudioHdr*, int)
 T CBaseAnimating::GetModelHierarchyScale()
 T CBaseAnimating::GetModelScale() const
 T CBaseAnimating::GetModelScaleType() const
 T CBaseAnimating::GetMovementFrame(float)
 T CBaseAnimating::GetNumFlexControllers()
 T CBaseAnimating::GetObjectScaleLevel()
 T CBaseAnimating::GetPhysicsBone(int)
 T CBaseAnimating::GetPoseParameter(int)
 T CBaseAnimating::GetPoseParameterRange(int, float&, float&)
 T CBaseAnimating::GetScriptDesc()
 T CBaseAnimating::GetSequenceActivity(int)
 T CBaseAnimating::GetSequenceCycleRate(CStudioHdr*, int)
 T CBaseAnimating::GetSequenceGroundSpeed(CStudioHdr*, int)
 T CBaseAnimating::GetSequenceKeyValues(int)
 T CBaseAnimating::GetSequenceLinearMotion(int, Vector*)
 T CBaseAnimating::GetSequenceMoveYaw(int)
 T CBaseAnimating::GetSequenceMovement(int, float, float, Vector&, QAngle&)
 T CBaseAnimating::GetSequenceName(int)
 T CBaseAnimating::GetServerClass()
 T CBaseAnimating::GetSkeleton(CStudioHdr*, Vector*, QuaternionAligned*, int)
 T CBaseAnimating::GetStepAngles() const
 T CBaseAnimating::GetStepOrigin() const
 T CBaseAnimating::GetVelocity(Vector*, Vector*)
 T CBaseAnimating::GotoSequence(int, float, float, int, int&, float&, int&)
 T CBaseAnimating::HandleAnimEvent(animevent_t*)
 T CBaseAnimating::HandleBehaviorAnimEvent(animevent_t*)
 T CBaseAnimating::HandleScriptedAnimEvent(animevent_t*)
 T CBaseAnimating::HasAnimEvent(int, int)
 T CBaseAnimating::HasMovement(int)
 T CBaseAnimating::HasPoseParameter(int, int)
 T CBaseAnimating::Ignite(float, bool, float, bool)
 T CBaseAnimating::IgniteLifetime(float)
 T CBaseAnimating::IgniteUseCheapEffect(bool)
 T CBaseAnimating::InitBoneControllers()
 T CBaseAnimating::InputBecomeRagdoll(inputdata_t&)
 T CBaseAnimating::InputIgnite(inputdata_t&)
 T CBaseAnimating::InputIgniteLifetime(inputdata_t&)
 T CBaseAnimating::InputSetLightingOrigin(inputdata_t&)
 T CBaseAnimating::InputSetLightingOriginRelative(inputdata_t&)
 T CBaseAnimating::InvalidateBoneCache()
 T CBaseAnimating::IsActivityFinished()
 T CBaseAnimating::IsFrozen()
 T CBaseAnimating::IsRagdoll()
 T CBaseAnimating::IsSequenceFinished()
 T CBaseAnimating::IsValidSequence(int)
 T CBaseAnimating::IsViewModel() const
 T CBaseAnimating::LockStudioHdr()
 T CBaseAnimating::LookupActivity(char const*)
 T CBaseAnimating::LookupAttachment(char const*)
 T CBaseAnimating::LookupBone(char const*)
 T CBaseAnimating::LookupPoseParameter(CStudioHdr*, char const*)
 T CBaseAnimating::LookupSequence(char const*)
 T CBaseAnimating::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CBaseAnimating::OnFizzled()
 T CBaseAnimating::OnNewModel()
 T CBaseAnimating::OnRestore()
 T CBaseAnimating::OnSequenceSet(int)
 T CBaseAnimating::PopulatePoseParameters()
 T CBaseAnimating::Precache()
 T CBaseAnimating::ReachedEndOfSequence()
 T CBaseAnimating::ResetActivityIndexes()
 T CBaseAnimating::ResetClientsideFrame()
 T CBaseAnimating::ResetEventIndexes()
 T CBaseAnimating::ResetSequence(int)
 T CBaseAnimating::ResetSequenceInfo()
 T CBaseAnimating::Restore(IRestore&)
 T CBaseAnimating::ScriptGetAttachmentAngles(int)
 T CBaseAnimating::ScriptGetAttachmentOrigin(int)
 T CBaseAnimating::SelectHeaviestSequence(Activity)
 T CBaseAnimating::SelectWeightedSequence(Activity)
 T CBaseAnimating::SelectWeightedSequence(Activity, int)
 T CBaseAnimating::SequenceDuration(CStudioHdr*, int)
 T CBaseAnimating::SetBodygroup(int, int)
 T CBaseAnimating::SetBoneController(int, float)
 T CBaseAnimating::SetCycle(float)
 T CBaseAnimating::SetFadeDistance(float, float)
 T CBaseAnimating::SetLightingOrigin(CBaseEntity*)
 T CBaseAnimating::SetLightingOrigin(string_t)
 T CBaseAnimating::SetLightingOriginRelative(CBaseEntity*)
 T CBaseAnimating::SetModel(char const*)
 T CBaseAnimating::SetModelScale(float, float, ModelScaleType_t)
 T CBaseAnimating::SetPlaybackRate(float)
 T CBaseAnimating::SetPoseParameter(CStudioHdr*, char const*, float)
 T CBaseAnimating::SetPoseParameter(CStudioHdr*, int, float)
 T CBaseAnimating::SetSequence(int)
 T CBaseAnimating::SetSequenceBox()
 T CBaseAnimating::SetTransmit(CCheckTransmitInfo*, bool)
 T CBaseAnimating::SetupBones(matrix3x4a_t*, int)
 T CBaseAnimating::Spawn()
 T CBaseAnimating::StopAnimation()
 T CBaseAnimating::StudioFrameAdvance()
 T CBaseAnimating::StudioFrameAdvanceInternal(CStudioHdr*, float)
 T CBaseAnimating::StudioFrameAdvanceManual(float)
 T CBaseAnimating::Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T CBaseAnimating::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CBaseAnimating::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)
 T CBaseAnimating::TransferDissolveFrom(CBaseAnimating*)
 T CBaseAnimating::Unfreeze()
 T CBaseAnimating::UnlockStudioHdr()
 T CBaseAnimating::UpdateModelScale()
 T CBaseAnimating::UpdateStepOrigin()
 T CBaseAnimating::UseClientSideAnimation()
 T CBaseAnimating::YouForgotToImplementOrDeclareServerClass()
 T CBaseAnimating::~CBaseAnimating()
 T CBaseAnimatingOverlay::AddGesture(Activity, bool)
 T CBaseAnimatingOverlay::AddGestureSequence(int, bool)
 T CBaseAnimatingOverlay::AddLayeredSequence(int, int)
 T CBaseAnimatingOverlay::AllocateLayer(int)
 T CBaseAnimatingOverlay::DispatchAnimEvents(CBaseAnimating*)
 T CBaseAnimatingOverlay::FastRemoveLayer(int)
 T CBaseAnimatingOverlay::FindGestureLayer(Activity)
 T CBaseAnimatingOverlay::GetAnimOverlay(int)
 T CBaseAnimatingOverlay::GetBaseAnimatingOverlay()
 T CBaseAnimatingOverlay::GetDataDescMap()
 T CBaseAnimatingOverlay::GetLayerCycle(int)
 T CBaseAnimatingOverlay::GetLayerDuration(int)
 T CBaseAnimatingOverlay::GetLayerSequence(int)
 T CBaseAnimatingOverlay::GetServerClass()
 T CBaseAnimatingOverlay::GetSkeleton(CStudioHdr*, Vector*, QuaternionAligned*, int)
 T CBaseAnimatingOverlay::IsPlayingGesture(Activity)
 T CBaseAnimatingOverlay::OnRestore()
 T CBaseAnimatingOverlay::RemoveLayer(int, float, float)
 T CBaseAnimatingOverlay::RestartGesture(Activity, bool, bool)
 T CBaseAnimatingOverlay::SetLayerCycle(int, float)
 T CBaseAnimatingOverlay::SetLayerCycle(int, float, float)
 T CBaseAnimatingOverlay::SetLayerDuration(int, float)
 T CBaseAnimatingOverlay::SetLayerLooping(int, bool)
 T CBaseAnimatingOverlay::SetLayerNoEvents(int, bool)
 T CBaseAnimatingOverlay::SetLayerNoRestore(int, bool)
 T CBaseAnimatingOverlay::SetLayerPlaybackRate(int, float)
 T CBaseAnimatingOverlay::SetLayerPriority(int, int)
 T CBaseAnimatingOverlay::SetLayerWeight(int, float)
 T CBaseAnimatingOverlay::SetModel(char const*)
 T CBaseAnimatingOverlay::SetNumAnimOverlays(int)
 T CBaseAnimatingOverlay::StudioFrameAdvance()
 T CBaseAnimatingOverlay::YouForgotToImplementOrDeclareServerClass()
 T CBaseAnimatingOverlay::~CBaseAnimatingOverlay()
 T CBaseAnimatingProjectile::GetDataDescMap()
 T CBaseAnimatingProjectile::Precache()
 T CBaseAnimatingProjectile::Touch(CBaseEntity*)
 T CBaseAnimatingProjectile::~CBaseAnimatingProjectile()
 T CBaseAppSystem<IParticleSystemQuery>::Connect(void* (*)(char const*, int*))
 T CBaseAppSystem<IParticleSystemQuery>::Disconnect()
 T CBaseAppSystem<IParticleSystemQuery>::GetDependencies()
 T CBaseAppSystem<IParticleSystemQuery>::GetTier()
 T CBaseAppSystem<IParticleSystemQuery>::Init()
 T CBaseAppSystem<IParticleSystemQuery>::QueryInterface(char const*)
 T CBaseAppSystem<IParticleSystemQuery>::Reconnect(void* (*)(char const*, int*), char const*)
 T CBaseAppSystem<IParticleSystemQuery>::Shutdown()
 T CBaseButton* _CreateEntityTemplate<CBaseButton>(CBaseButton*, char const*)
 T CBaseButton::ButtonActivate()
 T CBaseButton::ButtonBackHome()
 T CBaseButton::ButtonReturn()
 T CBaseButton::ButtonSpark()
 T CBaseButton::ButtonTouch(CBaseEntity*)
 T CBaseButton::ButtonUse(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CBaseButton::CreateVPhysics()
 T CBaseButton::DrawDebugTextOverlays()
 T CBaseButton::GetDataDescMap()
 T CBaseButton::GetServerClass()
 T CBaseButton::InputLock(inputdata_t&)
 T CBaseButton::InputPress(inputdata_t&)
 T CBaseButton::InputPressIn(inputdata_t&)
 T CBaseButton::InputPressOut(inputdata_t&)
 T CBaseButton::InputUnlock(inputdata_t&)
 T CBaseButton::KeyValue(char const*, char const*)
 T CBaseButton::Lock()
 T CBaseButton::ObjectCaps()
 T CBaseButton::OnTakeDamage(CTakeDamageInfo const&)
 T CBaseButton::Precache()
 T CBaseButton::Press(CBaseEntity*, CBaseButton::BUTTON_CODE)
 T CBaseButton::Spawn()
 T CBaseButton::TriggerAndWait()
 T CBaseButton::Unlock()
 T CBaseButton::YouForgotToImplementOrDeclareServerClass()
 T CBaseButton::~CBaseButton()
 T CBaseCombatCharacter::AddClassRelationship(Class_T, Disposition_t, int)
 T CBaseCombatCharacter::AddEntityRelationship(CBaseEntity*, Disposition_t, int)
 T CBaseCombatCharacter::AddFactionRelationship(int, Disposition_t, int)
 T CBaseCombatCharacter::AddPlayerItem(CBaseCombatWeapon*)
 T CBaseCombatCharacter::AllocateDefaultFactionRelationships()
 T CBaseCombatCharacter::AllocateDefaultRelationships()
 T CBaseCombatCharacter::ApplyStressDamage(IPhysicsObject*, bool)
 T CBaseCombatCharacter::BecomeRagdoll(CTakeDamageInfo const&, Vector const&)
 T CBaseCombatCharacter::BecomeRagdollBoogie(CBaseEntity*, Vector const&, float, int)
 T CBaseCombatCharacter::BloodColor()
 T CBaseCombatCharacter::BodyAngles()
 T CBaseCombatCharacter::BodyDirection2D()
 T CBaseCombatCharacter::BodyDirection3D()
 T CBaseCombatCharacter::CBaseCombatCharacter()
 T CBaseCombatCharacter::CalcDeathForceVector(CTakeDamageInfo const&)
 T CBaseCombatCharacter::CalcWeaponProficiency(CBaseCombatWeapon*)
 T CBaseCombatCharacter::CanBecomeServerRagdoll()
 T CBaseCombatCharacter::ChangeFaction(int)
 T CBaseCombatCharacter::CheckTraceHullAttack(Vector const&, Vector const&, Vector const&, Vector const&, float, int, float, bool)
 T CBaseCombatCharacter::CheckTraceHullAttack(float, Vector const&, Vector const&, float, int, float, bool)
 T CBaseCombatCharacter::ClearLastKnownArea()
 T CBaseCombatCharacter::CorpseFade()
 T CBaseCombatCharacter::CorpseGib(CTakeDamageInfo const&)
 T CBaseCombatCharacter::DoMuzzleFlash()
 T CBaseCombatCharacter::DropWeaponForWeaponStrip(CBaseCombatWeapon*, Vector const&, QAngle const&, float)
 T CBaseCombatCharacter::EquipWearable(CEconWearable*)
 T CBaseCombatCharacter::Event_Dying()
 T CBaseCombatCharacter::Event_Gibbed(CTakeDamageInfo const&)
 T CBaseCombatCharacter::Event_Killed(CTakeDamageInfo const&)
 T CBaseCombatCharacter::ExitVehicle()
 T CBaseCombatCharacter::EyeDirection2D()
 T CBaseCombatCharacter::EyeDirection3D()
 T CBaseCombatCharacter::FInAimCone(CBaseEntity*)
 T CBaseCombatCharacter::FInAimCone(Vector const&)
 T CBaseCombatCharacter::FInViewCone(CBaseEntity*)
 T CBaseCombatCharacter::FInViewCone(Vector const&)
 T CBaseCombatCharacter::FInViewConeThroughPortal(CBaseEntity*)
 T CBaseCombatCharacter::FInViewConeThroughPortal(Vector const&)
 T CBaseCombatCharacter::FVisible(CBaseEntity*, int, CBaseEntity**)
 T CBaseCombatCharacter::FVisible(Vector const&, int, CBaseEntity**)
 T CBaseCombatCharacter::FVisibleThroughPortal(CPortal_Base2D const*, CBaseEntity*, int, CBaseEntity**)
 T CBaseCombatCharacter::FindEntityRelationship(CBaseEntity*)
 T CBaseCombatCharacter::FindMissTarget()
 T CBaseCombatCharacter::FixupBurningServerRagdoll(CBaseEntity*)
 T CBaseCombatCharacter::GetActiveWeapon() const
 T CBaseCombatCharacter::GetAmmoCount(int) const
 T CBaseCombatCharacter::GetAttackSpread(CBaseCombatWeapon*, CBaseEntity*)
 T CBaseCombatCharacter::GetDataDescMap()
 T CBaseCombatCharacter::GetDeathActivity()
 T CBaseCombatCharacter::GetDefaultRelationshipDisposition(Class_T)
 T CBaseCombatCharacter::GetFogObscuredRatio(CBaseEntity*) const
 T CBaseCombatCharacter::GetFogObscuredRatio(Vector const&) const
 T CBaseCombatCharacter::GetFogObscuredRatio(float) const
 T CBaseCombatCharacter::GetFogParams(fogparams_t*) const
 T CBaseCombatCharacter::GetFogTrigger()
 T CBaseCombatCharacter::GetInteractionID()
 T CBaseCombatCharacter::GetLastKnownArea() const
 T CBaseCombatCharacter::GetPhysicsImpactDamageTable()
 T CBaseCombatCharacter::GetServerClass()
 T CBaseCombatCharacter::GetSpreadBias(CBaseCombatWeapon*, CBaseEntity*)
 T CBaseCombatCharacter::GetVehicle()
 T CBaseCombatCharacter::GetVehicleEntity()
 T CBaseCombatCharacter::GetWeapon(int) const
 T CBaseCombatCharacter::GiveAmmo(int, char const*, bool)
 T CBaseCombatCharacter::GiveAmmo(int, int, bool)
 T CBaseCombatCharacter::HandleInteraction(int, void*, CBaseCombatCharacter*)
 T CBaseCombatCharacter::HasAlienGibs()
 T CBaseCombatCharacter::HasHumanGibs()
 T CBaseCombatCharacter::HeadDirection2D()
 T CBaseCombatCharacter::HeadDirection3D()
 T CBaseCombatCharacter::IRelationPriority(CBaseEntity*)
 T CBaseCombatCharacter::IRelationType(CBaseEntity*)
 T CBaseCombatCharacter::InitInteractionSystem()
 T CBaseCombatCharacter::InputKilledNPC(inputdata_t&)
 T CBaseCombatCharacter::IsAreaTraversable(CNavArea const*) const
 T CBaseCombatCharacter::IsHiddenByFog(CBaseEntity*) const
 T CBaseCombatCharacter::IsHiddenByFog(Vector const&) const
 T CBaseCombatCharacter::IsHiddenByFog(float) const
 T CBaseCombatCharacter::IsInAVehicle() const
 T CBaseCombatCharacter::IsInFieldOfView(CBaseEntity*) const
 T CBaseCombatCharacter::IsInFieldOfView(Vector const&) const
 T CBaseCombatCharacter::IsLineOfSightClear(CBaseEntity*, CBaseCombatCharacter::LineOfSightCheckType) const
 T CBaseCombatCharacter::IsLineOfSightClear(Vector const&, CBaseCombatCharacter::LineOfSightCheckType, CBaseEntity*) const
 T CBaseCombatCharacter::IsLookingTowards(CBaseEntity const*, float) const
 T CBaseCombatCharacter::IsLookingTowards(Vector const&, float) const
 T CBaseCombatCharacter::MyCombatCharacterPointer()
 T CBaseCombatCharacter::NPC_TranslateActivity(Activity)
 T CBaseCombatCharacter::NetworkStateChanged_m_iAmmo()
 T CBaseCombatCharacter::NetworkStateChanged_m_iAmmo(void*)
 T CBaseCombatCharacter::NotifyFriendsOfDamage(CBaseEntity*)
 T CBaseCombatCharacter::OnChangeActiveWeapon(CBaseCombatWeapon*, CBaseCombatWeapon*)
 T CBaseCombatCharacter::OnFogTriggerEndTouch(CBaseEntity*)
 T CBaseCombatCharacter::OnFogTriggerStartTouch(CBaseEntity*)
 T CBaseCombatCharacter::OnFootstep(Vector const&, bool, bool, bool, bool)
 T CBaseCombatCharacter::OnFriendDamaged(CBaseCombatCharacter*, CBaseEntity*)
 T CBaseCombatCharacter::OnKilledNPC(CBaseCombatCharacter*)
 T CBaseCombatCharacter::OnNavAreaChanged(CNavArea*, CNavArea*)
 T CBaseCombatCharacter::OnNavAreaRemoved(CNavArea*)
 T CBaseCombatCharacter::OnPlayerKilledOther(CBaseEntity*, CTakeDamageInfo const&)
 T CBaseCombatCharacter::OnPursuedBy(INextBot*)
 T CBaseCombatCharacter::OnTakeDamage(CTakeDamageInfo const&)
 T CBaseCombatCharacter::OnTakeDamage_Alive(CTakeDamageInfo const&)
 T CBaseCombatCharacter::OnTakeDamage_Dead(CTakeDamageInfo const&)
 T CBaseCombatCharacter::OnTakeDamage_Dying(CTakeDamageInfo const&)
 T CBaseCombatCharacter::Precache()
 T CBaseCombatCharacter::PushawayTouch(CBaseEntity*)
 T CBaseCombatCharacter::RemoveAllAmmo()
 T CBaseCombatCharacter::RemoveAllWeapons()
 T CBaseCombatCharacter::RemoveAmmo(int, int)
 T CBaseCombatCharacter::RemoveEntityRelationship(CBaseEntity*)
 T CBaseCombatCharacter::RemovePlayerItem(CBaseCombatWeapon*)
 T CBaseCombatCharacter::RemoveWearable(CEconWearable*)
 T CBaseCombatCharacter::ResetVisibilityCache(CBaseCombatCharacter*)
 T CBaseCombatCharacter::Restore(IRestore&)
 T CBaseCombatCharacter::SetActiveWeapon(CBaseCombatWeapon*)
 T CBaseCombatCharacter::SetAmmoCount(int, int)
 T CBaseCombatCharacter::SetBloodColor(int)
 T CBaseCombatCharacter::SetDefaultRelationship(Class_T, Class_T, Disposition_t, int)
 T CBaseCombatCharacter::SetLightingOriginRelative(CBaseEntity*)
 T CBaseCombatCharacter::SetTransmit(CCheckTransmitInfo*, bool)
 T CBaseCombatCharacter::ShouldDropActiveWeaponWhenKilled()
 T CBaseCombatCharacter::ShouldGib(CTakeDamageInfo const&)
 T CBaseCombatCharacter::ShouldShootMissTarget(CBaseCombatCharacter*)
 T CBaseCombatCharacter::Spawn()
 T CBaseCombatCharacter::SwitchToNextBestWeapon(CBaseCombatWeapon*)
 T CBaseCombatCharacter::TakeHealth(float, int)
 T CBaseCombatCharacter::ThrowDirForWeaponStrip(CBaseCombatWeapon*, Vector const&, Vector*)
 T CBaseCombatCharacter::UpdateLastKnownArea()
 T CBaseCombatCharacter::UpdateOnRemove()
 T CBaseCombatCharacter::VPhysicsShadowCollision(int, gamevcollisionevent_t*)
 T CBaseCombatCharacter::Weapon_CanSwitchTo(CBaseCombatWeapon*)
 T CBaseCombatCharacter::Weapon_CanUse(CBaseCombatWeapon*)
 T CBaseCombatCharacter::Weapon_Create(char const*)
 T CBaseCombatCharacter::Weapon_Detach(CBaseCombatWeapon*)
 T CBaseCombatCharacter::Weapon_Drop(CBaseCombatWeapon*, Vector const*, Vector const*)
 T CBaseCombatCharacter::Weapon_DropAll(bool)
 T CBaseCombatCharacter::Weapon_Equip(CBaseCombatWeapon*)
 T CBaseCombatCharacter::Weapon_EquipAmmoOnly(CBaseCombatWeapon*)
 T CBaseCombatCharacter::Weapon_FindUsable(Vector const&)
 T CBaseCombatCharacter::Weapon_FrameUpdate()
 T CBaseCombatCharacter::Weapon_GetSlot(char const*, int) const
 T CBaseCombatCharacter::Weapon_GetSlot(int) const
 T CBaseCombatCharacter::Weapon_HandleAnimEvent(animevent_t*)
 T CBaseCombatCharacter::Weapon_IsOnGround(CBaseCombatWeapon*)
 T CBaseCombatCharacter::Weapon_OwnsThisType(char const*, int) const
 T CBaseCombatCharacter::Weapon_SetActivity(Activity, float)
 T CBaseCombatCharacter::Weapon_ShootPosition()
 T CBaseCombatCharacter::Weapon_SlotOccupied(CBaseCombatWeapon*)
 T CBaseCombatCharacter::Weapon_Switch(CBaseCombatWeapon*, int)
 T CBaseCombatCharacter::Weapon_TranslateActivity(Activity, bool*)
 T CBaseCombatCharacter::YouForgotToImplementOrDeclareServerClass()
 T CBaseCombatCharacter::~CBaseCombatCharacter()
 T CBaseCombatWeapon::AbortReload()
 T CBaseCombatWeapon::Activate()
 T CBaseCombatWeapon::ActivityList()
 T CBaseCombatWeapon::ActivityListCount()
 T CBaseCombatWeapon::ActivityOverride(Activity, bool*)
 T CBaseCombatWeapon::AddViewKick()
 T CBaseCombatWeapon::AddViewmodelBob(CBaseViewModel*, Vector&, QAngle&)
 T CBaseCombatWeapon::AllowsAutoSwitchFrom() const
 T CBaseCombatWeapon::AllowsAutoSwitchTo() const
 T CBaseCombatWeapon::AttemptToMaterialize()
 T CBaseCombatWeapon::BaseForceFire(CBaseCombatCharacter*, CBaseEntity*)
 T CBaseCombatWeapon::CBaseCombatWeapon()
 T CBaseCombatWeapon::CalcViewmodelBob()
 T CBaseCombatWeapon::CanBePickedUpByNPCs()
 T CBaseCombatWeapon::CanBeSelected()
 T CBaseCombatWeapon::CanDeploy()
 T CBaseCombatWeapon::CanHolster()
 T CBaseCombatWeapon::CanLower()
 T CBaseCombatWeapon::CapabilitiesGet()
 T CBaseCombatWeapon::CheckReload()
 T CBaseCombatWeapon::CheckRespawn()
 T CBaseCombatWeapon::DefaultDeploy(char*, char*, int, char*)
 T CBaseCombatWeapon::DefaultReload(int, int, int)
 T CBaseCombatWeapon::DefaultTouch(CBaseEntity*)
 T CBaseCombatWeapon::Delete()
 T CBaseCombatWeapon::Deploy()
 T CBaseCombatWeapon::DestroyItem()
 T CBaseCombatWeapon::DisplayAltFireHudHint()
 T CBaseCombatWeapon::DisplayReloadHudHint()
 T CBaseCombatWeapon::Drop(Vector const&)
 T CBaseCombatWeapon::Equip(CBaseCombatCharacter*)
 T CBaseCombatWeapon::FallInit()
 T CBaseCombatWeapon::FallThink()
 T CBaseCombatWeapon::FinishReload()
 T CBaseCombatWeapon::GetAnimPrefix() const
 T CBaseCombatWeapon::GetAvailableWeaponsInBox(CBaseCombatWeapon**, int, Vector const&, Vector const&)
 T CBaseCombatWeapon::GetBulletSpread()
 T CBaseCombatWeapon::GetBulletSpread(WeaponProficiency_t)
 T CBaseCombatWeapon::GetBulletType()
 T CBaseCombatWeapon::GetControlPanelClassName(int, char const*&)
 T CBaseCombatWeapon::GetControlPanelInfo(int, char const*&)
 T CBaseCombatWeapon::GetDamage(float, int)
 T CBaseCombatWeapon::GetDataDescMap()
 T CBaseCombatWeapon::GetDeathNoticeName()
 T CBaseCombatWeapon::GetDefaultAnimSpeed()
 T CBaseCombatWeapon::GetDefaultClip1() const
 T CBaseCombatWeapon::GetDefaultClip2() const
 T CBaseCombatWeapon::GetDrawActivity()
 T CBaseCombatWeapon::GetEncryptionKey()
 T CBaseCombatWeapon::GetFireRate()
 T CBaseCombatWeapon::GetLastWeapon()
 T CBaseCombatWeapon::GetMaxAutoAimDeflection()
 T CBaseCombatWeapon::GetMaxBurst()
 T CBaseCombatWeapon::GetMaxClip1() const
 T CBaseCombatWeapon::GetMaxClip2() const
 T CBaseCombatWeapon::GetMaxRestTime()
 T CBaseCombatWeapon::GetMinBurst()
 T CBaseCombatWeapon::GetMinRestTime()
 T CBaseCombatWeapon::GetName() const
 T CBaseCombatWeapon::GetOwner() const
 T CBaseCombatWeapon::GetPosition() const
 T CBaseCombatWeapon::GetPrimaryAmmoType() const
 T CBaseCombatWeapon::GetPrimaryAttackActivity()
 T CBaseCombatWeapon::GetPrintName() const
 T CBaseCombatWeapon::GetProficiencyValues()
 T CBaseCombatWeapon::GetRandomBurst()
 T CBaseCombatWeapon::GetRumbleEffect() const
 T CBaseCombatWeapon::GetSecondaryAmmoType() const
 T CBaseCombatWeapon::GetSecondaryAttackActivity()
 T CBaseCombatWeapon::GetServerClass()
 T CBaseCombatWeapon::GetShootSound(int) const
 T CBaseCombatWeapon::GetSlot() const
 T CBaseCombatWeapon::GetSpreadBias(WeaponProficiency_t)
 T CBaseCombatWeapon::GetSpriteActive() const
 T CBaseCombatWeapon::GetSpriteAmmo() const
 T CBaseCombatWeapon::GetSpriteAmmo2() const
 T CBaseCombatWeapon::GetSpriteAutoaim() const
 T CBaseCombatWeapon::GetSpriteCrosshair() const
 T CBaseCombatWeapon::GetSpriteInactive() const
 T CBaseCombatWeapon::GetSpriteZoomedAutoaim() const
 T CBaseCombatWeapon::GetSpriteZoomedCrosshair() const
 T CBaseCombatWeapon::GetSubType()
 T CBaseCombatWeapon::GetViewModel(int) const
 T CBaseCombatWeapon::GetWeaponFlags() const
 T CBaseCombatWeapon::GetWeaponID() const
 T CBaseCombatWeapon::GetWeaponIdleTime()
 T CBaseCombatWeapon::GetWeight() const
 T CBaseCombatWeapon::GetWorldModel() const
 T CBaseCombatWeapon::GetWpnData() const
 T CBaseCombatWeapon::GiveDefaultAmmo()
 T CBaseCombatWeapon::HandleAnimEvent(animevent_t*)
 T CBaseCombatWeapon::HandleFireOnEmpty()
 T CBaseCombatWeapon::HasAmmo()
 T CBaseCombatWeapon::HasAnyAmmo()
 T CBaseCombatWeapon::HasPrimaryAmmo()
 T CBaseCombatWeapon::HasSecondaryAmmo()
 T CBaseCombatWeapon::HasWeaponIdleTimeElapsed()
 T CBaseCombatWeapon::HideThink()
 T CBaseCombatWeapon::Holster(CBaseCombatWeapon*)
 T CBaseCombatWeapon::InputHideWeapon(inputdata_t&)
 T CBaseCombatWeapon::IsAllowedToSwitch()
 T CBaseCombatWeapon::IsAlwaysActive()
 T CBaseCombatWeapon::IsBaseCombatWeapon() const
 T CBaseCombatWeapon::IsLocked(CBaseEntity*)
 T CBaseCombatWeapon::IsPredicted() const
 T CBaseCombatWeapon::IsWeaponVisible()
 T CBaseCombatWeapon::IsWeaponZoomed()
 T CBaseCombatWeapon::ItemBusyFrame()
 T CBaseCombatWeapon::ItemHolsterFrame()
 T CBaseCombatWeapon::ItemPostFrame()
 T CBaseCombatWeapon::ItemPreFrame()
 T CBaseCombatWeapon::Kill()
 T CBaseCombatWeapon::Lock(float, CBaseEntity*)
 T CBaseCombatWeapon::Lower()
 T CBaseCombatWeapon::MaintainIdealActivity()
 T CBaseCombatWeapon::MakeTracer(Vector const&, CGameTrace const&, int)
 T CBaseCombatWeapon::MakeWeaponNameFromEntity(CBaseEntity*)
 T CBaseCombatWeapon::Materialize()
 T CBaseCombatWeapon::MyCombatWeaponPointer()
 T CBaseCombatWeapon::NetworkStateChanged_m_nNextThinkTick()
 T CBaseCombatWeapon::NetworkStateChanged_m_nNextThinkTick(void*)
 T CBaseCombatWeapon::ObjectCaps()
 T CBaseCombatWeapon::OnMouseWheel(int)
 T CBaseCombatWeapon::OnPickedUp(CBaseCombatCharacter*)
 T CBaseCombatWeapon::Operator_ForceNPCFire(CBaseCombatCharacter*, bool, CBaseEntity*)
 T CBaseCombatWeapon::Operator_FrameUpdate(CBaseCombatCharacter*)
 T CBaseCombatWeapon::Operator_HandleAnimEvent(animevent_t*, CBaseCombatCharacter*)
 T CBaseCombatWeapon::Precache()
 T CBaseCombatWeapon::PrimaryAttack()
 T CBaseCombatWeapon::Ready()
 T CBaseCombatWeapon::Reload()
 T CBaseCombatWeapon::ReloadOrSwitchWeapons()
 T CBaseCombatWeapon::RescindAltFireHudHint()
 T CBaseCombatWeapon::RescindReloadHudHint()
 T CBaseCombatWeapon::Respawn()
 T CBaseCombatWeapon::SecondaryAttack()
 T CBaseCombatWeapon::SendViewModelAnim(int)
 T CBaseCombatWeapon::SendWeaponAnim(int)
 T CBaseCombatWeapon::SetActivity(Activity, float)
 T CBaseCombatWeapon::SetIdealActivity(Activity)
 T CBaseCombatWeapon::SetOwner(CBaseCombatCharacter*)
 T CBaseCombatWeapon::SetPickupTouch()
 T CBaseCombatWeapon::SetSubType(int)
 T CBaseCombatWeapon::SetViewModel()
 T CBaseCombatWeapon::SetViewModelIndex(int)
 T CBaseCombatWeapon::SetWeaponIdleTime(float)
 T CBaseCombatWeapon::SetWeaponVisible(bool)
 T CBaseCombatWeapon::ShouldDisplayAltFireHUDHint()
 T CBaseCombatWeapon::ShouldDisplayReloadHUDHint()
 T CBaseCombatWeapon::ShouldShowControlPanels()
 T CBaseCombatWeapon::Spawn()
 T CBaseCombatWeapon::StartSprinting()
 T CBaseCombatWeapon::StopSprinting()
 T CBaseCombatWeapon::StopWeaponSound(WeaponSound_t)
 T CBaseCombatWeapon::UpdateClientData(CBasePlayer*)
 T CBaseCombatWeapon::UpdateTransmitState()
 T CBaseCombatWeapon::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CBaseCombatWeapon::UsesClipsForAmmo1() const
 T CBaseCombatWeapon::UsesClipsForAmmo2() const
 T CBaseCombatWeapon::UsesPrimaryAmmo()
 T CBaseCombatWeapon::UsesSecondaryAmmo()
 T CBaseCombatWeapon::VisibleInWeaponSelection()
 T CBaseCombatWeapon::WeaponAutoAimScale()
 T CBaseCombatWeapon::WeaponIdle()
 T CBaseCombatWeapon::WeaponLOSCondition(Vector const&, Vector const&, bool)
 T CBaseCombatWeapon::WeaponMeleeAttack1Condition(float, float)
 T CBaseCombatWeapon::WeaponMeleeAttack2Condition(float, float)
 T CBaseCombatWeapon::WeaponRangeAttack1Condition(float, float)
 T CBaseCombatWeapon::WeaponRangeAttack2Condition(float, float)
 T CBaseCombatWeapon::WeaponSound(WeaponSound_t, float)
 T CBaseCombatWeapon::YouForgotToImplementOrDeclareServerClass()
 T CBaseCombatWeapon::~CBaseCombatWeapon()
 T CBaseDMStart::GetDataDescMap()
 T CBaseDMStart::IsTriggered(CBaseEntity*)
 T CBaseDMStart::~CBaseDMStart()
 T CBaseDoor::Activate()
 T CBaseDoor::Blocked(CBaseEntity*)
 T CBaseDoor::ChainTouch(CBaseEntity*)
 T CBaseDoor::ChainUse()
 T CBaseDoor::CloseAreaPortalsThink()
 T CBaseDoor::CreateVPhysics()
 T CBaseDoor::DoorActivate()
 T CBaseDoor::DoorGoDown()
 T CBaseDoor::DoorGoUp()
 T CBaseDoor::DoorHitBottom()
 T CBaseDoor::DoorHitTop()
 T CBaseDoor::DoorTouch(CBaseEntity*)
 T CBaseDoor::EndBlocked()
 T CBaseDoor::GetDataDescMap()
 T CBaseDoor::GetServerClass()
 T CBaseDoor::InputClose(inputdata_t&)
 T CBaseDoor::InputLock(inputdata_t&)
 T CBaseDoor::InputOpen(inputdata_t&)
 T CBaseDoor::InputSetSpeed(inputdata_t&)
 T CBaseDoor::InputSetToggleState(inputdata_t&)
 T CBaseDoor::InputToggle(inputdata_t&)
 T CBaseDoor::InputUnlock(inputdata_t&)
 T CBaseDoor::IsRotatingDoor()
 T CBaseDoor::KeyValue(char const*, char const*)
 T CBaseDoor::MovingSoundThink()
 T CBaseDoor::ObjectCaps()
 T CBaseDoor::Precache()
 T CBaseDoor::SetToggleState(int)
 T CBaseDoor::ShouldSavePhysics()
 T CBaseDoor::Spawn()
 T CBaseDoor::StartBlocked(CBaseEntity*)
 T CBaseDoor::StopMovingSound()
 T CBaseDoor::UpdateAreaPortals(bool)
 T CBaseDoor::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CBaseDoor::YouForgotToImplementOrDeclareServerClass()
 T CBaseDoor::~CBaseDoor()
 T CBaseEdict::GetChangeAccessor()
 T CBaseEdict::StateChanged(unsigned short)
 T CBaseEntity::AcceptInput(char const*, CBaseEntity*, CBaseEntity*, variant_t, int)
 T CBaseEntity::Activate()
 T CBaseEntity::AddContext(char const*)
 T CBaseEntity::AddContext(char const*, char const*, float)
 T CBaseEntity::AddEffects(int)
 T CBaseEntity::AddEntityToGroundList(CBaseEntity*)
 T CBaseEntity::AddFlag(int)
 T CBaseEntity::AddPoints(int, bool)
 T CBaseEntity::AddPointsToTeam(int, bool)
 T CBaseEntity::AddSpawnFlags(int)
 T CBaseEntity::AddStepDiscontinuity(float, Vector const&, QAngle const&)
 T CBaseEntity::AddTimedOverlay(char const*, int)
 T CBaseEntity::AppendContextToCriteria(ResponseRules::CriteriaSet&, char const*)
 T CBaseEntity::ApplyAbsVelocityImpulse(Vector const&)
 T CBaseEntity::ApplyLocalAngularVelocityImpulse(Vector const&)
 T CBaseEntity::Blocked(CBaseEntity*)
 T CBaseEntity::BlocksLOS()
 T CBaseEntity::BloodColor()
 T CBaseEntity::BodyTarget(Vector const&, bool)
 T CBaseEntity::CBaseEntity(bool)
 T CBaseEntity::CalcAbsolutePosition()
 T CBaseEntity::CalcAbsoluteVelocity()
 T CBaseEntity::CallScriptFunction(char const*, ScriptVariant_t*)
 T CBaseEntity::CanBeHitByMeleeAttack(CBaseEntity*)
 T CBaseEntity::CanBeSeenBy(CAI_BaseNPC*)
 T CBaseEntity::CanPushEntity(CBaseEntity*) const
 T CBaseEntity::CanStandOn(CBaseEntity*) const
 T CBaseEntity::CanStandOn(edict_t*) const
 T CBaseEntity::ChangeTeam(int)
 T CBaseEntity::CheckHasGamePhysicsSimulation()
 T CBaseEntity::CheckHasThinkFunction(bool)
 T CBaseEntity::CheckStepSimulationChanged()
 T CBaseEntity::ClassMatchesComplex(char const*)
 T CBaseEntity::Classify()
 T CBaseEntity::ClearFlags()
 T CBaseEntity::ClearSpawnFlags()
 T CBaseEntity::CollisionRulesChanged()
 T CBaseEntity::ComputeAbsPosition(Vector const&, Vector*)
 T CBaseEntity::ComputeStepSimulationNetwork(StepSimulationData*)
 T CBaseEntity::ComputeTracerStartPosition(Vector const&, Vector*)
 T CBaseEntity::ComputeWorldSpaceSurroundingBox(Vector*, Vector*)
 T CBaseEntity::ConnectOutputToScript(char const*, char const*)
 T CBaseEntity::Create(char const*, Vector const&, QAngle const&, CBaseEntity*)
 T CBaseEntity::CreateDataObject(int)
 T CBaseEntity::CreateNoSpawn(char const*, Vector const&, QAngle const&, CBaseEntity*)
 T CBaseEntity::CreateVPhysics()
 T CBaseEntity::DamageDecal(int, int)
 T CBaseEntity::DeathNotice(CBaseEntity*)
 T CBaseEntity::DecalTrace(CGameTrace*, char const*)
 T CBaseEntity::DestroyAllDataObjects()
 T CBaseEntity::DestroyDataObject(int)
 T CBaseEntity::DetectInSkybox()
 T CBaseEntity::DisconnectOutputFromScript(char const*, char const*)
 T CBaseEntity::DispatchResponse(char const*)
 T CBaseEntity::DispatchTraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CBaseEntity::DispatchUpdateTransmitState()
 T CBaseEntity::DoImpactEffect(CGameTrace&, int)
 T CBaseEntity::DoesHavePlayerChild()
 T CBaseEntity::DrawAbsBoxOverlay()
 T CBaseEntity::DrawBBoxOverlay(float)
 T CBaseEntity::DrawDebugGeometryOverlays()
 T CBaseEntity::DrawDebugTextOverlays()
 T CBaseEntity::DrawInputOverlay(char const*, CBaseEntity*, variant_t)
 T CBaseEntity::DrawOutputOverlay(CEventAction*)
 T CBaseEntity::DrawTimedOverlays()
 T CBaseEntity::DrawVPhysicsObjectCenterAndContactPoints(IPhysicsObject*)
 T CBaseEntity::DumpResponseCriteria()
 T CBaseEntity::EarPosition()
 T CBaseEntity::EmitCloseCaption(IRecipientFilter&, int, char const*, CUtlVector<Vector, CUtlMemory<Vector, int> >&, float, bool)
 T CBaseEntity::EmitSentenceByIndex(IRecipientFilter&, int, int, int, float, soundlevel_t, int, int, Vector const*, Vector const*, bool, float)
 T CBaseEntity::EmitSound(IRecipientFilter&, int, EmitSound_t const&)
 T CBaseEntity::EmitSound(IRecipientFilter&, int, EmitSound_t const&, unsigned int&)
 T CBaseEntity::EmitSound(IRecipientFilter&, int, char const*, Vector const*, float, float*)
 T CBaseEntity::EmitSound(char const*, float, float*)
 T CBaseEntity::EmitSound(char const*, unsigned int&, float, float*)
 T CBaseEntity::EndBlocked()
 T CBaseEntity::EndTouch(CBaseEntity*)
 T CBaseEntity::EntityText(int, char const*, float, int, int, int, int)
 T CBaseEntity::Event_Killed(CTakeDamageInfo const&)
 T CBaseEntity::Event_KilledOther(CBaseEntity*, CTakeDamageInfo const&)
 T CBaseEntity::EyeAngles()
 T CBaseEntity::EyePosition()
 T CBaseEntity::FVisible(CBaseEntity*, int, CBaseEntity**)
 T CBaseEntity::FVisible(Vector const&, int, CBaseEntity**)
 T CBaseEntity::FindContextByName(char const*) const
 T CBaseEntity::FireBullets(FireBulletsInfo_t const&)
 T CBaseEntity::FireNamedOutput(char const*, variant_t, CBaseEntity*, CBaseEntity*, float)
 T CBaseEntity::FollowEntity(CBaseEntity*, bool)
 T CBaseEntity::ForceVPhysicsCollide(CBaseEntity*)
 T CBaseEntity::GenderExpandString(char const*, char*, int)
 T CBaseEntity::GetAIAddOn() const
 T CBaseEntity::GetAbsOrigin() const
 T CBaseEntity::GetAbsVelocity() const
 T CBaseEntity::GetAttackDamageScale(CBaseEntity*)
 T CBaseEntity::GetAutoAimCenter()
 T CBaseEntity::GetAutoAimRadius()
 T CBaseEntity::GetBaseAnimating()
 T CBaseEntity::GetBaseAnimatingOverlay()
 T CBaseEntity::GetBaseEntity()
 T CBaseEntity::GetBeamTraceFilter()
 T CBaseEntity::GetClassname()
 T CBaseEntity::GetCollideable()
 T CBaseEntity::GetContextValue(int) const
 T CBaseEntity::GetDamage()
 T CBaseEntity::GetDamageType() const
 T CBaseEntity::GetDataDescMap()
 T CBaseEntity::GetDataObject(int)
 T CBaseEntity::GetDebugName()
 T CBaseEntity::GetDelay()
 T CBaseEntity::GetEnemy()
 T CBaseEntity::GetEnemy() const
 T CBaseEntity::GetEntityNameAsCStr()
 T CBaseEntity::GetEntitySkybox()
 T CBaseEntity::GetFirstThinkTick()
 T CBaseEntity::GetFollowedEntity()
 T CBaseEntity::GetFriction() const
 T CBaseEntity::GetGlobalFadeScale() const
 T CBaseEntity::GetGroundChangeTime()
 T CBaseEntity::GetGroundEntity()
 T CBaseEntity::GetGroundVelocityToApply(Vector&)
 T CBaseEntity::GetHealth() const
 T CBaseEntity::GetKeyValue(char const*, char*, int)
 T CBaseEntity::GetLastThink(char const*)
 T CBaseEntity::GetMaxHealth() const
 T CBaseEntity::GetModel()
 T CBaseEntity::GetModelIndex() const
 T CBaseEntity::GetModelName() const
 T CBaseEntity::GetNetworkable()
 T CBaseEntity::GetNextTarget()
 T CBaseEntity::GetNextThink(char const*)
 T CBaseEntity::GetNextThinkTick(char const*)
 T CBaseEntity::GetNextThinkTick(int) const
 T CBaseEntity::GetParametersForSound(char const*, CSoundParameters&, char const*)
 T CBaseEntity::GetParametersForSound(char const*, unsigned int&, CSoundParameters&, char const*)
 T CBaseEntity::GetParentToWorldTransform(matrix3x4_t&)
 T CBaseEntity::GetPlayerName() const
 T CBaseEntity::GetPreTemplateName()
 T CBaseEntity::GetReceivedDamageScale(CBaseEntity*)
 T CBaseEntity::GetRefEHandle() const
 T CBaseEntity::GetResponseSystem()
 T CBaseEntity::GetRootMoveParent()
 T CBaseEntity::GetScriptDesc()
 T CBaseEntity::GetScriptId()
 T CBaseEntity::GetScriptInstance()
 T CBaseEntity::GetScriptOwnerEntity()
 T CBaseEntity::GetScriptScope()
 T CBaseEntity::GetServerClass()
 T CBaseEntity::GetServerVehicle()
 T CBaseEntity::GetSmoothedVelocity()
 T CBaseEntity::GetSoundDuration(char const*, char const*)
 T CBaseEntity::GetSoundEmissionOrigin() const
 T CBaseEntity::GetStepAngles() const
 T CBaseEntity::GetStepOrigin() const
 T CBaseEntity::GetTeam() const
 T CBaseEntity::GetTeamNumber() const
 T CBaseEntity::GetTouchTrace()
 T CBaseEntity::GetTracerAttachment()
 T CBaseEntity::GetTracerType()
 T CBaseEntity::GetTransmitState()
 T CBaseEntity::GetVectors(Vector*, Vector*, Vector*) const
 T CBaseEntity::GetVelocity(Vector*, Vector*)
 T CBaseEntity::GetViewOffset() const
 T CBaseEntity::GetWaterType() const
 T CBaseEntity::HandleShotImpactingGlass(FireBulletsInfo_t const&, CGameTrace const&, Vector const&, ITraceFilter*)
 T CBaseEntity::HandleShotImpactingWater(FireBulletsInfo_t const&, Vector const&, ITraceFilter*, Vector*)
 T CBaseEntity::HasDataObjectType(int) const
 T CBaseEntity::HasNPCsOnIt()
 T CBaseEntity::HasPhysicsAttacker(float)
 T CBaseEntity::HasTarget(string_t)
 T CBaseEntity::HeadTarget(Vector const&)
 T CBaseEntity::ImpactTrace(CGameTrace*, int, char*)
 T CBaseEntity::InitSharedVars()
 T CBaseEntity::InputAddContext(inputdata_t&)
 T CBaseEntity::InputAddOutput(inputdata_t&)
 T CBaseEntity::InputAlpha(inputdata_t&)
 T CBaseEntity::InputAlternativeSorting(inputdata_t&)
 T CBaseEntity::InputCallScriptFunction(inputdata_t&)
 T CBaseEntity::InputClearContext(inputdata_t&)
 T CBaseEntity::InputClearParent(inputdata_t&)
 T CBaseEntity::InputColor(inputdata_t&)
 T CBaseEntity::InputDisableDamageForces(inputdata_t&)
 T CBaseEntity::InputDisableDraw(inputdata_t&)
 T CBaseEntity::InputDisableDrawInFastReflection(inputdata_t&)
 T CBaseEntity::InputDisableReceivingFlashlight(inputdata_t&)
 T CBaseEntity::InputDisableShadow(inputdata_t&)
 T CBaseEntity::InputDispatchResponse(inputdata_t&)
 T CBaseEntity::InputEnableDamageForces(inputdata_t&)
 T CBaseEntity::InputEnableDraw(inputdata_t&)
 T CBaseEntity::InputEnableDrawInFastReflection(inputdata_t&)
 T CBaseEntity::InputEnableReceivingFlashlight(inputdata_t&)
 T CBaseEntity::InputEnableShadow(inputdata_t&)
 T CBaseEntity::InputFireUser1(inputdata_t&)
 T CBaseEntity::InputFireUser2(inputdata_t&)
 T CBaseEntity::InputFireUser3(inputdata_t&)
 T CBaseEntity::InputFireUser4(inputdata_t&)
 T CBaseEntity::InputKill(inputdata_t&)
 T CBaseEntity::InputKillHierarchy(inputdata_t&)
 T CBaseEntity::InputRemoveContext(inputdata_t&)
 T CBaseEntity::InputRemovePaint(inputdata_t&)
 T CBaseEntity::InputRunScript(inputdata_t&)
 T CBaseEntity::InputRunScriptFile(inputdata_t&)
 T CBaseEntity::InputSetDamageFilter(inputdata_t&)
 T CBaseEntity::InputSetLocalAngles(inputdata_t&)
 T CBaseEntity::InputSetLocalOrigin(inputdata_t&)
 T CBaseEntity::InputSetParent(inputdata_t&)
 T CBaseEntity::InputSetParentAttachment(inputdata_t&)
 T CBaseEntity::InputSetParentAttachmentMaintainOffset(inputdata_t&)
 T CBaseEntity::InputSetTeam(inputdata_t&)
 T CBaseEntity::InputUse(inputdata_t&)
 T CBaseEntity::Intersects(CBaseEntity*)
 T CBaseEntity::InvalidatePhysicsRecursive(int)
 T CBaseEntity::IsAIWalkable()
 T CBaseEntity::IsAlive()
 T CBaseEntity::IsBSPModel() const
 T CBaseEntity::IsBaseCombatWeapon() const
 T CBaseEntity::IsBaseObject() const
 T CBaseEntity::IsBaseTrain() const
 T CBaseEntity::IsCurrentlyTouching() const
 T CBaseEntity::IsDormant()
 T CBaseEntity::IsFloating()
 T CBaseEntity::IsFollowingEntity()
 T CBaseEntity::IsInWorld() const
 T CBaseEntity::IsLockedByMaster()
 T CBaseEntity::IsMoving()
 T CBaseEntity::IsNPC() const
 T CBaseEntity::IsNetClient() const
 T CBaseEntity::IsPlayer() const
 T CBaseEntity::IsPrecacheAllowed()
 T CBaseEntity::IsSimulatingOnAlternateTicks()
 T CBaseEntity::IsStandable() const
 T CBaseEntity::IsTemplate()
 T CBaseEntity::IsTriggered(CBaseEntity*)
 T CBaseEntity::IsViewable()
 T CBaseEntity::KeyValue(char const*, Vector const&)
 T CBaseEntity::KeyValue(char const*, char const*)
 T CBaseEntity::KeyValue(char const*, float)
 T CBaseEntity::KeyValue(char const*, int)
 T CBaseEntity::KeyValueFromFloat(char const*, float)
 T CBaseEntity::KeyValueFromInt(char const*, int)
 T CBaseEntity::KeyValueFromString(char const*, char const*)
 T CBaseEntity::KeyValueFromVector(char const*, Vector const&)
 T CBaseEntity::LocalEyeAngles()
 T CBaseEntity::MakeDormant()
 T CBaseEntity::MakeTracer(Vector const&, CGameTrace const&, int)
 T CBaseEntity::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CBaseEntity::ModifyOrAppendDerivedCriteria(ResponseRules::CriteriaSet&)
 T CBaseEntity::MoveDone()
 T CBaseEntity::MyCombatCharacterPointer()
 T CBaseEntity::MyCombatWeaponPointer()
 T CBaseEntity::MyNPCPointer()
 T CBaseEntity::MyNextBotPointer()
 T CBaseEntity::NameMatchesComplex(char const*)
 T CBaseEntity::NetworkQuantize(Vector&, QAngle&)
 T CBaseEntity::NetworkStateChanged(void*)
 T CBaseEntity::NetworkStateChanged_m_bClientSideRagdoll()
 T CBaseEntity::NetworkStateChanged_m_bClientSideRagdoll(void*)
 T CBaseEntity::NetworkStateChanged_m_fFlags()
 T CBaseEntity::NetworkStateChanged_m_fFlags(void*)
 T CBaseEntity::NetworkStateChanged_m_flFriction()
 T CBaseEntity::NetworkStateChanged_m_flFriction(void*)
 T CBaseEntity::NetworkStateChanged_m_hGroundEntity()
 T CBaseEntity::NetworkStateChanged_m_hGroundEntity(void*)
 T CBaseEntity::NetworkStateChanged_m_iHealth()
 T CBaseEntity::NetworkStateChanged_m_iHealth(void*)
 T CBaseEntity::NetworkStateChanged_m_iMaxHealth()
 T CBaseEntity::NetworkStateChanged_m_iMaxHealth(void*)
 T CBaseEntity::NetworkStateChanged_m_lifeState()
 T CBaseEntity::NetworkStateChanged_m_lifeState(void*)
 T CBaseEntity::NetworkStateChanged_m_nNextThinkTick()
 T CBaseEntity::NetworkStateChanged_m_nNextThinkTick(void*)
 T CBaseEntity::NetworkStateChanged_m_nWaterLevel()
 T CBaseEntity::NetworkStateChanged_m_nWaterLevel(void*)
 T CBaseEntity::NetworkStateChanged_m_takedamage()
 T CBaseEntity::NetworkStateChanged_m_takedamage(void*)
 T CBaseEntity::NetworkStateChanged_m_vecBaseVelocity()
 T CBaseEntity::NetworkStateChanged_m_vecBaseVelocity(void*)
 T CBaseEntity::NetworkStateChanged_m_vecVelocity()
 T CBaseEntity::NetworkStateChanged_m_vecVelocity(void*)
 T CBaseEntity::NetworkStateChanged_m_vecViewOffset()
 T CBaseEntity::NetworkStateChanged_m_vecViewOffset(void*)
 T CBaseEntity::NetworkVar_m_Collision::NetworkStateChanged()
 T CBaseEntity::NetworkVar_m_Collision::NetworkStateChanged(void*)
 T CBaseEntity::NotifyPortalEvent(PortalEvent_t, CPortal_Base2D*)
 T CBaseEntity::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
 T CBaseEntity::ObjectCaps()
 T CBaseEntity::OnControls(CBaseEntity*)
 T CBaseEntity::OnEntityEvent(EntityEvent_t, void*)
 T CBaseEntity::OnGroundChanged(CBaseEntity*, CBaseEntity*)
 T CBaseEntity::OnNewModel()
 T CBaseEntity::OnParseMapDataFinished()
 T CBaseEntity::OnRestore()
 T CBaseEntity::OnSave(IEntitySaveUtils*)
 T CBaseEntity::OnTakeDamage(CTakeDamageInfo const&)
 T CBaseEntity::ParseMapData(CEntityMapData*)
 T CBaseEntity::PassesDamageFilter(CTakeDamageInfo const&)
 T CBaseEntity::PerformCustomPhysics(Vector*, Vector*, QAngle*, QAngle*)
 T CBaseEntity::PerformPush(float)
 T CBaseEntity::PhysicsAddGravityMove(Vector&)
 T CBaseEntity::PhysicsAddHalfGravity(float)
 T CBaseEntity::PhysicsCheckForEntityUntouch()
 T CBaseEntity::PhysicsCheckVelocity()
 T CBaseEntity::PhysicsCheckWater()
 T CBaseEntity::PhysicsCheckWaterTransition()
 T CBaseEntity::PhysicsClipVelocity(Vector const&, Vector const&, Vector&, float)
 T CBaseEntity::PhysicsCustom()
 T CBaseEntity::PhysicsDispatchThink(void (CBaseEntity::*)())
 T CBaseEntity::PhysicsImpact(CBaseEntity*, CGameTrace&)
 T CBaseEntity::PhysicsLandedOnGround(float)
 T CBaseEntity::PhysicsMarkEntitiesAsTouching(CBaseEntity*, CGameTrace&)
 T CBaseEntity::PhysicsMarkEntitiesAsTouchingEventDriven(CBaseEntity*, CGameTrace&)
 T CBaseEntity::PhysicsMarkEntityAsTouched(CBaseEntity*)
 T CBaseEntity::PhysicsNoclip()
 T CBaseEntity::PhysicsNone()
 T CBaseEntity::PhysicsNotifyOtherOfGroundRemoval(CBaseEntity*, CBaseEntity*)
 T CBaseEntity::PhysicsNotifyOtherOfUntouch(CBaseEntity*, CBaseEntity*)
 T CBaseEntity::PhysicsPushEntity(Vector const&, CGameTrace*)
 T CBaseEntity::PhysicsPushMove(float)
 T CBaseEntity::PhysicsPushRotate(float)
 T CBaseEntity::PhysicsPusher()
 T CBaseEntity::PhysicsRelinkChildren(float)
 T CBaseEntity::PhysicsRemoveGroundList(CBaseEntity*)
 T CBaseEntity::PhysicsRemoveTouchedList(CBaseEntity*)
 T CBaseEntity::PhysicsRemoveToucher(CBaseEntity*, touchlink_t*)
 T CBaseEntity::PhysicsRigidChild()
 T CBaseEntity::PhysicsRunSpecificThink(int, void (CBaseEntity::*)())
 T CBaseEntity::PhysicsRunThink(CBaseEntity::thinkmethods_t)
 T CBaseEntity::PhysicsSimulate()
 T CBaseEntity::PhysicsSolidMaskForEntity() const
 T CBaseEntity::PhysicsSplash(Vector const&, Vector const&, float, float)
 T CBaseEntity::PhysicsStep()
 T CBaseEntity::PhysicsStepRecheckGround()
 T CBaseEntity::PhysicsStepRunTimestep(float)
 T CBaseEntity::PhysicsToss()
 T CBaseEntity::PhysicsTouchTriggers(Vector const*)
 T CBaseEntity::PhysicsTryMove(float, CGameTrace*)
 T CBaseEntity::PostClientActive()
 T CBaseEntity::PostClientMessagesSent()
 T CBaseEntity::PostConstructor(char const*)
 T CBaseEntity::Precache()
 T CBaseEntity::PrecacheModel(char const*)
 T CBaseEntity::PrecacheModelComponents(int)
 T CBaseEntity::PrecacheScriptSound(char const*)
 T CBaseEntity::PrefetchScriptSound(char const*)
 T CBaseEntity::ReadKeyField(char const*, variant_t*)
 T CBaseEntity::RecalcHasPlayerChildBit()
 T CBaseEntity::RegisterThinkContext(char const*)
 T CBaseEntity::Remove()
 T CBaseEntity::RemoveAllDecals()
 T CBaseEntity::RemoveDeferred()
 T CBaseEntity::RemoveEffects(int)
 T CBaseEntity::RemoveFlag(int)
 T CBaseEntity::RemoveRecipientsIfNotCloseCaptioning(CRecipientFilter&)
 T CBaseEntity::RemoveSpawnFlags(int)
 T CBaseEntity::RequiredEdictIndex()
 T CBaseEntity::ResolveFlyCollisionBounce(CGameTrace&, Vector&, float)
 T CBaseEntity::ResolveFlyCollisionCustom(CGameTrace&, Vector&)
 T CBaseEntity::ResolveFlyCollisionSlide(CGameTrace&, Vector&)
 T CBaseEntity::Respawn()
 T CBaseEntity::Restore(IRestore&)
 T CBaseEntity::RunOnPostSpawnScripts()
 T CBaseEntity::RunPrecacheScripts()
 T CBaseEntity::RunScript(char const*, char const*)
 T CBaseEntity::RunVScripts()
 T CBaseEntity::SUB_AllowedToFade()
 T CBaseEntity::SUB_CallUseToggle()
 T CBaseEntity::SUB_DoNothing()
 T CBaseEntity::SUB_FadeOut()
 T CBaseEntity::SUB_Remove()
 T CBaseEntity::SUB_StartFadeOut(float, bool)
 T CBaseEntity::SUB_StartFadeOutInstant()
 T CBaseEntity::SUB_Vanish()
 T CBaseEntity::Save(ISave&)
 T CBaseEntity::ScriptEmitSound(char const*)
 T CBaseEntity::ScriptEyePosition()
 T CBaseEntity::ScriptFirstMoveChild()
 T CBaseEntity::ScriptGetAngles()
 T CBaseEntity::ScriptGetBoundingMaxs()
 T CBaseEntity::ScriptGetBoundingMins()
 T CBaseEntity::ScriptGetForward()
 T CBaseEntity::ScriptGetLeft()
 T CBaseEntity::ScriptGetLocalAngularVelocity()
 T CBaseEntity::ScriptGetModelKeyValues()
 T CBaseEntity::ScriptGetModelName() const
 T CBaseEntity::ScriptGetMoveParent()
 T CBaseEntity::ScriptGetRootMoveParent()
 T CBaseEntity::ScriptGetUp()
 T CBaseEntity::ScriptNextMovePeer()
 T CBaseEntity::ScriptSetAngles(float, float, float)
 T CBaseEntity::ScriptSetForward(Vector const&)
 T CBaseEntity::ScriptSetLocalAngularVelocity(float, float, float)
 T CBaseEntity::ScriptSetOrigin(Vector const&)
 T CBaseEntity::ScriptSetOwner(HSCRIPT__*)
 T CBaseEntity::ScriptSetSize(Vector const&, Vector const&)
 T CBaseEntity::ScriptSoundDuration(char const*, char const*)
 T CBaseEntity::ScriptThink()
 T CBaseEntity::ScriptUtilRemove()
 T CBaseEntity::SendDebugPivotOverlay()
 T CBaseEntity::SendOnKilledGameEvent(CTakeDamageInfo const&)
 T CBaseEntity::SendProxy_CellOrigin(SendProp const*, void const*, void const*, DVariant*, int, int)
 T CBaseEntity::SendProxy_CellX(SendProp const*, void const*, void const*, DVariant*, int, int)
 T CBaseEntity::SendProxy_CellY(SendProp const*, void const*, void const*, DVariant*, int, int)
 T CBaseEntity::SendProxy_CellZ(SendProp const*, void const*, void const*, DVariant*, int, int)
 T CBaseEntity::SetAIWalkable(bool)
 T CBaseEntity::SetAbsAngles(QAngle const&)
 T CBaseEntity::SetAbsOrigin(Vector const&)
 T CBaseEntity::SetAbsVelocity(Vector const&)
 T CBaseEntity::SetAllowPrecache(bool)
 T CBaseEntity::SetBlocksLOS(bool)
 T CBaseEntity::SetCheckUntouch(bool)
 T CBaseEntity::SetClassname(char const*)
 T CBaseEntity::SetCollisionBounds(Vector const&, Vector const&)
 T CBaseEntity::SetCollisionGroup(int)
 T CBaseEntity::SetDamage(float)
 T CBaseEntity::SetEffectEntity(CBaseEntity*)
 T CBaseEntity::SetEffects(int)
 T CBaseEntity::SetFriction(float)
 T CBaseEntity::SetGlobalFadeScale(float)
 T CBaseEntity::SetGroundChangeTime(float)
 T CBaseEntity::SetGroundEntity(CBaseEntity*)
 T CBaseEntity::SetHealth(int)
 T CBaseEntity::SetLastThink(int, float)
 T CBaseEntity::SetLocalAngles(QAngle const&)
 T CBaseEntity::SetLocalAngularVelocity(QAngle const&)
 T CBaseEntity::SetLocalOrigin(Vector const&)
 T CBaseEntity::SetLocalVelocity(Vector const&)
 T CBaseEntity::SetMaxHealth(int)
 T CBaseEntity::SetModel(char const*)
 T CBaseEntity::SetModelIndex(int)
 T CBaseEntity::SetMoveCollide(MoveCollide_t)
 T CBaseEntity::SetMoveDoneTime(float)
 T CBaseEntity::SetMoveType(MoveType_t, MoveCollide_t)
 T CBaseEntity::SetName(string_t)
 T CBaseEntity::SetNetworkQuantizeOriginAngAngles(bool)
 T CBaseEntity::SetNextThink(float, char const*)
 T CBaseEntity::SetNextThink(int, float)
 T CBaseEntity::SetOwnerEntity(CBaseEntity*)
 T CBaseEntity::SetParent(CBaseEntity*, int)
 T CBaseEntity::SetParent(string_t, CBaseEntity*, int)
 T CBaseEntity::SetParentAttachment(char const*, char const*, bool)
 T CBaseEntity::SetPlayerSimulated(CBasePlayer*)
 T CBaseEntity::SetPredictionEligible(bool)
 T CBaseEntity::SetPredictionRandomSeed(CUserCmd const*)
 T CBaseEntity::SetRefEHandle(CBaseHandle const&)
 T CBaseEntity::SetRenderMode(RenderMode_t)
 T CBaseEntity::SetScriptOwnerEntity(HSCRIPT__*)
 T CBaseEntity::SetShadowCastDistance(float, float)
 T CBaseEntity::SetSimulationTime(float)
 T CBaseEntity::SetSize(Vector const&, Vector const&)
 T CBaseEntity::SetTextureFrameIndex(int)
 T CBaseEntity::SetTransmit(CCheckTransmitInfo*, bool)
 T CBaseEntity::SetTransmitState(int)
 T CBaseEntity::SetViewOffset(Vector const&)
 T CBaseEntity::SetWaterType(int)
 T CBaseEntity::ShadowCastDistThink()
 T CBaseEntity::ShouldAttractAutoAim(CBaseEntity*)
 T CBaseEntity::ShouldCollide(int, int) const
 T CBaseEntity::ShouldDrawWaterImpacts()
 T CBaseEntity::ShouldSavePhysics()
 T CBaseEntity::ShouldToggle(USE_TYPE, int)
 T CBaseEntity::ShouldTransmit(CCheckTransmitInfo const*)
 T CBaseEntity::SimulateAngles(float)
 T CBaseEntity::Spawn()
 T CBaseEntity::Splash()
 T CBaseEntity::StartBlocked(CBaseEntity*)
 T CBaseEntity::StartTouch(CBaseEntity*)
 T CBaseEntity::StepSimulationThink(float)
 T CBaseEntity::StopFollowingEntity()
 T CBaseEntity::StopLoopingSounds()
 T CBaseEntity::StopSound(char const*)
 T CBaseEntity::StopSound(int, char const*)
 T CBaseEntity::StopSound(int, int, char const*, bool)
 T CBaseEntity::TakeDamage(CTakeDamageInfo const&)
 T CBaseEntity::TakeHealth(float, int)
 T CBaseEntity::TeamID() const
 T CBaseEntity::Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T CBaseEntity::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CBaseEntity::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)
 T CBaseEntity::Think()
 T CBaseEntity::ThinkSet(void (CBaseEntity::*)(), float, char const*)
 T CBaseEntity::ToggleFlag(int)
 T CBaseEntity::Touch(CBaseEntity*)
 T CBaseEntity::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CBaseEntity::TraceAttackToTriggers(CTakeDamageInfo const&, Vector const&, Vector const&, Vector const&)
 T CBaseEntity::TraceBleed(float, Vector const&, CGameTrace*, int)
 T CBaseEntity::UnsetPlayerSimulated()
 T CBaseEntity::UpdateBaseVelocity()
 T CBaseEntity::UpdateCell()
 T CBaseEntity::UpdateObjectCapsCache()
 T CBaseEntity::UpdateOnRemove()
 T CBaseEntity::UpdatePaintPowersFromContacts()
 T CBaseEntity::UpdatePhysicsShadowToCurrentPosition(float)
 T CBaseEntity::UpdateShotStatistics(CGameTrace const&)
 T CBaseEntity::UpdateTransmitState()
 T CBaseEntity::UpdateWaterState()
 T CBaseEntity::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CBaseEntity::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CBaseEntity::VPhysicsDestroyObject()
 T CBaseEntity::VPhysicsFriction(IPhysicsObject*, float, int, int)
 T CBaseEntity::VPhysicsGetObjectList(IPhysicsObject**, int)
 T CBaseEntity::VPhysicsInitNormal(SolidType_t, int, bool, solid_t*)
 T CBaseEntity::VPhysicsInitShadow(bool, bool, solid_t*)
 T CBaseEntity::VPhysicsInitStatic()
 T CBaseEntity::VPhysicsIsFlesh()
 T CBaseEntity::VPhysicsSetObject(IPhysicsObject*)
 T CBaseEntity::VPhysicsShadowCollision(int, gamevcollisionevent_t*)
 T CBaseEntity::VPhysicsShadowUpdate(IPhysicsObject*)
 T CBaseEntity::VPhysicsSwapObject(IPhysicsObject*)
 T CBaseEntity::VPhysicsTakeDamage(CTakeDamageInfo const&)
 T CBaseEntity::VPhysicsUpdate(IPhysicsObject*)
 T CBaseEntity::VPhysicsUpdatePusher(IPhysicsObject*)
 T CBaseEntity::VScriptPrecacheScriptSound(char const*)
 T CBaseEntity::ValidateScriptScope()
 T CBaseEntity::ViewPunch(QAngle const&)
 T CBaseEntity::WakeRestingObjects()
 T CBaseEntity::WorldSpaceCenter() const
 T CBaseEntity::YouForgotToImplementOrDeclareServerClass()
 T CBaseEntity::entindex() const
 T CBaseEntity::operator delete(void*)
 T CBaseEntity::operator new(unsigned long)
 T CBaseEntity::~CBaseEntity()
 T CBaseEntityClassList::CBaseEntityClassList()
 T CBaseEntityClassList::~CBaseEntityClassList()
 T CBaseEntityList::AddEntityAtSlot(IHandleEntity*, int, int)
 T CBaseEntityList::AddNetworkableEntity(IHandleEntity*, int, int)
 T CBaseEntityList::AddNonNetworkableEntity(IHandleEntity*)
 T CBaseEntityList::CBaseEntityList()
 T CBaseEntityList::OnAddEntity(IHandleEntity*, CBaseHandle)
 T CBaseEntityList::OnRemoveEntity(IHandleEntity*, CBaseHandle)
 T CBaseEntityList::RemoveEntity(CBaseHandle)
 T CBaseEntityList::RemoveEntityAtSlot(int)
 T CBaseEntityList::~CBaseEntityList()
 T CBaseEntityOutput::AddEventAction(CEventAction*)
 T CBaseEntityOutput::FireOutput(variant_t, CBaseEntity*, CBaseEntity*, float)
 T CBaseEntityOutput::GetMaxDelay()
 T CBaseEntityOutput::NumberOfElements()
 T CBaseEntityOutput::RemoveEventAction(CEventAction*)
 T CBaseEntityOutput::Restore(IRestore&, int)
 T CBaseEntityOutput::~CBaseEntityOutput()
 T CBaseEntityScriptInstanceHelper::BindOnRead(HSCRIPT__*, void*, char const*)
 T CBaseEntityScriptInstanceHelper::ToString(void*, char*, int)
 T CBaseFilter::GetDataDescMap()
 T CBaseFilter::InputTestActivator(inputdata_t&)
 T CBaseFilter::PassesDamageFilter(CTakeDamageInfo const&)
 T CBaseFilter::PassesDamageFilterImpl(CTakeDamageInfo const&)
 T CBaseFilter::PassesFilter(CBaseEntity*, CBaseEntity*)
 T CBaseFilter::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T CBaseFilter::~CBaseFilter()
 T CBaseFire::CBaseFire()
 T CBaseFire::Enable(int)
 T CBaseFire::GetDataDescMap()
 T CBaseFire::Scale(float, float)
 T CBaseFire::Scale(float, float, float)
 T CBaseFire::~CBaseFire()
 T CBaseFlex::AddFlexAnimation(CSceneEventInfo*)
 T CBaseFlex::AddFlexSetting(char const*, float, flexsettinghdr_t const*, bool)
 T CBaseFlex::AddSceneEvent(CChoreoScene*, CChoreoEvent*, CBaseEntity*, CSceneEntity*)
 T CBaseFlex::CBaseFlex()
 T CBaseFlex::CheckSceneEvent(float, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::CheckSceneEventCompletion(CSceneEventInfo*, float, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::ClearSceneEvent(CSceneEventInfo*, bool, bool)
 T CBaseFlex::ClearSceneEvents(CChoreoScene*, bool)
 T CBaseFlex::DoBodyLean()
 T CBaseFlex::EnsureTranslations(flexsettinghdr_t const*)
 T CBaseFlex::EnterSceneSequence(CChoreoScene*, CChoreoEvent*, bool)
 T CBaseFlex::FindFlexController(char const*)
 T CBaseFlex::FindSceneFile(char const*)
 T CBaseFlex::FlexControllerLocalToGlobal(flexsettinghdr_t const*, int)
 T CBaseFlex::FlexSettingLessFunc(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&)
 T CBaseFlex::GetDataDescMap()
 T CBaseFlex::GetFlexWeight(LocalFlexController_t)
 T CBaseFlex::GetScriptDesc()
 T CBaseFlex::GetServerClass()
 T CBaseFlex::HandleStartGestureSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*, CChoreoActor*)
 T CBaseFlex::HandleStartSequenceSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*, CChoreoActor*)
 T CBaseFlex::PermitResponse(float)
 T CBaseFlex::PlayAutoGeneratedSoundScene(char const*)
 T CBaseFlex::PlayScene(char const*, float, ResponseRules::CRR_Response*, IRecipientFilter*)
 T CBaseFlex::ProcessFacingSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::ProcessFlexAnimationSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::ProcessFlexSettingSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::ProcessGestureSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::ProcessLookAtSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::ProcessMoveToSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::ProcessSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::ProcessSceneEvents()
 T CBaseFlex::ProcessSequenceSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T CBaseFlex::RemoveChoreoScene(CChoreoScene*, bool)
 T CBaseFlex::RemoveSceneEvent(CChoreoScene*, CChoreoEvent*, bool)
 T CBaseFlex::ScriptGetOldestScene()
 T CBaseFlex::ScriptGetSceneByIndex(int)
 T CBaseFlex::ScriptPlayScene(char const*, float)
 T CBaseFlex::SetFlexWeight(LocalFlexController_t, float)
 T CBaseFlex::SetModel(char const*)
 T CBaseFlex::SetPermitResponse(float)
 T CBaseFlex::SetViewtarget(Vector const&)
 T CBaseFlex::StartChoreoScene(CChoreoScene*)
 T CBaseFlex::StartSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*, CChoreoActor*, CBaseEntity*)
 T CBaseFlex::Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T CBaseFlex::YouForgotToImplementOrDeclareServerClass()
 T CBaseFlex::~CBaseFlex()
 T CBaseGameStats::AddDataForSend(KeyValues*, StatSendType_t)
 T CBaseGameStats::AppendCustomDataToSaveBuffer(CUtlBuffer&)
 T CBaseGameStats::AutoSave_OnInit()
 T CBaseGameStats::AutoSave_OnLevelInit()
 T CBaseGameStats::AutoSave_OnLevelShutdown()
 T CBaseGameStats::AutoSave_OnMapChange()
 T CBaseGameStats::AutoSave_OnShutdown()
 T CBaseGameStats::AutoUpload_OnInit()
 T CBaseGameStats::AutoUpload_OnLevelInit()
 T CBaseGameStats::AutoUpload_OnLevelShutdown()
 T CBaseGameStats::AutoUpload_OnMapChange()
 T CBaseGameStats::AutoUpload_OnShutdown()
 T CBaseGameStats::CBaseGameStats()
 T CBaseGameStats::Clear()
 T CBaseGameStats::Event_Commentary()
 T CBaseGameStats::Event_CrateSmashed()
 T CBaseGameStats::Event_Credits()
 T CBaseGameStats::Event_DecrementPlayerEnteredNoClip(CBasePlayer*)
 T CBaseGameStats::Event_FlippedVehicle(CBasePlayer*, CPropVehicleDriveable*)
 T CBaseGameStats::Event_IncrementCountedStatistic(Vector const&, char const*, float)
 T CBaseGameStats::Event_Init()
 T CBaseGameStats::Event_LevelInit()
 T CBaseGameStats::Event_LevelShutdown(float)
 T CBaseGameStats::Event_LoadGame()
 T CBaseGameStats::Event_MapChange(char const*, char const*)
 T CBaseGameStats::Event_PlayerConnected(CBasePlayer*)
 T CBaseGameStats::Event_PlayerDamage(CBasePlayer*, CTakeDamageInfo const&)
 T CBaseGameStats::Event_PlayerDisconnected(CBasePlayer*)
 T CBaseGameStats::Event_PlayerEnteredGodMode(CBasePlayer*)
 T CBaseGameStats::Event_PlayerEnteredNoClip(CBasePlayer*)
 T CBaseGameStats::Event_PlayerKilled(CBasePlayer*, CTakeDamageInfo const&)
 T CBaseGameStats::Event_PlayerKilledOther(CBasePlayer*, CBaseEntity*, CTakeDamageInfo const&)
 T CBaseGameStats::Event_PlayerTraveled(CBasePlayer*, float, bool, bool)
 T CBaseGameStats::Event_PreSaveGameLoaded(char const*, bool)
 T CBaseGameStats::Event_Punted(CBaseEntity*)
 T CBaseGameStats::Event_SaveGame()
 T CBaseGameStats::Event_Shutdown()
 T CBaseGameStats::Event_WeaponFired(CBasePlayer*, bool, char const*)
 T CBaseGameStats::Event_WeaponHit(CBasePlayer*, bool, char const*, CTakeDamageInfo const&)
 T CBaseGameStats::GetStatSaveFileName()
 T CBaseGameStats::GetStatUploadRegistryKeyName()
 T CBaseGameStats::HaveValidData()
 T CBaseGameStats::LoadCustomDataFromBuffer(CUtlBuffer&)
 T CBaseGameStats::LoadFromFile()
 T CBaseGameStats::LoadingEvent_PlayerIDDifferentThanLoadedStats()
 T CBaseGameStats::OnInit(CBaseGameStats*, char const*)
 T CBaseGameStats::SaveToFileNOW(bool)
 T CBaseGameStats::ShouldSendDataOnAppShutdown()
 T CBaseGameStats::ShouldSendDataOnLevelShutdown()
 T CBaseGameStats::ShouldTrackStandardStats()
 T CBaseGameStats::StatTrackingEnabledForMod()
 T CBaseGameStats::StatsLog(char const*, ...)
 T CBaseGameStats::UploadStatsFileNOW()
 T CBaseGameStats::UseOldFormat()
 T CBaseGameStats::UserPlayedAllTheMaps()
 T CBaseGameStats::~CBaseGameStats()
 T CBaseGameStats_Driver::CBaseGameStats_Driver()
 T CBaseGameStats_Driver::CollectData(StatSendType_t)
 T CBaseGameStats_Driver::FrameUpdatePostEntityThink()
 T CBaseGameStats_Driver::Init()
 T CBaseGameStats_Driver::LevelInitPreEntity()
 T CBaseGameStats_Driver::LevelShutdownPreEntity()
 T CBaseGameStats_Driver::OnRestore()
 T CBaseGameStats_Driver::OnSave()
 T CBaseGameStats_Driver::PossibleMapChange()
 T CBaseGameStats_Driver::ResetData()
 T CBaseGameStats_Driver::SendData()
 T CBaseGameStats_Driver::Shutdown()
 T CBaseGameStats_Driver::~CBaseGameStats_Driver()
 T CBaseGameSystem::FrameUpdatePostEntityThink()
 T CBaseGameSystem::FrameUpdatePreEntityThink()
 T CBaseGameSystem::Init()
 T CBaseGameSystem::IsPerFrame()
 T CBaseGameSystem::LevelInitPostEntity()
 T CBaseGameSystem::LevelInitPreEntity()
 T CBaseGameSystem::LevelShutdownPostEntity()
 T CBaseGameSystem::LevelShutdownPreEntity()
 T CBaseGameSystem::Name()
 T CBaseGameSystem::OnRestore()
 T CBaseGameSystem::OnSave()
 T CBaseGameSystem::PostInit()
 T CBaseGameSystem::PreClientUpdate()
 T CBaseGameSystem::SafeRemoveIfDesired()
 T CBaseGameSystem::Shutdown()
 T CBaseGameSystemPerFrame::FrameUpdatePostEntityThink()
 T CBaseGameSystemPerFrame::FrameUpdatePreEntityThink()
 T CBaseGameSystemPerFrame::Init()
 T CBaseGameSystemPerFrame::IsPerFrame()
 T CBaseGameSystemPerFrame::LevelInitPostEntity()
 T CBaseGameSystemPerFrame::LevelInitPreEntity()
 T CBaseGameSystemPerFrame::LevelShutdownPostEntity()
 T CBaseGameSystemPerFrame::LevelShutdownPreEntity()
 T CBaseGameSystemPerFrame::OnRestore()
 T CBaseGameSystemPerFrame::OnSave()
 T CBaseGameSystemPerFrame::PostInit()
 T CBaseGameSystemPerFrame::PreClientUpdate()
 T CBaseGameSystemPerFrame::SafeRemoveIfDesired()
 T CBaseGameSystemPerFrame::Shutdown()
 T CBaseGrenade::BloodColor()
 T CBaseGrenade::BounceSound()
 T CBaseGrenade::BounceTouch(CBaseEntity*)
 T CBaseGrenade::CBaseGrenade()
 T CBaseGrenade::DangerSoundThink()
 T CBaseGrenade::Detonate()
 T CBaseGrenade::DetonateUse(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CBaseGrenade::Event_Killed(CTakeDamageInfo const&)
 T CBaseGrenade::Explode(CGameTrace*, int)
 T CBaseGrenade::ExplodeTouch(CBaseEntity*)
 T CBaseGrenade::GetBlastForce()
 T CBaseGrenade::GetDamage()
 T CBaseGrenade::GetDamageRadius()
 T CBaseGrenade::GetDataDescMap()
 T CBaseGrenade::GetServerClass()
 T CBaseGrenade::GetShakeAmplitude()
 T CBaseGrenade::GetShakeRadius()
 T CBaseGrenade::GetThrower()
 T CBaseGrenade::NetworkStateChanged_m_fFlags()
 T CBaseGrenade::NetworkStateChanged_m_fFlags(void*)
 T CBaseGrenade::NetworkStateChanged_m_vecVelocity()
 T CBaseGrenade::NetworkStateChanged_m_vecVelocity(void*)
 T CBaseGrenade::ObjectCaps()
 T CBaseGrenade::PreDetonate()
 T CBaseGrenade::Precache()
 T CBaseGrenade::SetDamage(float)
 T CBaseGrenade::SetDamageRadius(float)
 T CBaseGrenade::SetThrower(CBaseCombatCharacter*)
 T CBaseGrenade::SlideTouch(CBaseEntity*)
 T CBaseGrenade::Smoke()
 T CBaseGrenade::TumbleThink()
 T CBaseGrenade::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CBaseGrenade::YouForgotToImplementOrDeclareServerClass()
 T CBaseGrenade::~CBaseGrenade()
 T CBaseGrenadeConcussion::ExplodeConcussion(CBaseEntity*)
 T CBaseGrenadeConcussion::FallThink()
 T CBaseGrenadeConcussion::GetDataDescMap()
 T CBaseGrenadeConcussion::Precache()
 T CBaseGrenadeConcussion::Spawn()
 T CBaseGrenadeConcussion::~CBaseGrenadeConcussion()
 T CBaseGrenadeContact::Precache()
 T CBaseGrenadeContact::Spawn()
 T CBaseGrenadeContact::~CBaseGrenadeContact()
 T CBaseGrenadeTimed::Precache()
 T CBaseGrenadeTimed::Spawn()
 T CBaseGrenadeTimed::~CBaseGrenadeTimed()
 T CBaseHLCombatWeapon::AddViewmodelBob(CBaseViewModel*, Vector&, QAngle&)
 T CBaseHLCombatWeapon::CalcViewmodelBob()
 T CBaseHLCombatWeapon::CanLower()
 T CBaseHLCombatWeapon::Deploy()
 T CBaseHLCombatWeapon::GetBulletSpread(WeaponProficiency_t)
 T CBaseHLCombatWeapon::GetDataDescMap()
 T CBaseHLCombatWeapon::GetDefaultProficiencyValues()
 T CBaseHLCombatWeapon::GetProficiencyValues()
 T CBaseHLCombatWeapon::GetServerClass()
 T CBaseHLCombatWeapon::GetSpreadBias(WeaponProficiency_t)
 T CBaseHLCombatWeapon::Holster(CBaseCombatWeapon*)
 T CBaseHLCombatWeapon::IsSpecialSuitAbility()
 T CBaseHLCombatWeapon::ItemHolsterFrame()
 T CBaseHLCombatWeapon::Lower()
 T CBaseHLCombatWeapon::Ready()
 T CBaseHLCombatWeapon::SendWeaponAnim(int)
 T CBaseHLCombatWeapon::WeaponIdle()
 T CBaseHLCombatWeapon::WeaponShouldBeLowered()
 T CBaseHLCombatWeapon::YouForgotToImplementOrDeclareServerClass()
 T CBaseHLCombatWeapon::~CBaseHLCombatWeapon()
 T CBaseMoveBehavior::Activate()
 T CBaseMoveBehavior::GetDataDescMap()
 T CBaseMoveBehavior::IsMoving()
 T CBaseMoveBehavior::MoveDone()
 T CBaseMoveBehavior::Spawn()
 T CBaseMoveBehavior::StartMoving(int)
 T CBaseMoveBehavior::StopMoving()
 T CBaseMoveBehavior::~CBaseMoveBehavior()
 T CBaseMultiplayerPlayer::CBaseMultiplayerPlayer()
 T CBaseMultiplayerPlayer::CalculateTeamBalanceScore()
 T CBaseMultiplayerPlayer::CanHearAndReadChatFrom(CBasePlayer*)
 T CBaseMultiplayerPlayer::CanSpeak()
 T CBaseMultiplayerPlayer::CanSpeakVoiceCommand()
 T CBaseMultiplayerPlayer::ClientCommand(CCommand const&)
 T CBaseMultiplayerPlayer::CreateExpresser()
 T CBaseMultiplayerPlayer::GetExpresser()
 T CBaseMultiplayerPlayer::GetMultiplayerExpresser()
 T CBaseMultiplayerPlayer::GetScriptDesc()
 T CBaseMultiplayerPlayer::GetSteamID(CSteamID*)
 T CBaseMultiplayerPlayer::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CBaseMultiplayerPlayer::NoteSpokeVoiceCommand(char const*)
 T CBaseMultiplayerPlayer::OnAchievementEarned(int)
 T CBaseMultiplayerPlayer::PostConstructor(char const*)
 T CBaseMultiplayerPlayer::Precache()
 T CBaseMultiplayerPlayer::ShouldShowVoiceSubtitleToEnemy()
 T CBaseMultiplayerPlayer::Spawn()
 T CBaseMultiplayerPlayer::SpeakConceptIfAllowed(int, char const*, char*, unsigned long, IRecipientFilter*)
 T CBaseMultiplayerPlayer::SpeakIfAllowed(CAI_Concept, SpeechPriorityType, char const*, char*, unsigned long, IRecipientFilter*)
 T CBaseMultiplayerPlayer::~CBaseMultiplayerPlayer()
 T CBaseNPCMaker::CanMakeNPC(bool)
 T CBaseNPCMaker::ChildPostSpawn(CAI_BaseNPC*)
 T CBaseNPCMaker::ChildPreSpawn(CAI_BaseNPC*)
 T CBaseNPCMaker::DeathNotice(CBaseEntity*)
 T CBaseNPCMaker::Disable()
 T CBaseNPCMaker::Enable()
 T CBaseNPCMaker::GetDataDescMap()
 T CBaseNPCMaker::HumanHullFits(Vector const&)
 T CBaseNPCMaker::InputAddMaxChildren(inputdata_t&)
 T CBaseNPCMaker::InputDisable(inputdata_t&)
 T CBaseNPCMaker::InputEnable(inputdata_t&)
 T CBaseNPCMaker::InputSetMaxChildren(inputdata_t&)
 T CBaseNPCMaker::InputSetMaxLiveChildren(inputdata_t&)
 T CBaseNPCMaker::InputSetSpawnFrequency(inputdata_t&)
 T CBaseNPCMaker::InputSpawnNPC(inputdata_t&)
 T CBaseNPCMaker::InputToggle(inputdata_t&)
 T CBaseNPCMaker::IsDepleted()
 T CBaseNPCMaker::MakerThink()
 T CBaseNPCMaker::ObjectCaps()
 T CBaseNPCMaker::Spawn()
 T CBaseNPCMaker::~CBaseNPCMaker()
 T CBasePaintBlob::BlobHitSolid(CBaseEntity*)
 T CBasePaintBlob::CBasePaintBlob()
 T CBasePaintBlob::CheckCollision(BlobCollisionRecord*, int, Vector const&)
 T CBasePaintBlob::CheckCollisionAgainstWorldAndStaticProps(BlobCollisionRecord&, float&)
 T CBasePaintBlob::CheckCollisionBoxAgainstWorldAndStaticProps()
 T CBasePaintBlob::CheckCollisionThroughPortal(BlobCollisionRecord*, int, Vector const&)
 T CBasePaintBlob::GetContactNormal() const
 T CBasePaintBlob::GetCurrentBeam() const
 T CBasePaintBlob::GetGhostMatrix(VMatrix&)
 T CBasePaintBlob::GetPosition() const
 T CBasePaintBlob::GetRadiusScale() const
 T CBasePaintBlob::GetVelocity() const
 T CBasePaintBlob::Init(Vector const&, Vector const&, int, float, float, CBaseEntity*, bool, bool)
 T CBasePaintBlob::IsStreaking() const
 T CBasePaintBlob::PaintBlobCheckShouldStreak(CGameTrace const&)
 T CBasePaintBlob::PaintBlobMoveThroughPortal(float, CPortal_Base2D*, Vector const&, Vector const&)
 T CBasePaintBlob::PaintBlobStreakPaint(Vector const&)
 T CBasePaintBlob::PlayEffect(Vector const&, Vector const&)
 T CBasePaintBlob::ResolveCollision(bool&, BlobCollisionRecord const&, Vector&, float)
 T CBasePaintBlob::SetPosition(Vector const&)
 T CBasePaintBlob::SetShouldPlaySound(bool)
 T CBasePaintBlob::SetTractorBeam(CTrigger_TractorBeam*)
 T CBasePaintBlob::SetVelocity(Vector const&)
 T CBasePaintBlob::ShouldDeleteThis() const
 T CBasePaintBlob::ShouldPlayEffect() const
 T CBasePaintBlob::ShouldPlaySound() const
 T CBasePaintBlob::UpdateBlobCollision(float, Vector const&, Vector&)
 T CBasePaintBlob::UpdateBlobPostCollision(float)
 T CBasePaintBlob::~CBasePaintBlob()
 T CBaseParticleEntity::Activate()
 T CBaseParticleEntity::CBaseParticleEntity()
 T CBaseParticleEntity::FollowEntity(CBaseEntity*)
 T CBaseParticleEntity::GetServerClass()
 T CBaseParticleEntity::SetLifetime(float)
 T CBaseParticleEntity::Think()
 T CBaseParticleEntity::UpdateTransmitState()
 T CBaseParticleEntity::YouForgotToImplementOrDeclareServerClass()
 T CBaseParticleEntity::~CBaseParticleEntity()
 T CBasePlatTrain::GetDataDescMap()
 T CBasePlatTrain::IsTogglePlat()
 T CBasePlatTrain::KeyValue(char const*, char const*)
 T CBasePlatTrain::PlayMovingSound()
 T CBasePlatTrain::Precache()
 T CBasePlatTrain::~CBasePlatTrain()
 T CBasePlayer::Activate()
 T CBasePlayer::ActivateMovementConstraint(CBaseEntity*, Vector const&, float, float, float, bool)
 T CBasePlayer::ActivePlayerCombatCharacter()
 T CBasePlayer::AddPictureInPicturePlayer(CBasePlayer*)
 T CBasePlayer::AddPoints(int, bool)
 T CBasePlayer::AddPointsToTeam(int, bool)
 T CBasePlayer::AddSplitScreenPlayer(CBasePlayer*)
 T CBasePlayer::AddToPlayerSimulationList(CBaseEntity*)
 T CBasePlayer::AdjustPlayerTimeBase(int)
 T CBasePlayer::AllowImmediateDecalPainting()
 T CBasePlayer::AttemptToExitFreezeCam()
 T CBasePlayer::AutoaimDeflection(Vector&, autoaim_params_t&)
 T CBasePlayer::BodyAngles()
 T CBasePlayer::BodyTarget(Vector const&, bool)
 T CBasePlayer::BumpWeapon(CBaseCombatWeapon*)
 T CBasePlayer::CBasePlayer()
 T CBasePlayer::CacheVehicleView()
 T CBasePlayer::CalcPlayerView(Vector&, QAngle&, float&)
 T CBasePlayer::CalcRoll(QAngle const&, Vector const&, float, float)
 T CBasePlayer::CalcViewBob(Vector&)
 T CBasePlayer::CanBreatheUnderwater() const
 T CBasePlayer::CanEnterVehicle(IServerVehicle*, int)
 T CBasePlayer::CanHearAndReadChatFrom(CBasePlayer*)
 T CBasePlayer::CanPickupObject(CBaseEntity*, float, float)
 T CBasePlayer::CanRecoverCurrentDrowningDamage() const
 T CBasePlayer::CanSpeak()
 T CBasePlayer::ChangeTeam(int)
 T CBasePlayer::ChangeTeam(int, bool, bool)
 T CBasePlayer::CheatImpulseCommands(int)
 T CBasePlayer::CheckChatText(char*, int)
 T CBasePlayer::CheckObserverSettings()
 T CBasePlayer::CheckSuitUpdate()
 T CBasePlayer::CheckTimeBasedDamage()
 T CBasePlayer::CheckTrainUpdate()
 T CBasePlayer::Classify()
 T CBasePlayer::ClearPlayerSimulationList()
 T CBasePlayer::ClearUseEntity()
 T CBasePlayer::ClearZoomOwner()
 T CBasePlayer::ClientCommand(CCommand const&)
 T CBasePlayer::CommitSuicide(Vector const&, bool, bool)
 T CBasePlayer::CommitSuicide(bool, bool)
 T CBasePlayer::CreateCorpse()
 T CBasePlayer::CreatePlayer(char const*, edict_t*)
 T CBasePlayer::CreateRagdollEntity()
 T CBasePlayer::CreateViewModel(int)
 T CBasePlayer::DamageEffect(float, int)
 T CBasePlayer::DeactivateMovementConstraint()
 T CBasePlayer::DeathSound(CTakeDamageInfo const&)
 T CBasePlayer::DestroyViewModels()
 T CBasePlayer::DoImpactEffect(CGameTrace&, int)
 T CBasePlayer::DoMuzzleFlash()
 T CBasePlayer::DoubleCheckUseNPC(CBaseEntity*, Vector const&, Vector const&)
 T CBasePlayer::DrawDebugGeometryOverlays()
 T CBasePlayer::Duck()
 T CBasePlayer::DumpPerfToRecipient(CBasePlayer*, int)
 T CBasePlayer::EnableControl(bool)
 T CBasePlayer::EnsureSplitScreenTeam()
 T CBasePlayer::EntSelectSpawnPoint()
 T CBasePlayer::EquipSuit(bool)
 T CBasePlayer::Event_Dying()
 T CBasePlayer::Event_Killed(CTakeDamageInfo const&)
 T CBasePlayer::Event_KilledOther(CBaseEntity*, CTakeDamageInfo const&)
 T CBasePlayer::ExitLadder()
 T CBasePlayer::EyeAngles()
 T CBasePlayer::EyePosition()
 T CBasePlayer::EyePositionAndVectors(Vector*, Vector*, Vector*, Vector*)
 T CBasePlayer::EyeVectors(Vector*, Vector*, Vector*)
 T CBasePlayer::FindEntityClassForward(char*)
 T CBasePlayer::FindEntityForward(bool)
 T CBasePlayer::FindNextObserverTarget(bool)
 T CBasePlayer::FindPickerAILink()
 T CBasePlayer::FindPickerAINode(int)
 T CBasePlayer::FindPickerEntity()
 T CBasePlayer::FindPickerEntityClass(char*)
 T CBasePlayer::FindUseEntity()
 T CBasePlayer::FirePlayerProxyOutput(char const*, variant_t, CBaseEntity*, CBaseEntity*)
 T CBasePlayer::FlashlightIsOn()
 T CBasePlayer::FlashlightTurnOff(bool)
 T CBasePlayer::FlashlightTurnOn(bool)
 T CBasePlayer::ForceButtons(int)
 T CBasePlayer::ForceChangeTeam(int)
 T CBasePlayer::ForceClientDllUpdate()
 T CBasePlayer::ForceDropOfCarriedPhysObjects(CBaseEntity*)
 T CBasePlayer::ForceObserverMode(int)
 T CBasePlayer::ForceOrigin(Vector const&)
 T CBasePlayer::ForceRespawn()
 T CBasePlayer::ForceSimulation()
 T CBasePlayer::GetAirTime()
 T CBasePlayer::GetAutoaimScore(Vector const&, Vector const&, Vector const&, CBaseEntity*, float, CBaseCombatWeapon*)
 T CBasePlayer::GetAutoaimVector(autoaim_params_t&)
 T CBasePlayer::GetAutoaimVector(float)
 T CBasePlayer::GetAutoaimVector(float, float)
 T CBasePlayer::GetAutoaimVector(float, float, float, AimResults*)
 T CBasePlayer::GetCharacterDisplayName()
 T CBasePlayer::GetCrossPlayPlatform() const
 T CBasePlayer::GetDataDescMap()
 T CBasePlayer::GetDefaultFOV() const
 T CBasePlayer::GetDelayTicks()
 T CBasePlayer::GetExpresser()
 T CBasePlayer::GetFOV()
 T CBasePlayer::GetFOVDistanceAdjustFactorForNetworking()
 T CBasePlayer::GetFOVForNetworking()
 T CBasePlayer::GetHeldObjectMass(IPhysicsObject*)
 T CBasePlayer::GetInVehicle(IServerVehicle*, int)
 T CBasePlayer::GetLadderSurface(Vector const&)
 T CBasePlayer::GetLastKnownArea() const
 T CBasePlayer::GetNetworkIDString()
 T CBasePlayer::GetNextObserverSearchStartPoint(bool)
 T CBasePlayer::GetObserverMode()
 T CBasePlayer::GetObserverTarget()
 T CBasePlayer::GetPhysicsImpactDamageTable()
 T CBasePlayer::GetPlayerMaxs() const
 T CBasePlayer::GetPlayerMins() const
 T CBasePlayer::GetPlayerModelName()
 T CBasePlayer::GetPlayerName() const
 T CBasePlayer::GetPlayerProxy()
 T CBasePlayer::GetPotentialUseEntity()
 T CBasePlayer::GetPreviouslyPredictedOrigin() const
 T CBasePlayer::GetPunchAngle()
 T CBasePlayer::GetReplayEntity()
 T CBasePlayer::GetScriptDesc()
 T CBasePlayer::GetServerClass()
 T CBasePlayer::GetSmoothedVelocity()
 T CBasePlayer::GetSoundscapeListener()
 T CBasePlayer::GetSplitScreenAndPictureInPicturePlayers()
 T CBasePlayer::GetSplitScreenPlayerOwner()
 T CBasePlayer::GetSplitScreenPlayerSlot()
 T CBasePlayer::GetSplitScreenPlayers()
 T CBasePlayer::GetStepSoundVelocities(float*, float*)
 T CBasePlayer::GetTimeBase() const
 T CBasePlayer::GetTracerType()
 T CBasePlayer::GetUseEntity()
 T CBasePlayer::GetVehicle()
 T CBasePlayer::GetVehicleEntity()
 T CBasePlayer::GetViewModel(int)
 T CBasePlayer::GiveNamedItem(char const*, int, bool)
 T CBasePlayer::HandleAnimEvent(animevent_t*)
 T CBasePlayer::HandleFuncTrain()
 T CBasePlayer::HasAttachedSplitScreenPlayers() const
 T CBasePlayer::HasNamedPlayerItem(char const*)
 T CBasePlayer::HasUnlockableWeapons(int)
 T CBasePlayer::HasWeapons()
 T CBasePlayer::HideViewModels()
 T CBasePlayer::Hints()
 T CBasePlayer::ImpulseCommands()
 T CBasePlayer::IncrementArmorValue(int, int)
 T CBasePlayer::IncrementDeathCount(int)
 T CBasePlayer::IncrementEFNoInterpParity()
 T CBasePlayer::IncrementFragCount(int)
 T CBasePlayer::InitColorCorrectionController()
 T CBasePlayer::InitFogController()
 T CBasePlayer::InitHUD()
 T CBasePlayer::InitPostProcessController()
 T CBasePlayer::InitVCollision(Vector const&, Vector const&)
 T CBasePlayer::InitialSpawn()
 T CBasePlayer::InputSetFogController(inputdata_t&)
 T CBasePlayer::InputSetHUDVisibility(inputdata_t&)
 T CBasePlayer::InputSetHealth(inputdata_t&)
 T CBasePlayer::IsBot() const
 T CBasePlayer::IsDead() const
 T CBasePlayer::IsFakeClient() const
 T CBasePlayer::IsFollowingPhysics()
 T CBasePlayer::IsIlluminatedByFlashlight(CBaseEntity*, float*)
 T CBasePlayer::IsInAVehicle() const
 T CBasePlayer::IsNetClient() const
 T CBasePlayer::IsOnLadder()
 T CBasePlayer::IsPlayer() const
 T CBasePlayer::IsReadyToPlay()
 T CBasePlayer::IsReadyToSpawn()
 T CBasePlayer::IsSplitScreenPlayer() const
 T CBasePlayer::IsSplitScreenUserOnEdict(edict_t*)
 T CBasePlayer::IsUseableEntity(CBaseEntity*, unsigned int)
 T CBasePlayer::IsValidObserverTarget(CBaseEntity*)
 T CBasePlayer::ItemPostFrame()
 T CBasePlayer::ItemPreFrame()
 T CBasePlayer::Jump()
 T CBasePlayer::JumptoPosition(Vector const&, QAngle const&)
 T CBasePlayer::LeaveVehicle(Vector const&, QAngle const&)
 T CBasePlayer::LocalEyeAngles()
 T CBasePlayer::MakeTracer(Vector const&, CGameTrace const&, int)
 T CBasePlayer::ModeWantsSpectatorGUI(int)
 T CBasePlayer::ModifyOrAppendPlayerCriteria(ResponseRules::CriteriaSet&)
 T CBasePlayer::NetworkStateChanged_m_ArmorValue()
 T CBasePlayer::NetworkStateChanged_m_ArmorValue(void*)
 T CBasePlayer::NetworkStateChanged_m_fFlags()
 T CBasePlayer::NetworkStateChanged_m_fFlags(void*)
 T CBasePlayer::NetworkStateChanged_m_flFriction()
 T CBasePlayer::NetworkStateChanged_m_flFriction(void*)
 T CBasePlayer::NetworkStateChanged_m_hGroundEntity()
 T CBasePlayer::NetworkStateChanged_m_hGroundEntity(void*)
 T CBasePlayer::NetworkStateChanged_m_iAmmo()
 T CBasePlayer::NetworkStateChanged_m_iAmmo(void*)
 T CBasePlayer::NetworkStateChanged_m_iHealth()
 T CBasePlayer::NetworkStateChanged_m_iHealth(void*)
 T CBasePlayer::NetworkStateChanged_m_lifeState()
 T CBasePlayer::NetworkStateChanged_m_lifeState(void*)
 T CBasePlayer::NetworkStateChanged_m_nNextThinkTick()
 T CBasePlayer::NetworkStateChanged_m_nNextThinkTick(void*)
 T CBasePlayer::NetworkStateChanged_m_nWaterLevel()
 T CBasePlayer::NetworkStateChanged_m_nWaterLevel(void*)
 T CBasePlayer::NetworkStateChanged_m_vecBaseVelocity()
 T CBasePlayer::NetworkStateChanged_m_vecBaseVelocity(void*)
 T CBasePlayer::NetworkStateChanged_m_vecVelocity()
 T CBasePlayer::NetworkStateChanged_m_vecVelocity(void*)
 T CBasePlayer::NetworkStateChanged_m_vecViewOffset()
 T CBasePlayer::NetworkStateChanged_m_vecViewOffset(void*)
 T CBasePlayer::NetworkVar_m_Local::NetworkStateChanged()
 T CBasePlayer::NetworkVar_m_Local::NetworkStateChanged(void*)
 T CBasePlayer::NetworkVar_m_PlayerFog::NetworkStateChanged()
 T CBasePlayer::NetworkVar_m_PlayerFog::NetworkStateChanged(void*)
 T CBasePlayer::NetworkVar_pl::NetworkStateChanged()
 T CBasePlayer::NetworkVar_pl::NetworkStateChanged(void*)
 T CBasePlayer::NetworkVar_pl::~NetworkVar_pl()
 T CBasePlayer::NoClipStateChanged()
 T CBasePlayer::NotifyNearbyRadiationSource(float)
 T CBasePlayer::ObjectCaps()
 T CBasePlayer::ObserverUse(bool)
 T CBasePlayer::OnDamagedByExplosion(CTakeDamageInfo const&)
 T CBasePlayer::OnMainActivityComplete(Activity, Activity)
 T CBasePlayer::OnMainActivityInterrupted(Activity, Activity)
 T CBasePlayer::OnRestore()
 T CBasePlayer::OnSpeak(CBasePlayer*, char const*, float)
 T CBasePlayer::OnTakeDamage(CTakeDamageInfo const&)
 T CBasePlayer::OnTakeDamage_Alive(CTakeDamageInfo const&)
 T CBasePlayer::OnTonemapTriggerEndTouch(CTonemapTrigger*)
 T CBasePlayer::OnTonemapTriggerStartTouch(CTonemapTrigger*)
 T CBasePlayer::OnVehicleEnd(Vector&)
 T CBasePlayer::OnVehicleStart()
 T CBasePlayer::OnVoiceTransmit()
 T CBasePlayer::PackDeadPlayerItems()
 T CBasePlayer::PassesObserverFilter(CBaseEntity const*)
 T CBasePlayer::PauseBonusProgress(bool)
 T CBasePlayer::PhysicsSimulate()
 T CBasePlayer::PhysicsSolidMaskForEntity() const
 T CBasePlayer::PickupObject(CBaseEntity*, bool)
 T CBasePlayer::PlayStepSound(Vector&, surfacedata_t*, float, bool)
 T CBasePlayer::PlayUseDenySound()
 T CBasePlayer::PlayerDeathThink()
 T CBasePlayer::PlayerRunCommand(CUserCmd*, IMoveHelper*)
 T CBasePlayer::PlayerSolidMask(bool) const
 T CBasePlayer::PlayerUse()
 T CBasePlayer::PostThink()
 T CBasePlayer::PostThinkVPhysics()
 T CBasePlayer::PreThink()
 T CBasePlayer::Precache()
 T CBasePlayer::PrepareForFullUpdate()
 T CBasePlayer::ProcessUsercmds(CUserCmd*, int, int, int, bool)
 T CBasePlayer::RemoveAllCommandContextsExceptNewest()
 T CBasePlayer::RemoveAllItems(bool)
 T CBasePlayer::RemoveFromPlayerSimulationList(CBaseEntity*)
 T CBasePlayer::RemovePictureInPicturePlayer(CBasePlayer*)
 T CBasePlayer::RemovePlayerItem(CBaseCombatWeapon*)
 T CBasePlayer::RemoveSplitScreenPlayer(CBasePlayer*)
 T CBasePlayer::RemoveSuit()
 T CBasePlayer::RequiredEdictIndex()
 T CBasePlayer::ResetAutoaim()
 T CBasePlayer::ResetDeathCount()
 T CBasePlayer::ResetFragCount()
 T CBasePlayer::ResetObserverMode()
 T CBasePlayer::ResetPerRoundStats()
 T CBasePlayer::ResetScores()
 T CBasePlayer::Restore(IRestore&)
 T CBasePlayer::RumbleEffect(unsigned char, unsigned char, unsigned char)
 T CBasePlayer::RunNullCommand()
 T CBasePlayer::Save(ISave&)
 T CBasePlayer::ScriptIsPlayerNoclipping()
 T CBasePlayer::SelectItem(char const*, int)
 T CBasePlayer::SelectLastItem()
 T CBasePlayer::SetAnimation(PLAYER_ANIM)
 T CBasePlayer::SetAnimationExtension(char const*)
 T CBasePlayer::SetArmorValue(int)
 T CBasePlayer::SetBodyPitch(float)
 T CBasePlayer::SetBonusProgress(int)
 T CBasePlayer::SetCrossPlayPlatform(CrossPlayPlatform_t)
 T CBasePlayer::SetDefaultFOV(int)
 T CBasePlayer::SetFOV(CBaseEntity*, int, float, int)
 T CBasePlayer::SetFlashlightEnabled(bool)
 T CBasePlayer::SetFogController(CFogController*)
 T CBasePlayer::SetMaxSpeed(float)
 T CBasePlayer::SetModel(char const*)
 T CBasePlayer::SetObserverMode(int)
 T CBasePlayer::SetObserverTarget(CBaseEntity*)
 T CBasePlayer::SetPhysicsFlag(int, bool)
 T CBasePlayer::SetPlayerName(char const*)
 T CBasePlayer::SetPlayerUnderwater(bool)
 T CBasePlayer::SetPreviouslyPredictedOrigin(Vector const&)
 T CBasePlayer::SetPunchAngle(QAngle const&)
 T CBasePlayer::SetSplitScreenPlayer(bool, CBasePlayer*)
 T CBasePlayer::SetStepSoundTime(stepsoundtimes_t, bool)
 T CBasePlayer::SetSuitUpdate(char*, int, int)
 T CBasePlayer::SetTimeBase(float)
 T CBasePlayer::SetUseEntity(CBaseEntity*)
 T CBasePlayer::SetVCollisionState(Vector const&, Vector const&, int)
 T CBasePlayer::SetViewEntity(CBaseEntity*, bool)
 T CBasePlayer::SetupVPhysicsShadow(Vector const&, Vector const&, CPhysCollide*, char const*, CPhysCollide*, char const*)
 T CBasePlayer::SetupVisibility(CBaseEntity*, unsigned char*, int)
 T CBasePlayer::SharedSpawn()
 T CBasePlayer::ShouldAnnounceAchievement()
 T CBasePlayer::ShouldAutoaim()
 T CBasePlayer::ShouldFadeOnDeath()
 T CBasePlayer::ShouldGainInstantSpawn()
 T CBasePlayer::ShouldSavePhysics()
 T CBasePlayer::ShouldTakeDamageInCommentaryMode(CTakeDamageInfo const&)
 T CBasePlayer::ShouldThrottleUserMessage(char const*)
 T CBasePlayer::ShouldTransmit(CCheckTransmitInfo const*)
 T CBasePlayer::ShowCrosshair(bool)
 T CBasePlayer::ShowViewPortPanel(char const*, bool, KeyValues*)
 T CBasePlayer::SimulatePlayerSimulatedEntities()
 T CBasePlayer::SmoothViewOnStairs(Vector&)
 T CBasePlayer::SnapEyeAngles(QAngle const&)
 T CBasePlayer::Spawn()
 T CBasePlayer::SpawnArmorValue() const
 T CBasePlayer::StartObserverMode(int)
 T CBasePlayer::StartReplayMode(float, float, int)
 T CBasePlayer::StopObserverMode()
 T CBasePlayer::StopReplayMode()
 T CBasePlayer::TakeHealth(float, int)
 T CBasePlayer::Touch(CBaseEntity*)
 T CBasePlayer::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CBasePlayer::UnforceButtons(int)
 T CBasePlayer::UpdateBattery()
 T CBasePlayer::UpdateButtonState(int)
 T CBasePlayer::UpdateClientData()
 T CBasePlayer::UpdateCollisionBounds()
 T CBasePlayer::UpdateFXVolume()
 T CBasePlayer::UpdateGeigerCounter()
 T CBasePlayer::UpdateOnRemove()
 T CBasePlayer::UpdatePhysicsShadowToCurrentPosition()
 T CBasePlayer::UpdatePhysicsShadowToPosition(Vector const&)
 T CBasePlayer::UpdatePlayerSound()
 T CBasePlayer::UpdateSplitScreenAndPictureInPicturePlayerList()
 T CBasePlayer::UpdateStepSound(surfacedata_t*, Vector const&, Vector const&)
 T CBasePlayer::UpdateTonemapController()
 T CBasePlayer::UpdateTransmitState()
 T CBasePlayer::UpdateUnderwaterState()
 T CBasePlayer::UpdateVPhysicsPosition(Vector const&, Vector const&, float)
 T CBasePlayer::UsingStandardWeaponsInVehicle()
 T CBasePlayer::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CBasePlayer::VPhysicsDestroyObject()
 T CBasePlayer::VPhysicsShadowUpdate(IPhysicsObject*)
 T CBasePlayer::VPhysicsUpdate(IPhysicsObject*)
 T CBasePlayer::ValidateCurrentObserverTarget()
 T CBasePlayer::VelocityPunch(Vector const&)
 T CBasePlayer::ViewPunch(QAngle const&)
 T CBasePlayer::ViewPunchReset(float)
 T CBasePlayer::WantsLagCompensationOnEntity(CBaseEntity const*, CUserCmd const*, CBitVec<2048> const*) const
 T CBasePlayer::WaterMove()
 T CBasePlayer::Weapon_CanUse(CBaseCombatWeapon*)
 T CBasePlayer::Weapon_Drop(CBaseCombatWeapon*, Vector const*, Vector const*)
 T CBasePlayer::Weapon_Equip(CBaseCombatWeapon*)
 T CBasePlayer::Weapon_SetLast(CBaseCombatWeapon*)
 T CBasePlayer::Weapon_ShootPosition()
 T CBasePlayer::Weapon_ShouldSelectItem(CBaseCombatWeapon*)
 T CBasePlayer::Weapon_ShouldSetLast(CBaseCombatWeapon*, CBaseCombatWeapon*)
 T CBasePlayer::Weapon_Switch(CBaseCombatWeapon*, int)
 T CBasePlayer::YouForgotToImplementOrDeclareServerClass()
 T CBasePlayer::~CBasePlayer()
 T CBasePortalCombatWeapon::AddViewmodelBob(CBaseViewModel*, Vector&, QAngle&)
 T CBasePortalCombatWeapon::CBasePortalCombatWeapon()
 T CBasePortalCombatWeapon::CalcViewmodelBob()
 T CBasePortalCombatWeapon::CanLower()
 T CBasePortalCombatWeapon::Deploy()
 T CBasePortalCombatWeapon::Drop(Vector const&)
 T CBasePortalCombatWeapon::EnoughTimeSinceThrown()
 T CBasePortalCombatWeapon::GetBulletSpread(WeaponProficiency_t)
 T CBasePortalCombatWeapon::GetDataDescMap()
 T CBasePortalCombatWeapon::GetProficiencyValues()
 T CBasePortalCombatWeapon::GetServerClass()
 T CBasePortalCombatWeapon::GetSpreadBias(WeaponProficiency_t)
 T CBasePortalCombatWeapon::Holster(CBaseCombatWeapon*)
 T CBasePortalCombatWeapon::ItemHolsterFrame()
 T CBasePortalCombatWeapon::ItemPostFrame()
 T CBasePortalCombatWeapon::Lower()
 T CBasePortalCombatWeapon::Ready()
 T CBasePortalCombatWeapon::WeaponIdle()
 T CBasePortalCombatWeapon::WeaponShouldBeLowered()
 T CBasePortalCombatWeapon::YouForgotToImplementOrDeclareServerClass()
 T CBasePortalCombatWeapon::~CBasePortalCombatWeapon()
 T CBaseProjectedEntity::CBaseProjectedEntity()
 T CBaseProjectedEntity::CheckForSettledReflectorCubes()
 T CBaseProjectedEntity::DidRedirectionPortalMove(CPortal_Base2D*)
 T CBaseProjectedEntity::FindProjectedEndpoints()
 T CBaseProjectedEntity::GetDataDescMap()
 T CBaseProjectedEntity::GetEndPoint() const
 T CBaseProjectedEntity::GetHitPortal()
 T CBaseProjectedEntity::GetLengthVector()
 T CBaseProjectedEntity::GetProjectionExtents(Vector&, Vector&)
 T CBaseProjectedEntity::GetServerClass()
 T CBaseProjectedEntity::GetSourcePortal()
 T CBaseProjectedEntity::GetStartPoint() const
 T CBaseProjectedEntity::IsHittingPortal(Vector*, QAngle*, CPortal_Base2D**)
 T CBaseProjectedEntity::OnPreProjected()
 T CBaseProjectedEntity::OnProjected()
 T CBaseProjectedEntity::OnRestore()
 T CBaseProjectedEntity::PlacePlacementHelper(CInfoPlacementHelper*)
 T CBaseProjectedEntity::RecursiveProjection(bool, CBaseProjector*, CPortal_Base2D*, Vector const&, QAngle const&, int, bool)
 T CBaseProjectedEntity::SetHitPortal(CPortal_Base2D*)
 T CBaseProjectedEntity::SetSourcePortal(CPortal_Base2D*)
 T CBaseProjectedEntity::SetTransmit(CCheckTransmitInfo*, bool)
 T CBaseProjectedEntity::Spawn()
 T CBaseProjectedEntity::TestForProjectionChanges()
 T CBaseProjectedEntity::UpdateOnRemove()
 T CBaseProjectedEntity::YouForgotToImplementOrDeclareServerClass()
 T CBaseProjectedEntity::~CBaseProjectedEntity()
 T CBaseProjectile::GetDataDescMap()
 T CBaseProjectile::HandleThink()
 T CBaseProjectile::HandleTouch(CBaseEntity*)
 T CBaseProjectile::Precache()
 T CBaseProjectile::Think()
 T CBaseProjectile::Touch(CBaseEntity*)
 T CBaseProjectile::~CBaseProjectile()
 T CBaseProjector::Activate()
 T CBaseProjector::CBaseProjector()
 T CBaseProjector::DrawDebugTextOverlays()
 T CBaseProjector::EnableProjection(bool)
 T CBaseProjector::GetDataDescMap()
 T CBaseProjector::GetServerClass()
 T CBaseProjector::InputDisable(inputdata_t&)
 T CBaseProjector::InputEnable(inputdata_t&)
 T CBaseProjector::OnRestore()
 T CBaseProjector::Project()
 T CBaseProjector::SetTransmit(CCheckTransmitInfo*, bool)
 T CBaseProjector::Shutdown()
 T CBaseProjector::Spawn()
 T CBaseProjector::TestAllForProjectionChanges()
 T CBaseProjector::TestProjectionChangesThink()
 T CBaseProjector::UpdateOnRemove()
 T CBaseProjector::YouForgotToImplementOrDeclareServerClass()
 T CBaseProjector::~CBaseProjector()
 T CBaseProp::Activate()
 T CBaseProp::CalculateBlockLOS()
 T CBaseProp::DrawDebugGeometryOverlays()
 T CBaseProp::IsAlive()
 T CBaseProp::KeyValue(char const*, char const*)
 T CBaseProp::OverridePropdata()
 T CBaseProp::ParsePropData()
 T CBaseProp::Precache()
 T CBaseProp::Spawn()
 T CBasePropDoor::Activate()
 T CBasePropDoor::Blocked(CBaseEntity*)
 T CBasePropDoor::CalcDoorSounds()
 T CBasePropDoor::DisableAreaPortalThink()
 T CBasePropDoor::DoorAutoCloseThink()
 T CBasePropDoor::DoorCanClose(bool)
 T CBasePropDoor::DoorCanOpen()
 T CBasePropDoor::DoorClose()
 T CBasePropDoor::DoorCloseMoveDone()
 T CBasePropDoor::DoorOpen(CBaseEntity*)
 T CBasePropDoor::DoorOpenMoveDone()
 T CBasePropDoor::EndBlocked()
 T CBasePropDoor::GetDataDescMap()
 T CBasePropDoor::GetServerClass()
 T CBasePropDoor::HandleAnimEvent(animevent_t*)
 T CBasePropDoor::InputClose(inputdata_t&)
 T CBasePropDoor::InputLock(inputdata_t&)
 T CBasePropDoor::InputOpen(inputdata_t&)
 T CBasePropDoor::InputOpenAwayFrom(inputdata_t&)
 T CBasePropDoor::InputToggle(inputdata_t&)
 T CBasePropDoor::InputUnlock(inputdata_t&)
 T CBasePropDoor::IsAbleToCloseAreaPortals() const
 T CBasePropDoor::IsDoorLocked()
 T CBasePropDoor::NPCOpenDoor(CAI_BaseNPC*)
 T CBasePropDoor::ObjectCaps()
 T CBasePropDoor::OnDoorClosed()
 T CBasePropDoor::OnDoorOpened()
 T CBasePropDoor::OnStartBlocked(CBaseEntity*)
 T CBasePropDoor::OnUse(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CBasePropDoor::Precache()
 T CBasePropDoor::Spawn()
 T CBasePropDoor::StartBlocked(CBaseEntity*)
 T CBasePropDoor::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CBasePropDoor::Unlock()
 T CBasePropDoor::UpdateAreaPortals(bool)
 T CBasePropDoor::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CBasePropDoor::YouForgotToImplementOrDeclareServerClass()
 T CBasePropDoor::~CBasePropDoor()
 T CBaseResourcePrecacher::GetName()
 T CBaseResourcePrecacher::GetNext()
 T CBaseResourcePrecacher::GetSystem()
 T CBaseResourcePrecacher::RegisterAll()
 T CBaseResourcePrecacher::SetNext(IResourcePrecacher*)
 T CBaseServerVehicle::CBaseServerVehicle()
 T CBaseServerVehicle::CacheEntryExitPoints()
 T CBaseServerVehicle::CheckExitPoint(float, int, Vector*)
 T CBaseServerVehicle::ClassifyPassenger(CBaseCombatCharacter*, Class_T)
 T CBaseServerVehicle::FindOrCreatePassengerRole(string_t, int*)
 T CBaseServerVehicle::FinishMove(CBasePlayer*, CUserCmd*, CMoveData*)
 T CBaseServerVehicle::GetDrivableVehicle()
 T CBaseServerVehicle::GetDriver()
 T CBaseServerVehicle::GetEntryAnimForPoint(Vector const&)
 T CBaseServerVehicle::GetExitAnimToUse(Vector&, bool&)
 T CBaseServerVehicle::GetLocalAttachmentAtTime(int, int, float, Vector*, QAngle*)
 T CBaseServerVehicle::GetPassenger(int)
 T CBaseServerVehicle::GetPassengerExitPoint(int, Vector*, QAngle*)
 T CBaseServerVehicle::GetPassengerRole(CBaseCombatCharacter*)
 T CBaseServerVehicle::GetPassengerSeatPoint(int, Vector*, QAngle*)
 T CBaseServerVehicle::GetVehicleController()
 T CBaseServerVehicle::GetVehicleEnt()
 T CBaseServerVehicle::GetVehicleParams()
 T CBaseServerVehicle::GetVehicleViewPosition(int, Vector*, QAngle*, float*)
 T CBaseServerVehicle::HandleEntryExitFinish(bool, bool)
 T CBaseServerVehicle::HandlePassengerEntry(CBaseCombatCharacter*, bool)
 T CBaseServerVehicle::HandlePassengerExit(CBaseCombatCharacter*)
 T CBaseServerVehicle::Initialize(char const*)
 T CBaseServerVehicle::IsPassengerDamagable(int)
 T CBaseServerVehicle::IsPassengerEntering()
 T CBaseServerVehicle::IsPassengerExiting()
 T CBaseServerVehicle::IsPassengerUsingStandardWeapons(int)
 T CBaseServerVehicle::IsPassengerVisible(int)
 T CBaseServerVehicle::IsVehicleBodyInWater()
 T CBaseServerVehicle::IsVehicleUpright()
 T CBaseServerVehicle::ItemPostFrame(CBasePlayer*)
 T CBaseServerVehicle::NPC_AddPassenger(CBaseCombatCharacter*, string_t, int)
 T CBaseServerVehicle::NPC_AimPrimaryWeapon(Vector)
 T CBaseServerVehicle::NPC_AimSecondaryWeapon(Vector)
 T CBaseServerVehicle::NPC_Brake()
 T CBaseServerVehicle::NPC_CanDrive()
 T CBaseServerVehicle::NPC_DriveVehicle()
 T CBaseServerVehicle::NPC_GetAvailableSeat(CBaseCombatCharacter*, string_t, VehicleSeatQuery_e)
 T CBaseServerVehicle::NPC_GetPassengerInSeat(int, int)
 T CBaseServerVehicle::NPC_GetPassengerSeatAnims(CBaseCombatCharacter*, PassengerSeatAnimType_t)
 T CBaseServerVehicle::NPC_GetPassengerSeatAttachment(CBaseCombatCharacter*)
 T CBaseServerVehicle::NPC_GetPassengerSeatPosition(CBaseCombatCharacter*, Vector*, QAngle*)
 T CBaseServerVehicle::NPC_GetPassengerSeatPositionLocal(CBaseCombatCharacter*, Vector*, QAngle*)
 T CBaseServerVehicle::NPC_HasAvailableSeat(string_t)
 T CBaseServerVehicle::NPC_HasPrimaryWeapon()
 T CBaseServerVehicle::NPC_HasSecondaryWeapon()
 T CBaseServerVehicle::NPC_PrimaryFire()
 T CBaseServerVehicle::NPC_RemovePassenger(CBaseCombatCharacter*)
 T CBaseServerVehicle::NPC_SecondaryFire()
 T CBaseServerVehicle::NPC_SetDriver(CNPC_VehicleDriver*)
 T CBaseServerVehicle::NPC_ThrottleCenter()
 T CBaseServerVehicle::NPC_ThrottleForward()
 T CBaseServerVehicle::NPC_ThrottleReverse()
 T CBaseServerVehicle::NPC_TurnCenter()
 T CBaseServerVehicle::NPC_TurnLeft(float)
 T CBaseServerVehicle::NPC_TurnRight(float)
 T CBaseServerVehicle::ParseEntryExitAnims()
 T CBaseServerVehicle::ParseExitAnim(KeyValues*, bool)
 T CBaseServerVehicle::ParseNPCPassengerSeat(KeyValues*, CPassengerSeat*)
 T CBaseServerVehicle::ParseNPCRoles(KeyValues*)
 T CBaseServerVehicle::PassengerDamageModifier(CTakeDamageInfo const&)
 T CBaseServerVehicle::PassengerShouldReceiveDamage(CTakeDamageInfo&)
 T CBaseServerVehicle::PlayCrashSound(float)
 T CBaseServerVehicle::PlayLoopingSound(char const*)
 T CBaseServerVehicle::PlaySound(vehiclesound)
 T CBaseServerVehicle::Precache()
 T CBaseServerVehicle::ProcessMovement(CBasePlayer*, CMoveData*)
 T CBaseServerVehicle::RecalculateSoundGear(vbs_sound_update_t&)
 T CBaseServerVehicle::ReloadScript()
 T CBaseServerVehicle::RestorePassengerInfo()
 T CBaseServerVehicle::SetPassenger(int, CBaseCombatCharacter*)
 T CBaseServerVehicle::SetPassengerWeapon(bool, CBaseCombatCharacter*)
 T CBaseServerVehicle::SetVehicle(CBaseEntity*)
 T CBaseServerVehicle::SetupMove(CBasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T CBaseServerVehicle::SoundShutdown(float)
 T CBaseServerVehicle::SoundStart()
 T CBaseServerVehicle::SoundStartDisabled()
 T CBaseServerVehicle::SoundState_ChooseState(vbs_sound_update_t&)
 T CBaseServerVehicle::SoundState_OnNewState(sound_states)
 T CBaseServerVehicle::SoundUpdate(vbs_sound_update_t&)
 T CBaseServerVehicle::StartEngineRumble()
 T CBaseServerVehicle::StopEngineRumble()
 T CBaseServerVehicle::StopSound(vehiclesound)
 T CBaseServerVehicle::Weapon_PrimaryCanFireAt()
 T CBaseServerVehicle::Weapon_PrimaryRanges(float*, float*)
 T CBaseServerVehicle::Weapon_SecondaryCanFireAt()
 T CBaseServerVehicle::Weapon_SecondaryRanges(float*, float*)
 T CBaseServerVehicle::~CBaseServerVehicle()
 T CBaseSpriteProjectile::GetDataDescMap()
 T CBaseSpriteProjectile::HandleThink()
 T CBaseSpriteProjectile::HandleTouch(CBaseEntity*)
 T CBaseSpriteProjectile::Precache()
 T CBaseSpriteProjectile::Think()
 T CBaseSpriteProjectile::Touch(CBaseEntity*)
 T CBaseSpriteProjectile::~CBaseSpriteProjectile()
 T CBaseTempEntity::CBaseTempEntity(char const*)
 T CBaseTempEntity::Create(IRecipientFilter&, float)
 T CBaseTempEntity::GetList()
 T CBaseTempEntity::GetName()
 T CBaseTempEntity::GetNext()
 T CBaseTempEntity::GetServerClass()
 T CBaseTempEntity::Precache()
 T CBaseTempEntity::PrecacheTempEnts()
 T CBaseTempEntity::Test(Vector const&, QAngle const&)
 T CBaseTempEntity::YouForgotToImplementOrDeclareServerClass()
 T CBaseTempEntity::~CBaseTempEntity()
 T CBaseToggle::AngularMove(QAngle const&, float)
 T CBaseToggle::AxisDelta(int, QAngle const&, QAngle const&)
 T CBaseToggle::AxisDir()
 T CBaseToggle::CBaseToggle()
 T CBaseToggle::GetDataDescMap()
 T CBaseToggle::GetDelay()
 T CBaseToggle::GetGroundVelocityToApply(Vector&)
 T CBaseToggle::GetServerClass()
 T CBaseToggle::IsLockedByMaster()
 T CBaseToggle::KeyValue(char const*, Vector)
 T CBaseToggle::KeyValue(char const*, char const*)
 T CBaseToggle::KeyValue(char const*, float)
 T CBaseToggle::LinearMove(Vector const&, float)
 T CBaseToggle::MoveDone()
 T CBaseToggle::YouForgotToImplementOrDeclareServerClass()
 T CBaseToggle::~CBaseToggle()
 T CBaseTrigger::Activate()
 T CBaseTrigger::CBaseTrigger()
 T CBaseTrigger::Disable()
 T CBaseTrigger::DrawDebugTextOverlays()
 T CBaseTrigger::Enable()
 T CBaseTrigger::EndTouch(CBaseEntity*)
 T CBaseTrigger::GetDataDescMap()
 T CBaseTrigger::GetServerClass()
 T CBaseTrigger::GetTouchedEntityOfType(char const*)
 T CBaseTrigger::InitTrigger()
 T CBaseTrigger::InputDisable(inputdata_t&)
 T CBaseTrigger::InputEnable(inputdata_t&)
 T CBaseTrigger::InputEndTouch(inputdata_t&)
 T CBaseTrigger::InputStartTouch(inputdata_t&)
 T CBaseTrigger::InputToggle(inputdata_t&)
 T CBaseTrigger::InputTouchTest(inputdata_t&)
 T CBaseTrigger::IsTouching(CBaseEntity*)
 T CBaseTrigger::NetworkStateChanged_m_bDisabled()
 T CBaseTrigger::NetworkStateChanged_m_bDisabled(void*)
 T CBaseTrigger::OnEndTouchAll(CBaseEntity*)
 T CBaseTrigger::OnStartTouchAll(CBaseEntity*)
 T CBaseTrigger::PassesTriggerFilters(CBaseEntity*)
 T CBaseTrigger::PostClientActive()
 T CBaseTrigger::Spawn()
 T CBaseTrigger::StartTouch(CBaseEntity*)
 T CBaseTrigger::UpdateOnRemove()
 T CBaseTrigger::UsesFilter()
 T CBaseTrigger::YouForgotToImplementOrDeclareServerClass()
 T CBaseTrigger::~CBaseTrigger()
 T CBaseVPhysicsTrigger::Activate()
 T CBaseVPhysicsTrigger::CreateVPhysics()
 T CBaseVPhysicsTrigger::EndTouch(CBaseEntity*)
 T CBaseVPhysicsTrigger::GetDataDescMap()
 T CBaseVPhysicsTrigger::GetServerClass()
 T CBaseVPhysicsTrigger::InputDisable(inputdata_t&)
 T CBaseVPhysicsTrigger::InputEnable(inputdata_t&)
 T CBaseVPhysicsTrigger::InputToggle(inputdata_t&)
 T CBaseVPhysicsTrigger::NetworkStateChanged_m_bDisabled()
 T CBaseVPhysicsTrigger::NetworkStateChanged_m_bDisabled(void*)
 T CBaseVPhysicsTrigger::PassesTriggerFilters(CBaseEntity*)
 T CBaseVPhysicsTrigger::Spawn()
 T CBaseVPhysicsTrigger::StartTouch(CBaseEntity*)
 T CBaseVPhysicsTrigger::UpdateOnRemove()
 T CBaseVPhysicsTrigger::YouForgotToImplementOrDeclareServerClass()
 T CBaseVPhysicsTrigger::~CBaseVPhysicsTrigger()
 T CBaseViewModel::AddEffects(int)
 T CBaseViewModel::AddViewModelBob(CBasePlayer*, Vector&, QAngle&)
 T CBaseViewModel::CBaseViewModel()
 T CBaseViewModel::CalcViewModelLag(Vector&, QAngle&, QAngle&)
 T CBaseViewModel::CalcViewModelView(CBasePlayer*, Vector const&, QAngle const&)
 T CBaseViewModel::GetDataDescMap()
 T CBaseViewModel::GetOwner()
 T CBaseViewModel::GetOwningWeapon()
 T CBaseViewModel::GetServerClass()
 T CBaseViewModel::IsSelfAnimating()
 T CBaseViewModel::IsViewModel() const
 T CBaseViewModel::IsViewModelOrAttachment() const
 T CBaseViewModel::IsViewable()
 T CBaseViewModel::ObjectCaps()
 T CBaseViewModel::Precache()
 T CBaseViewModel::RemoveEffects(int)
 T CBaseViewModel::SendViewModelMatchingSequence(int)
 T CBaseViewModel::SetIndex(int)
 T CBaseViewModel::SetOwner(CBaseEntity*)
 T CBaseViewModel::SetTransmit(CCheckTransmitInfo*, bool)
 T CBaseViewModel::SetWeaponModel(char const*, CBaseCombatWeapon*)
 T CBaseViewModel::ShouldTransmit(CCheckTransmitInfo const*)
 T CBaseViewModel::Spawn()
 T CBaseViewModel::UpdateOnRemove()
 T CBaseViewModel::UpdateTransmitState()
 T CBaseViewModel::YouForgotToImplementOrDeclareServerClass()
 T CBaseViewModel::~CBaseViewModel()
 T CBeam::BeamCreate(char const*, float)
 T CBeam::BeamDamage(CGameTrace*)
 T CBeam::BeamInit(char const*, float)
 T CBeam::CBeam()
 T CBeam::DoSparks(Vector const&, Vector const&)
 T CBeam::DrawDebugTextOverlays()
 T CBeam::EntsInit(CBaseEntity*, CBaseEntity*)
 T CBeam::GetAbsEndPos() const
 T CBeam::GetAbsStartPos() const
 T CBeam::GetDataDescMap()
 T CBeam::GetDecalName()
 T CBeam::GetServerClass()
 T CBeam::InputColorBlueValue(inputdata_t&)
 T CBeam::InputColorGreenValue(inputdata_t&)
 T CBeam::InputColorRedValue(inputdata_t&)
 T CBeam::InputNoise(inputdata_t&)
 T CBeam::InputWidth(inputdata_t&)
 T CBeam::ObjectCaps()
 T CBeam::PointEntInit(Vector const&, CBaseEntity*)
 T CBeam::PointsInit(Vector const&, Vector const&)
 T CBeam::Precache()
 T CBeam::RandomTargetname(char const*)
 T CBeam::RelinkBeam()
 T CBeam::SetAbsEndPos(Vector const&)
 T CBeam::SetAbsStartPos(Vector const&)
 T CBeam::SetBeamFlag(int)
 T CBeam::SetBeamFlags(int)
 T CBeam::SetEndEntity(CBaseEntity*)
 T CBeam::SetModel(char const*)
 T CBeam::SetStartEntity(CBaseEntity*)
 T CBeam::SetTransmit(CCheckTransmitInfo*, bool)
 T CBeam::SetType(int)
 T CBeam::ShouldTransmit(CCheckTransmitInfo const*)
 T CBeam::Spawn()
 T CBeam::TurnOff()
 T CBeam::UpdateTransmitState()
 T CBeam::WorldSpaceCenter() const
 T CBeam::YouForgotToImplementOrDeclareServerClass()
 T CBeam::~CBeam()
 T CBeamSpotlight::CBeamSpotlight()
 T CBeamSpotlight::GetDataDescMap()
 T CBeamSpotlight::GetServerClass()
 T CBeamSpotlight::InputReverse(inputdata_t&)
 T CBeamSpotlight::InputStart(inputdata_t&)
 T CBeamSpotlight::InputStop(inputdata_t&)
 T CBeamSpotlight::InputTurnOff(inputdata_t&)
 T CBeamSpotlight::InputTurnOn(inputdata_t&)
 T CBeamSpotlight::KeyValue(char const*, char const*)
 T CBeamSpotlight::Precache()
 T CBeamSpotlight::RecalcRotation()
 T CBeamSpotlight::Spawn()
 T CBeamSpotlight::UpdateTransmitState()
 T CBeamSpotlight::YouForgotToImplementOrDeclareServerClass()
 T CBeamSpotlight::~CBeamSpotlight()
 T CBitRead::ReadBitAngle(int)
 T CBitRead::ReadBitCoord()
 T CBitRead::ReadBitVec3Coord(Vector&)
 T CBlendingCycler::GetDataDescMap()
 T CBlendingCycler::KeyValue(char const*, char const*)
 T CBlendingCycler::ObjectCaps()
 T CBlendingCycler::Spawn()
 T CBlendingCycler::Think()
 T CBlendingCycler::~CBlendingCycler()
 T CBlood::BloodPosition(CBaseEntity*)
 T CBlood::GetDataDescMap()
 T CBlood::InputEmitBlood(inputdata_t&)
 T CBlood::KeyValue(char const*, char const*)
 T CBlood::Precache()
 T CBlood::Spawn()
 T CBlood::~CBlood()
 T CBloodSplat::Think()
 T CBloodSplat::~CBloodSplat()
 T CBoneCache::CreateResource(bonecacheparams_t const&)
 T CBoneCache::GetCachedBone(int)
 T CBoneCache::Init(bonecacheparams_t const&, unsigned int, short*, short*, int)
 T CBoneCache::IsValid(float, float)
 T CBoneCache::ReadCachedBonePointers(matrix3x4_t**, int)
 T CBoneCache::UpdateBones(matrix3x4a_t const*, int, float)
 T CBoneFollower::GetDataDescMap()
 T CBoneFollower::GetServerClass()
 T CBoneFollower::Init(CBaseEntity*, char const*, solid_t&, Vector const&, QAngle const&)
 T CBoneFollower::ObjectCaps()
 T CBoneFollower::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CBoneFollower::Touch(CBaseEntity*)
 T CBoneFollower::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CBoneFollower::UpdateTransmitState()
 T CBoneFollower::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CBoneFollower::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CBoneFollower::VPhysicsFriction(IPhysicsObject*, float, int, int)
 T CBoneFollower::VPhysicsShadowCollision(int, gamevcollisionevent_t*)
 T CBoneFollower::VPhysicsUpdate(IPhysicsObject*)
 T CBoneFollower::YouForgotToImplementOrDeclareServerClass()
 T CBoneFollower::~CBoneFollower()
 T CBoneFollowerManager::AddBoneFollower(CBaseAnimating*, char const*, solid_t*)
 T CBoneFollowerManager::CBoneFollowerManager()
 T CBoneFollowerManager::CreatePhysicsFollower(CBaseAnimating*, physfollower_t&, char const*, solid_t*)
 T CBoneFollowerManager::DestroyBoneFollowers()
 T CBoneFollowerManager::GetBoneFollower(int)
 T CBoneFollowerManager::InitBoneFollowers(CBaseAnimating*, int, char const**)
 T CBoneFollowerManager::UpdateBoneFollowers(CBaseAnimating*)
 T CBoneFollowerManager::~CBoneFollowerManager()
 T CBoneSetup::AccumulatePose(Vector*, Quaternion*, int, float, float, float, CIKContext*)
 T CBoneSetup::AddLocalLayers(Vector*, Quaternion*, mstudioseqdesc_t&, int, float, float, float, CIKContext*)
 T CBoneSetup::AddSequenceLayers(Vector*, Quaternion*, mstudioseqdesc_t&, int, float, float, float, CIKContext*)
 T CBoneSetup::CalcAutoplaySequences(Vector*, Quaternion*, float, CIKContext*)
 T CBoneSetupMemoryPool<QuaternionAligned>::Alloc()
 T CBoneSetupMemoryPool<QuaternionAligned>::~CBoneSetupMemoryPool()
 T CBoneSetupMemoryPool<Vector>::Alloc()
 T CBoneSetupMemoryPool<Vector>::~CBoneSetupMemoryPool()
 T CBoneSetupMemoryPool<matrix3x4a_t>::Alloc()
 T CBoneSetupMemoryPool<matrix3x4a_t>::~CBoneSetupMemoryPool()
 T CBoolProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CBoolProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CBoolProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CBotCmd::~CBotCmd()
 T CBreakModelsPrecached::AddToList(string_t, int)
 T CBreakModelsPrecached::BreakLessFunc(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&)
 T CBreakModelsPrecached::LevelShutdownPostEntity()
 T CBreakModelsPrecached::~CBreakModelsPrecached()
 T CBreakParser::ParseKeyValue(void*, char const*, char const*)
 T CBreakParser::ParseModelName(breakmodel_t*, char const*)
 T CBreakParser::SetDefaults(void*)
 T CBreakable::BreakTouch(CBaseEntity*)
 T CBreakable::CreateVPhysics()
 T CBreakable::DamageDecal(int, int)
 T CBreakable::DamageSound()
 T CBreakable::Die()
 T CBreakable::DrawDebugTextOverlays()
 T CBreakable::GetBasePropData()
 T CBreakable::GetBreakableCount()
 T CBreakable::GetBreakableModel()
 T CBreakable::GetBreakableSkin()
 T CBreakable::GetDataDescMap()
 T CBreakable::GetDmgModBullet()
 T CBreakable::GetDmgModClub()
 T CBreakable::GetDmgModExplosive()
 T CBreakable::GetDmgModFire()
 T CBreakable::GetExplosiveDamage()
 T CBreakable::GetExplosiveRadius()
 T CBreakable::GetMaxBreakableSize()
 T CBreakable::GetMultiplayerBreakMode() const
 T CBreakable::GetPhysicsDamageTable()
 T CBreakable::GetPhysicsMode()
 T CBreakable::HasInteraction(propdata_interactions_t)
 T CBreakable::HasPhysicsAttacker(float)
 T CBreakable::InputAddHealth(inputdata_t&)
 T CBreakable::InputBreak(inputdata_t&)
 T CBreakable::InputRemoveHealth(inputdata_t&)
 T CBreakable::InputSetHealth(inputdata_t&)
 T CBreakable::InputSetMass(inputdata_t&)
 T CBreakable::IsBreakable()
 T CBreakable::KeyValue(char const*, char const*)
 T CBreakable::MaterialSoundRandom(int, Materials, float)
 T CBreakable::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CBreakable::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CBreakable::OnTakeDamage(CTakeDamageInfo const&)
 T CBreakable::ParsePropData()
 T CBreakable::Precache()
 T CBreakable::ResetOnGroundFlags()
 T CBreakable::SetBasePropData(string_t)
 T CBreakable::SetBreakableCount(int)
 T CBreakable::SetBreakableModel(string_t)
 T CBreakable::SetBreakableSkin(int)
 T CBreakable::SetDmgModBullet(float)
 T CBreakable::SetDmgModClub(float)
 T CBreakable::SetDmgModExplosive(float)
 T CBreakable::SetExplosiveDamage(float)
 T CBreakable::SetExplosiveRadius(float)
 T CBreakable::SetInteraction(propdata_interactions_t)
 T CBreakable::SetMaxBreakableSize(int)
 T CBreakable::SetMultiplayerBreakMode(mp_break_t)
 T CBreakable::SetPhysicsDamageTable(string_t)
 T CBreakable::SetPhysicsMode(int)
 T CBreakable::SetPropDataBlocksLOS(bool)
 T CBreakable::SetPropDataIsAIWalkable(bool)
 T CBreakable::Spawn()
 T CBreakable::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CBreakable::UpdateHealth(int, CBaseEntity*)
 T CBreakable::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CBreakable::~CBreakable()
 T CBreakableProp::AnimateThink()
 T CBreakableProp::Break(CBaseEntity*, CTakeDamageInfo const&)
 T CBreakableProp::BreakThink()
 T CBreakableProp::BreakablePropTouch(CBaseEntity*)
 T CBreakableProp::CBreakableProp()
 T CBreakableProp::CopyFadeFrom(CBreakableProp*)
 T CBreakableProp::DisableAutoFade()
 T CBreakableProp::Event_Killed(CTakeDamageInfo const&)
 T CBreakableProp::FindEnableMotionFixup()
 T CBreakableProp::GetAutoAimRadius()
 T CBreakableProp::GetBasePropData()
 T CBreakableProp::GetBreakableCount()
 T CBreakableProp::GetBreakableModel()
 T CBreakableProp::GetBreakableSkin()
 T CBreakableProp::GetDataDescMap()
 T CBreakableProp::GetDmgModBullet()
 T CBreakableProp::GetDmgModClub()
 T CBreakableProp::GetDmgModExplosive()
 T CBreakableProp::GetDmgModFire()
 T CBreakableProp::GetExplosiveDamage()
 T CBreakableProp::GetExplosiveRadius()
 T CBreakableProp::GetMaxBreakableSize()
 T CBreakableProp::GetMultiplayerBreakMode() const
 T CBreakableProp::GetPhysicsDamageTable()
 T CBreakableProp::GetPhysicsMode()
 T CBreakableProp::GetRootPhysicsObjectForBreak()
 T CBreakableProp::GetServerClass()
 T CBreakableProp::HandleFirstCollisionInteractions(int, gamevcollisionevent_t*)
 T CBreakableProp::HandleInteractionStick(int, gamevcollisionevent_t*)
 T CBreakableProp::HasInteraction(propdata_interactions_t)
 T CBreakableProp::HasPhysicsAttacker(float)
 T CBreakableProp::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T CBreakableProp::Ignite(float, bool, float, bool)
 T CBreakableProp::InputAddHealth(inputdata_t&)
 T CBreakableProp::InputBreak(inputdata_t&)
 T CBreakableProp::InputDisablePhyscannonPickup(inputdata_t&)
 T CBreakableProp::InputDisablePuntSound(inputdata_t&)
 T CBreakableProp::InputEnablePhyscannonPickup(inputdata_t&)
 T CBreakableProp::InputEnablePuntSound(inputdata_t&)
 T CBreakableProp::InputRemoveHealth(inputdata_t&)
 T CBreakableProp::InputSetHealth(inputdata_t&)
 T CBreakableProp::OnAttemptPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CBreakableProp::OnBreak(Vector const&, Vector const&, CBaseEntity*)
 T CBreakableProp::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CBreakableProp::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CBreakableProp::OnTakeDamage(CTakeDamageInfo const&)
 T CBreakableProp::OverridePropdata()
 T CBreakableProp::PhysGunLaunchAngularImpulse()
 T CBreakableProp::PlayPuntSound()
 T CBreakableProp::Precache()
 T CBreakableProp::PreferredCarryAngles()
 T CBreakableProp::RampToDefaultFadeScale()
 T CBreakableProp::SetBasePropData(string_t)
 T CBreakableProp::SetBreakableCount(int)
 T CBreakableProp::SetBreakableModel(string_t)
 T CBreakableProp::SetBreakableSkin(int)
 T CBreakableProp::SetDmgModBullet(float)
 T CBreakableProp::SetDmgModClub(float)
 T CBreakableProp::SetDmgModExplosive(float)
 T CBreakableProp::SetExplosiveDamage(float)
 T CBreakableProp::SetExplosiveRadius(float)
 T CBreakableProp::SetInteraction(propdata_interactions_t)
 T CBreakableProp::SetMaxBreakableSize(int)
 T CBreakableProp::SetMultiplayerBreakMode(mp_break_t)
 T CBreakableProp::SetPhysicsDamageTable(string_t)
 T CBreakableProp::SetPhysicsMode(int)
 T CBreakableProp::SetPropDataBlocksLOS(bool)
 T CBreakableProp::SetPropDataIsAIWalkable(bool)
 T CBreakableProp::Spawn()
 T CBreakableProp::StickAtPosition(Vector const&, Vector const&, QAngle const&)
 T CBreakableProp::UpdateHealth(int, CBaseEntity*)
 T CBreakableProp::UpdateOnRemove()
 T CBreakableProp::YouForgotToImplementOrDeclareServerClass()
 T CBreakableProp::~CBreakableProp()
 T CBreakableSurface::BreakPane(int, int)
 T CBreakableSurface::BreakThink()
 T CBreakableSurface::CreateShards(Vector const&, QAngle const&, Vector const&, Vector const&, float, float, int)
 T CBreakableSurface::Die(CBaseEntity*, Vector const&)
 T CBreakableSurface::DropPane(int, int)
 T CBreakableSurface::GetDataDescMap()
 T CBreakableSurface::GetServerClass()
 T CBreakableSurface::InputShatter(inputdata_t&)
 T CBreakableSurface::OnTakeDamage(CTakeDamageInfo const&)
 T CBreakableSurface::Precache()
 T CBreakableSurface::RecalcSupport(int, int)
 T CBreakableSurface::ShatterPane(int, int, Vector const&, Vector const&)
 T CBreakableSurface::Spawn()
 T CBreakableSurface::SurfaceTouch(CBaseEntity*)
 T CBreakableSurface::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CBreakableSurface::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CBreakableSurface::YouForgotToImplementOrDeclareServerClass()
 T CBreakableSurface::~CBreakableSurface()
 T CBroadcastRecipientFilter::~CBroadcastRecipientFilter()
 T CBrushEntityList::EnumEntity(IHandleEntity*)
 T CBubbling::FizzThink()
 T CBubbling::GetDataDescMap()
 T CBubbling::InputActivate(inputdata_t&)
 T CBubbling::InputDeactivate(inputdata_t&)
 T CBubbling::InputSetCurrent(inputdata_t&)
 T CBubbling::InputSetDensity(inputdata_t&)
 T CBubbling::InputSetFrequency(inputdata_t&)
 T CBubbling::InputToggle(inputdata_t&)
 T CBubbling::Precache()
 T CBubbling::Spawn()
 T CBubbling::Toggle()
 T CBubbling::~CBubbling()
 T CBuildModeDialogMgr::Add(vgui::BuildModeDialog*)
 T CBuildModeDialogMgr::~CBuildModeDialogMgr()
 T CBuildModeNavCombo::CBuildModeNavCombo(vgui::Panel*, char const*, int, bool, bool, vgui::Panel*)
 T CBuildModeNavCombo::GetAnimMap()
 T CBuildModeNavCombo::GetKBMap()
 T CBuildModeNavCombo::GetMessageMap()
 T CBuildModeNavCombo::GetPanelClassName()
 T CBuildModeNavCombo::OnShowMenu(vgui::Menu*)
 T CBuildModeNavCombo::~CBuildModeNavCombo()
 T CBulletsTraceFilter::ShouldHitEntity(IHandleEntity*, int)
 T CBullseyeList::LevelShutdownPostEntity()
 T CBullseyeList::~CBullseyeList()
 T CC_AI_Disable()
 T CC_AI_GraphConnect(CCommand const&)
 T CC_AI_Hull(CCommand const&)
 T CC_AI_LOS_Debug(IConVar*, char const*, float)
 T CC_AI_NextHull(CCommand const&)
 T CC_AI_Nodes(CCommand const&)
 T CC_AI_Resume()
 T CC_AI_ShowConnect(CCommand const&)
 T CC_AI_ShowCrawlConnect(CCommand const&)
 T CC_AI_ShowFlyConnect(CCommand const&)
 T CC_AI_ShowGrid(CCommand const&)
 T CC_AI_ShowHints()
 T CC_AI_ShowHull(CCommand const&)
 T CC_AI_ShowJumpConnect(CCommand const&)
 T CC_AI_ShowVisibility(CCommand const&)
 T CC_AI_Step()
 T CC_AirDensity(CCommand const&)
 T CC_CH_CreateAirboat()
 T CC_CH_CreateJeep()
 T CC_CollisionTest(CCommand const&)
 T CC_CommentaryChanged(IConVar*, char const*, float)
 T CC_CommentaryFinishNode()
 T CC_CommentaryNotChanging()
 T CC_CreateFlashlight(CCommand const&)
 T CC_Create_PortalCompanionCube()
 T CC_Create_PortalReflectorCube()
 T CC_Create_PortalWeightedAntique()
 T CC_Create_PortalWeightedCube()
 T CC_Create_PortalWeightedSphere()
 T CC_DebugHistory_AddLine(CCommand const&)
 T CC_DebugHistory_Dump(CCommand const&)
 T CC_Debug_FixMyPosition()
 T CC_DrawCross(CCommand const&)
 T CC_DrawLine(CCommand const&)
 T CC_DumpCompletionData(CCommand const&)
 T CC_DumpEventQueue()
 T CC_DumpGameStringTable()
 T CC_EarnTaunt(CCommand const&)
 T CC_Ent_AbsBox(CCommand const&)
 T CC_Ent_AttachmentPoints(CCommand const&)
 T CC_Ent_Autoaim(CCommand const&)
 T CC_Ent_BBox(CCommand const&)
 T CC_Ent_CancelPendingEntFires(CCommand const&)
 T CC_Ent_Create(CCommand const&)
 T CC_Ent_Dump(CCommand const&)
 T CC_Ent_FireTarget(CCommand const&)
 T CC_Ent_Info(CCommand const&)
 T CC_Ent_Keyvalue(CCommand const&)
 T CC_Ent_Messages(CCommand const&)
 T CC_Ent_Name(CCommand const&)
 T CC_Ent_Orient(CCommand const&)
 T CC_Ent_Pause()
 T CC_Ent_Picker()
 T CC_Ent_Pivot(CCommand const&)
 T CC_Ent_RBox(CCommand const&)
 T CC_Ent_Remove(CCommand const&)
 T CC_Ent_RemoveAll(CCommand const&)
 T CC_Ent_Rotate(CCommand const&)
 T CC_Ent_Script_Dump(CCommand const&)
 T CC_Ent_SetName(CCommand const&)
 T CC_Ent_Show_Response_Criteria(CCommand const&)
 T CC_Ent_Step(CCommand const&)
 T CC_Ent_Teleport(CCommand const&)
 T CC_Ent_Text(CCommand const&)
 T CC_Ent_ViewOffset(CCommand const&)
 T CC_Find_Ent(CCommand const&)
 T CC_Find_Ent_Index(CCommand const&)
 T CC_GetCommandEnt(CCommand const&, CBaseEntity**, Vector*, QAngle*)
 T CC_GiveCurrentAmmo()
 T CC_GivePortalGun()
 T CC_Global_Set(CCommand const&)
 T CC_God_f()
 T CC_GroundList_f(CCommand const&)
 T CC_HurtMe_f(CCommand const&)
 T CC_KDTreeTest(CCommand const&)
 T CC_LockAllTaunts(CCommand const&)
 T CC_LockTaunt(CCommand const&)
 T CC_MarkAllMapsComplete(CCommand const&)
 T CC_MarkAllMapsIncomplete(CCommand const&)
 T CC_MarkBranchComplete(CCommand const&)
 T CC_NPC_Bipass(CCommand const&)
 T CC_NPC_Combat(CCommand const&)
 T CC_NPC_Conditions(CCommand const&)
 T CC_NPC_Create(CCommand const&)
 T CC_NPC_Create_Aimed(CCommand const&)
 T CC_NPC_Destroy(CCommand const&)
 T CC_NPC_DestroyUnselected()
 T CC_NPC_Enemies(CCommand const&)
 T CC_NPC_Focus(CCommand const&)
 T CC_NPC_Freeze(CCommand const&)
 T CC_NPC_Go()
 T CC_NPC_GoRandom()
 T CC_NPC_Kill(CCommand const&)
 T CC_NPC_Nearest(CCommand const&)
 T CC_NPC_Relationships(CCommand const&)
 T CC_NPC_Reset()
 T CC_NPC_Route(CCommand const&)
 T CC_NPC_Select(CCommand const&)
 T CC_NPC_Set_Freeze(CCommand const&)
 T CC_NPC_Task_Text(CCommand const&)
 T CC_NPC_Tasks(CCommand const&)
 T CC_NPC_Teleport()
 T CC_NPC_ViewSteeringRegulations(CCommand const&)
 T CC_NPC_ViewSteeringRegulationsAll()
 T CC_NPC_Viewcone(CCommand const&)
 T CC_Notarget_f()
 T CC_Particle_Test_Start(CCommand const&)
 T CC_Particle_Test_Stop(CCommand const&)
 T CC_Player_BugBaitSwap()
 T CC_Player_SetModel(CCommand const&)
 T CC_Player_TestDispatchEffect(CCommand const&)
 T CC_Player_Use(CCommand const&)
 T CC_ProceduralGeneratorSolveIt()
 T CC_ProceduralGeneratorTest()
 T CC_ProceduralSurfaceMap()
 T CC_Prop_Debug()
 T CC_Prop_Dynamic_Create(CCommand const&)
 T CC_Prop_Physics_Create(CCommand const&)
 T CC_RR_ForceConcept_f(CCommand const&)
 T CC_RemoveAllPaint()
 T CC_Resize_Portals(CCommand const&)
 T CC_Shake()
 T CC_SkyboxSwap()
 T CC_Test_EHandle()
 T CC_Test_Entity_Blocker()
 T CC_Test_Outtro_Stats(CCommand const&)
 T CC_UpgradePortalGun()
 T CC_UpgradePotatoGun()
 T CC_VoxelTreeBox(CCommand const&)
 T CC_VoxelTreePlayerView()
 T CC_VoxelTreeSphere(CCommand const&)
 T CC_VoxelTreeView()
 T CC_WC_AirNodeEdit()
 T CC_WC_AirNodeEditFurther()
 T CC_WC_AirNodeEditNearer()
 T CC_WC_Create()
 T CC_WC_Destroy()
 T CC_WC_DestroyUndo()
 T CC_WC_LinkEdit()
 T CC_ai_drop_hint(CCommand const&)
 T CC_give_me_a_point()
 T CC_setang_f(CCommand const&)
 T CCallQueue::~CCallQueue()
 T CCallQueueT<CTSQueue<CFunctor*, false, true> >::CallQueued()
 T CCallQueueT<CTSQueue<CFunctor*, false, true> >::QueueFunctorInternal(CFunctor*)
 T CCallResult<CGCUpdateItemSchema, HTTPRequestCompleted_t>::GetCallbackSizeBytes()
 T CCallResult<CGCUpdateItemSchema, HTTPRequestCompleted_t>::Run(void*)
 T CCallResult<CGCUpdateItemSchema, HTTPRequestCompleted_t>::Run(void*, bool, unsigned long long)
 T CCallback<CGCServerSystem, SteamServersConnected_t, true>::Run(void*)
 T CCallback<CSteamWorksGameStatsUploader, GameStatsSessionClosed_t, true>::Run(void*)
 T CCallback<CSteamWorksGameStatsUploader, GameStatsSessionIssued_t, true>::Run(void*)
 T CCallback<GCSDK::CGCClient, GCMessageAvailable_t, false>::Run(void*)
 T CCallbackImpl<12>::GetCallbackSizeBytes()
 T CCallbackImpl<12>::Run(void*, bool, unsigned long long)
 T CCallbackImpl<16>::GetCallbackSizeBytes()
 T CCallbackImpl<16>::Run(void*, bool, unsigned long long)
 T CCallbackImpl<1>::GetCallbackSizeBytes()
 T CCallbackImpl<1>::Run(void*, bool, unsigned long long)
 T CCallbackImpl<4>::GetCallbackSizeBytes()
 T CCallbackImpl<4>::Run(void*, bool, unsigned long long)
 T CCaptionRepeatMgr::CanEmitCaption(unsigned int)
 T CCaptionRepeatMgr::RemoveCaptionsBefore(float)
 T CCaptionRepeatMgr::~CCaptionRepeatMgr()
 T CChallengeModeEndNode::GetDataDescMap()
 T CChallengeModeEndNode::Precache()
 T CChallengeModeEndNode::SetNodeSkin()
 T CChallengeModeEndNode::Spawn()
 T CChallengeModeEndNode::StartTouch(CBaseEntity*)
 T CChallengeModeEndNode::~CChallengeModeEndNode()
 T CChallengeModeEndNodeKeys::Init()
 T CChallengeModeEndNodeKeys::LevelInitPostEntity()
 T CChallengeModeEndNodeKeys::LoadNodePositions()
 T CChallengeModeEndNodeKeys::~CChallengeModeEndNodeKeys()
 T CChangeLevel::Activate()
 T CChangeLevel::AddTransitionToList(levellist_t*, int, char const*, char const*, edict_t*)
 T CChangeLevel::BuildChangeLevelList(levellist_t*, int)
 T CChangeLevel::BuildEntityTransitionList(CBaseEntity*, char const*, CBaseEntity**, int*, int)
 T CChangeLevel::ChangeLevelNow(CBaseEntity*)
 T CChangeLevel::ChangeList(levellist_t*, int)
 T CChangeLevel::ComputeEntitySaveFlags(CBaseEntity*)
 T CChangeLevel::FindLandmark(char const*)
 T CChangeLevel::GetDataDescMap()
 T CChangeLevel::InTransitionVolume(CBaseEntity*, char const*)
 T CChangeLevel::InputChangeLevel(inputdata_t&)
 T CChangeLevel::IsEntityInTransition(CBaseEntity*)
 T CChangeLevel::KeyValue(char const*, char const*)
 T CChangeLevel::NotifyEntitiesOutOfTransition()
 T CChangeLevel::Spawn()
 T CChangeLevel::TouchChangeLevel(CBaseEntity*)
 T CChangeLevel::WarnAboutActiveLead()
 T CChangeLevel::~CChangeLevel()
 T CChangedPaintBoundsCache::AddChangedBounds(Vector const&, float)
 T CCheckClient::LevelInitPreEntity()
 T CCheckClient::~CCheckClient()
 T CChildOperatorDefinition::CreateInstance(UniqueId_t const&) const
 T CChildOperatorDefinition::GetFilter() const
 T CChildOperatorDefinition::GetId() const
 T CChildOperatorDefinition::GetName() const
 T CChildOperatorDefinition::GetUnpackStructure() const
 T CChildOperatorDefinition::IsObsolete() const
 T CChoreoActor::AddChannel(CChoreoChannel*)
 T CChoreoActor::CChoreoActor()
 T CChoreoActor::FindChannelIndex(CChoreoChannel*)
 T CChoreoActor::GetChannel(int)
 T CChoreoActor::GetName()
 T CChoreoActor::GetNumChannels()
 T CChoreoActor::RestoreFromBuffer(CUtlBuffer&, CChoreoScene*, IChoreoStringPool*)
 T CChoreoActor::SetActive(bool)
 T CChoreoActor::SetFacePoserModelName(char const*)
 T CChoreoActor::SetName(char const*)
 T CChoreoChannel::AddEvent(CChoreoEvent*)
 T CChoreoChannel::CChoreoChannel()
 T CChoreoChannel::GetEvent(int)
 T CChoreoChannel::GetName()
 T CChoreoChannel::GetNumEvents()
 T CChoreoChannel::ReconcileCloseCaption()
 T CChoreoChannel::ReconcileGestureTimes()
 T CChoreoChannel::RestoreFromBuffer(CUtlBuffer&, CChoreoScene*, CChoreoActor*, IChoreoStringPool*)
 T CChoreoChannel::SetActive(bool)
 T CChoreoChannel::SetActor(CChoreoActor*)
 T CChoreoChannel::SetName(char const*)
 T CChoreoEvent::AddAbsoluteTag(CChoreoEvent::AbsTagType, char const*, float)
 T CChoreoEvent::AddEventDependency(CChoreoEvent*)
 T CChoreoEvent::AddRelativeTag(char const*, float)
 T CChoreoEvent::AddTimingTag(char const*, float, bool)
 T CChoreoEvent::AddTrack(char const*)
 T CChoreoEvent::CCTypeForName(char const*)
 T CChoreoEvent::CChoreoEvent(CChoreoScene*)
 T CChoreoEvent::CheckProcessing(IChoreoEventCallback*, CChoreoScene*, float)
 T CChoreoEvent::ClearEventDependencies()
 T CChoreoEvent::ContinueProcessing(IChoreoEventCallback*, CChoreoScene*, float)
 T CChoreoEvent::CurveHasEndTime()
 T CChoreoEvent::FindAbsoluteTag(CChoreoEvent::AbsTagType, char const*)
 T CChoreoEvent::FindEntryTag(CChoreoEvent::AbsTagType)
 T CChoreoEvent::FindExitTag(CChoreoEvent::AbsTagType)
 T CChoreoEvent::FindRelativeTag(char const*)
 T CChoreoEvent::GetActor()
 T CChoreoEvent::GetChannel()
 T CChoreoEvent::GetCloseCaptionToken() const
 T CChoreoEvent::GetCloseCaptionType() const
 T CChoreoEvent::GetDefaultCurveType()
 T CChoreoEvent::GetDescription()
 T CChoreoEvent::GetDistanceToTarget()
 T CChoreoEvent::GetDuration()
 T CChoreoEvent::GetEndTime()
 T CChoreoEvent::GetEventDependencies(CUtlVector<CChoreoEvent*, CUtlMemory<CChoreoEvent*, int> >&)
 T CChoreoEvent::GetFlexAnimationTrack(int)
 T CChoreoEvent::GetIntensity(float)
 T CChoreoEvent::GetLastSlaveEndTime() const
 T CChoreoEvent::GetLoopCount()
 T CChoreoEvent::GetName()
 T CChoreoEvent::GetNumFlexAnimationTracks()
 T CChoreoEvent::GetNumLoopsRemaining()
 T CChoreoEvent::GetNumSlaves() const
 T CChoreoEvent::GetOriginalPercentageFromPlaybackPercentage(float)
 T CChoreoEvent::GetParameters()
 T CChoreoEvent::GetParameters2()
 T CChoreoEvent::GetParameters3()
 T CChoreoEvent::GetPlayOverScript()
 T CChoreoEvent::GetPlaybackCloseCaptionToken(char*, int)
 T CChoreoEvent::GetRelativeTagName()
 T CChoreoEvent::GetRelativeWavName()
 T CChoreoEvent::GetScene()
 T CChoreoEvent::GetStartTime()
 T CChoreoEvent::GetSubScene()
 T CChoreoEvent::GetSyncToFollowingGesture()
 T CChoreoEvent::GetTrackLookupSet()
 T CChoreoEvent::GetType()
 T CChoreoEvent::HasEndTime()
 T CChoreoEvent::HasStopped() const
 T CChoreoEvent::Init(CChoreoScene*)
 T CChoreoEvent::IsLockBodyFacing()
 T CChoreoEvent::IsProcessing() const
 T CChoreoEvent::IsResumeCondition()
 T CChoreoEvent::IsSuppressingCaptionAttenuation() const
 T CChoreoEvent::IsUsingCombinedFile() const
 T CChoreoEvent::IsUsingRelativeTag()
 T CChoreoEvent::OffsetTime(float)
 T CChoreoEvent::PreventTagOverlap()
 T CChoreoEvent::RemoveAllTracks()
 T CChoreoEvent::RescaleGestureTimes(float, float, bool)
 T CChoreoEvent::ResetProcessing()
 T CChoreoEvent::RestoreFlexAnimationsFromBuffer(CUtlBuffer&, IChoreoStringPool*)
 T CChoreoEvent::RestoreFromBuffer(CUtlBuffer&, CChoreoScene*, IChoreoStringPool*)
 T CChoreoEvent::SetActive(bool)
 T CChoreoEvent::SetActor(CChoreoActor*)
 T CChoreoEvent::SetChannel(CChoreoChannel*)
 T CChoreoEvent::SetCloseCaptionToken(char const*)
 T CChoreoEvent::SetCloseCaptionType(CChoreoEvent::CLOSECAPTION)
 T CChoreoEvent::SetCombinedUsingGenderToken(bool)
 T CChoreoEvent::SetDefaultCurveType(int)
 T CChoreoEvent::SetDistanceToTarget(float)
 T CChoreoEvent::SetEndTime(float)
 T CChoreoEvent::SetFixedLength(bool)
 T CChoreoEvent::SetForceShortMovement(bool)
 T CChoreoEvent::SetGestureSequenceDuration(float)
 T CChoreoEvent::SetLastSlaveEndTime(float)
 T CChoreoEvent::SetLockBodyFacing(bool)
 T CChoreoEvent::SetLoopCount(int)
 T CChoreoEvent::SetName(char const*)
 T CChoreoEvent::SetNumLoopsRemaining(int)
 T CChoreoEvent::SetNumSlaves(int)
 T CChoreoEvent::SetParameters(char const*)
 T CChoreoEvent::SetParameters2(char const*)
 T CChoreoEvent::SetParameters3(char const*)
 T CChoreoEvent::SetPitch(int)
 T CChoreoEvent::SetPlayOverScript(bool)
 T CChoreoEvent::SetRequiredCombinedChecksum(unsigned int)
 T CChoreoEvent::SetResumeCondition(bool)
 T CChoreoEvent::SetStartTime(float)
 T CChoreoEvent::SetSubScene(CChoreoScene*)
 T CChoreoEvent::SetSuppressingCaptionAttenuation(bool)
 T CChoreoEvent::SetSyncToFollowingGesture(bool)
 T CChoreoEvent::SetTrackLookupSet(bool)
 T CChoreoEvent::SetType(CChoreoEvent::EVENTTYPE)
 T CChoreoEvent::SetUsingCombinedFile(bool)
 T CChoreoEvent::SetUsingRelativeTag(bool, char const*, char const*)
 T CChoreoEvent::SetYaw(int)
 T CChoreoEvent::SnapTimes()
 T CChoreoEvent::StartProcessing(IChoreoEventCallback*, CChoreoScene*, float)
 T CChoreoEvent::StopProcessing(IChoreoEventCallback*, CChoreoScene*, float)
 T CChoreoEvent::TypeForAbsoluteTagName(char const*)
 T CChoreoEvent::TypeForName(char const*)
 T CChoreoEvent::VerifyTagOrder()
 T CChoreoEvent::~CChoreoEvent()
 T CChoreoGenericServerVehicle::GetVehicleViewPosition(int, Vector*, QAngle*, float*)
 T CChoreoGenericServerVehicle::IsPassengerUsingStandardWeapons(int)
 T CChoreoGenericServerVehicle::ItemPostFrame(CBasePlayer*)
 T CChoreoGenericServerVehicle::SetPlayerCanShoot(bool, int)
 T CChoreoScene::AllocActor()
 T CChoreoScene::AllocChannel()
 T CChoreoScene::AllocEvent()
 T CChoreoScene::CChoreoScene(IChoreoEventCallback*)
 T CChoreoScene::CheckEventCompletion()
 T CChoreoScene::CurveHasEndTime()
 T CChoreoScene::EventLess(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&)
 T CChoreoScene::EventThink(CChoreoEvent*, float, float, bool, CChoreoScene::PROCESSING_TYPE&)
 T CChoreoScene::FindActorIndex(CChoreoActor*)
 T CChoreoScene::FindAdjustedEndTime()
 T CChoreoScene::FindStopTime()
 T CChoreoScene::FindTagByName(char const*, char const*)
 T CChoreoScene::GetActor(int)
 T CChoreoScene::GetDefaultCurveType()
 T CChoreoScene::GetDuration()
 T CChoreoScene::GetEvent(int)
 T CChoreoScene::GetFilename() const
 T CChoreoScene::GetNumActors()
 T CChoreoScene::GetNumChannels()
 T CChoreoScene::GetNumEvents()
 T CChoreoScene::GetPlayingSoundName(char*, int)
 T CChoreoScene::GetSoundFileStartupLatency() const
 T CChoreoScene::GetTime()
 T CChoreoScene::HasEventsOfType(CChoreoEvent::EVENTTYPE) const
 T CChoreoScene::HasUnplayedSpeech()
 T CChoreoScene::InternalDetermineEventTypes()
 T CChoreoScene::IsBackground()
 T CChoreoScene::IsSubScene() const
 T CChoreoScene::LoopToTime(float)
 T CChoreoScene::ParseActor()
 T CChoreoScene::ParseChannel(CChoreoActor*)
 T CChoreoScene::ParseEvent(CChoreoActor*, CChoreoChannel*)
 T CChoreoScene::ParseFlexAnimations(ISceneTokenProcessor*, CChoreoEvent*, bool)
 T CChoreoScene::ParseFromBuffer(char const*, ISceneTokenProcessor*)
 T CChoreoScene::ParseScaleSettings(ISceneTokenProcessor*, CChoreoScene*)
 T CChoreoScene::ReconcileCloseCaption()
 T CChoreoScene::ReconcileGestureTimes()
 T CChoreoScene::ReconcileTags()
 T CChoreoScene::ResetSimulation(bool, float, float)
 T CChoreoScene::RestoreFromBinaryBuffer(CUtlBuffer&, char const*, IChoreoStringPool*)
 T CChoreoScene::ResumeSimulation()
 T CChoreoScene::SetBackground(bool)
 T CChoreoScene::SetEventCallbackInterface(IChoreoEventCallback*)
 T CChoreoScene::SetPrintFunc(void (*)(char const*, ...))
 T CChoreoScene::SetSoundFileStartupLatency(float)
 T CChoreoScene::SetSubScene(bool)
 T CChoreoScene::SetTime(float)
 T CChoreoScene::SetTimeZoom(char const*, int)
 T CChoreoScene::ShouldIgnorePhonemes() const
 T CChoreoScene::SimulationFinished()
 T CChoreoScene::SnapTime(float)
 T CChoreoScene::Think(float)
 T CChoreoScene::choreoprintf(int, char const*, ...)
 T CChoreoScene::~CChoreoScene()
 T CChoreoStringPool::FindOrAddString(char const*)
 T CChoreoStringPool::GetString(short, char*, int)
 T CCitadelEnergyCore::GetDataDescMap()
 T CCitadelEnergyCore::GetServerClass()
 T CCitadelEnergyCore::InputStartCharge(inputdata_t&)
 T CCitadelEnergyCore::InputStartDischarge(inputdata_t&)
 T CCitadelEnergyCore::InputStop(inputdata_t&)
 T CCitadelEnergyCore::Precache()
 T CCitadelEnergyCore::ShouldTransmit(CCheckTransmitInfo const*)
 T CCitadelEnergyCore::Spawn()
 T CCitadelEnergyCore::UpdateTransmitState()
 T CCitadelEnergyCore::YouForgotToImplementOrDeclareServerClass()
 T CCitadelEnergyCore::~CCitadelEnergyCore()
 T CClassMemoryPool<CPaintBlob>::Clear()
 T CClassMemoryPool<GCSDK::CNetPacket>::~CClassMemoryPool()
 T CClassMemoryPool<PanelAnimationMap>::Clear()
 T CClassPtrSaveRestoreOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CClassPtrSaveRestoreOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CCleanupDefaultRelationShips::Shutdown()
 T CCleanupDefaultRelationShips::~CCleanupDefaultRelationShips()
 T CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
 T CCollisionEvent::AddDamageEvent(CBaseEntity*, CTakeDamageInfo const&, IPhysicsObject*, bool, Vector const&, Vector const&)
 T CCollisionEvent::AddDamageInflictor(IPhysicsObject*, float, Vector const&, Vector const&, bool)
 T CCollisionEvent::AddRemoveObject(IServerNetworkable*)
 T CCollisionEvent::AddTouchEvent(CBaseEntity*, CBaseEntity*, int, Vector const&, Vector const&)
 T CCollisionEvent::AdditionalCollisionChecksThisTick(int)
 T CCollisionEvent::DeltaTimeSinceLastFluid(CBaseEntity*)
 T CCollisionEvent::EndTouch(IPhysicsObject*, IPhysicsObject*, IPhysicsCollisionData*)
 T CCollisionEvent::FindOrAddPenetrateEvent(CBaseEntity*, CBaseEntity*)
 T CCollisionEvent::FluidEndTouch(IPhysicsObject*, IPhysicsFluidController*)
 T CCollisionEvent::FluidStartTouch(IPhysicsObject*, IPhysicsFluidController*)
 T CCollisionEvent::FlushQueuedOperations()
 T CCollisionEvent::FrameUpdate()
 T CCollisionEvent::Friction(IPhysicsObject*, float, int, int, IPhysicsCollisionData*)
 T CCollisionEvent::GetListOfPenetratingEntities(CBaseEntity*, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >&)
 T CCollisionEvent::LevelShutdown()
 T CCollisionEvent::ObjectEnterTrigger(IPhysicsObject*, IPhysicsObject*)
 T CCollisionEvent::ObjectLeaveTrigger(IPhysicsObject*, IPhysicsObject*)
 T CCollisionEvent::ObjectSleep(IPhysicsObject*)
 T CCollisionEvent::ObjectWake(IPhysicsObject*)
 T CCollisionEvent::PostCollision(vcollisionevent_t*)
 T CCollisionEvent::PostSimulationFrame()
 T CCollisionEvent::PreCollision(vcollisionevent_t*)
 T CCollisionEvent::RemovePenetrationEvents(CBaseEntity*)
 T CCollisionEvent::RestoreDamageInflictorState(IPhysicsObject*)
 T CCollisionEvent::RestoreDamageInflictorState(int, float)
 T CCollisionEvent::ShouldCollide(IPhysicsObject*, IPhysicsObject*, void*, void*)
 T CCollisionEvent::ShouldFreezeContacts(IPhysicsObject**, int)
 T CCollisionEvent::ShouldFreezeObject(IPhysicsObject*)
 T CCollisionEvent::ShouldSolvePenetration(IPhysicsObject*, IPhysicsObject*, void*, void*, float)
 T CCollisionEvent::StartTouch(IPhysicsObject*, IPhysicsObject*, IPhysicsCollisionData*)
 T CCollisionEvent::UpdateDamageEvents()
 T CCollisionEvent::UpdateFrictionSounds()
 T CCollisionEvent::UpdatePenetrateEvents()
 T CCollisionEvent::UpdateTouchEvents()
 T CCollisionProperty::CCollisionProperty()
 T CCollisionProperty::CalcDistanceFromPoint(Vector const&) const
 T CCollisionProperty::CalcNearestPoint(Vector const&, Vector*) const
 T CCollisionProperty::CalcSqrDistanceFromPoint(Vector const&) const
 T CCollisionProperty::CollisionAABBToWorldAABB(Vector const&, Vector const&, Vector*, Vector*) const
 T CCollisionProperty::CollisionToWorldTransform() const
 T CCollisionProperty::ComputeRotationExpandedSequenceBounds(Vector*, Vector*)
 T CCollisionProperty::ComputeSurroundingBox(Vector*, Vector*)
 T CCollisionProperty::ComputeVPhysicsSurroundingBox(Vector*, Vector*)
 T CCollisionProperty::DestroyPartitionHandle()
 T CCollisionProperty::DoesVPhysicsInvalidateSurroundingBox() const
 T CCollisionProperty::GetCollisionAngles() const
 T CCollisionProperty::GetCollisionGroup() const
 T CCollisionProperty::GetCollisionModel()
 T CCollisionProperty::GetCollisionModelIndex()
 T CCollisionProperty::GetCollisionOrigin() const
 T CCollisionProperty::GetDataDescMap()
 T CCollisionProperty::GetEntityHandle()
 T CCollisionProperty::GetIClientUnknown()
 T CCollisionProperty::GetRequiredTriggerFlags() const
 T CCollisionProperty::GetRootParentToWorldTransform() const
 T CCollisionProperty::GetSolid() const
 T CCollisionProperty::GetSolidFlags() const
 T CCollisionProperty::GetVPhysicsObject() const
 T CCollisionProperty::Init(CBaseEntity*)
 T CCollisionProperty::IsPointInBounds(Vector const&) const
 T CCollisionProperty::MarkPartitionHandleDirty()
 T CCollisionProperty::MarkSurroundingBoundsDirty()
 T CCollisionProperty::NetworkStateChanged()
 T CCollisionProperty::NetworkStateChanged(void*)
 T CCollisionProperty::NormalizedToCollisionSpace(Vector const&, Vector*) const
 T CCollisionProperty::NormalizedToWorldSpace(Vector const&, Vector*) const
 T CCollisionProperty::OBBCenter() const
 T CCollisionProperty::OBBMaxs() const
 T CCollisionProperty::OBBMins() const
 T CCollisionProperty::OBBSize() const
 T CCollisionProperty::RandomPointInBounds(Vector const&, Vector const&, Vector*) const
 T CCollisionProperty::SetCollisionBounds(Vector const&, Vector const&)
 T CCollisionProperty::SetSolid(SolidType_t)
 T CCollisionProperty::SetSolidFlags(int)
 T CCollisionProperty::SetSurroundingBoundsType(SurroundingBoundsType_t, Vector const*, Vector const*)
 T CCollisionProperty::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CCollisionProperty::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)
 T CCollisionProperty::UpdatePartition()
 T CCollisionProperty::UseTriggerBounds(bool, float)
 T CCollisionProperty::WorldSpaceCenter() const
 T CCollisionProperty::WorldSpaceSurroundingBounds(Vector*, Vector*)
 T CCollisionProperty::WorldSpaceTriggerBounds(Vector*, Vector*) const
 T CCollisionProperty::~CCollisionProperty()
 T CColorCorrection::Activate()
 T CColorCorrection::CColorCorrection()
 T CColorCorrection::FadeInThink()
 T CColorCorrection::FadeOutThink()
 T CColorCorrection::GetDataDescMap()
 T CColorCorrection::GetServerClass()
 T CColorCorrection::InputDisable(inputdata_t&)
 T CColorCorrection::InputEnable(inputdata_t&)
 T CColorCorrection::InputSetFadeInDuration(inputdata_t&)
 T CColorCorrection::InputSetFadeOutDuration(inputdata_t&)
 T CColorCorrection::ObjectCaps()
 T CColorCorrection::Spawn()
 T CColorCorrection::UpdateTransmitState()
 T CColorCorrection::YouForgotToImplementOrDeclareServerClass()
 T CColorCorrection::~CColorCorrection()
 T CColorCorrectionSystem::FireGameEvent(IGameEvent*)
 T CColorCorrectionSystem::InitMasterController()
 T CColorCorrectionSystem::LevelInitPostEntity()
 T CColorCorrectionSystem::LevelInitPreEntity()
 T CColorCorrectionSystem::~CColorCorrectionSystem()
 T CColorCorrectionVolume::CColorCorrectionVolume()
 T CColorCorrectionVolume::EndTouch(CBaseEntity*)
 T CColorCorrectionVolume::GetDataDescMap()
 T CColorCorrectionVolume::GetServerClass()
 T CColorCorrectionVolume::InputDisable(inputdata_t&)
 T CColorCorrectionVolume::InputEnable(inputdata_t&)
 T CColorCorrectionVolume::KeyValue(char const*, char const*)
 T CColorCorrectionVolume::ObjectCaps()
 T CColorCorrectionVolume::PassesTriggerFilters(CBaseEntity*)
 T CColorCorrectionVolume::Spawn()
 T CColorCorrectionVolume::StartTouch(CBaseEntity*)
 T CColorCorrectionVolume::ThinkFunc()
 T CColorCorrectionVolume::UpdateTransmitState()
 T CColorCorrectionVolume::YouForgotToImplementOrDeclareServerClass()
 T CColorCorrectionVolume::~CColorCorrectionVolume()
 T CColorProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CColorProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CColorProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CCombatCharVisCache::FrameUpdatePreEntityThink()
 T CCombatCharVisCache::LevelShutdownPreEntity()
 T CCombatCharVisCache::~CCombatCharVisCache()
 T CCommand::CCommand()
 T CCommand::FindArg(char const*) const
 T CCommand::Tokenize(char const*, characterset_t*)
 T CCommentaryAuto::GetDataDescMap()
 T CCommentaryAuto::InputMultiplayerSpawned(inputdata_t&)
 T CCommentaryAuto::Spawn()
 T CCommentaryAuto::Think()
 T CCommentaryAuto::~CCommentaryAuto()
 T CCommentarySystem::ApplyCommentaryModifications()
 T CCommentarySystem::ConvarChanged(IConVar*, char const*, float)
 T CCommentarySystem::GetDataDescMap()
 T CCommentarySystem::GetNodeUnderCrosshair()
 T CCommentarySystem::InitCommentary()
 T CCommentarySystem::JumpToNextNode(CBasePlayer*)
 T CCommentarySystem::LevelInitPostEntity()
 T CCommentarySystem::LevelInitPreEntity()
 T CCommentarySystem::LevelShutdownPreEntity()
 T CCommentarySystem::OnRestore()
 T CCommentarySystem::ParseEntKVBlock(CBaseEntity*, KeyValues*)
 T CCommentarySystem::PrePlayerRunCommand(CBasePlayer*, CUserCmd*)
 T CCommentarySystem::ShutDownCommentary()
 T CCommentarySystem::~CCommentarySystem()
 T CCommentaryViewPosition::Precache()
 T CCommentaryViewPosition::Spawn()
 T CCommentaryViewPosition::~CCommentaryViewPosition()
 T CCommentary_SaveRestoreBlockHandler::GetBlockName()
 T CCommentary_SaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CCommentary_SaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CCommentary_SaveRestoreBlockHandler::Save(ISave*)
 T CCommentary_SaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CCommunity_GamePersonalDataCategoryInfo::ByteSize() const
 T CCommunity_GamePersonalDataCategoryInfo::Clear()
 T CCommunity_GamePersonalDataCategoryInfo::GetCachedSize() const
 T CCommunity_GamePersonalDataCategoryInfo::GetMetadata() const
 T CCommunity_GamePersonalDataCategoryInfo::IsInitialized() const
 T CCommunity_GamePersonalDataCategoryInfo::MergeFrom(CCommunity_GamePersonalDataCategoryInfo const&)
 T CCommunity_GamePersonalDataCategoryInfo::New() const
 T CCommunity_GamePersonalDataCategoryInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCommunity_GamePersonalDataCategoryInfo::SetCachedSize(int) const
 T CCommunity_GamePersonalDataCategoryInfo::SharedDtor()
 T CCommunity_GamePersonalDataCategoryInfo::~CCommunity_GamePersonalDataCategoryInfo()
 T CCommunity_GetGamePersonalDataCategories_Request::ByteSize() const
 T CCommunity_GetGamePersonalDataCategories_Request::Clear()
 T CCommunity_GetGamePersonalDataCategories_Request::GetCachedSize() const
 T CCommunity_GetGamePersonalDataCategories_Request::GetMetadata() const
 T CCommunity_GetGamePersonalDataCategories_Request::IsInitialized() const
 T CCommunity_GetGamePersonalDataCategories_Request::MergeFrom(CCommunity_GetGamePersonalDataCategories_Request const&)
 T CCommunity_GetGamePersonalDataCategories_Request::New() const
 T CCommunity_GetGamePersonalDataCategories_Request::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCommunity_GetGamePersonalDataCategories_Request::SetCachedSize(int) const
 T CCommunity_GetGamePersonalDataCategories_Request::~CCommunity_GetGamePersonalDataCategories_Request()
 T CCommunity_GetGamePersonalDataCategories_Response::ByteSize() const
 T CCommunity_GetGamePersonalDataCategories_Response::Clear()
 T CCommunity_GetGamePersonalDataCategories_Response::GetCachedSize() const
 T CCommunity_GetGamePersonalDataCategories_Response::GetMetadata() const
 T CCommunity_GetGamePersonalDataCategories_Response::IsInitialized() const
 T CCommunity_GetGamePersonalDataCategories_Response::MergeFrom(CCommunity_GetGamePersonalDataCategories_Response const&)
 T CCommunity_GetGamePersonalDataCategories_Response::New() const
 T CCommunity_GetGamePersonalDataCategories_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCommunity_GetGamePersonalDataCategories_Response::SetCachedSize(int) const
 T CCommunity_GetGamePersonalDataCategories_Response::~CCommunity_GetGamePersonalDataCategories_Response()
 T CCommunity_GetGamePersonalDataEntries_Request::ByteSize() const
 T CCommunity_GetGamePersonalDataEntries_Request::Clear()
 T CCommunity_GetGamePersonalDataEntries_Request::GetCachedSize() const
 T CCommunity_GetGamePersonalDataEntries_Request::GetMetadata() const
 T CCommunity_GetGamePersonalDataEntries_Request::IsInitialized() const
 T CCommunity_GetGamePersonalDataEntries_Request::MergeFrom(CCommunity_GetGamePersonalDataEntries_Request const&)
 T CCommunity_GetGamePersonalDataEntries_Request::New() const
 T CCommunity_GetGamePersonalDataEntries_Request::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCommunity_GetGamePersonalDataEntries_Request::SetCachedSize(int) const
 T CCommunity_GetGamePersonalDataEntries_Request::SharedDtor()
 T CCommunity_GetGamePersonalDataEntries_Request::~CCommunity_GetGamePersonalDataEntries_Request()
 T CCommunity_GetGamePersonalDataEntries_Response::ByteSize() const
 T CCommunity_GetGamePersonalDataEntries_Response::Clear()
 T CCommunity_GetGamePersonalDataEntries_Response::GetCachedSize() const
 T CCommunity_GetGamePersonalDataEntries_Response::GetMetadata() const
 T CCommunity_GetGamePersonalDataEntries_Response::IsInitialized() const
 T CCommunity_GetGamePersonalDataEntries_Response::MergeFrom(CCommunity_GetGamePersonalDataEntries_Response const&)
 T CCommunity_GetGamePersonalDataEntries_Response::New() const
 T CCommunity_GetGamePersonalDataEntries_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCommunity_GetGamePersonalDataEntries_Response::SetCachedSize(int) const
 T CCommunity_GetGamePersonalDataEntries_Response::~CCommunity_GetGamePersonalDataEntries_Response()
 T CCommunity_TerminateGamePersonalDataEntries_Request::ByteSize() const
 T CCommunity_TerminateGamePersonalDataEntries_Request::Clear()
 T CCommunity_TerminateGamePersonalDataEntries_Request::GetCachedSize() const
 T CCommunity_TerminateGamePersonalDataEntries_Request::GetMetadata() const
 T CCommunity_TerminateGamePersonalDataEntries_Request::IsInitialized() const
 T CCommunity_TerminateGamePersonalDataEntries_Request::MergeFrom(CCommunity_TerminateGamePersonalDataEntries_Request const&)
 T CCommunity_TerminateGamePersonalDataEntries_Request::New() const
 T CCommunity_TerminateGamePersonalDataEntries_Request::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCommunity_TerminateGamePersonalDataEntries_Request::SetCachedSize(int) const
 T CCommunity_TerminateGamePersonalDataEntries_Request::~CCommunity_TerminateGamePersonalDataEntries_Request()
 T CCommunity_TerminateGamePersonalDataEntries_Response::ByteSize() const
 T CCommunity_TerminateGamePersonalDataEntries_Response::Clear()
 T CCommunity_TerminateGamePersonalDataEntries_Response::GetCachedSize() const
 T CCommunity_TerminateGamePersonalDataEntries_Response::GetMetadata() const
 T CCommunity_TerminateGamePersonalDataEntries_Response::IsInitialized() const
 T CCommunity_TerminateGamePersonalDataEntries_Response::MergeFrom(CCommunity_TerminateGamePersonalDataEntries_Response const&)
 T CCommunity_TerminateGamePersonalDataEntries_Response::New() const
 T CCommunity_TerminateGamePersonalDataEntries_Response::SerializeWithCachedSizesToArray(unsigned char*) const
 T CCommunity_TerminateGamePersonalDataEntries_Response::SetCachedSize(int) const
 T CCommunity_TerminateGamePersonalDataEntries_Response::~CCommunity_TerminateGamePersonalDataEntries_Response()
 T CConceptHistoriesDataOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CConceptHistoriesDataOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CConceptHistoriesDataOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CConceptHistoriesDataOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CConceptInfoMap::~CConceptInfoMap()
 T CConstantForceController::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CConstraintAnchor::GetDataDescMap()
 T CConstraintAnchor::Spawn()
 T CConstraintAnchor::~CConstraintAnchor()
 T CConstraintFloodList::AddLink(CBaseEntity*, CBaseEntity*, bool)
 T CConstraintFloodList::BuildGraphFromEntity(CBaseEntity*, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >&)
 T CConstraintFloodList::CConstraintFloodList()
 T CCopyRecipientFilter::AddRecipient(CBasePlayer*)
 T CCopyRecipientFilter::GetRecipientCount() const
 T CCopyRecipientFilter::GetRecipientIndex(int) const
 T CCopyRecipientFilter::Init(IRecipientFilter*)
 T CCopyRecipientFilter::IsInitMessage() const
 T CCopyRecipientFilter::IsReliable() const
 T CCopyRecipientFilter::~CCopyRecipientFilter()
 T CCorpse::GetServerClass()
 T CCorpse::ObjectCaps()
 T CCorpse::YouForgotToImplementOrDeclareServerClass()
 T CCorpse::~CCorpse()
 T CCredits::GetDataDescMap()
 T CCredits::InputRollCredits(inputdata_t&)
 T CCredits::InputRollOutroCredits(inputdata_t&)
 T CCredits::InputSetLogoLength(inputdata_t&)
 T CCredits::InputShowLogo(inputdata_t&)
 T CCredits::OnRestore()
 T CCredits::RollOutroCredits()
 T CCredits::Spawn()
 T CCredits::~CCredits()
 T CCubeRotationController::Activate()
 T CCubeRotationController::GetDataDescMap()
 T CCubeRotationController::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CCubeRotationController::Spawn()
 T CCubeRotationController::~CCubeRotationController()
 T CCurveData::Add(float, float, bool)
 T CCurveData::Clear()
 T CCurveData::GetBoundedSample(ICurveDataAccessor*, int, bool&)
 T CCurveData::GetCount()
 T CCurveData::GetIntensity(ICurveDataAccessor*, float)
 T CCurveData::Parse(ISceneTokenProcessor*, ICurveDataAccessor*)
 T CCurveData::Resort(ICurveDataAccessor*)
 T CCurveData::RestoreFromBuffer(CUtlBuffer&, IChoreoStringPool*)
 T CCycler::GenericCyclerSpawn(char*, Vector, Vector)
 T CCycler::GetDataDescMap()
 T CCycler::InputSetSequence(inputdata_t&)
 T CCycler::IsAlive()
 T CCycler::ObjectCaps()
 T CCycler::OnTakeDamage(CTakeDamageInfo const&)
 T CCycler::Precache()
 T CCycler::Spawn()
 T CCycler::Think()
 T CCycler::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CCyclicalHoliday::IsActive(CRTime const&)
 T CCyclicalHoliday::~CCyclicalHoliday()
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::CreateResource(bonecacheparams_t const&, bool)
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::DestroyResourceStorage(void*)
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::GetRealSize(void*)
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::Lock()
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::TryLock()
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::Unlock()
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::~CDataManager()
 T CDataManagerBase::BreakLock(memhandle_t__*)
 T CDataManagerBase::CDataManagerBase(unsigned int)
 T CDataManagerBase::CreateHandle(bool)
 T CDataManagerBase::DestroyResource(memhandle_t__*)
 T CDataManagerBase::EnsureCapacity(unsigned int)
 T CDataManagerBase::FlushAll()
 T CDataManagerBase::GetResource_NoLock(memhandle_t__*)
 T CDataManagerBase::Lock()
 T CDataManagerBase::LockResource(memhandle_t__*)
 T CDataManagerBase::StoreResourceInHandle(unsigned short, void*, unsigned int)
 T CDataManagerBase::TouchByIndex(unsigned short)
 T CDataManagerBase::TryLock()
 T CDataManagerBase::Unlock()
 T CDataManagerBase::~CDataManagerBase()
 T CDataObjectAccessSystem::Init()
 T CDataObjectAccessSystem::Shutdown()
 T CDataObjectAccessSystem::~CDataObjectAccessSystem()
 T CDatadescGeneratedNameHolder::GenerateName(char const*)
 T CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder()
 T CDateBasedHoliday::IsActive(CRTime const&)
 T CDateBasedHoliday::~CDateBasedHoliday()
 T CDebugHistory::GetDataDescMap()
 T CDebugHistory::Restore(IRestore&)
 T CDebugHistory::Save(ISave&)
 T CDebugHistory::Spawn()
 T CDebugHistory::~CDebugHistory()
 T CDecal::Activate()
 T CDecal::GetDataDescMap()
 T CDecal::GetDecalEntityAndPosition(Vector*, bool)
 T CDecal::InputActivate(inputdata_t&)
 T CDecal::KeyValue(char const*, char const*)
 T CDecal::Spawn()
 T CDecal::StaticDecal()
 T CDecal::TriggerDecal(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CDecal::~CDecal()
 T CDecalEmitterSystem::CDecalEmitterSystem(char const*)
 T CDecalEmitterSystem::Clear()
 T CDecalEmitterSystem::GetDecalIndexForName(char const*)
 T CDecalEmitterSystem::Init()
 T CDecalEmitterSystem::LevelInitPreEntity()
 T CDecalEmitterSystem::LoadDecalsFromScript(char const*)
 T CDecalEmitterSystem::Shutdown()
 T CDecalEmitterSystem::TranslateDecalForGameMaterial(char const*, unsigned char)
 T CDecalEmitterSystem::~CDecalEmitterSystem()
 T CDefOps<CAI_BaseNPC*>::LessFunc(CAI_BaseNPC* const&, CAI_BaseNPC* const&)
 T CDefOps<CBaseEntity*>::LessFunc(CBaseEntity* const&, CBaseEntity* const&)
 T CDefOps<CChoreoActor*>::LessFunc(CChoreoActor* const&, CChoreoActor* const&)
 T CDefOps<CHandle<CBaseEntity> >::LessFunc(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&)
 T CDefOps<CPhysCollide const*>::LessFunc(CPhysCollide const* const&, CPhysCollide const* const&)
 T CDefOps<CSteamID>::LessFunc(CSteamID const&, CSteamID const&)
 T CDefOps<CUtlSymbol const>::LessFunc(CUtlSymbol const&, CUtlSymbol const&)
 T CDefOps<IPhysicsObject*>::LessFunc(IPhysicsObject* const&, IPhysicsObject* const&)
 T CDefOps<char const*>::LessFunc(char const* const&, char const* const&)
 T CDefOps<int>::LessFunc(int const&, int const&)
 T CDefOps<studiohdr_t const*>::LessFunc(studiohdr_t const* const&, studiohdr_t const* const&)
 T CDefOps<unsigned int>::LessFunc(unsigned int const&, unsigned int const&)
 T CDefOps<unsigned long long>::LessFunc(unsigned long long const&, unsigned long long const&)
 T CDefOps<void*>::LessFunc(void* const&, void* const&)
 T CDefSaveRestoreBlockHandler::PostRestore()
 T CDefSaveRestoreBlockHandler::PostSave()
 T CDefSaveRestoreBlockHandler::PreRestore()
 T CDefSaveRestoreBlockHandler::PreSave(CSaveRestoreData*)
 T CDefSaveRestoreOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CDefSaveRestoreOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CDefSaveRestoreOps::Parse(SaveRestoreFieldInfo_t const&, char const*)
 T CDefaultAccessor::RegisterConCommandBase(ConCommandBase*)
 T CDefaultParticleSystemQuery::DebugDrawLine(Vector const&, Vector const&, int, int, int, bool, float)
 T CDefaultParticleSystemQuery::DrawModel(void*, matrix3x4_t const&, CParticleCollection*, int, int, int, int, int, float, float, float, float, float)
 T CDefaultParticleSystemQuery::GetActivityCount()
 T CDefaultParticleSystemQuery::GetActivityNameFromIndex(int)
 T CDefaultParticleSystemQuery::GetActivityNumber(void*, char const*)
 T CDefaultParticleSystemQuery::GetClosestControllingObjectHitBox(CParticleCollection*, int, int, float, Vector*, Vector*, int*, int, char const*)
 T CDefaultParticleSystemQuery::GetCurrentViewOrigin()
 T CDefaultParticleSystemQuery::GetLightingAtPoint(Vector const&, Color&)
 T CDefaultParticleSystemQuery::GetPixelVisibility(int*, Vector const&, float)
 T CDefaultParticleSystemQuery::GetRandomPointsOnControllingObjectHitBox(CParticleCollection*, int, int, float, int, Vector*, Vector, Vector*, int*, int, char const*)
 T CDefaultParticleSystemQuery::IsEditor()
 T CDefaultParticleSystemQuery::IsPointInSolid(Vector const&, int)
 T CDefaultParticleSystemQuery::PostSimulate()
 T CDefaultParticleSystemQuery::PreSimulate()
 T CDefaultParticleSystemQuery::TraceAgainstRayTraceEnv(int, FourRays const&, float __vector(4), float __vector(4), RayTracingResult*, int) const
 T CDefaultParticleSystemQuery::TraceLine(Vector const&, Vector const&, unsigned int, IHandleEntity const*, int, CBaseTrace*)
 T CDefaultParticleSystemQuery::UpdateProjectedTexture(int, IMaterial*, Vector&, float, float, float, float, float, float, void*&)
 T CDefaultPlayerPickupVPhysics::ForcePhysgunOpen(CBasePlayer*)
 T CDefaultPlayerPickupVPhysics::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T CDefaultPlayerPickupVPhysics::OnAttemptPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CDefaultPlayerPickupVPhysics::OnFailedPhysGunPickup(Vector)
 T CDefaultPlayerPickupVPhysics::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CDefaultPlayerPickupVPhysics::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CDefaultPlayerPickupVPhysics::PhysGunLaunchAngularImpulse()
 T CDefaultPlayerPickupVPhysics::PhysGunLaunchVelocity(Vector const&, float)
 T CDefaultPlayerPickupVPhysics::PreferredCarryAngles()
 T CDefaultPlayerPickupVPhysics::ShouldPuntUseLaunchForces(PhysGunForce_t)
 T CDefaultResponseSystem::ClearInstanced()
 T CDefaultResponseSystem::GetScriptFile()
 T CDefaultResponseSystem::Init()
 T CDefaultResponseSystem::LevelInitPostEntity()
 T CDefaultResponseSystem::LevelInitPreEntity()
 T CDefaultResponseSystem::PrecacheCustomResponseSystem(char const*)
 T CDefaultResponseSystem::Release()
 T CDefaultResponseSystem::ReloadAllResponseSystems()
 T CDefaultResponseSystem::Shutdown()
 T CDefaultResponseSystem::~CDefaultResponseSystem()
 T CDefaultResponseSystemSaveRestoreBlockHandler::GetBlockName()
 T CDefaultResponseSystemSaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CDefaultResponseSystemSaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CDefaultResponseSystemSaveRestoreBlockHandler::Save(ISave*)
 T CDefaultResponseSystemSaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CDetailBlocker::~CDetailBlocker()
 T CDevShotSystem::FrameUpdatePostEntityThink()
 T CDevShotSystem::LevelInitPreEntity()
 T CDevShotSystem::SafeRemoveIfDesired()
 T CDevShotSystem::~CDevShotSystem()
 T CDirtySpatialPartitionEntityList::CDirtySpatialPartitionEntityList(char const*)
 T CDirtySpatialPartitionEntityList::Init()
 T CDirtySpatialPartitionEntityList::LevelShutdownPostEntity()
 T CDirtySpatialPartitionEntityList::OnPostQuery(int)
 T CDirtySpatialPartitionEntityList::OnPreQuery(int)
 T CDirtySpatialPartitionEntityList::Shutdown()
 T CDirtySpatialPartitionEntityList::~CDirtySpatialPartitionEntityList()
 T CDllDemandLoader::CDllDemandLoader(char const*)
 T CDllDemandLoader::GetFactory()
 T CDllDemandLoader::~CDllDemandLoader()
 T CDmxAttribute::AllocateDataMemory(DmAttributeType_t)
 T CDmxAttribute::AllocateDataMemory_AndConstruct(DmAttributeType_t)
 T CDmxAttribute::ArrayAttributeBasicType(DmAttributeType_t)
 T CDmxAttribute::CDmxAttribute(char const*)
 T CDmxAttribute::FreeDataMemory()
 T CDmxAttribute::GetArrayValue(DmAttributeType_t, void*, int, int, char const*) const
 T CDmxAttribute::GetName() const
 T CDmxAttribute::SetToDefaultValue()
 T CDmxAttribute::SetValue(char const*)
 T CDmxAttribute::SetValueFromString(char const*)
 T CDmxAttribute::Unserialize(DmAttributeType_t, CUtlBuffer&)
 T CDmxAttribute::UnserializeElement(DmAttributeType_t, CUtlBuffer&)
 T CDmxAttribute::~CDmxAttribute()
 T CDmxElement::AddAttribute(char const*)
 T CDmxElement::AddElementsToDelete(CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> >&)
 T CDmxElement::CDmxElement(char const*)
 T CDmxElement::GetAttribute(char const*)
 T CDmxElement::GetAttribute(char const*) const
 T CDmxElement::GetId() const
 T CDmxElement::GetName() const
 T CDmxElement::GetTypeString() const
 T CDmxElement::HasAttribute(char const*) const
 T CDmxElement::LockForChanges(bool)
 T CDmxElement::RemoveAllElementsRecursive()
 T CDmxElement::Resort() const
 T CDmxElement::SetId(UniqueId_t const&)
 T CDmxElement::UnpackIntoStructure(void*, DmxElementUnpackStructure_t const*) const
 T CDmxElement::~CDmxElement()
 T CDmxElementDictionary::AddArrayAttribute(CDmxAttribute*, UniqueId_t const&)
 T CDmxElementDictionary::AddAttribute(CDmxAttribute*, UniqueId_t const&)
 T CDmxElementDictionary::Clear()
 T CDmxElementDictionary::HookUpElementArrayAttributes()
 T CDmxElementDictionary::HookUpElementReferences()
 T CDmxElementDictionary::InsertElement(CDmxElement*)
 T CDmxKeyValues2ErrorStack::ReportError(char const*, ...)
 T CDmxSerializer::Unserialize(CUtlBuffer&, int, CDmxElement**)
 T CDmxSerializer::UnserializeAttributes(CUtlBuffer&, CDmxElement*, CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> >&, int, int*, char*, int)
 T CDmxSerializer::UnserializeElementArrayAttribute(CUtlBuffer&, CDmxAttribute*, CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> >&)
 T CDmxSerializerKeyValues2::EatWhitespacesAndComments(CUtlBuffer&)
 T CDmxSerializerKeyValues2::ReadToken(CUtlBuffer&, CUtlBuffer&)
 T CDmxSerializerKeyValues2::Unserialize(char const*, CUtlBuffer&, CDmxElement**)
 T CDmxSerializerKeyValues2::UnserializeArrayAttribute(CUtlBuffer&, int, char const*, DmAttributeType_t)
 T CDmxSerializerKeyValues2::UnserializeAttribute(CUtlBuffer&, int, char const*, DmAttributeType_t)
 T CDmxSerializerKeyValues2::UnserializeAttributeValueFromToken(CDmxAttribute*, DmAttributeType_t, CUtlBuffer&)
 T CDmxSerializerKeyValues2::UnserializeElement(CUtlBuffer&, char const*, int*)
 T CDmxSerializerKeyValues2::UnserializeElement(CUtlBuffer&, int*)
 T CDmxSerializerKeyValues2::UnserializeElementArrayAttribute(CUtlBuffer&, int, char const*)
 T CDmxSerializerKeyValues2::UnserializeElementAttribute(CUtlBuffer&, int, char const*, char const*)
 T CDmxSerializerKeyValues2::UnserializeId(CUtlBuffer&, int)
 T CDragDropHelperPanel::AddPanel(vgui::Panel*)
 T CDragDropHelperPanel::CDragDropHelperPanel()
 T CDragDropHelperPanel::GetAnimMap()
 T CDragDropHelperPanel::GetKBMap()
 T CDragDropHelperPanel::GetMessageMap()
 T CDragDropHelperPanel::GetPanelClassName()
 T CDragDropHelperPanel::IsWithinTraverse(int, int, bool)
 T CDragDropHelperPanel::PostChildPaint()
 T CDragDropHelperPanel::RemovePanel(vgui::Panel*)
 T CDragDropHelperPanel::~CDragDropHelperPanel()
 T CDynamicLight::DynamicLightThink()
 T CDynamicLight::GetDataDescMap()
 T CDynamicLight::GetServerClass()
 T CDynamicLight::InputToggle(inputdata_t&)
 T CDynamicLight::InputTurnOff(inputdata_t&)
 T CDynamicLight::InputTurnOn(inputdata_t&)
 T CDynamicLight::KeyValue(char const*, char const*)
 T CDynamicLight::Spawn()
 T CDynamicLight::YouForgotToImplementOrDeclareServerClass()
 T CDynamicLight::~CDynamicLight()
 T CDynamicProp::AnimThink()
 T CDynamicProp::CDynamicProp()
 T CDynamicProp::CreateBoneFollowers()
 T CDynamicProp::CreateVPhysics()
 T CDynamicProp::FinishSetSequence(int)
 T CDynamicProp::GetDataDescMap()
 T CDynamicProp::GetRootPhysicsObjectForBreak()
 T CDynamicProp::GetServerClass()
 T CDynamicProp::HandleAnimEvent(animevent_t*)
 T CDynamicProp::InputBecomeRagdoll(inputdata_t&)
 T CDynamicProp::InputDisableCollision(inputdata_t&)
 T CDynamicProp::InputEnableCollision(inputdata_t&)
 T CDynamicProp::InputFadeAndKill(inputdata_t&)
 T CDynamicProp::InputSetAnimation(inputdata_t&)
 T CDynamicProp::InputSetAnimationNoReset(inputdata_t&)
 T CDynamicProp::InputSetDefaultAnimation(inputdata_t&)
 T CDynamicProp::InputSetPlaybackRate(inputdata_t&)
 T CDynamicProp::InputTurnOff(inputdata_t&)
 T CDynamicProp::InputTurnOn(inputdata_t&)
 T CDynamicProp::NotifyPositionChanged(CBaseEntity*)
 T CDynamicProp::OnRestore()
 T CDynamicProp::OverridePropdata()
 T CDynamicProp::PropSetAnim(char const*)
 T CDynamicProp::PropSetSequence(int)
 T CDynamicProp::SetParent(CBaseEntity*, int)
 T CDynamicProp::Spawn()
 T CDynamicProp::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CDynamicProp::UpdateOnRemove()
 T CDynamicProp::YouForgotToImplementOrDeclareServerClass()
 T CDynamicProp::~CDynamicProp()
 T CEconColorDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconCraftingRecipeDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconCraftingRecipeDefinition::CEconCraftingRecipeDefinition()
 T CEconCraftingRecipeDefinition::CopyPolymorphic(CEconCraftingRecipeDefinition const*)
 T CEconCraftingRecipeDefinition::ItemListMatchesInputs(CUtlVector<CEconItem*, CUtlMemory<CEconItem*, int> >*, KeyValues*, bool, CUtlVector<unsigned long long, CUtlMemory<unsigned long long, int> >*) const
 T CEconCraftingRecipeDefinition::operator=(CEconCraftingRecipeDefinition const&)
 T CEconCraftingRecipeDefinition::~CEconCraftingRecipeDefinition()
 T CEconEntity::CEconEntity()
 T CEconEntity::CalculateVisibleClassFor(CBaseCombatCharacter*)
 T CEconEntity::GetAttributeContainer()
 T CEconEntity::GetAttributeList()
 T CEconEntity::GetAttributeManager()
 T CEconEntity::GetAttributeOwner()
 T CEconEntity::GetDataDescMap()
 T CEconEntity::GiveTo(CBaseEntity*)
 T CEconEntity::InitializeAttributes()
 T CEconEntity::NetworkVar_m_AttributeManager::NetworkStateChanged()
 T CEconEntity::NetworkVar_m_AttributeManager::NetworkStateChanged(void*)
 T CEconEntity::NetworkVar_m_AttributeManager::~NetworkVar_m_AttributeManager()
 T CEconEntity::OnNewModel()
 T CEconEntity::PlayAnimForPlaybackEvent(wearableanimplayback_t)
 T CEconEntity::ReapplyProvision()
 T CEconEntity::TranslateViewmodelHandActivityInternal(Activity)
 T CEconEntity::UpdateBodygroups(CBaseCombatCharacter*, int)
 T CEconEntity::UpdateModelToClass()
 T CEconEntity::UpdateOnRemove()
 T CEconEntity::~CEconEntity()
 T CEconItem::AddCustomIntAttribute(unsigned short, unsigned int)
 T CEconItem::BAddDestroyToMessage(CUtlBuffer&) const
 T CEconItem::BAddUpdateToMessage(CUtlBuffer&, CUtlVector<int, CUtlMemory<int, int> > const&) const
 T CEconItem::BIsKeyLess(GCSDK::CSharedObject const&) const
 T CEconItem::BParseCreateFromMessage(CUtlBuffer const&)
 T CEconItem::BUpdateFromNetwork(GCSDK::CSharedObject const&, CUtlBuffer const&)
 T CEconItem::CEconItem()
 T CEconItem::Copy(GCSDK::CSharedObject const&)
 T CEconItem::CustomAttributes() const
 T CEconItem::DeserializeFromProtoBufItem(CSOEconItem const&)
 T CEconItem::Dump() const
 T CEconItem::FindAttributeInternal(CEconItemAttributeDefinition const*, float*) const
 T CEconItem::GetAccountID() const
 T CEconItem::GetCustomDesc() const
 T CEconItem::GetCustomName() const
 T CEconItem::GetEquippedPositionForClass(unsigned short) const
 T CEconItem::GetFlags() const
 T CEconItem::GetInUse() const
 T CEconItem::GetItemDefinition() const
 T CEconItem::GetItemLevel() const
 T CEconItem::GetOrigin() const
 T CEconItem::GetQuality() const
 T CEconItem::GetQuantity() const
 T CEconItem::GetStyle() const
 T CEconItem::GetTypeID() const
 T CEconItem::IsEquippedForClass(unsigned short) const
 T CEconItem::IsTradable() const
 T CEconItem::IsUsableInCrafting() const
 T CEconItem::IterateAttributes(IEconItemAttributeIterator*) const
 T CEconItem::SerializeToProtoBufItem(CSOEconItem&) const
 T CEconItem::SetItemID(unsigned long long)
 T CEconItem::UpdateEquippedState(unsigned short, unsigned short)
 T CEconItem::operator=(CEconItem const&)
 T CEconItem::~CEconItem()
 T CEconItemAttribute const* GetAttributeByClass_Helper<CAttributeList const, CEconItemAttribute const>(CAttributeList const*, char const*)
 T CEconItemAttribute::CEconItemAttribute(unsigned short, float)
 T CEconItemAttribute::CEconItemAttribute(unsigned short, unsigned int)
 T CEconItemAttribute::GetStaticData() const
 T CEconItemAttribute::GetValue() const
 T CEconItemAttribute::NetworkStateChanged()
 T CEconItemAttribute::NetworkStateChanged(void*)
 T CEconItemAttribute::SetToRandomValue()
 T CEconItemAttributeDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemAttributeDefinition::GenerateRandomValue() const
 T CEconItemAttributeDefinition::operator=(CEconItemAttributeDefinition const&)
 T CEconItemAttributeDefinition::~CEconItemAttributeDefinition()
 T CEconItemDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemDefinition::BInitFromTestItemKVs(int, KeyValues*, CEconItemSchema&)
 T CEconItemDefinition::BInitItemMappings(CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemDefinition::BInitStylesBlockFromKV(KeyValues*, CEconItemSchema&, perteamvisuals_t*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemDefinition::BInitVisualBlockFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemDefinition::CEconItemDefinition()
 T CEconItemDefinition::CopyPolymorphic(CEconItemDefinition const*)
 T CEconItemDefinition::GeneratePrecacheModelStrings(bool, CUtlVector<char const*, CUtlMemory<char const*, int> >*)
 T CEconItemDefinition::GetBundleInfo()
 T CEconItemDefinition::GetItemSetIndex() const
 T CEconItemDefinition::HasStaticAttribute(unsigned int, float*) const
 T CEconItemDefinition::IsContentStreamable() const
 T CEconItemDefinition::RollItemLevel() const
 T CEconItemDefinition::~CEconItemDefinition()
 T CEconItemQualityDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemQualityDefinition::CEconItemQualityDefinition(CEconItemQualityDefinition const&)
 T CEconItemSchema::AssignDefaultBodygroupState(char const*, int)
 T CEconItemSchema::BGetItemQualityFromName(char const*, unsigned char*) const
 T CEconItemSchema::BInit(char const*, char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitAchievementRewards(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitArmoryData(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitAttributeControlledParticleSystems(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitAttributes(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitBinaryBuffer(CUtlBuffer&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitColors(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitConcreteItemCounts(CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitDefinitionPrefabs(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitEquipRegionConflicts(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitEquipRegions(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitGameInfo(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitItemSets(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitItems(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitLootLists(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitQualities(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitRecipes(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitRevolvingLootLists(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitSchema(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::BInitTextBuffer(CUtlBuffer&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSchema::CEconItemSchema()
 T CEconItemSchema::CalculateNumberOfConcreteItems(CEconItemDefinition const*)
 T CEconItemSchema::CreateCraftingRecipeDefinition()
 T CEconItemSchema::CreateEconItemDefinition()
 T CEconItemSchema::CreateEconStyleInfo()
 T CEconItemSchema::CreateEconToolImpl(char const*, char const*, char const*, item_capabilities_t, KeyValues*)
 T CEconItemSchema::FindDefinitionPrefabByName(char const*) const
 T CEconItemSchema::GetAttributeControlledParticleSystem(int)
 T CEconItemSchema::GetAttributeDefinition(int)
 T CEconItemSchema::GetAttributeDefinitionByName(char const*)
 T CEconItemSchema::GetColorDefinitionByName(char const*)
 T CEconItemSchema::GetItemDefinition(int)
 T CEconItemSchema::GetItemDefinition(int) const
 T CEconItemSchema::GetItemDefinitionByName(char const*)
 T CEconItemSchema::ItemTesting_DiscardTestDefinition(int)
 T CEconItemSchema::MaybeInitFromBuffer(IDelayedSchemaData*)
 T CEconItemSchema::Reset()
 T CEconItemSchema::~CEconItemSchema()
 T CEconItemSetDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconItemSystem::GenerateAttribute(KeyValues*)
 T CEconItemSystem::GenerateBaseItem(baseitemcriteria_t*)
 T CEconItemSystem::Init()
 T CEconItemSystem::ParseItemSchemaFile(char const*)
 T CEconItemSystem::ReloadWhitelist()
 T CEconItemSystem::ResetAttribStringCache()
 T CEconItemSystem::~CEconItemSystem()
 T CEconItemView::AddAttribute(CEconItemAttribute*)
 T CEconItemView::CEconItemView()
 T CEconItemView::CEconItemView(CEconItemView const&)
 T CEconItemView::FindAttributeInternal(CEconItemAttributeDefinition const*, float*) const
 T CEconItemView::GenerateAttributes()
 T CEconItemView::GetAccountID() const
 T CEconItemView::GetCustomDesc() const
 T CEconItemView::GetCustomName() const
 T CEconItemView::GetDataDescMap()
 T CEconItemView::GetDropType()
 T CEconItemView::GetFlags() const
 T CEconItemView::GetInUse() const
 T CEconItemView::GetItemDefinition() const
 T CEconItemView::GetItemLevel() const
 T CEconItemView::GetOrigin() const
 T CEconItemView::GetPlayerDisplayModel(int) const
 T CEconItemView::GetQuality() const
 T CEconItemView::GetQuantity() const
 T CEconItemView::GetSOCData() const
 T CEconItemView::GetSkin(int) const
 T CEconItemView::GetStaticAttribValue(char const*) const
 T CEconItemView::GetStaticData() const
 T CEconItemView::GetStyle() const
 T CEconItemView::Init(int, int, int, bool, unsigned int)
 T CEconItemView::IterateAttributes(IEconItemAttributeIterator*) const
 T CEconItemView::NetworkStateChanged()
 T CEconItemView::NetworkStateChanged(void*)
 T CEconItemView::NetworkVar_m_AttributeList::NetworkStateChanged()
 T CEconItemView::NetworkVar_m_AttributeList::NetworkStateChanged(void*)
 T CEconItemView::operator=(CEconItemView const&)
 T CEconItemView::~CEconItemView()
 T CEconLootListDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconSharedToolSupport::CanCollect(IEconItemInterface const*, IEconItemInterface const*)
 T CEconStyleInfo::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CEconStyleInfo::GeneratePrecacheModelStringsForStyle(CUtlVector<char const*, CUtlMemory<char const*, int> >*) const
 T CEconStyleInfo::~CEconStyleInfo()
 T CEconTool_BackpackExpander::~CEconTool_BackpackExpander()
 T CEconTool_ClaimCode::~CEconTool_ClaimCode()
 T CEconTool_Collection::CanApplyTo(IEconItemInterface const*, IEconItemInterface const*) const
 T CEconTool_Collection::ShouldDisplayQuantity() const
 T CEconTool_Collection::~CEconTool_Collection()
 T CEconTool_CrateKey::~CEconTool_CrateKey()
 T CEconTool_CustomizeTexture::~CEconTool_CustomizeTexture()
 T CEconTool_Default::~CEconTool_Default()
 T CEconTool_DescTag::~CEconTool_DescTag()
 T CEconTool_DuelingMinigame::~CEconTool_DuelingMinigame()
 T CEconTool_Gift::CEconTool_Gift(char const*, char const*, KeyValues*)
 T CEconTool_Gift::~CEconTool_Gift()
 T CEconTool_GiftWrap::~CEconTool_GiftWrap()
 T CEconTool_NameTag::~CEconTool_NameTag()
 T CEconTool_Noisemaker::~CEconTool_Noisemaker()
 T CEconTool_PaintCan::~CEconTool_PaintCan()
 T CEconTool_WeddingRing::~CEconTool_WeddingRing()
 T CEconTool_WrappedGift::CanApplyTo(IEconItemInterface const*, IEconItemInterface const*) const
 T CEconTool_WrappedGift::~CEconTool_WrappedGift()
 T CEconWearable::CanEquip(CBaseEntity*)
 T CEconWearable::Equip(CBaseCombatCharacter*)
 T CEconWearable::GetDataDescMap()
 T CEconWearable::GetDropType()
 T CEconWearable::GetSkin()
 T CEconWearable::GiveTo(CBaseEntity*)
 T CEconWearable::IsWearable() const
 T CEconWearable::OnWearerDeath()
 T CEconWearable::RemoveFrom(CBaseEntity*)
 T CEconWearable::Spawn()
 T CEconWearable::UnEquip(CBaseCombatCharacter*)
 T CEconWearable::~CEconWearable()
 T CEffectsServer::Beam(Vector const&, Vector const&, int, int, unsigned char, unsigned char, float, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
 T CEffectsServer::Dust(Vector const&, Vector const&, float, float)
 T CEffectsServer::EnergySplash(Vector const&, Vector const&, bool)
 T CEffectsServer::IsServer()
 T CEffectsServer::MetalSparks(Vector const&, Vector const&)
 T CEffectsServer::MuzzleFlash(Vector const&, QAngle const&, float, int)
 T CEffectsServer::Ricochet(Vector const&, Vector const&)
 T CEffectsServer::Smoke(Vector const&, int, float, float)
 T CEffectsServer::Sparks(Vector const&, int, int, Vector const*)
 T CEffectsServer::SuppressEffectsSounds(bool)
 T CEffectsServer::Time()
 T CEffectsServer::~CEffectsServer()
 T CEmbers::EmberUse(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CEmbers::GetDataDescMap()
 T CEmbers::GetServerClass()
 T CEmbers::Precache()
 T CEmbers::Spawn()
 T CEmbers::YouForgotToImplementOrDeclareServerClass()
 T CEmbers::~CEmbers()
 T CEmptyConVar::GetName() const
 T CEmptyConVar::IsFlagSet(int) const
 T CEmptyConVar::SetValue(char const*)
 T CEmptyConVar::SetValue(float)
 T CEmptyConVar::SetValue(int)
 T CEmptyConVar::~CEmptyConVar()
 T CEnableMotionFixup::~CEnableMotionFixup()
 T CEnergyBallLauncher::GetDataDescMap()
 T CEnergyBallLauncher::InputBallCaught(inputdata_t&)
 T CEnergyBallLauncher::Precache()
 T CEnergyBallLauncher::Spawn()
 T CEnergyBallLauncher::SpawnBall()
 T CEnergyBallLauncher::~CEnergyBallLauncher()
 T CEntFireAutoCompletionFunctor::CommandCallback(CCommand const&)
 T CEntFireAutoCompletionFunctor::CommandCompletionCallback(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T CEntFireAutoCompletionFunctor::EntFire_AutoCompleteInput(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T CEntityBlocker::Create(Vector const&, Vector const&, Vector const&, CBaseEntity*, bool)
 T CEntityBlocker::Spawn()
 T CEntityBlocker::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CEntityBlocker::~CEntityBlocker()
 T CEntityClassList<CFuncNoPortalVolume>::LevelShutdownPostEntity()
 T CEntityClassList<CFuncNoPortalVolume>::~CEntityClassList()
 T CEntityClassList<CFuncPortalDetector>::LevelShutdownPostEntity()
 T CEntityClassList<CFuncPortalDetector>::~CEntityClassList()
 T CEntityClassList<CFuncPortalOrientation>::LevelShutdownPostEntity()
 T CEntityClassList<CFuncPortalOrientation>::~CEntityClassList()
 T CEntityClassList<CPhysicsNPCSolver>::LevelShutdownPostEntity()
 T CEntityClassList<CPhysicsNPCSolver>::~CEntityClassList()
 T CEntityClassList<CPointCamera>::LevelShutdownPostEntity()
 T CEntityClassList<CPointCamera>::~CEntityClassList()
 T CEntityClassList<CSkyCamera>::LevelShutdownPostEntity()
 T CEntityClassList<CSkyCamera>::~CEntityClassList()
 T CEntityDataInstantiator<CWatcherList>::CompareFunc(CEntityDataInstantiator<CWatcherList>::HashEntry const&, CEntityDataInstantiator<CWatcherList>::HashEntry const&)
 T CEntityDataInstantiator<CWatcherList>::CreateDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<CWatcherList>::DestroyDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<CWatcherList>::GetDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<CWatcherList>::KeyFunc(CEntityDataInstantiator<CWatcherList>::HashEntry const&)
 T CEntityDataInstantiator<CWatcherList>::~CEntityDataInstantiator()
 T CEntityDataInstantiator<ModelScale>::CompareFunc(CEntityDataInstantiator<ModelScale>::HashEntry const&, CEntityDataInstantiator<ModelScale>::HashEntry const&)
 T CEntityDataInstantiator<ModelScale>::CreateDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<ModelScale>::DestroyDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<ModelScale>::GetDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<ModelScale>::KeyFunc(CEntityDataInstantiator<ModelScale>::HashEntry const&)
 T CEntityDataInstantiator<ModelScale>::~CEntityDataInstantiator()
 T CEntityDataInstantiator<StepSimulationData>::CompareFunc(CEntityDataInstantiator<StepSimulationData>::HashEntry const&, CEntityDataInstantiator<StepSimulationData>::HashEntry const&)
 T CEntityDataInstantiator<StepSimulationData>::CreateDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<StepSimulationData>::DestroyDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<StepSimulationData>::GetDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<StepSimulationData>::KeyFunc(CEntityDataInstantiator<StepSimulationData>::HashEntry const&)
 T CEntityDataInstantiator<StepSimulationData>::~CEntityDataInstantiator()
 T CEntityDataInstantiator<groundlink_t>::CompareFunc(CEntityDataInstantiator<groundlink_t>::HashEntry const&, CEntityDataInstantiator<groundlink_t>::HashEntry const&)
 T CEntityDataInstantiator<groundlink_t>::CreateDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<groundlink_t>::DestroyDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<groundlink_t>::GetDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<groundlink_t>::KeyFunc(CEntityDataInstantiator<groundlink_t>::HashEntry const&)
 T CEntityDataInstantiator<groundlink_t>::~CEntityDataInstantiator()
 T CEntityDataInstantiator<physicspushlist_t>::CompareFunc(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&, CEntityDataInstantiator<physicspushlist_t>::HashEntry const&)
 T CEntityDataInstantiator<physicspushlist_t>::CreateDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<physicspushlist_t>::DestroyDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<physicspushlist_t>::GetDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<physicspushlist_t>::KeyFunc(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&)
 T CEntityDataInstantiator<physicspushlist_t>::~CEntityDataInstantiator()
 T CEntityDataInstantiator<touchlink_t>::CompareFunc(CEntityDataInstantiator<touchlink_t>::HashEntry const&, CEntityDataInstantiator<touchlink_t>::HashEntry const&)
 T CEntityDataInstantiator<touchlink_t>::CreateDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<touchlink_t>::DestroyDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<touchlink_t>::GetDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<touchlink_t>::KeyFunc(CEntityDataInstantiator<touchlink_t>::HashEntry const&)
 T CEntityDataInstantiator<touchlink_t>::~CEntityDataInstantiator()
 T CEntityDataInstantiator<vphysicsupdateai_t>::CompareFunc(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&, CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&)
 T CEntityDataInstantiator<vphysicsupdateai_t>::CreateDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<vphysicsupdateai_t>::DestroyDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<vphysicsupdateai_t>::GetDataObject(CBaseEntity const*)
 T CEntityDataInstantiator<vphysicsupdateai_t>::KeyFunc(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&)
 T CEntityDataInstantiator<vphysicsupdateai_t>::~CEntityDataInstantiator()
 T CEntityDissolve::Create(CBaseEntity*, CBaseEntity*)
 T CEntityDissolve::Create(CBaseEntity*, char const*, float, int, bool*)
 T CEntityDissolve::DissolveThink()
 T CEntityDissolve::ElectrocuteThink()
 T CEntityDissolve::GetDataDescMap()
 T CEntityDissolve::GetServerClass()
 T CEntityDissolve::InputDissolve(inputdata_t&)
 T CEntityDissolve::Precache()
 T CEntityDissolve::Spawn()
 T CEntityDissolve::YouForgotToImplementOrDeclareServerClass()
 T CEntityDissolve::~CEntityDissolve()
 T CEntityFactory<AR2Explosion>::Create(char const*)
 T CEntityFactory<AR2Explosion>::Destroy(IServerNetworkable*)
 T CEntityFactory<AR2Explosion>::GetEntitySize()
 T CEntityFactory<CAISound>::Create(char const*)
 T CEntityFactory<CAISound>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAISound>::GetEntitySize()
 T CEntityFactory<CAI_ActBusyGoal>::Create(char const*)
 T CEntityFactory<CAI_ActBusyGoal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_ActBusyGoal>::GetEntitySize()
 T CEntityFactory<CAI_ActBusyQueueGoal>::Create(char const*)
 T CEntityFactory<CAI_ActBusyQueueGoal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_ActBusyQueueGoal>::GetEntitySize()
 T CEntityFactory<CAI_AllySpeechManager>::Create(char const*)
 T CEntityFactory<CAI_AllySpeechManager>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_AllySpeechManager>::GetEntitySize()
 T CEntityFactory<CAI_AssaultGoal>::Create(char const*)
 T CEntityFactory<CAI_AssaultGoal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_AssaultGoal>::GetEntitySize()
 T CEntityFactory<CAI_BattleLine>::Create(char const*)
 T CEntityFactory<CAI_BattleLine>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_BattleLine>::GetEntitySize()
 T CEntityFactory<CAI_ChangeHintGroup>::Create(char const*)
 T CEntityFactory<CAI_ChangeHintGroup>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_ChangeHintGroup>::GetEntitySize()
 T CEntityFactory<CAI_ChangeTarget>::Create(char const*)
 T CEntityFactory<CAI_ChangeTarget>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_ChangeTarget>::GetEntitySize()
 T CEntityFactory<CAI_DynamicLink>::Create(char const*)
 T CEntityFactory<CAI_DynamicLink>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_DynamicLink>::GetEntitySize()
 T CEntityFactory<CAI_DynamicLinkController>::Create(char const*)
 T CEntityFactory<CAI_DynamicLinkController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_DynamicLinkController>::GetEntitySize()
 T CEntityFactory<CAI_FightFromCoverGoal>::Create(char const*)
 T CEntityFactory<CAI_FightFromCoverGoal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_FightFromCoverGoal>::GetEntitySize()
 T CEntityFactory<CAI_FollowGoal>::Create(char const*)
 T CEntityFactory<CAI_FollowGoal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_FollowGoal>::GetEntitySize()
 T CEntityFactory<CAI_Hint>::Create(char const*)
 T CEntityFactory<CAI_Hint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_Hint>::GetEntitySize()
 T CEntityFactory<CAI_LeadGoal>::Create(char const*)
 T CEntityFactory<CAI_LeadGoal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_LeadGoal>::GetEntitySize()
 T CEntityFactory<CAI_LeadGoal_Weapon>::Create(char const*)
 T CEntityFactory<CAI_LeadGoal_Weapon>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_LeadGoal_Weapon>::GetEntitySize()
 T CEntityFactory<CAI_NetworkManager>::Create(char const*)
 T CEntityFactory<CAI_NetworkManager>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_NetworkManager>::GetEntitySize()
 T CEntityFactory<CAI_RadialLinkController>::Create(char const*)
 T CEntityFactory<CAI_RadialLinkController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_RadialLinkController>::GetEntitySize()
 T CEntityFactory<CAI_Relationship>::Create(char const*)
 T CEntityFactory<CAI_Relationship>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_Relationship>::GetEntitySize()
 T CEntityFactory<CAI_ScriptConditions>::Create(char const*)
 T CEntityFactory<CAI_ScriptConditions>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_ScriptConditions>::GetEntitySize()
 T CEntityFactory<CAI_ScriptedSchedule>::Create(char const*)
 T CEntityFactory<CAI_ScriptedSchedule>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_ScriptedSchedule>::GetEntitySize()
 T CEntityFactory<CAI_ScriptedSentence>::Create(char const*)
 T CEntityFactory<CAI_ScriptedSentence>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_ScriptedSentence>::GetEntitySize()
 T CEntityFactory<CAI_ScriptedSequence>::Create(char const*)
 T CEntityFactory<CAI_ScriptedSequence>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_ScriptedSequence>::GetEntitySize()
 T CEntityFactory<CAI_SpeechFilter>::Create(char const*)
 T CEntityFactory<CAI_SpeechFilter>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_SpeechFilter>::GetEntitySize()
 T CEntityFactory<CAI_StandoffGoal>::Create(char const*)
 T CEntityFactory<CAI_StandoffGoal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_StandoffGoal>::GetEntitySize()
 T CEntityFactory<CAI_TestHull>::Create(char const*)
 T CEntityFactory<CAI_TestHull>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAI_TestHull>::GetEntitySize()
 T CEntityFactory<CAmbientGeneric>::Create(char const*)
 T CEntityFactory<CAmbientGeneric>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAmbientGeneric>::GetEntitySize()
 T CEntityFactory<CAreaPortal>::Create(char const*)
 T CEntityFactory<CAreaPortal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAreaPortal>::GetEntitySize()
 T CEntityFactory<CAssaultPoint>::Create(char const*)
 T CEntityFactory<CAssaultPoint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CAssaultPoint>::GetEntitySize()
 T CEntityFactory<CBaseAnimatingProjectile>::Create(char const*)
 T CEntityFactory<CBaseAnimatingProjectile>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseAnimatingProjectile>::GetEntitySize()
 T CEntityFactory<CBaseButton>::Create(char const*)
 T CEntityFactory<CBaseButton>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseButton>::GetEntitySize()
 T CEntityFactory<CBaseDMStart>::Create(char const*)
 T CEntityFactory<CBaseDMStart>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseDMStart>::GetEntitySize()
 T CEntityFactory<CBaseDoor>::Create(char const*)
 T CEntityFactory<CBaseDoor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseDoor>::GetEntitySize()
 T CEntityFactory<CBaseEntity>::Create(char const*)
 T CEntityFactory<CBaseEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseEntity>::GetEntitySize()
 T CEntityFactory<CBaseFilter>::Create(char const*)
 T CEntityFactory<CBaseFilter>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseFilter>::GetEntitySize()
 T CEntityFactory<CBaseFlex>::Create(char const*)
 T CEntityFactory<CBaseFlex>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseFlex>::GetEntitySize()
 T CEntityFactory<CBaseGrenade>::Create(char const*)
 T CEntityFactory<CBaseGrenade>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseGrenade>::GetEntitySize()
 T CEntityFactory<CBaseGrenadeConcussion>::Create(char const*)
 T CEntityFactory<CBaseGrenadeConcussion>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseGrenadeConcussion>::GetEntitySize()
 T CEntityFactory<CBaseGrenadeContact>::Create(char const*)
 T CEntityFactory<CBaseGrenadeContact>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseGrenadeContact>::GetEntitySize()
 T CEntityFactory<CBaseGrenadeTimed>::Create(char const*)
 T CEntityFactory<CBaseGrenadeTimed>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseGrenadeTimed>::GetEntitySize()
 T CEntityFactory<CBaseHLCombatWeapon>::Create(char const*)
 T CEntityFactory<CBaseHLCombatWeapon>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseHLCombatWeapon>::GetEntitySize()
 T CEntityFactory<CBaseMoveBehavior>::Create(char const*)
 T CEntityFactory<CBaseMoveBehavior>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseMoveBehavior>::GetEntitySize()
 T CEntityFactory<CBasePortalCombatWeapon>::Create(char const*)
 T CEntityFactory<CBasePortalCombatWeapon>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBasePortalCombatWeapon>::GetEntitySize()
 T CEntityFactory<CBaseProjectile>::Create(char const*)
 T CEntityFactory<CBaseProjectile>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseProjectile>::GetEntitySize()
 T CEntityFactory<CBaseSpriteProjectile>::Create(char const*)
 T CEntityFactory<CBaseSpriteProjectile>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseSpriteProjectile>::GetEntitySize()
 T CEntityFactory<CBaseTrigger>::Create(char const*)
 T CEntityFactory<CBaseTrigger>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseTrigger>::GetEntitySize()
 T CEntityFactory<CBaseViewModel>::Create(char const*)
 T CEntityFactory<CBaseViewModel>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBaseViewModel>::GetEntitySize()
 T CEntityFactory<CBeam>::Create(char const*)
 T CEntityFactory<CBeam>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBeam>::GetEntitySize()
 T CEntityFactory<CBeamSpotlight>::Create(char const*)
 T CEntityFactory<CBeamSpotlight>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBeamSpotlight>::GetEntitySize()
 T CEntityFactory<CBlendingCycler>::Create(char const*)
 T CEntityFactory<CBlendingCycler>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBlendingCycler>::GetEntitySize()
 T CEntityFactory<CBlood>::Create(char const*)
 T CEntityFactory<CBlood>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBlood>::GetEntitySize()
 T CEntityFactory<CBoneFollower>::Create(char const*)
 T CEntityFactory<CBoneFollower>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBoneFollower>::GetEntitySize()
 T CEntityFactory<CBreakable>::Create(char const*)
 T CEntityFactory<CBreakable>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBreakable>::GetEntitySize()
 T CEntityFactory<CBreakableSurface>::Create(char const*)
 T CEntityFactory<CBreakableSurface>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBreakableSurface>::GetEntitySize()
 T CEntityFactory<CBubbling>::Create(char const*)
 T CEntityFactory<CBubbling>::Destroy(IServerNetworkable*)
 T CEntityFactory<CBubbling>::GetEntitySize()
 T CEntityFactory<CChallengeModeEndNode>::Create(char const*)
 T CEntityFactory<CChallengeModeEndNode>::Destroy(IServerNetworkable*)
 T CEntityFactory<CChallengeModeEndNode>::GetEntitySize()
 T CEntityFactory<CChangeLevel>::Create(char const*)
 T CEntityFactory<CChangeLevel>::Destroy(IServerNetworkable*)
 T CEntityFactory<CChangeLevel>::GetEntitySize()
 T CEntityFactory<CCitadelEnergyCore>::Create(char const*)
 T CEntityFactory<CCitadelEnergyCore>::Destroy(IServerNetworkable*)
 T CEntityFactory<CCitadelEnergyCore>::GetEntitySize()
 T CEntityFactory<CColorCorrection>::Create(char const*)
 T CEntityFactory<CColorCorrection>::Destroy(IServerNetworkable*)
 T CEntityFactory<CColorCorrection>::GetEntitySize()
 T CEntityFactory<CColorCorrectionVolume>::Create(char const*)
 T CEntityFactory<CColorCorrectionVolume>::Destroy(IServerNetworkable*)
 T CEntityFactory<CColorCorrectionVolume>::GetEntitySize()
 T CEntityFactory<CCommentaryAuto>::Create(char const*)
 T CEntityFactory<CCommentaryAuto>::Destroy(IServerNetworkable*)
 T CEntityFactory<CCommentaryAuto>::GetEntitySize()
 T CEntityFactory<CCommentaryViewPosition>::Create(char const*)
 T CEntityFactory<CCommentaryViewPosition>::Destroy(IServerNetworkable*)
 T CEntityFactory<CCommentaryViewPosition>::GetEntitySize()
 T CEntityFactory<CConstraintAnchor>::Create(char const*)
 T CEntityFactory<CConstraintAnchor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CConstraintAnchor>::GetEntitySize()
 T CEntityFactory<CCorpse>::Create(char const*)
 T CEntityFactory<CCorpse>::Destroy(IServerNetworkable*)
 T CEntityFactory<CCorpse>::GetEntitySize()
 T CEntityFactory<CCredits>::Create(char const*)
 T CEntityFactory<CCredits>::Destroy(IServerNetworkable*)
 T CEntityFactory<CCredits>::GetEntitySize()
 T CEntityFactory<CCubeRotationController>::Create(char const*)
 T CEntityFactory<CCubeRotationController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CCubeRotationController>::GetEntitySize()
 T CEntityFactory<CDebugHistory>::Create(char const*)
 T CEntityFactory<CDebugHistory>::Destroy(IServerNetworkable*)
 T CEntityFactory<CDebugHistory>::GetEntitySize()
 T CEntityFactory<CDecal>::Create(char const*)
 T CEntityFactory<CDecal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CDecal>::GetEntitySize()
 T CEntityFactory<CDetailBlocker>::Create(char const*)
 T CEntityFactory<CDetailBlocker>::Destroy(IServerNetworkable*)
 T CEntityFactory<CDetailBlocker>::GetEntitySize()
 T CEntityFactory<CDynamicLight>::Create(char const*)
 T CEntityFactory<CDynamicLight>::Destroy(IServerNetworkable*)
 T CEntityFactory<CDynamicLight>::GetEntitySize()
 T CEntityFactory<CDynamicProp>::Create(char const*)
 T CEntityFactory<CDynamicProp>::Destroy(IServerNetworkable*)
 T CEntityFactory<CDynamicProp>::GetEntitySize()
 T CEntityFactory<CEconWearable>::Create(char const*)
 T CEntityFactory<CEconWearable>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEconWearable>::GetEntitySize()
 T CEntityFactory<CEmbers>::Create(char const*)
 T CEntityFactory<CEmbers>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEmbers>::GetEntitySize()
 T CEntityFactory<CEnableMotionFixup>::Create(char const*)
 T CEntityFactory<CEnableMotionFixup>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnableMotionFixup>::GetEntitySize()
 T CEntityFactory<CEnergyBallLauncher>::Create(char const*)
 T CEntityFactory<CEnergyBallLauncher>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnergyBallLauncher>::GetEntitySize()
 T CEntityFactory<CEntityBlocker>::Create(char const*)
 T CEntityFactory<CEntityBlocker>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEntityBlocker>::GetEntitySize()
 T CEntityFactory<CEntityDissolve>::Create(char const*)
 T CEntityFactory<CEntityDissolve>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEntityDissolve>::GetEntitySize()
 T CEntityFactory<CEntityFlame>::Create(char const*)
 T CEntityFactory<CEntityFlame>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEntityFlame>::GetEntitySize()
 T CEntityFactory<CEntityFreezing>::Create(char const*)
 T CEntityFactory<CEntityFreezing>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEntityFreezing>::GetEntitySize()
 T CEntityFactory<CEntityParticleTrail>::Create(char const*)
 T CEntityFactory<CEntityParticleTrail>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEntityParticleTrail>::GetEntitySize()
 T CEntityFactory<CEnvAR2Explosion>::Create(char const*)
 T CEntityFactory<CEnvAR2Explosion>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvAR2Explosion>::GetEntitySize()
 T CEntityFactory<CEnvAmbientLight>::Create(char const*)
 T CEntityFactory<CEnvAmbientLight>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvAmbientLight>::GetEntitySize()
 T CEntityFactory<CEnvBeam>::Create(char const*)
 T CEntityFactory<CEnvBeam>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvBeam>::GetEntitySize()
 T CEntityFactory<CEnvBeverage>::Create(char const*)
 T CEntityFactory<CEnvBeverage>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvBeverage>::GetEntitySize()
 T CEntityFactory<CEnvDOFController>::Create(char const*)
 T CEntityFactory<CEnvDOFController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvDOFController>::GetEntitySize()
 T CEntityFactory<CEnvDetailController>::Create(char const*)
 T CEntityFactory<CEnvDetailController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvDetailController>::GetEntitySize()
 T CEntityFactory<CEnvDustPuff>::Create(char const*)
 T CEntityFactory<CEnvDustPuff>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvDustPuff>::GetEntitySize()
 T CEntityFactory<CEnvEffectsScript>::Create(char const*)
 T CEntityFactory<CEnvEffectsScript>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvEffectsScript>::GetEntitySize()
 T CEntityFactory<CEnvEntityIgniter>::Create(char const*)
 T CEntityFactory<CEnvEntityIgniter>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvEntityIgniter>::GetEntitySize()
 T CEntityFactory<CEnvEntityMaker>::Create(char const*)
 T CEntityFactory<CEnvEntityMaker>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvEntityMaker>::GetEntitySize()
 T CEntityFactory<CEnvExplosion>::Create(char const*)
 T CEntityFactory<CEnvExplosion>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvExplosion>::GetEntitySize()
 T CEntityFactory<CEnvFade>::Create(char const*)
 T CEntityFactory<CEnvFade>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvFade>::GetEntitySize()
 T CEntityFactory<CEnvFireSensor>::Create(char const*)
 T CEntityFactory<CEnvFireSensor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvFireSensor>::GetEntitySize()
 T CEntityFactory<CEnvFireSource>::Create(char const*)
 T CEntityFactory<CEnvFireSource>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvFireSource>::GetEntitySize()
 T CEntityFactory<CEnvFunnel>::Create(char const*)
 T CEntityFactory<CEnvFunnel>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvFunnel>::GetEntitySize()
 T CEntityFactory<CEnvGlobal>::Create(char const*)
 T CEntityFactory<CEnvGlobal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvGlobal>::GetEntitySize()
 T CEntityFactory<CEnvGunfire>::Create(char const*)
 T CEntityFactory<CEnvGunfire>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvGunfire>::GetEntitySize()
 T CEntityFactory<CEnvHudHint>::Create(char const*)
 T CEntityFactory<CEnvHudHint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvHudHint>::GetEntitySize()
 T CEntityFactory<CEnvInstructorHint>::Create(char const*)
 T CEntityFactory<CEnvInstructorHint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvInstructorHint>::GetEntitySize()
 T CEntityFactory<CEnvLaser>::Create(char const*)
 T CEntityFactory<CEnvLaser>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvLaser>::GetEntitySize()
 T CEntityFactory<CEnvLight>::Create(char const*)
 T CEntityFactory<CEnvLight>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvLight>::GetEntitySize()
 T CEntityFactory<CEnvMicrophone>::Create(char const*)
 T CEntityFactory<CEnvMicrophone>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvMicrophone>::GetEntitySize()
 T CEntityFactory<CEnvMuzzleFlash>::Create(char const*)
 T CEntityFactory<CEnvMuzzleFlash>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvMuzzleFlash>::GetEntitySize()
 T CEntityFactory<CEnvParticleScript>::Create(char const*)
 T CEntityFactory<CEnvParticleScript>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvParticleScript>::GetEntitySize()
 T CEntityFactory<CEnvPlayerSurfaceTrigger>::Create(char const*)
 T CEntityFactory<CEnvPlayerSurfaceTrigger>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvPlayerSurfaceTrigger>::GetEntitySize()
 T CEntityFactory<CEnvPortalPathTrack>::Create(char const*)
 T CEntityFactory<CEnvPortalPathTrack>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvPortalPathTrack>::GetEntitySize()
 T CEntityFactory<CEnvProjectedTexture>::Create(char const*)
 T CEntityFactory<CEnvProjectedTexture>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvProjectedTexture>::GetEntitySize()
 T CEntityFactory<CEnvQuadraticBeam>::Create(char const*)
 T CEntityFactory<CEnvQuadraticBeam>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvQuadraticBeam>::GetEntitySize()
 T CEntityFactory<CEnvScreenEffect>::Create(char const*)
 T CEntityFactory<CEnvScreenEffect>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvScreenEffect>::GetEntitySize()
 T CEntityFactory<CEnvScreenOverlay>::Create(char const*)
 T CEntityFactory<CEnvScreenOverlay>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvScreenOverlay>::GetEntitySize()
 T CEntityFactory<CEnvShake>::Create(char const*)
 T CEntityFactory<CEnvShake>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvShake>::GetEntitySize()
 T CEntityFactory<CEnvShooter>::Create(char const*)
 T CEntityFactory<CEnvShooter>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvShooter>::GetEntitySize()
 T CEntityFactory<CEnvSoundscape>::Create(char const*)
 T CEntityFactory<CEnvSoundscape>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvSoundscape>::GetEntitySize()
 T CEntityFactory<CEnvSoundscapeProxy>::Create(char const*)
 T CEntityFactory<CEnvSoundscapeProxy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvSoundscapeProxy>::GetEntitySize()
 T CEntityFactory<CEnvSoundscapeTriggerable>::Create(char const*)
 T CEntityFactory<CEnvSoundscapeTriggerable>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvSoundscapeTriggerable>::GetEntitySize()
 T CEntityFactory<CEnvSpark>::Create(char const*)
 T CEntityFactory<CEnvSpark>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvSpark>::GetEntitySize()
 T CEntityFactory<CEnvSplash>::Create(char const*)
 T CEntityFactory<CEnvSplash>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvSplash>::GetEntitySize()
 T CEntityFactory<CEnvTilt>::Create(char const*)
 T CEntityFactory<CEnvTilt>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvTilt>::GetEntitySize()
 T CEntityFactory<CEnvTonemapController>::Create(char const*)
 T CEntityFactory<CEnvTonemapController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvTonemapController>::GetEntitySize()
 T CEntityFactory<CEnvTracer>::Create(char const*)
 T CEntityFactory<CEnvTracer>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvTracer>::GetEntitySize()
 T CEntityFactory<CEnvViewPunch>::Create(char const*)
 T CEntityFactory<CEnvViewPunch>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvViewPunch>::GetEntitySize()
 T CEntityFactory<CEnvWind>::Create(char const*)
 T CEntityFactory<CEnvWind>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvWind>::GetEntitySize()
 T CEntityFactory<CEnvZoom>::Create(char const*)
 T CEntityFactory<CEnvZoom>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnvZoom>::GetEntitySize()
 T CEntityFactory<CEnv_Lightrail_Endpoint>::Create(char const*)
 T CEntityFactory<CEnv_Lightrail_Endpoint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEnv_Lightrail_Endpoint>::GetEntitySize()
 T CEntityFactory<CEventQueueSaveLoadProxy>::Create(char const*)
 T CEntityFactory<CEventQueueSaveLoadProxy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CEventQueueSaveLoadProxy>::GetEntitySize()
 T CEntityFactory<CFilterClass>::Create(char const*)
 T CEntityFactory<CFilterClass>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFilterClass>::GetEntitySize()
 T CEntityFactory<CFilterCombineBall>::Create(char const*)
 T CEntityFactory<CFilterCombineBall>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFilterCombineBall>::GetEntitySize()
 T CEntityFactory<CFilterContext>::Create(char const*)
 T CEntityFactory<CFilterContext>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFilterContext>::GetEntitySize()
 T CEntityFactory<CFilterEnemy>::Create(char const*)
 T CEntityFactory<CFilterEnemy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFilterEnemy>::GetEntitySize()
 T CEntityFactory<CFilterMassGreater>::Create(char const*)
 T CEntityFactory<CFilterMassGreater>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFilterMassGreater>::GetEntitySize()
 T CEntityFactory<CFilterModel>::Create(char const*)
 T CEntityFactory<CFilterModel>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFilterModel>::GetEntitySize()
 T CEntityFactory<CFilterMultiple>::Create(char const*)
 T CEntityFactory<CFilterMultiple>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFilterMultiple>::GetEntitySize()
 T CEntityFactory<CFilterName>::Create(char const*)
 T CEntityFactory<CFilterName>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFilterName>::GetEntitySize()
 T CEntityFactory<CFilterPlayerHeld>::Create(char const*)
 T CEntityFactory<CFilterPlayerHeld>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFilterPlayerHeld>::GetEntitySize()
 T CEntityFactory<CFilterSize>::Create(char const*)
 T CEntityFactory<CFilterSize>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFilterSize>::GetEntitySize()
 T CEntityFactory<CFire>::Create(char const*)
 T CEntityFactory<CFire>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFire>::GetEntitySize()
 T CEntityFactory<CFireSmoke>::Create(char const*)
 T CEntityFactory<CFireSmoke>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFireSmoke>::GetEntitySize()
 T CEntityFactory<CFireTrail>::Create(char const*)
 T CEntityFactory<CFireTrail>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFireTrail>::GetEntitySize()
 T CEntityFactory<CFish>::Create(char const*)
 T CEntityFactory<CFish>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFish>::GetEntitySize()
 T CEntityFactory<CFishPool>::Create(char const*)
 T CEntityFactory<CFishPool>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFishPool>::GetEntitySize()
 T CEntityFactory<CFlexExpresser>::Create(char const*)
 T CEntityFactory<CFlexExpresser>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFlexExpresser>::GetEntitySize()
 T CEntityFactory<CFlextalkActor>::Create(char const*)
 T CEntityFactory<CFlextalkActor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFlextalkActor>::GetEntitySize()
 T CEntityFactory<CFogController>::Create(char const*)
 T CEntityFactory<CFogController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFogController>::GetEntitySize()
 T CEntityFactory<CFogTrigger>::Create(char const*)
 T CEntityFactory<CFogTrigger>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFogTrigger>::GetEntitySize()
 T CEntityFactory<CFogVolume>::Create(char const*)
 T CEntityFactory<CFogVolume>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFogVolume>::GetEntitySize()
 T CEntityFactory<CFuncAreaPortalWindow>::Create(char const*)
 T CEntityFactory<CFuncAreaPortalWindow>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncAreaPortalWindow>::GetEntitySize()
 T CEntityFactory<CFuncBrush>::Create(char const*)
 T CEntityFactory<CFuncBrush>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncBrush>::GetEntitySize()
 T CEntityFactory<CFuncCombineBallSpawner>::Create(char const*)
 T CEntityFactory<CFuncCombineBallSpawner>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncCombineBallSpawner>::GetEntitySize()
 T CEntityFactory<CFuncConveyor>::Create(char const*)
 T CEntityFactory<CFuncConveyor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncConveyor>::GetEntitySize()
 T CEntityFactory<CFuncIllusionary>::Create(char const*)
 T CEntityFactory<CFuncIllusionary>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncIllusionary>::GetEntitySize()
 T CEntityFactory<CFuncInstanceIoProxy>::Create(char const*)
 T CEntityFactory<CFuncInstanceIoProxy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncInstanceIoProxy>::GetEntitySize()
 T CEntityFactory<CFuncLadder>::Create(char const*)
 T CEntityFactory<CFuncLadder>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncLadder>::GetEntitySize()
 T CEntityFactory<CFuncLadderEndPoint>::Create(char const*)
 T CEntityFactory<CFuncLadderEndPoint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncLadderEndPoint>::GetEntitySize()
 T CEntityFactory<CFuncMonitor>::Create(char const*)
 T CEntityFactory<CFuncMonitor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncMonitor>::GetEntitySize()
 T CEntityFactory<CFuncMoveLinear>::Create(char const*)
 T CEntityFactory<CFuncMoveLinear>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncMoveLinear>::GetEntitySize()
 T CEntityFactory<CFuncNavBlocker>::Create(char const*)
 T CEntityFactory<CFuncNavBlocker>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncNavBlocker>::GetEntitySize()
 T CEntityFactory<CFuncNavObstruction>::Create(char const*)
 T CEntityFactory<CFuncNavObstruction>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncNavObstruction>::GetEntitySize()
 T CEntityFactory<CFuncNoPortalVolume>::Create(char const*)
 T CEntityFactory<CFuncNoPortalVolume>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncNoPortalVolume>::GetEntitySize()
 T CEntityFactory<CFuncOccluder>::Create(char const*)
 T CEntityFactory<CFuncOccluder>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncOccluder>::GetEntitySize()
 T CEntityFactory<CFuncPlacementClip>::Create(char const*)
 T CEntityFactory<CFuncPlacementClip>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncPlacementClip>::GetEntitySize()
 T CEntityFactory<CFuncPlat>::Create(char const*)
 T CEntityFactory<CFuncPlat>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncPlat>::GetEntitySize()
 T CEntityFactory<CFuncPlatRot>::Create(char const*)
 T CEntityFactory<CFuncPlatRot>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncPlatRot>::GetEntitySize()
 T CEntityFactory<CFuncPortalBumper>::Create(char const*)
 T CEntityFactory<CFuncPortalBumper>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncPortalBumper>::GetEntitySize()
 T CEntityFactory<CFuncPortalDetector>::Create(char const*)
 T CEntityFactory<CFuncPortalDetector>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncPortalDetector>::GetEntitySize()
 T CEntityFactory<CFuncPortalOrientation>::Create(char const*)
 T CEntityFactory<CFuncPortalOrientation>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncPortalOrientation>::GetEntitySize()
 T CEntityFactory<CFuncReflectiveGlass>::Create(char const*)
 T CEntityFactory<CFuncReflectiveGlass>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncReflectiveGlass>::GetEntitySize()
 T CEntityFactory<CFuncRotating>::Create(char const*)
 T CEntityFactory<CFuncRotating>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncRotating>::GetEntitySize()
 T CEntityFactory<CFuncSmokeVolume>::Create(char const*)
 T CEntityFactory<CFuncSmokeVolume>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncSmokeVolume>::GetEntitySize()
 T CEntityFactory<CFuncTankCombineCannon>::Create(char const*)
 T CEntityFactory<CFuncTankCombineCannon>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncTankCombineCannon>::GetEntitySize()
 T CEntityFactory<CFuncTankGun>::Create(char const*)
 T CEntityFactory<CFuncTankGun>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncTankGun>::GetEntitySize()
 T CEntityFactory<CFuncTankLaser>::Create(char const*)
 T CEntityFactory<CFuncTankLaser>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncTankLaser>::GetEntitySize()
 T CEntityFactory<CFuncTankMortar>::Create(char const*)
 T CEntityFactory<CFuncTankMortar>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncTankMortar>::GetEntitySize()
 T CEntityFactory<CFuncTankPhysCannister>::Create(char const*)
 T CEntityFactory<CFuncTankPhysCannister>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncTankPhysCannister>::GetEntitySize()
 T CEntityFactory<CFuncTankPulseLaser>::Create(char const*)
 T CEntityFactory<CFuncTankPulseLaser>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncTankPulseLaser>::GetEntitySize()
 T CEntityFactory<CFuncTankTrain>::Create(char const*)
 T CEntityFactory<CFuncTankTrain>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncTankTrain>::GetEntitySize()
 T CEntityFactory<CFuncTrackAuto>::Create(char const*)
 T CEntityFactory<CFuncTrackAuto>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncTrackAuto>::GetEntitySize()
 T CEntityFactory<CFuncTrackChange>::Create(char const*)
 T CEntityFactory<CFuncTrackChange>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncTrackChange>::GetEntitySize()
 T CEntityFactory<CFuncTrackTrain>::Create(char const*)
 T CEntityFactory<CFuncTrackTrain>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncTrackTrain>::GetEntitySize()
 T CEntityFactory<CFuncTrain>::Create(char const*)
 T CEntityFactory<CFuncTrain>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncTrain>::GetEntitySize()
 T CEntityFactory<CFuncTrainControls>::Create(char const*)
 T CEntityFactory<CFuncTrainControls>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncTrainControls>::GetEntitySize()
 T CEntityFactory<CFuncVPhysicsClip>::Create(char const*)
 T CEntityFactory<CFuncVPhysicsClip>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncVPhysicsClip>::GetEntitySize()
 T CEntityFactory<CFuncVehicleClip>::Create(char const*)
 T CEntityFactory<CFuncVehicleClip>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncVehicleClip>::GetEntitySize()
 T CEntityFactory<CFuncWall>::Create(char const*)
 T CEntityFactory<CFuncWall>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncWall>::GetEntitySize()
 T CEntityFactory<CFuncWallToggle>::Create(char const*)
 T CEntityFactory<CFuncWallToggle>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFuncWallToggle>::GetEntitySize()
 T CEntityFactory<CFunc_DustCloud>::Create(char const*)
 T CEntityFactory<CFunc_DustCloud>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFunc_DustCloud>::GetEntitySize()
 T CEntityFactory<CFunc_DustMotes>::Create(char const*)
 T CEntityFactory<CFunc_DustMotes>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFunc_DustMotes>::GetEntitySize()
 T CEntityFactory<CFunc_LOD>::Create(char const*)
 T CEntityFactory<CFunc_LOD>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFunc_LOD>::GetEntitySize()
 T CEntityFactory<CFunc_Portalled>::Create(char const*)
 T CEntityFactory<CFunc_Portalled>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFunc_Portalled>::GetEntitySize()
 T CEntityFactory<CFutbolCatcher>::Create(char const*)
 T CEntityFactory<CFutbolCatcher>::Destroy(IServerNetworkable*)
 T CEntityFactory<CFutbolCatcher>::GetEntitySize()
 T CEntityFactory<CGameEnd>::Create(char const*)
 T CEntityFactory<CGameEnd>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGameEnd>::GetEntitySize()
 T CEntityFactory<CGameGibManager>::Create(char const*)
 T CEntityFactory<CGameGibManager>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGameGibManager>::GetEntitySize()
 T CEntityFactory<CGamePlayerEquip>::Create(char const*)
 T CEntityFactory<CGamePlayerEquip>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGamePlayerEquip>::GetEntitySize()
 T CEntityFactory<CGamePlayerTeam>::Create(char const*)
 T CEntityFactory<CGamePlayerTeam>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGamePlayerTeam>::GetEntitySize()
 T CEntityFactory<CGamePlayerZone>::Create(char const*)
 T CEntityFactory<CGamePlayerZone>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGamePlayerZone>::GetEntitySize()
 T CEntityFactory<CGameScore>::Create(char const*)
 T CEntityFactory<CGameScore>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGameScore>::GetEntitySize()
 T CEntityFactory<CGameText>::Create(char const*)
 T CEntityFactory<CGameText>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGameText>::GetEntitySize()
 T CEntityFactory<CGameUI>::Create(char const*)
 T CEntityFactory<CGameUI>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGameUI>::GetEntitySize()
 T CEntityFactory<CGameWeaponManager>::Create(char const*)
 T CEntityFactory<CGameWeaponManager>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGameWeaponManager>::GetEntitySize()
 T CEntityFactory<CGenericActor>::Create(char const*)
 T CEntityFactory<CGenericActor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGenericActor>::GetEntitySize()
 T CEntityFactory<CGenericCycler>::Create(char const*)
 T CEntityFactory<CGenericCycler>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGenericCycler>::GetEntitySize()
 T CEntityFactory<CGenericFlexCycler>::Create(char const*)
 T CEntityFactory<CGenericFlexCycler>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGenericFlexCycler>::GetEntitySize()
 T CEntityFactory<CGenericNPC>::Create(char const*)
 T CEntityFactory<CGenericNPC>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGenericNPC>::GetEntitySize()
 T CEntityFactory<CGib>::Create(char const*)
 T CEntityFactory<CGib>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGib>::GetEntitySize()
 T CEntityFactory<CGibShooter>::Create(char const*)
 T CEntityFactory<CGibShooter>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGibShooter>::GetEntitySize()
 T CEntityFactory<CGrenadeBeam>::Create(char const*)
 T CEntityFactory<CGrenadeBeam>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGrenadeBeam>::GetEntitySize()
 T CEntityFactory<CGrenadeBeamChaser>::Create(char const*)
 T CEntityFactory<CGrenadeBeamChaser>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGrenadeBeamChaser>::GetEntitySize()
 T CEntityFactory<CGrenadeFrag>::Create(char const*)
 T CEntityFactory<CGrenadeFrag>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGrenadeFrag>::GetEntitySize()
 T CEntityFactory<CGunTarget>::Create(char const*)
 T CEntityFactory<CGunTarget>::Destroy(IServerNetworkable*)
 T CEntityFactory<CGunTarget>::GetEntitySize()
 T CEntityFactory<CHalfLife2Proxy>::Create(char const*)
 T CEntityFactory<CHalfLife2Proxy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CHalfLife2Proxy>::GetEntitySize()
 T CEntityFactory<CHandleDummy>::Create(char const*)
 T CEntityFactory<CHandleDummy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CHandleDummy>::GetEntitySize()
 T CEntityFactory<CHandleTest>::Create(char const*)
 T CEntityFactory<CHandleTest>::Destroy(IServerNetworkable*)
 T CEntityFactory<CHandleTest>::GetEntitySize()
 T CEntityFactory<CHotPotato>::Create(char const*)
 T CEntityFactory<CHotPotato>::Destroy(IServerNetworkable*)
 T CEntityFactory<CHotPotato>::GetEntitySize()
 T CEntityFactory<CHotPotatoCatcher>::Create(char const*)
 T CEntityFactory<CHotPotatoCatcher>::Destroy(IServerNetworkable*)
 T CEntityFactory<CHotPotatoCatcher>::GetEntitySize()
 T CEntityFactory<CHotPotatoSocket>::Create(char const*)
 T CEntityFactory<CHotPotatoSocket>::Destroy(IServerNetworkable*)
 T CEntityFactory<CHotPotatoSocket>::GetEntitySize()
 T CEntityFactory<CHotPotatoSpawner>::Create(char const*)
 T CEntityFactory<CHotPotatoSpawner>::Destroy(IServerNetworkable*)
 T CEntityFactory<CHotPotatoSpawner>::GetEntitySize()
 T CEntityFactory<CHoverTurretTether>::Create(char const*)
 T CEntityFactory<CHoverTurretTether>::Destroy(IServerNetworkable*)
 T CEntityFactory<CHoverTurretTether>::GetEntitySize()
 T CEntityFactory<CInfoCameraLink>::Create(char const*)
 T CEntityFactory<CInfoCameraLink>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoCameraLink>::GetEntitySize()
 T CEntityFactory<CInfoGameEventProxy>::Create(char const*)
 T CEntityFactory<CInfoGameEventProxy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoGameEventProxy>::GetEntitySize()
 T CEntityFactory<CInfoInstructorHintTarget>::Create(char const*)
 T CEntityFactory<CInfoInstructorHintTarget>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoInstructorHintTarget>::GetEntitySize()
 T CEntityFactory<CInfoIntermission>::Create(char const*)
 T CEntityFactory<CInfoIntermission>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoIntermission>::GetEntitySize()
 T CEntityFactory<CInfoLadderDismount>::Create(char const*)
 T CEntityFactory<CInfoLadderDismount>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoLadderDismount>::GetEntitySize()
 T CEntityFactory<CInfoLandmark>::Create(char const*)
 T CEntityFactory<CInfoLandmark>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoLandmark>::GetEntitySize()
 T CEntityFactory<CInfoMassCenter>::Create(char const*)
 T CEntityFactory<CInfoMassCenter>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoMassCenter>::GetEntitySize()
 T CEntityFactory<CInfoOverlayAccessor>::Create(char const*)
 T CEntityFactory<CInfoOverlayAccessor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoOverlayAccessor>::GetEntitySize()
 T CEntityFactory<CInfoPlacementHelper>::Create(char const*)
 T CEntityFactory<CInfoPlacementHelper>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoPlacementHelper>::GetEntitySize()
 T CEntityFactory<CInfoPortalScore>::Create(char const*)
 T CEntityFactory<CInfoPortalScore>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoPortalScore>::GetEntitySize()
 T CEntityFactory<CInfoRemarkable>::Create(char const*)
 T CEntityFactory<CInfoRemarkable>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoRemarkable>::GetEntitySize()
 T CEntityFactory<CInfoTarget>::Create(char const*)
 T CEntityFactory<CInfoTarget>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoTarget>::GetEntitySize()
 T CEntityFactory<CInfoTargetPersonalitySphere>::Create(char const*)
 T CEntityFactory<CInfoTargetPersonalitySphere>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfoTargetPersonalitySphere>::GetEntitySize()
 T CEntityFactory<CInfo_Coop_Spawn>::Create(char const*)
 T CEntityFactory<CInfo_Coop_Spawn>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfo_Coop_Spawn>::GetEntitySize()
 T CEntityFactory<CInfo_Player_Ping_Detector>::Create(char const*)
 T CEntityFactory<CInfo_Player_Ping_Detector>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInfo_Player_Ping_Detector>::GetEntitySize()
 T CEntityFactory<CInstancedSceneEntity>::Create(char const*)
 T CEntityFactory<CInstancedSceneEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CInstancedSceneEntity>::GetEntitySize()
 T CEntityFactory<CItemSoda>::Create(char const*)
 T CEntityFactory<CItemSoda>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemSoda>::GetEntitySize()
 T CEntityFactory<CItemSuit>::Create(char const*)
 T CEntityFactory<CItemSuit>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItemSuit>::GetEntitySize()
 T CEntityFactory<CItem_Nugget>::Create(char const*)
 T CEntityFactory<CItem_Nugget>::Destroy(IServerNetworkable*)
 T CEntityFactory<CItem_Nugget>::GetEntitySize()
 T CEntityFactory<CKeepUpright>::Create(char const*)
 T CEntityFactory<CKeepUpright>::Destroy(IServerNetworkable*)
 T CEntityFactory<CKeepUpright>::GetEntitySize()
 T CEntityFactory<CLabIndicatorPanel>::Create(char const*)
 T CEntityFactory<CLabIndicatorPanel>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLabIndicatorPanel>::GetEntitySize()
 T CEntityFactory<CLaserCatcher>::Create(char const*)
 T CEntityFactory<CLaserCatcher>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLaserCatcher>::GetEntitySize()
 T CEntityFactory<CLaserRelay>::Create(char const*)
 T CEntityFactory<CLaserRelay>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLaserRelay>::GetEntitySize()
 T CEntityFactory<CLevelPlacardDisplay>::Create(char const*)
 T CEntityFactory<CLevelPlacardDisplay>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLevelPlacardDisplay>::GetEntitySize()
 T CEntityFactory<CLight>::Create(char const*)
 T CEntityFactory<CLight>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLight>::GetEntitySize()
 T CEntityFactory<CLightGlow>::Create(char const*)
 T CEntityFactory<CLightGlow>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLightGlow>::GetEntitySize()
 T CEntityFactory<CLinkedPortalDoor>::Create(char const*)
 T CEntityFactory<CLinkedPortalDoor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLinkedPortalDoor>::GetEntitySize()
 T CEntityFactory<CLogicAchievement>::Create(char const*)
 T CEntityFactory<CLogicAchievement>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicAchievement>::GetEntitySize()
 T CEntityFactory<CLogicActiveAutosave>::Create(char const*)
 T CEntityFactory<CLogicActiveAutosave>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicActiveAutosave>::GetEntitySize()
 T CEntityFactory<CLogicAuto>::Create(char const*)
 T CEntityFactory<CLogicAuto>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicAuto>::GetEntitySize()
 T CEntityFactory<CLogicAutosave>::Create(char const*)
 T CEntityFactory<CLogicAutosave>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicAutosave>::GetEntitySize()
 T CEntityFactory<CLogicBranch>::Create(char const*)
 T CEntityFactory<CLogicBranch>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicBranch>::GetEntitySize()
 T CEntityFactory<CLogicBranchList>::Create(char const*)
 T CEntityFactory<CLogicBranchList>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicBranchList>::GetEntitySize()
 T CEntityFactory<CLogicCase>::Create(char const*)
 T CEntityFactory<CLogicCase>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicCase>::GetEntitySize()
 T CEntityFactory<CLogicCollisionPair>::Create(char const*)
 T CEntityFactory<CLogicCollisionPair>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicCollisionPair>::GetEntitySize()
 T CEntityFactory<CLogicCompare>::Create(char const*)
 T CEntityFactory<CLogicCompare>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicCompare>::GetEntitySize()
 T CEntityFactory<CLogicCompareInteger>::Create(char const*)
 T CEntityFactory<CLogicCompareInteger>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicCompareInteger>::GetEntitySize()
 T CEntityFactory<CLogicCoopManager>::Create(char const*)
 T CEntityFactory<CLogicCoopManager>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicCoopManager>::GetEntitySize()
 T CEntityFactory<CLogicEventListener>::Create(char const*)
 T CEntityFactory<CLogicEventListener>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicEventListener>::GetEntitySize()
 T CEntityFactory<CLogicLineToEntity>::Create(char const*)
 T CEntityFactory<CLogicLineToEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicLineToEntity>::GetEntitySize()
 T CEntityFactory<CLogicMeasureMovement>::Create(char const*)
 T CEntityFactory<CLogicMeasureMovement>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicMeasureMovement>::GetEntitySize()
 T CEntityFactory<CLogicNavigation>::Create(char const*)
 T CEntityFactory<CLogicNavigation>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicNavigation>::GetEntitySize()
 T CEntityFactory<CLogicPlayMovie>::Create(char const*)
 T CEntityFactory<CLogicPlayMovie>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicPlayMovie>::GetEntitySize()
 T CEntityFactory<CLogicPlayerProxy>::Create(char const*)
 T CEntityFactory<CLogicPlayerProxy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicPlayerProxy>::GetEntitySize()
 T CEntityFactory<CLogicPlayerViewFinder>::Create(char const*)
 T CEntityFactory<CLogicPlayerViewFinder>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicPlayerViewFinder>::GetEntitySize()
 T CEntityFactory<CLogicRandomOutputs>::Create(char const*)
 T CEntityFactory<CLogicRandomOutputs>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicRandomOutputs>::GetEntitySize()
 T CEntityFactory<CLogicRegisterActivator>::Create(char const*)
 T CEntityFactory<CLogicRegisterActivator>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicRegisterActivator>::GetEntitySize()
 T CEntityFactory<CLogicRelay>::Create(char const*)
 T CEntityFactory<CLogicRelay>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicRelay>::GetEntitySize()
 T CEntityFactory<CLogicScript>::Create(char const*)
 T CEntityFactory<CLogicScript>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicScript>::GetEntitySize()
 T CEntityFactory<CLogicTimeScale>::Create(char const*)
 T CEntityFactory<CLogicTimeScale>::Destroy(IServerNetworkable*)
 T CEntityFactory<CLogicTimeScale>::GetEntitySize()
 T CEntityFactory<CMP_LobbyScreen>::Create(char const*)
 T CEntityFactory<CMP_LobbyScreen>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMP_LobbyScreen>::GetEntitySize()
 T CEntityFactory<CMaterialModifyControl>::Create(char const*)
 T CEntityFactory<CMaterialModifyControl>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMaterialModifyControl>::GetEntitySize()
 T CEntityFactory<CMathColorBlend>::Create(char const*)
 T CEntityFactory<CMathColorBlend>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMathColorBlend>::GetEntitySize()
 T CEntityFactory<CMathCounter>::Create(char const*)
 T CEntityFactory<CMathCounter>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMathCounter>::GetEntitySize()
 T CEntityFactory<CMathRemap>::Create(char const*)
 T CEntityFactory<CMathRemap>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMathRemap>::GetEntitySize()
 T CEntityFactory<CMessage>::Create(char const*)
 T CEntityFactory<CMessage>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMessage>::GetEntitySize()
 T CEntityFactory<CMessageEntity>::Create(char const*)
 T CEntityFactory<CMessageEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMessageEntity>::GetEntitySize()
 T CEntityFactory<CMomentaryRotButton>::Create(char const*)
 T CEntityFactory<CMomentaryRotButton>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMomentaryRotButton>::GetEntitySize()
 T CEntityFactory<CMortarShell>::Create(char const*)
 T CEntityFactory<CMortarShell>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMortarShell>::GetEntitySize()
 T CEntityFactory<CMovementSpeedMod>::Create(char const*)
 T CEntityFactory<CMovementSpeedMod>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMovementSpeedMod>::GetEntitySize()
 T CEntityFactory<CMovieDisplay>::Create(char const*)
 T CEntityFactory<CMovieDisplay>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMovieDisplay>::GetEntitySize()
 T CEntityFactory<CMultiSource>::Create(char const*)
 T CEntityFactory<CMultiSource>::Destroy(IServerNetworkable*)
 T CEntityFactory<CMultiSource>::GetEntitySize()
 T CEntityFactory<CNPCEventResponseSystemEntity>::Create(char const*)
 T CEntityFactory<CNPCEventResponseSystemEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNPCEventResponseSystemEntity>::GetEntitySize()
 T CEntityFactory<CNPCMaker>::Create(char const*)
 T CEntityFactory<CNPCMaker>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNPCMaker>::GetEntitySize()
 T CEntityFactory<CNPCSpawnDestination>::Create(char const*)
 T CEntityFactory<CNPCSpawnDestination>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNPCSpawnDestination>::GetEntitySize()
 T CEntityFactory<CNPC_Bullseye>::Create(char const*)
 T CEntityFactory<CNPC_Bullseye>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNPC_Bullseye>::GetEntitySize()
 T CEntityFactory<CNPC_EnemyFinder>::Create(char const*)
 T CEntityFactory<CNPC_EnemyFinder>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNPC_EnemyFinder>::GetEntitySize()
 T CEntityFactory<CNPC_EnemyFinderCombineCannon>::Create(char const*)
 T CEntityFactory<CNPC_EnemyFinderCombineCannon>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNPC_EnemyFinderCombineCannon>::GetEntitySize()
 T CEntityFactory<CNPC_FloorTurret>::Create(char const*)
 T CEntityFactory<CNPC_FloorTurret>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNPC_FloorTurret>::GetEntitySize()
 T CEntityFactory<CNPC_Furniture>::Create(char const*)
 T CEntityFactory<CNPC_Furniture>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNPC_Furniture>::GetEntitySize()
 T CEntityFactory<CNPC_HoverTurret>::Create(char const*)
 T CEntityFactory<CNPC_HoverTurret>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNPC_HoverTurret>::GetEntitySize()
 T CEntityFactory<CNPC_PersonalityCore>::Create(char const*)
 T CEntityFactory<CNPC_PersonalityCore>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNPC_PersonalityCore>::GetEntitySize()
 T CEntityFactory<CNPC_Portal_FloorTurret>::Create(char const*)
 T CEntityFactory<CNPC_Portal_FloorTurret>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNPC_Portal_FloorTurret>::GetEntitySize()
 T CEntityFactory<CNPC_RocketTurret>::Create(char const*)
 T CEntityFactory<CNPC_RocketTurret>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNPC_RocketTurret>::GetEntitySize()
 T CEntityFactory<CNPC_SecurityCamera>::Create(char const*)
 T CEntityFactory<CNPC_SecurityCamera>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNPC_SecurityCamera>::GetEntitySize()
 T CEntityFactory<CNPC_VehicleDriver>::Create(char const*)
 T CEntityFactory<CNPC_VehicleDriver>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNPC_VehicleDriver>::GetEntitySize()
 T CEntityFactory<CNPC_Wheatley_Boss>::Create(char const*)
 T CEntityFactory<CNPC_Wheatley_Boss>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNPC_Wheatley_Boss>::GetEntitySize()
 T CEntityFactory<CNeurotoxinCountdown>::Create(char const*)
 T CEntityFactory<CNeurotoxinCountdown>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNeurotoxinCountdown>::GetEntitySize()
 T CEntityFactory<CNewNPC>::Create(char const*)
 T CEntityFactory<CNewNPC>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNewNPC>::GetEntitySize()
 T CEntityFactory<CNewRecharge>::Create(char const*)
 T CEntityFactory<CNewRecharge>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNewRecharge>::GetEntitySize()
 T CEntityFactory<CNodeEnt>::Create(char const*)
 T CEntityFactory<CNodeEnt>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNodeEnt>::GetEntitySize()
 T CEntityFactory<CNullEntity>::Create(char const*)
 T CEntityFactory<CNullEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CNullEntity>::GetEntitySize()
 T CEntityFactory<COrnamentProp>::Create(char const*)
 T CEntityFactory<COrnamentProp>::Destroy(IServerNetworkable*)
 T CEntityFactory<COrnamentProp>::GetEntitySize()
 T CEntityFactory<COuttroStats>::Create(char const*)
 T CEntityFactory<COuttroStats>::Destroy(IServerNetworkable*)
 T CEntityFactory<COuttroStats>::GetEntitySize()
 T CEntityFactory<CPSCollisionEntity>::Create(char const*)
 T CEntityFactory<CPSCollisionEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPSCollisionEntity>::GetEntitySize()
 T CEntityFactory<CPaintSphere>::Create(char const*)
 T CEntityFactory<CPaintSphere>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPaintSphere>::GetEntitySize()
 T CEntityFactory<CPaintSprayer>::Create(char const*)
 T CEntityFactory<CPaintSprayer>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPaintSprayer>::GetEntitySize()
 T CEntityFactory<CPaintStream>::Create(char const*)
 T CEntityFactory<CPaintStream>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPaintStream>::GetEntitySize()
 T CEntityFactory<CParticleFire>::Create(char const*)
 T CEntityFactory<CParticleFire>::Destroy(IServerNetworkable*)
 T CEntityFactory<CParticleFire>::GetEntitySize()
 T CEntityFactory<CParticleLight>::Create(char const*)
 T CEntityFactory<CParticleLight>::Destroy(IServerNetworkable*)
 T CEntityFactory<CParticleLight>::GetEntitySize()
 T CEntityFactory<CParticlePerformanceMonitor>::Create(char const*)
 T CEntityFactory<CParticlePerformanceMonitor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CParticlePerformanceMonitor>::GetEntitySize()
 T CEntityFactory<CParticleSystem>::Create(char const*)
 T CEntityFactory<CParticleSystem>::Destroy(IServerNetworkable*)
 T CEntityFactory<CParticleSystem>::GetEntitySize()
 T CEntityFactory<CPathCorner>::Create(char const*)
 T CEntityFactory<CPathCorner>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPathCorner>::GetEntitySize()
 T CEntityFactory<CPathCornerCrash>::Create(char const*)
 T CEntityFactory<CPathCornerCrash>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPathCornerCrash>::GetEntitySize()
 T CEntityFactory<CPathKeyFrame>::Create(char const*)
 T CEntityFactory<CPathKeyFrame>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPathKeyFrame>::GetEntitySize()
 T CEntityFactory<CPathTrack>::Create(char const*)
 T CEntityFactory<CPathTrack>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPathTrack>::GetEntitySize()
 T CEntityFactory<CPhysBallSocket>::Create(char const*)
 T CEntityFactory<CPhysBallSocket>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysBallSocket>::GetEntitySize()
 T CEntityFactory<CPhysBox>::Create(char const*)
 T CEntityFactory<CPhysBox>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysBox>::GetEntitySize()
 T CEntityFactory<CPhysBoxMultiplayer>::Create(char const*)
 T CEntityFactory<CPhysBoxMultiplayer>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysBoxMultiplayer>::GetEntitySize()
 T CEntityFactory<CPhysConstraintSystem>::Create(char const*)
 T CEntityFactory<CPhysConstraintSystem>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysConstraintSystem>::GetEntitySize()
 T CEntityFactory<CPhysConvert>::Create(char const*)
 T CEntityFactory<CPhysConvert>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysConvert>::GetEntitySize()
 T CEntityFactory<CPhysExplosion>::Create(char const*)
 T CEntityFactory<CPhysExplosion>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysExplosion>::GetEntitySize()
 T CEntityFactory<CPhysFixed>::Create(char const*)
 T CEntityFactory<CPhysFixed>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysFixed>::GetEntitySize()
 T CEntityFactory<CPhysHinge>::Create(char const*)
 T CEntityFactory<CPhysHinge>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysHinge>::GetEntitySize()
 T CEntityFactory<CPhysImpact>::Create(char const*)
 T CEntityFactory<CPhysImpact>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysImpact>::GetEntitySize()
 T CEntityFactory<CPhysLength>::Create(char const*)
 T CEntityFactory<CPhysLength>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysLength>::GetEntitySize()
 T CEntityFactory<CPhysMagnet>::Create(char const*)
 T CEntityFactory<CPhysMagnet>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysMagnet>::GetEntitySize()
 T CEntityFactory<CPhysMotor>::Create(char const*)
 T CEntityFactory<CPhysMotor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysMotor>::GetEntitySize()
 T CEntityFactory<CPhysPulley>::Create(char const*)
 T CEntityFactory<CPhysPulley>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysPulley>::GetEntitySize()
 T CEntityFactory<CPhysSlideConstraint>::Create(char const*)
 T CEntityFactory<CPhysSlideConstraint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysSlideConstraint>::GetEntitySize()
 T CEntityFactory<CPhysSphere>::Create(char const*)
 T CEntityFactory<CPhysSphere>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysSphere>::GetEntitySize()
 T CEntityFactory<CPhysThruster>::Create(char const*)
 T CEntityFactory<CPhysThruster>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysThruster>::GetEntitySize()
 T CEntityFactory<CPhysTorque>::Create(char const*)
 T CEntityFactory<CPhysTorque>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysTorque>::GetEntitySize()
 T CEntityFactory<CPhysicsCannister>::Create(char const*)
 T CEntityFactory<CPhysicsCannister>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysicsCannister>::GetEntitySize()
 T CEntityFactory<CPhysicsCloneArea>::Create(char const*)
 T CEntityFactory<CPhysicsCloneArea>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysicsCloneArea>::GetEntitySize()
 T CEntityFactory<CPhysicsEntitySolver>::Create(char const*)
 T CEntityFactory<CPhysicsEntitySolver>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysicsEntitySolver>::GetEntitySize()
 T CEntityFactory<CPhysicsNPCSolver>::Create(char const*)
 T CEntityFactory<CPhysicsNPCSolver>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysicsNPCSolver>::GetEntitySize()
 T CEntityFactory<CPhysicsProp>::Create(char const*)
 T CEntityFactory<CPhysicsProp>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysicsProp>::GetEntitySize()
 T CEntityFactory<CPhysicsPropMultiplayer>::Create(char const*)
 T CEntityFactory<CPhysicsPropMultiplayer>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysicsPropMultiplayer>::GetEntitySize()
 T CEntityFactory<CPhysicsPropRespawnable>::Create(char const*)
 T CEntityFactory<CPhysicsPropRespawnable>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysicsPropRespawnable>::GetEntitySize()
 T CEntityFactory<CPhysicsShadowClone>::Create(char const*)
 T CEntityFactory<CPhysicsShadowClone>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysicsShadowClone>::GetEntitySize()
 T CEntityFactory<CPhysicsSpring>::Create(char const*)
 T CEntityFactory<CPhysicsSpring>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysicsSpring>::GetEntitySize()
 T CEntityFactory<CPhysicsWire>::Create(char const*)
 T CEntityFactory<CPhysicsWire>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPhysicsWire>::GetEntitySize()
 T CEntityFactory<CPlasma>::Create(char const*)
 T CEntityFactory<CPlasma>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPlasma>::GetEntitySize()
 T CEntityFactory<CPlayerPickupController>::Create(char const*)
 T CEntityFactory<CPlayerPickupController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPlayerPickupController>::GetEntitySize()
 T CEntityFactory<CPlayerResource>::Create(char const*)
 T CEntityFactory<CPlayerResource>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPlayerResource>::GetEntitySize()
 T CEntityFactory<CPointAngleSensor>::Create(char const*)
 T CEntityFactory<CPointAngleSensor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointAngleSensor>::GetEntitySize()
 T CEntityFactory<CPointAngularVelocitySensor>::Create(char const*)
 T CEntityFactory<CPointAngularVelocitySensor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointAngularVelocitySensor>::GetEntitySize()
 T CEntityFactory<CPointBonusMapsAccessor>::Create(char const*)
 T CEntityFactory<CPointBonusMapsAccessor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointBonusMapsAccessor>::GetEntitySize()
 T CEntityFactory<CPointBroadcastClientCommand>::Create(char const*)
 T CEntityFactory<CPointBroadcastClientCommand>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointBroadcastClientCommand>::GetEntitySize()
 T CEntityFactory<CPointCamera>::Create(char const*)
 T CEntityFactory<CPointCamera>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointCamera>::GetEntitySize()
 T CEntityFactory<CPointChangelevel>::Create(char const*)
 T CEntityFactory<CPointChangelevel>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointChangelevel>::GetEntitySize()
 T CEntityFactory<CPointClientCommand>::Create(char const*)
 T CEntityFactory<CPointClientCommand>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointClientCommand>::GetEntitySize()
 T CEntityFactory<CPointCombineBallLauncher>::Create(char const*)
 T CEntityFactory<CPointCombineBallLauncher>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointCombineBallLauncher>::GetEntitySize()
 T CEntityFactory<CPointCommentaryNode>::Create(char const*)
 T CEntityFactory<CPointCommentaryNode>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointCommentaryNode>::GetEntitySize()
 T CEntityFactory<CPointDevShotCamera>::Create(char const*)
 T CEntityFactory<CPointDevShotCamera>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointDevShotCamera>::GetEntitySize()
 T CEntityFactory<CPointEntity>::Create(char const*)
 T CEntityFactory<CPointEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointEntity>::GetEntitySize()
 T CEntityFactory<CPointEntityFinder>::Create(char const*)
 T CEntityFactory<CPointEntityFinder>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointEntityFinder>::GetEntitySize()
 T CEntityFactory<CPointFutbolShooter>::Create(char const*)
 T CEntityFactory<CPointFutbolShooter>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointFutbolShooter>::GetEntitySize()
 T CEntityFactory<CPointGamestatsCounter>::Create(char const*)
 T CEntityFactory<CPointGamestatsCounter>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointGamestatsCounter>::GetEntitySize()
 T CEntityFactory<CPointHurt>::Create(char const*)
 T CEntityFactory<CPointHurt>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointHurt>::GetEntitySize()
 T CEntityFactory<CPointPlayerMoveConstraint>::Create(char const*)
 T CEntityFactory<CPointPlayerMoveConstraint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointPlayerMoveConstraint>::GetEntitySize()
 T CEntityFactory<CPointProximitySensor>::Create(char const*)
 T CEntityFactory<CPointProximitySensor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointProximitySensor>::GetEntitySize()
 T CEntityFactory<CPointServerCommand>::Create(char const*)
 T CEntityFactory<CPointServerCommand>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointServerCommand>::GetEntitySize()
 T CEntityFactory<CPointSpotlight>::Create(char const*)
 T CEntityFactory<CPointSpotlight>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointSpotlight>::GetEntitySize()
 T CEntityFactory<CPointSurvey>::Create(char const*)
 T CEntityFactory<CPointSurvey>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointSurvey>::GetEntitySize()
 T CEntityFactory<CPointTeleport>::Create(char const*)
 T CEntityFactory<CPointTeleport>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointTeleport>::GetEntitySize()
 T CEntityFactory<CPointTemplate>::Create(char const*)
 T CEntityFactory<CPointTemplate>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointTemplate>::GetEntitySize()
 T CEntityFactory<CPointVelocitySensor>::Create(char const*)
 T CEntityFactory<CPointVelocitySensor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPointVelocitySensor>::GetEntitySize()
 T CEntityFactory<CPortalButtonTrigger>::Create(char const*)
 T CEntityFactory<CPortalButtonTrigger>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPortalButtonTrigger>::GetEntitySize()
 T CEntityFactory<CPortalCredits>::Create(char const*)
 T CEntityFactory<CPortalCredits>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPortalCredits>::GetEntitySize()
 T CEntityFactory<CPortalGameRulesProxy>::Create(char const*)
 T CEntityFactory<CPortalGameRulesProxy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPortalGameRulesProxy>::GetEntitySize()
 T CEntityFactory<CPortalLaser>::Create(char const*)
 T CEntityFactory<CPortalLaser>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPortalLaser>::GetEntitySize()
 T CEntityFactory<CPortalLaserTarget>::Create(char const*)
 T CEntityFactory<CPortalLaserTarget>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPortalLaserTarget>::GetEntitySize()
 T CEntityFactory<CPortalMPGameRulesProxy>::Create(char const*)
 T CEntityFactory<CPortalMPGameRulesProxy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPortalMPGameRulesProxy>::GetEntitySize()
 T CEntityFactory<CPortalMPStatsProxy>::Create(char const*)
 T CEntityFactory<CPortalMPStatsProxy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPortalMPStatsProxy>::GetEntitySize()
 T CEntityFactory<CPortalRaceCheckpoint>::Create(char const*)
 T CEntityFactory<CPortalRaceCheckpoint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPortalRaceCheckpoint>::GetEntitySize()
 T CEntityFactory<CPortalRagdoll>::Create(char const*)
 T CEntityFactory<CPortalRagdoll>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPortalRagdoll>::GetEntitySize()
 T CEntityFactory<CPortalStatsController>::Create(char const*)
 T CEntityFactory<CPortalStatsController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPortalStatsController>::GetEntitySize()
 T CEntityFactory<CPortal_Base2D>::Create(char const*)
 T CEntityFactory<CPortal_Base2D>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPortal_Base2D>::GetEntitySize()
 T CEntityFactory<CPortal_Player>::Create(char const*)
 T CEntityFactory<CPortal_Player>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPortal_Player>::GetEntitySize()
 T CEntityFactory<CPortal_PointPush>::Create(char const*)
 T CEntityFactory<CPortal_PointPush>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPortal_PointPush>::GetEntitySize()
 T CEntityFactory<CPoseController>::Create(char const*)
 T CEntityFactory<CPoseController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPoseController>::GetEntitySize()
 T CEntityFactory<CPostProcessController>::Create(char const*)
 T CEntityFactory<CPostProcessController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPostProcessController>::GetEntitySize()
 T CEntityFactory<CPrecipitation>::Create(char const*)
 T CEntityFactory<CPrecipitation>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPrecipitation>::GetEntitySize()
 T CEntityFactory<CPrecipitationBlocker>::Create(char const*)
 T CEntityFactory<CPrecipitationBlocker>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPrecipitationBlocker>::GetEntitySize()
 T CEntityFactory<CPredictedViewModel>::Create(char const*)
 T CEntityFactory<CPredictedViewModel>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPredictedViewModel>::GetEntitySize()
 T CEntityFactory<CProceduralGenerator>::Create(char const*)
 T CEntityFactory<CProceduralGenerator>::Destroy(IServerNetworkable*)
 T CEntityFactory<CProceduralGenerator>::GetEntitySize()
 T CEntityFactory<CProjectedDecal>::Create(char const*)
 T CEntityFactory<CProjectedDecal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CProjectedDecal>::GetEntitySize()
 T CEntityFactory<CProjectedTractorBeamEntity>::Create(char const*)
 T CEntityFactory<CProjectedTractorBeamEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CProjectedTractorBeamEntity>::GetEntitySize()
 T CEntityFactory<CProjectedWallEntity>::Create(char const*)
 T CEntityFactory<CProjectedWallEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CProjectedWallEntity>::GetEntitySize()
 T CEntityFactory<CPropButton>::Create(char const*)
 T CEntityFactory<CPropButton>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropButton>::GetEntitySize()
 T CEntityFactory<CPropCombineBall>::Create(char const*)
 T CEntityFactory<CPropCombineBall>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropCombineBall>::GetEntitySize()
 T CEntityFactory<CPropDoorRotating>::Create(char const*)
 T CEntityFactory<CPropDoorRotating>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropDoorRotating>::GetEntitySize()
 T CEntityFactory<CPropEnergyBall>::Create(char const*)
 T CEntityFactory<CPropEnergyBall>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropEnergyBall>::GetEntitySize()
 T CEntityFactory<CPropExplodingFutbol>::Create(char const*)
 T CEntityFactory<CPropExplodingFutbol>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropExplodingFutbol>::GetEntitySize()
 T CEntityFactory<CPropFloorBallButton>::Create(char const*)
 T CEntityFactory<CPropFloorBallButton>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropFloorBallButton>::GetEntitySize()
 T CEntityFactory<CPropFloorButton>::Create(char const*)
 T CEntityFactory<CPropFloorButton>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropFloorButton>::GetEntitySize()
 T CEntityFactory<CPropFloorCubeButton>::Create(char const*)
 T CEntityFactory<CPropFloorCubeButton>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropFloorCubeButton>::GetEntitySize()
 T CEntityFactory<CPropFutbolSocket>::Create(char const*)
 T CEntityFactory<CPropFutbolSocket>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropFutbolSocket>::GetEntitySize()
 T CEntityFactory<CPropFutbolSpawner>::Create(char const*)
 T CEntityFactory<CPropFutbolSpawner>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropFutbolSpawner>::GetEntitySize()
 T CEntityFactory<CPropGladosCore>::Create(char const*)
 T CEntityFactory<CPropGladosCore>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropGladosCore>::GetEntitySize()
 T CEntityFactory<CPropGlassFutbol>::Create(char const*)
 T CEntityFactory<CPropGlassFutbol>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropGlassFutbol>::GetEntitySize()
 T CEntityFactory<CPropIndicatorPanel>::Create(char const*)
 T CEntityFactory<CPropIndicatorPanel>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropIndicatorPanel>::GetEntitySize()
 T CEntityFactory<CPropLinkedPortalDoor>::Create(char const*)
 T CEntityFactory<CPropLinkedPortalDoor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropLinkedPortalDoor>::GetEntitySize()
 T CEntityFactory<CPropMonsterBox>::Create(char const*)
 T CEntityFactory<CPropMonsterBox>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropMonsterBox>::GetEntitySize()
 T CEntityFactory<CPropPaintBomb>::Create(char const*)
 T CEntityFactory<CPropPaintBomb>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropPaintBomb>::GetEntitySize()
 T CEntityFactory<CPropPersonalitySphere>::Create(char const*)
 T CEntityFactory<CPropPersonalitySphere>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropPersonalitySphere>::GetEntitySize()
 T CEntityFactory<CPropPhysicsPaintable>::Create(char const*)
 T CEntityFactory<CPropPhysicsPaintable>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropPhysicsPaintable>::GetEntitySize()
 T CEntityFactory<CPropPortalStatsDisplay>::Create(char const*)
 T CEntityFactory<CPropPortalStatsDisplay>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropPortalStatsDisplay>::GetEntitySize()
 T CEntityFactory<CPropRocketTripwire>::Create(char const*)
 T CEntityFactory<CPropRocketTripwire>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropRocketTripwire>::GetEntitySize()
 T CEntityFactory<CPropTelescopicArm>::Create(char const*)
 T CEntityFactory<CPropTelescopicArm>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropTelescopicArm>::GetEntitySize()
 T CEntityFactory<CPropTestChamberDoor>::Create(char const*)
 T CEntityFactory<CPropTestChamberDoor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropTestChamberDoor>::GetEntitySize()
 T CEntityFactory<CPropTicTacToePanel>::Create(char const*)
 T CEntityFactory<CPropTicTacToePanel>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropTicTacToePanel>::GetEntitySize()
 T CEntityFactory<CPropTractorBeamProjector>::Create(char const*)
 T CEntityFactory<CPropTractorBeamProjector>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropTractorBeamProjector>::GetEntitySize()
 T CEntityFactory<CPropUnderButton>::Create(char const*)
 T CEntityFactory<CPropUnderButton>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropUnderButton>::GetEntitySize()
 T CEntityFactory<CPropUnderFloorButton>::Create(char const*)
 T CEntityFactory<CPropUnderFloorButton>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropUnderFloorButton>::GetEntitySize()
 T CEntityFactory<CPropVehicle>::Create(char const*)
 T CEntityFactory<CPropVehicle>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropVehicle>::GetEntitySize()
 T CEntityFactory<CPropVehicleChoreoGeneric>::Create(char const*)
 T CEntityFactory<CPropVehicleChoreoGeneric>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropVehicleChoreoGeneric>::GetEntitySize()
 T CEntityFactory<CPropVehicleDriveable>::Create(char const*)
 T CEntityFactory<CPropVehicleDriveable>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropVehicleDriveable>::GetEntitySize()
 T CEntityFactory<CPropVehicleViewController>::Create(char const*)
 T CEntityFactory<CPropVehicleViewController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropVehicleViewController>::GetEntitySize()
 T CEntityFactory<CPropWallProjector>::Create(char const*)
 T CEntityFactory<CPropWallProjector>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropWallProjector>::GetEntitySize()
 T CEntityFactory<CPropWeightedCube>::Create(char const*)
 T CEntityFactory<CPropWeightedCube>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPropWeightedCube>::GetEntitySize()
 T CEntityFactory<CProp_Hallucination>::Create(char const*)
 T CEntityFactory<CProp_Hallucination>::Destroy(IServerNetworkable*)
 T CEntityFactory<CProp_Hallucination>::GetEntitySize()
 T CEntityFactory<CProp_Mirror>::Create(char const*)
 T CEntityFactory<CProp_Mirror>::Destroy(IServerNetworkable*)
 T CEntityFactory<CProp_Mirror>::GetEntitySize()
 T CEntityFactory<CProp_Portal>::Create(char const*)
 T CEntityFactory<CProp_Portal>::Destroy(IServerNetworkable*)
 T CEntityFactory<CProp_Portal>::GetEntitySize()
 T CEntityFactory<CPushable>::Create(char const*)
 T CEntityFactory<CPushable>::Destroy(IServerNetworkable*)
 T CEntityFactory<CPushable>::GetEntitySize()
 T CEntityFactory<CRagGib>::Create(char const*)
 T CEntityFactory<CRagGib>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRagGib>::GetEntitySize()
 T CEntityFactory<CRagdollBoogie>::Create(char const*)
 T CEntityFactory<CRagdollBoogie>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRagdollBoogie>::GetEntitySize()
 T CEntityFactory<CRagdollConstraint>::Create(char const*)
 T CEntityFactory<CRagdollConstraint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRagdollConstraint>::GetEntitySize()
 T CEntityFactory<CRagdollMagnet>::Create(char const*)
 T CEntityFactory<CRagdollMagnet>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRagdollMagnet>::GetEntitySize()
 T CEntityFactory<CRagdollManager>::Create(char const*)
 T CEntityFactory<CRagdollManager>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRagdollManager>::GetEntitySize()
 T CEntityFactory<CRagdollProp>::Create(char const*)
 T CEntityFactory<CRagdollProp>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRagdollProp>::GetEntitySize()
 T CEntityFactory<CRagdollPropAttached>::Create(char const*)
 T CEntityFactory<CRagdollPropAttached>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRagdollPropAttached>::GetEntitySize()
 T CEntityFactory<CRallyPoint>::Create(char const*)
 T CEntityFactory<CRallyPoint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRallyPoint>::GetEntitySize()
 T CEntityFactory<CRecharge>::Create(char const*)
 T CEntityFactory<CRecharge>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRecharge>::GetEntitySize()
 T CEntityFactory<CRevertSaved>::Create(char const*)
 T CEntityFactory<CRevertSaved>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRevertSaved>::GetEntitySize()
 T CEntityFactory<CRocket_Turret_Projectile>::Create(char const*)
 T CEntityFactory<CRocket_Turret_Projectile>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRocket_Turret_Projectile>::GetEntitySize()
 T CEntityFactory<CRopeAnchor>::Create(char const*)
 T CEntityFactory<CRopeAnchor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRopeAnchor>::GetEntitySize()
 T CEntityFactory<CRopeKeyframe>::Create(char const*)
 T CEntityFactory<CRopeKeyframe>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRopeKeyframe>::GetEntitySize()
 T CEntityFactory<CRotButton>::Create(char const*)
 T CEntityFactory<CRotButton>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRotButton>::GetEntitySize()
 T CEntityFactory<CRotDoor>::Create(char const*)
 T CEntityFactory<CRotDoor>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRotDoor>::GetEntitySize()
 T CEntityFactory<CRotorWashShooter>::Create(char const*)
 T CEntityFactory<CRotorWashShooter>::Destroy(IServerNetworkable*)
 T CEntityFactory<CRotorWashShooter>::GetEntitySize()
 T CEntityFactory<CSceneEntity>::Create(char const*)
 T CEntityFactory<CSceneEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSceneEntity>::GetEntitySize()
 T CEntityFactory<CSceneListManager>::Create(char const*)
 T CEntityFactory<CSceneListManager>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSceneListManager>::GetEntitySize()
 T CEntityFactory<CSceneManager>::Create(char const*)
 T CEntityFactory<CSceneManager>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSceneManager>::GetEntitySize()
 T CEntityFactory<CScriptIntro>::Create(char const*)
 T CEntityFactory<CScriptIntro>::Destroy(IServerNetworkable*)
 T CEntityFactory<CScriptIntro>::GetEntitySize()
 T CEntityFactory<CScriptedTarget>::Create(char const*)
 T CEntityFactory<CScriptedTarget>::Destroy(IServerNetworkable*)
 T CEntityFactory<CScriptedTarget>::GetEntitySize()
 T CEntityFactory<CServerRagdollTrigger>::Create(char const*)
 T CEntityFactory<CServerRagdollTrigger>::Destroy(IServerNetworkable*)
 T CEntityFactory<CServerRagdollTrigger>::GetEntitySize()
 T CEntityFactory<CShadowControl>::Create(char const*)
 T CEntityFactory<CShadowControl>::Destroy(IServerNetworkable*)
 T CEntityFactory<CShadowControl>::GetEntitySize()
 T CEntityFactory<CShower>::Create(char const*)
 T CEntityFactory<CShower>::Destroy(IServerNetworkable*)
 T CEntityFactory<CShower>::GetEntitySize()
 T CEntityFactory<CSimplePhysicsBrush>::Create(char const*)
 T CEntityFactory<CSimplePhysicsBrush>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSimplePhysicsBrush>::GetEntitySize()
 T CEntityFactory<CSimplePhysicsProp>::Create(char const*)
 T CEntityFactory<CSimplePhysicsProp>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSimplePhysicsProp>::GetEntitySize()
 T CEntityFactory<CSkyCamera>::Create(char const*)
 T CEntityFactory<CSkyCamera>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSkyCamera>::GetEntitySize()
 T CEntityFactory<CSkyboxSwapper>::Create(char const*)
 T CEntityFactory<CSkyboxSwapper>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSkyboxSwapper>::GetEntitySize()
 T CEntityFactory<CSlideshowDisplay>::Create(char const*)
 T CEntityFactory<CSlideshowDisplay>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSlideshowDisplay>::GetEntitySize()
 T CEntityFactory<CSmokeStack>::Create(char const*)
 T CEntityFactory<CSmokeStack>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSmokeStack>::GetEntitySize()
 T CEntityFactory<CSoundEnt>::Create(char const*)
 T CEntityFactory<CSoundEnt>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSoundEnt>::GetEntitySize()
 T CEntityFactory<CSpeaker>::Create(char const*)
 T CEntityFactory<CSpeaker>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSpeaker>::GetEntitySize()
 T CEntityFactory<CSpotlightEnd>::Create(char const*)
 T CEntityFactory<CSpotlightEnd>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSpotlightEnd>::GetEntitySize()
 T CEntityFactory<CSprayCan>::Create(char const*)
 T CEntityFactory<CSprayCan>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSprayCan>::GetEntitySize()
 T CEntityFactory<CSprite>::Create(char const*)
 T CEntityFactory<CSprite>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSprite>::GetEntitySize()
 T CEntityFactory<CSpriteOriented>::Create(char const*)
 T CEntityFactory<CSpriteOriented>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSpriteOriented>::GetEntitySize()
 T CEntityFactory<CSpriteTrail>::Create(char const*)
 T CEntityFactory<CSpriteTrail>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSpriteTrail>::GetEntitySize()
 T CEntityFactory<CStatueProp>::Create(char const*)
 T CEntityFactory<CStatueProp>::Destroy(IServerNetworkable*)
 T CEntityFactory<CStatueProp>::GetEntitySize()
 T CEntityFactory<CSteamJet>::Create(char const*)
 T CEntityFactory<CSteamJet>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSteamJet>::GetEntitySize()
 T CEntityFactory<CStripWeapons>::Create(char const*)
 T CEntityFactory<CStripWeapons>::Destroy(IServerNetworkable*)
 T CEntityFactory<CStripWeapons>::GetEntitySize()
 T CEntityFactory<CSun>::Create(char const*)
 T CEntityFactory<CSun>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSun>::GetEntitySize()
 T CEntityFactory<CSunlightShadowControl>::Create(char const*)
 T CEntityFactory<CSunlightShadowControl>::Destroy(IServerNetworkable*)
 T CEntityFactory<CSunlightShadowControl>::GetEntitySize()
 T CEntityFactory<CTankTargetChange>::Create(char const*)
 T CEntityFactory<CTankTargetChange>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTankTargetChange>::GetEntitySize()
 T CEntityFactory<CTankTrainAI>::Create(char const*)
 T CEntityFactory<CTankTrainAI>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTankTrainAI>::GetEntitySize()
 T CEntityFactory<CTargetCDAudioRep>::Create(char const*)
 T CEntityFactory<CTargetCDAudioRep>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTargetCDAudioRep>::GetEntitySize()
 T CEntityFactory<CTargetChangeGravity>::Create(char const*)
 T CEntityFactory<CTargetChangeGravity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTargetChangeGravity>::GetEntitySize()
 T CEntityFactory<CTeam>::Create(char const*)
 T CEntityFactory<CTeam>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTeam>::GetEntitySize()
 T CEntityFactory<CTeamSpawnPoint>::Create(char const*)
 T CEntityFactory<CTeamSpawnPoint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTeamSpawnPoint>::GetEntitySize()
 T CEntityFactory<CTeamVehicleSpawnPoint>::Create(char const*)
 T CEntityFactory<CTeamVehicleSpawnPoint>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTeamVehicleSpawnPoint>::GetEntitySize()
 T CEntityFactory<CTempEntTester>::Create(char const*)
 T CEntityFactory<CTempEntTester>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTempEntTester>::GetEntitySize()
 T CEntityFactory<CTemplateNPCMaker>::Create(char const*)
 T CEntityFactory<CTemplateNPCMaker>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTemplateNPCMaker>::GetEntitySize()
 T CEntityFactory<CTesla>::Create(char const*)
 T CEntityFactory<CTesla>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTesla>::GetEntitySize()
 T CEntityFactory<CTestEffect>::Create(char const*)
 T CEntityFactory<CTestEffect>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTestEffect>::GetEntitySize()
 T CEntityFactory<CTestTraceline>::Create(char const*)
 T CEntityFactory<CTestTraceline>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTestTraceline>::GetEntitySize()
 T CEntityFactory<CTest_ProxyToggle_Networkable>::Create(char const*)
 T CEntityFactory<CTest_ProxyToggle_Networkable>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTest_ProxyToggle_Networkable>::GetEntitySize()
 T CEntityFactory<CTextureToggle>::Create(char const*)
 T CEntityFactory<CTextureToggle>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTextureToggle>::GetEntitySize()
 T CEntityFactory<CTimerEntity>::Create(char const*)
 T CEntityFactory<CTimerEntity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTimerEntity>::GetEntitySize()
 T CEntityFactory<CTonemapTrigger>::Create(char const*)
 T CEntityFactory<CTonemapTrigger>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTonemapTrigger>::GetEntitySize()
 T CEntityFactory<CTriggerAutoCrouch>::Create(char const*)
 T CEntityFactory<CTriggerAutoCrouch>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerAutoCrouch>::GetEntitySize()
 T CEntityFactory<CTriggerBrush>::Create(char const*)
 T CEntityFactory<CTriggerBrush>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerBrush>::GetEntitySize()
 T CEntityFactory<CTriggerCDAudio>::Create(char const*)
 T CEntityFactory<CTriggerCDAudio>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerCDAudio>::GetEntitySize()
 T CEntityFactory<CTriggerCamera>::Create(char const*)
 T CEntityFactory<CTriggerCamera>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerCamera>::GetEntitySize()
 T CEntityFactory<CTriggerCameraMultiplayer>::Create(char const*)
 T CEntityFactory<CTriggerCameraMultiplayer>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerCameraMultiplayer>::GetEntitySize()
 T CEntityFactory<CTriggerCatapult>::Create(char const*)
 T CEntityFactory<CTriggerCatapult>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerCatapult>::GetEntitySize()
 T CEntityFactory<CTriggerGravity>::Create(char const*)
 T CEntityFactory<CTriggerGravity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerGravity>::GetEntitySize()
 T CEntityFactory<CTriggerHierarchy>::Create(char const*)
 T CEntityFactory<CTriggerHierarchy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerHierarchy>::GetEntitySize()
 T CEntityFactory<CTriggerHurt>::Create(char const*)
 T CEntityFactory<CTriggerHurt>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerHurt>::GetEntitySize()
 T CEntityFactory<CTriggerImpact>::Create(char const*)
 T CEntityFactory<CTriggerImpact>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerImpact>::GetEntitySize()
 T CEntityFactory<CTriggerLook>::Create(char const*)
 T CEntityFactory<CTriggerLook>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerLook>::GetEntitySize()
 T CEntityFactory<CTriggerMultiple>::Create(char const*)
 T CEntityFactory<CTriggerMultiple>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerMultiple>::GetEntitySize()
 T CEntityFactory<CTriggerOnce>::Create(char const*)
 T CEntityFactory<CTriggerOnce>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerOnce>::GetEntitySize()
 T CEntityFactory<CTriggerPaintCleanser>::Create(char const*)
 T CEntityFactory<CTriggerPaintCleanser>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerPaintCleanser>::GetEntitySize()
 T CEntityFactory<CTriggerPhysicsTrap>::Create(char const*)
 T CEntityFactory<CTriggerPhysicsTrap>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerPhysicsTrap>::GetEntitySize()
 T CEntityFactory<CTriggerPingDetector>::Create(char const*)
 T CEntityFactory<CTriggerPingDetector>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerPingDetector>::GetEntitySize()
 T CEntityFactory<CTriggerPlayerMovement>::Create(char const*)
 T CEntityFactory<CTriggerPlayerMovement>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerPlayerMovement>::GetEntitySize()
 T CEntityFactory<CTriggerPlayerTeam>::Create(char const*)
 T CEntityFactory<CTriggerPlayerTeam>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerPlayerTeam>::GetEntitySize()
 T CEntityFactory<CTriggerPortalCleanser>::Create(char const*)
 T CEntityFactory<CTriggerPortalCleanser>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerPortalCleanser>::GetEntitySize()
 T CEntityFactory<CTriggerProximity>::Create(char const*)
 T CEntityFactory<CTriggerProximity>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerProximity>::GetEntitySize()
 T CEntityFactory<CTriggerPush>::Create(char const*)
 T CEntityFactory<CTriggerPush>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerPush>::GetEntitySize()
 T CEntityFactory<CTriggerRPGFire>::Create(char const*)
 T CEntityFactory<CTriggerRPGFire>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerRPGFire>::GetEntitySize()
 T CEntityFactory<CTriggerRemove>::Create(char const*)
 T CEntityFactory<CTriggerRemove>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerRemove>::GetEntitySize()
 T CEntityFactory<CTriggerSave>::Create(char const*)
 T CEntityFactory<CTriggerSave>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerSave>::GetEntitySize()
 T CEntityFactory<CTriggerSoundscape>::Create(char const*)
 T CEntityFactory<CTriggerSoundscape>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerSoundscape>::GetEntitySize()
 T CEntityFactory<CTriggerTeleport>::Create(char const*)
 T CEntityFactory<CTriggerTeleport>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerTeleport>::GetEntitySize()
 T CEntityFactory<CTriggerToggleSave>::Create(char const*)
 T CEntityFactory<CTriggerToggleSave>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerToggleSave>::GetEntitySize()
 T CEntityFactory<CTriggerVPhysicsMotion>::Create(char const*)
 T CEntityFactory<CTriggerVPhysicsMotion>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerVPhysicsMotion>::GetEntitySize()
 T CEntityFactory<CTriggerViewProxy>::Create(char const*)
 T CEntityFactory<CTriggerViewProxy>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerViewProxy>::GetEntitySize()
 T CEntityFactory<CTriggerVolume>::Create(char const*)
 T CEntityFactory<CTriggerVolume>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerVolume>::GetEntitySize()
 T CEntityFactory<CTriggerWateryDeath>::Create(char const*)
 T CEntityFactory<CTriggerWateryDeath>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerWateryDeath>::GetEntitySize()
 T CEntityFactory<CTriggerWeaponDissolve>::Create(char const*)
 T CEntityFactory<CTriggerWeaponDissolve>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerWeaponDissolve>::GetEntitySize()
 T CEntityFactory<CTriggerWeaponStrip>::Create(char const*)
 T CEntityFactory<CTriggerWeaponStrip>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerWeaponStrip>::GetEntitySize()
 T CEntityFactory<CTriggerWind>::Create(char const*)
 T CEntityFactory<CTriggerWind>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTriggerWind>::GetEntitySize()
 T CEntityFactory<CTrigger_TractorBeam>::Create(char const*)
 T CEntityFactory<CTrigger_TractorBeam>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTrigger_TractorBeam>::GetEntitySize()
 T CEntityFactory<CTurretTipController>::Create(char const*)
 T CEntityFactory<CTurretTipController>::Destroy(IServerNetworkable*)
 T CEntityFactory<CTurretTipController>::GetEntitySize()
 T CEntityFactory<CVGuiScreen>::Create(char const*)
 T CEntityFactory<CVGuiScreen>::Destroy(IServerNetworkable*)
 T CEntityFactory<CVGuiScreen>::GetEntitySize()
 T CEntityFactory<CWC_UpdateIgnoreList>::Create(char const*)
 T CEntityFactory<CWC_UpdateIgnoreList>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWC_UpdateIgnoreList>::GetEntitySize()
 T CEntityFactory<CWaterBullet>::Create(char const*)
 T CEntityFactory<CWaterBullet>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWaterBullet>::GetEntitySize()
 T CEntityFactory<CWaterLODControl>::Create(char const*)
 T CEntityFactory<CWaterLODControl>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWaterLODControl>::GetEntitySize()
 T CEntityFactory<CWateryDeathLeech>::Create(char const*)
 T CEntityFactory<CWateryDeathLeech>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWateryDeathLeech>::GetEntitySize()
 T CEntityFactory<CWeaponCubemap>::Create(char const*)
 T CEntityFactory<CWeaponCubemap>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponCubemap>::GetEntitySize()
 T CEntityFactory<CWeaponCycler>::Create(char const*)
 T CEntityFactory<CWeaponCycler>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponCycler>::GetEntitySize()
 T CEntityFactory<CWeaponPortalBase>::Create(char const*)
 T CEntityFactory<CWeaponPortalBase>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponPortalBase>::GetEntitySize()
 T CEntityFactory<CWeaponPortalgun>::Create(char const*)
 T CEntityFactory<CWeaponPortalgun>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponPortalgun>::GetEntitySize()
 T CEntityFactory<CWeaponPromoAntennaBall>::Create(char const*)
 T CEntityFactory<CWeaponPromoAntennaBall>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponPromoAntennaBall>::GetEntitySize()
 T CEntityFactory<CWeaponPromoAntennaEgg>::Create(char const*)
 T CEntityFactory<CWeaponPromoAntennaEgg>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponPromoAntennaEgg>::GetEntitySize()
 T CEntityFactory<CWeaponPromoHelmetBall>::Create(char const*)
 T CEntityFactory<CWeaponPromoHelmetBall>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponPromoHelmetBall>::GetEntitySize()
 T CEntityFactory<CWeaponPromoHelmetEgg>::Create(char const*)
 T CEntityFactory<CWeaponPromoHelmetEgg>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeaponPromoHelmetEgg>::GetEntitySize()
 T CEntityFactory<CWeightButton>::Create(char const*)
 T CEntityFactory<CWeightButton>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWeightButton>::GetEntitySize()
 T CEntityFactory<CWindowPane>::Create(char const*)
 T CEntityFactory<CWindowPane>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWindowPane>::GetEntitySize()
 T CEntityFactory<CWorld>::Create(char const*)
 T CEntityFactory<CWorld>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWorld>::GetEntitySize()
 T CEntityFactory<CWorldItem>::Create(char const*)
 T CEntityFactory<CWorldItem>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWorldItem>::GetEntitySize()
 T CEntityFactory<CWreckage>::Create(char const*)
 T CEntityFactory<CWreckage>::Destroy(IServerNetworkable*)
 T CEntityFactory<CWreckage>::GetEntitySize()
 T CEntityFactory<DustTrail>::Create(char const*)
 T CEntityFactory<DustTrail>::Destroy(IServerNetworkable*)
 T CEntityFactory<DustTrail>::GetEntitySize()
 T CEntityFactory<FilterDamageType>::Create(char const*)
 T CEntityFactory<FilterDamageType>::Destroy(IServerNetworkable*)
 T CEntityFactory<FilterDamageType>::GetEntitySize()
 T CEntityFactory<FilterTeam>::Create(char const*)
 T CEntityFactory<FilterTeam>::Destroy(IServerNetworkable*)
 T CEntityFactory<FilterTeam>::GetEntitySize()
 T CEntityFactory<FizzlerEffects>::Create(char const*)
 T CEntityFactory<FizzlerEffects>::Destroy(IServerNetworkable*)
 T CEntityFactory<FizzlerEffects>::GetEntitySize()
 T CEntityFactory<FizzlerMultiOriginSoundPlayer>::Create(char const*)
 T CEntityFactory<FizzlerMultiOriginSoundPlayer>::Destroy(IServerNetworkable*)
 T CEntityFactory<FizzlerMultiOriginSoundPlayer>::GetEntitySize()
 T CEntityFactory<MovieExplosion>::Create(char const*)
 T CEntityFactory<MovieExplosion>::Destroy(IServerNetworkable*)
 T CEntityFactory<MovieExplosion>::GetEntitySize()
 T CEntityFactory<ParticleSmokeGrenade>::Create(char const*)
 T CEntityFactory<ParticleSmokeGrenade>::Destroy(IServerNetworkable*)
 T CEntityFactory<ParticleSmokeGrenade>::GetEntitySize()
 T CEntityFactory<ProjectedEntityAmbientSoundProxy>::Create(char const*)
 T CEntityFactory<ProjectedEntityAmbientSoundProxy>::Destroy(IServerNetworkable*)
 T CEntityFactory<ProjectedEntityAmbientSoundProxy>::GetEntitySize()
 T CEntityFactory<RocketTrail>::Create(char const*)
 T CEntityFactory<RocketTrail>::Destroy(IServerNetworkable*)
 T CEntityFactory<RocketTrail>::GetEntitySize()
 T CEntityFactory<SmokeTrail>::Create(char const*)
 T CEntityFactory<SmokeTrail>::Destroy(IServerNetworkable*)
 T CEntityFactory<SmokeTrail>::GetEntitySize()
 T CEntityFactory<SporeExplosion>::Create(char const*)
 T CEntityFactory<SporeExplosion>::Destroy(IServerNetworkable*)
 T CEntityFactory<SporeExplosion>::GetEntitySize()
 T CEntityFactory<SporeTrail>::Create(char const*)
 T CEntityFactory<SporeTrail>::Destroy(IServerNetworkable*)
 T CEntityFactory<SporeTrail>::GetEntitySize()
 T CEntityFactoryDictionary::Create(char const*)
 T CEntityFactoryDictionary::Destroy(char const*, IServerNetworkable*)
 T CEntityFactoryDictionary::FindFactory(char const*)
 T CEntityFactoryDictionary::GetCannonicalName(char const*)
 T CEntityFactoryDictionary::InstallFactory(IEntityFactory*, char const*)
 T CEntityFactoryDictionary::~CEntityFactoryDictionary()
 T CEntityFlame::Activate()
 T CEntityFlame::AttachToEntity(CBaseEntity*)
 T CEntityFlame::CEntityFlame()
 T CEntityFlame::Create(CBaseEntity*, float, float, bool)
 T CEntityFlame::FlameThink()
 T CEntityFlame::GetDataDescMap()
 T CEntityFlame::GetRemainingLife() const
 T CEntityFlame::GetServerClass()
 T CEntityFlame::Precache()
 T CEntityFlame::SetLifetime(float)
 T CEntityFlame::Spawn()
 T CEntityFlame::UpdateOnRemove()
 T CEntityFlame::UseCheapEffect(bool)
 T CEntityFlame::YouForgotToImplementOrDeclareServerClass()
 T CEntityFlame::~CEntityFlame()
 T CEntityFreezing::GetDataDescMap()
 T CEntityFreezing::GetServerClass()
 T CEntityFreezing::InputFreeze(inputdata_t&)
 T CEntityFreezing::Precache()
 T CEntityFreezing::Spawn()
 T CEntityFreezing::YouForgotToImplementOrDeclareServerClass()
 T CEntityFreezing::~CEntityFreezing()
 T CEntityList::AddEntity(CBaseEntity*)
 T CEntityList::CEntityList()
 T CEntityList::DeleteEntity(CBaseEntity*)
 T CEntityList::~CEntityList()
 T CEntityListSystem::FrameUpdatePostEntityThink()
 T CEntityListSystem::LevelInitPreEntity()
 T CEntityListSystem::LevelShutdownPostEntity()
 T CEntityListSystem::LevelShutdownPreEntity()
 T CEntityListSystem::~CEntityListSystem()
 T CEntityMapData::CurrentBufferPosition()
 T CEntityMapData::ExtractValue(char const*, char*)
 T CEntityMapData::GetFirstKey(char*, char*)
 T CEntityMapData::GetNextKey(char*, char*)
 T CEntityMapData::SetValue(char const*, char*, int)
 T CEntityParticleTrail::Create(CBaseEntity*, EntityParticleTrailInfo_t const&, CBaseEntity*)
 T CEntityParticleTrail::Destroy(CBaseEntity*, EntityParticleTrailInfo_t const&)
 T CEntityParticleTrail::GetDataDescMap()
 T CEntityParticleTrail::GetServerClass()
 T CEntityParticleTrail::NetworkVar_m_Info::NetworkStateChanged()
 T CEntityParticleTrail::NetworkVar_m_Info::NetworkStateChanged(void*)
 T CEntityParticleTrail::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
 T CEntityParticleTrail::SetTransmit(CCheckTransmitInfo*, bool)
 T CEntityParticleTrail::Spawn()
 T CEntityParticleTrail::UpdateOnRemove()
 T CEntityParticleTrail::YouForgotToImplementOrDeclareServerClass()
 T CEntityParticleTrail::~CEntityParticleTrail()
 T CEntitySaveRestoreBlockHandler::DoRestoreEntity(CBaseEntity*, IRestore*)
 T CEntitySaveRestoreBlockHandler::FindGlobalEntity(string_t, string_t)
 T CEntitySaveRestoreBlockHandler::GetBlockName()
 T CEntitySaveRestoreBlockHandler::PostRestore()
 T CEntitySaveRestoreBlockHandler::PostSave()
 T CEntitySaveRestoreBlockHandler::PreRestore()
 T CEntitySaveRestoreBlockHandler::PreSave(CSaveRestoreData*)
 T CEntitySaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CEntitySaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CEntitySaveRestoreBlockHandler::RestoreEntity(CBaseEntity*, IRestore*, entitytable_t*)
 T CEntitySaveRestoreBlockHandler::RestoreGlobalEntity(CBaseEntity*, CSaveRestoreData*, entitytable_t*)
 T CEntitySaveRestoreBlockHandler::Save(ISave*)
 T CEntitySaveRestoreBlockHandler::SaveInitEntities(CSaveRestoreData*)
 T CEntitySaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CEntitySaveUtils::AddLevelTransitionSaveDependency(CBaseEntity*, CBaseEntity*)
 T CEntitySaveUtils::GetEntityDependencies(CBaseEntity*, int, CBaseEntity**)
 T CEntitySaveUtils::GetEntityDependencyCount(CBaseEntity*)
 T CEntitySphereQuery::CEntitySphereQuery(Vector const&, float, int)
 T CEntitySphereQuery::GetCurrentEntity()
 T CEntityTouchManager::FrameUpdatePostEntityThink()
 T CEntityTouchManager::LevelShutdownPostEntity()
 T CEntityTouchManager::OnEntityCreated(CBaseEntity*)
 T CEntityTouchManager::OnEntityDeleted(CBaseEntity*)
 T CEntityTouchManager::~CEntityTouchManager()
 T CEnvAR2Explosion::GetDataDescMap()
 T CEnvAR2Explosion::InputExplode(inputdata_t&)
 T CEnvAR2Explosion::Spawn()
 T CEnvAR2Explosion::~CEnvAR2Explosion()
 T CEnvAmbientLight::GetDataDescMap()
 T CEnvAmbientLight::GetServerClass()
 T CEnvAmbientLight::InputSetColor(inputdata_t&)
 T CEnvAmbientLight::Spawn()
 T CEnvAmbientLight::YouForgotToImplementOrDeclareServerClass()
 T CEnvAmbientLight::~CEnvAmbientLight()
 T CEnvBeam::Activate()
 T CEnvBeam::BeamUpdateVars()
 T CEnvBeam::GetDataDescMap()
 T CEnvBeam::GetDecalName()
 T CEnvBeam::InputStrikeOnce(inputdata_t&)
 T CEnvBeam::InputToggle(inputdata_t&)
 T CEnvBeam::InputTurnOff(inputdata_t&)
 T CEnvBeam::InputTurnOn(inputdata_t&)
 T CEnvBeam::PassesTouchFilters(CBaseEntity*)
 T CEnvBeam::Precache()
 T CEnvBeam::RandomArea()
 T CEnvBeam::RandomPoint(Vector const&)
 T CEnvBeam::Spawn()
 T CEnvBeam::Strike()
 T CEnvBeam::StrikeThink()
 T CEnvBeam::TurnOn()
 T CEnvBeam::UpdateThink()
 T CEnvBeam::Zap(Vector const&, Vector const&)
 T CEnvBeam::~CEnvBeam()
 T CEnvBeverage::GetDataDescMap()
 T CEnvBeverage::InputActivate(inputdata_t&)
 T CEnvBeverage::KeyValue(char const*, char const*)
 T CEnvBeverage::Precache()
 T CEnvBeverage::Spawn()
 T CEnvBeverage::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CEnvBeverage::~CEnvBeverage()
 T CEnvDOFController::Activate()
 T CEnvDOFController::GetDataDescMap()
 T CEnvDOFController::GetServerClass()
 T CEnvDOFController::InputSetFarBlurDepth(inputdata_t&)
 T CEnvDOFController::InputSetFarBlurRadius(inputdata_t&)
 T CEnvDOFController::InputSetFarFocusDepth(inputdata_t&)
 T CEnvDOFController::InputSetFocusTarget(inputdata_t&)
 T CEnvDOFController::InputSetFocusTargetRange(inputdata_t&)
 T CEnvDOFController::InputSetNearBlurDepth(inputdata_t&)
 T CEnvDOFController::InputSetNearBlurRadius(inputdata_t&)
 T CEnvDOFController::InputSetNearFocusDepth(inputdata_t&)
 T CEnvDOFController::Spawn()
 T CEnvDOFController::UpdateParamBlend()
 T CEnvDOFController::UpdateTransmitState()
 T CEnvDOFController::YouForgotToImplementOrDeclareServerClass()
 T CEnvDOFController::~CEnvDOFController()
 T CEnvDetailController::GetServerClass()
 T CEnvDetailController::KeyValue(char const*, char const*)
 T CEnvDetailController::UpdateTransmitState()
 T CEnvDetailController::YouForgotToImplementOrDeclareServerClass()
 T CEnvDetailController::~CEnvDetailController()
 T CEnvDustPuff::GetDataDescMap()
 T CEnvDustPuff::InputSpawnDust(inputdata_t&)
 T CEnvDustPuff::~CEnvDustPuff()
 T CEnvEffectsScript::GetDataDescMap()
 T CEnvEffectsScript::HandleAnimEvent(animevent_t*)
 T CEnvEffectsScript::InputSetSequence(inputdata_t&)
 T CEnvEffectsScript::ParseNewEffect()
 T CEnvEffectsScript::ParseScriptFile()
 T CEnvEffectsScript::Precache()
 T CEnvEffectsScript::Spawn()
 T CEnvEffectsScript::SpriteEffectEvent(CEffectScriptElement*)
 T CEnvEffectsScript::Think()
 T CEnvEffectsScript::TrailEffectEvent(CEffectScriptElement*)
 T CEnvEffectsScript::UpdateTransmitState()
 T CEnvEffectsScript::~CEnvEffectsScript()
 T CEnvEntityIgniter::GetDataDescMap()
 T CEnvEntityIgniter::InputIgnite(inputdata_t&)
 T CEnvEntityIgniter::Precache()
 T CEnvEntityIgniter::~CEnvEntityIgniter()
 T CEnvEntityMaker::Activate()
 T CEnvEntityMaker::CheckSpawnThink()
 T CEnvEntityMaker::GetDataDescMap()
 T CEnvEntityMaker::GetScriptDesc()
 T CEnvEntityMaker::HasRoomToSpawn()
 T CEnvEntityMaker::InputForceSpawn(inputdata_t&)
 T CEnvEntityMaker::InputForceSpawnAtEntityOrigin(inputdata_t&)
 T CEnvEntityMaker::IsPlayerLooking()
 T CEnvEntityMaker::Spawn()
 T CEnvEntityMaker::SpawnEntity(Vector, QAngle)
 T CEnvEntityMaker::SpawnEntityAtEntityOriginFromScript(HSCRIPT__*)
 T CEnvEntityMaker::SpawnEntityAtLocationFromScript(Vector const&, Vector const&)
 T CEnvEntityMaker::SpawnEntityAtNamedEntityOriginFromScript(char const*)
 T CEnvEntityMaker::SpawnEntityFromScript()
 T CEnvEntityMaker::~CEnvEntityMaker()
 T CEnvExplosion::DrawDebugTextOverlays()
 T CEnvExplosion::GetDataDescMap()
 T CEnvExplosion::InputExplode(inputdata_t&)
 T CEnvExplosion::KeyValue(char const*, char const*)
 T CEnvExplosion::Precache()
 T CEnvExplosion::Smoke()
 T CEnvExplosion::Spawn()
 T CEnvExplosion::~CEnvExplosion()
 T CEnvFade::DrawDebugTextOverlays()
 T CEnvFade::GetDataDescMap()
 T CEnvFade::InputFade(inputdata_t&)
 T CEnvFade::InputReverseFade(inputdata_t&)
 T CEnvFade::Spawn()
 T CEnvFade::~CEnvFade()
 T CEnvFireSensor::GetDataDescMap()
 T CEnvFireSensor::InputDisable(inputdata_t&)
 T CEnvFireSensor::InputEnable(inputdata_t&)
 T CEnvFireSensor::Spawn()
 T CEnvFireSensor::Think()
 T CEnvFireSensor::~CEnvFireSensor()
 T CEnvFireSource::GetDataDescMap()
 T CEnvFireSource::InputDisable(inputdata_t&)
 T CEnvFireSource::InputEnable(inputdata_t&)
 T CEnvFireSource::Spawn()
 T CEnvFireSource::Think()
 T CEnvFireSource::~CEnvFireSource()
 T CEnvFunnel::GetDataDescMap()
 T CEnvFunnel::Precache()
 T CEnvFunnel::Spawn()
 T CEnvFunnel::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CEnvFunnel::~CEnvFunnel()
 T CEnvGlobal::DrawDebugTextOverlays()
 T CEnvGlobal::GetDataDescMap()
 T CEnvGlobal::InputAddToCounter(inputdata_t&)
 T CEnvGlobal::InputGetCounter(inputdata_t&)
 T CEnvGlobal::InputRemove(inputdata_t&)
 T CEnvGlobal::InputSetCounter(inputdata_t&)
 T CEnvGlobal::InputToggle(inputdata_t&)
 T CEnvGlobal::InputTurnOff(inputdata_t&)
 T CEnvGlobal::InputTurnOn(inputdata_t&)
 T CEnvGlobal::Spawn()
 T CEnvGlobal::~CEnvGlobal()
 T CEnvGunfire::Activate()
 T CEnvGunfire::GetDataDescMap()
 T CEnvGunfire::InputDisable(inputdata_t&)
 T CEnvGunfire::InputEnable(inputdata_t&)
 T CEnvGunfire::Precache()
 T CEnvGunfire::ShootThink()
 T CEnvGunfire::Spawn()
 T CEnvGunfire::UpdateTarget()
 T CEnvGunfire::~CEnvGunfire()
 T CEnvHudHint::GetDataDescMap()
 T CEnvHudHint::InputHideHudHint(inputdata_t&)
 T CEnvHudHint::InputShowHudHint(inputdata_t&)
 T CEnvHudHint::Precache()
 T CEnvHudHint::Spawn()
 T CEnvHudHint::~CEnvHudHint()
 T CEnvInstructorHint::GetDataDescMap()
 T CEnvInstructorHint::InputEndHint(inputdata_t&)
 T CEnvInstructorHint::InputShowHint(inputdata_t&)
 T CEnvInstructorHint::~CEnvInstructorHint()
 T CEnvLaser::FireAtPoint(CGameTrace&)
 T CEnvLaser::GetDataDescMap()
 T CEnvLaser::InputToggle(inputdata_t&)
 T CEnvLaser::InputTurnOff(inputdata_t&)
 T CEnvLaser::InputTurnOn(inputdata_t&)
 T CEnvLaser::KeyValue(char const*, char const*)
 T CEnvLaser::Precache()
 T CEnvLaser::Spawn()
 T CEnvLaser::StrikeThink()
 T CEnvLaser::TurnOff()
 T CEnvLaser::TurnOn()
 T CEnvLaser::~CEnvLaser()
 T CEnvLight::KeyValue(char const*, char const*)
 T CEnvLight::Spawn()
 T CEnvLight::~CEnvLight()
 T CEnvMicrophone::Activate()
 T CEnvMicrophone::ActivateSpeaker()
 T CEnvMicrophone::CanHearSound(CSound*, float&)
 T CEnvMicrophone::CanHearSound(int, soundlevel_t, float&, Vector const*)
 T CEnvMicrophone::GetDataDescMap()
 T CEnvMicrophone::InputDisable(inputdata_t&)
 T CEnvMicrophone::InputEnable(inputdata_t&)
 T CEnvMicrophone::InputSetSpeakerName(inputdata_t&)
 T CEnvMicrophone::OnRestore()
 T CEnvMicrophone::OnSoundPlayed(int, char const*, soundlevel_t, float, int, int, Vector const*, float, CUtlVector<Vector, CUtlMemory<Vector, int> >&)
 T CEnvMicrophone::OnSoundStopped(char const*)
 T CEnvMicrophone::SetMaxRange(float)
 T CEnvMicrophone::SetSensitivity(float)
 T CEnvMicrophone::SetSpeaker(string_t, CHandle<CBaseEntity>)
 T CEnvMicrophone::SoundPlayed(int, char const*, soundlevel_t, float, int, int, Vector const*, float, CUtlVector<Vector, CUtlMemory<Vector, int> >&)
 T CEnvMicrophone::Spawn()
 T CEnvMicrophone::Think()
 T CEnvMicrophone::~CEnvMicrophone()
 T CEnvMuzzleFlash::GetDataDescMap()
 T CEnvMuzzleFlash::InputFire(inputdata_t&)
 T CEnvMuzzleFlash::Spawn()
 T CEnvMuzzleFlash::~CEnvMuzzleFlash()
 T CEnvParticleScript::Activate()
 T CEnvParticleScript::GetDataDescMap()
 T CEnvParticleScript::GetServerClass()
 T CEnvParticleScript::InputSetSequence(inputdata_t&)
 T CEnvParticleScript::Precache()
 T CEnvParticleScript::PrecacheAnimationEventMaterials()
 T CEnvParticleScript::Spawn()
 T CEnvParticleScript::UpdateTransmitState()
 T CEnvParticleScript::YouForgotToImplementOrDeclareServerClass()
 T CEnvParticleScript::~CEnvParticleScript()
 T CEnvPlayerSurfaceTrigger::GetDataDescMap()
 T CEnvPlayerSurfaceTrigger::InputDisable(inputdata_t&)
 T CEnvPlayerSurfaceTrigger::InputEnable(inputdata_t&)
 T CEnvPlayerSurfaceTrigger::OnRestore()
 T CEnvPlayerSurfaceTrigger::PlayerSurfaceChanged(CBasePlayer*, char)
 T CEnvPlayerSurfaceTrigger::SetPlayerSurface(CBasePlayer*, char)
 T CEnvPlayerSurfaceTrigger::Spawn()
 T CEnvPlayerSurfaceTrigger::UpdateMaterialThink()
 T CEnvPlayerSurfaceTrigger::~CEnvPlayerSurfaceTrigger()
 T CEnvPortalPathTrack::Activate()
 T CEnvPortalPathTrack::ActivateTrackFX()
 T CEnvPortalPathTrack::CEnvPortalPathTrack()
 T CEnvPortalPathTrack::DeactivateTrackFX()
 T CEnvPortalPathTrack::GetDataDescMap()
 T CEnvPortalPathTrack::GetServerClass()
 T CEnvPortalPathTrack::InputActivateEndpoint(inputdata_t&)
 T CEnvPortalPathTrack::InputActivateTrack(inputdata_t&)
 T CEnvPortalPathTrack::InputDeactivateEndpoint(inputdata_t&)
 T CEnvPortalPathTrack::InputDeactivateTrack(inputdata_t&)
 T CEnvPortalPathTrack::Precache()
 T CEnvPortalPathTrack::Spawn()
 T CEnvPortalPathTrack::YouForgotToImplementOrDeclareServerClass()
 T CEnvPortalPathTrack::~CEnvPortalPathTrack()
 T CEnvProjectedTexture::Activate()
 T CEnvProjectedTexture::CEnvProjectedTexture()
 T CEnvProjectedTexture::EnforceSingleProjectionRules(bool)
 T CEnvProjectedTexture::GetDataDescMap()
 T CEnvProjectedTexture::GetKeyValue(char const*, char*, int)
 T CEnvProjectedTexture::GetServerClass()
 T CEnvProjectedTexture::InitialThink()
 T CEnvProjectedTexture::InputAlwaysUpdateOff(inputdata_t&)
 T CEnvProjectedTexture::InputAlwaysUpdateOn(inputdata_t&)
 T CEnvProjectedTexture::InputSetAmbient(inputdata_t&)
 T CEnvProjectedTexture::InputSetCameraSpace(inputdata_t&)
 T CEnvProjectedTexture::InputSetEnableShadows(inputdata_t&)
 T CEnvProjectedTexture::InputSetFOV(inputdata_t&)
 T CEnvProjectedTexture::InputSetFarZ(inputdata_t&)
 T CEnvProjectedTexture::InputSetLightColor(inputdata_t&)
 T CEnvProjectedTexture::InputSetLightOnlyTarget(inputdata_t&)
 T CEnvProjectedTexture::InputSetLightStyle(inputdata_t&)
 T CEnvProjectedTexture::InputSetLightWorld(inputdata_t&)
 T CEnvProjectedTexture::InputSetNearZ(inputdata_t&)
 T CEnvProjectedTexture::InputSetPattern(inputdata_t&)
 T CEnvProjectedTexture::InputSetSpotlightTexture(inputdata_t&)
 T CEnvProjectedTexture::InputSetTarget(inputdata_t&)
 T CEnvProjectedTexture::InputTurnOff(inputdata_t&)
 T CEnvProjectedTexture::InputTurnOn(inputdata_t&)
 T CEnvProjectedTexture::KeyValue(char const*, char const*)
 T CEnvProjectedTexture::Spawn()
 T CEnvProjectedTexture::UpdateTransmitState()
 T CEnvProjectedTexture::YouForgotToImplementOrDeclareServerClass()
 T CEnvProjectedTexture::~CEnvProjectedTexture()
 T CEnvQuadraticBeam::GetDataDescMap()
 T CEnvQuadraticBeam::GetServerClass()
 T CEnvQuadraticBeam::Spawn()
 T CEnvQuadraticBeam::YouForgotToImplementOrDeclareServerClass()
 T CEnvQuadraticBeam::~CEnvQuadraticBeam()
 T CEnvScreenEffect::GetDataDescMap()
 T CEnvScreenEffect::GetServerClass()
 T CEnvScreenEffect::InputStartEffect(inputdata_t&)
 T CEnvScreenEffect::InputStopEffect(inputdata_t&)
 T CEnvScreenEffect::Precache()
 T CEnvScreenEffect::Spawn()
 T CEnvScreenEffect::UpdateTransmitState()
 T CEnvScreenEffect::YouForgotToImplementOrDeclareServerClass()
 T CEnvScreenEffect::~CEnvScreenEffect()
 T CEnvScreenOverlay::CEnvScreenOverlay()
 T CEnvScreenOverlay::GetDataDescMap()
 T CEnvScreenOverlay::GetServerClass()
 T CEnvScreenOverlay::InputStartOverlay(inputdata_t&)
 T CEnvScreenOverlay::InputStopOverlay(inputdata_t&)
 T CEnvScreenOverlay::InputSwitchOverlay(inputdata_t&)
 T CEnvScreenOverlay::Precache()
 T CEnvScreenOverlay::Spawn()
 T CEnvScreenOverlay::UpdateTransmitState()
 T CEnvScreenOverlay::YouForgotToImplementOrDeclareServerClass()
 T CEnvScreenOverlay::~CEnvScreenOverlay()
 T CEnvShake::ApplyShake(ShakeCommand_t)
 T CEnvShake::DrawDebugTextOverlays()
 T CEnvShake::GetDataDescMap()
 T CEnvShake::InputAmplitude(inputdata_t&)
 T CEnvShake::InputFrequency(inputdata_t&)
 T CEnvShake::InputStartShake(inputdata_t&)
 T CEnvShake::InputStopShake(inputdata_t&)
 T CEnvShake::OnRestore()
 T CEnvShake::Precache()
 T CEnvShake::Spawn()
 T CEnvShake::Think()
 T CEnvShake::~CEnvShake()
 T CEnvShooter::CreateGib()
 T CEnvShooter::GetDataDescMap()
 T CEnvShooter::KeyValue(char const*, char const*)
 T CEnvShooter::Precache()
 T CEnvShooter::~CEnvShooter()
 T CEnvSoundscape::DrawDebugGeometryOverlays()
 T CEnvSoundscape::GetDataDescMap()
 T CEnvSoundscape::InRangeOfPlayer(CBasePlayer*)
 T CEnvSoundscape::InputDisable(inputdata_t&)
 T CEnvSoundscape::InputEnable(inputdata_t&)
 T CEnvSoundscape::InputToggleEnabled(inputdata_t&)
 T CEnvSoundscape::KeyValue(char const*, char const*)
 T CEnvSoundscape::Precache()
 T CEnvSoundscape::Spawn()
 T CEnvSoundscape::UpdateForPlayer(ss_update_t&)
 T CEnvSoundscape::WriteAudioParamsTo(audioparams_t&)
 T CEnvSoundscape::~CEnvSoundscape()
 T CEnvSoundscapeProxy::Activate()
 T CEnvSoundscapeProxy::GetDataDescMap()
 T CEnvSoundscapeProxy::Precache()
 T CEnvSoundscapeProxy::~CEnvSoundscapeProxy()
 T CEnvSoundscapeTriggerable::DelegateEndTouch(CBaseEntity*)
 T CEnvSoundscapeTriggerable::DelegateStartTouch(CBaseEntity*)
 T CEnvSoundscapeTriggerable::GetDataDescMap()
 T CEnvSoundscapeTriggerable::Think()
 T CEnvSoundscapeTriggerable::~CEnvSoundscapeTriggerable()
 T CEnvSpark::GetDataDescMap()
 T CEnvSpark::InputSparkOnce(inputdata_t&)
 T CEnvSpark::InputStartSpark(inputdata_t&)
 T CEnvSpark::InputStopSpark(inputdata_t&)
 T CEnvSpark::InputToggleSpark(inputdata_t&)
 T CEnvSpark::Precache()
 T CEnvSpark::SparkThink()
 T CEnvSpark::Spawn()
 T CEnvSpark::~CEnvSpark()
 T CEnvSplash::GetDataDescMap()
 T CEnvSplash::InputSplash(inputdata_t&)
 T CEnvSplash::Precache()
 T CEnvSplash::Spawn()
 T CEnvSplash::~CEnvSplash()
 T CEnvTilt::ApplyTilt(ShakeCommand_t)
 T CEnvTilt::DrawDebugTextOverlays()
 T CEnvTilt::GetDataDescMap()
 T CEnvTilt::InputStartTilt(inputdata_t&)
 T CEnvTilt::InputStopTilt(inputdata_t&)
 T CEnvTilt::Precache()
 T CEnvTilt::Spawn()
 T CEnvTilt::~CEnvTilt()
 T CEnvTonemapController::GetDataDescMap()
 T CEnvTonemapController::GetServerClass()
 T CEnvTonemapController::InputBlendTonemapScale(inputdata_t&)
 T CEnvTonemapController::InputSetAutoExposureMax(inputdata_t&)
 T CEnvTonemapController::InputSetAutoExposureMin(inputdata_t&)
 T CEnvTonemapController::InputSetBloomExponent(inputdata_t&)
 T CEnvTonemapController::InputSetBloomSaturation(inputdata_t&)
 T CEnvTonemapController::InputSetBloomScale(inputdata_t&)
 T CEnvTonemapController::InputSetBloomScaleRange(inputdata_t&)
 T CEnvTonemapController::InputSetTonemapRate(inputdata_t&)
 T CEnvTonemapController::InputSetTonemapScale(inputdata_t&)
 T CEnvTonemapController::InputUseDefaultAutoExposure(inputdata_t&)
 T CEnvTonemapController::InputUseDefaultBloomScale(inputdata_t&)
 T CEnvTonemapController::Spawn()
 T CEnvTonemapController::UpdateTonemapScaleBlend()
 T CEnvTonemapController::UpdateTransmitState()
 T CEnvTonemapController::YouForgotToImplementOrDeclareServerClass()
 T CEnvTonemapController::~CEnvTonemapController()
 T CEnvTracer::Activate()
 T CEnvTracer::GetDataDescMap()
 T CEnvTracer::Spawn()
 T CEnvTracer::TracerThink()
 T CEnvTracer::~CEnvTracer()
 T CEnvViewPunch::GetDataDescMap()
 T CEnvViewPunch::InputViewPunch(inputdata_t&)
 T CEnvViewPunch::Spawn()
 T CEnvViewPunch::~CEnvViewPunch()
 T CEnvWind::GetDataDescMap()
 T CEnvWind::GetServerClass()
 T CEnvWind::Precache()
 T CEnvWind::Spawn()
 T CEnvWind::UpdateTransmitState()
 T CEnvWind::WindThink()
 T CEnvWind::YouForgotToImplementOrDeclareServerClass()
 T CEnvWind::~CEnvWind()
 T CEnvWindShared::CEnvWindShared()
 T CEnvWindShared::Init(int, int, float, int, float)
 T CEnvWindShared::NetworkStateChanged()
 T CEnvWindShared::NetworkStateChanged(void*)
 T CEnvWindShared::WindThink(float)
 T CEnvWindShared::~CEnvWindShared()
 T CEnvZoom::GetDataDescMap()
 T CEnvZoom::InputUnZoom(inputdata_t&)
 T CEnvZoom::InputZoom(inputdata_t&)
 T CEnvZoom::~CEnvZoom()
 T CEnv_Lightrail_Endpoint::GetDataDescMap()
 T CEnv_Lightrail_Endpoint::GetServerClass()
 T CEnv_Lightrail_Endpoint::InputStartCharge(inputdata_t&)
 T CEnv_Lightrail_Endpoint::InputStartLargeFX(inputdata_t&)
 T CEnv_Lightrail_Endpoint::InputStartSmallFX(inputdata_t&)
 T CEnv_Lightrail_Endpoint::InputStop(inputdata_t&)
 T CEnv_Lightrail_Endpoint::Precache()
 T CEnv_Lightrail_Endpoint::ShouldTransmit(CCheckTransmitInfo const*)
 T CEnv_Lightrail_Endpoint::Spawn()
 T CEnv_Lightrail_Endpoint::UpdateTransmitState()
 T CEnv_Lightrail_Endpoint::YouForgotToImplementOrDeclareServerClass()
 T CEnv_Lightrail_Endpoint::~CEnv_Lightrail_Endpoint()
 T CEventAbsoluteTag::CEventAbsoluteTag(CEventAbsoluteTag const&)
 T CEventAbsoluteTag::GetAbsoluteTime()
 T CEventAbsoluteTag::GetPercentage()
 T CEventAbsoluteTag::SetAbsoluteTime(float)
 T CEventAbsoluteTag::SetLinear(bool)
 T CEventAbsoluteTag::SetPercentage(float)
 T CEventAction::CEventAction(char const*)
 T CEventAction::operator delete(void*)
 T CEventAction::operator new(unsigned long)
 T CEventLog::CEventLog()
 T CEventLog::FireGameEvent(IGameEvent*)
 T CEventLog::FormatPlayer(CBaseEntity*) const
 T CEventLog::FormatPlayer(CBaseEntity*, char*, int) const
 T CEventLog::Init()
 T CEventLog::PrintEvent(IGameEvent*)
 T CEventLog::PrintGameEvent(IGameEvent*)
 T CEventLog::PrintOtherEvent(IGameEvent*)
 T CEventLog::PrintPlayerEvent(IGameEvent*)
 T CEventLog::PrintTeamEvent(IGameEvent*)
 T CEventLog::~CEventLog()
 T CEventQueue::AddEvent(CBaseEntity*, char const*, float, CBaseEntity*, CBaseEntity*, int)
 T CEventQueue::AddEvent(CBaseEntity*, char const*, variant_t, float, CBaseEntity*, CBaseEntity*, int)
 T CEventQueue::AddEvent(char const*, char const*, variant_t, float, CBaseEntity*, CBaseEntity*, int)
 T CEventQueue::CancelEvents(CBaseEntity*)
 T CEventQueue::Dump()
 T CEventQueue::Init()
 T CEventQueue::Restore(IRestore&)
 T CEventQueue::ServiceEvents()
 T CEventQueue::~CEventQueue()
 T CEventQueueSaveLoadProxy::Restore(IRestore&)
 T CEventQueueSaveLoadProxy::Save(ISave&)
 T CEventQueueSaveLoadProxy::~CEventQueueSaveLoadProxy()
 T CEventQueue_SaveRestoreBlockHandler::GetBlockName()
 T CEventQueue_SaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CEventQueue_SaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CEventQueue_SaveRestoreBlockHandler::Save(ISave*)
 T CEventQueue_SaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CEventRegister::CEventRegister()
 T CEventRegister::Init(CTimedEventMgr*, IEventRegisterCallback*)
 T CEventRegister::Reregister()
 T CEventRegister::~CEventRegister()
 T CEventRelativeTag::GetStartTime()
 T CEventsSaveDataOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CEventsSaveDataOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CEventsSaveDataOps::Parse(SaveRestoreFieldInfo_t const&, char const*)
 T CEventsSaveDataOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CEventsSaveDataOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CExpressionEvaluator::CExpressionEvaluator()
 T CExpressionEvaluator::Evaluate(bool&, char const*, bool (*)(char const*), void (*)(char const*))
 T CExpressionEvaluator::FreeTree(ExprNode*&)
 T CExpressionEvaluator::IsIdentifierOrConstant(char)
 T CExpressionEvaluator::MakeExpression(ExprNode*&)
 T CExpressionEvaluator::MakeFactor(ExprNode*&)
 T CExpressionEvaluator::SimplifyNode(ExprNode*&)
 T CExpressionEvaluator::~CExpressionEvaluator()
 T CFilterClass::GetDataDescMap()
 T CFilterClass::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T CFilterClass::~CFilterClass()
 T CFilterCombineBall::GetDataDescMap()
 T CFilterCombineBall::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T CFilterCombineBall::~CFilterCombineBall()
 T CFilterContext::GetDataDescMap()
 T CFilterContext::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T CFilterContext::~CFilterContext()
 T CFilterEnemy::GetDataDescMap()
 T CFilterEnemy::PassesDamageFilterImpl(CTakeDamageInfo const&)
 T CFilterEnemy::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T CFilterEnemy::PassesMobbedFilter(CBaseEntity*, CBaseEntity*)
 T CFilterEnemy::PassesProximityFilter(CBaseEntity*, CBaseEntity*)
 T CFilterEnemy::~CFilterEnemy()
 T CFilterMassGreater::GetDataDescMap()
 T CFilterMassGreater::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T CFilterMassGreater::~CFilterMassGreater()
 T CFilterModel::GetDataDescMap()
 T CFilterModel::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T CFilterModel::~CFilterModel()
 T CFilterMultiple::Activate()
 T CFilterMultiple::GetDataDescMap()
 T CFilterMultiple::PassesDamageFilterImpl(CTakeDamageInfo const&)
 T CFilterMultiple::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T CFilterMultiple::~CFilterMultiple()
 T CFilterName::GetDataDescMap()
 T CFilterName::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T CFilterName::~CFilterName()
 T CFilterOnlyGlassFutbol::GetTraceType() const
 T CFilterOnlyGlassFutbol::ShouldHitEntity(IHandleEntity*, int)
 T CFilterOnlyHotPotato::GetTraceType() const
 T CFilterOnlyHotPotato::ShouldHitEntity(IHandleEntity*, int)
 T CFilterPlayerHeld::GetDataDescMap()
 T CFilterPlayerHeld::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T CFilterPlayerHeld::~CFilterPlayerHeld()
 T CFilterSize::GetDataDescMap()
 T CFilterSize::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T CFilterSize::~CFilterSize()
 T CFire* _CreateEntityTemplate<CFire>(CFire*, char const*)
 T CFire::Activate()
 T CFire::AddHeat(float, bool)
 T CFire::BurnThink()
 T CFire::DrawDebugGeometryOverlays()
 T CFire::DrawDebugTextOverlays()
 T CFire::GetDataDescMap()
 T CFire::GoOut()
 T CFire::GoOutThink()
 T CFire::Init(Vector const&, float, float, float, int, int)
 T CFire::InputDisable(inputdata_t&)
 T CFire::InputEnable(inputdata_t&)
 T CFire::InputExtinguish(inputdata_t&)
 T CFire::InputExtinguishTemporary(inputdata_t&)
 T CFire::InputStartFire(inputdata_t&)
 T CFire::OnTakeDamage(CTakeDamageInfo const&)
 T CFire::Precache()
 T CFire::Spawn()
 T CFire::SpawnEffect(fireType_e, float)
 T CFire::Start()
 T CFire::StartFire()
 T CFire::Update(float)
 T CFire::UpdateOnRemove()
 T CFire::UpdateTransmitState()
 T CFire::~CFire()
 T CFireSmoke::CFireSmoke()
 T CFireSmoke::EnableGlow(int)
 T CFireSmoke::EnableSmoke(int)
 T CFireSmoke::EnableVisibleFromAbove(int)
 T CFireSmoke::GetDataDescMap()
 T CFireSmoke::GetServerClass()
 T CFireSmoke::Precache()
 T CFireSmoke::Spawn()
 T CFireSmoke::YouForgotToImplementOrDeclareServerClass()
 T CFireSmoke::~CFireSmoke()
 T CFireSphere::EnumElement(IHandleEntity*)
 T CFireTrail::GetDataDescMap()
 T CFireTrail::GetServerClass()
 T CFireTrail::Precache()
 T CFireTrail::YouForgotToImplementOrDeclareServerClass()
 T CFireTrail::~CFireTrail()
 T CFish* _CreateEntityTemplate<CFish>(CFish*, char const*)
 T CFish::Avoid()
 T CFish::Event_Killed(CTakeDamageInfo const&)
 T CFish::FlockTo(CFish*, float)
 T CFish::GetDataDescMap()
 T CFish::GetServerClass()
 T CFish::Initialize(CFishPool*, unsigned int)
 T CFish::Panic()
 T CFish::Spawn()
 T CFish::Touch(CBaseEntity*)
 T CFish::Update(float)
 T CFish::YouForgotToImplementOrDeclareServerClass()
 T CFish::~CFish()
 T CFishPool::CFishPool()
 T CFishPool::FireGameEvent(IGameEvent*)
 T CFishPool::GetDataDescMap()
 T CFishPool::KeyValue(char const*, char const*)
 T CFishPool::Spawn()
 T CFishPool::Update()
 T CFishPool::~CFishPool()
 T CFlaggedEntitiesEnum::CFlaggedEntitiesEnum(CBaseEntity**, int, int)
 T CFlaggedEntitiesEnum::EnumElement(IHandleEntity*)
 T CFlexAnimationTrack::AddSample(float, float, int)
 T CFlexAnimationTrack::GetBoundedSample(int, bool&, int)
 T CFlexAnimationTrack::GetFlexControllerName()
 T CFlexAnimationTrack::GetFracIntensity(float, int)
 T CFlexAnimationTrack::GetIntensity(float, int)
 T CFlexAnimationTrack::GetIntensityInternal(float, int)
 T CFlexAnimationTrack::GetRawFlexControllerIndex(int)
 T CFlexAnimationTrack::IsComboType()
 T CFlexAnimationTrack::IsServerSide() const
 T CFlexAnimationTrack::IsTrackActive()
 T CFlexAnimationTrack::Resort(int)
 T CFlexAnimationTrack::SetComboType(bool)
 T CFlexAnimationTrack::SetEdgeActive(bool, bool)
 T CFlexAnimationTrack::SetEdgeInfo(bool, int, float)
 T CFlexAnimationTrack::SetFlexControllerIndex(LocalFlexController_t, int, int)
 T CFlexAnimationTrack::SetMax(float)
 T CFlexAnimationTrack::SetMin(float)
 T CFlexAnimationTrack::SetServerSide(bool)
 T CFlexAnimationTrack::SetTrackActive(bool)
 T CFlexAnimationTrack::~CFlexAnimationTrack()
 T CFlexCycler::GenericCyclerSpawn(char*, Vector, Vector)
 T CFlexCycler::GetDataDescMap()
 T CFlexCycler::IsAlive()
 T CFlexCycler::ObjectCaps()
 T CFlexCycler::OnTakeDamage(CTakeDamageInfo const&)
 T CFlexCycler::ProcessSceneEvents()
 T CFlexCycler::SetFlexTarget(LocalFlexController_t)
 T CFlexCycler::Spawn()
 T CFlexCycler::Think()
 T CFlexExpresser::AsFlexExpresser(CBaseEntity*)
 T CFlexExpresser::GetDataDescMap()
 T CFlexExpresser::GetResponseSystem()
 T CFlexExpresser::InputSpeakResponseConcept(inputdata_t&)
 T CFlexExpresser::OnTakeDamage(CTakeDamageInfo const&)
 T CFlexExpresser::Spawn()
 T CFlexExpresser::Think()
 T CFlexExpresser::~CFlexExpresser()
 T CFlexSceneFileManager::FindSceneFile(CBaseFlex*, char const*, bool)
 T CFlexSceneFileManager::Init()
 T CFlexSceneFileManager::InitRecursive(char const*)
 T CFlexSceneFileManager::Shutdown()
 T CFlexSceneFileManager::~CFlexSceneFileManager()
 T CFlexTimingTag::CFlexTimingTag(CFlexTimingTag const&)
 T CFlextalkActor::GetDataDescMap()
 T CFlextalkActor::ProcessSceneEvents()
 T CFlextalkActor::SetFlexTarget(LocalFlexController_t, float)
 T CFlextalkActor::~CFlextalkActor()
 T CFloatProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CFloatProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CFloatProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CFmtStrN<1024>::CFmtStrN(char const*, ...)
 T CFmtStrN<1024>::InitQuietTruncation()
 T CFmtStrN<128>::CFmtStrN(char const*, ...)
 T CFmtStrN<128>::InitQuietTruncation()
 T CFmtStrN<256>::CFmtStrN(char const**, ...)
 T CFmtStrN<256>::CFmtStrN(char const*, ...)
 T CFmtStrN<256>::InitQuietTruncation()
 T CFmtStrN<256>::sprintf(char const*, ...)
 T CFmtStrN<32>::CFmtStrN(char const*, ...)
 T CFmtStrN<32>::InitQuietTruncation()
 T CFogController::Activate()
 T CFogController::CFogController()
 T CFogController::DrawDebugTextOverlays()
 T CFogController::GetDataDescMap()
 T CFogController::GetServerClass()
 T CFogController::InputSetAngles(inputdata_t&)
 T CFogController::InputSetColor(inputdata_t&)
 T CFogController::InputSetColorLerpTo(inputdata_t&)
 T CFogController::InputSetColorSecondary(inputdata_t&)
 T CFogController::InputSetColorSecondaryLerpTo(inputdata_t&)
 T CFogController::InputSetEndDist(inputdata_t&)
 T CFogController::InputSetEndDistLerpTo(inputdata_t&)
 T CFogController::InputSetFarZ(inputdata_t&)
 T CFogController::InputSetMaxDensity(inputdata_t&)
 T CFogController::InputSetMaxDensityLerpTo(inputdata_t&)
 T CFogController::InputSetStartDist(inputdata_t&)
 T CFogController::InputSetStartDistLerpTo(inputdata_t&)
 T CFogController::InputStartFogTransition(inputdata_t&)
 T CFogController::InputTurnOff(inputdata_t&)
 T CFogController::InputTurnOn(inputdata_t&)
 T CFogController::NetworkVar_m_fog::NetworkStateChanged()
 T CFogController::NetworkVar_m_fog::NetworkStateChanged(void*)
 T CFogController::SetLerpValues()
 T CFogController::Spawn()
 T CFogController::UpdateTransmitState()
 T CFogController::YouForgotToImplementOrDeclareServerClass()
 T CFogController::~CFogController()
 T CFogSystem::FireGameEvent(IGameEvent*)
 T CFogSystem::LevelInitPostEntity()
 T CFogSystem::LevelInitPreEntity()
 T CFogSystem::SetMasterController(CFogController*)
 T CFogSystem::~CFogSystem()
 T CFogTrigger::EndTouch(CBaseEntity*)
 T CFogTrigger::GetDataDescMap()
 T CFogTrigger::Spawn()
 T CFogTrigger::StartTouch(CBaseEntity*)
 T CFogTrigger::~CFogTrigger()
 T CFogVolume::Activate()
 T CFogVolume::FindFogVolumeForPosition(Vector const&)
 T CFogVolume::GetDataDescMap()
 T CFogVolume::InputDisable(inputdata_t&)
 T CFogVolume::InputEnable(inputdata_t&)
 T CFogVolume::Spawn()
 T CFogVolume::~CFogVolume()
 T CFourWheelServerVehicle::GetFourWheelVehicle()
 T CFourWheelServerVehicle::GetVehicleController()
 T CFourWheelServerVehicle::GetVehicleParams()
 T CFourWheelServerVehicle::GetVehicleViewPosition(int, Vector*, QAngle*, float*)
 T CFourWheelServerVehicle::IsPassengerEntering()
 T CFourWheelServerVehicle::IsPassengerExiting()
 T CFourWheelServerVehicle::IsVehicleBodyInWater()
 T CFourWheelServerVehicle::IsVehicleUpright()
 T CFourWheelServerVehicle::NPC_DriveVehicle()
 T CFourWheelServerVehicle::NPC_SetDriver(CNPC_VehicleDriver*)
 T CFourWheelServerVehicle::SetVehicle(CBaseEntity*)
 T CFourWheelServerVehicle::~CFourWheelServerVehicle()
 T CFourWheelVehiclePhysics::CFourWheelVehiclePhysics(CBaseAnimating*)
 T CFourWheelVehiclePhysics::CalcWheelData(vehicleparams_t&)
 T CFourWheelVehiclePhysics::DrawDebugGeometryOverlays()
 T CFourWheelVehiclePhysics::DrawDebugTextOverlays(int)
 T CFourWheelVehiclePhysics::GetDataDescMap()
 T CFourWheelVehiclePhysics::Initialize(char const*, unsigned int)
 T CFourWheelVehiclePhysics::InitializePoseParameters()
 T CFourWheelVehiclePhysics::ParseVehicleScript(char const*, solid_t&, vehicleparams_t&)
 T CFourWheelVehiclePhysics::PlaceWheelDust(int, bool)
 T CFourWheelVehiclePhysics::Precache()
 T CFourWheelVehiclePhysics::ReleaseHandbrake()
 T CFourWheelVehiclePhysics::SetAction(float)
 T CFourWheelVehiclePhysics::SetDisableEngine(bool)
 T CFourWheelVehiclePhysics::SetHandbrake(bool)
 T CFourWheelVehiclePhysics::SetSteering(float, float)
 T CFourWheelVehiclePhysics::SetThrottle(float)
 T CFourWheelVehiclePhysics::Spawn()
 T CFourWheelVehiclePhysics::SteeringTurn(float, vehicleparams_t const&, bool, bool, bool)
 T CFourWheelVehiclePhysics::SteeringTurnAnalog(float, vehicleparams_t const&, float)
 T CFourWheelVehiclePhysics::Teleport(matrix3x4_t&)
 T CFourWheelVehiclePhysics::Think()
 T CFourWheelVehiclePhysics::TurnOff()
 T CFourWheelVehiclePhysics::TurnOn()
 T CFourWheelVehiclePhysics::UpdateDriverControls(CUserCmd*, float)
 T CFourWheelVehiclePhysics::VPhysicsGetObjectList(IPhysicsObject**, int)
 T CFourWheelVehiclePhysics::VPhysicsUpdate(IPhysicsObject*)
 T CFourWheelVehiclePhysics::~CFourWheelVehiclePhysics()
 T CFuncAreaPortalBase::CFuncAreaPortalBase()
 T CFuncAreaPortalBase::GetDataDescMap()
 T CFuncAreaPortalBase::ObjectCaps()
 T CFuncAreaPortalBase::UpdateVisibility(CUtlVector<Vector, CUtlMemory<Vector, int> > const&, float, bool&)
 T CFuncAreaPortalBase::~CFuncAreaPortalBase()
 T CFuncAreaPortalWindow::Activate()
 T CFuncAreaPortalWindow::GetDataDescMap()
 T CFuncAreaPortalWindow::GetServerClass()
 T CFuncAreaPortalWindow::InputSetFadeEndDistance(inputdata_t&)
 T CFuncAreaPortalWindow::InputSetFadeStartDistance(inputdata_t&)
 T CFuncAreaPortalWindow::Spawn()
 T CFuncAreaPortalWindow::UpdateVisibility(CUtlVector<Vector, CUtlMemory<Vector, int> > const&, float, bool&)
 T CFuncAreaPortalWindow::YouForgotToImplementOrDeclareServerClass()
 T CFuncAreaPortalWindow::~CFuncAreaPortalWindow()
 T CFuncBrush::Activate()
 T CFuncBrush::CreateVPhysics()
 T CFuncBrush::DrawDebugTextOverlays()
 T CFuncBrush::GetDataDescMap()
 T CFuncBrush::GetServerClass()
 T CFuncBrush::InputSetExcluded(inputdata_t&)
 T CFuncBrush::InputSetInvert(inputdata_t&)
 T CFuncBrush::InputToggle(inputdata_t&)
 T CFuncBrush::InputTurnOff(inputdata_t&)
 T CFuncBrush::InputTurnOn(inputdata_t&)
 T CFuncBrush::IsOn()
 T CFuncBrush::ObjectCaps()
 T CFuncBrush::Spawn()
 T CFuncBrush::TurnOff()
 T CFuncBrush::YouForgotToImplementOrDeclareServerClass()
 T CFuncBrush::~CFuncBrush()
 T CFuncCombineBallSpawner::BallGrabbed(CBaseEntity*)
 T CFuncCombineBallSpawner::BallThink()
 T CFuncCombineBallSpawner::ChoosePointInBox(Vector*)
 T CFuncCombineBallSpawner::GetDataDescMap()
 T CFuncCombineBallSpawner::GrabBallTouch(CBaseEntity*)
 T CFuncCombineBallSpawner::InputDisable(inputdata_t&)
 T CFuncCombineBallSpawner::InputEnable(inputdata_t&)
 T CFuncCombineBallSpawner::Precache()
 T CFuncCombineBallSpawner::RespawnBallPostExplosion()
 T CFuncCombineBallSpawner::Spawn()
 T CFuncCombineBallSpawner::SpawnBall()
 T CFuncCombineBallSpawner::~CFuncCombineBallSpawner()
 T CFuncConveyor::CFuncConveyor()
 T CFuncConveyor::GetDataDescMap()
 T CFuncConveyor::GetGroundVelocityToApply(Vector&)
 T CFuncConveyor::GetServerClass()
 T CFuncConveyor::InputSetSpeed(inputdata_t&)
 T CFuncConveyor::InputToggleDirection(inputdata_t&)
 T CFuncConveyor::Spawn()
 T CFuncConveyor::UpdateSpeed(float)
 T CFuncConveyor::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncConveyor::YouForgotToImplementOrDeclareServerClass()
 T CFuncConveyor::~CFuncConveyor()
 T CFuncIllusionary::Spawn()
 T CFuncIllusionary::~CFuncIllusionary()
 T CFuncInstanceIoProxy::CFuncInstanceIoProxy()
 T CFuncInstanceIoProxy::GetDataDescMap()
 T CFuncInstanceIoProxy::InputProxyRelay1(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay10(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay11(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay12(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay13(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay14(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay15(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay16(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay17(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay18(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay19(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay2(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay20(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay21(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay22(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay23(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay24(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay25(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay26(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay27(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay28(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay29(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay3(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay30(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay4(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay5(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay6(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay7(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay8(inputdata_t&)
 T CFuncInstanceIoProxy::InputProxyRelay9(inputdata_t&)
 T CFuncInstanceIoProxy::~CFuncInstanceIoProxy()
 T CFuncLadder::Activate()
 T CFuncLadder::CFuncLadder()
 T CFuncLadder::DrawDebugGeometryOverlays()
 T CFuncLadder::FindNearbyDismountPoints(Vector const&, float, CUtlVector<CHandle<CInfoLadderDismount>, CUtlMemory<CHandle<CInfoLadderDismount>, int> >&)
 T CFuncLadder::GetDataDescMap()
 T CFuncLadder::GetServerClass()
 T CFuncLadder::InputDisable(inputdata_t&)
 T CFuncLadder::InputEnable(inputdata_t&)
 T CFuncLadder::SearchForDismountPoints()
 T CFuncLadder::SetEndPoints(Vector const&, Vector const&)
 T CFuncLadder::Spawn()
 T CFuncLadder::UpdateTransmitState()
 T CFuncLadder::YouForgotToImplementOrDeclareServerClass()
 T CFuncLadder::~CFuncLadder()
 T CFuncLadderEndPoint::Activate()
 T CFuncLadderEndPoint::Validate()
 T CFuncLadderEndPoint::~CFuncLadderEndPoint()
 T CFuncMonitor::Activate()
 T CFuncMonitor::GetDataDescMap()
 T CFuncMonitor::GetServerClass()
 T CFuncMonitor::InputSetCamera(inputdata_t&)
 T CFuncMonitor::SetCameraByName(char const*)
 T CFuncMonitor::UpdateOnRemove()
 T CFuncMonitor::YouForgotToImplementOrDeclareServerClass()
 T CFuncMonitor::~CFuncMonitor()
 T CFuncMoveLinear::Blocked(CBaseEntity*)
 T CFuncMoveLinear::CreateVPhysics()
 T CFuncMoveLinear::DrawDebugTextOverlays()
 T CFuncMoveLinear::GetDataDescMap()
 T CFuncMoveLinear::GetServerClass()
 T CFuncMoveLinear::InputClose(inputdata_t&)
 T CFuncMoveLinear::InputOpen(inputdata_t&)
 T CFuncMoveLinear::InputSetPosition(inputdata_t&)
 T CFuncMoveLinear::InputSetSpeed(inputdata_t&)
 T CFuncMoveLinear::MoveDone()
 T CFuncMoveLinear::MoveTo(Vector, float)
 T CFuncMoveLinear::NetworkStateChanged_m_fFlags()
 T CFuncMoveLinear::NetworkStateChanged_m_fFlags(void*)
 T CFuncMoveLinear::NetworkStateChanged_m_vecVelocity()
 T CFuncMoveLinear::NetworkStateChanged_m_vecVelocity(void*)
 T CFuncMoveLinear::Precache()
 T CFuncMoveLinear::SetPosition(float)
 T CFuncMoveLinear::ShouldSavePhysics()
 T CFuncMoveLinear::Spawn()
 T CFuncMoveLinear::StopMoveSound()
 T CFuncMoveLinear::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncMoveLinear::YouForgotToImplementOrDeclareServerClass()
 T CFuncMoveLinear::~CFuncMoveLinear()
 T CFuncNavBlocker::CalculateBlocked(bool*, Vector const&, Vector const&)
 T CFuncNavBlocker::DrawDebugTextOverlays()
 T CFuncNavBlocker::GetDataDescMap()
 T CFuncNavBlocker::InputBlockNav(inputdata_t&)
 T CFuncNavBlocker::InputUnblockNav(inputdata_t&)
 T CFuncNavBlocker::Spawn()
 T CFuncNavBlocker::UpdateBlocked()
 T CFuncNavBlocker::UpdateOnRemove()
 T CFuncNavBlocker::~CFuncNavBlocker()
 T CFuncNavObstruction::CanObstructNavAreas() const
 T CFuncNavObstruction::DrawDebugTextOverlays()
 T CFuncNavObstruction::GetDataDescMap()
 T CFuncNavObstruction::GetNavObstructionHeight() const
 T CFuncNavObstruction::GetObstructingEntity()
 T CFuncNavObstruction::IsPotentiallyAbleToObstructNavAreas() const
 T CFuncNavObstruction::OnNavMeshLoaded()
 T CFuncNavObstruction::Spawn()
 T CFuncNavObstruction::UpdateOnRemove()
 T CFuncNavObstruction::~CFuncNavObstruction()
 T CFuncNoPortalVolume::CFuncNoPortalVolume()
 T CFuncNoPortalVolume::GetDataDescMap()
 T CFuncNoPortalVolume::GetIndex()
 T CFuncNoPortalVolume::GetServerClass()
 T CFuncNoPortalVolume::InputActivate(inputdata_t&)
 T CFuncNoPortalVolume::InputDeactivate(inputdata_t&)
 T CFuncNoPortalVolume::InputToggle(inputdata_t&)
 T CFuncNoPortalVolume::IsActive()
 T CFuncNoPortalVolume::OnActivate()
 T CFuncNoPortalVolume::Spawn()
 T CFuncNoPortalVolume::YouForgotToImplementOrDeclareServerClass()
 T CFuncNoPortalVolume::~CFuncNoPortalVolume()
 T CFuncOccluder::CFuncOccluder()
 T CFuncOccluder::GetDataDescMap()
 T CFuncOccluder::GetServerClass()
 T CFuncOccluder::InputActivate(inputdata_t&)
 T CFuncOccluder::InputDeactivate(inputdata_t&)
 T CFuncOccluder::InputToggle(inputdata_t&)
 T CFuncOccluder::Spawn()
 T CFuncOccluder::UpdateTransmitState()
 T CFuncOccluder::YouForgotToImplementOrDeclareServerClass()
 T CFuncOccluder::~CFuncOccluder()
 T CFuncPlacementClip::CreateVPhysics()
 T CFuncPlacementClip::GetDataDescMap()
 T CFuncPlacementClip::InputDisable(inputdata_t&)
 T CFuncPlacementClip::InputEnable(inputdata_t&)
 T CFuncPlacementClip::Spawn()
 T CFuncPlacementClip::~CFuncPlacementClip()
 T CFuncPlat::Blocked(CBaseEntity*)
 T CFuncPlat::CallGoDown()
 T CFuncPlat::CallHitBottom()
 T CFuncPlat::CallHitTop()
 T CFuncPlat::CreateVPhysics()
 T CFuncPlat::GetDataDescMap()
 T CFuncPlat::GoDown()
 T CFuncPlat::GoUp()
 T CFuncPlat::HitBottom()
 T CFuncPlat::HitTop()
 T CFuncPlat::InputGoDown(inputdata_t&)
 T CFuncPlat::InputGoUp(inputdata_t&)
 T CFuncPlat::InputToggle(inputdata_t&)
 T CFuncPlat::PlatUse(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncPlat::Precache()
 T CFuncPlat::Setup()
 T CFuncPlat::Spawn()
 T CFuncPlat::~CFuncPlat()
 T CFuncPlatRot::GetDataDescMap()
 T CFuncPlatRot::GoDown()
 T CFuncPlatRot::GoUp()
 T CFuncPlatRot::HitBottom()
 T CFuncPlatRot::HitTop()
 T CFuncPlatRot::RotMove(QAngle&, float)
 T CFuncPlatRot::SetupRotation()
 T CFuncPlatRot::Spawn()
 T CFuncPlatRot::~CFuncPlatRot()
 T CFuncPortalBumper::CFuncPortalBumper()
 T CFuncPortalBumper::GetDataDescMap()
 T CFuncPortalBumper::GetServerClass()
 T CFuncPortalBumper::InputActivate(inputdata_t&)
 T CFuncPortalBumper::InputDeactivate(inputdata_t&)
 T CFuncPortalBumper::InputToggle(inputdata_t&)
 T CFuncPortalBumper::IsActive()
 T CFuncPortalBumper::Spawn()
 T CFuncPortalBumper::YouForgotToImplementOrDeclareServerClass()
 T CFuncPortalBumper::~CFuncPortalBumper()
 T CFuncPortalDetector::CFuncPortalDetector()
 T CFuncPortalDetector::GetDataDescMap()
 T CFuncPortalDetector::GetLinkageGroupID()
 T CFuncPortalDetector::InputDisable(inputdata_t&)
 T CFuncPortalDetector::InputEnable(inputdata_t&)
 T CFuncPortalDetector::InputToggle(inputdata_t&)
 T CFuncPortalDetector::IsActive()
 T CFuncPortalDetector::IsPortalTouchingDetector(CProp_Portal const*)
 T CFuncPortalDetector::NotifyPortalEvent(PortalEvent_t, CPortal_Base2D*)
 T CFuncPortalDetector::PortalPlacedInsideBounds(CProp_Portal*)
 T CFuncPortalDetector::PortalRemovedFromInsideBounds(CProp_Portal*)
 T CFuncPortalDetector::SetActive(bool)
 T CFuncPortalDetector::Spawn()
 T CFuncPortalDetector::UpdateOnPortalActivated(CProp_Portal*)
 T CFuncPortalDetector::UpdateOnPortalMoved(CProp_Portal*)
 T CFuncPortalDetector::~CFuncPortalDetector()
 T CFuncPortalOrientation::GetDataDescMap()
 T CFuncPortalOrientation::InputDisable(inputdata_t&)
 T CFuncPortalOrientation::InputEnable(inputdata_t&)
 T CFuncPortalOrientation::OnActivate()
 T CFuncPortalOrientation::Spawn()
 T CFuncPortalOrientation::~CFuncPortalOrientation()
 T CFuncReflectiveGlass::GetDataDescMap()
 T CFuncReflectiveGlass::GetServerClass()
 T CFuncReflectiveGlass::YouForgotToImplementOrDeclareServerClass()
 T CFuncReflectiveGlass::~CFuncReflectiveGlass()
 T CFuncRotating::Blocked(CBaseEntity*)
 T CFuncRotating::CreateVPhysics()
 T CFuncRotating::DrawDebugTextOverlays()
 T CFuncRotating::GetDataDescMap()
 T CFuncRotating::GetServerClass()
 T CFuncRotating::HurtTouch(CBaseEntity*)
 T CFuncRotating::InputGetSpeed(inputdata_t&)
 T CFuncRotating::InputReverse(inputdata_t&)
 T CFuncRotating::InputSetSpeed(inputdata_t&)
 T CFuncRotating::InputStart(inputdata_t&)
 T CFuncRotating::InputStartBackward(inputdata_t&)
 T CFuncRotating::InputStartForward(inputdata_t&)
 T CFuncRotating::InputStop(inputdata_t&)
 T CFuncRotating::InputStopAtStartPos(inputdata_t&)
 T CFuncRotating::InputToggle(inputdata_t&)
 T CFuncRotating::KeyValue(char const*, char const*)
 T CFuncRotating::Precache()
 T CFuncRotating::RampPitchVol()
 T CFuncRotating::ReverseMove()
 T CFuncRotating::RotateMove()
 T CFuncRotating::RotatingUse(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncRotating::SetTargetSpeed(float)
 T CFuncRotating::Spawn()
 T CFuncRotating::SpinDownMove()
 T CFuncRotating::SpinUpMove()
 T CFuncRotating::UpdateSpeed(float)
 T CFuncRotating::YouForgotToImplementOrDeclareServerClass()
 T CFuncRotating::~CFuncRotating()
 T CFuncSmokeVolume::Activate()
 T CFuncSmokeVolume::CFuncSmokeVolume()
 T CFuncSmokeVolume::GetDataDescMap()
 T CFuncSmokeVolume::GetServerClass()
 T CFuncSmokeVolume::Spawn()
 T CFuncSmokeVolume::YouForgotToImplementOrDeclareServerClass()
 T CFuncSmokeVolume::~CFuncSmokeVolume()
 T CFuncTank::Activate()
 T CFuncTank::AimAtTargetPosition(Vector const&)
 T CFuncTank::AimBarrelAt(Vector const&)
 T CFuncTank::AimFuncTankAtTarget()
 T CFuncTank::CalcNPCEnemyTarget(Vector*)
 T CFuncTank::CalcPlayerCrosshairTarget(Vector*)
 T CFuncTank::ComputeLeadingPosition(Vector const&, CBaseEntity*, Vector*)
 T CFuncTank::ControllerPostFrame()
 T CFuncTank::CreateVPhysics()
 T CFuncTank::DoMuzzleFlash()
 T CFuncTank::DrawDebugGeometryOverlays()
 T CFuncTank::DrawDebugTextOverlays()
 T CFuncTank::Fire(int, Vector const&, Vector const&, CBaseEntity*, bool)
 T CFuncTank::FiringSequence(Vector const&, Vector const&, CBaseEntity*)
 T CFuncTank::FuncTankPostThink()
 T CFuncTank::FuncTankPreThink()
 T CFuncTank::GetController()
 T CFuncTank::GetDataDescMap()
 T CFuncTank::GetShotSpeed()
 T CFuncTank::GetTracerType()
 T CFuncTank::InputActivate(inputdata_t&)
 T CFuncTank::InputClearTargetEntity(inputdata_t&)
 T CFuncTank::InputDeactivate(inputdata_t&)
 T CFuncTank::InputFindNPCToManTank(inputdata_t&)
 T CFuncTank::InputForceNPCOff(inputdata_t&)
 T CFuncTank::InputSetDamage(inputdata_t&)
 T CFuncTank::InputSetFireRate(inputdata_t&)
 T CFuncTank::InputSetMaxRange(inputdata_t&)
 T CFuncTank::InputSetTargetDir(inputdata_t&)
 T CFuncTank::InputSetTargetEntity(inputdata_t&)
 T CFuncTank::InputSetTargetEntityName(inputdata_t&)
 T CFuncTank::InputSetTargetPosition(inputdata_t&)
 T CFuncTank::InputStartFindingNPCs(inputdata_t&)
 T CFuncTank::InputStopFindingNPCs(inputdata_t&)
 T CFuncTank::IsEntityInViewCone(CBaseEntity*)
 T CFuncTank::KeyValue(char const*, char const*)
 T CFuncTank::NPC_FindController()
 T CFuncTank::NPC_InterruptController()
 T CFuncTank::NPC_InterruptRoute()
 T CFuncTank::ObjectCaps()
 T CFuncTank::OnControls(CBaseEntity*)
 T CFuncTank::OnStartControlled()
 T CFuncTank::OnStopControlled()
 T CFuncTank::PhysicsSimulate()
 T CFuncTank::Precache()
 T CFuncTank::RotateTankToAngles(QAngle const&, float*, float*)
 T CFuncTank::SetNextAttack(float)
 T CFuncTank::Spawn()
 T CFuncTank::StartControl(CBaseCombatCharacter*)
 T CFuncTank::StartRotSound()
 T CFuncTank::StopControl()
 T CFuncTank::StopRotSound()
 T CFuncTank::TankActivate()
 T CFuncTank::TankDeactivate()
 T CFuncTank::TankTrace(Vector const&, Vector const&, Vector const&, CGameTrace&)
 T CFuncTank::Think()
 T CFuncTank::TrackTarget()
 T CFuncTank::UpdateOnRemove()
 T CFuncTank::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncTank::WorldBarrelPosition()
 T CFuncTank::~CFuncTank()
 T CFuncTankCombineCannon::CreateBeam()
 T CFuncTankCombineCannon::Fire(int, Vector const&, Vector const&, CBaseEntity*, bool)
 T CFuncTankCombineCannon::FuncTankPostThink()
 T CFuncTankCombineCannon::GetDataDescMap()
 T CFuncTankCombineCannon::InputClearTargetEntity(inputdata_t&)
 T CFuncTankCombineCannon::InputDisableHarrass(inputdata_t&)
 T CFuncTankCombineCannon::InputEnableHarrass(inputdata_t&)
 T CFuncTankCombineCannon::InputSetTargetEntity(inputdata_t&)
 T CFuncTankCombineCannon::MakeTracer(Vector const&, CGameTrace const&, int)
 T CFuncTankCombineCannon::Precache()
 T CFuncTankCombineCannon::Spawn()
 T CFuncTankCombineCannon::TankDeactivate()
 T CFuncTankCombineCannon::UpdateBeamThink()
 T CFuncTankCombineCannon::~CFuncTankCombineCannon()
 T CFuncTankGun::Fire(int, Vector const&, Vector const&, CBaseEntity*, bool)
 T CFuncTankGun::~CFuncTankGun()
 T CFuncTankLaser::Activate()
 T CFuncTankLaser::Fire(int, Vector const&, Vector const&, CBaseEntity*, bool)
 T CFuncTankLaser::GetDataDescMap()
 T CFuncTankLaser::GetLaser()
 T CFuncTankLaser::Think()
 T CFuncTankLaser::~CFuncTankLaser()
 T CFuncTankMortar::Fire(int, Vector const&, Vector const&, CBaseEntity*, bool)
 T CFuncTankMortar::FiringSequence(Vector const&, Vector const&, CBaseEntity*)
 T CFuncTankMortar::GetDataDescMap()
 T CFuncTankMortar::InputFireAtWill(inputdata_t&)
 T CFuncTankMortar::InputShootGun(inputdata_t&)
 T CFuncTankMortar::Precache()
 T CFuncTankMortar::SetNextAttack(float)
 T CFuncTankMortar::ShootGun()
 T CFuncTankMortar::Spawn()
 T CFuncTankMortar::~CFuncTankMortar()
 T CFuncTankPhysCannister::Fire(int, Vector const&, Vector const&, CBaseEntity*, bool)
 T CFuncTankPhysCannister::GetDataDescMap()
 T CFuncTankPhysCannister::~CFuncTankPhysCannister()
 T CFuncTankPulseLaser::Fire(int, Vector const&, Vector const&, CBaseEntity*, bool)
 T CFuncTankPulseLaser::GetDataDescMap()
 T CFuncTankPulseLaser::Precache()
 T CFuncTankPulseLaser::~CFuncTankPulseLaser()
 T CFuncTankTrain::Blocked(CBaseEntity*)
 T CFuncTankTrain::Event_Killed(CTakeDamageInfo const&)
 T CFuncTankTrain::GetDataDescMap()
 T CFuncTankTrain::OnTakeDamage(CTakeDamageInfo const&)
 T CFuncTankTrain::Spawn()
 T CFuncTankTrain::~CFuncTankTrain()
 T CFuncTrackAuto::GetDataDescMap()
 T CFuncTrackAuto::TriggerTrackChange(inputdata_t&)
 T CFuncTrackAuto::UpdateAutoTargets(int)
 T CFuncTrackAuto::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncTrackAuto::~CFuncTrackAuto()
 T CFuncTrackChange::Find()
 T CFuncTrackChange::GetDataDescMap()
 T CFuncTrackChange::GoDown()
 T CFuncTrackChange::GoUp()
 T CFuncTrackChange::HitBottom()
 T CFuncTrackChange::HitTop()
 T CFuncTrackChange::IsTogglePlat()
 T CFuncTrackChange::Precache()
 T CFuncTrackChange::Spawn()
 T CFuncTrackChange::Touch(CBaseEntity*)
 T CFuncTrackChange::UpdateAutoTargets(int)
 T CFuncTrackChange::UpdateTrain(QAngle&)
 T CFuncTrackChange::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncTrackChange::~CFuncTrackChange()
 T CFuncTrackTrain* _CreateEntityTemplate<CFuncTrackTrain>(CFuncTrackTrain*, char const*)
 T CFuncTrackTrain::ArriveAtNode(CPathTrack*)
 T CFuncTrackTrain::Blocked(CBaseEntity*)
 T CFuncTrackTrain::CFuncTrackTrain()
 T CFuncTrackTrain::CreateVPhysics()
 T CFuncTrackTrain::DeadEnd()
 T CFuncTrackTrain::DoUpdateOrientation(QAngle const&, QAngle const&, float)
 T CFuncTrackTrain::DrawDebugGeometryOverlays()
 T CFuncTrackTrain::DrawDebugTextOverlays()
 T CFuncTrackTrain::Find()
 T CFuncTrackTrain::GetDataDescMap()
 T CFuncTrackTrain::GetServerClass()
 T CFuncTrackTrain::InputLockOrientation(inputdata_t&)
 T CFuncTrackTrain::InputMoveToPathNode(inputdata_t&)
 T CFuncTrackTrain::InputResume(inputdata_t&)
 T CFuncTrackTrain::InputReverse(inputdata_t&)
 T CFuncTrackTrain::InputSetMaxSpeed(inputdata_t&)
 T CFuncTrackTrain::InputSetSpeed(inputdata_t&)
 T CFuncTrackTrain::InputSetSpeedDir(inputdata_t&)
 T CFuncTrackTrain::InputSetSpeedDirAccel(inputdata_t&)
 T CFuncTrackTrain::InputSetSpeedReal(inputdata_t&)
 T CFuncTrackTrain::InputStartBackward(inputdata_t&)
 T CFuncTrackTrain::InputStartForward(inputdata_t&)
 T CFuncTrackTrain::InputStop(inputdata_t&)
 T CFuncTrackTrain::InputTeleportToPathNode(inputdata_t&)
 T CFuncTrackTrain::InputToggle(inputdata_t&)
 T CFuncTrackTrain::InputUnlockOrientation(inputdata_t&)
 T CFuncTrackTrain::IsBaseTrain() const
 T CFuncTrackTrain::KeyValue(char const*, char const*)
 T CFuncTrackTrain::MoveDone()
 T CFuncTrackTrain::NearestPath()
 T CFuncTrackTrain::Next()
 T CFuncTrackTrain::ObjectCaps()
 T CFuncTrackTrain::OnControls(CBaseEntity*)
 T CFuncTrackTrain::OnRestore()
 T CFuncTrackTrain::Precache()
 T CFuncTrackTrain::SetDirForward(bool)
 T CFuncTrackTrain::SetSpeed(float, bool)
 T CFuncTrackTrain::SoundStop()
 T CFuncTrackTrain::SoundUpdate()
 T CFuncTrackTrain::Spawn()
 T CFuncTrackTrain::TeleportToPathTrack(CPathTrack*)
 T CFuncTrackTrain::UpdateOnRemove()
 T CFuncTrackTrain::UpdateOrientationAtPathTracks(CPathTrack*, CPathTrack*, Vector const&, float)
 T CFuncTrackTrain::UpdateOrientationBlend(TrainOrientationType_t, CPathTrack*, CPathTrack*, Vector const&, float)
 T CFuncTrackTrain::UpdateTrainVelocity(CPathTrack*, CPathTrack*, Vector const&, float)
 T CFuncTrackTrain::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncTrackTrain::YouForgotToImplementOrDeclareServerClass()
 T CFuncTrackTrain::~CFuncTrackTrain()
 T CFuncTrain::Activate()
 T CFuncTrain::Blocked(CBaseEntity*)
 T CFuncTrain::GetDataDescMap()
 T CFuncTrain::InputStart(inputdata_t&)
 T CFuncTrain::InputStop(inputdata_t&)
 T CFuncTrain::InputToggle(inputdata_t&)
 T CFuncTrain::Next()
 T CFuncTrain::OnRestore()
 T CFuncTrain::Precache()
 T CFuncTrain::SetupTarget()
 T CFuncTrain::Spawn()
 T CFuncTrain::Stop()
 T CFuncTrain::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncTrain::Wait()
 T CFuncTrain::~CFuncTrain()
 T CFuncTrainControls::Find()
 T CFuncTrainControls::GetDataDescMap()
 T CFuncTrainControls::Spawn()
 T CFuncTrainControls::~CFuncTrainControls()
 T CFuncVPhysicsClip::Activate()
 T CFuncVPhysicsClip::CreateVPhysics()
 T CFuncVPhysicsClip::ForceVPhysicsCollide(CBaseEntity*)
 T CFuncVPhysicsClip::GetDataDescMap()
 T CFuncVPhysicsClip::InputDisable(inputdata_t&)
 T CFuncVPhysicsClip::InputEnable(inputdata_t&)
 T CFuncVPhysicsClip::Spawn()
 T CFuncVPhysicsClip::~CFuncVPhysicsClip()
 T CFuncVehicleClip::CreateVPhysics()
 T CFuncVehicleClip::GetDataDescMap()
 T CFuncVehicleClip::InputDisable(inputdata_t&)
 T CFuncVehicleClip::InputEnable(inputdata_t&)
 T CFuncVehicleClip::Spawn()
 T CFuncVehicleClip::~CFuncVehicleClip()
 T CFuncWall::CreateVPhysics()
 T CFuncWall::GetDataDescMap()
 T CFuncWall::Spawn()
 T CFuncWall::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncWall::~CFuncWall()
 T CFuncWallToggle::GetDataDescMap()
 T CFuncWallToggle::InputToggle(inputdata_t&)
 T CFuncWallToggle::Spawn()
 T CFuncWallToggle::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CFuncWallToggle::~CFuncWallToggle()
 T CFunc_Dust::Activate()
 T CFunc_Dust::GetDataDescMap()
 T CFunc_Dust::GetServerClass()
 T CFunc_Dust::InputTurnOff(inputdata_t&)
 T CFunc_Dust::InputTurnOn(inputdata_t&)
 T CFunc_Dust::KeyValue(char const*, char const*)
 T CFunc_Dust::Precache()
 T CFunc_Dust::Spawn()
 T CFunc_Dust::YouForgotToImplementOrDeclareServerClass()
 T CFunc_Dust::~CFunc_Dust()
 T CFunc_DustCloud::~CFunc_DustCloud()
 T CFunc_DustMotes::CFunc_DustMotes()
 T CFunc_DustMotes::~CFunc_DustMotes()
 T CFunc_LOD::Activate()
 T CFunc_LOD::CreateVPhysics()
 T CFunc_LOD::GetDataDescMap()
 T CFunc_LOD::GetServerClass()
 T CFunc_LOD::KeyValue(char const*, char const*)
 T CFunc_LOD::Spawn()
 T CFunc_LOD::YouForgotToImplementOrDeclareServerClass()
 T CFunc_LOD::~CFunc_LOD()
 T CFunc_Portalled::GetDataDescMap()
 T CFunc_Portalled::OnPostPortalled(CBaseEntity*, bool)
 T CFunc_Portalled::OnPrePortalled(CBaseEntity*, bool)
 T CFunc_Portalled::PortalPlacedInsideBounds(CProp_Portal*)
 T CFunc_Portalled::~CFunc_Portalled()
 T CFunc_VPhysics_Clip_Watcher::Cache()
 T CFunc_VPhysics_Clip_Watcher::LevelInitPostEntity()
 T CFunc_VPhysics_Clip_Watcher::LevelShutdownPostEntity()
 T CFunc_VPhysics_Clip_Watcher::~CFunc_VPhysics_Clip_Watcher()
 T CFunctor1<void (*)(CBaseEntity*), CBaseEntity*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor1<void (*)(CBaseEntity*), CBaseEntity*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor1()
 T CFunctor1<void (*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor1<void (*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor1()
 T CFunctor2<void (*)(CFunctor**, unsigned int), CFunctor**, int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor2<void (*)(CFunctor**, unsigned int), CFunctor**, int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor2()
 T CFunctor2<void (*)(IPhysicsObject*, Vector const&), IPhysicsObject*, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor2<void (*)(IPhysicsObject*, Vector const&), IPhysicsObject*, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor2()
 T CFunctor3<void (*)(IPhysicsObject*, Vector const&, Vector const&), IPhysicsObject*, Vector, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor3<void (*)(IPhysicsObject*, Vector const&, Vector const&), IPhysicsObject*, Vector, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor3()
 T CFunctor4<CBaseEntity* (*)(CBaseEntity*, CBaseEntity*, bool, float), CBaseEntity*, CBaseEntity*, bool, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor4<CBaseEntity* (*)(CBaseEntity*, CBaseEntity*, bool, float), CBaseEntity*, CBaseEntity*, bool, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor4()
 T CFunctorJob::Describe()
 T CFunctorJob::DoExecute()
 T CFunctorJob::~CFunctorJob()
 T CFutbolCatcher::CaptureFutbol(CPropGlassFutbol*)
 T CFutbolCatcher::CaptureThink()
 T CFutbolCatcher::CatchThink()
 T CFutbolCatcher::GetDataDescMap()
 T CFutbolCatcher::Spawn()
 T CFutbolCatcher::~CFutbolCatcher()
 T CGCDev_NewItemRequestResponse::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T CGCDev_NewItemRequestResponse::~CGCDev_NewItemRequestResponse()
 T CGCMsgGetIPLocation::ByteSize() const
 T CGCMsgGetIPLocation::Clear()
 T CGCMsgGetIPLocation::GetCachedSize() const
 T CGCMsgGetIPLocation::GetMetadata() const
 T CGCMsgGetIPLocation::IsInitialized() const
 T CGCMsgGetIPLocation::MergeFrom(CGCMsgGetIPLocation const&)
 T CGCMsgGetIPLocation::New() const
 T CGCMsgGetIPLocation::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgGetIPLocation::SetCachedSize(int) const
 T CGCMsgGetIPLocation::~CGCMsgGetIPLocation()
 T CGCMsgGetIPLocationResponse::ByteSize() const
 T CGCMsgGetIPLocationResponse::Clear()
 T CGCMsgGetIPLocationResponse::GetCachedSize() const
 T CGCMsgGetIPLocationResponse::GetMetadata() const
 T CGCMsgGetIPLocationResponse::IsInitialized() const
 T CGCMsgGetIPLocationResponse::MergeFrom(CGCMsgGetIPLocationResponse const&)
 T CGCMsgGetIPLocationResponse::New() const
 T CGCMsgGetIPLocationResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgGetIPLocationResponse::SetCachedSize(int) const
 T CGCMsgGetIPLocationResponse::~CGCMsgGetIPLocationResponse()
 T CGCMsgGetSystemStats::ByteSize() const
 T CGCMsgGetSystemStats::Clear()
 T CGCMsgGetSystemStats::GetCachedSize() const
 T CGCMsgGetSystemStats::GetMetadata() const
 T CGCMsgGetSystemStats::IsInitialized() const
 T CGCMsgGetSystemStats::MergeFrom(CGCMsgGetSystemStats const&)
 T CGCMsgGetSystemStats::New() const
 T CGCMsgGetSystemStats::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgGetSystemStats::SetCachedSize(int) const
 T CGCMsgGetSystemStats::~CGCMsgGetSystemStats()
 T CGCMsgGetSystemStatsResponse::ByteSize() const
 T CGCMsgGetSystemStatsResponse::Clear()
 T CGCMsgGetSystemStatsResponse::GetCachedSize() const
 T CGCMsgGetSystemStatsResponse::GetMetadata() const
 T CGCMsgGetSystemStatsResponse::IsInitialized() const
 T CGCMsgGetSystemStatsResponse::MergeFrom(CGCMsgGetSystemStatsResponse const&)
 T CGCMsgGetSystemStatsResponse::New() const
 T CGCMsgGetSystemStatsResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgGetSystemStatsResponse::SetCachedSize(int) const
 T CGCMsgGetSystemStatsResponse::~CGCMsgGetSystemStatsResponse()
 T CGCMsgMemCachedDelete::ByteSize() const
 T CGCMsgMemCachedDelete::Clear()
 T CGCMsgMemCachedDelete::GetCachedSize() const
 T CGCMsgMemCachedDelete::GetMetadata() const
 T CGCMsgMemCachedDelete::IsInitialized() const
 T CGCMsgMemCachedDelete::MergeFrom(CGCMsgMemCachedDelete const&)
 T CGCMsgMemCachedDelete::New() const
 T CGCMsgMemCachedDelete::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgMemCachedDelete::SetCachedSize(int) const
 T CGCMsgMemCachedDelete::~CGCMsgMemCachedDelete()
 T CGCMsgMemCachedGet::ByteSize() const
 T CGCMsgMemCachedGet::Clear()
 T CGCMsgMemCachedGet::GetCachedSize() const
 T CGCMsgMemCachedGet::GetMetadata() const
 T CGCMsgMemCachedGet::IsInitialized() const
 T CGCMsgMemCachedGet::MergeFrom(CGCMsgMemCachedGet const&)
 T CGCMsgMemCachedGet::New() const
 T CGCMsgMemCachedGet::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgMemCachedGet::SetCachedSize(int) const
 T CGCMsgMemCachedGet::~CGCMsgMemCachedGet()
 T CGCMsgMemCachedGetResponse::ByteSize() const
 T CGCMsgMemCachedGetResponse::Clear()
 T CGCMsgMemCachedGetResponse::GetCachedSize() const
 T CGCMsgMemCachedGetResponse::GetMetadata() const
 T CGCMsgMemCachedGetResponse::IsInitialized() const
 T CGCMsgMemCachedGetResponse::MergeFrom(CGCMsgMemCachedGetResponse const&)
 T CGCMsgMemCachedGetResponse::New() const
 T CGCMsgMemCachedGetResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgMemCachedGetResponse::SetCachedSize(int) const
 T CGCMsgMemCachedGetResponse::~CGCMsgMemCachedGetResponse()
 T CGCMsgMemCachedGetResponse_ValueTag::ByteSize() const
 T CGCMsgMemCachedGetResponse_ValueTag::Clear()
 T CGCMsgMemCachedGetResponse_ValueTag::GetCachedSize() const
 T CGCMsgMemCachedGetResponse_ValueTag::GetMetadata() const
 T CGCMsgMemCachedGetResponse_ValueTag::IsInitialized() const
 T CGCMsgMemCachedGetResponse_ValueTag::MergeFrom(CGCMsgMemCachedGetResponse_ValueTag const&)
 T CGCMsgMemCachedGetResponse_ValueTag::New() const
 T CGCMsgMemCachedGetResponse_ValueTag::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgMemCachedGetResponse_ValueTag::SetCachedSize(int) const
 T CGCMsgMemCachedGetResponse_ValueTag::~CGCMsgMemCachedGetResponse_ValueTag()
 T CGCMsgMemCachedSet::ByteSize() const
 T CGCMsgMemCachedSet::Clear()
 T CGCMsgMemCachedSet::GetCachedSize() const
 T CGCMsgMemCachedSet::GetMetadata() const
 T CGCMsgMemCachedSet::IsInitialized() const
 T CGCMsgMemCachedSet::MergeFrom(CGCMsgMemCachedSet const&)
 T CGCMsgMemCachedSet::New() const
 T CGCMsgMemCachedSet::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgMemCachedSet::SetCachedSize(int) const
 T CGCMsgMemCachedSet::~CGCMsgMemCachedSet()
 T CGCMsgMemCachedSet_KeyPair::ByteSize() const
 T CGCMsgMemCachedSet_KeyPair::Clear()
 T CGCMsgMemCachedSet_KeyPair::GetCachedSize() const
 T CGCMsgMemCachedSet_KeyPair::GetMetadata() const
 T CGCMsgMemCachedSet_KeyPair::IsInitialized() const
 T CGCMsgMemCachedSet_KeyPair::MergeFrom(CGCMsgMemCachedSet_KeyPair const&)
 T CGCMsgMemCachedSet_KeyPair::New() const
 T CGCMsgMemCachedSet_KeyPair::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgMemCachedSet_KeyPair::SetCachedSize(int) const
 T CGCMsgMemCachedSet_KeyPair::SharedDtor()
 T CGCMsgMemCachedSet_KeyPair::~CGCMsgMemCachedSet_KeyPair()
 T CGCMsgSystemStatsSchema::ByteSize() const
 T CGCMsgSystemStatsSchema::Clear()
 T CGCMsgSystemStatsSchema::GetCachedSize() const
 T CGCMsgSystemStatsSchema::GetMetadata() const
 T CGCMsgSystemStatsSchema::IsInitialized() const
 T CGCMsgSystemStatsSchema::MergeFrom(CGCMsgSystemStatsSchema const&)
 T CGCMsgSystemStatsSchema::New() const
 T CGCMsgSystemStatsSchema::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCMsgSystemStatsSchema::SetCachedSize(int) const
 T CGCMsgSystemStatsSchema::~CGCMsgSystemStatsSchema()
 T CGCReplicateConVars::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T CGCReplicateConVars::~CGCReplicateConVars()
 T CGCServerSystem::CGCServerSystem()
 T CGCServerSystem::InitGC()
 T CGCServerSystem::LevelInitPreEntity()
 T CGCServerSystem::LevelShutdownPostEntity()
 T CGCServerSystem::OnLogonSuccess(SteamServersConnected_t*)
 T CGCServerSystem::PostInit()
 T CGCServerSystem::PostInitGC()
 T CGCServerSystem::PreClientUpdate()
 T CGCServerSystem::PreInitGC()
 T CGCServerSystem::Register(IGCUser*)
 T CGCServerSystem::SetupGC()
 T CGCServerSystem::Shutdown()
 T CGCServerSystem::~CGCServerSystem()
 T CGCStorePurchaseInit_LineItem::ByteSize() const
 T CGCStorePurchaseInit_LineItem::Clear()
 T CGCStorePurchaseInit_LineItem::GetCachedSize() const
 T CGCStorePurchaseInit_LineItem::GetMetadata() const
 T CGCStorePurchaseInit_LineItem::IsInitialized() const
 T CGCStorePurchaseInit_LineItem::MergeFrom(CGCStorePurchaseInit_LineItem const&)
 T CGCStorePurchaseInit_LineItem::New() const
 T CGCStorePurchaseInit_LineItem::SerializeWithCachedSizesToArray(unsigned char*) const
 T CGCStorePurchaseInit_LineItem::SetCachedSize(int) const
 T CGCStorePurchaseInit_LineItem::~CGCStorePurchaseInit_LineItem()
 T CGCUpdateConVar::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T CGCUpdateConVar::~CGCUpdateConVar()
 T CGCUpdateItemSchema::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T CGCUpdateItemSchema::OnHTTPCompleted(HTTPRequestCompleted_t*, bool)
 T CGCUpdateItemSchema::~CGCUpdateItemSchema()
 T CGameDLL_ConVarAccessor::RegisterConCommandBase(ConCommandBase*)
 T CGameEnd::GetDataDescMap()
 T CGameEnd::InputGameEnd(inputdata_t&)
 T CGameEnd::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CGameEnd::~CGameEnd()
 T CGameEventListener::GetEventDebugID()
 T CGameEventListener::~CGameEventListener()
 T CGameGibManager::Activate()
 T CGameGibManager::AddGibToLRU(CBaseAnimating*)
 T CGameGibManager::GetDataDescMap()
 T CGameGibManager::InputSetMaxPieces(inputdata_t&)
 T CGameGibManager::InputSetMaxPiecesDX8(inputdata_t&)
 T CGameGibManager::~CGameGibManager()
 T CGameMovement::Accelerate(Vector&, float, float)
 T CGameMovement::AddGravity()
 T CGameMovement::AirAccelerate(Vector&, float, float)
 T CGameMovement::AirMove()
 T CGameMovement::CGameMovement()
 T CGameMovement::CalcRoll(QAngle const&, Vector const&, float, float)
 T CGameMovement::CanAccelerate()
 T CGameMovement::CanUnDuckJump(CGameTrace&)
 T CGameMovement::CanUnduck()
 T CGameMovement::CategorizeGroundSurface(CGameTrace&)
 T CGameMovement::CategorizePosition()
 T CGameMovement::CheckFalling()
 T CGameMovement::CheckInterval(CGameMovement::IntervalType_t)
 T CGameMovement::CheckJumpButton()
 T CGameMovement::CheckParameters()
 T CGameMovement::CheckStuck()
 T CGameMovement::CheckVelocity()
 T CGameMovement::CheckWater()
 T CGameMovement::CheckWaterJump()
 T CGameMovement::ClimbSpeed() const
 T CGameMovement::ClipVelocity(Vector&, Vector&, Vector&, float)
 T CGameMovement::ComputeConstraintSpeedFactor()
 T CGameMovement::DecayPunchAngle()
 T CGameMovement::DiffPrint(char const*, ...)
 T CGameMovement::Duck()
 T CGameMovement::FinishDuck()
 T CGameMovement::FinishGravity()
 T CGameMovement::FinishMove()
 T CGameMovement::FinishTrackPredictionErrors(CBasePlayer*)
 T CGameMovement::FinishUnDuck()
 T CGameMovement::FinishUnDuckJump(CGameTrace&)
 T CGameMovement::FixPlayerCrouchStuck(bool)
 T CGameMovement::Friction()
 T CGameMovement::FullLadderMove()
 T CGameMovement::FullNoClipMove(float, float)
 T CGameMovement::FullObserverMove()
 T CGameMovement::FullTossMove()
 T CGameMovement::FullWalkMove()
 T CGameMovement::GameHasLadders() const
 T CGameMovement::GetCheckInterval(CGameMovement::IntervalType_t)
 T CGameMovement::GetMovingPlayer() const
 T CGameMovement::GetPlayerMaxs() const
 T CGameMovement::GetPlayerMaxs(bool) const
 T CGameMovement::GetPlayerMins() const
 T CGameMovement::GetPlayerMins(bool) const
 T CGameMovement::GetPlayerViewOffset(bool) const
 T CGameMovement::GetWaterCheckPosition(int, Vector*)
 T CGameMovement::GetWaterContentsForPointCached(Vector const&, int)
 T CGameMovement::HandleDuckingSpeedCrop()
 T CGameMovement::InWater()
 T CGameMovement::IsDead() const
 T CGameMovement::IsMovingPlayerStuck() const
 T CGameMovement::LadderDistance() const
 T CGameMovement::LadderLateralMultiplier() const
 T CGameMovement::LadderMask() const
 T CGameMovement::LadderMove()
 T CGameMovement::LockTraceFilter(int)
 T CGameMovement::OnLadder(CGameTrace&)
 T CGameMovement::OnTryPlayerMoveCollision(CGameTrace&)
 T CGameMovement::PerformFlyCollisionResolution(CGameTrace&, Vector&)
 T CGameMovement::PlaySwimSound()
 T CGameMovement::PlayerMove()
 T CGameMovement::PlayerRoughLandingEffects(float)
 T CGameMovement::PlayerSolidMask(bool, CBasePlayer*) const
 T CGameMovement::ProcessMovement(CBasePlayer*, CMoveData*)
 T CGameMovement::PushEntity(Vector&, CGameTrace*)
 T CGameMovement::ReduceTimers()
 T CGameMovement::Reset()
 T CGameMovement::ResetGetWaterContentsForPointCache()
 T CGameMovement::SetDuckedEyeOffset(float)
 T CGameMovement::SetGroundEntity(CGameTrace*)
 T CGameMovement::SetupMovementBounds(CMoveData*)
 T CGameMovement::StartGravity()
 T CGameMovement::StartTrackPredictionErrors(CBasePlayer*)
 T CGameMovement::StartUnDuckJump()
 T CGameMovement::StayOnGround()
 T CGameMovement::StepMove(Vector&, CGameTrace&)
 T CGameMovement::TestPlayerPosition(Vector const&, int, CGameTrace&)
 T CGameMovement::TracePlayerBBox(Vector const&, Vector const&, unsigned int, int, CGameTrace&)
 T CGameMovement::TryPlayerMove(Vector*, CGameTrace*)
 T CGameMovement::UnblockPusher(CBasePlayer*, CBaseEntity*)
 T CGameMovement::UnlockTraceFilter(ITraceFilter*&)
 T CGameMovement::UpdateDuckJumpEyeOffset()
 T CGameMovement::WalkMove()
 T CGameMovement::WaterJump()
 T CGameMovement::WaterMove()
 T CGameMovement::~CGameMovement()
 T CGamePlayerEquip::GetDataDescMap()
 T CGamePlayerEquip::KeyValue(char const*, char const*)
 T CGamePlayerEquip::Touch(CBaseEntity*)
 T CGamePlayerEquip::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CGamePlayerEquip::~CGamePlayerEquip()
 T CGamePlayerTeam::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CGamePlayerTeam::~CGamePlayerTeam()
 T CGamePlayerZone::GetDataDescMap()
 T CGamePlayerZone::InputCountPlayersInZone(inputdata_t&)
 T CGamePlayerZone::~CGamePlayerZone()
 T CGameResponseSystem::Precache()
 T CGameResponseSystem::PrecacheResponses(bool)
 T CGameResponseSystem::~CGameResponseSystem()
 T CGameRules::AIClassText(int)
 T CGameRules::AdjustPlayerDamageInflicted(float)
 T CGameRules::AdjustPlayerDamageTaken(CTakeDamageInfo*)
 T CGameRules::AllowAutoTargetCrosshair()
 T CGameRules::AllowSoundscapes()
 T CGameRules::CGameRules()
 T CGameRules::CanEntityBeUsePushed(CBaseEntity*)
 T CGameRules::CanHaveAmmo(CBaseCombatCharacter*, char const*)
 T CGameRules::CanHaveAmmo(CBaseCombatCharacter*, int)
 T CGameRules::CanHavePlayerItem(CBasePlayer*, CBaseCombatWeapon*)
 T CGameRules::ChangePlayerTeam(CBasePlayer*, char const*, bool, bool)
 T CGameRules::CheckAchievementsEnabled(int)
 T CGameRules::CheckChatText(CBasePlayer*, char*)
 T CGameRules::ClientCommand(CBaseEntity*, CCommand const&)
 T CGameRules::ClientCommandKeyValues(edict_t*, KeyValues*)
 T CGameRules::ClientSettingsChanged(CBasePlayer*)
 T CGameRules::CreateCustomNetworkStringTables()
 T CGameRules::CreateStandardEntities()
 T CGameRules::DefaultFOV()
 T CGameRules::DoFindClientInPVS(edict_t*, unsigned char*, unsigned int)
 T CGameRules::EndGameFrame()
 T CGameRules::EndMultiplayerGame()
 T CGameRules::FPlayerCanTakeDamage(CBasePlayer*, CBaseEntity*)
 T CGameRules::FlHEVChargerRechargeTime()
 T CGameRules::FlPlayerFallDeathDoesScreenFade(CBasePlayer*)
 T CGameRules::ForceSplitScreenPlayersOnToSameTeam()
 T CGameRules::FrameUpdatePostEntityThink()
 T CGameRules::GetAmmoDamage(CBaseEntity*, CBaseEntity*, int)
 T CGameRules::GetAmmoQuantityScale(int)
 T CGameRules::GetAutoAimMode()
 T CGameRules::GetAutoAimScale(CBasePlayer*)
 T CGameRules::GetChatFormat(bool, CBasePlayer*)
 T CGameRules::GetChatLocation(bool, CBasePlayer*)
 T CGameRules::GetChatPrefix(bool, CBasePlayer*)
 T CGameRules::GetDamageCustomString(CTakeDamageInfo const&)
 T CGameRules::GetDamageMultiplier()
 T CGameRules::GetEncryptionKey()
 T CGameRules::GetGameDescription()
 T CGameRules::GetGameType()
 T CGameRules::GetGameTypeName()
 T CGameRules::GetIndexedTeamName(int)
 T CGameRules::GetMaxHumanPlayers() const
 T CGameRules::GetNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)
 T CGameRules::GetPlayerSpawnSpot(CBasePlayer*)
 T CGameRules::GetSkillLevel()
 T CGameRules::GetTaggedConVarList(KeyValues*)
 T CGameRules::GetTeamIndex(char const*)
 T CGameRules::GetTopDownMovementAxis()
 T CGameRules::GetViewVectors() const
 T CGameRules::InRoundRestart()
 T CGameRules::Init()
 T CGameRules::InitDefaultAIRelationships()
 T CGameRules::IsSavingAllowed()
 T CGameRules::IsSkillLevel(int)
 T CGameRules::IsSpawnPointValid(CBaseEntity*, CBasePlayer*)
 T CGameRules::IsTeamplay()
 T CGameRules::IsTopDown()
 T CGameRules::IsValidTeam(char const*)
 T CGameRules::LevelShutdown()
 T CGameRules::MarkAchievement(IRecipientFilter&, char const*)
 T CGameRules::Name()
 T CGameRules::NumEntityClasses() const
 T CGameRules::NumFactions() const
 T CGameRules::OnBeginChangeLevel(char const*, KeyValues*)
 T CGameRules::OnNavMeshLoad()
 T CGameRules::OnSkillLevelChanged(int)
 T CGameRules::PlayFootstepSounds(CBasePlayer*)
 T CGameRules::PlayTextureSounds()
 T CGameRules::Precache()
 T CGameRules::RadiusDamage(CTakeDamageInfo const&, Vector const&, float, int, CBaseEntity*)
 T CGameRules::RefreshSkillData(bool)
 T CGameRules::RegisterScriptFunctions()
 T CGameRules::ResetMapCycleTimeStamp()
 T CGameRules::SetDefaultPlayerTeam(CBasePlayer*)
 T CGameRules::SetSkillLevel(int)
 T CGameRules::ShouldAutoAim(CBasePlayer*, edict_t*)
 T CGameRules::ShouldBurningPropsEmitLight()
 T CGameRules::ShouldCollide(int, int)
 T CGameRules::ShouldTimeoutClient(int, float)
 T CGameRules::ShouldUseRobustRadiusDamage(CBaseEntity*)
 T CGameRules::SwitchToNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)
 T CGameRules::Think()
 T CGameRules::UpdateClientData(CBasePlayer*)
 T CGameRules::UpdateGameplayStatsFromSteam()
 T CGameRules::WeaponTraceEntity(CBaseEntity*, Vector const&, Vector const&, unsigned int, CGameTrace*)
 T CGameRules::~CGameRules()
 T CGameRulesProxy::CGameRulesProxy()
 T CGameRulesProxy::GetServerClass()
 T CGameRulesProxy::NotifyNetworkStateChanged()
 T CGameRulesProxy::ObjectCaps()
 T CGameRulesProxy::UpdateTransmitState()
 T CGameRulesProxy::YouForgotToImplementOrDeclareServerClass()
 T CGameRulesProxy::~CGameRulesProxy()
 T CGameRulesRegister::CGameRulesRegister(char const*, void (*)())
 T CGameSaveRestoreInfo::BuildEntityHash()
 T CGameSaveRestoreInfo::GetEntityIndex(CBaseEntity const*)
 T CGameScore::GetDataDescMap()
 T CGameScore::InputApplyScore(inputdata_t&)
 T CGameScore::KeyValue(char const*, char const*)
 T CGameScore::Spawn()
 T CGameScore::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CGameScore::~CGameScore()
 T CGameString::~CGameString()
 T CGameStringPool::Dump()
 T CGameStringPool::LevelShutdownPostEntity()
 T CGameStringPool::Name()
 T CGameStringPool::Remove(char const*)
 T CGameStringPool::~CGameStringPool()
 T CGameText::Display(CBaseEntity*)
 T CGameText::GetDataDescMap()
 T CGameText::InputDisplay(inputdata_t&)
 T CGameText::InputSetPosX(inputdata_t&)
 T CGameText::InputSetPosY(inputdata_t&)
 T CGameText::InputSetText(inputdata_t&)
 T CGameText::InputSetTextColor(inputdata_t&)
 T CGameText::InputSetTextColor2(inputdata_t&)
 T CGameText::KeyValue(char const*, char const*)
 T CGameText::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CGameText::~CGameText()
 T CGameTimescale::FrameUpdatePostEntityThink()
 T CGameTimescale::Init()
 T CGameTimescale::LevelInitPostEntity()
 T CGameTimescale::LevelShutdownPostEntity()
 T CGameTimescale::SetDesiredTimescale(float, float, CGameTimescale::Interpolators_e, float)
 T CGameTimescale::Shutdown()
 T CGameTimescale::UpdateTimescale()
 T CGameTimescale::~CGameTimescale()
 T CGameTrace::DidHitNonWorldEntity() const
 T CGameTrace::DidHitWorld() const
 T CGameTrace::GetEntityIndex() const
 T CGameUI::Deactivate(CBaseEntity*)
 T CGameUI::GetDataDescMap()
 T CGameUI::InputActivate(inputdata_t&)
 T CGameUI::InputDeactivate(inputdata_t&)
 T CGameUI::Think()
 T CGameUI::~CGameUI()
 T CGameWeaponManager::CGameWeaponManager()
 T CGameWeaponManager::GetDataDescMap()
 T CGameWeaponManager::InputSetAmmoModifier(inputdata_t&)
 T CGameWeaponManager::InputSetMaxPieces(inputdata_t&)
 T CGameWeaponManager::Spawn()
 T CGameWeaponManager::Think()
 T CGameWeaponManager::~CGameWeaponManager()
 T CGamestatsData::AllocData()
 T CGenericActor* _CreateEntityTemplate<CGenericActor>(CGenericActor*, char const*)
 T CGenericActor::Classify()
 T CGenericActor::GetDataDescMap()
 T CGenericActor::GetSoundInterests()
 T CGenericActor::HandleAnimEvent(animevent_t*)
 T CGenericActor::MaxYawSpeed()
 T CGenericActor::Precache()
 T CGenericActor::Spawn()
 T CGenericActor::UpdateTransmitState()
 T CGenericActor::~CGenericActor()
 T CGenericClassmap<CAI_BehaviorBase>::Add(char const*, char const*, int, CAI_BehaviorBase* (*)())
 T CGenericClassmap<CAI_BehaviorBase>::~CGenericClassmap()
 T CGenericCycler::Spawn()
 T CGenericCycler::~CGenericCycler()
 T CGenericFlexCycler* _CreateEntityTemplate<CGenericFlexCycler>(CGenericFlexCycler*, char const*)
 T CGenericFlexCycler::Spawn()
 T CGenericFlexCycler::~CGenericFlexCycler()
 T CGenericNPC::Classify()
 T CGenericNPC::GetSoundInterests()
 T CGenericNPC::HandleAnimEvent(animevent_t*)
 T CGenericNPC::MaxYawSpeed()
 T CGenericNPC::Precache()
 T CGenericNPC::Spawn()
 T CGenericNPC::TempGunEffect()
 T CGenericNPC::~CGenericNPC()
 T CGib::BounceGibTouch(CBaseEntity*)
 T CGib::DieThink()
 T CGib::GetDataDescMap()
 T CGib::HasPhysicsAttacker(float)
 T CGib::InitGib(CBaseEntity*, float, float)
 T CGib::ObjectCaps()
 T CGib::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CGib::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CGib::SUB_AllowedToFade()
 T CGib::SetBloodColor(int)
 T CGib::Spawn(char const*, float)
 T CGib::SpawnHeadGib(CBaseEntity*)
 T CGib::SpawnRandomGibs(CBaseEntity*, int, GibType_e)
 T CGib::StickyGibTouch(CBaseEntity*)
 T CGib::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CGib::WaitTillLand()
 T CGib::~CGib()
 T CGibShooter::CreateGib()
 T CGibShooter::GetDataDescMap()
 T CGibShooter::InitPointGib(CGib*, Vector const&, float)
 T CGibShooter::InputShoot(inputdata_t&)
 T CGibShooter::Precache()
 T CGibShooter::ShootThink()
 T CGibShooter::Spawn()
 T CGibShooter::SpawnGib(Vector const&, float)
 T CGibShooter::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CGibShooter::~CGibShooter()
 T CGlobalEntityList::AddListenerEntity(IEntityListener*)
 T CGlobalEntityList::AddPostClientMessageEntity(CBaseEntity*)
 T CGlobalEntityList::AddToDeleteList(IServerNetworkable*)
 T CGlobalEntityList::CleanupDeleteList()
 T CGlobalEntityList::Clear()
 T CGlobalEntityList::FindEntityByClassname(CBaseEntity*, char const*)
 T CGlobalEntityList::FindEntityByClassnameNearest(char const*, Vector const&, float)
 T CGlobalEntityList::FindEntityByClassnameWithin(CBaseEntity*, char const*, Vector const&, float)
 T CGlobalEntityList::FindEntityByModel(CBaseEntity*, char const*)
 T CGlobalEntityList::FindEntityByName(CBaseEntity*, char const*, CBaseEntity*, CBaseEntity*, CBaseEntity*, IEntityFindFilter*)
 T CGlobalEntityList::FindEntityByNameNearest(char const*, Vector const&, float, CBaseEntity*, CBaseEntity*, CBaseEntity*)
 T CGlobalEntityList::FindEntityByNameWithin(CBaseEntity*, char const*, Vector const&, float, CBaseEntity*, CBaseEntity*, CBaseEntity*)
 T CGlobalEntityList::FindEntityByTarget(CBaseEntity*, char const*)
 T CGlobalEntityList::FindEntityClassNearestFacing(Vector const&, Vector const&, float, char*)
 T CGlobalEntityList::FindEntityGeneric(CBaseEntity*, char const*, CBaseEntity*, CBaseEntity*, CBaseEntity*)
 T CGlobalEntityList::FindEntityGenericNearest(char const*, Vector const&, float, CBaseEntity*, CBaseEntity*, CBaseEntity*)
 T CGlobalEntityList::FindEntityGenericWithin(CBaseEntity*, char const*, Vector const&, float, CBaseEntity*, CBaseEntity*, CBaseEntity*)
 T CGlobalEntityList::FindEntityInSphere(CBaseEntity*, Vector const&, float)
 T CGlobalEntityList::FindEntityNearestFacing(Vector const&, Vector const&, float)
 T CGlobalEntityList::FindEntityProcedural(char const*, CBaseEntity*, CBaseEntity*, CBaseEntity*)
 T CGlobalEntityList::IsEntityPtr(void*)
 T CGlobalEntityList::NextEnt(CBaseEntity*)
 T CGlobalEntityList::NotifyCreateEntity(CBaseEntity*)
 T CGlobalEntityList::NotifyRemoveEntity(CBaseEntity*)
 T CGlobalEntityList::NotifySpawn(CBaseEntity*)
 T CGlobalEntityList::NumberOfEntities()
 T CGlobalEntityList::OnAddEntity(IHandleEntity*, CBaseHandle)
 T CGlobalEntityList::OnRemoveEntity(IHandleEntity*, CBaseHandle)
 T CGlobalEntityList::PostClientMessagesSent()
 T CGlobalEntityList::RemoveListenerEntity(IEntityListener*)
 T CGlobalEntityList::ReportEntityFlagsChanged(CBaseEntity*, unsigned int, unsigned int)
 T CGlobalEntityList::ResetDeleteList()
 T CGlobalEntityList::UpdateName(IHandleEntity*)
 T CGlobalEntityList::UpdateName(IHandleEntity*, CBaseHandle)
 T CGlobalEntityList::~CGlobalEntityList()
 T CGlobalEvent::AddValue(bool, char const*, char const*)
 T CGlobalEvent::Write(CUtlBuffer*)
 T CGlobalEventLine::SetVaryingText(char const*)
 T CGlobalEventLog::AddKeyValue(CGlobalEvent*, bool, char const*, char const*, ...)
 T CGlobalEventLog::CreateEvent(char const*, bool, CGlobalEvent*)
 T CGlobalEventLog::CreateTempEvent(char const*, CGlobalEvent*)
 T CGlobalEventLog::FrameUpdatePostEntityThink()
 T CGlobalEventLog::PostInit()
 T CGlobalEventLog::RemoveEvent(CGlobalEvent*)
 T CGlobalEventLog::SendUpdate()
 T CGlobalEventLog::~CGlobalEventLog()
 T CGlobalState::AddEntity(char const*, char const*, GLOBALESTATE)
 T CGlobalState::DumpGlobals()
 T CGlobalState::LevelShutdownPostEntity()
 T CGlobalState::LevelShutdownPreEntity()
 T CGlobalState::~CGlobalState()
 T CGrabController::AttachEntity(CBasePlayer*, CBaseEntity*, IPhysicsObject*, bool, Vector const&, bool)
 T CGrabController::AttachEntityVM(CBasePlayer*, CBaseEntity*, IPhysicsObject*, bool, Vector const&, bool)
 T CGrabController::CheckPortalOscillation(CPortal_Base2D*, CBaseEntity*, CPortal_Player*)
 T CGrabController::ComputeError()
 T CGrabController::DetachEntity(bool)
 T CGrabController::DetachEntityVM(bool)
 T CGrabController::FindSafePlacementLocation(Vector*, bool)
 T CGrabController::GetObjectDistance() const
 T CGrabController::GetObjectOffset(CBaseEntity*) const
 T CGrabController::PushNearbyTurrets()
 T CGrabController::RotateObject(CBasePlayer*, float, float, bool)
 T CGrabController::SetTargetPosition(Vector const&, QAngle const&, bool)
 T CGrabController::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CGrabController::TransformAnglesFromPlayerSpace(QAngle const&, CBasePlayer*)
 T CGrabController::UpdateObject(CBasePlayer*, float, bool)
 T CGrabController::UpdateObjectVM(CBasePlayer*, float)
 T CGrenadeBeam::Create(CBaseEntity*, Vector const&)
 T CGrenadeBeam::CreateBeams()
 T CGrenadeBeam::Format(color32_s, float)
 T CGrenadeBeam::GetDataDescMap()
 T CGrenadeBeam::GetNextTargetPos(Vector*)
 T CGrenadeBeam::GrenadeBeamTouch(CBaseEntity*)
 T CGrenadeBeam::KillBeam()
 T CGrenadeBeam::Precache()
 T CGrenadeBeam::Shoot(Vector, float, float, float, float)
 T CGrenadeBeam::Spawn()
 T CGrenadeBeam::UpdateBeams()
 T CGrenadeBeam::UpdateTransmitState()
 T CGrenadeBeam::~CGrenadeBeam()
 T CGrenadeBeamChaser::ChaserThink()
 T CGrenadeBeamChaser::GetDataDescMap()
 T CGrenadeBeamChaser::Spawn()
 T CGrenadeBeamChaser::~CGrenadeBeamChaser()
 T CGrenadeFrag::CreateEffects()
 T CGrenadeFrag::CreateVPhysics()
 T CGrenadeFrag::DelayThink()
 T CGrenadeFrag::GetDataDescMap()
 T CGrenadeFrag::InputSetTimer(inputdata_t&)
 T CGrenadeFrag::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CGrenadeFrag::OnRestore()
 T CGrenadeFrag::OnTakeDamage(CTakeDamageInfo const&)
 T CGrenadeFrag::Precache()
 T CGrenadeFrag::Spawn()
 T CGrenadeFrag::VPhysicsUpdate(IPhysicsObject*)
 T CGrenadeFrag::~CGrenadeFrag()
 T CGunTarget::Activate()
 T CGunTarget::BloodColor()
 T CGunTarget::BodyTarget(Vector const&, bool)
 T CGunTarget::Classify()
 T CGunTarget::CreateVPhysics()
 T CGunTarget::GetDataDescMap()
 T CGunTarget::InputStart(inputdata_t&)
 T CGunTarget::InputStop(inputdata_t&)
 T CGunTarget::InputToggle(inputdata_t&)
 T CGunTarget::Next()
 T CGunTarget::OnTakeDamage(CTakeDamageInfo const&)
 T CGunTarget::Spawn()
 T CGunTarget::Start()
 T CGunTarget::Wait()
 T CGunTarget::~CGunTarget()
 T CHFontProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CHFontProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CHFontProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CHL2EventLog::Name()
 T CHL2EventLog::PrintEvent(IGameEvent*)
 T CHL2EventLog::~CHL2EventLog()
 T CHLMachineGun::PrimaryAttack()
 T CHLPlayerMove::FinishMove(CBasePlayer*, CUserCmd*, CMoveData*)
 T CHLPlayerMove::SetupMove(CBasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T CHLPlayerMove::~CHLPlayerMove()
 T CHLSelectFireMachineGun::BurstThink()
 T CHLTVDirector::AnalyzeCameras()
 T CHLTVDirector::AnalyzePlayers()
 T CHLTVDirector::BuildActivePlayerList()
 T CHLTVDirector::BuildCameraList()
 T CHLTVDirector::CreateShotFromEvent(CHLTVGameEvent*)
 T CHLTVDirector::FindBestGameEvent()
 T CHLTVDirector::FinishCameraManShot()
 T CHLTVDirector::FireGameEvent(IGameEvent*)
 T CHLTVDirector::FrameUpdatePostEntityThink()
 T CHLTVDirector::GetDelay()
 T CHLTVDirector::GetDirectorTick()
 T CHLTVDirector::GetFixedCameraEntityName()
 T CHLTVDirector::GetHLTVServer()
 T CHLTVDirector::GetModEvents()
 T CHLTVDirector::GetPVSEntity()
 T CHLTVDirector::GetPVSOrigin()
 T CHLTVDirector::Init()
 T CHLTVDirector::IsActive()
 T CHLTVDirector::LevelInitPostEntity()
 T CHLTVDirector::Name()
 T CHLTVDirector::RemoveEventsFromHistory(int)
 T CHLTVDirector::SetCameraMan(int)
 T CHLTVDirector::SetHLTVServer(IHLTVServer*)
 T CHLTVDirector::Shutdown()
 T CHLTVDirector::StartBestFixedCameraShot(bool)
 T CHLTVDirector::StartBestPlayerCameraShot()
 T CHLTVDirector::StartCameraManShot()
 T CHLTVDirector::StartChaseCameraShot(int, int, int, int, int, bool)
 T CHLTVDirector::StartDelayMessage()
 T CHLTVDirector::StartFixedCameraShot(int, int)
 T CHLTVDirector::StartInstantBroadcastShot()
 T CHLTVDirector::StartNewShot()
 T CHLTVDirector::StartRandomShot()
 T CHLTVDirector::UpdateSettings()
 T CHLTVDirector::~CHLTVDirector()
 T CHalfLife2::AIClassText(int)
 T CHalfLife2::AdjustPlayerDamageInflicted(float)
 T CHalfLife2::AdjustPlayerDamageTaken(CTakeDamageInfo*)
 T CHalfLife2::AllowDamage(CBaseEntity*, CTakeDamageInfo const&)
 T CHalfLife2::CHalfLife2()
 T CHalfLife2::ClientCommand(CBaseEntity*, CCommand const&)
 T CHalfLife2::Damage_GetTimeBased()
 T CHalfLife2::Damage_IsTimeBased(int)
 T CHalfLife2::DefaultFOV()
 T CHalfLife2::FlPlayerFallDamage(CBasePlayer*)
 T CHalfLife2::GetAmmoDamage(CBaseEntity*, CBaseEntity*, int)
 T CHalfLife2::GetAmmoQuantityScale(int)
 T CHalfLife2::GetAutoAimScale(CBasePlayer*)
 T CHalfLife2::GetGameDescription()
 T CHalfLife2::InitDefaultAIRelationships()
 T CHalfLife2::IsAlyxInDarknessMode()
 T CHalfLife2::LevelInitPreEntity()
 T CHalfLife2::PlayerSpawn(CBasePlayer*)
 T CHalfLife2::PlayerThink(CBasePlayer*)
 T CHalfLife2::ShouldAutoAim(CBasePlayer*, edict_t*)
 T CHalfLife2::ShouldBurningPropsEmitLight()
 T CHalfLife2::ShouldCollide(int, int)
 T CHalfLife2::ShouldUseRobustRadiusDamage(CBaseEntity*)
 T CHalfLife2::Think()
 T CHalfLife2::~CHalfLife2()
 T CHalfLife2Proxy::GetServerClass()
 T CHalfLife2Proxy::YouForgotToImplementOrDeclareServerClass()
 T CHalfLife2Proxy::~CHalfLife2Proxy()
 T CHandleDummy::~CHandleDummy()
 T CHandleTest::CHandleTest()
 T CHandleTest::GetServerClass()
 T CHandleTest::SetTransmit(CCheckTransmitInfo*, bool)
 T CHandleTest::UpdateTransmitState()
 T CHandleTest::YouForgotToImplementOrDeclareServerClass()
 T CHandleTest::~CHandleTest()
 T CHintCriteria::AddExcludePosition(Vector const&, float)
 T CHintCriteria::AddHintType(int)
 T CHintCriteria::AddIncludePosition(Vector const&, float)
 T CHintCriteria::AddZone(CUtlVector<CHintCriteria::hintZone_t, CUtlMemory<CHintCriteria::hintZone_t, int> >&, Vector const&, float)
 T CHintCriteria::CHintCriteria()
 T CHintCriteria::SetFlag(int)
 T CHintCriteria::SetGroup(string_t)
 T CHintCriteria::SetHintType(int)
 T CHintCriteria::~CHintCriteria()
 T CHintMessage::CHintMessage(char const*, CUtlVector<char const*, CUtlMemory<char const*, int> >*, float)
 T CHintMessage::Send(CBasePlayer*)
 T CHintMessageQueue::AddMessage(char const*, float, CUtlVector<char const*, CUtlMemory<char const*, int> >*)
 T CHintMessageQueue::Reset()
 T CHintMessageQueue::Update()
 T CHintMessageTimers::AddTimer(int, float, float, CUtlVector<char const*, CUtlMemory<char const*, int> >*)
 T CHintMessageTimers::Reset()
 T CHintMessageTimers::Update()
 T CHintSystem::HintMessage(int, bool, bool)
 T CHintSystem::ResetHintTimers()
 T CHintSystem::ResetHints()
 T CHintSystem::TimerShouldFire(int)
 T CHintSystem::Update()
 T CHotPotato::ActivateHotPotatoTimer(float)
 T CHotPotato::AnimThink()
 T CHotPotato::DamageEntity(CBaseEntity*, Vector const&, Vector const&)
 T CHotPotato::DoExplosion(Vector const&, float, CPortal_Base2D*)
 T CHotPotato::Event_Killed(CTakeDamageInfo const&)
 T CHotPotato::ExplodeHotPotato()
 T CHotPotato::GetDataDescMap()
 T CHotPotato::InputDissolve(inputdata_t&)
 T CHotPotato::InputExplode(inputdata_t&)
 T CHotPotato::KillHotPotato()
 T CHotPotato::KillThink()
 T CHotPotato::OnFizzled()
 T CHotPotato::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CHotPotato::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CHotPotato::OnTakeDamage(CTakeDamageInfo const&)
 T CHotPotato::Precache()
 T CHotPotato::SetSpawner(CHotPotatoSpawner*)
 T CHotPotato::Spawn()
 T CHotPotato::TimerThink()
 T CHotPotato::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CHotPotato::~CHotPotato()
 T CHotPotatoCatcher::CaptureHotPotato(CHotPotato*)
 T CHotPotatoCatcher::CaptureThink()
 T CHotPotatoCatcher::CatchThink()
 T CHotPotatoCatcher::DrawDebugGeometryOverlays()
 T CHotPotatoCatcher::GetDataDescMap()
 T CHotPotatoCatcher::Spawn()
 T CHotPotatoCatcher::~CHotPotatoCatcher()
 T CHotPotatoSocket* _CreateEntityTemplate<CHotPotatoSocket>(CHotPotatoSocket*, char const*)
 T CHotPotatoSocket::CaptureHotPotato(CHotPotato*)
 T CHotPotatoSocket::Precache()
 T CHotPotatoSocket::Spawn()
 T CHotPotatoSocket::~CHotPotatoSocket()
 T CHotPotatoSpawner::GetDataDescMap()
 T CHotPotatoSpawner::GetTimerPanel()
 T CHotPotatoSpawner::HotPotatoDestroyed()
 T CHotPotatoSpawner::HotPotatoGrabbed(CHotPotato*, bool)
 T CHotPotatoSpawner::InputForceSpawn(inputdata_t&)
 T CHotPotatoSpawner::Precache()
 T CHotPotatoSpawner::Spawn()
 T CHotPotatoSpawner::SpawnHotPotato()
 T CHotPotatoSpawner::~CHotPotatoSpawner()
 T CHoverTurretTether::GetDataDescMap()
 T CHoverTurretTether::PullThink()
 T CHoverTurretTether::Spawn()
 T CHoverTurretTether::UpdateOnRemove()
 T CHoverTurretTether::~CHoverTurretTether()
 T CIKContext::AddAutoplayLocks(Vector*, Quaternion*)
 T CIKContext::AddDependencies(mstudioseqdesc_t&, int, float, float const*, float)
 T CIKContext::AddSequenceLocks(mstudioseqdesc_t&, Vector*, Quaternion*)
 T CIKContext::AutoIKRelease()
 T CIKContext::CIKContext()
 T CIKContext::ClearTargets()
 T CIKContext::Init(CStudioHdr const*, QAngle const&, Vector const&, float, int, int)
 T CIKContext::SolveAutoplayLocks(Vector*, Quaternion*)
 T CIKContext::SolveDependencies(Vector*, Quaternion*, matrix3x4a_t*, CBoneBitList&)
 T CIKContext::SolveLock(mstudioiklock_t const*, int, Vector*, Quaternion*, matrix3x4a_t*, CBoneBitList&)
 T CIKContext::SolveSequenceLocks(mstudioseqdesc_t&, Vector*, Quaternion*)
 T CIKContext::UpdateTargets(Vector*, Quaternion*, matrix3x4a_t*, CBoneBitList&)
 T CIKSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CIKSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CIKSolver::solve(float, float, float const*, float const*, float*)
 T CIKTarget::IsActive()
 T CIKTarget::SetAngles(QAngle const&)
 T CIKTarget::SetNormal(Vector const&)
 T CIKTarget::SetPos(Vector const&)
 T CIKTarget::SetPosWithNormalOffset(Vector const&, Vector const&)
 T CIPLocationInfo::ByteSize() const
 T CIPLocationInfo::Clear()
 T CIPLocationInfo::GetCachedSize() const
 T CIPLocationInfo::GetMetadata() const
 T CIPLocationInfo::IsInitialized() const
 T CIPLocationInfo::MergeFrom(CIPLocationInfo const&)
 T CIPLocationInfo::New() const
 T CIPLocationInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CIPLocationInfo::SetCachedSize(int) const
 T CIPLocationInfo::SharedDtor()
 T CIPLocationInfo::~CIPLocationInfo()
 T CInfoCameraLink::Activate()
 T CInfoCameraLink::CInfoCameraLink()
 T CInfoCameraLink::GetDataDescMap()
 T CInfoCameraLink::InputSetCamera(inputdata_t&)
 T CInfoCameraLink::SetCameraByName(char const*)
 T CInfoCameraLink::~CInfoCameraLink()
 T CInfoGameEventProxy::GameEventProxyCallback(CBaseEntity*, CBasePlayer*)
 T CInfoGameEventProxy::GameEventProxyEvaluator(CBaseEntity*, CBasePlayer*)
 T CInfoGameEventProxy::GetDataDescMap()
 T CInfoGameEventProxy::InputDisable(inputdata_t&)
 T CInfoGameEventProxy::InputEnable(inputdata_t&)
 T CInfoGameEventProxy::InputGenerateGameEvent(inputdata_t&)
 T CInfoGameEventProxy::Spawn()
 T CInfoGameEventProxy::UpdateTransmitState()
 T CInfoGameEventProxy::~CInfoGameEventProxy()
 T CInfoInstructorHintTarget::GetDataDescMap()
 T CInfoInstructorHintTarget::UpdateTransmitState()
 T CInfoInstructorHintTarget::~CInfoInstructorHintTarget()
 T CInfoIntermission::Spawn()
 T CInfoIntermission::Think()
 T CInfoIntermission::~CInfoIntermission()
 T CInfoLadderDismount::DrawDebugGeometryOverlays()
 T CInfoLadderDismount::GetServerClass()
 T CInfoLadderDismount::YouForgotToImplementOrDeclareServerClass()
 T CInfoLadderDismount::~CInfoLadderDismount()
 T CInfoLandmark::Activate()
 T CInfoLandmark::~CInfoLandmark()
 T CInfoMassCenter::Spawn()
 T CInfoMassCenter::~CInfoMassCenter()
 T CInfoOverlayAccessor::GetDataDescMap()
 T CInfoOverlayAccessor::GetServerClass()
 T CInfoOverlayAccessor::UpdateTransmitState()
 T CInfoOverlayAccessor::YouForgotToImplementOrDeclareServerClass()
 T CInfoOverlayAccessor::~CInfoOverlayAccessor()
 T CInfoPlacementHelper::BindToPortal(CPortal_Base2D*)
 T CInfoPlacementHelper::CInfoPlacementHelper()
 T CInfoPlacementHelper::DrawDebugGeometryOverlays()
 T CInfoPlacementHelper::GetDataDescMap()
 T CInfoPlacementHelper::GetServerClass()
 T CInfoPlacementHelper::InputDisable(inputdata_t&)
 T CInfoPlacementHelper::InputEnable(inputdata_t&)
 T CInfoPlacementHelper::NotifyPortalEvent(PortalEvent_t, CPortal_Base2D*)
 T CInfoPlacementHelper::ObjectCaps()
 T CInfoPlacementHelper::OnRestore()
 T CInfoPlacementHelper::ShouldUseHelperAngles()
 T CInfoPlacementHelper::Spawn()
 T CInfoPlacementHelper::UpdateOnRemove()
 T CInfoPlacementHelper::UpdateTransmitState()
 T CInfoPlacementHelper::YouForgotToImplementOrDeclareServerClass()
 T CInfoPlacementHelper::~CInfoPlacementHelper()
 T CInfoPlacementManager::AddPlacementHelper(CInfoPlacementHelper*)
 T CInfoPlacementManager::FindPlacementHelper(Vector const&, CBasePlayer*)
 T CInfoPlacementManager::LevelShutdownPostEntity()
 T CInfoPlacementManager::RemovePlacementHelper(CInfoPlacementHelper*)
 T CInfoPlacementManager::~CInfoPlacementManager()
 T CInfoPortalScore::CInfoPortalScore()
 T CInfoPortalScore::CountdownThink()
 T CInfoPortalScore::GetDataDescMap()
 T CInfoPortalScore::GetServerClass()
 T CInfoPortalScore::InputAddBlueScore(inputdata_t&)
 T CInfoPortalScore::InputAddOrangeScore(inputdata_t&)
 T CInfoPortalScore::InputResetScore(inputdata_t&)
 T CInfoPortalScore::InputStartGame(inputdata_t&)
 T CInfoPortalScore::Precache()
 T CInfoPortalScore::ScoreThink()
 T CInfoPortalScore::Spawn()
 T CInfoPortalScore::UpdateTransmitState()
 T CInfoPortalScore::YouForgotToImplementOrDeclareServerClass()
 T CInfoPortalScore::~CInfoPortalScore()
 T CInfoRemarkable::GetDataDescMap()
 T CInfoRemarkable::GetListOfAllThatIsRemarkable()
 T CInfoRemarkable::Spawn()
 T CInfoRemarkable::~CInfoRemarkable()
 T CInfoTarget::Spawn()
 T CInfoTarget::UpdateTransmitState()
 T CInfoTarget::~CInfoTarget()
 T CInfoTargetEntityEnumerator::EnumEntity(IHandleEntity*)
 T CInfoTargetPersonalitySphere::GetDataDescMap()
 T CInfoTargetPersonalitySphere::Precache()
 T CInfoTargetPersonalitySphere::Spawn()
 T CInfoTargetPersonalitySphere::~CInfoTargetPersonalitySphere()
 T CInfo_Coop_Spawn::Activate()
 T CInfo_Coop_Spawn::DrawDebugTextOverlays()
 T CInfo_Coop_Spawn::GetDataDescMap()
 T CInfo_Coop_Spawn::InputDisable(inputdata_t&)
 T CInfo_Coop_Spawn::InputEnable(inputdata_t&)
 T CInfo_Coop_Spawn::InputSetAsActiveSpawn(inputdata_t&)
 T CInfo_Coop_Spawn::UpdateOnRemove()
 T CInfo_Coop_Spawn::~CInfo_Coop_Spawn()
 T CInfo_Player_Ping_Detector::FireGameEvent(IGameEvent*)
 T CInfo_Player_Ping_Detector::GetDataDescMap()
 T CInfo_Player_Ping_Detector::InputDisable(inputdata_t&)
 T CInfo_Player_Ping_Detector::InputEnable(inputdata_t&)
 T CInfo_Player_Ping_Detector::InputToggle(inputdata_t&)
 T CInfo_Player_Ping_Detector::Spawn()
 T CInfo_Player_Ping_Detector::UpdateOnRemove()
 T CInfo_Player_Ping_Detector::~CInfo_Player_Ping_Detector()
 T CInstancedResponseSystem::GetScriptFile()
 T CInstancedResponseSystem::Init()
 T CInstancedResponseSystem::LevelInitPostEntity()
 T CInstancedResponseSystem::Release()
 T CInstancedResponseSystem::~CInstancedResponseSystem()
 T CInstancedSceneEntity::DispatchEndFace(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CInstancedSceneEntity::DispatchEndMoveTo(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CInstancedSceneEntity::DispatchStartFace(CChoreoScene*, CBaseFlex*, CBaseEntity*, CChoreoEvent*)
 T CInstancedSceneEntity::DispatchStartMoveTo(CChoreoScene*, CBaseFlex*, CBaseEntity*, CChoreoEvent*)
 T CInstancedSceneEntity::DoThink(float)
 T CInstancedSceneEntity::EstimateLength()
 T CInstancedSceneEntity::FindNamedActor(char const*)
 T CInstancedSceneEntity::FindNamedEntity(char const*)
 T CInstancedSceneEntity::GetDataDescMap()
 T CInstancedSceneEntity::GetPostSpeakDelay()
 T CInstancedSceneEntity::GetPreDelay()
 T CInstancedSceneEntity::OnLoaded()
 T CInstancedSceneEntity::OnRestore()
 T CInstancedSceneEntity::SetPostSpeakDelay(float)
 T CInstancedSceneEntity::SetPreDelay(float)
 T CInstancedSceneEntity::StartPlayback()
 T CInstancedSceneEntity::~CInstancedSceneEntity()
 T CIntProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CIntProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CIntProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CInventoryManager::CInventoryManager()
 T CInventoryManager::GameServerSteamAPIActivated()
 T CInventoryManager::GetBackpackPositionFromBackend(unsigned int)
 T CInventoryManager::GetInventoryForAccount(unsigned int)
 T CInventoryManager::Init()
 T CInventoryManager::InitGC()
 T CInventoryManager::LevelInitPreEntity()
 T CInventoryManager::LevelShutdownPostEntity()
 T CInventoryManager::PostInit()
 T CInventoryManager::PostInitGC()
 T CInventoryManager::PreInitGC()
 T CInventoryManager::Shutdown()
 T CInventoryManager::ShutdownGC()
 T CInventoryManager::SteamRequestInventory(CPlayerInventory*, CSteamID, IInventoryUpdateListener*)
 T CInventoryManager::Type()
 T CInventoryManager::~CInventoryManager()
 T CItem::CItem()
 T CItem::ComeToRest()
 T CItem::CreateItemVPhysicsObject()
 T CItem::GetDataDescMap()
 T CItem::HasBloatedCollision() const
 T CItem::ItemTouch(CBaseEntity*)
 T CItem::Materialize()
 T CItem::MyTouch(CBasePlayer*)
 T CItem::ObjectCaps()
 T CItem::OnEntityEvent(EntityEvent_t, void*)
 T CItem::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CItem::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CItem::Precache()
 T CItem::Respawn()
 T CItem::Spawn()
 T CItem::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CItem::~CItem()
 T CItemGeneration::~CItemGeneration()
 T CItemSelectionCriteria::BAddCondition(char const*, EItemCriteriaOperator, char const*, bool)
 T CItemSelectionCriteria::BAddCondition(char const*, EItemCriteriaOperator, float, bool)
 T CItemSelectionCriteria::BDeserializeFromMsg(CSOItemCriteria const&)
 T CItemSelectionCriteria::BInitFromKV(KeyValues*, CEconItemSchema const&)
 T CItemSelectionCriteria::BSerializeToMsg(CSOItemCriteria&) const
 T CItemSelectionCriteria::CCondition::BSerializeToMsg(CSOItemCriteriaCondition&) const
 T CItemSelectionCriteria::CCondition::GetField()
 T CItemSelectionCriteria::CCondition::GetValue()
 T CItemSelectionCriteria::CCondition::~CCondition()
 T CItemSelectionCriteria::CFloatCondition::BInternalEvaluate(KeyValues*) const
 T CItemSelectionCriteria::CFloatCondition::BSerializeToMsg(CSOItemCriteriaCondition&) const
 T CItemSelectionCriteria::CFloatCondition::~CFloatCondition()
 T CItemSelectionCriteria::CSetCondition::BInternalEvaluate(KeyValues*) const
 T CItemSelectionCriteria::CSetCondition::BSerializeToMsg(CSOItemCriteriaCondition&) const
 T CItemSelectionCriteria::CSetCondition::~CSetCondition()
 T CItemSelectionCriteria::CStringCondition::BInternalEvaluate(KeyValues*) const
 T CItemSelectionCriteria::CStringCondition::BSerializeToMsg(CSOItemCriteriaCondition&) const
 T CItemSelectionCriteria::CStringCondition::GetValue()
 T CItemSelectionCriteria::CStringCondition::~CStringCondition()
 T CItemSelectionCriteria::operator=(CItemSelectionCriteria const&)
 T CItemSelectionCriteria::~CItemSelectionCriteria()
 T CItemSoda::CanThink()
 T CItemSoda::CanTouch(CBaseEntity*)
 T CItemSoda::GetDataDescMap()
 T CItemSoda::Precache()
 T CItemSoda::Spawn()
 T CItemSoda::~CItemSoda()
 T CItemSuit::MyTouch(CBasePlayer*)
 T CItemSuit::Precache()
 T CItemSuit::Spawn()
 T CItemSuit::~CItemSuit()
 T CItem_Nugget::GetDataDescMap()
 T CItem_Nugget::MaterializeThink()
 T CItem_Nugget::Precache()
 T CItem_Nugget::Respawn()
 T CItem_Nugget::Spawn()
 T CItem_Nugget::StartTouch(CBaseEntity*)
 T CItem_Nugget::UpdateOnRemove()
 T CItem_Nugget::~CItem_Nugget()
 T CJob::Abort(bool)
 T CJob::Describe()
 T CJob::DoAbort(bool)
 T CJob::DoCleanup()
 T CJob::~CJob()
 T CKeepUpright::Activate()
 T CKeepUpright::GetDataDescMap()
 T CKeepUpright::InputSetAngularLimit(inputdata_t&)
 T CKeepUpright::InputTurnOff(inputdata_t&)
 T CKeepUpright::InputTurnOn(inputdata_t&)
 T CKeepUpright::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CKeepUpright::Spawn()
 T CKeepUpright::~CKeepUpright()
 T CKeyBindingsMgr::AddPanelToContext(vgui::KeyBindingContextHandle_t, vgui::Panel*)
 T CKeyBindingsMgr::KeyBindingContextHandleLessFunc(CKeyBindingsMgr::KBContext_t const&, CKeyBindingsMgr::KBContext_t const&)
 T CKeyBindingsMgr::OnPanelDeleted(vgui::KeyBindingContextHandle_t, vgui::Panel*)
 T CKeyBindingsMgr::~CKeyBindingsMgr()
 T CKeyValuesDumpContextAsDevMsg::KvBeginKey(KeyValues*, int)
 T CKeyValuesDumpContextAsDevMsg::KvWriteText(char const*)
 T CKeyValuesErrorStack::ReportError(char const*)
 T CLabIndicatorPanel::Enable()
 T CLabIndicatorPanel::GetDataDescMap()
 T CLabIndicatorPanel::GetServerClass()
 T CLabIndicatorPanel::InputDisable(inputdata_t&)
 T CLabIndicatorPanel::InputEnable(inputdata_t&)
 T CLabIndicatorPanel::OnRestore()
 T CLabIndicatorPanel::Precache()
 T CLabIndicatorPanel::ScreenVisible(bool)
 T CLabIndicatorPanel::SetTransmit(CCheckTransmitInfo*, bool)
 T CLabIndicatorPanel::Spawn()
 T CLabIndicatorPanel::SpawnControlPanels()
 T CLabIndicatorPanel::StartTimer(float)
 T CLabIndicatorPanel::UpdateTransmitState()
 T CLabIndicatorPanel::YouForgotToImplementOrDeclareServerClass()
 T CLabIndicatorPanel::~CLabIndicatorPanel()
 T CLagCompensationManager::AddAdditionalEntity(CBaseEntity*)
 T CLagCompensationManager::BacktrackEntity(CBaseEntity*, float, CUtlFixedLinkedList<LagRecord>*, LagRecord*, LagRecord*, bool)
 T CLagCompensationManager::ClearHistory()
 T CLagCompensationManager::FinishLagCompensation(CBasePlayer*)
 T CLagCompensationManager::FrameUpdatePostEntityThink()
 T CLagCompensationManager::LevelShutdownPostEntity()
 T CLagCompensationManager::RecordDataIntoTrack(CBaseEntity*, CUtlFixedLinkedList<LagRecord>*, bool)
 T CLagCompensationManager::RemoveAdditionalEntity(CBaseEntity*)
 T CLagCompensationManager::RestoreEntityFromRecords(CBaseEntity*, LagRecord*, LagRecord*, bool)
 T CLagCompensationManager::Shutdown()
 T CLagCompensationManager::StartLagCompensation(CBasePlayer*, LagCompensationType, Vector const&, QAngle const&, float)
 T CLagCompensationManager::~CLagCompensationManager()
 T CLaserCatcher::Activate()
 T CLaserCatcher::AnimateThink()
 T CLaserCatcher::CLaserCatcher()
 T CLaserCatcher::CreateHelperEntities()
 T CLaserCatcher::CreateVPhysics()
 T CLaserCatcher::GetCatcherModelName()
 T CLaserCatcher::GetDataDescMap()
 T CLaserCatcher::IsTerminalPoint()
 T CLaserCatcher::OnPowered()
 T CLaserCatcher::OnRestore()
 T CLaserCatcher::OnUnPowered()
 T CLaserCatcher::PoweringDown()
 T CLaserCatcher::PoweringUp()
 T CLaserCatcher::Precache()
 T CLaserCatcher::Spawn()
 T CLaserCatcher::SpinDown(float)
 T CLaserCatcher::SpinUp(float)
 T CLaserCatcher::UpdateOnRemove()
 T CLaserCatcher::~CLaserCatcher()
 T CLaserRelay::GetCatcherModelName()
 T CLaserRelay::GetDataDescMap()
 T CLaserRelay::IsTerminalPoint()
 T CLaserRelay::~CLaserRelay()
 T CLevelPlacardDisplay::Disable()
 T CLevelPlacardDisplay::Enable()
 T CLevelPlacardDisplay::GetDataDescMap()
 T CLevelPlacardDisplay::GetServerClass()
 T CLevelPlacardDisplay::InputDisable(inputdata_t&)
 T CLevelPlacardDisplay::InputEnable(inputdata_t&)
 T CLevelPlacardDisplay::InputSetDisplayText(inputdata_t&)
 T CLevelPlacardDisplay::KeyValue(char const*, char const*)
 T CLevelPlacardDisplay::OnRestore()
 T CLevelPlacardDisplay::Precache()
 T CLevelPlacardDisplay::RestoreControlPanels()
 T CLevelPlacardDisplay::ScreenVisible(bool)
 T CLevelPlacardDisplay::SetTransmit(CCheckTransmitInfo*, bool)
 T CLevelPlacardDisplay::Spawn()
 T CLevelPlacardDisplay::SpawnControlPanels()
 T CLevelPlacardDisplay::UpdateTransmitState()
 T CLevelPlacardDisplay::YouForgotToImplementOrDeclareServerClass()
 T CLevelPlacardDisplay::~CLevelPlacardDisplay()
 T CLight::FadeThink()
 T CLight::GetDataDescMap()
 T CLight::InputFadeToPattern(inputdata_t&)
 T CLight::InputSetPattern(inputdata_t&)
 T CLight::InputToggle(inputdata_t&)
 T CLight::InputTurnOff(inputdata_t&)
 T CLight::InputTurnOn(inputdata_t&)
 T CLight::KeyValue(char const*, char const*)
 T CLight::Spawn()
 T CLight::TurnOff()
 T CLight::TurnOn()
 T CLight::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CLight::~CLight()
 T CLightGlow::Activate()
 T CLightGlow::CLightGlow()
 T CLightGlow::GetDataDescMap()
 T CLightGlow::GetServerClass()
 T CLightGlow::InputColor(inputdata_t&)
 T CLightGlow::Spawn()
 T CLightGlow::UpdateTransmitState()
 T CLightGlow::YouForgotToImplementOrDeclareServerClass()
 T CLightGlow::~CLightGlow()
 T CLinkedPortalDoor::Activate()
 T CLinkedPortalDoor::Close(CBaseEntity*)
 T CLinkedPortalDoor::CloseInternal(CBaseEntity*)
 T CLinkedPortalDoor::Destroy()
 T CLinkedPortalDoor::DisableLinkage()
 T CLinkedPortalDoor::DisableLinkageThink()
 T CLinkedPortalDoor::DrawDebugTextOverlays()
 T CLinkedPortalDoor::EnableLinkage()
 T CLinkedPortalDoor::GetDataDescMap()
 T CLinkedPortalDoor::GetPartnername()
 T CLinkedPortalDoor::GetScriptDesc()
 T CLinkedPortalDoor::InputClose(inputdata_t&)
 T CLinkedPortalDoor::InputOpen(inputdata_t&)
 T CLinkedPortalDoor::InputSetPartner(inputdata_t&)
 T CLinkedPortalDoor::IsClosed()
 T CLinkedPortalDoor::IsOpen()
 T CLinkedPortalDoor::NotifyPortalEvent(PortalEvent_t, CPortal_Base2D*)
 T CLinkedPortalDoor::OffsetPosition() const
 T CLinkedPortalDoor::OnClose()
 T CLinkedPortalDoor::OnOpen()
 T CLinkedPortalDoor::Open(CBaseEntity*)
 T CLinkedPortalDoor::OpenInternal(CBaseEntity*)
 T CLinkedPortalDoor::ScriptGetPartnerInstanceHandle()
 T CLinkedPortalDoor::SetPartner(CLinkedPortalDoor*)
 T CLinkedPortalDoor::SetPartnerByName(string_t)
 T CLinkedPortalDoor::SetTransmit(CCheckTransmitInfo*, bool)
 T CLinkedPortalDoor::Spawn()
 T CLinkedPortalDoor::UpdateOnRemove()
 T CLinkedPortalDoor::~CLinkedPortalDoor()
 T CLogicAchievement::GetDataDescMap()
 T CLogicAchievement::InputDisable(inputdata_t&)
 T CLogicAchievement::InputEnable(inputdata_t&)
 T CLogicAchievement::InputFireEvent(inputdata_t&)
 T CLogicAchievement::InputSetTargetPlayer(inputdata_t&)
 T CLogicAchievement::InputToggle(inputdata_t&)
 T CLogicAchievement::~CLogicAchievement()
 T CLogicActiveAutosave::GetDataDescMap()
 T CLogicActiveAutosave::InputDisable(inputdata_t&)
 T CLogicActiveAutosave::InputEnable(inputdata_t&)
 T CLogicActiveAutosave::SaveThink()
 T CLogicActiveAutosave::~CLogicActiveAutosave()
 T CLogicAuto::Activate()
 T CLogicAuto::GetDataDescMap()
 T CLogicAuto::ObjectCaps()
 T CLogicAuto::Think()
 T CLogicAuto::~CLogicAuto()
 T CLogicAutosave::GetDataDescMap()
 T CLogicAutosave::InputSave(inputdata_t&)
 T CLogicAutosave::InputSaveDangerous(inputdata_t&)
 T CLogicAutosave::InputSetMinHitpointsThreshold(inputdata_t&)
 T CLogicAutosave::~CLogicAutosave()
 T CLogicBranch::AddLogicBranchListener(CBaseEntity*)
 T CLogicBranch::DrawDebugTextOverlays()
 T CLogicBranch::GetDataDescMap()
 T CLogicBranch::InputSetValue(inputdata_t&)
 T CLogicBranch::InputSetValueTest(inputdata_t&)
 T CLogicBranch::InputTest(inputdata_t&)
 T CLogicBranch::InputToggle(inputdata_t&)
 T CLogicBranch::InputToggleTest(inputdata_t&)
 T CLogicBranch::UpdateOnRemove()
 T CLogicBranch::UpdateValue(bool, CBaseEntity*, CLogicBranch::LogicBranchFire_t)
 T CLogicBranch::~CLogicBranch()
 T CLogicBranchList::Activate()
 T CLogicBranchList::DoTest(CBaseEntity*)
 T CLogicBranchList::DrawDebugTextOverlays()
 T CLogicBranchList::GetDataDescMap()
 T CLogicBranchList::InputTest(inputdata_t&)
 T CLogicBranchList::Input_OnLogicBranchChanged(inputdata_t&)
 T CLogicBranchList::Input_OnLogicBranchRemoved(inputdata_t&)
 T CLogicBranchList::Spawn()
 T CLogicBranchList::~CLogicBranchList()
 T CLogicCase::GetDataDescMap()
 T CLogicCase::InputPickRandom(inputdata_t&)
 T CLogicCase::InputPickRandomShuffle(inputdata_t&)
 T CLogicCase::InputValue(inputdata_t&)
 T CLogicCase::Spawn()
 T CLogicCase::~CLogicCase()
 T CLogicCollisionPair::Activate()
 T CLogicCollisionPair::EnableCollisions(bool)
 T CLogicCollisionPair::GetDataDescMap()
 T CLogicCollisionPair::InputDisableCollisions(inputdata_t&)
 T CLogicCollisionPair::InputEnableCollisions(inputdata_t&)
 T CLogicCollisionPair::~CLogicCollisionPair()
 T CLogicCompare::DoCompare(CBaseEntity*, float)
 T CLogicCompare::DrawDebugTextOverlays()
 T CLogicCompare::GetDataDescMap()
 T CLogicCompare::InputCompare(inputdata_t&)
 T CLogicCompare::InputSetCompareValue(inputdata_t&)
 T CLogicCompare::InputSetValue(inputdata_t&)
 T CLogicCompare::InputSetValueCompare(inputdata_t&)
 T CLogicCompare::~CLogicCompare()
 T CLogicCompareInteger::GetDataDescMap()
 T CLogicCompareInteger::InputCompareValues(inputdata_t&)
 T CLogicCompareInteger::InputValue(inputdata_t&)
 T CLogicCompareInteger::~CLogicCompareInteger()
 T CLogicCoopManager::CompareValues()
 T CLogicCoopManager::GetDataDescMap()
 T CLogicCoopManager::InputSetStateAFalse(inputdata_t&)
 T CLogicCoopManager::InputSetStateATrue(inputdata_t&)
 T CLogicCoopManager::InputSetStateBFalse(inputdata_t&)
 T CLogicCoopManager::InputSetStateBTrue(inputdata_t&)
 T CLogicCoopManager::InputToggleStateA(inputdata_t&)
 T CLogicCoopManager::InputToggleStateB(inputdata_t&)
 T CLogicCoopManager::~CLogicCoopManager()
 T CLogicEventListener::FireGameEvent(IGameEvent*)
 T CLogicEventListener::GetDataDescMap()
 T CLogicEventListener::InputDisable(inputdata_t&)
 T CLogicEventListener::InputEnable(inputdata_t&)
 T CLogicEventListener::Spawn()
 T CLogicEventListener::~CLogicEventListener()
 T CLogicLineToEntity::Activate()
 T CLogicLineToEntity::GetDataDescMap()
 T CLogicLineToEntity::Spawn()
 T CLogicLineToEntity::Think()
 T CLogicLineToEntity::~CLogicLineToEntity()
 T CLogicMeasureMovement::Activate()
 T CLogicMeasureMovement::GetDataDescMap()
 T CLogicMeasureMovement::InputDisable(inputdata_t&)
 T CLogicMeasureMovement::InputEnable(inputdata_t&)
 T CLogicMeasureMovement::InputSetMeasureReference(inputdata_t&)
 T CLogicMeasureMovement::InputSetMeasureTarget(inputdata_t&)
 T CLogicMeasureMovement::InputSetTarget(inputdata_t&)
 T CLogicMeasureMovement::InputSetTargetReference(inputdata_t&)
 T CLogicMeasureMovement::InputSetTargetScale(inputdata_t&)
 T CLogicMeasureMovement::MeasureThink()
 T CLogicMeasureMovement::SetMeasureTarget(char const*)
 T CLogicMeasureMovement::~CLogicMeasureMovement()
 T CLogicNavigation::Activate()
 T CLogicNavigation::GetDataDescMap()
 T CLogicNavigation::InputToggle(inputdata_t&)
 T CLogicNavigation::InputTurnOff(inputdata_t&)
 T CLogicNavigation::InputTurnOn(inputdata_t&)
 T CLogicNavigation::KeyValue(char const*, char const*)
 T CLogicNavigation::OnEntitySpawned(CBaseEntity*)
 T CLogicNavigation::UpdateOnRemove()
 T CLogicNavigation::UpdateProperty()
 T CLogicNavigation::~CLogicNavigation()
 T CLogicPlayMovie::GetDataDescMap()
 T CLogicPlayMovie::InputFadeAllMovies(inputdata_t&)
 T CLogicPlayMovie::InputMovieFinished(inputdata_t&)
 T CLogicPlayMovie::InputPlayLevelTransitionMovie(inputdata_t&)
 T CLogicPlayMovie::InputPlayMovie(inputdata_t&)
 T CLogicPlayMovie::InputPlayMovieForAllPlayers(inputdata_t&)
 T CLogicPlayMovie::Precache()
 T CLogicPlayMovie::Spawn()
 T CLogicPlayMovie::~CLogicPlayMovie()
 T CLogicPlayerProxy::Activate()
 T CLogicPlayerProxy::GetDataDescMap()
 T CLogicPlayerProxy::InputAddPotatosToPortalgun(inputdata_t&)
 T CLogicPlayerProxy::InputForcePhysicsGrabController(inputdata_t&)
 T CLogicPlayerProxy::InputForceVMGrabController(inputdata_t&)
 T CLogicPlayerProxy::InputPaintPlayerWithPortalPaint(inputdata_t&)
 T CLogicPlayerProxy::InputRemovePotatosFromPortalgun(inputdata_t&)
 T CLogicPlayerProxy::InputResetGrabControllerBehavior(inputdata_t&)
 T CLogicPlayerProxy::InputSetDropEnabled(inputdata_t&)
 T CLogicPlayerProxy::InputSetMotionBlurAmount(inputdata_t&)
 T CLogicPlayerProxy::PassesDamageFilter(CTakeDamageInfo const&)
 T CLogicPlayerProxy::~CLogicPlayerProxy()
 T CLogicPlayerViewFinder::GetDataDescMap()
 T CLogicPlayerViewFinder::InputHideViewFinder(inputdata_t&)
 T CLogicPlayerViewFinder::InputShowViewFinder(inputdata_t&)
 T CLogicPlayerViewFinder::~CLogicPlayerViewFinder()
 T CLogicRandomOutputs::Activate()
 T CLogicRandomOutputs::GetDataDescMap()
 T CLogicRandomOutputs::InputCancelPending(inputdata_t&)
 T CLogicRandomOutputs::InputDisable(inputdata_t&)
 T CLogicRandomOutputs::InputEnable(inputdata_t&)
 T CLogicRandomOutputs::InputEnableRefire(inputdata_t&)
 T CLogicRandomOutputs::InputToggle(inputdata_t&)
 T CLogicRandomOutputs::InputTrigger(inputdata_t&)
 T CLogicRandomOutputs::KeyValue(char const*, char const*)
 T CLogicRandomOutputs::Think()
 T CLogicRandomOutputs::~CLogicRandomOutputs()
 T CLogicRegisterActivator::GetDataDescMap()
 T CLogicRegisterActivator::InputDisable(inputdata_t&)
 T CLogicRegisterActivator::InputEnable(inputdata_t&)
 T CLogicRegisterActivator::InputFireRegisteredAsActivator1(inputdata_t&)
 T CLogicRegisterActivator::InputFireRegisteredAsActivator2(inputdata_t&)
 T CLogicRegisterActivator::InputFireRegisteredAsActivator3(inputdata_t&)
 T CLogicRegisterActivator::InputFireRegisteredAsActivator4(inputdata_t&)
 T CLogicRegisterActivator::InputRegisterEntity(inputdata_t&)
 T CLogicRegisterActivator::InputToggle(inputdata_t&)
 T CLogicRegisterActivator::~CLogicRegisterActivator()
 T CLogicRelay::Activate()
 T CLogicRelay::GetDataDescMap()
 T CLogicRelay::InputCancelPending(inputdata_t&)
 T CLogicRelay::InputDisable(inputdata_t&)
 T CLogicRelay::InputEnable(inputdata_t&)
 T CLogicRelay::InputEnableRefire(inputdata_t&)
 T CLogicRelay::InputToggle(inputdata_t&)
 T CLogicRelay::InputTrigger(inputdata_t&)
 T CLogicRelay::Think()
 T CLogicRelay::~CLogicRelay()
 T CLogicScript::GetDataDescMap()
 T CLogicScript::RunVScripts()
 T CLogicScript::~CLogicScript()
 T CLogicTimeScale::GetDataDescMap()
 T CLogicTimeScale::InputSetDesiredTimescale(inputdata_t&)
 T CLogicTimeScale::InputSetTimescaleBlendTime(inputdata_t&)
 T CLogicTimeScale::~CLogicTimeScale()
 T CLogicalEntity::KeyValue(char const*, char const*)
 T CMP_LobbyScreen::Disable()
 T CMP_LobbyScreen::Enable()
 T CMP_LobbyScreen::GetDataDescMap()
 T CMP_LobbyScreen::GetServerClass()
 T CMP_LobbyScreen::InputDisable(inputdata_t&)
 T CMP_LobbyScreen::InputEnable(inputdata_t&)
 T CMP_LobbyScreen::KeyValue(char const*, char const*)
 T CMP_LobbyScreen::OnRestore()
 T CMP_LobbyScreen::Precache()
 T CMP_LobbyScreen::RestoreControlPanels()
 T CMP_LobbyScreen::SetTransmit(CCheckTransmitInfo*, bool)
 T CMP_LobbyScreen::Spawn()
 T CMP_LobbyScreen::SpawnControlPanels()
 T CMP_LobbyScreen::UpdateTransmitState()
 T CMP_LobbyScreen::YouForgotToImplementOrDeclareServerClass()
 T CMP_LobbyScreen::~CMP_LobbyScreen()
 T CMapEntitySpawner::AddEntity(CBaseEntity*, char const*, int)
 T CMapEntitySpawner::CMapEntitySpawner()
 T CMapEntitySpawner::HandleTemplates()
 T CMapEntitySpawner::SpawnAndActivate(bool)
 T CMapEntitySpawner::~CMapEntitySpawner()
 T CMapLoadEntityFilter::CreateNextEntity(char const*)
 T CMapLoadEntityFilter::ShouldCreateEntity(char const*)
 T CMaterialModifyControl::CMaterialModifyControl()
 T CMaterialModifyControl::GetDataDescMap()
 T CMaterialModifyControl::GetServerClass()
 T CMaterialModifyControl::InputStartAnimSequence(inputdata_t&)
 T CMaterialModifyControl::InputStartFloatLerp(inputdata_t&)
 T CMaterialModifyControl::KeyValue(char const*, char const*)
 T CMaterialModifyControl::ObjectCaps()
 T CMaterialModifyControl::SetMaterialVar(inputdata_t&)
 T CMaterialModifyControl::SetMaterialVarToCurrentTime(inputdata_t&)
 T CMaterialModifyControl::ShouldTransmit(CCheckTransmitInfo const*)
 T CMaterialModifyControl::Spawn()
 T CMaterialModifyControl::UpdateTransmitState()
 T CMaterialModifyControl::YouForgotToImplementOrDeclareServerClass()
 T CMaterialModifyControl::~CMaterialModifyControl()
 T CMaterialReference::CMaterialReference(char const*, char const*, bool)
 T CMaterialReference::Init(char const*, char const*, bool)
 T CMaterialReference::~CMaterialReference()
 T CMathColorBlend::GetDataDescMap()
 T CMathColorBlend::InputValue(inputdata_t&)
 T CMathColorBlend::Spawn()
 T CMathColorBlend::~CMathColorBlend()
 T CMathCounter* _CreateEntityTemplate<CMathCounter>(CMathCounter*, char const*)
 T CMathCounter::DrawDebugTextOverlays()
 T CMathCounter::GetDataDescMap()
 T CMathCounter::InputAdd(inputdata_t&)
 T CMathCounter::InputDisable(inputdata_t&)
 T CMathCounter::InputDivide(inputdata_t&)
 T CMathCounter::InputEnable(inputdata_t&)
 T CMathCounter::InputGetValue(inputdata_t&)
 T CMathCounter::InputMultiply(inputdata_t&)
 T CMathCounter::InputSetHitMax(inputdata_t&)
 T CMathCounter::InputSetHitMin(inputdata_t&)
 T CMathCounter::InputSetMaxValueNoFire(inputdata_t&)
 T CMathCounter::InputSetMinValueNoFire(inputdata_t&)
 T CMathCounter::InputSetValue(inputdata_t&)
 T CMathCounter::InputSetValueNoFire(inputdata_t&)
 T CMathCounter::InputSubtract(inputdata_t&)
 T CMathCounter::KeyValue(char const*, char const*)
 T CMathCounter::Spawn()
 T CMathCounter::UpdateOutValue(CBaseEntity*, float)
 T CMathCounter::~CMathCounter()
 T CMathRemap::GetDataDescMap()
 T CMathRemap::InputDisable(inputdata_t&)
 T CMathRemap::InputEnable(inputdata_t&)
 T CMathRemap::InputValue(inputdata_t&)
 T CMathRemap::Spawn()
 T CMathRemap::~CMathRemap()
 T CMemberFunctor0<CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>*, void (CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor0<CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>*, void (CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T CMemberFunctor0<CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>*, void (CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor0<CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>*, void (CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T CMemberFunctor0<CPropCombineBall*, void (CPropCombineBall::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor0<CPropCombineBall*, void (CPropCombineBall::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T CMemberFunctor1<CAI_Navigator*, bool (CAI_Navigator::*)(Vector const&), Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor1<CAI_Navigator*, bool (CAI_Navigator::*)(Vector const&), Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor1()
 T CMemberFunctor1<CPortal_Base2D*, void (CPortal_Base2D::*)(CBaseEntity*), CBaseEntity*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor1<CPortal_Base2D*, void (CPortal_Base2D::*)(CBaseEntity*), CBaseEntity*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor1()
 T CMemberFunctor2<CAI_Navigator*, bool (CAI_Navigator::*)(AI_NavGoal_t const&, unsigned int), AI_NavGoal_t, unsigned int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor2<CAI_Navigator*, bool (CAI_Navigator::*)(AI_NavGoal_t const&, unsigned int), AI_NavGoal_t, unsigned int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor2()
 T CMemberFunctor3<CBreakableProp*, void (CBreakableProp::*)(Vector const&, Vector const&, QAngle const&), Vector, Vector, QAngle, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor3<CBreakableProp*, void (CBreakableProp::*)(Vector const&, Vector const&, QAngle const&), Vector, Vector, QAngle, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor3()
 T CMemberScriptBinding0<CBaseAnimating*, bool (CBaseAnimating::*)(), bool>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CBaseAnimating*, int (CBaseAnimating::*)(), int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CBaseEntity*, HSCRIPT__* (CBaseEntity::*)(), HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CBaseEntity*, Vector const& (CBaseEntity::*)(), Vector const&>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CBaseEntity*, bool (CBaseEntity::*)(), bool>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CBaseEntity*, char const* (CBaseEntity::*)(), char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CBaseEntity*, int (CBaseEntity::*)(), int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CBaseEntity*, void (CBaseEntity::*)(), void>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CBaseFlex*, HSCRIPT__* (CBaseFlex::*)(), HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CBasePlayer*, bool (CBasePlayer::*)(), bool>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CEnvEntityMaker*, void (CEnvEntityMaker::*)(), void>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CLinkedPortalDoor*, HSCRIPT__* (CLinkedPortalDoor::*)(), HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CLinkedPortalDoor*, char const* (CLinkedPortalDoor::*)(), char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CPortal_Player*, int (CPortal_Player::*)(), int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CPortal_Player*, void (CPortal_Player::*)(), void>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CPropLinkedPortalDoor*, HSCRIPT__* (CLinkedPortalDoor::*)(), HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CPropLinkedPortalDoor*, char const* (CLinkedPortalDoor::*)(), char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CSceneEntity*, bool (CSceneEntity::*)(), bool>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CSceneEntity*, float (CSceneEntity::*)(), float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(), HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CScriptKeyValues*, HSCRIPT__* (CScriptKeyValues::*)(), HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CScriptKeyValues*, void (CScriptKeyValues::*)(), void>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding0<CTriggerCamera*, int (CTriggerCamera::*)(), int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CBaseAnimating*, Vector const& (CBaseAnimating::*)(int), Vector const&, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CBaseAnimating*, int (CBaseAnimating::*)(char const*), int, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CBaseEntity*, void (CBaseEntity::*)(HSCRIPT__*), void, HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CBaseEntity*, void (CBaseEntity::*)(Vector const&), void, Vector const&>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CBaseEntity*, void (CBaseEntity::*)(char const*), void, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CBaseEntity*, void (CBaseEntity::*)(int), void, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CBaseFlex*, HSCRIPT__* (CBaseFlex::*)(int), HSCRIPT__*, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CEnvEntityMaker*, void (CEnvEntityMaker::*)(HSCRIPT__*), void, HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CEnvEntityMaker*, void (CEnvEntityMaker::*)(char const*), void, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CPlayerVoiceListener*, bool (CPlayerVoiceListener::*)(int), bool, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CPlayerVoiceListener*, float (CPlayerVoiceListener::*)(int), float, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CSceneEntity*, HSCRIPT__* (CSceneEntity::*)(char const*), HSCRIPT__*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CSceneEntity*, void (CSceneEntity::*)(int), void, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(HSCRIPT__*), HSCRIPT__*, HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(char const*), HSCRIPT__*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CScriptKeyValues*, HSCRIPT__* (CScriptKeyValues::*)(char const*), HSCRIPT__*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CScriptKeyValues*, bool (CScriptKeyValues::*)(char const*), bool, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CScriptKeyValues*, char const* (CScriptKeyValues::*)(char const*), char const*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CScriptKeyValues*, float (CScriptKeyValues::*)(char const*), float, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding1<CScriptKeyValues*, int (CScriptKeyValues::*)(char const*), int, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CBaseAnimating*, void (CBaseAnimating::*)(int, int), void, int, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CBaseEntity*, bool (CBaseEntity::*)(char const*, Vector const&), bool, char const*, Vector const&>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CBaseEntity*, bool (CBaseEntity::*)(char const*, char const*), bool, char const*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CBaseEntity*, bool (CBaseEntity::*)(char const*, float), bool, char const*, float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CBaseEntity*, bool (CBaseEntity::*)(char const*, int), bool, char const*, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CBaseEntity*, float (CBaseEntity::*)(char const*, char const*), float, char const*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CBaseEntity*, void (CBaseEntity::*)(Vector const&, Vector const&), void, Vector const&, Vector const&>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CBaseEntity*, void (CBaseEntity::*)(char const*, char const*), void, char const*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CEnvEntityMaker*, void (CEnvEntityMaker::*)(Vector const&, Vector const&), void, Vector const&, Vector const&>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CSceneEntity*, bool (CSceneEntity::*)(char const*, char const*), bool, char const*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(HSCRIPT__*, char const*), HSCRIPT__*, HSCRIPT__*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding2<CTriggerCamera*, void (CTriggerCamera::*)(int, float), void, int, float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding3<CBaseEntity*, void (CBaseEntity::*)(float, float, float), void, float, float, float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding3<CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(HSCRIPT__*, Vector const&, float), HSCRIPT__*, HSCRIPT__*, Vector const&, float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding3<CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(char const*, Vector const&, float), HSCRIPT__*, char const*, Vector const&, float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemberScriptBinding4<CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(HSCRIPT__*, char const*, Vector const&, float), HSCRIPT__*, HSCRIPT__*, char const*, Vector const&, float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CMemoryLog::LevelInitPostEntity()
 T CMemoryLog::~CMemoryLog()
 T CMemoryPoolMT::Alloc()
 T CMemoryPoolMT::Clear()
 T CMemoryStack::CMemoryStack()
 T CMemoryStack::CommitTo(unsigned char*)
 T CMemoryStack::FreeAll(bool)
 T CMemoryStack::Init(char const*, unsigned int, unsigned int, unsigned int, unsigned int)
 T CMemoryStack::~CMemoryStack()
 T CMesh::AllocateAndCopyMesh(int, float const*, int, unsigned int const*, int, CMeshVertexAttribute*, int)
 T CMesh::AllocateMesh(int, int, int, CMeshVertexAttribute*, int)
 T CMesh::CMesh()
 T CMesh::~CMesh()
 T CMessage::GetDataDescMap()
 T CMessage::InputShowMessage(inputdata_t&)
 T CMessage::Precache()
 T CMessage::Spawn()
 T CMessage::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CMessage::~CMessage()
 T CMessageEntity::Activate()
 T CMessageEntity::GetDataDescMap()
 T CMessageEntity::InputDisable(inputdata_t&)
 T CMessageEntity::InputEnable(inputdata_t&)
 T CMessageEntity::Spawn()
 T CMessageEntity::Think()
 T CMessageEntity::UpdateOnRemove()
 T CMessageEntity::~CMessageEntity()
 T CModelPrecacheSystem::LevelShutdownPreEntity()
 T CModelPrecacheSystem::~CModelPrecacheSystem()
 T CModelSoundsCache::BuildAnimationEventSoundList(CStudioHdr*, CUtlSortVector<int, CModelSoundsCacheListLess, CUtlVector<int, CUtlMemory<int, int> > >&)
 T CModelSoundsCache::CModelSoundsCache()
 T CModelSoundsCache::PrecacheSoundList()
 T CModelSoundsCache::Rebuild(char const*)
 T CModelSoundsCache::Restore(CUtlBuffer&)
 T CModelSoundsCache::Save(CUtlBuffer&)
 T CModelSoundsCacheSaver::LevelInitPostEntity()
 T CModelSoundsCacheSaver::LevelShutdownPostEntity()
 T CModelSoundsCacheSaver::~CModelSoundsCacheSaver()
 T CMomentaryRotButton::CreateVPhysics()
 T CMomentaryRotButton::Disable()
 T CMomentaryRotButton::DrawDebugTextOverlays()
 T CMomentaryRotButton::Enable()
 T CMomentaryRotButton::GetDataDescMap()
 T CMomentaryRotButton::InputDisable(inputdata_t&)
 T CMomentaryRotButton::InputDisableUpdateTarget(inputdata_t&)
 T CMomentaryRotButton::InputEnable(inputdata_t&)
 T CMomentaryRotButton::InputEnableUpdateTarget(inputdata_t&)
 T CMomentaryRotButton::InputSetPosition(inputdata_t&)
 T CMomentaryRotButton::InputSetPositionImmediately(inputdata_t&)
 T CMomentaryRotButton::Lock()
 T CMomentaryRotButton::ObjectCaps()
 T CMomentaryRotButton::PlaySound()
 T CMomentaryRotButton::ReturnMoveDone()
 T CMomentaryRotButton::SetPositionMoveDone()
 T CMomentaryRotButton::Spawn()
 T CMomentaryRotButton::Unlock()
 T CMomentaryRotButton::UpdateSelf(float, bool)
 T CMomentaryRotButton::UpdateThink()
 T CMomentaryRotButton::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CMomentaryRotButton::UseMoveDone()
 T CMomentaryRotButton::~CMomentaryRotButton()
 T CMortarShell::Create(Vector const&, Vector const&, Vector const&, float, float, string_t)
 T CMortarShell::FadeThink()
 T CMortarShell::FixUpImpactPoint(Vector const&, Vector const&, Vector*, Vector*)
 T CMortarShell::FlyThink()
 T CMortarShell::GetDataDescMap()
 T CMortarShell::GetServerClass()
 T CMortarShell::Impact()
 T CMortarShell::Precache()
 T CMortarShell::Spawn()
 T CMortarShell::UpdateTransmitState()
 T CMortarShell::Warn()
 T CMortarShell::YouForgotToImplementOrDeclareServerClass()
 T CMortarShell::~CMortarShell()
 T CMotorController::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CMoveHelperServer::AddToTouched(CGameTrace const&, Vector const&)
 T CMoveHelperServer::Con_NPrintf(int, char const*, ...)
 T CMoveHelperServer::GetName(CBaseHandle) const
 T CMoveHelperServer::GetSurfaceProps()
 T CMoveHelperServer::IsWorldEntity(CBaseHandle const&)
 T CMoveHelperServer::PlaybackEventFull(int, int, unsigned short, float, Vector&, Vector&, float, float, int, int, int, int)
 T CMoveHelperServer::PlayerFallingDamage()
 T CMoveHelperServer::PlayerSetAnimation(PLAYER_ANIM)
 T CMoveHelperServer::ProcessImpacts()
 T CMoveHelperServer::ResetTouchList()
 T CMoveHelperServer::SetGroundNormal(Vector const&)
 T CMoveHelperServer::SetHost(CBaseEntity*)
 T CMoveHelperServer::StartSound(Vector const&, char const*)
 T CMoveHelperServer::StartSound(Vector const&, int, char const*, float, soundlevel_t, int, int)
 T CMoveHelperServer::~CMoveHelperServer()
 T CMoveableCamera::FollowTarget()
 T CMoveableCamera::GetEndPos(CHandle<CBaseEntity>)
 T CMoveableCamera::Move()
 T CMoveableCamera::Spawn()
 T CMoveableCamera::StartMovement()
 T CMovementSpeedMod::GetDataDescMap()
 T CMovementSpeedMod::InputSpeedMod(inputdata_t&)
 T CMovementSpeedMod::~CMovementSpeedMod()
 T CMovieDisplay::Disable()
 T CMovieDisplay::GetDataDescMap()
 T CMovieDisplay::GetServerClass()
 T CMovieDisplay::InputDisable(inputdata_t&)
 T CMovieDisplay::InputEnable(inputdata_t&)
 T CMovieDisplay::InputSetDisplayText(inputdata_t&)
 T CMovieDisplay::InputSetMovie(inputdata_t&)
 T CMovieDisplay::InputSetUMax(inputdata_t&)
 T CMovieDisplay::InputSetUMin(inputdata_t&)
 T CMovieDisplay::InputSetUseCustomUVs(inputdata_t&)
 T CMovieDisplay::InputSetVMax(inputdata_t&)
 T CMovieDisplay::InputSetVMin(inputdata_t&)
 T CMovieDisplay::InputTakeOverAsMaster(inputdata_t&)
 T CMovieDisplay::KeyValue(char const*, char const*)
 T CMovieDisplay::OnRestore()
 T CMovieDisplay::Precache()
 T CMovieDisplay::RestoreControlPanels()
 T CMovieDisplay::ScreenVisible(bool)
 T CMovieDisplay::SetTransmit(CCheckTransmitInfo*, bool)
 T CMovieDisplay::Spawn()
 T CMovieDisplay::SpawnControlPanels()
 T CMovieDisplay::UpdateTransmitState()
 T CMovieDisplay::YouForgotToImplementOrDeclareServerClass()
 T CMovieDisplay::~CMovieDisplay()
 T CMsgAMAddFreeLicense::ByteSize() const
 T CMsgAMAddFreeLicense::Clear()
 T CMsgAMAddFreeLicense::GetCachedSize() const
 T CMsgAMAddFreeLicense::GetMetadata() const
 T CMsgAMAddFreeLicense::IsInitialized() const
 T CMsgAMAddFreeLicense::MergeFrom(CMsgAMAddFreeLicense const&)
 T CMsgAMAddFreeLicense::New() const
 T CMsgAMAddFreeLicense::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMAddFreeLicense::SetCachedSize(int) const
 T CMsgAMAddFreeLicense::~CMsgAMAddFreeLicense()
 T CMsgAMAddFreeLicenseResponse::ByteSize() const
 T CMsgAMAddFreeLicenseResponse::Clear()
 T CMsgAMAddFreeLicenseResponse::GetCachedSize() const
 T CMsgAMAddFreeLicenseResponse::GetMetadata() const
 T CMsgAMAddFreeLicenseResponse::IsInitialized() const
 T CMsgAMAddFreeLicenseResponse::MergeFrom(CMsgAMAddFreeLicenseResponse const&)
 T CMsgAMAddFreeLicenseResponse::New() const
 T CMsgAMAddFreeLicenseResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMAddFreeLicenseResponse::SetCachedSize(int) const
 T CMsgAMAddFreeLicenseResponse::~CMsgAMAddFreeLicenseResponse()
 T CMsgAMFindAccounts::ByteSize() const
 T CMsgAMFindAccounts::Clear()
 T CMsgAMFindAccounts::GetCachedSize() const
 T CMsgAMFindAccounts::GetMetadata() const
 T CMsgAMFindAccounts::IsInitialized() const
 T CMsgAMFindAccounts::MergeFrom(CMsgAMFindAccounts const&)
 T CMsgAMFindAccounts::New() const
 T CMsgAMFindAccounts::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMFindAccounts::SetCachedSize(int) const
 T CMsgAMFindAccounts::~CMsgAMFindAccounts()
 T CMsgAMFindAccountsResponse::ByteSize() const
 T CMsgAMFindAccountsResponse::Clear()
 T CMsgAMFindAccountsResponse::GetCachedSize() const
 T CMsgAMFindAccountsResponse::GetMetadata() const
 T CMsgAMFindAccountsResponse::IsInitialized() const
 T CMsgAMFindAccountsResponse::MergeFrom(CMsgAMFindAccountsResponse const&)
 T CMsgAMFindAccountsResponse::New() const
 T CMsgAMFindAccountsResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMFindAccountsResponse::SetCachedSize(int) const
 T CMsgAMFindAccountsResponse::~CMsgAMFindAccountsResponse()
 T CMsgAMGetLicenses::ByteSize() const
 T CMsgAMGetLicenses::Clear()
 T CMsgAMGetLicenses::GetCachedSize() const
 T CMsgAMGetLicenses::GetMetadata() const
 T CMsgAMGetLicenses::IsInitialized() const
 T CMsgAMGetLicenses::MergeFrom(CMsgAMGetLicenses const&)
 T CMsgAMGetLicenses::New() const
 T CMsgAMGetLicenses::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMGetLicenses::SetCachedSize(int) const
 T CMsgAMGetLicenses::~CMsgAMGetLicenses()
 T CMsgAMGetLicensesResponse::ByteSize() const
 T CMsgAMGetLicensesResponse::Clear()
 T CMsgAMGetLicensesResponse::GetCachedSize() const
 T CMsgAMGetLicensesResponse::GetMetadata() const
 T CMsgAMGetLicensesResponse::IsInitialized() const
 T CMsgAMGetLicensesResponse::MergeFrom(CMsgAMGetLicensesResponse const&)
 T CMsgAMGetLicensesResponse::New() const
 T CMsgAMGetLicensesResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMGetLicensesResponse::SetCachedSize(int) const
 T CMsgAMGetLicensesResponse::~CMsgAMGetLicensesResponse()
 T CMsgAMGetUserGameStats::ByteSize() const
 T CMsgAMGetUserGameStats::Clear()
 T CMsgAMGetUserGameStats::GetCachedSize() const
 T CMsgAMGetUserGameStats::GetMetadata() const
 T CMsgAMGetUserGameStats::IsInitialized() const
 T CMsgAMGetUserGameStats::MergeFrom(CMsgAMGetUserGameStats const&)
 T CMsgAMGetUserGameStats::New() const
 T CMsgAMGetUserGameStats::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMGetUserGameStats::SetCachedSize(int) const
 T CMsgAMGetUserGameStats::~CMsgAMGetUserGameStats()
 T CMsgAMGetUserGameStatsResponse::ByteSize() const
 T CMsgAMGetUserGameStatsResponse::Clear()
 T CMsgAMGetUserGameStatsResponse::GetCachedSize() const
 T CMsgAMGetUserGameStatsResponse::GetMetadata() const
 T CMsgAMGetUserGameStatsResponse::IsInitialized() const
 T CMsgAMGetUserGameStatsResponse::MergeFrom(CMsgAMGetUserGameStatsResponse const&)
 T CMsgAMGetUserGameStatsResponse::New() const
 T CMsgAMGetUserGameStatsResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMGetUserGameStatsResponse::SetCachedSize(int) const
 T CMsgAMGetUserGameStatsResponse::~CMsgAMGetUserGameStatsResponse()
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::ByteSize() const
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::Clear()
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::GetCachedSize() const
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::GetMetadata() const
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::IsInitialized() const
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::MergeFrom(CMsgAMGetUserGameStatsResponse_Achievement_Blocks const&)
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::New() const
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::SetCachedSize(int) const
 T CMsgAMGetUserGameStatsResponse_Achievement_Blocks::~CMsgAMGetUserGameStatsResponse_Achievement_Blocks()
 T CMsgAMGetUserGameStatsResponse_Stats::ByteSize() const
 T CMsgAMGetUserGameStatsResponse_Stats::Clear()
 T CMsgAMGetUserGameStatsResponse_Stats::GetCachedSize() const
 T CMsgAMGetUserGameStatsResponse_Stats::GetMetadata() const
 T CMsgAMGetUserGameStatsResponse_Stats::IsInitialized() const
 T CMsgAMGetUserGameStatsResponse_Stats::MergeFrom(CMsgAMGetUserGameStatsResponse_Stats const&)
 T CMsgAMGetUserGameStatsResponse_Stats::New() const
 T CMsgAMGetUserGameStatsResponse_Stats::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMGetUserGameStatsResponse_Stats::SetCachedSize(int) const
 T CMsgAMGetUserGameStatsResponse_Stats::~CMsgAMGetUserGameStatsResponse_Stats()
 T CMsgAMSendEmail::ByteSize() const
 T CMsgAMSendEmail::Clear()
 T CMsgAMSendEmail::GetCachedSize() const
 T CMsgAMSendEmail::GetMetadata() const
 T CMsgAMSendEmail::IsInitialized() const
 T CMsgAMSendEmail::MergeFrom(CMsgAMSendEmail const&)
 T CMsgAMSendEmail::New() const
 T CMsgAMSendEmail::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMSendEmail::SetCachedSize(int) const
 T CMsgAMSendEmail::~CMsgAMSendEmail()
 T CMsgAMSendEmailResponse::ByteSize() const
 T CMsgAMSendEmailResponse::Clear()
 T CMsgAMSendEmailResponse::GetCachedSize() const
 T CMsgAMSendEmailResponse::GetMetadata() const
 T CMsgAMSendEmailResponse::IsInitialized() const
 T CMsgAMSendEmailResponse::MergeFrom(CMsgAMSendEmailResponse const&)
 T CMsgAMSendEmailResponse::New() const
 T CMsgAMSendEmailResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMSendEmailResponse::SetCachedSize(int) const
 T CMsgAMSendEmailResponse::~CMsgAMSendEmailResponse()
 T CMsgAMSendEmail_PersonaNameReplacementToken::ByteSize() const
 T CMsgAMSendEmail_PersonaNameReplacementToken::Clear()
 T CMsgAMSendEmail_PersonaNameReplacementToken::GetCachedSize() const
 T CMsgAMSendEmail_PersonaNameReplacementToken::GetMetadata() const
 T CMsgAMSendEmail_PersonaNameReplacementToken::IsInitialized() const
 T CMsgAMSendEmail_PersonaNameReplacementToken::MergeFrom(CMsgAMSendEmail_PersonaNameReplacementToken const&)
 T CMsgAMSendEmail_PersonaNameReplacementToken::New() const
 T CMsgAMSendEmail_PersonaNameReplacementToken::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMSendEmail_PersonaNameReplacementToken::SetCachedSize(int) const
 T CMsgAMSendEmail_PersonaNameReplacementToken::~CMsgAMSendEmail_PersonaNameReplacementToken()
 T CMsgAMSendEmail_ReplacementToken::ByteSize() const
 T CMsgAMSendEmail_ReplacementToken::Clear()
 T CMsgAMSendEmail_ReplacementToken::GetCachedSize() const
 T CMsgAMSendEmail_ReplacementToken::GetMetadata() const
 T CMsgAMSendEmail_ReplacementToken::IsInitialized() const
 T CMsgAMSendEmail_ReplacementToken::MergeFrom(CMsgAMSendEmail_ReplacementToken const&)
 T CMsgAMSendEmail_ReplacementToken::New() const
 T CMsgAMSendEmail_ReplacementToken::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAMSendEmail_ReplacementToken::SetCachedSize(int) const
 T CMsgAMSendEmail_ReplacementToken::SharedDtor()
 T CMsgAMSendEmail_ReplacementToken::~CMsgAMSendEmail_ReplacementToken()
 T CMsgAdjustItemEquippedState::ByteSize() const
 T CMsgAdjustItemEquippedState::Clear()
 T CMsgAdjustItemEquippedState::GetCachedSize() const
 T CMsgAdjustItemEquippedState::GetMetadata() const
 T CMsgAdjustItemEquippedState::IsInitialized() const
 T CMsgAdjustItemEquippedState::MergeFrom(CMsgAdjustItemEquippedState const&)
 T CMsgAdjustItemEquippedState::New() const
 T CMsgAdjustItemEquippedState::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgAdjustItemEquippedState::SetCachedSize(int) const
 T CMsgAdjustItemEquippedState::~CMsgAdjustItemEquippedState()
 T CMsgCommunityMapAddQueueHistoryEntry::ByteSize() const
 T CMsgCommunityMapAddQueueHistoryEntry::Clear()
 T CMsgCommunityMapAddQueueHistoryEntry::GetCachedSize() const
 T CMsgCommunityMapAddQueueHistoryEntry::GetMetadata() const
 T CMsgCommunityMapAddQueueHistoryEntry::IsInitialized() const
 T CMsgCommunityMapAddQueueHistoryEntry::MergeFrom(CMsgCommunityMapAddQueueHistoryEntry const&)
 T CMsgCommunityMapAddQueueHistoryEntry::New() const
 T CMsgCommunityMapAddQueueHistoryEntry::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgCommunityMapAddQueueHistoryEntry::SetCachedSize(int) const
 T CMsgCommunityMapAddQueueHistoryEntry::~CMsgCommunityMapAddQueueHistoryEntry()
 T CMsgCommunityMapItemVoteSummary::ByteSize() const
 T CMsgCommunityMapItemVoteSummary::Clear()
 T CMsgCommunityMapItemVoteSummary::GetCachedSize() const
 T CMsgCommunityMapItemVoteSummary::GetMetadata() const
 T CMsgCommunityMapItemVoteSummary::IsInitialized() const
 T CMsgCommunityMapItemVoteSummary::MergeFrom(CMsgCommunityMapItemVoteSummary const&)
 T CMsgCommunityMapItemVoteSummary::New() const
 T CMsgCommunityMapItemVoteSummary::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgCommunityMapItemVoteSummary::SetCachedSize(int) const
 T CMsgCommunityMapItemVoteSummary::~CMsgCommunityMapItemVoteSummary()
 T CMsgCommunityMapItemVoteSummaryResponse::ByteSize() const
 T CMsgCommunityMapItemVoteSummaryResponse::Clear()
 T CMsgCommunityMapItemVoteSummaryResponse::GetCachedSize() const
 T CMsgCommunityMapItemVoteSummaryResponse::GetMetadata() const
 T CMsgCommunityMapItemVoteSummaryResponse::IsInitialized() const
 T CMsgCommunityMapItemVoteSummaryResponse::MergeFrom(CMsgCommunityMapItemVoteSummaryResponse const&)
 T CMsgCommunityMapItemVoteSummaryResponse::New() const
 T CMsgCommunityMapItemVoteSummaryResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgCommunityMapItemVoteSummaryResponse::SetCachedSize(int) const
 T CMsgCommunityMapItemVoteSummaryResponse::~CMsgCommunityMapItemVoteSummaryResponse()
 T CMsgConVarValue::ByteSize() const
 T CMsgConVarValue::CMsgConVarValue()
 T CMsgConVarValue::Clear()
 T CMsgConVarValue::GetCachedSize() const
 T CMsgConVarValue::GetMetadata() const
 T CMsgConVarValue::IsInitialized() const
 T CMsgConVarValue::MergeFrom(CMsgConVarValue const&)
 T CMsgConVarValue::New() const
 T CMsgConVarValue::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgConVarValue::SetCachedSize(int) const
 T CMsgConVarValue::SharedDtor()
 T CMsgConVarValue::default_instance()
 T CMsgConVarValue::~CMsgConVarValue()
 T CMsgDevDebugRollLootRequest::ByteSize() const
 T CMsgDevDebugRollLootRequest::Clear()
 T CMsgDevDebugRollLootRequest::GetCachedSize() const
 T CMsgDevDebugRollLootRequest::GetMetadata() const
 T CMsgDevDebugRollLootRequest::IsInitialized() const
 T CMsgDevDebugRollLootRequest::MergeFrom(CMsgDevDebugRollLootRequest const&)
 T CMsgDevDebugRollLootRequest::New() const
 T CMsgDevDebugRollLootRequest::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgDevDebugRollLootRequest::SetCachedSize(int) const
 T CMsgDevDebugRollLootRequest::~CMsgDevDebugRollLootRequest()
 T CMsgDevNewItemRequest::ByteSize() const
 T CMsgDevNewItemRequest::Clear()
 T CMsgDevNewItemRequest::GetCachedSize() const
 T CMsgDevNewItemRequest::GetMetadata() const
 T CMsgDevNewItemRequest::IsInitialized() const
 T CMsgDevNewItemRequest::MergeFrom(CMsgDevNewItemRequest const&)
 T CMsgDevNewItemRequest::New() const
 T CMsgDevNewItemRequest::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgDevNewItemRequest::SetCachedSize(int) const
 T CMsgDevNewItemRequest::~CMsgDevNewItemRequest()
 T CMsgGCClientDisplayNotification::ByteSize() const
 T CMsgGCClientDisplayNotification::Clear()
 T CMsgGCClientDisplayNotification::GetCachedSize() const
 T CMsgGCClientDisplayNotification::GetMetadata() const
 T CMsgGCClientDisplayNotification::IsInitialized() const
 T CMsgGCClientDisplayNotification::MergeFrom(CMsgGCClientDisplayNotification const&)
 T CMsgGCClientDisplayNotification::New() const
 T CMsgGCClientDisplayNotification::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCClientDisplayNotification::SetCachedSize(int) const
 T CMsgGCClientDisplayNotification::SharedDtor()
 T CMsgGCClientDisplayNotification::~CMsgGCClientDisplayNotification()
 T CMsgGCError::ByteSize() const
 T CMsgGCError::Clear()
 T CMsgGCError::GetCachedSize() const
 T CMsgGCError::GetMetadata() const
 T CMsgGCError::IsInitialized() const
 T CMsgGCError::MergeFrom(CMsgGCError const&)
 T CMsgGCError::New() const
 T CMsgGCError::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCError::SetCachedSize(int) const
 T CMsgGCError::~CMsgGCError()
 T CMsgGCGetCommandList::ByteSize() const
 T CMsgGCGetCommandList::Clear()
 T CMsgGCGetCommandList::GetCachedSize() const
 T CMsgGCGetCommandList::GetMetadata() const
 T CMsgGCGetCommandList::IsInitialized() const
 T CMsgGCGetCommandList::MergeFrom(CMsgGCGetCommandList const&)
 T CMsgGCGetCommandList::New() const
 T CMsgGCGetCommandList::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCGetCommandList::SetCachedSize(int) const
 T CMsgGCGetCommandList::~CMsgGCGetCommandList()
 T CMsgGCGetCommandListResponse::ByteSize() const
 T CMsgGCGetCommandListResponse::Clear()
 T CMsgGCGetCommandListResponse::GetCachedSize() const
 T CMsgGCGetCommandListResponse::GetMetadata() const
 T CMsgGCGetCommandListResponse::IsInitialized() const
 T CMsgGCGetCommandListResponse::MergeFrom(CMsgGCGetCommandListResponse const&)
 T CMsgGCGetCommandListResponse::New() const
 T CMsgGCGetCommandListResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCGetCommandListResponse::SetCachedSize(int) const
 T CMsgGCGetCommandListResponse::~CMsgGCGetCommandListResponse()
 T CMsgGCGetEmailTemplate::ByteSize() const
 T CMsgGCGetEmailTemplate::Clear()
 T CMsgGCGetEmailTemplate::GetCachedSize() const
 T CMsgGCGetEmailTemplate::GetMetadata() const
 T CMsgGCGetEmailTemplate::IsInitialized() const
 T CMsgGCGetEmailTemplate::MergeFrom(CMsgGCGetEmailTemplate const&)
 T CMsgGCGetEmailTemplate::New() const
 T CMsgGCGetEmailTemplate::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCGetEmailTemplate::SetCachedSize(int) const
 T CMsgGCGetEmailTemplate::~CMsgGCGetEmailTemplate()
 T CMsgGCGetEmailTemplateResponse::ByteSize() const
 T CMsgGCGetEmailTemplateResponse::Clear()
 T CMsgGCGetEmailTemplateResponse::GetCachedSize() const
 T CMsgGCGetEmailTemplateResponse::GetMetadata() const
 T CMsgGCGetEmailTemplateResponse::IsInitialized() const
 T CMsgGCGetEmailTemplateResponse::MergeFrom(CMsgGCGetEmailTemplateResponse const&)
 T CMsgGCGetEmailTemplateResponse::New() const
 T CMsgGCGetEmailTemplateResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCGetEmailTemplateResponse::SetCachedSize(int) const
 T CMsgGCGetEmailTemplateResponse::~CMsgGCGetEmailTemplateResponse()
 T CMsgGCNameItemNotification::ByteSize() const
 T CMsgGCNameItemNotification::Clear()
 T CMsgGCNameItemNotification::GetCachedSize() const
 T CMsgGCNameItemNotification::GetMetadata() const
 T CMsgGCNameItemNotification::IsInitialized() const
 T CMsgGCNameItemNotification::MergeFrom(CMsgGCNameItemNotification const&)
 T CMsgGCNameItemNotification::New() const
 T CMsgGCNameItemNotification::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCNameItemNotification::SetCachedSize(int) const
 T CMsgGCNameItemNotification::~CMsgGCNameItemNotification()
 T CMsgGCReportAbuse::ByteSize() const
 T CMsgGCReportAbuse::Clear()
 T CMsgGCReportAbuse::GetCachedSize() const
 T CMsgGCReportAbuse::GetMetadata() const
 T CMsgGCReportAbuse::IsInitialized() const
 T CMsgGCReportAbuse::MergeFrom(CMsgGCReportAbuse const&)
 T CMsgGCReportAbuse::New() const
 T CMsgGCReportAbuse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCReportAbuse::SetCachedSize(int) const
 T CMsgGCReportAbuse::~CMsgGCReportAbuse()
 T CMsgGCReportAbuseResponse::ByteSize() const
 T CMsgGCReportAbuseResponse::Clear()
 T CMsgGCReportAbuseResponse::GetCachedSize() const
 T CMsgGCReportAbuseResponse::GetMetadata() const
 T CMsgGCReportAbuseResponse::IsInitialized() const
 T CMsgGCReportAbuseResponse::MergeFrom(CMsgGCReportAbuseResponse const&)
 T CMsgGCReportAbuseResponse::New() const
 T CMsgGCReportAbuseResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCReportAbuseResponse::SetCachedSize(int) const
 T CMsgGCReportAbuseResponse::~CMsgGCReportAbuseResponse()
 T CMsgGCStorePurchaseInit::ByteSize() const
 T CMsgGCStorePurchaseInit::Clear()
 T CMsgGCStorePurchaseInit::GetCachedSize() const
 T CMsgGCStorePurchaseInit::GetMetadata() const
 T CMsgGCStorePurchaseInit::IsInitialized() const
 T CMsgGCStorePurchaseInit::MergeFrom(CMsgGCStorePurchaseInit const&)
 T CMsgGCStorePurchaseInit::New() const
 T CMsgGCStorePurchaseInit::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCStorePurchaseInit::SetCachedSize(int) const
 T CMsgGCStorePurchaseInit::~CMsgGCStorePurchaseInit()
 T CMsgGCStorePurchaseInitResponse::ByteSize() const
 T CMsgGCStorePurchaseInitResponse::Clear()
 T CMsgGCStorePurchaseInitResponse::GetCachedSize() const
 T CMsgGCStorePurchaseInitResponse::GetMetadata() const
 T CMsgGCStorePurchaseInitResponse::IsInitialized() const
 T CMsgGCStorePurchaseInitResponse::MergeFrom(CMsgGCStorePurchaseInitResponse const&)
 T CMsgGCStorePurchaseInitResponse::New() const
 T CMsgGCStorePurchaseInitResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGCStorePurchaseInitResponse::SetCachedSize(int) const
 T CMsgGCStorePurchaseInitResponse::~CMsgGCStorePurchaseInitResponse()
 T CMsgGameServerInfo::ByteSize() const
 T CMsgGameServerInfo::Clear()
 T CMsgGameServerInfo::GetCachedSize() const
 T CMsgGameServerInfo::GetMetadata() const
 T CMsgGameServerInfo::IsInitialized() const
 T CMsgGameServerInfo::MergeFrom(CMsgGameServerInfo const&)
 T CMsgGameServerInfo::New() const
 T CMsgGameServerInfo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgGameServerInfo::SetCachedSize(int) const
 T CMsgGameServerInfo::~CMsgGameServerInfo()
 T CMsgHttpRequest::ByteSize() const
 T CMsgHttpRequest::Clear()
 T CMsgHttpRequest::GetCachedSize() const
 T CMsgHttpRequest::GetMetadata() const
 T CMsgHttpRequest::IsInitialized() const
 T CMsgHttpRequest::MergeFrom(CMsgHttpRequest const&)
 T CMsgHttpRequest::New() const
 T CMsgHttpRequest::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgHttpRequest::SetCachedSize(int) const
 T CMsgHttpRequest::SharedDtor()
 T CMsgHttpRequest::~CMsgHttpRequest()
 T CMsgHttpRequest_QueryParam::ByteSize() const
 T CMsgHttpRequest_QueryParam::Clear()
 T CMsgHttpRequest_QueryParam::GetCachedSize() const
 T CMsgHttpRequest_QueryParam::GetMetadata() const
 T CMsgHttpRequest_QueryParam::IsInitialized() const
 T CMsgHttpRequest_QueryParam::MergeFrom(CMsgHttpRequest_QueryParam const&)
 T CMsgHttpRequest_QueryParam::New() const
 T CMsgHttpRequest_QueryParam::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgHttpRequest_QueryParam::SetCachedSize(int) const
 T CMsgHttpRequest_QueryParam::SharedDtor()
 T CMsgHttpRequest_QueryParam::~CMsgHttpRequest_QueryParam()
 T CMsgHttpRequest_RequestHeader::ByteSize() const
 T CMsgHttpRequest_RequestHeader::Clear()
 T CMsgHttpRequest_RequestHeader::GetCachedSize() const
 T CMsgHttpRequest_RequestHeader::GetMetadata() const
 T CMsgHttpRequest_RequestHeader::IsInitialized() const
 T CMsgHttpRequest_RequestHeader::MergeFrom(CMsgHttpRequest_RequestHeader const&)
 T CMsgHttpRequest_RequestHeader::New() const
 T CMsgHttpRequest_RequestHeader::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgHttpRequest_RequestHeader::SetCachedSize(int) const
 T CMsgHttpRequest_RequestHeader::SharedDtor()
 T CMsgHttpRequest_RequestHeader::~CMsgHttpRequest_RequestHeader()
 T CMsgHttpResponse::ByteSize() const
 T CMsgHttpResponse::Clear()
 T CMsgHttpResponse::GetCachedSize() const
 T CMsgHttpResponse::GetMetadata() const
 T CMsgHttpResponse::IsInitialized() const
 T CMsgHttpResponse::MergeFrom(CMsgHttpResponse const&)
 T CMsgHttpResponse::New() const
 T CMsgHttpResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgHttpResponse::SetCachedSize(int) const
 T CMsgHttpResponse::~CMsgHttpResponse()
 T CMsgHttpResponse_ResponseHeader::ByteSize() const
 T CMsgHttpResponse_ResponseHeader::Clear()
 T CMsgHttpResponse_ResponseHeader::GetCachedSize() const
 T CMsgHttpResponse_ResponseHeader::GetMetadata() const
 T CMsgHttpResponse_ResponseHeader::IsInitialized() const
 T CMsgHttpResponse_ResponseHeader::MergeFrom(CMsgHttpResponse_ResponseHeader const&)
 T CMsgHttpResponse_ResponseHeader::New() const
 T CMsgHttpResponse_ResponseHeader::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgHttpResponse_ResponseHeader::SetCachedSize(int) const
 T CMsgHttpResponse_ResponseHeader::SharedDtor()
 T CMsgHttpResponse_ResponseHeader::~CMsgHttpResponse_ResponseHeader()
 T CMsgIncrementKillCountAttribute::ByteSize() const
 T CMsgIncrementKillCountAttribute::Clear()
 T CMsgIncrementKillCountAttribute::GetCachedSize() const
 T CMsgIncrementKillCountAttribute::GetMetadata() const
 T CMsgIncrementKillCountAttribute::IsInitialized() const
 T CMsgIncrementKillCountAttribute::MergeFrom(CMsgIncrementKillCountAttribute const&)
 T CMsgIncrementKillCountAttribute::New() const
 T CMsgIncrementKillCountAttribute::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgIncrementKillCountAttribute::SetCachedSize(int) const
 T CMsgIncrementKillCountAttribute::~CMsgIncrementKillCountAttribute()
 T CMsgInvitationCreated::ByteSize() const
 T CMsgInvitationCreated::Clear()
 T CMsgInvitationCreated::GetCachedSize() const
 T CMsgInvitationCreated::GetMetadata() const
 T CMsgInvitationCreated::IsInitialized() const
 T CMsgInvitationCreated::MergeFrom(CMsgInvitationCreated const&)
 T CMsgInvitationCreated::New() const
 T CMsgInvitationCreated::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgInvitationCreated::SetCachedSize(int) const
 T CMsgInvitationCreated::~CMsgInvitationCreated()
 T CMsgInviteToParty::ByteSize() const
 T CMsgInviteToParty::Clear()
 T CMsgInviteToParty::GetCachedSize() const
 T CMsgInviteToParty::GetMetadata() const
 T CMsgInviteToParty::IsInitialized() const
 T CMsgInviteToParty::MergeFrom(CMsgInviteToParty const&)
 T CMsgInviteToParty::New() const
 T CMsgInviteToParty::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgInviteToParty::SetCachedSize(int) const
 T CMsgInviteToParty::~CMsgInviteToParty()
 T CMsgItemAcknowledged::ByteSize() const
 T CMsgItemAcknowledged::Clear()
 T CMsgItemAcknowledged::GetCachedSize() const
 T CMsgItemAcknowledged::GetMetadata() const
 T CMsgItemAcknowledged::IsInitialized() const
 T CMsgItemAcknowledged::MergeFrom(CMsgItemAcknowledged const&)
 T CMsgItemAcknowledged::New() const
 T CMsgItemAcknowledged::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgItemAcknowledged::SetCachedSize(int) const
 T CMsgItemAcknowledged::~CMsgItemAcknowledged()
 T CMsgKickFromParty::ByteSize() const
 T CMsgKickFromParty::Clear()
 T CMsgKickFromParty::GetCachedSize() const
 T CMsgKickFromParty::GetMetadata() const
 T CMsgKickFromParty::IsInitialized() const
 T CMsgKickFromParty::MergeFrom(CMsgKickFromParty const&)
 T CMsgKickFromParty::New() const
 T CMsgKickFromParty::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgKickFromParty::SetCachedSize(int) const
 T CMsgKickFromParty::~CMsgKickFromParty()
 T CMsgLeaveParty::ByteSize() const
 T CMsgLeaveParty::Clear()
 T CMsgLeaveParty::GetCachedSize() const
 T CMsgLeaveParty::GetMetadata() const
 T CMsgLeaveParty::IsInitialized() const
 T CMsgLeaveParty::MergeFrom(CMsgLeaveParty const&)
 T CMsgLeaveParty::New() const
 T CMsgLeaveParty::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgLeaveParty::SetCachedSize(int) const
 T CMsgLeaveParty::~CMsgLeaveParty()
 T CMsgNotifyWatchdog::ByteSize() const
 T CMsgNotifyWatchdog::Clear()
 T CMsgNotifyWatchdog::GetCachedSize() const
 T CMsgNotifyWatchdog::GetMetadata() const
 T CMsgNotifyWatchdog::IsInitialized() const
 T CMsgNotifyWatchdog::MergeFrom(CMsgNotifyWatchdog const&)
 T CMsgNotifyWatchdog::New() const
 T CMsgNotifyWatchdog::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgNotifyWatchdog::SetCachedSize(int) const
 T CMsgNotifyWatchdog::~CMsgNotifyWatchdog()
 T CMsgPackageLicense::ByteSize() const
 T CMsgPackageLicense::Clear()
 T CMsgPackageLicense::GetCachedSize() const
 T CMsgPackageLicense::GetMetadata() const
 T CMsgPackageLicense::IsInitialized() const
 T CMsgPackageLicense::MergeFrom(CMsgPackageLicense const&)
 T CMsgPackageLicense::New() const
 T CMsgPackageLicense::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgPackageLicense::SetCachedSize(int) const
 T CMsgPackageLicense::~CMsgPackageLicense()
 T CMsgPartyInviteResponse::ByteSize() const
 T CMsgPartyInviteResponse::Clear()
 T CMsgPartyInviteResponse::GetCachedSize() const
 T CMsgPartyInviteResponse::GetMetadata() const
 T CMsgPartyInviteResponse::IsInitialized() const
 T CMsgPartyInviteResponse::MergeFrom(CMsgPartyInviteResponse const&)
 T CMsgPartyInviteResponse::New() const
 T CMsgPartyInviteResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgPartyInviteResponse::SetCachedSize(int) const
 T CMsgPartyInviteResponse::~CMsgPartyInviteResponse()
 T CMsgPlaytestMarkDemoForDelete::ByteSize() const
 T CMsgPlaytestMarkDemoForDelete::Clear()
 T CMsgPlaytestMarkDemoForDelete::GetCachedSize() const
 T CMsgPlaytestMarkDemoForDelete::GetMetadata() const
 T CMsgPlaytestMarkDemoForDelete::IsInitialized() const
 T CMsgPlaytestMarkDemoForDelete::MergeFrom(CMsgPlaytestMarkDemoForDelete const&)
 T CMsgPlaytestMarkDemoForDelete::New() const
 T CMsgPlaytestMarkDemoForDelete::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgPlaytestMarkDemoForDelete::SetCachedSize(int) const
 T CMsgPlaytestMarkDemoForDelete::~CMsgPlaytestMarkDemoForDelete()
 T CMsgPlaytestMarkDemoNotNew::ByteSize() const
 T CMsgPlaytestMarkDemoNotNew::Clear()
 T CMsgPlaytestMarkDemoNotNew::GetCachedSize() const
 T CMsgPlaytestMarkDemoNotNew::GetMetadata() const
 T CMsgPlaytestMarkDemoNotNew::IsInitialized() const
 T CMsgPlaytestMarkDemoNotNew::MergeFrom(CMsgPlaytestMarkDemoNotNew const&)
 T CMsgPlaytestMarkDemoNotNew::New() const
 T CMsgPlaytestMarkDemoNotNew::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgPlaytestMarkDemoNotNew::SetCachedSize(int) const
 T CMsgPlaytestMarkDemoNotNew::~CMsgPlaytestMarkDemoNotNew()
 T CMsgPlaytestRemoveDemo::ByteSize() const
 T CMsgPlaytestRemoveDemo::Clear()
 T CMsgPlaytestRemoveDemo::GetCachedSize() const
 T CMsgPlaytestRemoveDemo::GetMetadata() const
 T CMsgPlaytestRemoveDemo::IsInitialized() const
 T CMsgPlaytestRemoveDemo::MergeFrom(CMsgPlaytestRemoveDemo const&)
 T CMsgPlaytestRemoveDemo::New() const
 T CMsgPlaytestRemoveDemo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgPlaytestRemoveDemo::SetCachedSize(int) const
 T CMsgPlaytestRemoveDemo::~CMsgPlaytestRemoveDemo()
 T CMsgPlaytestReportDemo::ByteSize() const
 T CMsgPlaytestReportDemo::Clear()
 T CMsgPlaytestReportDemo::GetCachedSize() const
 T CMsgPlaytestReportDemo::GetMetadata() const
 T CMsgPlaytestReportDemo::IsInitialized() const
 T CMsgPlaytestReportDemo::MergeFrom(CMsgPlaytestReportDemo const&)
 T CMsgPlaytestReportDemo::New() const
 T CMsgPlaytestReportDemo::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgPlaytestReportDemo::SetCachedSize(int) const
 T CMsgPlaytestReportDemo::~CMsgPlaytestReportDemo()
 T CMsgPlaytestReportDemoSession::ByteSize() const
 T CMsgPlaytestReportDemoSession::Clear()
 T CMsgPlaytestReportDemoSession::GetCachedSize() const
 T CMsgPlaytestReportDemoSession::GetMetadata() const
 T CMsgPlaytestReportDemoSession::IsInitialized() const
 T CMsgPlaytestReportDemoSession::MergeFrom(CMsgPlaytestReportDemoSession const&)
 T CMsgPlaytestReportDemoSession::New() const
 T CMsgPlaytestReportDemoSession::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgPlaytestReportDemoSession::SetCachedSize(int) const
 T CMsgPlaytestReportDemoSession::~CMsgPlaytestReportDemoSession()
 T CMsgPlaytestRetrieveDemoHandles::ByteSize() const
 T CMsgPlaytestRetrieveDemoHandles::Clear()
 T CMsgPlaytestRetrieveDemoHandles::GetCachedSize() const
 T CMsgPlaytestRetrieveDemoHandles::GetMetadata() const
 T CMsgPlaytestRetrieveDemoHandles::IsInitialized() const
 T CMsgPlaytestRetrieveDemoHandles::MergeFrom(CMsgPlaytestRetrieveDemoHandles const&)
 T CMsgPlaytestRetrieveDemoHandles::New() const
 T CMsgPlaytestRetrieveDemoHandles::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgPlaytestRetrieveDemoHandles::SetCachedSize(int) const
 T CMsgPlaytestRetrieveDemoHandles::~CMsgPlaytestRetrieveDemoHandles()
 T CMsgPlaytestRetrieveDemoHandlesResponse::ByteSize() const
 T CMsgPlaytestRetrieveDemoHandlesResponse::Clear()
 T CMsgPlaytestRetrieveDemoHandlesResponse::GetCachedSize() const
 T CMsgPlaytestRetrieveDemoHandlesResponse::GetMetadata() const
 T CMsgPlaytestRetrieveDemoHandlesResponse::IsInitialized() const
 T CMsgPlaytestRetrieveDemoHandlesResponse::MergeFrom(CMsgPlaytestRetrieveDemoHandlesResponse const&)
 T CMsgPlaytestRetrieveDemoHandlesResponse::New() const
 T CMsgPlaytestRetrieveDemoHandlesResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgPlaytestRetrieveDemoHandlesResponse::SetCachedSize(int) const
 T CMsgPlaytestRetrieveDemoHandlesResponse::~CMsgPlaytestRetrieveDemoHandlesResponse()
 T CMsgPlaytestRetrieveDemoPlayersForMap::ByteSize() const
 T CMsgPlaytestRetrieveDemoPlayersForMap::Clear()
 T CMsgPlaytestRetrieveDemoPlayersForMap::GetCachedSize() const
 T CMsgPlaytestRetrieveDemoPlayersForMap::GetMetadata() const
 T CMsgPlaytestRetrieveDemoPlayersForMap::IsInitialized() const
 T CMsgPlaytestRetrieveDemoPlayersForMap::MergeFrom(CMsgPlaytestRetrieveDemoPlayersForMap const&)
 T CMsgPlaytestRetrieveDemoPlayersForMap::New() const
 T CMsgPlaytestRetrieveDemoPlayersForMap::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgPlaytestRetrieveDemoPlayersForMap::SetCachedSize(int) const
 T CMsgPlaytestRetrieveDemoPlayersForMap::~CMsgPlaytestRetrieveDemoPlayersForMap()
 T CMsgPlaytestRetrieveDemoPlayersForMapResponse::ByteSize() const
 T CMsgPlaytestRetrieveDemoPlayersForMapResponse::Clear()
 T CMsgPlaytestRetrieveDemoPlayersForMapResponse::GetCachedSize() const
 T CMsgPlaytestRetrieveDemoPlayersForMapResponse::GetMetadata() const
 T CMsgPlaytestRetrieveDemoPlayersForMapResponse::IsInitialized() const
 T CMsgPlaytestRetrieveDemoPlayersForMapResponse::MergeFrom(CMsgPlaytestRetrieveDemoPlayersForMapResponse const&)
 T CMsgPlaytestRetrieveDemoPlayersForMapResponse::New() const
 T CMsgPlaytestRetrieveDemoPlayersForMapResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgPlaytestRetrieveDemoPlayersForMapResponse::SetCachedSize(int) const
 T CMsgPlaytestRetrieveDemoPlayersForMapResponse::~CMsgPlaytestRetrieveDemoPlayersForMapResponse()
 T CMsgPlaytestRetrieveNewDemoCountResponse::ByteSize() const
 T CMsgPlaytestRetrieveNewDemoCountResponse::Clear()
 T CMsgPlaytestRetrieveNewDemoCountResponse::GetCachedSize() const
 T CMsgPlaytestRetrieveNewDemoCountResponse::GetMetadata() const
 T CMsgPlaytestRetrieveNewDemoCountResponse::IsInitialized() const
 T CMsgPlaytestRetrieveNewDemoCountResponse::MergeFrom(CMsgPlaytestRetrieveNewDemoCountResponse const&)
 T CMsgPlaytestRetrieveNewDemoCountResponse::New() const
 T CMsgPlaytestRetrieveNewDemoCountResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgPlaytestRetrieveNewDemoCountResponse::SetCachedSize(int) const
 T CMsgPlaytestRetrieveNewDemoCountResponse::~CMsgPlaytestRetrieveNewDemoCountResponse()
 T CMsgPlaytestTestMessage::ByteSize() const
 T CMsgPlaytestTestMessage::Clear()
 T CMsgPlaytestTestMessage::GetCachedSize() const
 T CMsgPlaytestTestMessage::GetMetadata() const
 T CMsgPlaytestTestMessage::IsInitialized() const
 T CMsgPlaytestTestMessage::MergeFrom(CMsgPlaytestTestMessage const&)
 T CMsgPlaytestTestMessage::New() const
 T CMsgPlaytestTestMessage::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgPlaytestTestMessage::SetCachedSize(int) const
 T CMsgPlaytestTestMessage::~CMsgPlaytestTestMessage()
 T CMsgProtoBufHeader::ByteSize() const
 T CMsgProtoBufHeader::CMsgProtoBufHeader()
 T CMsgProtoBufHeader::Clear()
 T CMsgProtoBufHeader::GetCachedSize() const
 T CMsgProtoBufHeader::GetMetadata() const
 T CMsgProtoBufHeader::IsInitialized() const
 T CMsgProtoBufHeader::MergeFrom(CMsgProtoBufHeader const&)
 T CMsgProtoBufHeader::New() const
 T CMsgProtoBufHeader::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgProtoBufHeader::SetCachedSize(int) const
 T CMsgProtoBufHeader::default_instance()
 T CMsgProtoBufHeader::~CMsgProtoBufHeader()
 T CMsgReplayUploadedToYouTube::ByteSize() const
 T CMsgReplayUploadedToYouTube::Clear()
 T CMsgReplayUploadedToYouTube::GetCachedSize() const
 T CMsgReplayUploadedToYouTube::GetMetadata() const
 T CMsgReplayUploadedToYouTube::IsInitialized() const
 T CMsgReplayUploadedToYouTube::MergeFrom(CMsgReplayUploadedToYouTube const&)
 T CMsgReplayUploadedToYouTube::New() const
 T CMsgReplayUploadedToYouTube::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgReplayUploadedToYouTube::SetCachedSize(int) const
 T CMsgReplayUploadedToYouTube::SharedDtor()
 T CMsgReplayUploadedToYouTube::~CMsgReplayUploadedToYouTube()
 T CMsgReplicateConVars::ByteSize() const
 T CMsgReplicateConVars::CMsgReplicateConVars()
 T CMsgReplicateConVars::Clear()
 T CMsgReplicateConVars::GetCachedSize() const
 T CMsgReplicateConVars::GetMetadata() const
 T CMsgReplicateConVars::IsInitialized() const
 T CMsgReplicateConVars::MergeFrom(CMsgReplicateConVars const&)
 T CMsgReplicateConVars::New() const
 T CMsgReplicateConVars::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgReplicateConVars::SetCachedSize(int) const
 T CMsgReplicateConVars::default_instance()
 T CMsgReplicateConVars::~CMsgReplicateConVars()
 T CMsgRequestInventoryRefresh::ByteSize() const
 T CMsgRequestInventoryRefresh::Clear()
 T CMsgRequestInventoryRefresh::GetCachedSize() const
 T CMsgRequestInventoryRefresh::GetMetadata() const
 T CMsgRequestInventoryRefresh::IsInitialized() const
 T CMsgRequestInventoryRefresh::MergeFrom(CMsgRequestInventoryRefresh const&)
 T CMsgRequestInventoryRefresh::New() const
 T CMsgRequestInventoryRefresh::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgRequestInventoryRefresh::SetCachedSize(int) const
 T CMsgRequestInventoryRefresh::~CMsgRequestInventoryRefresh()
 T CMsgRequestItemSchemaData::ByteSize() const
 T CMsgRequestItemSchemaData::CMsgRequestItemSchemaData()
 T CMsgRequestItemSchemaData::Clear()
 T CMsgRequestItemSchemaData::GetCachedSize() const
 T CMsgRequestItemSchemaData::GetMetadata() const
 T CMsgRequestItemSchemaData::IsInitialized() const
 T CMsgRequestItemSchemaData::MergeFrom(CMsgRequestItemSchemaData const&)
 T CMsgRequestItemSchemaData::New() const
 T CMsgRequestItemSchemaData::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgRequestItemSchemaData::SetCachedSize(int) const
 T CMsgRequestItemSchemaData::default_instance()
 T CMsgRequestItemSchemaData::~CMsgRequestItemSchemaData()
 T CMsgSOCacheSubscribed::ByteSize() const
 T CMsgSOCacheSubscribed::CMsgSOCacheSubscribed()
 T CMsgSOCacheSubscribed::Clear()
 T CMsgSOCacheSubscribed::GetCachedSize() const
 T CMsgSOCacheSubscribed::GetMetadata() const
 T CMsgSOCacheSubscribed::IsInitialized() const
 T CMsgSOCacheSubscribed::MergeFrom(CMsgSOCacheSubscribed const&)
 T CMsgSOCacheSubscribed::New() const
 T CMsgSOCacheSubscribed::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOCacheSubscribed::SetCachedSize(int) const
 T CMsgSOCacheSubscribed::default_instance()
 T CMsgSOCacheSubscribed::~CMsgSOCacheSubscribed()
 T CMsgSOCacheSubscribed_SubscribedType::ByteSize() const
 T CMsgSOCacheSubscribed_SubscribedType::Clear()
 T CMsgSOCacheSubscribed_SubscribedType::GetCachedSize() const
 T CMsgSOCacheSubscribed_SubscribedType::GetMetadata() const
 T CMsgSOCacheSubscribed_SubscribedType::IsInitialized() const
 T CMsgSOCacheSubscribed_SubscribedType::MergeFrom(CMsgSOCacheSubscribed_SubscribedType const&)
 T CMsgSOCacheSubscribed_SubscribedType::New() const
 T CMsgSOCacheSubscribed_SubscribedType::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOCacheSubscribed_SubscribedType::SetCachedSize(int) const
 T CMsgSOCacheSubscribed_SubscribedType::~CMsgSOCacheSubscribed_SubscribedType()
 T CMsgSOCacheSubscriptionCheck::ByteSize() const
 T CMsgSOCacheSubscriptionCheck::CMsgSOCacheSubscriptionCheck()
 T CMsgSOCacheSubscriptionCheck::Clear()
 T CMsgSOCacheSubscriptionCheck::GetCachedSize() const
 T CMsgSOCacheSubscriptionCheck::GetMetadata() const
 T CMsgSOCacheSubscriptionCheck::IsInitialized() const
 T CMsgSOCacheSubscriptionCheck::MergeFrom(CMsgSOCacheSubscriptionCheck const&)
 T CMsgSOCacheSubscriptionCheck::New() const
 T CMsgSOCacheSubscriptionCheck::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOCacheSubscriptionCheck::SetCachedSize(int) const
 T CMsgSOCacheSubscriptionCheck::default_instance()
 T CMsgSOCacheSubscriptionCheck::~CMsgSOCacheSubscriptionCheck()
 T CMsgSOCacheSubscriptionRefresh::ByteSize() const
 T CMsgSOCacheSubscriptionRefresh::CMsgSOCacheSubscriptionRefresh()
 T CMsgSOCacheSubscriptionRefresh::Clear()
 T CMsgSOCacheSubscriptionRefresh::GetCachedSize() const
 T CMsgSOCacheSubscriptionRefresh::GetMetadata() const
 T CMsgSOCacheSubscriptionRefresh::IsInitialized() const
 T CMsgSOCacheSubscriptionRefresh::MergeFrom(CMsgSOCacheSubscriptionRefresh const&)
 T CMsgSOCacheSubscriptionRefresh::New() const
 T CMsgSOCacheSubscriptionRefresh::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOCacheSubscriptionRefresh::SetCachedSize(int) const
 T CMsgSOCacheSubscriptionRefresh::default_instance()
 T CMsgSOCacheSubscriptionRefresh::~CMsgSOCacheSubscriptionRefresh()
 T CMsgSOCacheUnsubscribed::ByteSize() const
 T CMsgSOCacheUnsubscribed::CMsgSOCacheUnsubscribed()
 T CMsgSOCacheUnsubscribed::Clear()
 T CMsgSOCacheUnsubscribed::GetCachedSize() const
 T CMsgSOCacheUnsubscribed::GetMetadata() const
 T CMsgSOCacheUnsubscribed::IsInitialized() const
 T CMsgSOCacheUnsubscribed::MergeFrom(CMsgSOCacheUnsubscribed const&)
 T CMsgSOCacheUnsubscribed::New() const
 T CMsgSOCacheUnsubscribed::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOCacheUnsubscribed::SetCachedSize(int) const
 T CMsgSOCacheUnsubscribed::default_instance()
 T CMsgSOCacheUnsubscribed::~CMsgSOCacheUnsubscribed()
 T CMsgSOCacheVersion::ByteSize() const
 T CMsgSOCacheVersion::Clear()
 T CMsgSOCacheVersion::GetCachedSize() const
 T CMsgSOCacheVersion::GetMetadata() const
 T CMsgSOCacheVersion::IsInitialized() const
 T CMsgSOCacheVersion::MergeFrom(CMsgSOCacheVersion const&)
 T CMsgSOCacheVersion::New() const
 T CMsgSOCacheVersion::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOCacheVersion::SetCachedSize(int) const
 T CMsgSOCacheVersion::~CMsgSOCacheVersion()
 T CMsgSOMultipleObjects::ByteSize() const
 T CMsgSOMultipleObjects::CMsgSOMultipleObjects()
 T CMsgSOMultipleObjects::Clear()
 T CMsgSOMultipleObjects::GetCachedSize() const
 T CMsgSOMultipleObjects::GetMetadata() const
 T CMsgSOMultipleObjects::IsInitialized() const
 T CMsgSOMultipleObjects::MergeFrom(CMsgSOMultipleObjects const&)
 T CMsgSOMultipleObjects::New() const
 T CMsgSOMultipleObjects::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOMultipleObjects::SetCachedSize(int) const
 T CMsgSOMultipleObjects::default_instance()
 T CMsgSOMultipleObjects::~CMsgSOMultipleObjects()
 T CMsgSOMultipleObjects_SingleObject::ByteSize() const
 T CMsgSOMultipleObjects_SingleObject::Clear()
 T CMsgSOMultipleObjects_SingleObject::GetCachedSize() const
 T CMsgSOMultipleObjects_SingleObject::GetMetadata() const
 T CMsgSOMultipleObjects_SingleObject::IsInitialized() const
 T CMsgSOMultipleObjects_SingleObject::MergeFrom(CMsgSOMultipleObjects_SingleObject const&)
 T CMsgSOMultipleObjects_SingleObject::New() const
 T CMsgSOMultipleObjects_SingleObject::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOMultipleObjects_SingleObject::SetCachedSize(int) const
 T CMsgSOMultipleObjects_SingleObject::~CMsgSOMultipleObjects_SingleObject()
 T CMsgSOSingleObject::ByteSize() const
 T CMsgSOSingleObject::CMsgSOSingleObject()
 T CMsgSOSingleObject::Clear()
 T CMsgSOSingleObject::GetCachedSize() const
 T CMsgSOSingleObject::GetMetadata() const
 T CMsgSOSingleObject::IsInitialized() const
 T CMsgSOSingleObject::MergeFrom(CMsgSOSingleObject const&)
 T CMsgSOSingleObject::New() const
 T CMsgSOSingleObject::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSOSingleObject::SetCachedSize(int) const
 T CMsgSOSingleObject::default_instance()
 T CMsgSOSingleObject::~CMsgSOSingleObject()
 T CMsgSelectItemPresetForClass::ByteSize() const
 T CMsgSelectItemPresetForClass::Clear()
 T CMsgSelectItemPresetForClass::GetCachedSize() const
 T CMsgSelectItemPresetForClass::GetMetadata() const
 T CMsgSelectItemPresetForClass::IsInitialized() const
 T CMsgSelectItemPresetForClass::MergeFrom(CMsgSelectItemPresetForClass const&)
 T CMsgSelectItemPresetForClass::New() const
 T CMsgSelectItemPresetForClass::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSelectItemPresetForClass::SetCachedSize(int) const
 T CMsgSelectItemPresetForClass::~CMsgSelectItemPresetForClass()
 T CMsgSelectItemPresetForClassReply::ByteSize() const
 T CMsgSelectItemPresetForClassReply::Clear()
 T CMsgSelectItemPresetForClassReply::GetCachedSize() const
 T CMsgSelectItemPresetForClassReply::GetMetadata() const
 T CMsgSelectItemPresetForClassReply::IsInitialized() const
 T CMsgSelectItemPresetForClassReply::MergeFrom(CMsgSelectItemPresetForClassReply const&)
 T CMsgSelectItemPresetForClassReply::New() const
 T CMsgSelectItemPresetForClassReply::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSelectItemPresetForClassReply::SetCachedSize(int) const
 T CMsgSelectItemPresetForClassReply::~CMsgSelectItemPresetForClassReply()
 T CMsgServerAvailable::ByteSize() const
 T CMsgServerAvailable::Clear()
 T CMsgServerAvailable::GetCachedSize() const
 T CMsgServerAvailable::GetMetadata() const
 T CMsgServerAvailable::IsInitialized() const
 T CMsgServerAvailable::MergeFrom(CMsgServerAvailable const&)
 T CMsgServerAvailable::New() const
 T CMsgServerAvailable::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgServerAvailable::SetCachedSize(int) const
 T CMsgServerAvailable::~CMsgServerAvailable()
 T CMsgSetPresetItemPosition::ByteSize() const
 T CMsgSetPresetItemPosition::Clear()
 T CMsgSetPresetItemPosition::GetCachedSize() const
 T CMsgSetPresetItemPosition::GetMetadata() const
 T CMsgSetPresetItemPosition::IsInitialized() const
 T CMsgSetPresetItemPosition::MergeFrom(CMsgSetPresetItemPosition const&)
 T CMsgSetPresetItemPosition::New() const
 T CMsgSetPresetItemPosition::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSetPresetItemPosition::SetCachedSize(int) const
 T CMsgSetPresetItemPosition::~CMsgSetPresetItemPosition()
 T CMsgSortItems::ByteSize() const
 T CMsgSortItems::Clear()
 T CMsgSortItems::GetCachedSize() const
 T CMsgSortItems::GetMetadata() const
 T CMsgSortItems::IsInitialized() const
 T CMsgSortItems::MergeFrom(CMsgSortItems const&)
 T CMsgSortItems::New() const
 T CMsgSortItems::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSortItems::SetCachedSize(int) const
 T CMsgSortItems::~CMsgSortItems()
 T CMsgStoreGetUserData::ByteSize() const
 T CMsgStoreGetUserData::Clear()
 T CMsgStoreGetUserData::GetCachedSize() const
 T CMsgStoreGetUserData::GetMetadata() const
 T CMsgStoreGetUserData::IsInitialized() const
 T CMsgStoreGetUserData::MergeFrom(CMsgStoreGetUserData const&)
 T CMsgStoreGetUserData::New() const
 T CMsgStoreGetUserData::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgStoreGetUserData::SetCachedSize(int) const
 T CMsgStoreGetUserData::~CMsgStoreGetUserData()
 T CMsgStoreGetUserDataResponse::ByteSize() const
 T CMsgStoreGetUserDataResponse::Clear()
 T CMsgStoreGetUserDataResponse::GetCachedSize() const
 T CMsgStoreGetUserDataResponse::GetMetadata() const
 T CMsgStoreGetUserDataResponse::IsInitialized() const
 T CMsgStoreGetUserDataResponse::MergeFrom(CMsgStoreGetUserDataResponse const&)
 T CMsgStoreGetUserDataResponse::New() const
 T CMsgStoreGetUserDataResponse::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgStoreGetUserDataResponse::SetCachedSize(int) const
 T CMsgStoreGetUserDataResponse::SharedDtor()
 T CMsgStoreGetUserDataResponse::~CMsgStoreGetUserDataResponse()
 T CMsgSystemBroadcast::ByteSize() const
 T CMsgSystemBroadcast::Clear()
 T CMsgSystemBroadcast::GetCachedSize() const
 T CMsgSystemBroadcast::GetMetadata() const
 T CMsgSystemBroadcast::IsInitialized() const
 T CMsgSystemBroadcast::MergeFrom(CMsgSystemBroadcast const&)
 T CMsgSystemBroadcast::New() const
 T CMsgSystemBroadcast::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgSystemBroadcast::SetCachedSize(int) const
 T CMsgSystemBroadcast::~CMsgSystemBroadcast()
 T CMsgUpdateItemSchema::ByteSize() const
 T CMsgUpdateItemSchema::CMsgUpdateItemSchema()
 T CMsgUpdateItemSchema::Clear()
 T CMsgUpdateItemSchema::GetCachedSize() const
 T CMsgUpdateItemSchema::GetMetadata() const
 T CMsgUpdateItemSchema::IsInitialized() const
 T CMsgUpdateItemSchema::MergeFrom(CMsgUpdateItemSchema const&)
 T CMsgUpdateItemSchema::New() const
 T CMsgUpdateItemSchema::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgUpdateItemSchema::SetCachedSize(int) const
 T CMsgUpdateItemSchema::SharedDtor()
 T CMsgUpdateItemSchema::default_instance()
 T CMsgUpdateItemSchema::~CMsgUpdateItemSchema()
 T CMsgUpdatePeriodicEvent::ByteSize() const
 T CMsgUpdatePeriodicEvent::Clear()
 T CMsgUpdatePeriodicEvent::GetCachedSize() const
 T CMsgUpdatePeriodicEvent::GetMetadata() const
 T CMsgUpdatePeriodicEvent::IsInitialized() const
 T CMsgUpdatePeriodicEvent::MergeFrom(CMsgUpdatePeriodicEvent const&)
 T CMsgUpdatePeriodicEvent::New() const
 T CMsgUpdatePeriodicEvent::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgUpdatePeriodicEvent::SetCachedSize(int) const
 T CMsgUpdatePeriodicEvent::~CMsgUpdatePeriodicEvent()
 T CMsgUseItem::ByteSize() const
 T CMsgUseItem::Clear()
 T CMsgUseItem::GetCachedSize() const
 T CMsgUseItem::GetMetadata() const
 T CMsgUseItem::IsInitialized() const
 T CMsgUseItem::MergeFrom(CMsgUseItem const&)
 T CMsgUseItem::New() const
 T CMsgUseItem::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgUseItem::SetCachedSize(int) const
 T CMsgUseItem::~CMsgUseItem()
 T CMsgWebAPIKey::ByteSize() const
 T CMsgWebAPIKey::Clear()
 T CMsgWebAPIKey::GetCachedSize() const
 T CMsgWebAPIKey::GetMetadata() const
 T CMsgWebAPIKey::IsInitialized() const
 T CMsgWebAPIKey::MergeFrom(CMsgWebAPIKey const&)
 T CMsgWebAPIKey::New() const
 T CMsgWebAPIKey::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgWebAPIKey::SetCachedSize(int) const
 T CMsgWebAPIKey::~CMsgWebAPIKey()
 T CMsgWebAPIRequest::ByteSize() const
 T CMsgWebAPIRequest::Clear()
 T CMsgWebAPIRequest::GetCachedSize() const
 T CMsgWebAPIRequest::GetMetadata() const
 T CMsgWebAPIRequest::IsInitialized() const
 T CMsgWebAPIRequest::MergeFrom(CMsgWebAPIRequest const&)
 T CMsgWebAPIRequest::New() const
 T CMsgWebAPIRequest::SerializeWithCachedSizesToArray(unsigned char*) const
 T CMsgWebAPIRequest::SetCachedSize(int) const
 T CMsgWebAPIRequest::SharedDtor()
 T CMsgWebAPIRequest::~CMsgWebAPIRequest()
 T CMultiInputVar::AddValue(variant_t, int)
 T CMultiInputVar::~CMultiInputVar()
 T CMultiPlayerAnimState::AddToGestureSlot(int, Activity, bool)
 T CMultiPlayerAnimState::CMultiPlayerAnimState(CBasePlayer*, MultiPlayerMovementData_t&)
 T CMultiPlayerAnimState::CalcMainActivity()
 T CMultiPlayerAnimState::CalcMovementPlaybackRate(bool*)
 T CMultiPlayerAnimState::ClearAnimationState()
 T CMultiPlayerAnimState::ComputeGestureSequence(CStudioHdr*)
 T CMultiPlayerAnimState::ComputeMainSequence()
 T CMultiPlayerAnimState::ComputePoseParam_AimPitch(CStudioHdr*)
 T CMultiPlayerAnimState::ComputePoseParam_AimYaw(CStudioHdr*)
 T CMultiPlayerAnimState::ComputePoseParam_MoveYaw(CStudioHdr*)
 T CMultiPlayerAnimState::ComputeSequences(CStudioHdr*)
 T CMultiPlayerAnimState::DebugGestureInfo()
 T CMultiPlayerAnimState::DebugShowAnimState(int)
 T CMultiPlayerAnimState::DebugShowAnimStateForPlayer(bool)
 T CMultiPlayerAnimState::DoAnimationEvent(PlayerAnimEvent_t, int)
 T CMultiPlayerAnimState::EstimateYaw()
 T CMultiPlayerAnimState::GetCurrentMaxGroundSpeed()
 T CMultiPlayerAnimState::GetOuterAbsVelocity(Vector&)
 T CMultiPlayerAnimState::GetOuterXYSpeed()
 T CMultiPlayerAnimState::GetRenderAngles()
 T CMultiPlayerAnimState::HandleDucking(Activity&)
 T CMultiPlayerAnimState::HandleDying(Activity&)
 T CMultiPlayerAnimState::HandleJumping(Activity&)
 T CMultiPlayerAnimState::HandleMoving(Activity&)
 T CMultiPlayerAnimState::HandleSwimming(Activity&)
 T CMultiPlayerAnimState::Init(CBasePlayer*, MultiPlayerMovementData_t&)
 T CMultiPlayerAnimState::InitGestureSlots()
 T CMultiPlayerAnimState::PlayFlinchGesture(Activity)
 T CMultiPlayerAnimState::Release()
 T CMultiPlayerAnimState::RestartGesture(int, Activity, bool)
 T CMultiPlayerAnimState::RestartMainSequence()
 T CMultiPlayerAnimState::SelectWeightedSequence(Activity)
 T CMultiPlayerAnimState::SetRunSpeed(float)
 T CMultiPlayerAnimState::SetSprintSpeed(float)
 T CMultiPlayerAnimState::SetWalkSpeed(float)
 T CMultiPlayerAnimState::SetupPoseParameters(CStudioHdr*)
 T CMultiPlayerAnimState::ShouldUpdateAnimState()
 T CMultiPlayerAnimState::ShowDebugInfo()
 T CMultiPlayerAnimState::TranslateActivity(Activity)
 T CMultiPlayerAnimState::Update(float, float)
 T CMultiPlayerAnimState::UpdateGestureLayer(CStudioHdr*, GestureSlot_t*)
 T CMultiPlayerAnimState::UpdateInterpolators()
 T CMultiSource::GetDataDescMap()
 T CMultiSource::IsTriggered(CBaseEntity*)
 T CMultiSource::KeyValue(char const*, char const*)
 T CMultiSource::ObjectCaps()
 T CMultiSource::Register()
 T CMultiSource::Spawn()
 T CMultiSource::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CMultiSource::~CMultiSource()
 T CMultiplayRules::AllowAutoTargetCrosshair()
 T CMultiplayRules::AllowDamage(CBaseEntity*, CTakeDamageInfo const&)
 T CMultiplayRules::CMultiplayRules()
 T CMultiplayRules::CanHaveItem(CBasePlayer*, CItem*)
 T CMultiplayRules::CanHavePlayerItem(CBasePlayer*, CBaseCombatWeapon*)
 T CMultiplayRules::ChangeLevel()
 T CMultiplayRules::ClientCommand(CBaseEntity*, CCommand const&)
 T CMultiplayRules::ClientConnected(edict_t*, char const*, char const*, char*, int)
 T CMultiplayRules::ClientDisconnected(edict_t*)
 T CMultiplayRules::Damage_GetNoPhysicsForce()
 T CMultiplayRules::Damage_GetShouldGibCorpse()
 T CMultiplayRules::Damage_GetShouldNotBleed()
 T CMultiplayRules::Damage_GetShowOnHud()
 T CMultiplayRules::Damage_GetTimeBased()
 T CMultiplayRules::Damage_IsTimeBased(int)
 T CMultiplayRules::Damage_NoPhysicsForce(int)
 T CMultiplayRules::Damage_ShouldGibCorpse(int)
 T CMultiplayRules::Damage_ShouldNotBleed(int)
 T CMultiplayRules::Damage_ShowOnHUD(int)
 T CMultiplayRules::DeadPlayerAmmo(CBasePlayer*)
 T CMultiplayRules::DeadPlayerWeapons(CBasePlayer*)
 T CMultiplayRules::DeathNotice(CBasePlayer*, CTakeDamageInfo const&)
 T CMultiplayRules::EndMultiplayerGame()
 T CMultiplayRules::FAllowFlashlight()
 T CMultiplayRules::FAllowNPCs()
 T CMultiplayRules::FPlayerCanRespawn(CBasePlayer*)
 T CMultiplayRules::FPlayerCanTakeDamage(CBasePlayer*, CBaseEntity*)
 T CMultiplayRules::FShouldSwitchWeapon(CBasePlayer*, CBaseCombatWeapon*)
 T CMultiplayRules::FlHEVChargerRechargeTime()
 T CMultiplayRules::FlHealthChargerRechargeTime()
 T CMultiplayRules::FlItemRespawnTime(CItem*)
 T CMultiplayRules::FlPlayerFallDamage(CBasePlayer*)
 T CMultiplayRules::FlPlayerSpawnTime(CBasePlayer*)
 T CMultiplayRules::FlWeaponRespawnTime(CBaseCombatWeapon*)
 T CMultiplayRules::FlWeaponTryRespawn(CBaseCombatWeapon*)
 T CMultiplayRules::GetDeathScorer(CBaseEntity*, CBaseEntity*)
 T CMultiplayRules::GetDeathScorer(CBaseEntity*, CBaseEntity*, CBaseEntity*)
 T CMultiplayRules::GetNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)
 T CMultiplayRules::GetNextLevelName(char*, int, bool)
 T CMultiplayRules::GetPlayerSpawnSpot(CBasePlayer*)
 T CMultiplayRules::GetTaggedConVarList(KeyValues*)
 T CMultiplayRules::GetTeamID(CBaseEntity*)
 T CMultiplayRules::GoToIntermission()
 T CMultiplayRules::HandleTimeLimitChange()
 T CMultiplayRules::IPointsForKill(CBasePlayer*, CBasePlayer*)
 T CMultiplayRules::InitHUD(CBasePlayer*)
 T CMultiplayRules::IsAllowedToSpawn(CBaseEntity*)
 T CMultiplayRules::IsCoOp()
 T CMultiplayRules::IsDeathmatch()
 T CMultiplayRules::IsMultiplayer()
 T CMultiplayRules::ItemShouldRespawn(CItem*)
 T CMultiplayRules::LoadVoiceCommandScript()
 T CMultiplayRules::PlayFootstepSounds(CBasePlayer*)
 T CMultiplayRules::PlayTextureSounds()
 T CMultiplayRules::PlayerCanHearChat(CBasePlayer*, CBasePlayer*)
 T CMultiplayRules::PlayerGotAmmo(CBaseCombatCharacter*, char*, int)
 T CMultiplayRules::PlayerGotItem(CBasePlayer*, CItem*)
 T CMultiplayRules::PlayerKilled(CBasePlayer*, CTakeDamageInfo const&)
 T CMultiplayRules::PlayerRelationship(CBaseEntity*, CBaseEntity*)
 T CMultiplayRules::PlayerSpawn(CBasePlayer*)
 T CMultiplayRules::PlayerThink(CBasePlayer*)
 T CMultiplayRules::RefreshSkillData(bool)
 T CMultiplayRules::ResetMapCycleTimeStamp()
 T CMultiplayRules::SwitchToNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)
 T CMultiplayRules::Think()
 T CMultiplayRules::UseSuicidePenalty()
 T CMultiplayRules::VecItemRespawnAngles(CItem*)
 T CMultiplayRules::VecItemRespawnSpot(CItem*)
 T CMultiplayRules::VecWeaponRespawnSpot(CBaseCombatWeapon*)
 T CMultiplayRules::VoiceCommand(CBaseMultiplayerPlayer*, int, int)
 T CMultiplayRules::WeaponShouldRespawn(CBaseCombatWeapon*)
 T CMultiplayRules::~CMultiplayRules()
 T CMultiplayer_Expresser::AllowMultipleScenes()
 T CMultiplayer_Expresser::CMultiplayer_Expresser(CBaseFlex*)
 T CMultiplayer_Expresser::DisallowMultipleScenes()
 T CMultiplayer_Expresser::IsSpeaking()
 T CNPCBaseInteractive<CAI_BaseNPC>::AlyxFinishedInteraction()
 T CNPCBaseInteractive<CAI_BaseNPC>::AlyxStartedInteraction()
 T CNPCBaseInteractive<CAI_BaseNPC>::CanInteractWith(CAI_BaseNPC*)
 T CNPCBaseInteractive<CAI_BaseNPC>::HasBeenInteractedWith()
 T CNPCBaseInteractive<CAI_BaseNPC>::InputPowerdown(inputdata_t&)
 T CNPCBaseInteractive<CAI_BaseNPC>::NotifyInteraction(CAI_BaseNPC*)
 T CNPCBaseInteractive<CAI_BaseNPC>::~CNPCBaseInteractive()
 T CNPCBaseInteractive<CAI_BasePhysicsFlyingBot>::AlyxFinishedInteraction()
 T CNPCBaseInteractive<CAI_BasePhysicsFlyingBot>::AlyxStartedInteraction()
 T CNPCBaseInteractive<CAI_BasePhysicsFlyingBot>::CanInteractWith(CAI_BaseNPC*)
 T CNPCBaseInteractive<CAI_BasePhysicsFlyingBot>::HasBeenInteractedWith()
 T CNPCBaseInteractive<CAI_BasePhysicsFlyingBot>::InputPowerdown(inputdata_t&)
 T CNPCBaseInteractive<CAI_BasePhysicsFlyingBot>::NotifyInteraction(CAI_BaseNPC*)
 T CNPCBaseInteractive<CAI_BasePhysicsFlyingBot>::~CNPCBaseInteractive()
 T CNPCEventResponseSystem::FrameUpdatePreEntityThink()
 T CNPCEventResponseSystem::LevelInitPreEntity()
 T CNPCEventResponseSystem::TriggerEvent(char const*, bool, bool)
 T CNPCEventResponseSystem::~CNPCEventResponseSystem()
 T CNPCEventResponseSystemEntity::GetDataDescMap()
 T CNPCEventResponseSystemEntity::InputForceTriggerResponseEvent(inputdata_t&)
 T CNPCEventResponseSystemEntity::InputForceTriggerResponseEventNoCancel(inputdata_t&)
 T CNPCEventResponseSystemEntity::InputTriggerResponseEvent(inputdata_t&)
 T CNPCEventResponseSystemEntity::Spawn()
 T CNPCEventResponseSystemEntity::~CNPCEventResponseSystemEntity()
 T CNPCMaker* _CreateEntityTemplate<CNPCMaker>(CNPCMaker*, char const*)
 T CNPCMaker::GetDataDescMap()
 T CNPCMaker::MakeNPC()
 T CNPCMaker::Precache()
 T CNPCMaker::~CNPCMaker()
 T CNPCSpawnDestination::GetDataDescMap()
 T CNPCSpawnDestination::~CNPCSpawnDestination()
 T CNPC_Bullseye::Activate()
 T CNPC_Bullseye::BullseyeThink()
 T CNPC_Bullseye::CNPC_Bullseye()
 T CNPC_Bullseye::CanBeAnEnemyOf(CBaseEntity*)
 T CNPC_Bullseye::CanBecomeRagdoll()
 T CNPC_Bullseye::CanBecomeServerRagdoll()
 T CNPC_Bullseye::Classify()
 T CNPC_Bullseye::DecalTrace(CGameTrace*, char const*)
 T CNPC_Bullseye::Event_Killed(CTakeDamageInfo const&)
 T CNPC_Bullseye::GetAutoAimRadius()
 T CNPC_Bullseye::GetDataDescMap()
 T CNPC_Bullseye::ImpactTrace(CGameTrace*, int, char*)
 T CNPC_Bullseye::InputReleased(inputdata_t&)
 T CNPC_Bullseye::InputTargeted(inputdata_t&)
 T CNPC_Bullseye::IsLightDamage(CTakeDamageInfo const&)
 T CNPC_Bullseye::OnRestore()
 T CNPC_Bullseye::OnTakeDamage(CTakeDamageInfo const&)
 T CNPC_Bullseye::Precache()
 T CNPC_Bullseye::Spawn()
 T CNPC_Bullseye::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)
 T CNPC_Bullseye::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CNPC_Bullseye::UpdateTransmitState()
 T CNPC_Bullseye::~CNPC_Bullseye()
 T CNPC_EnemyFinder::CNPC_EnemyFinder()
 T CNPC_EnemyFinder::CanBeAnEnemyOf(CBaseEntity*)
 T CNPC_EnemyFinder::CanBeSeenBy(CAI_BaseNPC*)
 T CNPC_EnemyFinder::Classify()
 T CNPC_EnemyFinder::DrawDebugGeometryOverlays()
 T CNPC_EnemyFinder::FVisible(CBaseEntity*, int, CBaseEntity**)
 T CNPC_EnemyFinder::GatherConditions()
 T CNPC_EnemyFinder::GetClassScheduleIdSpace()
 T CNPC_EnemyFinder::GetDataDescMap()
 T CNPC_EnemyFinder::GetSchedulingErrorName()
 T CNPC_EnemyFinder::InitCustomSchedules()
 T CNPC_EnemyFinder::InputTurnOff(inputdata_t&)
 T CNPC_EnemyFinder::InputTurnOn(inputdata_t&)
 T CNPC_EnemyFinder::IsValidEnemy(CBaseEntity*)
 T CNPC_EnemyFinder::LoadedSchedules()
 T CNPC_EnemyFinder::Precache()
 T CNPC_EnemyFinder::PrescheduleThink()
 T CNPC_EnemyFinder::SelectSchedule()
 T CNPC_EnemyFinder::ShouldAlwaysThink()
 T CNPC_EnemyFinder::ShouldChooseNewEnemy()
 T CNPC_EnemyFinder::Spawn()
 T CNPC_EnemyFinder::SquadSlotName(int)
 T CNPC_EnemyFinder::StartNPC()
 T CNPC_EnemyFinder::UpdateEfficiency(bool)
 T CNPC_EnemyFinder::Wake(bool)
 T CNPC_EnemyFinder::~CNPC_EnemyFinder()
 T CNPC_EnemyFinderCombineCannon::Activate()
 T CNPC_EnemyFinderCombineCannon::FVisible(CBaseEntity*, int, CBaseEntity**)
 T CNPC_EnemyFinderCombineCannon::GatherConditions()
 T CNPC_EnemyFinderCombineCannon::GetDataDescMap()
 T CNPC_EnemyFinderCombineCannon::InputSetWideFOVForSeconds(inputdata_t&)
 T CNPC_EnemyFinderCombineCannon::IsValidEnemy(CBaseEntity*)
 T CNPC_EnemyFinderCombineCannon::Spawn()
 T CNPC_EnemyFinderCombineCannon::UpdateOnRemove()
 T CNPC_EnemyFinderCombineCannon::~CNPC_EnemyFinderCombineCannon()
 T CNPC_FloorTurret::Activate()
 T CNPC_FloorTurret::ActiveThink()
 T CNPC_FloorTurret::AutoSearchThink()
 T CNPC_FloorTurret::BloodColor()
 T CNPC_FloorTurret::BreakThink()
 T CNPC_FloorTurret::CNPC_FloorTurret()
 T CNPC_FloorTurret::CanBeAnEnemyOf(CBaseEntity*)
 T CNPC_FloorTurret::CanBecomeServerRagdoll()
 T CNPC_FloorTurret::CanInteractWith(CAI_BaseNPC*)
 T CNPC_FloorTurret::Classify()
 T CNPC_FloorTurret::CreateVPhysics()
 T CNPC_FloorTurret::Deploy()
 T CNPC_FloorTurret::Disable()
 T CNPC_FloorTurret::DisabledThink()
 T CNPC_FloorTurret::DrawDebugTextOverlays()
 T CNPC_FloorTurret::DryFire()
 T CNPC_FloorTurret::EyeOffset(Activity)
 T CNPC_FloorTurret::EyePosition()
 T CNPC_FloorTurret::GetAttackDamageScale(CBaseEntity*)
 T CNPC_FloorTurret::GetAttackSpread(CBaseCombatWeapon*, CBaseEntity*)
 T CNPC_FloorTurret::GetClassScheduleIdSpace()
 T CNPC_FloorTurret::GetDataDescMap()
 T CNPC_FloorTurret::GetFireConeZTolerance()
 T CNPC_FloorTurret::GetSchedulingErrorName()
 T CNPC_FloorTurret::GetTracerType()
 T CNPC_FloorTurret::HackFindEnemy()
 T CNPC_FloorTurret::HandleInteraction(int, void*, CBaseCombatCharacter*)
 T CNPC_FloorTurret::HasBeenInteractedWith()
 T CNPC_FloorTurret::HasPhysicsAttacker(float)
 T CNPC_FloorTurret::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T CNPC_FloorTurret::InactiveThink()
 T CNPC_FloorTurret::InitCustomSchedules()
 T CNPC_FloorTurret::InputDepleteAmmo(inputdata_t&)
 T CNPC_FloorTurret::InputDisable(inputdata_t&)
 T CNPC_FloorTurret::InputEnable(inputdata_t&)
 T CNPC_FloorTurret::InputRestoreAmmo(inputdata_t&)
 T CNPC_FloorTurret::InputSelfDestruct(inputdata_t&)
 T CNPC_FloorTurret::InputToggle(inputdata_t&)
 T CNPC_FloorTurret::IsValidEnemy(CBaseEntity*)
 T CNPC_FloorTurret::LoadedSchedules()
 T CNPC_FloorTurret::MaxYawSpeed()
 T CNPC_FloorTurret::NotifyInteraction(CAI_BaseNPC*)
 T CNPC_FloorTurret::ObjectCaps()
 T CNPC_FloorTurret::OnAttemptPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CNPC_FloorTurret::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CNPC_FloorTurret::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CNPC_FloorTurret::OnSide()
 T CNPC_FloorTurret::OnTakeDamage(CTakeDamageInfo const&)
 T CNPC_FloorTurret::Ping()
 T CNPC_FloorTurret::PlayerPenetratingVPhysics()
 T CNPC_FloorTurret::PreThink(turretState_e)
 T CNPC_FloorTurret::Precache()
 T CNPC_FloorTurret::PreferredCarryAngles()
 T CNPC_FloorTurret::Retire()
 T CNPC_FloorTurret::ReturnToLife()
 T CNPC_FloorTurret::SearchThink()
 T CNPC_FloorTurret::SelfDestructThink()
 T CNPC_FloorTurret::SetEyeState(eyeState_t)
 T CNPC_FloorTurret::Shoot(Vector const&, Vector const&, bool)
 T CNPC_FloorTurret::ShouldSavePhysics()
 T CNPC_FloorTurret::Spawn()
 T CNPC_FloorTurret::SpinDown()
 T CNPC_FloorTurret::SpinUp()
 T CNPC_FloorTurret::SquadSlotName(int)
 T CNPC_FloorTurret::SuppressThink()
 T CNPC_FloorTurret::TippedThink()
 T CNPC_FloorTurret::Toggle()
 T CNPC_FloorTurret::ToggleUse(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CNPC_FloorTurret::UpdateFacing()
 T CNPC_FloorTurret::UpdateMuzzleMatrix()
 T CNPC_FloorTurret::UpdateOnRemove()
 T CNPC_FloorTurret::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CNPC_FloorTurret::VPhysicsTakeDamage(CTakeDamageInfo const&)
 T CNPC_FloorTurret::~CNPC_FloorTurret()
 T CNPC_Furniture::Classify()
 T CNPC_Furniture::CreateVPhysics()
 T CNPC_Furniture::DrawDebugGeometryOverlays()
 T CNPC_Furniture::GetDataDescMap()
 T CNPC_Furniture::InputDisablePlayerCollision(inputdata_t&)
 T CNPC_Furniture::InputEnablePlayerCollision(inputdata_t&)
 T CNPC_Furniture::MaxYawSpeed()
 T CNPC_Furniture::NPCThink()
 T CNPC_Furniture::ObjectCaps()
 T CNPC_Furniture::OnRestore()
 T CNPC_Furniture::OnTakeDamage(CTakeDamageInfo const&)
 T CNPC_Furniture::Precache()
 T CNPC_Furniture::SelectSchedule()
 T CNPC_Furniture::SetPlayerAvoidState()
 T CNPC_Furniture::Spawn()
 T CNPC_Furniture::UpdateBoneFollowerState()
 T CNPC_Furniture::UpdateEfficiency(bool)
 T CNPC_Furniture::UpdateOnRemove()
 T CNPC_Furniture::~CNPC_Furniture()
 T CNPC_HoverTurret::AimThink()
 T CNPC_HoverTurret::AllowedToIgnite()
 T CNPC_HoverTurret::BodyTarget(Vector const&, bool)
 T CNPC_HoverTurret::CNPC_HoverTurret()
 T CNPC_HoverTurret::ClampMotorForces(Vector&, Vector&)
 T CNPC_HoverTurret::Classify()
 T CNPC_HoverTurret::CreateSmokeTrail()
 T CNPC_HoverTurret::Event_Killed(CTakeDamageInfo const&)
 T CNPC_HoverTurret::Explode()
 T CNPC_HoverTurret::FindTargetThink()
 T CNPC_HoverTurret::GatherConditions()
 T CNPC_HoverTurret::GetClassScheduleIdSpace()
 T CNPC_HoverTurret::GetClosestVisibleEnemyPosition()
 T CNPC_HoverTurret::GetDataDescMap()
 T CNPC_HoverTurret::GetHeadTurnRate()
 T CNPC_HoverTurret::GetSchedulingErrorName()
 T CNPC_HoverTurret::GetServerClass()
 T CNPC_HoverTurret::HasPhysicsAttacker(float)
 T CNPC_HoverTurret::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T CNPC_HoverTurret::InitCustomSchedules()
 T CNPC_HoverTurret::LoadedSchedules()
 T CNPC_HoverTurret::MoveExecute_Alive(float)
 T CNPC_HoverTurret::MoveExecute_Dead(float)
 T CNPC_HoverTurret::MoveToTarget(float, Vector const&)
 T CNPC_HoverTurret::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
 T CNPC_HoverTurret::ObjectCaps()
 T CNPC_HoverTurret::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CNPC_HoverTurret::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CNPC_HoverTurret::OverrideMove(float)
 T CNPC_HoverTurret::Precache()
 T CNPC_HoverTurret::PreferredCarryAngles()
 T CNPC_HoverTurret::PrescheduleThink()
 T CNPC_HoverTurret::RunTask(Task_t const*)
 T CNPC_HoverTurret::SetFiringState(hoverTurretAttackState_e)
 T CNPC_HoverTurret::ShootLaser(Vector const&, Vector const&)
 T CNPC_HoverTurret::Spawn()
 T CNPC_HoverTurret::SquadSlotName(int)
 T CNPC_HoverTurret::StartDeathSequence()
 T CNPC_HoverTurret::StartTask(Task_t const*)
 T CNPC_HoverTurret::TakeDamageFromPhysicsImpact(int, gamevcollisionevent_t*)
 T CNPC_HoverTurret::TalkThink()
 T CNPC_HoverTurret::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CNPC_HoverTurret::TurnHeadToTarget(float, Vector const&)
 T CNPC_HoverTurret::UpdateFacing()
 T CNPC_HoverTurret::UpdateOnRemove()
 T CNPC_HoverTurret::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CNPC_HoverTurret::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CNPC_HoverTurret::YouForgotToImplementOrDeclareServerClass()
 T CNPC_HoverTurret::~CNPC_HoverTurret()
 T CNPC_PersonalityCore::CNPC_PersonalityCore()
 T CNPC_PersonalityCore::CreateExpresser()
 T CNPC_PersonalityCore::CreateVPhysics()
 T CNPC_PersonalityCore::GatherConditions()
 T CNPC_PersonalityCore::GetClassScheduleIdSpace()
 T CNPC_PersonalityCore::GetDataDescMap()
 T CNPC_PersonalityCore::GetSchedulingErrorName()
 T CNPC_PersonalityCore::GetServerClass()
 T CNPC_PersonalityCore::HandleAnimEvent(animevent_t*)
 T CNPC_PersonalityCore::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T CNPC_PersonalityCore::IdleSound()
 T CNPC_PersonalityCore::InitCustomSchedules()
 T CNPC_PersonalityCore::InputClearIdleSequence(inputdata_t&)
 T CNPC_PersonalityCore::InputClearParent(inputdata_t&)
 T CNPC_PersonalityCore::InputDisableFlashlight(inputdata_t&)
 T CNPC_PersonalityCore::InputDisableMotion(inputdata_t&)
 T CNPC_PersonalityCore::InputDisablePickup(inputdata_t&)
 T CNPC_PersonalityCore::InputEnableFlashlight(inputdata_t&)
 T CNPC_PersonalityCore::InputEnableMotion(inputdata_t&)
 T CNPC_PersonalityCore::InputEnablePickup(inputdata_t&)
 T CNPC_PersonalityCore::InputExplode(inputdata_t&)
 T CNPC_PersonalityCore::InputForcePickup(inputdata_t&)
 T CNPC_PersonalityCore::InputPlayAttach(inputdata_t&)
 T CNPC_PersonalityCore::InputPlayDetach(inputdata_t&)
 T CNPC_PersonalityCore::InputPlayLock(inputdata_t&)
 T CNPC_PersonalityCore::InputSetIdleSequence(inputdata_t&)
 T CNPC_PersonalityCore::IsOkToSpeakInResponseToPlayer()
 T CNPC_PersonalityCore::LoadedSchedules()
 T CNPC_PersonalityCore::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CNPC_PersonalityCore::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
 T CNPC_PersonalityCore::ObjectCaps()
 T CNPC_PersonalityCore::OnFizzled()
 T CNPC_PersonalityCore::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CNPC_PersonalityCore::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CNPC_PersonalityCore::OnTakeDamage_Alive(CTakeDamageInfo const&)
 T CNPC_PersonalityCore::Precache()
 T CNPC_PersonalityCore::PreferredCarryAngles()
 T CNPC_PersonalityCore::PrescheduleThink()
 T CNPC_PersonalityCore::RunTask(Task_t const*)
 T CNPC_PersonalityCore::SelectSchedule()
 T CNPC_PersonalityCore::ShouldIgnite(CTakeDamageInfo const&)
 T CNPC_PersonalityCore::ShouldPlayIdleSound()
 T CNPC_PersonalityCore::ShouldSavePhysics()
 T CNPC_PersonalityCore::Spawn()
 T CNPC_PersonalityCore::SquadSlotName(int)
 T CNPC_PersonalityCore::StartSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*, CChoreoActor*, CBaseEntity*)
 T CNPC_PersonalityCore::StartTask(Task_t const*)
 T CNPC_PersonalityCore::TestRemarkingUpon(CInfoRemarkable*)
 T CNPC_PersonalityCore::TranslateSchedule(int)
 T CNPC_PersonalityCore::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CNPC_PersonalityCore::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CNPC_PersonalityCore::YouForgotToImplementOrDeclareServerClass()
 T CNPC_PersonalityCore::~CNPC_PersonalityCore()
 T CNPC_Portal_FloorTurret::Activate()
 T CNPC_Portal_FloorTurret::ActiveThink()
 T CNPC_Portal_FloorTurret::AllowedToIgnite()
 T CNPC_Portal_FloorTurret::AutoSearchThink()
 T CNPC_Portal_FloorTurret::BreakThink()
 T CNPC_Portal_FloorTurret::BurnThink()
 T CNPC_Portal_FloorTurret::Deploy()
 T CNPC_Portal_FloorTurret::DieThink()
 T CNPC_Portal_FloorTurret::DisabledThink()
 T CNPC_Portal_FloorTurret::FireBullet(char const*)
 T CNPC_Portal_FloorTurret::GetAttackDamageScale(CBaseEntity*)
 T CNPC_Portal_FloorTurret::GetAttackSpread(CBaseCombatWeapon*, CBaseEntity*)
 T CNPC_Portal_FloorTurret::GetAutoAimCenter()
 T CNPC_Portal_FloorTurret::GetAutoAimRadius()
 T CNPC_Portal_FloorTurret::GetDataDescMap()
 T CNPC_Portal_FloorTurret::GetFireConeZTolerance()
 T CNPC_Portal_FloorTurret::GetPreviousHeldOwner() const
 T CNPC_Portal_FloorTurret::GetServerClass()
 T CNPC_Portal_FloorTurret::HackFindEnemy()
 T CNPC_Portal_FloorTurret::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T CNPC_Portal_FloorTurret::HeldThink()
 T CNPC_Portal_FloorTurret::InactiveThink()
 T CNPC_Portal_FloorTurret::InputDisableGagging(inputdata_t&)
 T CNPC_Portal_FloorTurret::InputDisablePickup(inputdata_t&)
 T CNPC_Portal_FloorTurret::InputEnableGagging(inputdata_t&)
 T CNPC_Portal_FloorTurret::InputEnablePickup(inputdata_t&)
 T CNPC_Portal_FloorTurret::InputFireBullet(inputdata_t&)
 T CNPC_Portal_FloorTurret::InputSelfDestructImmediately(inputdata_t&)
 T CNPC_Portal_FloorTurret::InputSetAsBouncePainted(inputdata_t&)
 T CNPC_Portal_FloorTurret::InputSetModel(inputdata_t&)
 T CNPC_Portal_FloorTurret::IsEnemyBehindGlass(CPortal_Base2D*, CBaseEntity*, Vector const&, Vector const&, float)
 T CNPC_Portal_FloorTurret::IsProjectedWallBlockingTurretFromPlayer(CBasePlayer*)
 T CNPC_Portal_FloorTurret::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
 T CNPC_Portal_FloorTurret::OnEnteredTractorBeam()
 T CNPC_Portal_FloorTurret::OnExitedTractorBeam()
 T CNPC_Portal_FloorTurret::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CNPC_Portal_FloorTurret::OnRestore()
 T CNPC_Portal_FloorTurret::OnSide()
 T CNPC_Portal_FloorTurret::OnTakeDamage(CTakeDamageInfo const&)
 T CNPC_Portal_FloorTurret::Paint(PaintPowerType, Vector const&)
 T CNPC_Portal_FloorTurret::PreThink(turretState_e)
 T CNPC_Portal_FloorTurret::Precache()
 T CNPC_Portal_FloorTurret::PreferredCarryAngles()
 T CNPC_Portal_FloorTurret::Retire()
 T CNPC_Portal_FloorTurret::SearchThink()
 T CNPC_Portal_FloorTurret::SetEyeState(eyeState_t)
 T CNPC_Portal_FloorTurret::SetTurretType(int)
 T CNPC_Portal_FloorTurret::Shoot(Vector const&, Vector const&, bool)
 T CNPC_Portal_FloorTurret::ShouldAttractAutoAim(CBaseEntity*)
 T CNPC_Portal_FloorTurret::Spawn()
 T CNPC_Portal_FloorTurret::StartTouch(CBaseEntity*)
 T CNPC_Portal_FloorTurret::SuppressThink()
 T CNPC_Portal_FloorTurret::TippedThink()
 T CNPC_Portal_FloorTurret::TractorBeamThink()
 T CNPC_Portal_FloorTurret::UpdateOnRemove()
 T CNPC_Portal_FloorTurret::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CNPC_Portal_FloorTurret::YouForgotToImplementOrDeclareServerClass()
 T CNPC_Portal_FloorTurret::~CNPC_Portal_FloorTurret()
 T CNPC_RocketTurret::Activate()
 T CNPC_RocketTurret::CNPC_RocketTurret()
 T CNPC_RocketTurret::Classify()
 T CNPC_RocketTurret::ClosingThink()
 T CNPC_RocketTurret::CreateVPhysics()
 T CNPC_RocketTurret::DeathThink()
 T CNPC_RocketTurret::Disable()
 T CNPC_RocketTurret::DyingThink()
 T CNPC_RocketTurret::Enable()
 T CNPC_RocketTurret::EyeOffset(Activity)
 T CNPC_RocketTurret::EyePosition()
 T CNPC_RocketTurret::FVisible(CBaseEntity*, int, CBaseEntity**)
 T CNPC_RocketTurret::FindAimPointThroughPortal(CPortal_Base2D const*, Vector*)
 T CNPC_RocketTurret::FireRocket()
 T CNPC_RocketTurret::FiringThink()
 T CNPC_RocketTurret::FollowThink()
 T CNPC_RocketTurret::GetBeamTraceFilter()
 T CNPC_RocketTurret::GetDataDescMap()
 T CNPC_RocketTurret::GetServerClass()
 T CNPC_RocketTurret::InputDestroy(inputdata_t&)
 T CNPC_RocketTurret::InputDisable(inputdata_t&)
 T CNPC_RocketTurret::InputEnable(inputdata_t&)
 T CNPC_RocketTurret::InputSetTarget(inputdata_t&)
 T CNPC_RocketTurret::InputToggle(inputdata_t&)
 T CNPC_RocketTurret::LockingThink()
 T CNPC_RocketTurret::OpeningThink()
 T CNPC_RocketTurret::Precache()
 T CNPC_RocketTurret::SearchThink()
 T CNPC_RocketTurret::Spawn()
 T CNPC_RocketTurret::SyncPoseToAimAngles()
 T CNPC_RocketTurret::TestLOS(Vector const&)
 T CNPC_RocketTurret::TestPortalsForLOS(Vector*, bool)
 T CNPC_RocketTurret::UpdateAimPoint()
 T CNPC_RocketTurret::UpdateFacing()
 T CNPC_RocketTurret::UpdateOnRemove()
 T CNPC_RocketTurret::YouForgotToImplementOrDeclareServerClass()
 T CNPC_RocketTurret::~CNPC_RocketTurret()
 T CNPC_SecurityCamera::Activate()
 T CNPC_SecurityCamera::ActiveThink()
 T CNPC_SecurityCamera::CanBeAnEnemyOf(CBaseEntity*)
 T CNPC_SecurityCamera::CheckRestingSurfaceForPortals()
 T CNPC_SecurityCamera::Classify()
 T CNPC_SecurityCamera::CreateSounds()
 T CNPC_SecurityCamera::CreateVPhysics()
 T CNPC_SecurityCamera::DeathThink()
 T CNPC_SecurityCamera::Deploy()
 T CNPC_SecurityCamera::DormantThink()
 T CNPC_SecurityCamera::EyeOffset(Activity)
 T CNPC_SecurityCamera::EyeOn()
 T CNPC_SecurityCamera::EyePosition()
 T CNPC_SecurityCamera::FVisible(CBaseEntity*, int, CBaseEntity**)
 T CNPC_SecurityCamera::FireGameEvent(IGameEvent*)
 T CNPC_SecurityCamera::GetDataDescMap()
 T CNPC_SecurityCamera::InputDisable(inputdata_t&)
 T CNPC_SecurityCamera::InputEnable(inputdata_t&)
 T CNPC_SecurityCamera::InputLookAllTeams(inputdata_t&)
 T CNPC_SecurityCamera::InputLookAtBlue(inputdata_t&)
 T CNPC_SecurityCamera::InputLookAtOrange(inputdata_t&)
 T CNPC_SecurityCamera::InputRagdoll(inputdata_t&)
 T CNPC_SecurityCamera::InputToggle(inputdata_t&)
 T CNPC_SecurityCamera::NotifyPortalEvent(PortalEvent_t, CPortal_Base2D*)
 T CNPC_SecurityCamera::ObjectCaps()
 T CNPC_SecurityCamera::OnAttemptPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CNPC_SecurityCamera::OnTakeDamage(CTakeDamageInfo const&)
 T CNPC_SecurityCamera::PlayerPenetratingVPhysics()
 T CNPC_SecurityCamera::PreThink(cameraState_e)
 T CNPC_SecurityCamera::Precache()
 T CNPC_SecurityCamera::Ragdoll()
 T CNPC_SecurityCamera::Retire()
 T CNPC_SecurityCamera::SearchThink()
 T CNPC_SecurityCamera::ShouldSavePhysics()
 T CNPC_SecurityCamera::Spawn()
 T CNPC_SecurityCamera::StopLoopingSounds()
 T CNPC_SecurityCamera::TauntedByPlayer(CPortal_Player*)
 T CNPC_SecurityCamera::TauntedByPlayerFinished(CPortal_Player*)
 T CNPC_SecurityCamera::Toggle()
 T CNPC_SecurityCamera::UpdateFacing()
 T CNPC_SecurityCamera::UpdateOnRemove()
 T CNPC_SecurityCamera::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CNPC_SecurityCamera::~CNPC_SecurityCamera()
 T CNPC_VehicleDriver::Activate()
 T CNPC_VehicleDriver::BloodColor()
 T CNPC_VehicleDriver::CheckForTeleport()
 T CNPC_VehicleDriver::Classify()
 T CNPC_VehicleDriver::DriveVehicle()
 T CNPC_VehicleDriver::GatherEnemyConditions(CBaseEntity*)
 T CNPC_VehicleDriver::GetClassScheduleIdSpace()
 T CNPC_VehicleDriver::GetDataDescMap()
 T CNPC_VehicleDriver::GetDefaultNavGoalTolerance()
 T CNPC_VehicleDriver::GetSchedulingErrorName()
 T CNPC_VehicleDriver::IRelationType(CBaseEntity*)
 T CNPC_VehicleDriver::InitCustomSchedules()
 T CNPC_VehicleDriver::InputGotoPathCorner(inputdata_t&)
 T CNPC_VehicleDriver::InputSetDriversMaxSpeed(inputdata_t&)
 T CNPC_VehicleDriver::InputSetDriversMinSpeed(inputdata_t&)
 T CNPC_VehicleDriver::InputStartFiring(inputdata_t&)
 T CNPC_VehicleDriver::InputStartForward(inputdata_t&)
 T CNPC_VehicleDriver::InputStop(inputdata_t&)
 T CNPC_VehicleDriver::InputStopFiring(inputdata_t&)
 T CNPC_VehicleDriver::LoadedSchedules()
 T CNPC_VehicleDriver::OnRestore()
 T CNPC_VehicleDriver::OverrideMove(float)
 T CNPC_VehicleDriver::OverridePathMove(float)
 T CNPC_VehicleDriver::Precache()
 T CNPC_VehicleDriver::PrescheduleThink()
 T CNPC_VehicleDriver::RangeAttack1Conditions(float, float)
 T CNPC_VehicleDriver::RangeAttack2Conditions(float, float)
 T CNPC_VehicleDriver::RunTask(Task_t const*)
 T CNPC_VehicleDriver::SelectSchedule()
 T CNPC_VehicleDriver::Spawn()
 T CNPC_VehicleDriver::SquadSlotName(int)
 T CNPC_VehicleDriver::StartTask(Task_t const*)
 T CNPC_VehicleDriver::TranslateSchedule(int)
 T CNPC_VehicleDriver::UpdateEfficiency(bool)
 T CNPC_VehicleDriver::UpdateOnRemove()
 T CNPC_VehicleDriver::WaypointReached()
 T CNPC_VehicleDriver::~CNPC_VehicleDriver()
 T CNPC_Wheatley_Boss::Classify()
 T CNPC_Wheatley_Boss::CreateBoneFollowers()
 T CNPC_Wheatley_Boss::GetDataDescMap()
 T CNPC_Wheatley_Boss::GetServerClass()
 T CNPC_Wheatley_Boss::GetSoundInterests()
 T CNPC_Wheatley_Boss::MaxYawSpeed()
 T CNPC_Wheatley_Boss::NPCThink()
 T CNPC_Wheatley_Boss::Precache()
 T CNPC_Wheatley_Boss::Spawn()
 T CNPC_Wheatley_Boss::UpdateOnRemove()
 T CNPC_Wheatley_Boss::YouForgotToImplementOrDeclareServerClass()
 T CNPC_Wheatley_Boss::~CNPC_Wheatley_Boss()
 T CNavArea::AddIncomingConnection(CNavArea*, NavDirType)
 T CNavArea::AddLadderDown(CNavLadder*)
 T CNavArea::AddLadderUp(CNavLadder*)
 T CNavArea::AddSpotEncounters(CNavArea const*, NavDirType, CNavArea const*, NavDirType)
 T CNavArea::AddToOpenList()
 T CNavArea::AssignNodes(CNavArea*)
 T CNavArea::Build(CNavNode*, CNavNode*, CNavNode*, CNavNode*)
 T CNavArea::Build(Vector const&, Vector const&)
 T CNavArea::Build(Vector const&, Vector const&, Vector const&, Vector const&)
 T CNavArea::CNavArea()
 T CNavArea::CheckFloor(CBaseEntity*)
 T CNavArea::CheckWaterLevel()
 T CNavArea::ClearSearchLists()
 T CNavArea::CompressIDs()
 T CNavArea::ComputeEarliestOccupyTimes()
 T CNavArea::ComputeHidingSpots()
 T CNavArea::ComputeLargestPortal(CNavArea const*, Vector*, float*) const
 T CNavArea::ComputeLighting()
 T CNavArea::ComputeNormal(Vector*, bool) const
 T CNavArea::ComputePortal(CNavArea const*, NavDirType, Vector*, float*) const
 T CNavArea::ComputeSniperSpots()
 T CNavArea::ComputeSpotEncounters()
 T CNavArea::ComputeVisToArea(CNavArea*&)
 T CNavArea::ComputeVisibility(CNavArea const*, bool, bool, bool*) const
 T CNavArea::ComputeVisibilityDelta(CNavArea const*) const
 T CNavArea::ComputeVisibilityToMesh()
 T CNavArea::ConnectTo(CNavArea*, NavDirType)
 T CNavArea::ConnectTo(CNavLadder*)
 T CNavArea::Contains(CNavArea const*) const
 T CNavArea::Contains(Vector const&) const
 T CNavArea::CustomAnalysis(bool)
 T CNavArea::Disconnect(CNavArea*)
 T CNavArea::Disconnect(CNavLadder*)
 T CNavArea::Draw() const
 T CNavArea::DrawConnectedAreas() const
 T CNavArea::DrawDragSelectionSet(Color&) const
 T CNavArea::DrawFilled(int, int, int, int, float, bool, float) const
 T CNavArea::DrawHidingSpots() const
 T CNavArea::DrawSelectedSet(Vector const&) const
 T CNavArea::FindClosestNode(Vector const&, NavDirType) const
 T CNavArea::FinishMerge(CNavArea*)
 T CNavArea::FinishSplitEdit(CNavArea*, NavDirType)
 T CNavArea::GetClosestPointOnArea(Vector const*, Vector*) const
 T CNavArea::GetCornerHotspot(NavCornerType, Vector*) const
 T CNavArea::GetDanger(int)
 T CNavArea::GetDangerDecayRate() const
 T CNavArea::GetDistanceSquaredToPoint(Vector const&) const
 T CNavArea::GetExtent(Extent*) const
 T CNavArea::GetNodes(NavDirType, CUtlVector<CNavNode*, CUtlMemory<CNavNode*, int> >*) const
 T CNavArea::GetZ(float, float) const
 T CNavArea::HasNodes() const
 T CNavArea::InheritAttributes(CNavArea*, CNavArea*)
 T CNavArea::IsAbleToMergeWith(CNavArea*) const
 T CNavArea::IsBlocked(int, bool) const
 T CNavArea::IsCompletelyVisible(CNavArea const*) const
 T CNavArea::IsCompletelyVisibleToTeam(int) const
 T CNavArea::IsConnected(CNavArea const*, NavDirType) const
 T CNavArea::IsConnected(CNavLadder const*, CNavLadder::LadderDirectionType) const
 T CNavArea::IsContiguous(CNavArea const*) const
 T CNavArea::IsCoplanar(CNavArea const*) const
 T CNavArea::IsEntirelyVisible(Vector const&, CBaseEntity*) const
 T CNavArea::IsFlat() const
 T CNavArea::IsOverlapping(CNavArea const*) const
 T CNavArea::IsOverlapping(Extent const&) const
 T CNavArea::IsOverlapping(Vector const&, float) const
 T CNavArea::IsPartiallyVisible(Vector const&, CBaseEntity*) const
 T CNavArea::IsPotentiallyVisible(CNavArea const*) const
 T CNavArea::IsPotentiallyVisibleToTeam(int) const
 T CNavArea::IsRoughlySquare() const
 T CNavArea::Load(CUtlBuffer&, unsigned int, unsigned int)
 T CNavArea::MarkAsBlocked(int, CBaseEntity*, bool)
 T CNavArea::MarkObstacleToAvoid(float)
 T CNavArea::MergeAdjacentConnections(CNavArea*)
 T CNavArea::MergeEdit(CNavArea*)
 T CNavArea::OnDestroyNotify(CNavArea*)
 T CNavArea::OnDestroyNotify(CNavLadder*)
 T CNavArea::OnEditCreateNotify(CNavArea*)
 T CNavArea::OnEditDestroyNotify(CNavArea*)
 T CNavArea::OnEditDestroyNotify(CNavLadder*)
 T CNavArea::OnEnter(CBaseCombatCharacter*, CNavArea*)
 T CNavArea::OnExit(CBaseCombatCharacter*, CNavArea*)
 T CNavArea::OnRoundRestart()
 T CNavArea::OnRoundRestartPreEntity()
 T CNavArea::OnServerActivate()
 T CNavArea::PlaceOnGround(NavCornerType, float)
 T CNavArea::PostLoad()
 T CNavArea::RaiseCorner(NavCornerType, int, bool)
 T CNavArea::RemoveFromOpenList()
 T CNavArea::RemoveOrthogonalConnections(NavDirType)
 T CNavArea::ResetNodes()
 T CNavArea::ResetPotentiallyVisibleAreas()
 T CNavArea::RestoreFromSelectedSet(KeyValues*)
 T CNavArea::Save(CUtlBuffer&, unsigned int) const
 T CNavArea::SaveToSelectedSet(KeyValues*) const
 T CNavArea::SetupPVS() const
 T CNavArea::Shift(Vector const&)
 T CNavArea::SpliceEdit(CNavArea*)
 T CNavArea::SplitEdit(bool, float, CNavArea**, CNavArea**)
 T CNavArea::Strip()
 T CNavArea::TestStairs()
 T CNavArea::UpdateAvoidanceObstacles()
 T CNavArea::UpdateBlocked(bool, int)
 T CNavArea::UpdateBlockedFromNavBlockers()
 T CNavArea::~CNavArea()
 T CNavAreaCriticalData::CNavAreaCriticalData()
 T CNavLadder::CompressIDs()
 T CNavLadder::ConnectGeneratedLadder(float)
 T CNavLadder::ConnectTo(CNavArea*)
 T CNavLadder::Disconnect(CNavArea*)
 T CNavLadder::DrawConnectedAreas()
 T CNavLadder::DrawLadder() const
 T CNavLadder::IsConnected(CNavArea const*, CNavLadder::LadderDirectionType) const
 T CNavLadder::OnDestroyNotify(CNavArea*)
 T CNavLadder::OnRoundRestart()
 T CNavLadder::OnSplit(CNavArea*, CNavArea*, CNavArea*)
 T CNavLadder::SetDir(NavDirType)
 T CNavLadder::Shift(Vector const&)
 T CNavLadder::~CNavLadder()
 T CNavMesh::AddNavArea(CNavArea*)
 T CNavMesh::AddNode(Vector const&, Vector const&, NavDirType, CNavNode*, bool, float, float, float)
 T CNavMesh::AddToDragSelectionSet(CNavArea*)
 T CNavMesh::AddToSelectedSet(CNavArea*)
 T CNavMesh::AddWalkableSeed(Vector const&, Vector const&)
 T CNavMesh::AddWalkableSeeds()
 T CNavMesh::AllocateGrid(float, float, float, float)
 T CNavMesh::BeginAnalysis(bool)
 T CNavMesh::BeginCustomAnalysis(bool)
 T CNavMesh::BeginGeneration(bool)
 T CNavMesh::BeginVisibilityComputations()
 T CNavMesh::BuildArea(CNavNode*, int, int)
 T CNavMesh::BuildTransientAreaList()
 T CNavMesh::CNavMesh()
 T CNavMesh::ClearSelectedSet()
 T CNavMesh::CommandNavAddToSelectedSet()
 T CNavMesh::CommandNavAddToSelectedSetByID(CCommand const&)
 T CNavMesh::CommandNavBeginArea()
 T CNavMesh::CommandNavBeginDeselecting()
 T CNavMesh::CommandNavBeginDragDeselecting()
 T CNavMesh::CommandNavBeginDragSelecting()
 T CNavMesh::CommandNavBeginSelecting()
 T CNavMesh::CommandNavBeginShiftXY()
 T CNavMesh::CommandNavBuildLadder()
 T CNavMesh::CommandNavClearSelectedSet()
 T CNavMesh::CommandNavConnect()
 T CNavMesh::CommandNavCornerLower(CCommand const&)
 T CNavMesh::CommandNavCornerPlaceOnGround(CCommand const&)
 T CNavMesh::CommandNavCornerRaise(CCommand const&)
 T CNavMesh::CommandNavCornerSelect()
 T CNavMesh::CommandNavDelete()
 T CNavMesh::CommandNavDeleteMarked()
 T CNavMesh::CommandNavDisconnect()
 T CNavMesh::CommandNavEndArea()
 T CNavMesh::CommandNavEndDeselecting()
 T CNavMesh::CommandNavEndDragDeselecting()
 T CNavMesh::CommandNavEndDragSelecting()
 T CNavMesh::CommandNavEndSelecting()
 T CNavMesh::CommandNavEndShiftXY()
 T CNavMesh::CommandNavFloodSelect(CCommand const&)
 T CNavMesh::CommandNavLadderFlip()
 T CNavMesh::CommandNavLowerDragVolumeMax()
 T CNavMesh::CommandNavLowerDragVolumeMin()
 T CNavMesh::CommandNavMakeSniperSpots()
 T CNavMesh::CommandNavMark(CCommand const&)
 T CNavMesh::CommandNavMarkUnnamed()
 T CNavMesh::CommandNavMarkWalkable()
 T CNavMesh::CommandNavMerge()
 T CNavMesh::CommandNavMergeMesh(CCommand const&)
 T CNavMesh::CommandNavPlaceFloodFill()
 T CNavMesh::CommandNavPlacePick()
 T CNavMesh::CommandNavPlaceSet()
 T CNavMesh::CommandNavRaiseDragVolumeMax()
 T CNavMesh::CommandNavRaiseDragVolumeMin()
 T CNavMesh::CommandNavRecallSelectedSet()
 T CNavMesh::CommandNavRemoveFromSelectedSet()
 T CNavMesh::CommandNavRemoveJumpAreas()
 T CNavMesh::CommandNavSaveSelected(CCommand const&)
 T CNavMesh::CommandNavSelectBlockedAreas()
 T CNavMesh::CommandNavSelectDamagingAreas()
 T CNavMesh::CommandNavSelectHalfSpace(CCommand const&)
 T CNavMesh::CommandNavSelectInvalidAreas()
 T CNavMesh::CommandNavSelectObstructedAreas()
 T CNavMesh::CommandNavSelectStairs()
 T CNavMesh::CommandNavSplice()
 T CNavMesh::CommandNavSplit()
 T CNavMesh::CommandNavStoreSelectedSet()
 T CNavMesh::CommandNavSubdivide(CCommand const&)
 T CNavMesh::CommandNavToggleAttribute(NavAttributeType)
 T CNavMesh::CommandNavToggleDeselecting(bool)
 T CNavMesh::CommandNavToggleInSelectedSet()
 T CNavMesh::CommandNavTogglePlaceMode()
 T CNavMesh::CommandNavTogglePlacePainting()
 T CNavMesh::CommandNavToggleSelectedSet()
 T CNavMesh::CommandNavToggleSelecting(bool)
 T CNavMesh::CommandNavUnmark()
 T CNavMesh::CommandNavWarpToMark()
 T CNavMesh::ConnectGeneratedAreas()
 T CNavMesh::CreateArea() const
 T CNavMesh::CreateHidingSpot() const
 T CNavMesh::CreateLadder(Vector const&, Vector const&, float, Vector2D const&, float)
 T CNavMesh::CreateNavAreasFromNodes()
 T CNavMesh::CreateObstacleTopAreaIfNecessary(CNavArea*, CNavArea*, NavDirType, bool)
 T CNavMesh::CreateObstacleTopAreas()
 T CNavMesh::DestroyArea(CNavArea*) const
 T CNavMesh::DestroyHidingSpots()
 T CNavMesh::DestroyLadders()
 T CNavMesh::DestroyNavigationMesh(bool)
 T CNavMesh::DoToggleAttribute(CNavArea*, NavAttributeType)
 T CNavMesh::DrawDanger() const
 T CNavMesh::DrawEditMode()
 T CNavMesh::EndCustomAnalysis()
 T CNavMesh::EndVisibilityComputations()
 T CNavMesh::FindActiveNavArea()
 T CNavMesh::FindGroundForNode(Vector*, Vector*)
 T CNavMesh::FindLadderCorners(Vector*, Vector*, Vector*)
 T CNavMesh::FindNavAreaOrLadderAlongRay(Vector const&, Vector const&, CNavArea**, CNavLadder**, CNavArea*)
 T CNavMesh::FireGameEvent(IGameEvent*)
 T CNavMesh::FixConnections()
 T CNavMesh::FixCornerOnCornerAreas()
 T CNavMesh::FixUpGeneratedAreas()
 T CNavMesh::GetEditVectors(Vector*, Vector*)
 T CNavMesh::GetFilename() const
 T CNavMesh::GetGenerationTraceMask() const
 T CNavMesh::GetGroundHeight(Vector const&, float*, Vector*) const
 T CNavMesh::GetLadderByID(unsigned int) const
 T CNavMesh::GetMarkedArea() const
 T CNavMesh::GetNavArea(CBaseEntity*, int, float) const
 T CNavMesh::GetNavArea(Vector const&, float) const
 T CNavMesh::GetNavAreaByID(unsigned int) const
 T CNavMesh::GetNearestNavArea(CBaseEntity*, int, float) const
 T CNavMesh::GetNearestNavArea(Vector const&, bool, float, bool, bool) const
 T CNavMesh::GetNextWalkableSeedNode()
 T CNavMesh::GetSelecteSetSize() const
 T CNavMesh::GetSelectedSet() const
 T CNavMesh::GetSimpleGroundHeight(Vector const&, float*, Vector*) const
 T CNavMesh::GetSubVersionNumber() const
 T CNavMesh::HandleObstacleTopAreas()
 T CNavMesh::IsAuthoritative() const
 T CNavMesh::IsInSelectedSet(CNavArea const*) const
 T CNavMesh::IsSelectedSetEmpty() const
 T CNavMesh::Load()
 T CNavMesh::LoadCustomData(CUtlBuffer&, unsigned int)
 T CNavMesh::LoadCustomDataPreArea(CUtlBuffer&, unsigned int)
 T CNavMesh::LoadPlaceDatabase()
 T CNavMesh::MarkJumpAreas()
 T CNavMesh::MarkStairAreas()
 T CNavMesh::MergeGeneratedAreas()
 T CNavMesh::NameToPlace(char const*) const
 T CNavMesh::OnAreaBlocked(CNavArea*)
 T CNavMesh::OnAreaUnblocked(CNavArea*)
 T CNavMesh::OnAvoidanceObstacleEnteredArea(CNavArea*)
 T CNavMesh::OnAvoidanceObstacleLeftArea(CNavArea*)
 T CNavMesh::OnBreakableBroken(CBaseEntity*)
 T CNavMesh::OnBreakableCreated(CBaseEntity*)
 T CNavMesh::OnEditCreateNotify(CNavArea*)
 T CNavMesh::OnEditDestroyNotify(CNavArea*)
 T CNavMesh::OnEditDestroyNotify(CNavLadder*)
 T CNavMesh::OnEditModeEnd()
 T CNavMesh::OnEditModeStart()
 T CNavMesh::OnNodeAdded(CNavNode*)
 T CNavMesh::OnRoundRestart()
 T CNavMesh::OnRoundRestartPreEntity()
 T CNavMesh::OnServerActivate()
 T CNavMesh::PartialNameToPlace(char const*) const
 T CNavMesh::PlaceNameAutocomplete(char const*, char (*) [64])
 T CNavMesh::PlaceToName(unsigned int) const
 T CNavMesh::PostCustomAnalysis()
 T CNavMesh::PostLoad(unsigned int)
 T CNavMesh::PostProcessCliffAreas()
 T CNavMesh::PreLoadAreas(int)
 T CNavMesh::PrintAllPlaces() const
 T CNavMesh::RaiseAreasWithInternalObstacles()
 T CNavMesh::RegisterAvoidanceObstacle(INavAvoidanceObstacle*)
 T CNavMesh::RemoveFromSelectedSet(CNavArea*)
 T CNavMesh::RemoveJumpAreas()
 T CNavMesh::RemoveNavArea(CNavArea*)
 T CNavMesh::RemoveOverlappingObstacleTopAreas()
 T CNavMesh::Reset()
 T CNavMesh::SampleStep()
 T CNavMesh::Save() const
 T CNavMesh::SaveCustomData(CUtlBuffer&) const
 T CNavMesh::SaveCustomDataPreArea(CUtlBuffer&) const
 T CNavMesh::SetEditMode(CNavMesh::EditModeType)
 T CNavMesh::SetMarkedArea(CNavArea*)
 T CNavMesh::SimplifySelectedAreas()
 T CNavMesh::SnapToGrid(float, bool) const
 T CNavMesh::SplitAreasUnderOverhangs()
 T CNavMesh::SquareUpAreas()
 T CNavMesh::StichAndRemoveJumpAreas()
 T CNavMesh::StitchAreaSet(CUtlVector<CNavArea*, CUtlMemory<CNavArea*, int> >*)
 T CNavMesh::StripNavigationAreas()
 T CNavMesh::TestArea(CNavNode*, int, int)
 T CNavMesh::UnregisterAvoidanceObstacle(INavAvoidanceObstacle*)
 T CNavMesh::Update()
 T CNavMesh::UpdateAvoidanceObstacleAreas()
 T CNavMesh::UpdateBlockedAreas()
 T CNavMesh::UpdateDragSelectionSet()
 T CNavMesh::UpdateGeneration(float)
 T CNavMesh::ValidateNavAreaConnections()
 T CNavMesh::~CNavMesh()
 T CNavNode::CNavNode(Vector const&, Vector const&, CNavNode*, bool)
 T CNavNode::CheckCrouch()
 T CNavNode::CleanupGeneration()
 T CNavNode::ConnectTo(CNavNode*, NavDirType, float, float, float)
 T CNavNode::Draw()
 T CNavNode::GetGroundHeightAboveNode(NavCornerType) const
 T CNavNode::GetNode(Vector const&)
 T CNavNode::IsClosedCell() const
 T CNavNode::TestForCrouchArea(NavCornerType, Vector const&, Vector const&, float*)
 T CNavVectorNoEditAllocator::Reset()
 T CNetworkColor32Base<color32_s, CBaseEntity::NetworkVar_m_clrRender>::SetVal(unsigned char&, unsigned char const&)
 T CNetworkHandleBase<CBaseCombatWeapon, CBaseCombatCharacter::NetworkVar_m_hActiveWeapon>::Set(CBaseCombatWeapon const*)
 T CNetworkHandleBase<CBaseEntity, CBaseEntity::NetworkVar_m_hMoveParent>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CHandleTest::NetworkVar_m_Handle>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CBaseEntity, CProp_Portal::NetworkVar_m_hFiredByPlayer>::Set(CBaseEntity const*)
 T CNetworkHandleBase<CInfoPlacementHelper, CBaseProjectedEntity::NetworkVar_m_hPlacementHelper>::Set(CInfoPlacementHelper const*)
 T CNetworkHandleBase<CPortal_Base2D, CPortal_Player::NetworkVar_m_hPortalEnvironment>::Set(CPortal_Base2D const*)
 T CNeurotoxinCountdown::GetDataDescMap()
 T CNeurotoxinCountdown::GetServerClass()
 T CNeurotoxinCountdown::InputDisable(inputdata_t&)
 T CNeurotoxinCountdown::InputEnable(inputdata_t&)
 T CNeurotoxinCountdown::KeyValue(char const*, char const*)
 T CNeurotoxinCountdown::OnRestore()
 T CNeurotoxinCountdown::Precache()
 T CNeurotoxinCountdown::RestoreControlPanels()
 T CNeurotoxinCountdown::ScreenVisible(bool)
 T CNeurotoxinCountdown::SetTransmit(CCheckTransmitInfo*, bool)
 T CNeurotoxinCountdown::Spawn()
 T CNeurotoxinCountdown::SpawnControlPanels()
 T CNeurotoxinCountdown::Think()
 T CNeurotoxinCountdown::UpdateTransmitState()
 T CNeurotoxinCountdown::YouForgotToImplementOrDeclareServerClass()
 T CNeurotoxinCountdown::~CNeurotoxinCountdown()
 T CNewNPC::Classify()
 T CNewNPC::GetClassScheduleIdSpace()
 T CNewNPC::GetDataDescMap()
 T CNewNPC::GetSchedulingErrorName()
 T CNewNPC::InitCustomSchedules()
 T CNewNPC::LoadedSchedules()
 T CNewNPC::Precache()
 T CNewNPC::Spawn()
 T CNewNPC::SquadSlotName(int)
 T CNewNPC::~CNewNPC()
 T CNewRecharge* _CreateEntityTemplate<CNewRecharge>(CNewRecharge*, char const*)
 T CNewRecharge::CreateVPhysics()
 T CNewRecharge::DrawDebugTextOverlays()
 T CNewRecharge::GetDataDescMap()
 T CNewRecharge::InputRecharge(inputdata_t&)
 T CNewRecharge::InputSetCharge(inputdata_t&)
 T CNewRecharge::KeyValue(char const*, char const*)
 T CNewRecharge::ObjectCaps()
 T CNewRecharge::Off()
 T CNewRecharge::Precache()
 T CNewRecharge::Recharge()
 T CNewRecharge::Spawn()
 T CNewRecharge::StudioFrameAdvance()
 T CNewRecharge::UpdateJuice(int)
 T CNewRecharge::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CNewRecharge::~CNewRecharge()
 T CNoHoliday::IsActive(CRTime const&)
 T CNoHoliday::~CNoHoliday()
 T CNodeEnt::GetDataDescMap()
 T CNodeEnt::SetOwnerEntity(CBaseEntity*)
 T CNodeEnt::Spawn()
 T CNodeEnt::Spawn(char const*)
 T CNodeEnt::~CNodeEnt()
 T CNodeFilter::NodeDistanceSqr(CAI_Node&)
 T CNodeFilter::NodeIsValid(CAI_Node&)
 T CNodeList::IsLowerPriority(AI_NearNode_t const&, AI_NearNode_t const&)
 T CNodeList::RevIsLowerPriority(AI_NearNode_t const&, AI_NearNode_t const&)
 T CNonMemberScriptBinding0<HSCRIPT__* (*)(), HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding0<bool (*)(), bool>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding0<char const* (*)(), char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding0<float (*)(), float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding0<int (*)(), int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding0<void (*)(), void>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding1<HSCRIPT__* (*)(char const*), HSCRIPT__*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding1<bool (*)(char const*), bool, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding1<bool (*)(int), bool, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding1<char const* (*)(char const*), char const*, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding1<float (*)(int), float, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding1<int (*)(int), int, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding1<void (*)(bool), void, bool>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding1<void (*)(char const*), void, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding1<void (*)(float), void, float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding2<bool (*)(char const*, HSCRIPT__*), bool, char const*, HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding2<bool (*)(int, int), bool, int, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding2<void (*)(char const*, float), void, char const*, float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding2<void (*)(char const*, int), void, char const*, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding2<void (*)(int, char const*), void, int, char const*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding2<void (*)(int, int), void, int, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding3<bool (*)(int, int, int), bool, int, int, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding3<float (*)(Vector const&, Vector const&, HSCRIPT__*), float, Vector const&, Vector const&, HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding3<void (*)(char const*, char const*, float), void, char const*, char const*, float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding4<HSCRIPT__* (*)(char const*, Vector const&, char const*, int), HSCRIPT__*, char const*, Vector const&, char const*, int>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding6<void (*)(HSCRIPT__*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*), void, HSCRIPT__*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding6<void (*)(char const*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*), void, char const*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding7<void (*)(Vector const&, Vector const&, int, int, int, bool, float), void, Vector const&, Vector const&, int, int, int, bool, float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonMemberScriptBinding8<void (*)(Vector const&, Vector const&, Vector const&, int, int, int, int, float), void, Vector const&, Vector const&, Vector const&, int, int, int, int, float>::Call(void*, void*, ScriptVariant_t*, int, ScriptVariant_t*)
 T CNonModifiedPointerProxy::CNonModifiedPointerProxy(void* (*)(SendProp const*, void const*, void const*, CSendProxyRecipients*, int))
 T CNotifyList::AddEntity(CBaseEntity*, CBaseEntity*)
 T CNotifyList::ClearEntity(CBaseEntity*)
 T CNotifyList::LevelShutdownPreEntity()
 T CNotifyList::OnEntityCreated(CBaseEntity*)
 T CNotifyList::OnEntityDeleted(CBaseEntity*)
 T CNotifyList::RemoveEntity(CBaseEntity*, CBaseEntity*)
 T CNotifyList::ReportNamedEvent(CBaseEntity*, char const*)
 T CNotifyList::ReportSystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
 T CNotifyList::~CNotifyList()
 T CNuggetDirector::LevelInitPostEntity()
 T CNuggetDirector::RandomizeAvailableNuggets(float, float)
 T CNuggetDirector::RegisterNugget(CItem_Nugget*)
 T CNuggetDirector::UnregisterNugget(CItem_Nugget*)
 T CNuggetDirector::~CNuggetDirector()
 T CNullEntity::Spawn()
 T CNullEntity::~CNullEntity()
 T COrHoliday::IsActive(CRTime const&)
 T COrHoliday::~COrHoliday()
 T COrnamentProp::Activate()
 T COrnamentProp::AttachTo(char const*, CBaseEntity*, CBaseEntity*)
 T COrnamentProp::GetDataDescMap()
 T COrnamentProp::InputDetach(inputdata_t&)
 T COrnamentProp::InputSetAttached(inputdata_t&)
 T COrnamentProp::Spawn()
 T COrnamentProp::~COrnamentProp()
 T COutputEvent::FireOutput(CBaseEntity*, CBaseEntity*, float)
 T COuttroStats::GetDataDescMap()
 T COuttroStats::InputRollCredits(inputdata_t&)
 T COuttroStats::InputRollStatsCrawl(inputdata_t&)
 T COuttroStats::InputSkipStateChanged(inputdata_t&)
 T COuttroStats::SkipThink()
 T COuttroStats::Spawn()
 T COuttroStats::~COuttroStats()
 T CPASAttenuationFilter::CPASAttenuationFilter(CBaseEntity*, char const*)
 T CPASAttenuationFilter::CPASAttenuationFilter(CBaseEntity*, char const*, unsigned int&)
 T CPASAttenuationFilter::CPASAttenuationFilter(CBaseEntity*, float)
 T CPASAttenuationFilter::CPASAttenuationFilter(CBaseEntity*, soundlevel_t)
 T CPASAttenuationFilter::CPASAttenuationFilter(Vector const&, soundlevel_t)
 T CPASAttenuationFilter::Filter(Vector const&, float)
 T CPASAttenuationFilter::~CPASAttenuationFilter()
 T CPASFilter::~CPASFilter()
 T CPSCollisionEntity::Activate()
 T CPSCollisionEntity::GetServerClass()
 T CPSCollisionEntity::IsPortalSimulatorCollisionEntity(CBaseEntity const*)
 T CPSCollisionEntity::ObjectCaps()
 T CPSCollisionEntity::ShouldCollide(int, int) const
 T CPSCollisionEntity::Spawn()
 T CPSCollisionEntity::UpdateOnRemove()
 T CPSCollisionEntity::UpdateTransmitState()
 T CPSCollisionEntity::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CPSCollisionEntity::VPhysicsFriction(IPhysicsObject*, float, int, int)
 T CPSCollisionEntity::VPhysicsGetObjectList(IPhysicsObject**, int)
 T CPSCollisionEntity::YouForgotToImplementOrDeclareServerClass()
 T CPSCollisionEntity::~CPSCollisionEntity()
 T CPS_AutoGameSys_EntityListener::Init()
 T CPS_AutoGameSys_EntityListener::LevelInitPreEntity()
 T CPS_AutoGameSys_EntityListener::LevelShutdownPreEntity()
 T CPS_AutoGameSys_EntityListener::OnEntityDeleted(CBaseEntity*)
 T CPS_AutoGameSys_EntityListener::~CPS_AutoGameSys_EntityListener()
 T CPVSFilter::~CPVSFilter()
 T CPVS_Extender::CPVS_Extender()
 T CPVS_Extender::ComputeExtendedPVS(CBaseEntity const*, Vector const&, unsigned char*, int, int)
 T CPVS_Extender::~CPVS_Extender()
 T CPaintAffectedEntityList::EnumEntity(IHandleEntity*)
 T CPaintBlob::AddBlobTeleportationHistory(BlobTeleportationHistory_t const&)
 T CPaintBlob::AddToPaintDatabase()
 T CPaintBlob::CPaintBlob()
 T CPaintBlob::ClearTeleportationHistory()
 T CPaintBlob::GetTeleportationHistory(CUtlVector<BlobTeleportationHistory_t, CUtlMemory<BlobTeleportationHistory_t, int> >&)
 T CPaintBlob::PaintBlobPaint(CGameTrace const&)
 T CPaintBlob::~CPaintBlob()
 T CPaintCleanserManager::AddPaintCleanser(CTriggerPaintCleanser*)
 T CPaintCleanserManager::GetPaintCleansers(CUtlVector<CTriggerPaintCleanser*, CUtlMemory<CTriggerPaintCleanser*, int> >&)
 T CPaintCleanserManager::LevelInitPreEntity()
 T CPaintCleanserManager::LevelShutdownPreEntity()
 T CPaintCleanserManager::Name()
 T CPaintCleanserManager::RemovePaintCleanser(CTriggerPaintCleanser*)
 T CPaintCleanserManager::~CPaintCleanserManager()
 T CPaintDatabase::AddPaint(CBaseEntity*, Vector const&, Vector const&, PaintPowerType, float, float)
 T CPaintDatabase::FireGameEvent(IGameEvent*)
 T CPaintDatabase::LevelInitPostEntity()
 T CPaintDatabase::LevelInitPreEntity()
 T CPaintDatabase::LevelShutdownPostEntity()
 T CPaintDatabase::Name()
 T CPaintDatabase::PaintEntity(CBaseEntity*, PaintPowerType, Vector const&)
 T CPaintDatabase::PaintProjectedWall(CProjectedWallEntity*, PaintPowerType, Vector const&)
 T CPaintDatabase::PreClientUpdate()
 T CPaintDatabase::RemoveAllPaint()
 T CPaintDatabase::RemovePaintedEntity(CBaseEntity const*)
 T CPaintDatabase::RemovePaintedEntity(int, bool)
 T CPaintDatabase::RemovePaintedWall(CProjectedWallEntity*, bool)
 T CPaintDatabase::RestorePaintmapData(IRestore*)
 T CPaintDatabase::SavePaintmapData(ISave*)
 T CPaintDatabase::SendPaintDataTo(CBasePlayer*)
 T CPaintDatabase::~CPaintDatabase()
 T CPaintSaveRestoreBlockHandler::GetBlockName()
 T CPaintSaveRestoreBlockHandler::PostRestore()
 T CPaintSaveRestoreBlockHandler::PostSave()
 T CPaintSaveRestoreBlockHandler::PreRestore()
 T CPaintSaveRestoreBlockHandler::PreSave(CSaveRestoreData*)
 T CPaintSaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CPaintSaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CPaintSaveRestoreBlockHandler::Save(ISave*)
 T CPaintSaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CPaintSphere::GetDataDescMap()
 T CPaintSphere::Paint(inputdata_t&)
 T CPaintSphere::~CPaintSphere()
 T CPaintSprayer::Activate()
 T CPaintSprayer::CPaintSprayer()
 T CPaintSprayer::GetDataDescMap()
 T CPaintSprayer::GetServerClass()
 T CPaintSprayer::InputChangePaintType(inputdata_t&)
 T CPaintSprayer::InputStart(inputdata_t&)
 T CPaintSprayer::InputStop(inputdata_t&)
 T CPaintSprayer::PaintSprayerThink()
 T CPaintSprayer::Precache()
 T CPaintSprayer::Restore(IRestore&)
 T CPaintSprayer::Save(ISave&)
 T CPaintSprayer::Spawn()
 T CPaintSprayer::SprayPaint(float)
 T CPaintSprayer::StartPaintSpray()
 T CPaintSprayer::UpdateOnRemove()
 T CPaintSprayer::UpdateTransmitState()
 T CPaintSprayer::YouForgotToImplementOrDeclareServerClass()
 T CPaintSprayer::~CPaintSprayer()
 T CPaintStream::AddPaintBlob(CPaintBlob*)
 T CPaintStream::AddPaintToDatabase() const
 T CPaintStream::CPaintStream()
 T CPaintStream::DebugDrawBlobs()
 T CPaintStream::GetBlob(int)
 T CPaintStream::GetBlobsCount() const
 T CPaintStream::GetDataDescMap()
 T CPaintStream::GetEntity()
 T CPaintStream::GetServerClass()
 T CPaintStream::Init(Vector const&, PaintPowerType, BlobRenderMode_t, int)
 T CPaintStream::InitSharedVars()
 T CPaintStream::PostUpdateBlobs()
 T CPaintStream::PreUpdateBlobs()
 T CPaintStream::Precache()
 T CPaintStream::QueuePaintEffect()
 T CPaintStream::RemoveAllPaintBlobs()
 T CPaintStream::RemoveDeadBlobs()
 T CPaintStream::RemoveTeleportedThisFrameBlobs()
 T CPaintStream::Spawn()
 T CPaintStream::UpdateBlobSharedData()
 T CPaintStream::UpdateOnRemove()
 T CPaintStream::UpdateRenderBoundsAndOriginWorldspace()
 T CPaintStream::UpdateTransmitState()
 T CPaintStream::YouForgotToImplementOrDeclareServerClass()
 T CPaintStream::~CPaintStream()
 T CPaintStreamManager::AllocatePaintBlob(bool)
 T CPaintStreamManager::AllocatePaintBlobPool(int)
 T CPaintStreamManager::CreatePaintImpactParticles(Vector const&, Vector const&, int)
 T CPaintStreamManager::FreeBlob(CPaintBlob*)
 T CPaintStreamManager::GetPaintMaterialName(int)
 T CPaintStreamManager::LevelInitPostEntity()
 T CPaintStreamManager::LevelInitPreEntity()
 T CPaintStreamManager::LevelShutdownPostEntity()
 T CPaintStreamManager::Name()
 T CPaintStreamManager::PaintStreamUpdate()
 T CPaintStreamManager::PlayMultiplePaintImpactSounds(CUtlVector<float, CUtlMemory<float, int> >&, int, CUtlVectorFixedGrowable<Vector, 32ul> const&, PaintImpactEffect)
 T CPaintStreamManager::PlayPaintImpactParticles(Vector const&, Vector const&, int)
 T CPaintStreamManager::PlayPaintImpactSound(EmitSound_t const&)
 T CPaintStreamManager::PreClientUpdate()
 T CPaintStreamManager::~CPaintStreamManager()
 T CPaintableEntity<CBaseMultiplayerPlayer>::CleansePaint()
 T CPaintableEntity<CBaseMultiplayerPlayer>::GetDataDescMap()
 T CPaintableEntity<CBaseMultiplayerPlayer>::GetPaintPowerAtPoint(Vector const&) const
 T CPaintableEntity<CBaseMultiplayerPlayer>::GetPaintedPower() const
 T CPaintableEntity<CBaseMultiplayerPlayer>::Paint(PaintPowerType, Vector const&)
 T CPaintableEntity<CBaseProjectedEntity>::CleansePaint()
 T CPaintableEntity<CBaseProjectedEntity>::GetDataDescMap()
 T CPaintableEntity<CBaseProjectedEntity>::GetPaintPowerAtPoint(Vector const&) const
 T CPaintableEntity<CBaseProjectedEntity>::GetPaintedPower() const
 T CPaintableEntity<CBaseProjectedEntity>::Paint(PaintPowerType, Vector const&)
 T CPaintableEntity<CBaseProjectedEntity>::~CPaintableEntity()
 T CPaintableEntity<CNPC_FloorTurret>::CleansePaint()
 T CPaintableEntity<CNPC_FloorTurret>::GetDataDescMap()
 T CPaintableEntity<CNPC_FloorTurret>::GetPaintPowerAtPoint(Vector const&) const
 T CPaintableEntity<CNPC_FloorTurret>::GetPaintedPower() const
 T CPaintableEntity<CNPC_FloorTurret>::Paint(PaintPowerType, Vector const&)
 T CPaintableEntity<CPhysicsProp>::CleansePaint()
 T CPaintableEntity<CPhysicsProp>::GetDataDescMap()
 T CPaintableEntity<CPhysicsProp>::GetPaintPowerAtPoint(Vector const&) const
 T CPaintableEntity<CPhysicsProp>::GetPaintedPower() const
 T CPaintableEntity<CPhysicsProp>::Paint(PaintPowerType, Vector const&)
 T CPanelAnimationDictionary::FindOrAddPanelAnimationMap(char const*)
 T CPanelAnimationDictionary::~CPanelAnimationDictionary()
 T CPanelKeyBindingMapDictionary::CPanelKeyBindingMapDictionary()
 T CPanelKeyBindingMapDictionary::FindOrAddPanelKeyBindingMap(char const*)
 T CPanelKeyBindingMapDictionary::~CPanelKeyBindingMapDictionary()
 T CPanelMessageMapDictionary::CPanelMessageMapDictionary()
 T CPanelMessageMapDictionary::FindOrAddPanelMessageMap(char const*)
 T CPanelMessageMapDictionary::~CPanelMessageMapDictionary()
 T CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>::DoExecute()
 T CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>::Run(CNavArea**, unsigned int, int, int, IThreadPool*)
 T CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>::DoExecute()
 T CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>::Run(QueryCacheUpdateRecord_t*, unsigned int, int, int, IThreadPool*)
 T CParticleFire::GetDataDescMap()
 T CParticleFire::GetServerClass()
 T CParticleFire::YouForgotToImplementOrDeclareServerClass()
 T CParticleFire::~CParticleFire()
 T CParticleLight::GetDataDescMap()
 T CParticleLight::~CParticleLight()
 T CParticlePerformanceMonitor::GetDataDescMap()
 T CParticlePerformanceMonitor::GetServerClass()
 T CParticlePerformanceMonitor::InputStartMeasuring(inputdata_t&)
 T CParticlePerformanceMonitor::InputStopMeasuring(inputdata_t&)
 T CParticlePerformanceMonitor::InputTurnOffDisplay(inputdata_t&)
 T CParticlePerformanceMonitor::InputTurnOnDisplay(inputdata_t&)
 T CParticlePerformanceMonitor::Spawn()
 T CParticlePerformanceMonitor::UpdateTransmitState()
 T CParticlePerformanceMonitor::YouForgotToImplementOrDeclareServerClass()
 T CParticlePerformanceMonitor::~CParticlePerformanceMonitor()
 T CParticleSystem::Activate()
 T CParticleSystem::GetDataDescMap()
 T CParticleSystem::GetKeyValue(char const*, char*, int)
 T CParticleSystem::GetServerClass()
 T CParticleSystem::InputDestroy(inputdata_t&)
 T CParticleSystem::InputStart(inputdata_t&)
 T CParticleSystem::InputStop(inputdata_t&)
 T CParticleSystem::InputStopEndCap(inputdata_t&)
 T CParticleSystem::KeyValue(char const*, char const*)
 T CParticleSystem::ObjectCaps()
 T CParticleSystem::Precache()
 T CParticleSystem::ReadControlPointEnts()
 T CParticleSystem::Spawn()
 T CParticleSystem::StartParticleSystemThink()
 T CParticleSystem::UpdateTransmitState()
 T CParticleSystem::YouForgotToImplementOrDeclareServerClass()
 T CParticleSystem::~CParticleSystem()
 T CParticleSystemDefinition::CParticleSystemDefinition()
 T CParticleSystemDefinition::GetFallbackReplacementDefinition() const
 T CParticleSystemDefinition::ParseChildren(CDmxElement*)
 T CParticleSystemDefinition::ParseOperators(char const*, ParticleFunctionType_t, CDmxElement*, CUtlVector<CParticleOperatorInstance*, CUtlMemory<CParticleOperatorInstance*, int> >&)
 T CParticleSystemDefinition::Precache()
 T CParticleSystemDefinition::Read(CDmxElement*)
 T CParticleSystemDefinition::SetupContextData()
 T CParticleSystemDefinition::ShouldAlwaysPrecache() const
 T CParticleSystemDefinition::~CParticleSystemDefinition()
 T CParticleSystemDictionary::AddParticleSystem(CDmxElement*)
 T CParticleSystemDictionary::DestroyExistingElement(CDmxElement*)
 T CParticleSystemDictionary::FindOrAddParticleSystemHandle(char const*)
 T CParticleSystemDictionary::~CParticleSystemDictionary()
 T CParticleSystemMgr::CParticleSystemMgr()
 T CParticleSystemMgr::DecommitTempMemory()
 T CParticleSystemMgr::FindOrLoadSheet(CParticleSystemDefinition*, bool)
 T CParticleSystemMgr::FindParticleSystem(char const*)
 T CParticleSystemMgr::GetParticleSystemCount()
 T CParticleSystemMgr::GetParticleSystemNameFromIndex(int)
 T CParticleSystemMgr::Init(IParticleSystemQuery*, bool)
 T CParticleSystemMgr::InitAttributeTable()
 T CParticleSystemMgr::ReadParticleConfigFile(CUtlBuffer&, bool, bool, char const*)
 T CParticleSystemMgr::ReadParticleConfigFile(char const*, bool, bool)
 T CParticleSystemMgr::ReadParticleDefinitions(CUtlBuffer&, char const*, bool, bool)
 T CParticleSystemMgr::ShouldLoadSheets(bool)
 T CParticleSystemMgr::Shutdown()
 T CParticleSystemMgr::~CParticleSystemMgr()
 T CParticleSystemQuery::BeginDrawModels(int, Vector const&, CParticleCollection*)
 T CParticleSystemQuery::DebugDrawLine(Vector const&, Vector const&, int, int, int, bool, float)
 T CParticleSystemQuery::DrawModel(void*, matrix3x4_t const&, CParticleCollection*, int, int, int, int, int, float, float, float, float, float)
 T CParticleSystemQuery::FinishDrawModels(CParticleCollection*)
 T CParticleSystemQuery::GetActivityCount()
 T CParticleSystemQuery::GetActivityNameFromIndex(int)
 T CParticleSystemQuery::GetActivityNumber(void*, char const*)
 T CParticleSystemQuery::GetClosestControllingObjectHitBox(CParticleCollection*, int, int, float, Vector*, Vector*, int*, int, char const*)
 T CParticleSystemQuery::GetCollisionGroupFromName(char const*)
 T CParticleSystemQuery::GetControllingObjectHitBoxInfo(CParticleCollection*, int, int, ModelHitBoxInfo_t*, char const*)
 T CParticleSystemQuery::GetControllingObjectOBBox(CParticleCollection*, int, Vector, Vector)
 T CParticleSystemQuery::GetCurrentViewOrigin()
 T CParticleSystemQuery::GetLightingAtPoint(Vector const&, Color&)
 T CParticleSystemQuery::GetLocalPlayerEyeVectors(Vector*, Vector*, Vector*)
 T CParticleSystemQuery::GetLocalPlayerPos()
 T CParticleSystemQuery::GetModel(char const*)
 T CParticleSystemQuery::GetPixelVisibility(int*, Vector const&, float)
 T CParticleSystemQuery::GetRandomPointsOnControllingObjectHitBox(CParticleCollection*, int, int, float, int, Vector*, Vector, Vector*, int*, int, char const*)
 T CParticleSystemQuery::GetRayTraceEnvironmentFromName(char const*)
 T CParticleSystemQuery::IsEditor()
 T CParticleSystemQuery::IsPointInControllingObjectHitBox(CParticleCollection*, int, Vector, bool, char const*)
 T CParticleSystemQuery::IsPointInSolid(Vector const&, int)
 T CParticleSystemQuery::MovePointInsideControllingObject(CParticleCollection*, void*, Vector*)
 T CParticleSystemQuery::PostSimulate()
 T CParticleSystemQuery::PreSimulate()
 T CParticleSystemQuery::SetUpLightingEnvironment(Vector const&)
 T CParticleSystemQuery::TraceAgainstRayTraceEnv(int, FourRays const&, float __vector(4), float __vector(4), RayTracingResult*, int) const
 T CParticleSystemQuery::TraceLine(Vector const&, Vector const&, unsigned int, IHandleEntity const*, int, CBaseTrace*)
 T CParticleSystemQuery::UpdateProjectedTexture(int, IMaterial*, Vector&, float, float, float, float, float, float, void*&)
 T CPathCorner::DrawDebugGeometryOverlays()
 T CPathCorner::DrawDebugTextOverlays()
 T CPathCorner::GetDataDescMap()
 T CPathCorner::GetDelay()
 T CPathCorner::InputInPass(inputdata_t&)
 T CPathCorner::InputSetNextPathCorner(inputdata_t&)
 T CPathCorner::Spawn()
 T CPathCorner::~CPathCorner()
 T CPathCornerCrash::~CPathCornerCrash()
 T CPathKeyFrame::Activate()
 T CPathKeyFrame::CalculateFrameDuration()
 T CPathKeyFrame::GetDataDescMap()
 T CPathKeyFrame::Spawn()
 T CPathKeyFrame::~CPathKeyFrame()
 T CPathTrack::Activate()
 T CPathTrack::BeginIteration()
 T CPathTrack::CPathTrack()
 T CPathTrack::DisableAlternatePath()
 T CPathTrack::DisablePath()
 T CPathTrack::DrawDebugGeometryOverlays()
 T CPathTrack::EnableAlternatePath()
 T CPathTrack::EnablePath()
 T CPathTrack::EndIteration()
 T CPathTrack::GetDataDescMap()
 T CPathTrack::GetNext()
 T CPathTrack::GetOrientation(bool)
 T CPathTrack::GetOrientationType()
 T CPathTrack::GetPrevious()
 T CPathTrack::HasBeenVisited() const
 T CPathTrack::InputDisableAlternatePath(inputdata_t&)
 T CPathTrack::InputDisablePath(inputdata_t&)
 T CPathTrack::InputEnableAlternatePath(inputdata_t&)
 T CPathTrack::InputEnablePath(inputdata_t&)
 T CPathTrack::InputPass(inputdata_t&)
 T CPathTrack::InputToggleAlternatePath(inputdata_t&)
 T CPathTrack::InputTogglePath(inputdata_t&)
 T CPathTrack::Link()
 T CPathTrack::LookAhead(Vector&, float, int, CPathTrack**)
 T CPathTrack::Nearest(Vector const&)
 T CPathTrack::Spawn()
 T CPathTrack::ValidPath(CPathTrack*, int)
 T CPathTrack::Visit()
 T CPathTrack::~CPathTrack()
 T CPathfindNearestNodeFilter::IsValid(CAI_Node*)
 T CPathfindNearestNodeFilter::ShouldContinue()
 T CPhysBallSocket::CreateConstraint(IPhysicsConstraintGroup*, hl_constraint_info_t const&)
 T CPhysBallSocket::~CPhysBallSocket()
 T CPhysBox::CreateVPhysics()
 T CPhysBox::DrawDebugTextOverlays()
 T CPhysBox::GetDataDescMap()
 T CPhysBox::GetServerClass()
 T CPhysBox::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T CPhysBox::InputBecomeDebris(inputdata_t&)
 T CPhysBox::InputDisable(inputdata_t&)
 T CPhysBox::InputDisableFloating(inputdata_t&)
 T CPhysBox::InputDisableMotion(inputdata_t&)
 T CPhysBox::InputEnable(inputdata_t&)
 T CPhysBox::InputEnableMotion(inputdata_t&)
 T CPhysBox::InputForceDrop(inputdata_t&)
 T CPhysBox::InputSleep(inputdata_t&)
 T CPhysBox::InputWake(inputdata_t&)
 T CPhysBox::ObjectCaps()
 T CPhysBox::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CPhysBox::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CPhysBox::OnTakeDamage(CTakeDamageInfo const&)
 T CPhysBox::PreferredCarryAngles()
 T CPhysBox::Spawn()
 T CPhysBox::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CPhysBox::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CPhysBox::VPhysicsUpdate(IPhysicsObject*)
 T CPhysBox::YouForgotToImplementOrDeclareServerClass()
 T CPhysBox::~CPhysBox()
 T CPhysBoxMultiplayer::Activate()
 T CPhysBoxMultiplayer::GetDataDescMap()
 T CPhysBoxMultiplayer::GetMass()
 T CPhysBoxMultiplayer::GetMultiplayerPhysicsMode()
 T CPhysBoxMultiplayer::GetServerClass()
 T CPhysBoxMultiplayer::IsAsleep()
 T CPhysBoxMultiplayer::YouForgotToImplementOrDeclareServerClass()
 T CPhysBoxMultiplayer::~CPhysBoxMultiplayer()
 T CPhysConstraint::Activate()
 T CPhysConstraint::ActivateConstraint()
 T CPhysConstraint::Deactivate()
 T CPhysConstraint::DrawDebugGeometryOverlays()
 T CPhysConstraint::DrawDebugTextOverlays()
 T CPhysConstraint::GetConstraintObjects(hl_constraint_info_t&)
 T CPhysConstraint::GetDataDescMap()
 T CPhysConstraint::InputBreak(inputdata_t&)
 T CPhysConstraint::InputOnBreak(inputdata_t&)
 T CPhysConstraint::InputTurnOff(inputdata_t&)
 T CPhysConstraint::InputTurnOn(inputdata_t&)
 T CPhysConstraint::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
 T CPhysConstraint::OnBreak()
 T CPhysConstraint::OnConstraintSetup(hl_constraint_info_t&)
 T CPhysConstraint::Precache()
 T CPhysConstraint::Spawn()
 T CPhysConstraint::~CPhysConstraint()
 T CPhysConstraintEvents::ConstraintBroken(IPhysicsConstraint*)
 T CPhysConstraintSystem::GetDataDescMap()
 T CPhysConstraintSystem::Spawn()
 T CPhysConstraintSystem::~CPhysConstraintSystem()
 T CPhysConvert::GetDataDescMap()
 T CPhysConvert::InputConvertTarget(inputdata_t&)
 T CPhysConvert::~CPhysConvert()
 T CPhysExplosion::DrawDebugTextOverlays()
 T CPhysExplosion::Explode(CBaseEntity*, CBaseEntity*)
 T CPhysExplosion::FindEntity(CBaseEntity*, CBaseEntity*, CBaseEntity*)
 T CPhysExplosion::GetDataDescMap()
 T CPhysExplosion::InputExplode(inputdata_t&)
 T CPhysExplosion::InputExplodeAndRemove(inputdata_t&)
 T CPhysExplosion::Spawn()
 T CPhysExplosion::~CPhysExplosion()
 T CPhysFixed::CreateConstraint(IPhysicsConstraintGroup*, hl_constraint_info_t const&)
 T CPhysFixed::DrawDebugGeometryOverlays()
 T CPhysFixed::DrawDebugTextOverlays()
 T CPhysFixed::~CPhysFixed()
 T CPhysForce::Activate()
 T CPhysForce::ActivateForce()
 T CPhysForce::ForceOff()
 T CPhysForce::GetDataDescMap()
 T CPhysForce::InputActivate(inputdata_t&)
 T CPhysForce::InputDeactivate(inputdata_t&)
 T CPhysForce::InputForceScale(inputdata_t&)
 T CPhysForce::OnActivate()
 T CPhysForce::OnRestore()
 T CPhysForce::ScaleForce(float)
 T CPhysForce::Spawn()
 T CPhysForce::~CPhysForce()
 T CPhysHinge::CreateConstraint(IPhysicsConstraintGroup*, hl_constraint_info_t const&)
 T CPhysHinge::Deactivate()
 T CPhysHinge::DrawDebugGeometryOverlays()
 T CPhysHinge::GetDataDescMap()
 T CPhysHinge::InputSetHingeFriction(inputdata_t&)
 T CPhysHinge::InputSetVelocity(inputdata_t&)
 T CPhysHinge::IsWorldHinge(hl_constraint_info_t const&, int*)
 T CPhysHinge::NotifyVPhysicsStateChanged(IPhysicsObject*, CBaseEntity*, bool)
 T CPhysHinge::Spawn()
 T CPhysHinge::~CPhysHinge()
 T CPhysImpact::Activate()
 T CPhysImpact::GetDataDescMap()
 T CPhysImpact::InputImpact(inputdata_t&)
 T CPhysImpact::PointAtEntity()
 T CPhysImpact::Spawn()
 T CPhysImpact::~CPhysImpact()
 T CPhysLength::CreateConstraint(IPhysicsConstraintGroup*, hl_constraint_info_t const&)
 T CPhysLength::DrawDebugGeometryOverlays()
 T CPhysLength::GetDataDescMap()
 T CPhysLength::~CPhysLength()
 T CPhysMagnet::ConstraintBroken(IPhysicsConstraint*)
 T CPhysMagnet::DetachAll()
 T CPhysMagnet::DoMagnetSuck(CBaseEntity*)
 T CPhysMagnet::GetDataDescMap()
 T CPhysMagnet::GetServerClass()
 T CPhysMagnet::InputToggle(inputdata_t&)
 T CPhysMagnet::InputTurnOff(inputdata_t&)
 T CPhysMagnet::InputTurnOn(inputdata_t&)
 T CPhysMagnet::Precache()
 T CPhysMagnet::Spawn()
 T CPhysMagnet::Touch(CBaseEntity*)
 T CPhysMagnet::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CPhysMagnet::YouForgotToImplementOrDeclareServerClass()
 T CPhysMagnet::~CPhysMagnet()
 T CPhysMotor::Activate()
 T CPhysMotor::GetDataDescMap()
 T CPhysMotor::InputSetTargetSpeed(inputdata_t&)
 T CPhysMotor::InputTurnOff(inputdata_t&)
 T CPhysMotor::InputTurnOn(inputdata_t&)
 T CPhysMotor::OnRestore()
 T CPhysMotor::Spawn()
 T CPhysMotor::Think()
 T CPhysMotor::~CPhysMotor()
 T CPhysObjSaveRestoreOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CPhysObjSaveRestoreOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CPhysObjSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CPhysObjSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CPhysPulley::CreateConstraint(IPhysicsConstraintGroup*, hl_constraint_info_t const&)
 T CPhysPulley::DrawDebugGeometryOverlays()
 T CPhysPulley::GetDataDescMap()
 T CPhysPulley::~CPhysPulley()
 T CPhysSaveRestoreBlockHandler::AssociateModel(IPhysicsObject*, CPhysCollide const*)
 T CPhysSaveRestoreBlockHandler::AssociateModel(IPhysicsObject*, int)
 T CPhysSaveRestoreBlockHandler::CEntityRestoreSet::Add(CBaseEntity*, typedescription_t*, void**, PhysInterfaceId_t)
 T CPhysSaveRestoreBlockHandler::ForgetAllModels()
 T CPhysSaveRestoreBlockHandler::ForgetModel(IPhysicsObject*)
 T CPhysSaveRestoreBlockHandler::GetBlockName()
 T CPhysSaveRestoreBlockHandler::NoteBBox(Vector const&, Vector const&, CPhysCollide*)
 T CPhysSaveRestoreBlockHandler::OnEntityCreated(CBaseEntity*)
 T CPhysSaveRestoreBlockHandler::OnEntityDeleted(CBaseEntity*)
 T CPhysSaveRestoreBlockHandler::PostRestore()
 T CPhysSaveRestoreBlockHandler::PostSave()
 T CPhysSaveRestoreBlockHandler::PreRestore()
 T CPhysSaveRestoreBlockHandler::PreSave(CSaveRestoreData*)
 T CPhysSaveRestoreBlockHandler::QueueRestore(CBaseEntity*, typedescription_t*, void**, PhysInterfaceId_t)
 T CPhysSaveRestoreBlockHandler::QueueSave(CBaseEntity*, typedescription_t*, void**, PhysInterfaceId_t)
 T CPhysSaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CPhysSaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CPhysSaveRestoreBlockHandler::RestoreBlock(IRestore*, PhysObjectHeader_t const&)
 T CPhysSaveRestoreBlockHandler::RestorePhysicsObjectAndModel(IRestore*, PhysObjectHeader_t const&, CPhysSaveRestoreBlockHandler::QueuedItem_t*, int)
 T CPhysSaveRestoreBlockHandler::Save(ISave*)
 T CPhysSaveRestoreBlockHandler::SaveQueueFunc(CPhysSaveRestoreBlockHandler::QueuedItem_t const&, CPhysSaveRestoreBlockHandler::QueuedItem_t const&)
 T CPhysSaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CPhysSaveRestoreBlockHandler::~CPhysSaveRestoreBlockHandler()
 T CPhysSlideConstraint::CreateConstraint(IPhysicsConstraintGroup*, hl_constraint_info_t const&)
 T CPhysSlideConstraint::DrawDebugGeometryOverlays()
 T CPhysSlideConstraint::GetDataDescMap()
 T CPhysSlideConstraint::InputSetVelocity(inputdata_t&)
 T CPhysSlideConstraint::NotifyVPhysicsStateChanged(IPhysicsObject*, CBaseEntity*, bool)
 T CPhysSlideConstraint::~CPhysSlideConstraint()
 T CPhysSphere::CreateVPhysics()
 T CPhysSphere::OverridePropdata()
 T CPhysSphere::~CPhysSphere()
 T CPhysThruster::GetDataDescMap()
 T CPhysThruster::OnActivate()
 T CPhysThruster::SetupForces(IPhysicsObject*, Vector&, Vector&)
 T CPhysThruster::~CPhysThruster()
 T CPhysTorque::GetDataDescMap()
 T CPhysTorque::SetupForces(IPhysicsObject*, Vector&, Vector&)
 T CPhysTorque::Spawn()
 T CPhysTorque::~CPhysTorque()
 T CPhysicsCannister::BeginShutdownThink()
 T CPhysicsCannister::CannisterActivate(CBaseEntity*, Vector const&)
 T CPhysicsCannister::CannisterFire(CBaseEntity*)
 T CPhysicsCannister::CreateVPhysics()
 T CPhysicsCannister::Deactivate()
 T CPhysicsCannister::Explode(CBaseEntity*)
 T CPhysicsCannister::ExplodeTouch(CBaseEntity*)
 T CPhysicsCannister::GetDataDescMap()
 T CPhysicsCannister::HasPhysicsAttacker(float)
 T CPhysicsCannister::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T CPhysicsCannister::InputActivate(inputdata_t&)
 T CPhysicsCannister::InputDeactivate(inputdata_t&)
 T CPhysicsCannister::InputExplode(inputdata_t&)
 T CPhysicsCannister::InputWake(inputdata_t&)
 T CPhysicsCannister::IsAlive()
 T CPhysicsCannister::ObjectCaps()
 T CPhysicsCannister::OnAttemptPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CPhysicsCannister::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CPhysicsCannister::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CPhysicsCannister::OnRestore()
 T CPhysicsCannister::OnTakeDamage(CTakeDamageInfo const&)
 T CPhysicsCannister::PhysGunLaunchAngularImpulse()
 T CPhysicsCannister::PhysGunLaunchVelocity(Vector const&, float)
 T CPhysicsCannister::Precache()
 T CPhysicsCannister::PreferredCarryAngles()
 T CPhysicsCannister::ShouldPuntUseLaunchForces(PhysGunForce_t)
 T CPhysicsCannister::ShutdownJet()
 T CPhysicsCannister::Spawn()
 T CPhysicsCannister::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CPhysicsCannister::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CPhysicsCannister::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CPhysicsCannister::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CPhysicsCannister::VPhysicsUpdate(IPhysicsObject*)
 T CPhysicsCannister::~CPhysicsCannister()
 T CPhysicsCloneArea::Activate()
 T CPhysicsCloneArea::CloneNearbyEntities()
 T CPhysicsCloneArea::CreatePhysicsCloneArea(CPortal_Base2D*)
 T CPhysicsCloneArea::EndTouch(CBaseEntity*)
 T CPhysicsCloneArea::ObjectCaps()
 T CPhysicsCloneArea::Resize(float, float)
 T CPhysicsCloneArea::Spawn()
 T CPhysicsCloneArea::StartTouch(CBaseEntity*)
 T CPhysicsCloneArea::Touch(CBaseEntity*)
 T CPhysicsCloneArea::UpdatePosition()
 T CPhysicsCloneArea::~CPhysicsCloneArea()
 T CPhysicsEntitySolver::GetDataDescMap()
 T CPhysicsEntitySolver::Spawn()
 T CPhysicsEntitySolver::Think()
 T CPhysicsEntitySolver::UpdateOnRemove()
 T CPhysicsEntitySolver::~CPhysicsEntitySolver()
 T CPhysicsGameTrace::VehiclePointInWater(Vector const&)
 T CPhysicsGameTrace::VehicleTraceRay(Ray_t const&, void*, CGameTrace*)
 T CPhysicsGameTrace::VehicleTraceRayWithWater(Ray_t const&, void*, CGameTrace*)
 T CPhysicsHook::FindOrAddVehicleScript(char const*, vehicleparams_t*, vehiclesounds_t*)
 T CPhysicsHook::FrameUpdatePostEntityThink()
 T CPhysicsHook::Init()
 T CPhysicsHook::LevelInitPostEntity()
 T CPhysicsHook::LevelInitPreEntity()
 T CPhysicsHook::LevelShutdownPostEntity()
 T CPhysicsHook::LevelShutdownPreEntity()
 T CPhysicsHook::Name()
 T CPhysicsHook::PreClientUpdate()
 T CPhysicsHook::~CPhysicsHook()
 T CPhysicsNPCSolver::BecomePenetrationSolver()
 T CPhysicsNPCSolver::CheckTouching()
 T CPhysicsNPCSolver::GetDataDescMap()
 T CPhysicsNPCSolver::IsContactOnNPCHead(IPhysicsFrictionSnapshot*, IPhysicsObject*, CAI_BaseNPC*)
 T CPhysicsNPCSolver::IsIntersecting()
 T CPhysicsNPCSolver::OnRestore()
 T CPhysicsNPCSolver::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CPhysicsNPCSolver::Spawn()
 T CPhysicsNPCSolver::Think()
 T CPhysicsNPCSolver::UpdateOnRemove()
 T CPhysicsNPCSolver::~CPhysicsNPCSolver()
 T CPhysicsProp::CPhysicsProp()
 T CPhysicsProp::CanObstructNavAreas() const
 T CPhysicsProp::ClearFlagsThink()
 T CPhysicsProp::ComputeEnablingImpulse(int, gamevcollisionevent_t*)
 T CPhysicsProp::CreateVPhysics()
 T CPhysicsProp::DrawDebugTextOverlays()
 T CPhysicsProp::EnableMotion()
 T CPhysicsProp::GetCarryDistanceOffset()
 T CPhysicsProp::GetDataDescMap()
 T CPhysicsProp::GetNavObstructionHeight() const
 T CPhysicsProp::GetObstructingEntity()
 T CPhysicsProp::GetPropDataAngles(char const*, QAngle&)
 T CPhysicsProp::GetServerClass()
 T CPhysicsProp::HandleAnyCollisionInteractions(int, gamevcollisionevent_t*)
 T CPhysicsProp::InputDisableFloating(inputdata_t&)
 T CPhysicsProp::InputDisableMotion(inputdata_t&)
 T CPhysicsProp::InputEnableMotion(inputdata_t&)
 T CPhysicsProp::InputSleep(inputdata_t&)
 T CPhysicsProp::InputWake(inputdata_t&)
 T CPhysicsProp::IsPotentiallyAbleToObstructNavAreas() const
 T CPhysicsProp::NavThink()
 T CPhysicsProp::ObjectCaps()
 T CPhysicsProp::OnNavMeshLoaded()
 T CPhysicsProp::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CPhysicsProp::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CPhysicsProp::OnTakeDamage(CTakeDamageInfo const&)
 T CPhysicsProp::OverridePropdata()
 T CPhysicsProp::Precache()
 T CPhysicsProp::ShouldDisableMotionOnFreeze()
 T CPhysicsProp::Spawn()
 T CPhysicsProp::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CPhysicsProp::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CPhysicsProp::VPhysicsUpdate(IPhysicsObject*)
 T CPhysicsProp::YouForgotToImplementOrDeclareServerClass()
 T CPhysicsProp::~CPhysicsProp()
 T CPhysicsPropMultiplayer::CPhysicsPropMultiplayer()
 T CPhysicsPropMultiplayer::ComputeWorldSpaceSurroundingBox(Vector*, Vector*)
 T CPhysicsPropMultiplayer::GetDataDescMap()
 T CPhysicsPropMultiplayer::GetMass()
 T CPhysicsPropMultiplayer::GetMultiplayerPhysicsMode()
 T CPhysicsPropMultiplayer::GetPhysicsMode()
 T CPhysicsPropMultiplayer::GetServerClass()
 T CPhysicsPropMultiplayer::IsAsleep()
 T CPhysicsPropMultiplayer::SetPhysicsMode(int)
 T CPhysicsPropMultiplayer::Spawn()
 T CPhysicsPropMultiplayer::VPhysicsUpdate(IPhysicsObject*)
 T CPhysicsPropMultiplayer::YouForgotToImplementOrDeclareServerClass()
 T CPhysicsPropMultiplayer::~CPhysicsPropMultiplayer()
 T CPhysicsPropRespawnable::Event_Killed(CTakeDamageInfo const&)
 T CPhysicsPropRespawnable::GetDataDescMap()
 T CPhysicsPropRespawnable::Materialize()
 T CPhysicsPropRespawnable::Spawn()
 T CPhysicsPropRespawnable::~CPhysicsPropRespawnable()
 T CPhysicsPushedEntities::AddEntity(CBaseEntity*)
 T CPhysicsPushedEntities::ComputeRotationalPushDirection(CBaseEntity*, CPhysicsPushedEntities::RotatingPushMove_t const&, Vector*, CBaseEntity*)
 T CPhysicsPushedEntities::FinishPush(bool, CPhysicsPushedEntities::RotatingPushMove_t const*)
 T CPhysicsPushedEntities::FinishRotPushedEntity(CBaseEntity*, CPhysicsPushedEntities::RotatingPushMove_t const&)
 T CPhysicsPushedEntities::GenerateBlockingEntityList()
 T CPhysicsPushedEntities::GenerateBlockingEntityListAddBox(Vector const&)
 T CPhysicsPushedEntities::IsPushedPositionValid(CBaseEntity*)
 T CPhysicsPushedEntities::LinearlyMoveRootEntity(CBaseEntity*, float, Vector*)
 T CPhysicsPushedEntities::PerformLinearPush(CBaseEntity*, float)
 T CPhysicsPushedEntities::PerformRotatePush(CBaseEntity*, float)
 T CPhysicsPushedEntities::RotateRootEntity(CBaseEntity*, float, CPhysicsPushedEntities::RotatingPushMove_t&)
 T CPhysicsPushedEntities::SetupAllInHierarchy(CBaseEntity*)
 T CPhysicsPushedEntities::SpeculativelyCheckLinearPush(Vector const&)
 T CPhysicsPushedEntities::SpeculativelyCheckPush(CPhysicsPushedEntities::PhysicsPushedInfo_t&, Vector const&, bool, CBaseEntity*)
 T CPhysicsPushedEntities::SpeculativelyCheckRotPush(CPhysicsPushedEntities::RotatingPushMove_t const&, CBaseEntity*)
 T CPhysicsPushedEntities::StoreMovedEntities(physicspushlist_t&)
 T CPhysicsPushedEntities::UpdatePusherPhysicsEndOfTick()
 T CPhysicsPushedEntities::~CPhysicsPushedEntities()
 T CPhysicsShadowClone::CPhysicsShadowClone()
 T CPhysicsShadowClone::CanBeHitByMeleeAttack(CBaseEntity*)
 T CPhysicsShadowClone::CreateShadowClone(IPhysicsEnvironment*, CHandle<CBaseEntity>, char const*, matrix3x4_t const*)
 T CPhysicsShadowClone::Event_Killed(CTakeDamageInfo const&)
 T CPhysicsShadowClone::Free()
 T CPhysicsShadowClone::FullSync(bool)
 T CPhysicsShadowClone::FullSyncAllClones()
 T CPhysicsShadowClone::FullSyncClonedPhysicsObjects(bool)
 T CPhysicsShadowClone::GetClonedEntity()
 T CPhysicsShadowClone::GetClonesOfEntity(CBaseEntity const*)
 T CPhysicsShadowClone::IsShadowClone(CBaseEntity const*)
 T CPhysicsShadowClone::NotifyDestroy(CPhysCollide*, CBaseEntity*)
 T CPhysicsShadowClone::NotifyDestroy(IPhysicsObject*, CBaseEntity*)
 T CPhysicsShadowClone::ObjectCaps()
 T CPhysicsShadowClone::OnTakeDamage(CTakeDamageInfo const&)
 T CPhysicsShadowClone::PassesDamageFilter(CTakeDamageInfo const&)
 T CPhysicsShadowClone::ShouldCollide(int, int) const
 T CPhysicsShadowClone::Spawn()
 T CPhysicsShadowClone::SyncEntity(bool)
 T CPhysicsShadowClone::TakeHealth(float, int)
 T CPhysicsShadowClone::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CPhysicsShadowClone::TranslatePhysicsToClonedEnt(IPhysicsObject const*)
 T CPhysicsShadowClone::UpdateOnRemove()
 T CPhysicsShadowClone::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CPhysicsShadowClone::VPhysicsDestroyObject()
 T CPhysicsShadowClone::VPhysicsGetObjectList(IPhysicsObject**, int)
 T CPhysicsShadowClone::~CPhysicsShadowClone()
 T CPhysicsShake::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CPhysicsSpring::Activate()
 T CPhysicsSpring::DrawDebugGeometryOverlays()
 T CPhysicsSpring::DrawDebugTextOverlays()
 T CPhysicsSpring::GetDataDescMap()
 T CPhysicsSpring::GetSpringObjectConnections(string_t, string_t, IPhysicsObject**, IPhysicsObject**)
 T CPhysicsSpring::InputSetSpringConstant(inputdata_t&)
 T CPhysicsSpring::InputSetSpringDamping(inputdata_t&)
 T CPhysicsSpring::InputSetSpringLength(inputdata_t&)
 T CPhysicsSpring::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
 T CPhysicsSpring::Spawn()
 T CPhysicsSpring::~CPhysicsSpring()
 T CPhysicsWind::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CPhysicsWire::GetDataDescMap()
 T CPhysicsWire::Precache()
 T CPhysicsWire::Spawn()
 T CPhysicsWire::~CPhysicsWire()
 T CPlane::CPlane()
 T CPlane::InitializePlane(Vector const&, Vector const&)
 T CPlane::PointDist(Vector const&)
 T CPlane::PointInFront(Vector const&)
 T CPlasma::CPlasma()
 T CPlasma::EnableSmoke(int)
 T CPlasma::GetDataDescMap()
 T CPlasma::GetServerClass()
 T CPlasma::Precache()
 T CPlasma::YouForgotToImplementOrDeclareServerClass()
 T CPlasma::~CPlasma()
 T CPlatTrigger::ObjectCaps()
 T CPlatTrigger::SpawnInsideTrigger(CFuncPlat*)
 T CPlatTrigger::Touch(CBaseEntity*)
 T CPlatTrigger::~CPlatTrigger()
 T CPlayerInfo::ChangeTeam(int)
 T CPlayerInfo::GetAbsAngles()
 T CPlayerInfo::GetAbsOrigin()
 T CPlayerInfo::GetArmorValue()
 T CPlayerInfo::GetDeathCount()
 T CPlayerInfo::GetFragCount()
 T CPlayerInfo::GetHealth()
 T CPlayerInfo::GetLastUserCommand()
 T CPlayerInfo::GetLocalAngles()
 T CPlayerInfo::GetLocalOrigin()
 T CPlayerInfo::GetMaxHealth()
 T CPlayerInfo::GetModelName()
 T CPlayerInfo::GetName()
 T CPlayerInfo::GetNetworkIDString()
 T CPlayerInfo::GetPlayerMaxs()
 T CPlayerInfo::GetPlayerMins()
 T CPlayerInfo::GetTeamIndex()
 T CPlayerInfo::GetUserID()
 T CPlayerInfo::GetWeaponName()
 T CPlayerInfo::IsConnected()
 T CPlayerInfo::IsDead()
 T CPlayerInfo::IsEFlagSet(int)
 T CPlayerInfo::IsFakeClient()
 T CPlayerInfo::IsHLTV()
 T CPlayerInfo::IsInAVehicle()
 T CPlayerInfo::IsObserver()
 T CPlayerInfo::IsPlayer()
 T CPlayerInfo::PostClientMessagesSent()
 T CPlayerInfo::RemoveAllItems(bool)
 T CPlayerInfo::RunPlayerMove(CBotCmd*)
 T CPlayerInfo::SetAbsAngles(QAngle&)
 T CPlayerInfo::SetAbsOrigin(Vector&)
 T CPlayerInfo::SetActiveWeapon(char const*)
 T CPlayerInfo::SetLastUserCommand(CBotCmd const&)
 T CPlayerInfo::SetLocalAngles(QAngle const&)
 T CPlayerInfo::SetLocalOrigin(Vector const&)
 T CPlayerInfoManager::GetGlobalVars()
 T CPlayerInfoManager::GetPlayerInfo(edict_t*)
 T CPlayerInventory::AddEconItem(CEconItem*, bool, bool)
 T CPlayerInventory::CPlayerInventory()
 T CPlayerInventory::CanPurchaseItems(int) const
 T CPlayerInventory::DumpInventoryToConsole(bool)
 T CPlayerInventory::ExtractInventorySortPosition(unsigned int)
 T CPlayerInventory::FilloutItemFromEconItem(CEconItemView*, CEconItem*)
 T CPlayerInventory::GetInventoryItemByItemID(unsigned long long, int*)
 T CPlayerInventory::GetItemInLoadout(int, int)
 T CPlayerInventory::GetMaxItemCount() const
 T CPlayerInventory::GetPreviewItemDef() const
 T CPlayerInventory::GetSOCDataForItem(unsigned long long)
 T CPlayerInventory::ItemHasBeenUpdated(CEconItemView*, bool, bool)
 T CPlayerInventory::ItemIsBeingRemoved(CEconItemView*)
 T CPlayerInventory::ItemShouldBeIncluded(int)
 T CPlayerInventory::NotifyHasNewItems()
 T CPlayerInventory::OnHasNewItems()
 T CPlayerInventory::OnItemChangedPosition(CEconItemView*, unsigned int)
 T CPlayerInventory::RemoveItem(unsigned long long)
 T CPlayerInventory::RemoveListener(GCSDK::ISharedObjectListener*)
 T CPlayerInventory::SOCacheSubscribed(CSteamID const&)
 T CPlayerInventory::SOCacheUnsubscribed(CSteamID const&)
 T CPlayerInventory::SOClear()
 T CPlayerInventory::SOCreated(CSteamID const&, GCSDK::CSharedObject const*)
 T CPlayerInventory::SODestroyed(CSteamID const&, GCSDK::CSharedObject const*)
 T CPlayerInventory::SOUpdated(CSteamID const&, GCSDK::CSharedObject const*)
 T CPlayerInventory::ValidateInventoryPositions()
 T CPlayerInventory::~CPlayerInventory()
 T CPlayerLocalData::CPlayerLocalData()
 T CPlayerLocalData::NetworkStateChanged()
 T CPlayerLocalData::NetworkStateChanged(void*)
 T CPlayerLocalData::NetworkVar_m_PlayerFog::NetworkStateChanged()
 T CPlayerLocalData::NetworkVar_m_PlayerFog::NetworkStateChanged(void*)
 T CPlayerLocalData::NetworkVar_m_audio::NetworkStateChanged()
 T CPlayerLocalData::NetworkVar_m_audio::NetworkStateChanged(void*)
 T CPlayerLocalData::NetworkVar_m_skybox3d::NetworkStateChanged()
 T CPlayerLocalData::NetworkVar_m_skybox3d::NetworkStateChanged(void*)
 T CPlayerLocalData::UpdateAreaBits(CBasePlayer*, unsigned char*)
 T CPlayerMove::CPlayerMove()
 T CPlayerMove::CheckMovingGround(CBasePlayer*, double)
 T CPlayerMove::FinishCommand(CBasePlayer*)
 T CPlayerMove::FinishMove(CBasePlayer*, CUserCmd*, CMoveData*)
 T CPlayerMove::RunCommand(CBasePlayer*, CUserCmd*, IMoveHelper*)
 T CPlayerMove::RunPostThink(CBasePlayer*)
 T CPlayerMove::RunPreThink(CBasePlayer*)
 T CPlayerMove::RunThink(CBasePlayer*, double)
 T CPlayerMove::SetupMove(CBasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T CPlayerMove::StartCommand(CBasePlayer*, CUserCmd*)
 T CPlayerMove::~CPlayerMove()
 T CPlayerPickupController::GetDataDescMap()
 T CPlayerPickupController::InitGrabController(CBasePlayer*, CBaseEntity*)
 T CPlayerPickupController::OnControls(CBaseEntity*)
 T CPlayerPickupController::OnRestore()
 T CPlayerPickupController::Shutdown(bool)
 T CPlayerPickupController::UsePickupController(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CPlayerPickupController::VPhysicsShadowUpdate(IPhysicsObject*)
 T CPlayerPickupController::VPhysicsUpdate(IPhysicsObject*)
 T CPlayerPickupController::~CPlayerPickupController()
 T CPlayerResource::GetDataDescMap()
 T CPlayerResource::GetServerClass()
 T CPlayerResource::ObjectCaps()
 T CPlayerResource::ResourceThink()
 T CPlayerResource::Spawn()
 T CPlayerResource::UpdatePlayerData()
 T CPlayerResource::UpdateTransmitState()
 T CPlayerResource::YouForgotToImplementOrDeclareServerClass()
 T CPlayerResource::~CPlayerResource()
 T CPlayerVoiceListener::AddPlayerSpeakTime(CBasePlayer*)
 T CPlayerVoiceListener::GetPlayerLastSpeechTime(int)
 T CPlayerVoiceListener::GetPlayerSilenceDuration(int)
 T CPlayerVoiceListener::LevelInitPreEntity()
 T CPlayerVoiceListener::LevelShutdownPreEntity()
 T CPlayerVoiceListener::ScriptGetPlayerSpeechDuration(int)
 T CPlayerVoiceListener::ScriptIsPlayerSpeaking(int)
 T CPlayerVoiceListener::~CPlayerVoiceListener()
 T CPluginBotManager::CreateBot(char const*)
 T CPluginBotManager::GetBotController(edict_t*)
 T CPluginHelpersCheck::CreateMessage(char const*, edict_t*, DIALOG_TYPE, KeyValues*)
 T CPointAngleSensor* _CreateEntityTemplate<CPointAngleSensor>(CPointAngleSensor*, char const*)
 T CPointAngleSensor::Activate()
 T CPointAngleSensor::DrawDebugTextOverlays()
 T CPointAngleSensor::GetDataDescMap()
 T CPointAngleSensor::InputDisable(inputdata_t&)
 T CPointAngleSensor::InputEnable(inputdata_t&)
 T CPointAngleSensor::InputSetTargetEntity(inputdata_t&)
 T CPointAngleSensor::InputTest(inputdata_t&)
 T CPointAngleSensor::InputToggle(inputdata_t&)
 T CPointAngleSensor::IsFacingWithinTolerance(CBaseEntity*, CBaseEntity*, float, float*)
 T CPointAngleSensor::KeyValue(char const*, char const*)
 T CPointAngleSensor::Spawn()
 T CPointAngleSensor::Think()
 T CPointAngleSensor::~CPointAngleSensor()
 T CPointAngularVelocitySensor::Activate()
 T CPointAngularVelocitySensor::CompareToThreshold(CBaseEntity*, float, bool)
 T CPointAngularVelocitySensor::DrawDebugLines()
 T CPointAngularVelocitySensor::FireCompareOutput(int, CBaseEntity*)
 T CPointAngularVelocitySensor::GetDataDescMap()
 T CPointAngularVelocitySensor::InputTest(inputdata_t&)
 T CPointAngularVelocitySensor::InputTestWithInterval(inputdata_t&)
 T CPointAngularVelocitySensor::SampleAngularVelocity(CBaseEntity*)
 T CPointAngularVelocitySensor::Spawn()
 T CPointAngularVelocitySensor::Think()
 T CPointAngularVelocitySensor::~CPointAngularVelocitySensor()
 T CPointBonusMapsAccessor::Activate()
 T CPointBonusMapsAccessor::GetDataDescMap()
 T CPointBonusMapsAccessor::InputComplete(inputdata_t&)
 T CPointBonusMapsAccessor::InputSave(inputdata_t&)
 T CPointBonusMapsAccessor::InputUnlock(inputdata_t&)
 T CPointBonusMapsAccessor::~CPointBonusMapsAccessor()
 T CPointBroadcastClientCommand::GetDataDescMap()
 T CPointBroadcastClientCommand::InputCommand(inputdata_t&)
 T CPointBroadcastClientCommand::~CPointBroadcastClientCommand()
 T CPointCamera::CPointCamera()
 T CPointCamera::ChangeFOVThink()
 T CPointCamera::GetDataDescMap()
 T CPointCamera::GetServerClass()
 T CPointCamera::InputChangeFOV(inputdata_t&)
 T CPointCamera::InputForceActive(inputdata_t&)
 T CPointCamera::InputForceInactive(inputdata_t&)
 T CPointCamera::InputSetOff(inputdata_t&)
 T CPointCamera::InputSetOn(inputdata_t&)
 T CPointCamera::InputSetOnAndTurnOthersOff(inputdata_t&)
 T CPointCamera::SetActive(bool)
 T CPointCamera::Spawn()
 T CPointCamera::UpdateTransmitState()
 T CPointCamera::YouForgotToImplementOrDeclareServerClass()
 T CPointCamera::~CPointCamera()
 T CPointChangelevel::GetDataDescMap()
 T CPointChangelevel::InputChangeLevel(inputdata_t&)
 T CPointChangelevel::InputChangeLevelPostFade(inputdata_t&)
 T CPointChangelevel::~CPointChangelevel()
 T CPointClientCommand::GetDataDescMap()
 T CPointClientCommand::InputCommand(inputdata_t&)
 T CPointClientCommand::~CPointClientCommand()
 T CPointCombineBallLauncher::CPointCombineBallLauncher()
 T CPointCombineBallLauncher::GetDataDescMap()
 T CPointCombineBallLauncher::InputLaunchBall(inputdata_t&)
 T CPointCombineBallLauncher::Spawn()
 T CPointCombineBallLauncher::SpawnBall()
 T CPointCombineBallLauncher::~CPointCombineBallLauncher()
 T CPointCommentaryNode::Activate()
 T CPointCommentaryNode::CPointCommentaryNode()
 T CPointCommentaryNode::CleanupPostCommentary()
 T CPointCommentaryNode::FinishCommentary(bool)
 T CPointCommentaryNode::GetDataDescMap()
 T CPointCommentaryNode::GetServerClass()
 T CPointCommentaryNode::InputDisable(inputdata_t&)
 T CPointCommentaryNode::InputEnable(inputdata_t&)
 T CPointCommentaryNode::InputStartCommentary(inputdata_t&)
 T CPointCommentaryNode::InputStartUnstoppableCommentary(inputdata_t&)
 T CPointCommentaryNode::Precache()
 T CPointCommentaryNode::SetTransmit(CCheckTransmitInfo*, bool)
 T CPointCommentaryNode::Spawn()
 T CPointCommentaryNode::SpinThink()
 T CPointCommentaryNode::StartCommentary()
 T CPointCommentaryNode::TeleportTo(CBasePlayer*)
 T CPointCommentaryNode::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CPointCommentaryNode::UpdateTransmitState()
 T CPointCommentaryNode::UpdateViewPostThink()
 T CPointCommentaryNode::UpdateViewThink()
 T CPointCommentaryNode::YouForgotToImplementOrDeclareServerClass()
 T CPointCommentaryNode::~CPointCommentaryNode()
 T CPointDevShotCamera::DevShotThink_PostShot()
 T CPointDevShotCamera::DevShotThink_Setup()
 T CPointDevShotCamera::DevShotThink_TakeShot()
 T CPointDevShotCamera::GetDataDescMap()
 T CPointDevShotCamera::Spawn()
 T CPointDevShotCamera::UpdateTransmitState()
 T CPointDevShotCamera::~CPointDevShotCamera()
 T CPointEntity::KeyValue(char const*, char const*)
 T CPointEntity::ObjectCaps()
 T CPointEntity::Spawn()
 T CPointEntity::~CPointEntity()
 T CPointEntityFinder::Activate()
 T CPointEntityFinder::FindByDistance()
 T CPointEntityFinder::FindByRandom()
 T CPointEntityFinder::FindEntity()
 T CPointEntityFinder::GetDataDescMap()
 T CPointEntityFinder::InputFindEntity(inputdata_t&)
 T CPointEntityFinder::~CPointEntityFinder()
 T CPointFutbolShooter::GetDataDescMap()
 T CPointFutbolShooter::InputSetTarget(inputdata_t&)
 T CPointFutbolShooter::InputShootFutbol(inputdata_t&)
 T CPointFutbolShooter::Precache()
 T CPointFutbolShooter::Spawn()
 T CPointFutbolShooter::~CPointFutbolShooter()
 T CPointGamestatsCounter::GetDataDescMap()
 T CPointGamestatsCounter::InputDisable(inputdata_t&)
 T CPointGamestatsCounter::InputEnable(inputdata_t&)
 T CPointGamestatsCounter::InputIncrement(inputdata_t&)
 T CPointGamestatsCounter::InputSetName(inputdata_t&)
 T CPointGamestatsCounter::~CPointGamestatsCounter()
 T CPointHurt::GetDataDescMap()
 T CPointHurt::HurtThink()
 T CPointHurt::InputHurt(inputdata_t&)
 T CPointHurt::InputToggle(inputdata_t&)
 T CPointHurt::InputTurnOff(inputdata_t&)
 T CPointHurt::InputTurnOn(inputdata_t&)
 T CPointHurt::Precache()
 T CPointHurt::Spawn()
 T CPointHurt::~CPointHurt()
 T CPointPlayerMoveConstraint::Activate()
 T CPointPlayerMoveConstraint::ConstraintThink()
 T CPointPlayerMoveConstraint::GetDataDescMap()
 T CPointPlayerMoveConstraint::InputTurnOff(inputdata_t&)
 T CPointPlayerMoveConstraint::InputTurnOn(inputdata_t&)
 T CPointPlayerMoveConstraint::UpdateTransmitState()
 T CPointPlayerMoveConstraint::~CPointPlayerMoveConstraint()
 T CPointProximitySensor::Activate()
 T CPointProximitySensor::GetDataDescMap()
 T CPointProximitySensor::InputDisable(inputdata_t&)
 T CPointProximitySensor::InputEnable(inputdata_t&)
 T CPointProximitySensor::InputSetTargetEntity(inputdata_t&)
 T CPointProximitySensor::InputToggle(inputdata_t&)
 T CPointProximitySensor::Think()
 T CPointProximitySensor::~CPointProximitySensor()
 T CPointServerCommand::GetDataDescMap()
 T CPointServerCommand::InputCommand(inputdata_t&)
 T CPointServerCommand::~CPointServerCommand()
 T CPointSpotlight::Activate()
 T CPointSpotlight::ComputeRenderInfo()
 T CPointSpotlight::CreateEfficientSpotlight()
 T CPointSpotlight::GetDataDescMap()
 T CPointSpotlight::InputForceUpdate(inputdata_t&)
 T CPointSpotlight::InputLightOff(inputdata_t&)
 T CPointSpotlight::InputLightOn(inputdata_t&)
 T CPointSpotlight::InputSetColor(inputdata_t&)
 T CPointSpotlight::OnEntityEvent(EntityEvent_t, void*)
 T CPointSpotlight::Precache()
 T CPointSpotlight::Spawn()
 T CPointSpotlight::SpotlightCreate()
 T CPointSpotlight::SpotlightCurrentPos()
 T CPointSpotlight::SpotlightDestroy()
 T CPointSpotlight::SpotlightThink()
 T CPointSpotlight::SpotlightUpdate()
 T CPointSpotlight::UpdateTransmitState()
 T CPointSpotlight::~CPointSpotlight()
 T CPointSurvey::Activate()
 T CPointSurvey::GetDataDescMap()
 T CPointSurvey::GetServerClass()
 T CPointSurvey::InputShowSurvey(inputdata_t&)
 T CPointSurvey::OnSurveyCompleted()
 T CPointSurvey::YouForgotToImplementOrDeclareServerClass()
 T CPointSurvey::~CPointSurvey()
 T CPointTeleport::Activate()
 T CPointTeleport::DoTeleport(inputdata_t&, Vector const&, QAngle const&, bool)
 T CPointTeleport::GetDataDescMap()
 T CPointTeleport::InputTeleport(inputdata_t&)
 T CPointTeleport::InputTeleportEntity(inputdata_t&)
 T CPointTeleport::InputTeleportToCurrentPos(inputdata_t&)
 T CPointTeleport::ObjectCaps()
 T CPointTeleport::~CPointTeleport()
 T CPointTemplate::AddTemplate(CBaseEntity*, char const*, int)
 T CPointTemplate::AllowNameFixup()
 T CPointTemplate::CreateInstance(Vector const&, QAngle const&, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >*, CBaseEntity*, bool)
 T CPointTemplate::CreationComplete(CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> > const&)
 T CPointTemplate::FinishBuildingTemplates()
 T CPointTemplate::GetDataDescMap()
 T CPointTemplate::GetNumTemplateEntities()
 T CPointTemplate::GetNumTemplates()
 T CPointTemplate::GetTemplateEntity(int)
 T CPointTemplate::GetTemplateIndexForTemplate(int)
 T CPointTemplate::InputForceSpawn(inputdata_t&)
 T CPointTemplate::PerformPrecache()
 T CPointTemplate::Precache()
 T CPointTemplate::ShouldRemoveTemplateEntities()
 T CPointTemplate::Spawn()
 T CPointTemplate::StartBuildingTemplates()
 T CPointTemplate::~CPointTemplate()
 T CPointTemplatePrecacher::LevelInitPreEntity()
 T CPointTemplatePrecacher::Shutdown()
 T CPointTemplatePrecacher::~CPointTemplatePrecacher()
 T CPointVelocitySensor::Activate()
 T CPointVelocitySensor::GetDataDescMap()
 T CPointVelocitySensor::InputDisable(inputdata_t&)
 T CPointVelocitySensor::InputEnable(inputdata_t&)
 T CPointVelocitySensor::SampleVelocity()
 T CPointVelocitySensor::Spawn()
 T CPointVelocitySensor::Think()
 T CPointVelocitySensor::~CPointVelocitySensor()
 T CPolyhedron_AllocByNew::Release()
 T CPolyhedron_AllocByNew::~CPolyhedron_AllocByNew()
 T CPolyhedron_LumpedMemory::Release()
 T CPolyhedron_LumpedMemory::~CPolyhedron_LumpedMemory()
 T CPolyhedron_TempMemory::Release()
 T CPolyhedron_TempMemory::~CPolyhedron_TempMemory()
 T CPortal2ItemDefinition::BInitFromKV(KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CPortal2ItemDefinition::BInitFromTestItemKVs(int, KeyValues*, CEconItemSchema&)
 T CPortal2ItemDefinition::CopyPolymorphic(CEconItemDefinition const*)
 T CPortal2ItemDefinition::GeneratePrecacheModelStrings(bool, CUtlVector<char const*, CUtlMemory<char const*, int> >*)
 T CPortal2ItemDefinition::GetLoadoutSlot(int) const
 T CPortal2ItemDefinition::IsContentStreamable() const
 T CPortal2ItemDefinition::~CPortal2ItemDefinition()
 T CPortal2ItemSchema::BInitSchema(KeyValues*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CPortal2ItemSchema::CPortal2ItemSchema()
 T CPortal2ItemSchema::CreateEconItemDefinition()
 T CPortal2ItemSchema::~CPortal2ItemSchema()
 T CPortal2ItemSystem::~CPortal2ItemSystem()
 T CPortal2ResearchDataTracker::Event_LevelCompleted()
 T CPortal2ResearchDataTracker::Event_PlayerGaveUp()
 T CPortal2ResearchDataTracker::IncrementDeath(CPortal_Player*)
 T CPortal2ResearchDataTracker::IncrementPortalFired(CPortal_Player*)
 T CPortal2ResearchDataTracker::IncrementStepsTaken(CPortal_Player*)
 T CPortal2ResearchDataTracker::Init()
 T CPortal2ResearchDataTracker::LevelInitPostEntity()
 T CPortal2ResearchDataTracker::Name()
 T CPortal2ResearchDataTracker::OnEvent(KeyValues*)
 T CPortal2ResearchDataTracker::SetPlayerName(CPortal_Player*)
 T CPortal2ResearchDataTracker::Shutdown()
 T CPortal2ResearchDataTracker::WriteResearchDataToFile(bool)
 T CPortal2ResearchDataTracker::~CPortal2ResearchDataTracker()
 T CPortalButtonTrigger::Create(Vector const&, QAngle const&, Vector const&, Vector const&, CPropFloorButton*)
 T CPortalButtonTrigger::EndTouch(CBaseEntity*)
 T CPortalButtonTrigger::GetDataDescMap()
 T CPortalButtonTrigger::OnEndTouchAll(CBaseEntity*)
 T CPortalButtonTrigger::OnStartTouchAll(CBaseEntity*)
 T CPortalButtonTrigger::PassesTriggerFilters(CBaseEntity*)
 T CPortalButtonTrigger::Spawn()
 T CPortalButtonTrigger::StartTouch(CBaseEntity*)
 T CPortalButtonTrigger::~CPortalButtonTrigger()
 T CPortalCollideableEnumerator::CPortalCollideableEnumerator(CPortal_Base2D const*)
 T CPortalCollideableEnumerator::EnumElement(IHandleEntity*)
 T CPortalCredits::GetDataDescMap()
 T CPortalCredits::InputRollCredits(inputdata_t&)
 T CPortalCredits::InputRollOutroCredits(inputdata_t&)
 T CPortalCredits::InputRollPortalOutroCredits(inputdata_t&)
 T CPortalCredits::InputSetLogoLength(inputdata_t&)
 T CPortalCredits::InputShowLogo(inputdata_t&)
 T CPortalCredits::OnRestore()
 T CPortalCredits::Precache()
 T CPortalCredits::RollOutroCredits()
 T CPortalCredits::RollPortalOutroCredits()
 T CPortalCredits::Spawn()
 T CPortalCredits::~CPortalCredits()
 T CPortalGameMovement::AddGravity()
 T CPortalGameMovement::AirAccelerate(Vector&, float, float)
 T CPortalGameMovement::AirMove()
 T CPortalGameMovement::AirPortalFunnel(Vector&, Vector const&, float, float)
 T CPortalGameMovement::CanUnDuckJump(CGameTrace&)
 T CPortalGameMovement::CanUnduck()
 T CPortalGameMovement::CategorizeGroundSurface(CGameTrace&)
 T CPortalGameMovement::CategorizePosition()
 T CPortalGameMovement::CheckJumpButton()
 T CPortalGameMovement::CheckParameters()
 T CPortalGameMovement::CheckStuck()
 T CPortalGameMovement::CheckWallImpact(Vector&)
 T CPortalGameMovement::ClipVelocity(Vector&, Vector&, Vector&, float)
 T CPortalGameMovement::Duck()
 T CPortalGameMovement::FinishDuck()
 T CPortalGameMovement::FinishGravity()
 T CPortalGameMovement::FinishUnDuck()
 T CPortalGameMovement::FinishUnDuckJump(CGameTrace&)
 T CPortalGameMovement::FixPlayerCrouchStuck(bool)
 T CPortalGameMovement::Friction()
 T CPortalGameMovement::FullWalkMove()
 T CPortalGameMovement::GameHasLadders() const
 T CPortalGameMovement::GetPlayerMaxs() const
 T CPortalGameMovement::GetPlayerMaxs(bool) const
 T CPortalGameMovement::GetPlayerMins() const
 T CPortalGameMovement::GetPlayerMins(bool) const
 T CPortalGameMovement::GetPlayerViewOffset(bool) const
 T CPortalGameMovement::GroundPortalFunnel(Vector&, Vector const&, Vector const&, float, float)
 T CPortalGameMovement::HandlePortalling()
 T CPortalGameMovement::IsInPortalFunnelVolume(Vector const&, CPortal_Base2D const*, float, float) const
 T CPortalGameMovement::OnTryPlayerMoveCollision(CGameTrace&)
 T CPortalGameMovement::PlayerCeilingImpactEffects(float)
 T CPortalGameMovement::PlayerMove()
 T CPortalGameMovement::PlayerRoughLandingEffects(float)
 T CPortalGameMovement::PlayerShouldFunnel(CPortal_Base2D const*, Vector const&, Vector const&) const
 T CPortalGameMovement::PlayerWallImpactEffects(float, float)
 T CPortalGameMovement::PortalFunnel(Vector const&)
 T CPortalGameMovement::ProcessMovement(CBasePlayer*, CMoveData*)
 T CPortalGameMovement::SetDuckedEyeOffset(float)
 T CPortalGameMovement::SetGroundEntity(CGameTrace*)
 T CPortalGameMovement::SetupMovementBounds(CMoveData*)
 T CPortalGameMovement::StartGravity()
 T CPortalGameMovement::StartUnDuckJump()
 T CPortalGameMovement::StayOnGround()
 T CPortalGameMovement::StepMove(Vector&, CGameTrace&)
 T CPortalGameMovement::TBeamMove()
 T CPortalGameMovement::TestPlayerPosition(Vector const&, int, CGameTrace&)
 T CPortalGameMovement::TracePlayerBBox(Vector const&, Vector const&, unsigned int, int, CGameTrace&)
 T CPortalGameMovement::TracePlayerBBox(Vector const&, Vector const&, unsigned int, int, CTrace_PlayerAABB_vs_Portals&)
 T CPortalGameMovement::TryPlayerMove(Vector*, CGameTrace*)
 T CPortalGameMovement::UpdateDuckJumpEyeOffset()
 T CPortalGameMovement::WalkMove()
 T CPortalGameMovement::WaterMove()
 T CPortalGameMovement::~CPortalGameMovement()
 T CPortalGameRules::AllowDamage(CBaseEntity*, CTakeDamageInfo const&)
 T CPortalGameRules::CPortalGameRules()
 T CPortalGameRules::ClientCommand(CBaseEntity*, CCommand const&)
 T CPortalGameRules::FlPlayerFallDamage(CBasePlayer*)
 T CPortalGameRules::GetGameDescription()
 T CPortalGameRules::IsSavingAllowed()
 T CPortalGameRules::RegisterScriptFunctions()
 T CPortalGameRules::ShouldBurningPropsEmitLight()
 T CPortalGameRules::ShouldCollide(int, int)
 T CPortalGameRules::~CPortalGameRules()
 T CPortalGameRulesProxy::GetServerClass()
 T CPortalGameRulesProxy::YouForgotToImplementOrDeclareServerClass()
 T CPortalGameRulesProxy::~CPortalGameRulesProxy()
 T CPortalGameStats::AddDataForSend(KeyValues*, StatSendType_t)
 T CPortalGameStats::AddMapData()
 T CPortalGameStats::CPortalGameStats()
 T CPortalGameStats::Event_CameraDetach()
 T CPortalGameStats::Event_Catapult_LaunchByDirection(CPortal_Player*, Vector&)
 T CPortalGameStats::Event_Catapult_LaunchByTarget(CPortal_Player*, Vector&)
 T CPortalGameStats::Event_CubeSpawn()
 T CPortalGameStats::Event_LevelInit()
 T CPortalGameStats::Event_LevelShutdown(float)
 T CPortalGameStats::Event_OnFizzled(unsigned int, Vector const&, CPortal_Player*)
 T CPortalGameStats::Event_PlayerDeath(CPortal_Player*)
 T CPortalGameStats::Event_PlayerStuck(CPortal_Player*)
 T CPortalGameStats::Event_PlayerTaunt(CPortal_Player*, char const*)
 T CPortalGameStats::Event_PortalPlacement(CPortal_Player*, Vector const&, char, bool)
 T CPortalGameStats::Event_PortalTeleport(CPortal_Player*)
 T CPortalGameStats::Event_TractorBeam_Project(Vector const&, Vector const&, CPortal_Player*)
 T CPortalGameStats::Event_TurretDamage(float)
 T CPortalGameStats::FireGameEvent(IGameEvent*)
 T CPortalGameStats::GetStatContainerList()
 T CPortalGameStats::Init()
 T CPortalGameStats::OnEvent(KeyValues*)
 T CPortalGameStats::OnSessionEnd()
 T CPortalGameStats::OnSessionStart()
 T CPortalGameStats::ShouldSendDataOnAppShutdown()
 T CPortalGameStats::ShouldSendDataOnLevelShutdown()
 T CPortalGameStats::Shutdown()
 T CPortalGameStats::SubmitGameStats(KeyValues*)
 T CPortalGameStats::UseOldFormat()
 T CPortalGameStats::~CPortalGameStats()
 T CPortalInventoryManager::AddBaseItemCriteria(baseitemcriteria_t*, CItemSelectionCriteria*)
 T CPortalInventoryManager::CPortalInventoryManager()
 T CPortalInventoryManager::DoClassMapping(unsigned short, unsigned char)
 T CPortalInventoryManager::GenerateBaseItems()
 T CPortalInventoryManager::PostInit()
 T CPortalInventoryManager::~CPortalInventoryManager()
 T CPortalLaser::Activate()
 T CPortalLaser::BeamDamage(CGameTrace*)
 T CPortalLaser::CPortalLaser()
 T CPortalLaser::ClosestPointOnLineSegment(Vector const&)
 T CPortalLaser::CreateHelperEntities()
 T CPortalLaser::CreateSoundProxies()
 T CPortalLaser::CreateVPhysics()
 T CPortalLaser::DamageEntitiesAlongLaser(CUtlVector<CPortalLaser::PortalLaserInfo_t, CUtlMemory<CPortalLaser::PortalLaserInfo_t, int> > const&, bool)
 T CPortalLaser::FireLaser(Vector const&, Vector const&, CBaseEntity*)
 T CPortalLaser::GetDataDescMap()
 T CPortalLaser::GetEntitiesAlongLaser(Vector const&, Vector const&, Vector*, CUtlVector<CPortalLaser::PortalLaserInfo_t, CUtlMemory<CPortalLaser::PortalLaserInfo_t, int> >&, bool)
 T CPortalLaser::GetEntity()
 T CPortalLaser::GetServerClass()
 T CPortalLaser::InputToggle(inputdata_t&)
 T CPortalLaser::InputTurnOff(inputdata_t&)
 T CPortalLaser::InputTurnOn(inputdata_t&)
 T CPortalLaser::Precache()
 T CPortalLaser::ReflectLaserFromEntity(CBaseEntity*)
 T CPortalLaser::Spawn()
 T CPortalLaser::StrikeEntitiesAlongLaser(Vector const&, Vector const&, Vector*)
 T CPortalLaser::StrikeThink()
 T CPortalLaser::TraceLaser(bool, Vector const&, Vector const&, float&, CGameTrace&, CUtlVector<CPortalLaser::PortalLaserInfo_t, CUtlMemory<CPortalLaser::PortalLaserInfo_t, int> >&, Vector*)
 T CPortalLaser::TurnOff()
 T CPortalLaser::TurnOn()
 T CPortalLaser::TurnOnGlow()
 T CPortalLaser::UpdateNextLaser(Vector const&, Vector const&, CBaseEntity*)
 T CPortalLaser::UpdateOnRemove()
 T CPortalLaser::UpdateSoundPosition(Vector const&, Vector const&)
 T CPortalLaser::UpdateTransmitState()
 T CPortalLaser::YouForgotToImplementOrDeclareServerClass()
 T CPortalLaser::~CPortalLaser()
 T CPortalLaserTarget::DisableThink()
 T CPortalLaserTarget::GetDataDescMap()
 T CPortalLaserTarget::OnTakeDamage(CTakeDamageInfo const&)
 T CPortalLaserTarget::Spawn()
 T CPortalLaserTarget::~CPortalLaserTarget()
 T CPortalMPGameRules::AddBranchLevel(int, char const*)
 T CPortalMPGameRules::AddCreditsName(char const*)
 T CPortalMPGameRules::CPortalMPGameRules()
 T CPortalMPGameRules::CanHavePlayerItem(CBasePlayer*, CBaseCombatWeapon*)
 T CPortalMPGameRules::ClientCommand(CBaseEntity*, CCommand const&)
 T CPortalMPGameRules::ClientCommandKeyValues(edict_t*, KeyValues*)
 T CPortalMPGameRules::ClientDisconnected(edict_t*)
 T CPortalMPGameRules::ClientSettingsChanged(CBasePlayer*)
 T CPortalMPGameRules::CreateStandardEntities()
 T CPortalMPGameRules::DeathNotice(CBasePlayer*, CTakeDamageInfo const&)
 T CPortalMPGameRules::FPlayerCanRespawn(CBasePlayer*)
 T CPortalMPGameRules::FShouldSwitchWeapon(CBasePlayer*, CBaseCombatWeapon*)
 T CPortalMPGameRules::FlItemRespawnTime(CItem*)
 T CPortalMPGameRules::FlPlayerFallDamage(CBasePlayer*)
 T CPortalMPGameRules::FlWeaponRespawnTime(CBaseCombatWeapon*)
 T CPortalMPGameRules::FlWeaponTryRespawn(CBaseCombatWeapon*)
 T CPortalMPGameRules::ForceSplitScreenPlayersOnToSameTeam()
 T CPortalMPGameRules::FrameUpdatePostEntityThink()
 T CPortalMPGameRules::GetChatPrefix(bool, CBasePlayer*)
 T CPortalMPGameRules::GetEncryptionKey()
 T CPortalMPGameRules::GetGameDescription()
 T CPortalMPGameRules::GetLaserTurretDamage()
 T CPortalMPGameRules::GetLaserTurretMoveSpeed()
 T CPortalMPGameRules::GetRocketTurretDamage()
 T CPortalMPGameRules::GetViewVectors() const
 T CPortalMPGameRules::GoToIntermission()
 T CPortalMPGameRules::InitDefaultAIRelationships()
 T CPortalMPGameRules::Is2GunsCoOp()
 T CPortalMPGameRules::IsCoOp()
 T CPortalMPGameRules::IsCommunityCoopHub()
 T CPortalMPGameRules::IsCreditsMap()
 T CPortalMPGameRules::IsLobbyMap()
 T CPortalMPGameRules::IsStartMap()
 T CPortalMPGameRules::IsTeamplay()
 T CPortalMPGameRules::IsVS()
 T CPortalMPGameRules::LevelInitPreEntity()
 T CPortalMPGameRules::PlayerKilled(CBasePlayer*, CTakeDamageInfo const&)
 T CPortalMPGameRules::PlayerRelationship(CBaseEntity*, CBaseEntity*)
 T CPortalMPGameRules::PlayerSpawn(CBasePlayer*)
 T CPortalMPGameRules::PlayerWinRPS(CBasePlayer*)
 T CPortalMPGameRules::Precache()
 T CPortalMPGameRules::RegisterScriptFunctions()
 T CPortalMPGameRules::SaveMPStats()
 T CPortalMPGameRules::SendAllMapCompleteData()
 T CPortalMPGameRules::SetAllMapsComplete(bool, int)
 T CPortalMPGameRules::SetBranchComplete(int, bool)
 T CPortalMPGameRules::SetMapComplete(char const*, bool)
 T CPortalMPGameRules::SetMapCompleteData(int)
 T CPortalMPGameRules::ShouldCollide(int, int)
 T CPortalMPGameRules::StartPlayerTransitionThinks()
 T CPortalMPGameRules::SupressSpawnPortalgun(int)
 T CPortalMPGameRules::Think()
 T CPortalMPGameRules::VecItemRespawnAngles(CItem*)
 T CPortalMPGameRules::VecItemRespawnSpot(CItem*)
 T CPortalMPGameRules::VecWeaponRespawnSpot(CBaseCombatWeapon*)
 T CPortalMPGameRules::WeaponShouldRespawn(CBaseCombatWeapon*)
 T CPortalMPGameRules::~CPortalMPGameRules()
 T CPortalMPGameRulesProxy::GetDataDescMap()
 T CPortalMPGameRulesProxy::GetServerClass()
 T CPortalMPGameRulesProxy::InputAddBlueTeamScore(inputdata_t&)
 T CPortalMPGameRulesProxy::InputAddRedTeamScore(inputdata_t&)
 T CPortalMPGameRulesProxy::YouForgotToImplementOrDeclareServerClass()
 T CPortalMPGameRulesProxy::~CPortalMPGameRulesProxy()
 T CPortalMPStats::AddData()
 T CPortalMPStats::CPortalMPStats()
 T CPortalMPStats::ClearPerMapStats()
 T CPortalMPStats::FireGameEvent(IGameEvent*)
 T CPortalMPStats::GetStatContainerList()
 T CPortalMPStats::IncrementPlayerDeathsMap(CBaseEntity*)
 T CPortalMPStats::IncrementPlayerPortals(CBaseEntity*)
 T CPortalMPStats::IncrementPlayerPortalsTraveled(CBaseEntity*)
 T CPortalMPStats::IncrementPlayerSteps(CBaseEntity*)
 T CPortalMPStats::IncrementPlayerTauntsUsedMap(CBaseEntity*, int)
 T CPortalMPStats::InitPortalMPStats()
 T CPortalMPStats::InitializeFromMatchSessionSettings()
 T CPortalMPStats::OnEvent(KeyValues*)
 T CPortalMPStats::SavePerMapStats(CBaseEntity*, char const*)
 T CPortalMPStats::SaveStats(CBaseEntity*)
 T CPortalMPStats::SetStats(int, int, int, int)
 T CPortalMPStats::SetTimeToCompleteMap(float)
 T CPortalMPStats::SubmitGameStats(KeyValues*)
 T CPortalMPStats::SubmitOGSEndOfMapStatsForPlayer(CBasePlayer*, char const*)
 T CPortalMPStats::TeamTauntSuccess(char const*)
 T CPortalMPStats::~CPortalMPStats()
 T CPortalMPStatsProxy::GetServerClass()
 T CPortalMPStatsProxy::UpdateTransmitState()
 T CPortalMPStatsProxy::YouForgotToImplementOrDeclareServerClass()
 T CPortalMPStatsProxy::~CPortalMPStatsProxy()
 T CPortalPlayerAnimState::CalcMainActivity()
 T CPortalPlayerAnimState::ClearAnimationState()
 T CPortalPlayerAnimState::DoAnimationEvent(PlayerAnimEvent_t, int)
 T CPortalPlayerAnimState::HandleDucking(Activity&)
 T CPortalPlayerAnimState::HandleDying(Activity&)
 T CPortalPlayerAnimState::HandleJumping(Activity&)
 T CPortalPlayerAnimState::HandleMoving(Activity&)
 T CPortalPlayerAnimState::SetupPoseParameters(CStudioHdr*)
 T CPortalPlayerAnimState::ShouldLongFall() const
 T CPortalPlayerAnimState::Teleport(Vector const*, QAngle const*, CPortal_Player*)
 T CPortalPlayerAnimState::TransformYAWs(matrix3x4_t const&)
 T CPortalPlayerAnimState::TranslateActivity(Activity)
 T CPortalPlayerAnimState::Update(float, float)
 T CPortalPlayerInventory::CPortalPlayerInventory()
 T CPortalPlayerInventory::CanPurchaseItems(int) const
 T CPortalPlayerInventory::DumpInventoryToConsole(bool)
 T CPortalPlayerInventory::ExtractInventorySortPosition(unsigned int)
 T CPortalPlayerInventory::GetItemInLoadout(int, int)
 T CPortalPlayerInventory::GetMaxItemCount() const
 T CPortalPlayerInventory::GetPreviewItemDef() const
 T CPortalPlayerInventory::ItemHasBeenUpdated(CEconItemView*, bool, bool)
 T CPortalPlayerInventory::ItemIsBeingRemoved(CEconItemView*)
 T CPortalPlayerInventory::NotifyHasNewItems()
 T CPortalPlayerInventory::OnHasNewItems()
 T CPortalPlayerInventory::SOUpdated(CSteamID const&, GCSDK::CSharedObject const*)
 T CPortalPlayerInventory::ValidateInventoryPositions()
 T CPortalPlayerLocalData::CPortalPlayerLocalData()
 T CPortalPlayerLocalData::NetworkStateChanged()
 T CPortalPlayerLocalData::NetworkStateChanged(void*)
 T CPortalPlayerLocalData::NetworkVar_m_PaintedPowerTimer::NetworkStateChanged()
 T CPortalPlayerLocalData::NetworkVar_m_PaintedPowerTimer::NetworkStateChanged(void*)
 T CPortalPlayerModelPrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T CPortalPlayerShared::AddCond(int, float)
 T CPortalPlayerShared::CPortalPlayerShared()
 T CPortalPlayerShared::ConditionGameRulesThink()
 T CPortalPlayerShared::InCond(int)
 T CPortalPlayerShared::Init(CPortal_Player*)
 T CPortalPlayerShared::NetworkStateChanged()
 T CPortalPlayerShared::NetworkStateChanged(void*)
 T CPortalPlayerShared::OnConditionAdded(int)
 T CPortalPlayerShared::OnConditionRemoved(int)
 T CPortalPlayerShared::RemoveAllCond()
 T CPortalRaceCheckpoint::ActivatedThink()
 T CPortalRaceCheckpoint::CPortalRaceCheckpoint()
 T CPortalRaceCheckpoint::GetDataDescMap()
 T CPortalRaceCheckpoint::InputActivate(inputdata_t&)
 T CPortalRaceCheckpoint::InputCancelActivate(inputdata_t&)
 T CPortalRaceCheckpoint::InputLock(inputdata_t&)
 T CPortalRaceCheckpoint::InputUnlock(inputdata_t&)
 T CPortalRaceCheckpoint::OnCheckpointActivated()
 T CPortalRaceCheckpoint::OnCheckpointReset(bool)
 T CPortalRaceCheckpoint::Precache()
 T CPortalRaceCheckpoint::Spawn()
 T CPortalRaceCheckpoint::StartSpinningThink()
 T CPortalRaceCheckpoint::StartTouch(CBaseEntity*)
 T CPortalRaceCheckpoint::~CPortalRaceCheckpoint()
 T CPortalRagdoll::CPortalRagdoll()
 T CPortalRagdoll::GetDataDescMap()
 T CPortalRagdoll::GetServerClass()
 T CPortalRagdoll::UpdateTransmitState()
 T CPortalRagdoll::YouForgotToImplementOrDeclareServerClass()
 T CPortalRagdoll::~CPortalRagdoll()
 T CPortalServerDllPropPortalLocator::LocateAllPortals(CUtlVector<IPortalServerDllPropPortalLocator::PortalInfo_t, CUtlMemory<IPortalServerDllPropPortalLocator::PortalInfo_t, int> >&)
 T CPortalSimulator::AddCarvedEntity(CBaseEntity*)
 T CPortalSimulator::AttachTo(CPortalSimulator*)
 T CPortalSimulator::CPortalSimulator()
 T CPortalSimulator::ClearEverything()
 T CPortalSimulator::ClearLinkedEntities()
 T CPortalSimulator::ClearLinkedPhysics()
 T CPortalSimulator::ClearLocalCollision()
 T CPortalSimulator::ClearLocalPhysics()
 T CPortalSimulator::ClearPolyhedrons()
 T CPortalSimulator::CreateLinkedPhysics()
 T CPortalSimulator::CreateLocalCollision()
 T CPortalSimulator::CreateLocalPhysics()
 T CPortalSimulator::CreatePolyhedrons()
 T CPortalSimulator::CreateTubePolyhedrons()
 T CPortalSimulator::CreatedPhysicsObject(IPhysicsObject const*, PS_PhysicsObjectSourceType_t*) const
 T CPortalSimulator::DebugCollisionOverlay(bool, float) const
 T CPortalSimulator::DetachFromLinked()
 T CPortalSimulator::EntityIsInPortalHole(CBaseEntity*) const
 T CPortalSimulator::GetCollideForCarvedEntity(CBaseEntity*) const
 T CPortalSimulator::GetMoveableOwnedEntities(CBaseEntity**, int)
 T CPortalSimulator::GetSimulatorThatCreatedPhysicsObject(IPhysicsObject const*, PS_PhysicsObjectSourceType_t*)
 T CPortalSimulator::GetSimulatorThatOwnsEntity(CBaseEntity const*)
 T CPortalSimulator::IsEntityCarvedByPortal(int) const
 T CPortalSimulator::IsRayInPortalHole(Ray_t const&) const
 T CPortalSimulator::MarkAsOwned(CBaseEntity*)
 T CPortalSimulator::MoveTo(Vector const&, QAngle const&)
 T CPortalSimulator::MovedOrResized(Vector const&, QAngle const&, float, float)
 T CPortalSimulator::NetworkStateChanged()
 T CPortalSimulator::NetworkStateChanged(void*)
 T CPortalSimulator::NetworkVar_m_InternalData::NetworkStateChanged()
 T CPortalSimulator::NetworkVar_m_InternalData::NetworkStateChanged(void*)
 T CPortalSimulator::PostPhysFrame()
 T CPortalSimulator::Post_UTIL_Remove(CBaseEntity*)
 T CPortalSimulator::PrePhysFrame()
 T CPortalSimulator::Pre_UTIL_Remove(CBaseEntity*)
 T CPortalSimulator::ReleaseAllEntityOwnership()
 T CPortalSimulator::ReleaseCarvedEntity(CBaseEntity*)
 T CPortalSimulator::ReleaseOwnershipOfEntity(CBaseEntity*, bool)
 T CPortalSimulator::ReleasePhysicsOwnership(CBaseEntity*, bool, bool)
 T CPortalSimulator::RemoveEntityFromPortalHole(CBaseEntity*)
 T CPortalSimulator::SetCarvedParent(CBaseEntity*)
 T CPortalSimulator::SetCollisionGenerationEnabled(bool)
 T CPortalSimulator::SetPortalSimulatorCallbacks(CPortalSimulatorEventCallbacks*)
 T CPortalSimulator::SetSize(float, float)
 T CPortalSimulator::StartCloningEntityAcrossPortals(CBaseEntity*)
 T CPortalSimulator::StartCloningEntityFromMain(CBaseEntity*)
 T CPortalSimulator::StopCloningEntityAcrossPortals(CBaseEntity*)
 T CPortalSimulator::StopCloningEntityFromMain(CBaseEntity*)
 T CPortalSimulator::TakeOwnershipOfEntity(CBaseEntity*)
 T CPortalSimulator::TakePhysicsOwnership(CBaseEntity*)
 T CPortalSimulator::UpdateLinkMatrix()
 T CPortalSimulator::~CPortalSimulator()
 T CPortalSimulatorEventCallbacks::PortalSimulator_ReleasedOwnershipOfEntity(CBaseEntity*)
 T CPortalSimulatorEventCallbacks::PortalSimulator_ReleasedPhysicsOwnershipOfEntity(CBaseEntity*)
 T CPortalSimulatorEventCallbacks::PortalSimulator_TookOwnershipOfEntity(CBaseEntity*)
 T CPortalSimulatorEventCallbacks::PortalSimulator_TookPhysicsOwnershipOfEntity(CBaseEntity*)
 T CPortalStatsController::GetDataDescMap()
 T CPortalStatsController::LevelEnd(float)
 T CPortalStatsController::LevelStart(float)
 T CPortalStatsController::ObjectCaps()
 T CPortalStatsController::OnLevelEnd(inputdata_t&)
 T CPortalStatsController::OnLevelStart(inputdata_t&)
 T CPortalStatsController::Spawn()
 T CPortalStatsController::Think()
 T CPortalStatsController::~CPortalStatsController()
 T CPortalVortexEffectManager::AddVortexEffect(CPortal_Base2D*, bool)
 T CPortalVortexEffectManager::LevelShutdownPostEntity()
 T CPortalVortexEffectManager::RemoveVortexEffect(CPortal_Base2D*)
 T CPortalVortexEffectManager::~CPortalVortexEffectManager()
 T CPortal_Base2D::Activate()
 T CPortal_Base2D::AddPortalEventListener(CHandle<CBaseEntity>)
 T CPortal_Base2D::CPortal_Base2D()
 T CPortal_Base2D::ComputeFrustumThroughPolygon(Vector const&, VPlane const*, int, VPlane*, int)
 T CPortal_Base2D::ComputeSubVisibility(CPVS_Extender**, int, unsigned char*, int, Vector const&, VPlane const*, int, CPVS_Extender::VisExtensionChain_t*, int*, int)
 T CPortal_Base2D::CreateMicAndSpeaker()
 T CPortal_Base2D::DeactivatePortalNow()
 T CPortal_Base2D::DeactivatePortalOnThink()
 T CPortal_Base2D::EndTouch(CBaseEntity*)
 T CPortal_Base2D::ForceEntityToFitInPortalWall(CBaseEntity*)
 T CPortal_Base2D::GetDataDescMap()
 T CPortal_Base2D::GetExitSpeedRange(CPortal_Base2D*, bool, float&, float&, Vector const&, CBaseEntity*)
 T CPortal_Base2D::GetExtenderEdict() const
 T CPortal_Base2D::GetExtenderNetworkProp()
 T CPortal_Base2D::GetExtensionPVSOrigin()
 T CPortal_Base2D::GetMaximumExitSpeed(bool, bool, bool, Vector const&, CBaseEntity*)
 T CPortal_Base2D::GetMinimumExitSpeed(bool, bool, bool, Vector const&, CBaseEntity*)
 T CPortal_Base2D::GetOldActiveState() const
 T CPortal_Base2D::GetPolyVertCount()
 T CPortal_Base2D::GetServerClass()
 T CPortal_Base2D::IsActive() const
 T CPortal_Base2D::IsActivedAndLinked() const
 T CPortal_Base2D::IsCeilingPortal(float) const
 T CPortal_Base2D::IsExtenderValid()
 T CPortal_Base2D::IsFloorPortal(float) const
 T CPortal_Base2D::NetworkVar_m_PortalSimulator::NetworkStateChanged()
 T CPortal_Base2D::NetworkVar_m_PortalSimulator::NetworkStateChanged(void*)
 T CPortal_Base2D::NewLocation(Vector const&, QAngle const&)
 T CPortal_Base2D::OnEntityTeleportedFromPortal(CBaseEntity*)
 T CPortal_Base2D::OnEntityTeleportedToPortal(CBaseEntity*)
 T CPortal_Base2D::OnPortalDeactivated()
 T CPortal_Base2D::OnRestore()
 T CPortal_Base2D::PhysicsSimulate()
 T CPortal_Base2D::PortalSimulator_ReleasedOwnershipOfEntity(CBaseEntity*)
 T CPortal_Base2D::PortalSimulator_TookOwnershipOfEntity(CBaseEntity*)
 T CPortal_Base2D::PostTeleportTouchingEntity(CBaseEntity*)
 T CPortal_Base2D::PreTeleportTouchingEntity(CBaseEntity*)
 T CPortal_Base2D::PunchPenetratingPlayer(CBasePlayer*)
 T CPortal_Base2D::RemovePortalEventListener(CHandle<CBaseEntity>)
 T CPortal_Base2D::RemovePortalMicAndSpeaker()
 T CPortal_Base2D::Resize(float, float)
 T CPortal_Base2D::SetActive(bool)
 T CPortal_Base2D::SetMobileState(bool)
 T CPortal_Base2D::ShouldTeleportTouchingEntity(CBaseEntity*)
 T CPortal_Base2D::Spawn()
 T CPortal_Base2D::StartTouch(CBaseEntity*)
 T CPortal_Base2D::TeleportTouchingEntity(CBaseEntity*)
 T CPortal_Base2D::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CPortal_Base2D::TestRestingSurfaceThink()
 T CPortal_Base2D::Touch(CBaseEntity*)
 T CPortal_Base2D::UpdateCollisionShape()
 T CPortal_Base2D::UpdateOnRemove()
 T CPortal_Base2D::UpdatePortalLinkage()
 T CPortal_Base2D::UpdatePortalTeleportMatrix()
 T CPortal_Base2D::UpdateTransmitState()
 T CPortal_Base2D::WakeNearbyEntities()
 T CPortal_Base2D::YouForgotToImplementOrDeclareServerClass()
 T CPortal_Base2D::~CPortal_Base2D()
 T CPortal_Base2D_Shared::IsEntityTeleportable(CBaseEntity*)
 T CPortal_Base2D_Shared::ShouldPhysicsCloneNonTeleportableEntityAcrossPortals(CBaseEntity*)
 T CPortal_CollisionEvent::AddDamageEvent(CBaseEntity*, CTakeDamageInfo const&, IPhysicsObject*, bool, Vector const&, Vector const&)
 T CPortal_CollisionEvent::DisablePenetrationSolving_Pop()
 T CPortal_CollisionEvent::DisablePenetrationSolving_Push(bool)
 T CPortal_CollisionEvent::PortalPostSimulationFrame()
 T CPortal_CollisionEvent::PostCollision(vcollisionevent_t*)
 T CPortal_CollisionEvent::PostSimulationFrame()
 T CPortal_CollisionEvent::PreCollision(vcollisionevent_t*)
 T CPortal_CollisionEvent::ShouldCollide(IPhysicsObject*, IPhysicsObject*, void*, void*)
 T CPortal_CollisionEvent::ShouldSolvePenetration(IPhysicsObject*, IPhysicsObject*, void*, void*, float)
 T CPortal_CollisionEvent::~CPortal_CollisionEvent()
 T CPortal_Player::Activate()
 T CPortal_Player::ActivateBouncePower(PaintPowerInfo_t&)
 T CPortal_Player::ActivateSpeedPower(PaintPowerInfo_t&)
 T CPortal_Player::AddScriptedInteraction(ScriptedNPCInteraction_t*)
 T CPortal_Player::AddSurfacePaintPowerInfo(CGameTrace const&, char const*)
 T CPortal_Player::ApplyPortalTeleportation(CPortal_Base2D const*, CMoveData*)
 T CPortal_Player::BecomeRagdollOnClient(Vector const&)
 T CPortal_Player::BodyTarget(Vector const&, bool)
 T CPortal_Player::Break(CBaseEntity*, CTakeDamageInfo const&)
 T CPortal_Player::BridgeRemovedFromUnder()
 T CPortal_Player::BumpWeapon(CBaseCombatWeapon*)
 T CPortal_Player::CPortal_Player()
 T CPortal_Player::CachePaintPowerChoiceResults(CUtlVectorFixed<PaintPowerChoiceResult_t, 5ul> const&)
 T CPortal_Player::ChangeTeam(int)
 T CPortal_Player::CheatImpulseCommands(int)
 T CPortal_Player::CheckToUseBouncePower(PaintPowerInfo_t&)
 T CPortal_Player::ChooseActivePaintPowers(CUtlVector<PaintPowerInfo_t, CUtlMemory<PaintPowerInfo_t, int> >&)
 T CPortal_Player::ChooseBestPaintPowersInRange(CUtlVectorFixed<PaintPowerChoiceResult_t, 5ul>&, PaintPowerInfo_t const*, PaintPowerInfo_t const*, PaintPowerChoiceCriteria_t const&) const
 T CPortal_Player::CleansePaint()
 T CPortal_Player::ClientCommand(CCommand const&)
 T CPortal_Player::ClientDisconnected(edict_t*)
 T CPortal_Player::CreatePlayer(char const*, edict_t*)
 T CPortal_Player::CreateSounds()
 T CPortal_Player::CreateViewModel(int)
 T CPortal_Player::DeactivateBouncePower(PaintPowerInfo_t&)
 T CPortal_Player::DeactivateSpeedPower(PaintPowerInfo_t&)
 T CPortal_Player::DecayQuaternionPunch()
 T CPortal_Player::DeterminePaintContacts()
 T CPortal_Player::DoAnimationEvent(PlayerAnimEvent_t, int)
 T CPortal_Player::EntSelectSpawnPoint()
 T CPortal_Player::Event_Killed(CTakeDamageInfo const&)
 T CPortal_Player::EyeDirection2D()
 T CPortal_Player::EyeDirection3D()
 T CPortal_Player::EyePosition()
 T CPortal_Player::FindRemoteTauntViewpoint(Vector*, QAngle*)
 T CPortal_Player::FindUseEntity(CPortal_Base2D**)
 T CPortal_Player::FindUseEntityThroughPortal()
 T CPortal_Player::FireBullets(FireBulletsInfo_t const&)
 T CPortal_Player::FireConcept(char const*)
 T CPortal_Player::FlashlightIsOn()
 T CPortal_Player::FlashlightTurnOff(bool)
 T CPortal_Player::FlashlightTurnOn(bool)
 T CPortal_Player::ForceDropOfCarriedPhysObjects(CBaseEntity*)
 T CPortal_Player::ForceDuckThisFrame()
 T CPortal_Player::GetActivePortalWeapon() const
 T CPortal_Player::GetAttackSpread(CBaseCombatWeapon*, CBaseEntity*)
 T CPortal_Player::GetDataDescMap()
 T CPortal_Player::GetDuckHullMaxs() const
 T CPortal_Player::GetDuckHullMins() const
 T CPortal_Player::GetHeldObjectMass(IPhysicsObject*)
 T CPortal_Player::GetHullHeight() const
 T CPortal_Player::GetHullMaxs() const
 T CPortal_Player::GetHullMins() const
 T CPortal_Player::GetHullWidth() const
 T CPortal_Player::GetImplicitVerticalStepSpeed() const
 T CPortal_Player::GetPaintGunShootPosition()
 T CPortal_Player::GetPaintPowerAtPoint(Vector const&) const
 T CPortal_Player::GetPlayerMaxs() const
 T CPortal_Player::GetPlayerMins() const
 T CPortal_Player::GetPlayerModelName()
 T CPortal_Player::GetPortalPlayerLocalData() const
 T CPortal_Player::GetPrevGroundNormal() const
 T CPortal_Player::GetScriptDesc()
 T CPortal_Player::GetServerClass()
 T CPortal_Player::GetStandHullMaxs() const
 T CPortal_Player::GetStandHullMins() const
 T CPortal_Player::GetStepSoundVelocities(float*, float*)
 T CPortal_Player::GetWheatleyMonitorDestructionCount()
 T CPortal_Player::GiveDefaultItems()
 T CPortal_Player::GivePlayerPortalGun(bool, bool)
 T CPortal_Player::GivePlayerWearable(char const*)
 T CPortal_Player::GivePortalPlayerItems()
 T CPortal_Player::IncWheatleyMonitorDestructionCount()
 T CPortal_Player::IncrementDistanceTaken()
 T CPortal_Player::IncrementPortalsPlaced(bool)
 T CPortal_Player::IncrementStepsTaken()
 T CPortal_Player::InitVCollision(Vector const&, Vector const&)
 T CPortal_Player::InitialSpawn()
 T CPortal_Player::InventoryUpdated(CPlayerInventory*)
 T CPortal_Player::IsHoldingEntity(CBaseEntity*)
 T CPortal_Player::IsInvalidHandoff(CBaseEntity*)
 T CPortal_Player::IsTaunting()
 T CPortal_Player::IsTryingToSuperJump(PaintPowerInfo_t const*) const
 T CPortal_Player::IsUsingVMGrab()
 T CPortal_Player::IsZoomed()
 T CPortal_Player::ItemPostFrame()
 T CPortal_Player::Jump()
 T CPortal_Player::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CPortal_Player::NetworkPortalTeleportation(CBaseEntity*, CPortal_Base2D*, float, bool)
 T CPortal_Player::NetworkVar_m_PortalLocal::NetworkStateChanged()
 T CPortal_Player::NetworkVar_m_PortalLocal::NetworkStateChanged(void*)
 T CPortal_Player::NetworkVar_m_Shared::NetworkStateChanged()
 T CPortal_Player::NetworkVar_m_Shared::NetworkStateChanged(void*)
 T CPortal_Player::NetworkVar_m_StatsThisLevel::NetworkStateChanged()
 T CPortal_Player::NetworkVar_m_StatsThisLevel::NetworkStateChanged(void*)
 T CPortal_Player::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
 T CPortal_Player::OnBounced(float)
 T CPortal_Player::OnFullyConnected()
 T CPortal_Player::OnPlayerLanded()
 T CPortal_Player::OnRestore()
 T CPortal_Player::OnSave(IEntitySaveUtils*)
 T CPortal_Player::OnTakeDamage(CTakeDamageInfo const&)
 T CPortal_Player::OnTakeDamage_Alive(CTakeDamageInfo const&)
 T CPortal_Player::Paint(PaintPowerType, Vector const&)
 T CPortal_Player::ParseScriptedInteractions()
 T CPortal_Player::PickTeam()
 T CPortal_Player::PickupObject(CBaseEntity*, bool)
 T CPortal_Player::PlayCoopPingEffect()
 T CPortal_Player::PlayCoopStepSound(Vector const&, int, float)
 T CPortal_Player::PlayPaintSounds(CUtlVectorFixed<PaintPowerChoiceResult_t, 5ul> const&)
 T CPortal_Player::PlayScene(char const*, float, ResponseRules::CRR_Response*, IRecipientFilter*)
 T CPortal_Player::PlayStepSound(Vector&, surfacedata_t*, float, bool)
 T CPortal_Player::PlayUseDenySound()
 T CPortal_Player::PlayerCatchPatnerNotConnectingThink()
 T CPortal_Player::PlayerDeathThink()
 T CPortal_Player::PlayerRunCommand(CUserCmd*, IMoveHelper*)
 T CPortal_Player::PlayerTransitionCompleteThink()
 T CPortal_Player::PlayerUse()
 T CPortal_Player::PollForUseEntity(bool, CBaseEntity**, CPortal_Base2D**)
 T CPortal_Player::PostTeleportationCameraFixup(CPortal_Base2D const*)
 T CPortal_Player::PostThink()
 T CPortal_Player::PreThink()
 T CPortal_Player::Precache()
 T CPortal_Player::PredictPaintContacts(Vector const&, Vector const&, Vector const&, Vector const&, float, char const*)
 T CPortal_Player::PredictedBounce()
 T CPortal_Player::PreventCrouchJump(CUserCmd*)
 T CPortal_Player::Reorient(QAngle&)
 T CPortal_Player::ResetThisLevelStats()
 T CPortal_Player::RespawnPlayer()
 T CPortal_Player::Restore(IRestore&)
 T CPortal_Player::RotateUpVector(Vector&, Vector&)
 T CPortal_Player::SOCacheUnsubscribed(CSteamID const&)
 T CPortal_Player::SelectItem(char const*, int)
 T CPortal_Player::SetAirDuck(bool)
 T CPortal_Player::SetAnimation(PLAYER_ANIM)
 T CPortal_Player::SetEyeOffset(Vector const&, Vector const&)
 T CPortal_Player::SetFogController(CFogController*)
 T CPortal_Player::SetForcedGrabControllerType(ForcedGrabControllerType)
 T CPortal_Player::SetHeldObjectOnOppositeSideOfPortal(bool)
 T CPortal_Player::SetHullHeight(float)
 T CPortal_Player::SetImplicitVerticalStepSpeed(float)
 T CPortal_Player::SetInTractorBeam(CTrigger_TractorBeam*)
 T CPortal_Player::SetInputVector(Vector const&)
 T CPortal_Player::SetJumpedThisFrame(bool)
 T CPortal_Player::SetLeaveTractorBeam(CTrigger_TractorBeam*, bool)
 T CPortal_Player::SetMotionBlurAmount(float)
 T CPortal_Player::SetPlayerModel()
 T CPortal_Player::SetPrevGroundNormal(Vector const&)
 T CPortal_Player::SetQuaternionPunch(Quaternion const&)
 T CPortal_Player::SetTeamTauntState(int)
 T CPortal_Player::SetUseKeyCooldownTime(float)
 T CPortal_Player::SetupBones(matrix3x4a_t*, int)
 T CPortal_Player::SetupVisibility(CBaseEntity*, unsigned char*, int)
 T CPortal_Player::SharedSpawn()
 T CPortal_Player::ShouldCollide(int, int) const
 T CPortal_Player::ShouldDropActiveWeaponWhenKilled()
 T CPortal_Player::ShutdownUseEntity()
 T CPortal_Player::SnapCamera(StickCameraState, bool)
 T CPortal_Player::SolveTeamTauntPositionAndAngles(CPortal_Player*)
 T CPortal_Player::Spawn()
 T CPortal_Player::StartTaunt()
 T CPortal_Player::StopLoopingSounds()
 T CPortal_Player::SwapThink()
 T CPortal_Player::Taunt(char const*, bool)
 T CPortal_Player::Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T CPortal_Player::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)
 T CPortal_Player::Touch(CBaseEntity*)
 T CPortal_Player::TryToChangeCollisionBounds(Vector const&, Vector const&, Vector const&, Vector const&)
 T CPortal_Player::TurnOffPotatos()
 T CPortal_Player::TurnOnPotatos()
 T CPortal_Player::UnDuck()
 T CPortal_Player::UpdateAirInputScaleFadeIn()
 T CPortal_Player::UpdateCollisionBounds()
 T CPortal_Player::UpdateInAirState()
 T CPortal_Player::UpdateInventory(bool)
 T CPortal_Player::UpdateOnRemove()
 T CPortal_Player::UpdatePaintedPower()
 T CPortal_Player::UpdatePortalPlaneSounds()
 T CPortal_Player::UpdatePortalViewAreaBits(unsigned char*, int)
 T CPortal_Player::UpdateSecondsTaken()
 T CPortal_Player::UpdateVMGrab(CBaseEntity*)
 T CPortal_Player::UpdateWooshSounds()
 T CPortal_Player::UseBouncePower(PaintPowerInfo_t&)
 T CPortal_Player::UseFoundEntity(CBaseEntity*, bool)
 T CPortal_Player::UseSpeedPower(PaintPowerInfo_t&)
 T CPortal_Player::ValidateTeamTaunt(CPortal_Player*, Vector&, QAngle&, Vector&, QAngle&, bool)
 T CPortal_Player::VerifySOCache()
 T CPortal_Player::WantsLagCompensationOnEntity(CBasePlayer const*, CUserCmd const*, CBitVec<2048> const*) const
 T CPortal_Player::WantsToSwapGuns()
 T CPortal_Player::WantsVMGrab()
 T CPortal_Player::Weapon_Equip(CBaseCombatWeapon*)
 T CPortal_Player::Weapon_OwnsThisType(char const*, int) const
 T CPortal_Player::Weapon_ShootPosition()
 T CPortal_Player::Weapon_Switch(CBaseCombatWeapon*, int)
 T CPortal_Player::WorldSpaceCenter() const
 T CPortal_Player::YouForgotToImplementOrDeclareServerClass()
 T CPortal_Player::ZoomIn()
 T CPortal_Player::ZoomOut()
 T CPortal_Player::~CPortal_Player()
 T CPortal_PointPush::Activate()
 T CPortal_PointPush::CreatePortalVortexEffect(Vector const&, CPortal_Base2D*)
 T CPortal_PointPush::DrawDebugGeometryOverlays()
 T CPortal_PointPush::GetDataDescMap()
 T CPortal_PointPush::GetServerClass()
 T CPortal_PointPush::InputDisable(inputdata_t&)
 T CPortal_PointPush::InputEnable(inputdata_t&)
 T CPortal_PointPush::NotifyPortalEvent(PortalEvent_t, CPortal_Base2D*)
 T CPortal_PointPush::PushEntitiesAtPoint(Vector const&, QAngle const&, CPortal_Base2D*)
 T CPortal_PointPush::PushEntity(CBaseEntity*, Vector const&)
 T CPortal_PointPush::PushPaintBlobsAtPoint(Vector const&, QAngle const&, CPortal_Base2D*)
 T CPortal_PointPush::PushThink()
 T CPortal_PointPush::TestWithinCone(Vector const&, Vector const&, QAngle const&, float)
 T CPortal_PointPush::UpdateTransmitState()
 T CPortal_PointPush::YouForgotToImplementOrDeclareServerClass()
 T CPortal_PointPush::~CPortal_PointPush()
 T CPortal_UI_Controller::LevelInitPostEntity()
 T CPortal_UI_Controller::LevelShutdownPreEntity()
 T CPortal_UI_Controller::Name()
 T CPortal_UI_Controller::OnLevelEnd(float)
 T CPortal_UI_Controller::OnLevelStart(float)
 T CPortal_UI_Controller::~CPortal_UI_Controller()
 T CPoseController::BuildPoseIndexList()
 T CPoseController::BuildPropList()
 T CPoseController::GetDataDescMap()
 T CPoseController::GetServerClass()
 T CPoseController::InputGetFMod(inputdata_t&)
 T CPoseController::InputRandomizeFMod(inputdata_t&)
 T CPoseController::InputSetCycleFrequency(inputdata_t&)
 T CPoseController::InputSetFModAmplitude(inputdata_t&)
 T CPoseController::InputSetFModRate(inputdata_t&)
 T CPoseController::InputSetFModTimeOffset(inputdata_t&)
 T CPoseController::InputSetFModType(inputdata_t&)
 T CPoseController::InputSetInterpolationTime(inputdata_t&)
 T CPoseController::InputSetPoseParameterName(inputdata_t&)
 T CPoseController::InputSetPoseValue(inputdata_t&)
 T CPoseController::RandomizeFMod(float)
 T CPoseController::SetCurrentPose(float)
 T CPoseController::SetInterpolationTime(float)
 T CPoseController::SetInterpolationWrap(bool)
 T CPoseController::SetPoseParameterName(char const*)
 T CPoseController::SetPoseValue(float)
 T CPoseController::SetProp(CBaseAnimating*)
 T CPoseController::Spawn()
 T CPoseController::Think()
 T CPoseController::YouForgotToImplementOrDeclareServerClass()
 T CPoseController::~CPoseController()
 T CPostClientMessageManager::AddEntity(CBaseEntity*)
 T CPostClientMessageManager::~CPostClientMessageManager()
 T CPostFrameNavigationHook::EnqueueEntityNavigationQuery(CAI_BaseNPC*, CFunctor*)
 T CPostFrameNavigationHook::FrameUpdatePostEntityThink()
 T CPostFrameNavigationHook::FrameUpdatePreEntityThink()
 T CPostFrameNavigationHook::Init()
 T CPostFrameNavigationHook::Name()
 T CPostFrameNavigationHook::~CPostFrameNavigationHook()
 T CPostProcessController::Activate()
 T CPostProcessController::CPostProcessController()
 T CPostProcessController::GetDataDescMap()
 T CPostProcessController::GetServerClass()
 T CPostProcessController::InputSetDepthBlurFocalDistance(inputdata_t&)
 T CPostProcessController::InputSetDepthBlurStrength(inputdata_t&)
 T CPostProcessController::InputSetFadeTime(inputdata_t&)
 T CPostProcessController::InputSetFadeToBlackStrength(inputdata_t&)
 T CPostProcessController::InputSetFilmGrainStrength(inputdata_t&)
 T CPostProcessController::InputSetLocalContrastEdgeStrength(inputdata_t&)
 T CPostProcessController::InputSetLocalContrastStrength(inputdata_t&)
 T CPostProcessController::InputSetScreenBlurStrength(inputdata_t&)
 T CPostProcessController::InputSetVignetteBlurStrength(inputdata_t&)
 T CPostProcessController::InputSetVignetteEnd(inputdata_t&)
 T CPostProcessController::InputSetVignetteStart(inputdata_t&)
 T CPostProcessController::NetworkVar_m_flPostProcessParameters::Set(int, float const&)
 T CPostProcessController::Spawn()
 T CPostProcessController::UpdateTransmitState()
 T CPostProcessController::YouForgotToImplementOrDeclareServerClass()
 T CPostProcessController::~CPostProcessController()
 T CPostProcessSystem::FireGameEvent(IGameEvent*)
 T CPostProcessSystem::InitMasterController()
 T CPostProcessSystem::LevelInitPostEntity()
 T CPostProcessSystem::LevelInitPreEntity()
 T CPostProcessSystem::~CPostProcessSystem()
 T CPrecacheHandler::CacheResource(PrecacheResourceType_t, char const*, bool, ResourceList_t__*, int*)
 T CPrecacheHandler::CacheResourceFile(char const*, bool, ResourceList_t__*)
 T CPrecacheHandler::PrecachePhysicsSounds(char const*, bool, ResourceList_t__*)
 T CPrecacheOtherList::LevelInitPreEntity()
 T CPrecacheOtherList::LevelShutdownPostEntity()
 T CPrecacheOtherList::~CPrecacheOtherList()
 T CPrecacheRegister::Init()
 T CPrecacheRegister::IsPerFrame()
 T CPrecacheRegister::LevelInitPostEntity()
 T CPrecacheRegister::LevelInitPreEntity()
 T CPrecacheRegister::LevelShutdownPostEntity()
 T CPrecacheRegister::LevelShutdownPreEntity()
 T CPrecacheRegister::Name()
 T CPrecacheRegister::OnRestore()
 T CPrecacheRegister::OnSave()
 T CPrecacheRegister::PostInit()
 T CPrecacheRegister::SafeRemoveIfDesired()
 T CPrecacheRegister::Shutdown()
 T CPrecacheRegister::~CPrecacheRegister()
 T CPrecipitation::GetDataDescMap()
 T CPrecipitation::GetServerClass()
 T CPrecipitation::Spawn()
 T CPrecipitation::UpdateTransmitState()
 T CPrecipitation::YouForgotToImplementOrDeclareServerClass()
 T CPrecipitation::~CPrecipitation()
 T CPrecipitationBlocker::GetDataDescMap()
 T CPrecipitationBlocker::GetServerClass()
 T CPrecipitationBlocker::Spawn()
 T CPrecipitationBlocker::UpdateTransmitState()
 T CPrecipitationBlocker::YouForgotToImplementOrDeclareServerClass()
 T CPrecipitationBlocker::~CPrecipitationBlocker()
 T CPredictedViewModel::CalcViewModelLag(Vector&, QAngle&, QAngle&)
 T CPredictedViewModel::GetServerClass()
 T CPredictedViewModel::YouForgotToImplementOrDeclareServerClass()
 T CPredictedViewModel::~CPredictedViewModel()
 T CProceduralGenerator::Reset()
 T CProceduralGenerator::ShowSolution()
 T CProceduralGenerator::Spawn()
 T CProceduralGenerator::TraceToCell(CGameTrace const&) const
 T CProceduralGenerator::~CProceduralGenerator()
 T CProjectedDecal::Activate()
 T CProjectedDecal::GetDataDescMap()
 T CProjectedDecal::InputActivate(inputdata_t&)
 T CProjectedDecal::KeyValue(char const*, char const*)
 T CProjectedDecal::Spawn()
 T CProjectedDecal::StaticDecal()
 T CProjectedDecal::TriggerDecal(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CProjectedDecal::~CProjectedDecal()
 T CProjectedTractorBeamEntity::CreateNewInstance()
 T CProjectedTractorBeamEntity::CreateNewProjectedEntity()
 T CProjectedTractorBeamEntity::GetDataDescMap()
 T CProjectedTractorBeamEntity::GetProjectionExtents(Vector&, Vector&)
 T CProjectedTractorBeamEntity::GetServerClass()
 T CProjectedTractorBeamEntity::OnPreProjected()
 T CProjectedTractorBeamEntity::OnProjected()
 T CProjectedTractorBeamEntity::Spawn()
 T CProjectedTractorBeamEntity::UpdateOnRemove()
 T CProjectedTractorBeamEntity::YouForgotToImplementOrDeclareServerClass()
 T CProjectedTractorBeamEntity::~CProjectedTractorBeamEntity()
 T CProjectedWallEntity::CProjectedWallEntity()
 T CProjectedWallEntity::CheckForPlayersOnBridge()
 T CProjectedWallEntity::CleansePaint()
 T CProjectedWallEntity::CleanupWall()
 T CProjectedWallEntity::ComputeWorldSpaceSurroundingBox(Vector*, Vector*)
 T CProjectedWallEntity::CreateNewInstance()
 T CProjectedWallEntity::CreateNewProjectedEntity()
 T CProjectedWallEntity::CreateVPhysics()
 T CProjectedWallEntity::DisplaceObstructingEntities()
 T CProjectedWallEntity::DisplaceObstructingEntity(CBaseEntity*, Vector const&, Vector const&, Vector const&, bool)
 T CProjectedWallEntity::DisplaceObstructingEntity(CBaseEntity*, bool)
 T CProjectedWallEntity::GetDataDescMap()
 T CProjectedWallEntity::GetEntity()
 T CProjectedWallEntity::GetExtents(Vector&, Vector&, float)
 T CProjectedWallEntity::GetPaintPowerAtPoint(Vector const&) const
 T CProjectedWallEntity::GetProjectionExtents(Vector&, Vector&)
 T CProjectedWallEntity::GetServerClass()
 T CProjectedWallEntity::IsWallPainted(Vector const&) const
 T CProjectedWallEntity::NotifyPortalEvent(PortalEvent_t, CPortal_Base2D*)
 T CProjectedWallEntity::ObjectCaps()
 T CProjectedWallEntity::OnPreProjected()
 T CProjectedWallEntity::OnProjected()
 T CProjectedWallEntity::OnRestore()
 T CProjectedWallEntity::Paint(PaintPowerType, Vector const&)
 T CProjectedWallEntity::PlacePlacementHelper(CInfoPlacementHelper*)
 T CProjectedWallEntity::Precache()
 T CProjectedWallEntity::ProjectWall()
 T CProjectedWallEntity::SetHitPortal(CPortal_Base2D*)
 T CProjectedWallEntity::SetSourcePortal(CPortal_Base2D*)
 T CProjectedWallEntity::ShouldSavePhysics()
 T CProjectedWallEntity::Spawn()
 T CProjectedWallEntity::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CProjectedWallEntity::Touch(CBaseEntity*)
 T CProjectedWallEntity::UpdateOnRemove()
 T CProjectedWallEntity::YouForgotToImplementOrDeclareServerClass()
 T CProjectedWallEntity::~CProjectedWallEntity()
 T CProjectorCollideList::EnumEntity(IHandleEntity*)
 T CPropButton::Activate()
 T CPropButton::AnimateThink()
 T CPropButton::CPropButton()
 T CPropButton::CreateVPhysics()
 T CPropButton::DrawDebugTextOverlays()
 T CPropButton::GetButtonModelName()
 T CPropButton::GetDataDescMap()
 T CPropButton::InputCancelPress(inputdata_t&)
 T CPropButton::InputLock(inputdata_t&)
 T CPropButton::InputPress(inputdata_t&)
 T CPropButton::InputUnlock(inputdata_t&)
 T CPropButton::LookUpAnimationSequences()
 T CPropButton::ObjectCaps()
 T CPropButton::OnPressed()
 T CPropButton::Precache()
 T CPropButton::Spawn()
 T CPropButton::TimerThink()
 T CPropButton::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CPropButton::~CPropButton()
 T CPropCombineBall::AnimThink()
 T CPropCombineBall::BounceInSpawner(float, int, gamevcollisionevent_t*)
 T CPropCombineBall::CaptureBySpawner()
 T CPropCombineBall::CreateVPhysics()
 T CPropCombineBall::DeflectTowardEnemy(float, int, gamevcollisionevent_t*)
 T CPropCombineBall::DieThink()
 T CPropCombineBall::DissolveRampSoundThink()
 T CPropCombineBall::DissolveThink()
 T CPropCombineBall::DoExplosion()
 T CPropCombineBall::DoImpactEffect(Vector const&, int, gamevcollisionevent_t*)
 T CPropCombineBall::ExplodeThink()
 T CPropCombineBall::FadeOut(float)
 T CPropCombineBall::GetDataDescMap()
 T CPropCombineBall::GetServerClass()
 T CPropCombineBall::GetSpawner()
 T CPropCombineBall::HasPhysicsAttacker(float)
 T CPropCombineBall::InputExplode(inputdata_t&)
 T CPropCombineBall::InputFadeAndRespawn(inputdata_t&)
 T CPropCombineBall::InputKill(inputdata_t&)
 T CPropCombineBall::InputSocketed(inputdata_t&)
 T CPropCombineBall::IsAttractiveTarget(CBaseEntity*)
 T CPropCombineBall::OnHitEntity(CBaseEntity*, float, int, gamevcollisionevent_t*)
 T CPropCombineBall::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CPropCombineBall::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CPropCombineBall::OverridePropdata()
 T CPropCombineBall::Precache()
 T CPropCombineBall::ReplaceInSpawner(float)
 T CPropCombineBall::SetBallAsLaunched()
 T CPropCombineBall::SetRadius(float)
 T CPropCombineBall::SetState(int)
 T CPropCombineBall::ShouldPuntUseLaunchForces(PhysGunForce_t)
 T CPropCombineBall::Spawn()
 T CPropCombineBall::StartAnimating()
 T CPropCombineBall::StartLifetime(float)
 T CPropCombineBall::StopLoopingSounds()
 T CPropCombineBall::UpdateOnRemove()
 T CPropCombineBall::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CPropCombineBall::WhizSoundThink()
 T CPropCombineBall::YouForgotToImplementOrDeclareServerClass()
 T CPropCombineBall::~CPropCombineBall()
 T CPropData::CPropData()
 T CPropData::GetRandomChunkModel(char const*, int)
 T CPropData::LevelInitPreEntity()
 T CPropData::LevelShutdownPostEntity()
 T CPropData::ParsePropDataFile()
 T CPropData::ParsePropFromBase(CBaseEntity*, IBreakableWithPropData*, char const*)
 T CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)
 T CPropData::~CPropData()
 T CPropDoorRotating::AngularMove(QAngle const&, float)
 T CPropDoorRotating::BeginClosing()
 T CPropDoorRotating::BeginOpening(CBaseEntity*)
 T CPropDoorRotating::CalculateDoorVolume(QAngle, QAngle, Vector*, Vector*)
 T CPropDoorRotating::CheckDoorClear(doorCheck_e)
 T CPropDoorRotating::ComputeDoorExtent(Extent*, unsigned int)
 T CPropDoorRotating::DoorCanClose(bool)
 T CPropDoorRotating::DoorResume()
 T CPropDoorRotating::DoorStop()
 T CPropDoorRotating::DoorTeleportToSpawnPosition()
 T CPropDoorRotating::DrawDebugTextOverlays()
 T CPropDoorRotating::GetDataDescMap()
 T CPropDoorRotating::GetNPCOpenData(CAI_BaseNPC*, opendata_t&)
 T CPropDoorRotating::GetOpenInterval()
 T CPropDoorRotating::GetServerClass()
 T CPropDoorRotating::InputMoveToRotationDistance(inputdata_t&)
 T CPropDoorRotating::InputSetRotationDistance(inputdata_t&)
 T CPropDoorRotating::InputSetSpeed(inputdata_t&)
 T CPropDoorRotating::IsHingeOnLeft()
 T CPropDoorRotating::MoveDone()
 T CPropDoorRotating::OnDoorClosed()
 T CPropDoorRotating::OnDoorOpened()
 T CPropDoorRotating::OnRestore()
 T CPropDoorRotating::OverridePropdata()
 T CPropDoorRotating::Spawn()
 T CPropDoorRotating::YouForgotToImplementOrDeclareServerClass()
 T CPropDoorRotating::~CPropDoorRotating()
 T CPropEnergyBall::Activate()
 T CPropEnergyBall::CreateSounds()
 T CPropEnergyBall::EndTouch(CBaseEntity*)
 T CPropEnergyBall::ExplodeThink()
 T CPropEnergyBall::GetDataDescMap()
 T CPropEnergyBall::GetServerClass()
 T CPropEnergyBall::InputBallCaught(inputdata_t&)
 T CPropEnergyBall::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
 T CPropEnergyBall::Precache()
 T CPropEnergyBall::Spawn()
 T CPropEnergyBall::StartTouch(CBaseEntity*)
 T CPropEnergyBall::StopLoopingSounds()
 T CPropEnergyBall::Think()
 T CPropEnergyBall::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CPropEnergyBall::YouForgotToImplementOrDeclareServerClass()
 T CPropEnergyBall::~CPropEnergyBall()
 T CPropExplodingFutbol::AnimThink()
 T CPropExplodingFutbol::DamageEntity(CBaseEntity*, Vector const&, Vector const&)
 T CPropExplodingFutbol::DoExplosion(Vector const&, float, CPortal_Base2D*)
 T CPropExplodingFutbol::Event_Killed(CTakeDamageInfo const&)
 T CPropExplodingFutbol::ExplodeFutbol()
 T CPropExplodingFutbol::GetDataDescMap()
 T CPropExplodingFutbol::InputDissolve(inputdata_t&)
 T CPropExplodingFutbol::InputExplode(inputdata_t&)
 T CPropExplodingFutbol::KillFutbol()
 T CPropExplodingFutbol::KillThink()
 T CPropExplodingFutbol::OnFizzled()
 T CPropExplodingFutbol::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CPropExplodingFutbol::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CPropExplodingFutbol::OnTakeDamage(CTakeDamageInfo const&)
 T CPropExplodingFutbol::Precache()
 T CPropExplodingFutbol::Spawn()
 T CPropExplodingFutbol::TimerThink()
 T CPropExplodingFutbol::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CPropExplodingFutbol::VPhysicsUpdate(IPhysicsObject*)
 T CPropExplodingFutbol::~CPropExplodingFutbol()
 T CPropFloorBallButton::AcceptsBall()
 T CPropFloorBallButton::CreateTriggers()
 T CPropFloorBallButton::GetButtonModelName()
 T CPropFloorBallButton::GetDataDescMap()
 T CPropFloorBallButton::OnlyAcceptBall()
 T CPropFloorBallButton::ShouldPlayerTouch()
 T CPropFloorBallButton::~CPropFloorBallButton()
 T CPropFloorButton::AcceptsBall()
 T CPropFloorButton::Activate()
 T CPropFloorButton::AnimateThink()
 T CPropFloorButton::CPropFloorButton()
 T CPropFloorButton::CreateTriggers()
 T CPropFloorButton::CreateVPhysics()
 T CPropFloorButton::GetButtonModelName()
 T CPropFloorButton::GetDataDescMap()
 T CPropFloorButton::GetServerClass()
 T CPropFloorButton::InputPressIn(inputdata_t&)
 T CPropFloorButton::InputPressOut(inputdata_t&)
 T CPropFloorButton::LookUpAnimationSequences()
 T CPropFloorButton::OnPressed(CBaseEntity*)
 T CPropFloorButton::OnUnPressed(CBaseEntity*)
 T CPropFloorButton::OnlyAcceptBall()
 T CPropFloorButton::Precache()
 T CPropFloorButton::Press(CBaseEntity*)
 T CPropFloorButton::PressingBoxHasSetteledThink()
 T CPropFloorButton::ShouldPlayerTouch()
 T CPropFloorButton::Spawn()
 T CPropFloorButton::UnPress(CBaseEntity*)
 T CPropFloorButton::UpdateOnRemove()
 T CPropFloorButton::YouForgotToImplementOrDeclareServerClass()
 T CPropFloorButton::~CPropFloorButton()
 T CPropFloorCubeButton::AcceptsBall()
 T CPropFloorCubeButton::GetButtonModelName()
 T CPropFloorCubeButton::GetDataDescMap()
 T CPropFloorCubeButton::OnlyAcceptBall()
 T CPropFloorCubeButton::Press(CBaseEntity*)
 T CPropFloorCubeButton::ShouldPlayerTouch()
 T CPropFloorCubeButton::UnPress(CBaseEntity*)
 T CPropFloorCubeButton::~CPropFloorCubeButton()
 T CPropFutbolSocket* _CreateEntityTemplate<CPropFutbolSocket>(CPropFutbolSocket*, char const*)
 T CPropFutbolSocket::Precache()
 T CPropFutbolSocket::Spawn()
 T CPropFutbolSocket::~CPropFutbolSocket()
 T CPropFutbolSpawner::FutbolDestroyed()
 T CPropFutbolSpawner::FutbolGrabbed()
 T CPropFutbolSpawner::GetDataDescMap()
 T CPropFutbolSpawner::InputForceSpawn(inputdata_t&)
 T CPropFutbolSpawner::Precache()
 T CPropFutbolSpawner::Spawn()
 T CPropFutbolSpawner::SpawnFutbol()
 T CPropFutbolSpawner::~CPropFutbolSpawner()
 T CPropGladosCore::AnimateThink()
 T CPropGladosCore::GetDataDescMap()
 T CPropGladosCore::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T CPropGladosCore::InputPanic(inputdata_t&)
 T CPropGladosCore::InputStartTalking(inputdata_t&)
 T CPropGladosCore::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CPropGladosCore::PanicThink()
 T CPropGladosCore::Precache()
 T CPropGladosCore::PreferredCarryAngles()
 T CPropGladosCore::SetupVOList()
 T CPropGladosCore::Spawn()
 T CPropGladosCore::StartTalking(float)
 T CPropGladosCore::TalkingThink()
 T CPropGladosCore::~CPropGladosCore()
 T CPropGlassFutbol::AnimThink()
 T CPropGlassFutbol::Event_Killed(CTakeDamageInfo const&)
 T CPropGlassFutbol::GetDataDescMap()
 T CPropGlassFutbol::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T CPropGlassFutbol::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CPropGlassFutbol::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CPropGlassFutbol::OnTakeDamage(CTakeDamageInfo const&)
 T CPropGlassFutbol::Precache()
 T CPropGlassFutbol::PreferredCarryAngles()
 T CPropGlassFutbol::SetSpawner(CPropFutbolSpawner*)
 T CPropGlassFutbol::Spawn()
 T CPropGlassFutbol::ThrownThink()
 T CPropGlassFutbol::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CPropGlassFutbol::~CPropGlassFutbol()
 T CPropIndicatorPanel::CreateIndicatorPanel()
 T CPropIndicatorPanel::GetDataDescMap()
 T CPropIndicatorPanel::InputCheck(inputdata_t&)
 T CPropIndicatorPanel::InputReset(inputdata_t&)
 T CPropIndicatorPanel::InputStart(inputdata_t&)
 T CPropIndicatorPanel::InputStop(inputdata_t&)
 T CPropIndicatorPanel::InputUncheck(inputdata_t&)
 T CPropIndicatorPanel::Precache()
 T CPropIndicatorPanel::ResetTimer()
 T CPropIndicatorPanel::SetTimerDuration(float)
 T CPropIndicatorPanel::Spawn()
 T CPropIndicatorPanel::StartTimer()
 T CPropIndicatorPanel::ToggleIndicatorLights(bool)
 T CPropIndicatorPanel::ToggleThink()
 T CPropIndicatorPanel::UpdateOnRemove()
 T CPropIndicatorPanel::~CPropIndicatorPanel()
 T CPropLinkedPortalDoor::Activate()
 T CPropLinkedPortalDoor::AnimateThink()
 T CPropLinkedPortalDoor::CPropLinkedPortalDoor()
 T CPropLinkedPortalDoor::CloseInternal(CBaseEntity*)
 T CPropLinkedPortalDoor::CreateBoneFollowers()
 T CPropLinkedPortalDoor::CreateVPhysics()
 T CPropLinkedPortalDoor::Destroy()
 T CPropLinkedPortalDoor::GetDataDescMap()
 T CPropLinkedPortalDoor::GetScriptDesc()
 T CPropLinkedPortalDoor::GetServerClass()
 T CPropLinkedPortalDoor::IsClosed()
 T CPropLinkedPortalDoor::IsOpen()
 T CPropLinkedPortalDoor::OffsetPosition() const
 T CPropLinkedPortalDoor::OnClose()
 T CPropLinkedPortalDoor::OnOpen()
 T CPropLinkedPortalDoor::OpenInternal(CBaseEntity*)
 T CPropLinkedPortalDoor::Precache()
 T CPropLinkedPortalDoor::SetPartner(CLinkedPortalDoor*)
 T CPropLinkedPortalDoor::Spawn()
 T CPropLinkedPortalDoor::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CPropLinkedPortalDoor::YouForgotToImplementOrDeclareServerClass()
 T CPropLinkedPortalDoor::~CPropLinkedPortalDoor()
 T CPropMonsterBox::AnimateThink()
 T CPropMonsterBox::BecomeBox(bool)
 T CPropMonsterBox::BecomeMonster(bool)
 T CPropMonsterBox::BecomeShortcircuit()
 T CPropMonsterBox::GetDataDescMap()
 T CPropMonsterBox::HandleAnimEvent(animevent_t*)
 T CPropMonsterBox::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T CPropMonsterBox::InputBecomeBox(inputdata_t&)
 T CPropMonsterBox::InputBecomeMonster(inputdata_t&)
 T CPropMonsterBox::InputBecomeShortcircuit(inputdata_t&)
 T CPropMonsterBox::InputDissolve(inputdata_t&)
 T CPropMonsterBox::InputSilentDissolve(inputdata_t&)
 T CPropMonsterBox::ObjectCaps()
 T CPropMonsterBox::OnFizzled()
 T CPropMonsterBox::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CPropMonsterBox::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CPropMonsterBox::Precache()
 T CPropMonsterBox::PreferredCarryAngles()
 T CPropMonsterBox::Spawn()
 T CPropMonsterBox::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CPropMonsterBox::~CPropMonsterBox()
 T CPropPaintBomb::CPropPaintBomb()
 T CPropPaintBomb::Event_Killed(CTakeDamageInfo const&)
 T CPropPaintBomb::GetDataDescMap()
 T CPropPaintBomb::GetServerClass()
 T CPropPaintBomb::InputDisablePortalFunnel(inputdata_t&)
 T CPropPaintBomb::InputDissolve(inputdata_t&)
 T CPropPaintBomb::InputEnablePortalFunnel(inputdata_t&)
 T CPropPaintBomb::InputSilentDissolve(inputdata_t&)
 T CPropPaintBomb::OnFizzled()
 T CPropPaintBomb::Precache()
 T CPropPaintBomb::SetPaintPowerType(PaintPowerType)
 T CPropPaintBomb::Spawn()
 T CPropPaintBomb::UpdateTransmitState()
 T CPropPaintBomb::YouForgotToImplementOrDeclareServerClass()
 T CPropPaintBomb::~CPropPaintBomb()
 T CPropPersonalitySphere::AnimateThink()
 T CPropPersonalitySphere::CheckForInfoTargets()
 T CPropPersonalitySphere::GetDataDescMap()
 T CPropPersonalitySphere::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T CPropPersonalitySphere::InputPanic(inputdata_t&)
 T CPropPersonalitySphere::InputStartTalking(inputdata_t&)
 T CPropPersonalitySphere::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
 T CPropPersonalitySphere::ObjectCaps()
 T CPropPersonalitySphere::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CPropPersonalitySphere::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CPropPersonalitySphere::Precache()
 T CPropPersonalitySphere::PreferredCarryAngles()
 T CPropPersonalitySphere::RegisterSoundEvent(SphereEvent_e, int)
 T CPropPersonalitySphere::SetupVOList()
 T CPropPersonalitySphere::Spawn()
 T CPropPersonalitySphere::TalkingThink()
 T CPropPersonalitySphere::TrySpeakLine(int, int)
 T CPropPersonalitySphere::UpdatePositions()
 T CPropPersonalitySphere::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CPropPersonalitySphere::~CPropPersonalitySphere()
 T CPropPhysicsPaintable::~CPropPhysicsPaintable()
 T CPropPortalStatsDisplay::Enable()
 T CPropPortalStatsDisplay::GetDataDescMap()
 T CPropPortalStatsDisplay::GetServerClass()
 T CPropPortalStatsDisplay::InputDisable(inputdata_t&)
 T CPropPortalStatsDisplay::InputEnable(inputdata_t&)
 T CPropPortalStatsDisplay::InputResetPlayerStats(inputdata_t&)
 T CPropPortalStatsDisplay::InputUpdateStats(inputdata_t&)
 T CPropPortalStatsDisplay::OnRestore()
 T CPropPortalStatsDisplay::Precache()
 T CPropPortalStatsDisplay::RestoreControlPanels()
 T CPropPortalStatsDisplay::ScreenVisible(bool)
 T CPropPortalStatsDisplay::SetTransmit(CCheckTransmitInfo*, bool)
 T CPropPortalStatsDisplay::Spawn()
 T CPropPortalStatsDisplay::SpawnControlPanels()
 T CPropPortalStatsDisplay::UpdateTransmitState()
 T CPropPortalStatsDisplay::YouForgotToImplementOrDeclareServerClass()
 T CPropPortalStatsDisplay::~CPropPortalStatsDisplay()
 T CPropRocketTripwire::ActiveThink()
 T CPropRocketTripwire::CPropRocketTripwire()
 T CPropRocketTripwire::EyeDirection()
 T CPropRocketTripwire::EyePosition()
 T CPropRocketTripwire::FireRocket()
 T CPropRocketTripwire::FireRocketThink()
 T CPropRocketTripwire::GetDataDescMap()
 T CPropRocketTripwire::GetServerClass()
 T CPropRocketTripwire::InputDisable(inputdata_t&)
 T CPropRocketTripwire::InputEnable(inputdata_t&)
 T CPropRocketTripwire::InputForceFire(inputdata_t&)
 T CPropRocketTripwire::PreFiringThink()
 T CPropRocketTripwire::Precache()
 T CPropRocketTripwire::Spawn()
 T CPropRocketTripwire::UpdateOnRemove()
 T CPropRocketTripwire::WaitingThink()
 T CPropRocketTripwire::YouForgotToImplementOrDeclareServerClass()
 T CPropRocketTripwire::~CPropRocketTripwire()
 T CPropTelescopicArm::Activate()
 T CPropTelescopicArm::AimAt(Vector)
 T CPropTelescopicArm::DisabledThink()
 T CPropTelescopicArm::EnabledThink()
 T CPropTelescopicArm::FindAimPointThroughPortal(CPortal_Base2D const*)
 T CPropTelescopicArm::FindTargetAimPoint()
 T CPropTelescopicArm::GetDataDescMap()
 T CPropTelescopicArm::InputDisable(inputdata_t&)
 T CPropTelescopicArm::InputEnable(inputdata_t&)
 T CPropTelescopicArm::InputSetTarget(inputdata_t&)
 T CPropTelescopicArm::InputTargetPlayer(inputdata_t&)
 T CPropTelescopicArm::Precache()
 T CPropTelescopicArm::Spawn()
 T CPropTelescopicArm::UpdateOnRemove()
 T CPropTelescopicArm::~CPropTelescopicArm()
 T CPropTestChamberDoor::Activate()
 T CPropTestChamberDoor::AnimateThink()
 T CPropTestChamberDoor::AreaPortalClose()
 T CPropTestChamberDoor::AreaPortalOpen()
 T CPropTestChamberDoor::CPropTestChamberDoor()
 T CPropTestChamberDoor::Close(CBaseEntity*)
 T CPropTestChamberDoor::CreateBoneFollowers()
 T CPropTestChamberDoor::CreateVPhysics()
 T CPropTestChamberDoor::GetDataDescMap()
 T CPropTestChamberDoor::InputClose(inputdata_t&)
 T CPropTestChamberDoor::InputLock(inputdata_t&)
 T CPropTestChamberDoor::InputLockOpen(inputdata_t&)
 T CPropTestChamberDoor::InputOpen(inputdata_t&)
 T CPropTestChamberDoor::InputUnlock(inputdata_t&)
 T CPropTestChamberDoor::IsClosed()
 T CPropTestChamberDoor::IsOpen()
 T CPropTestChamberDoor::OnClose()
 T CPropTestChamberDoor::OnOpen()
 T CPropTestChamberDoor::Open(CBaseEntity*)
 T CPropTestChamberDoor::Precache()
 T CPropTestChamberDoor::Spawn()
 T CPropTestChamberDoor::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CPropTestChamberDoor::UpdateOnRemove()
 T CPropTestChamberDoor::~CPropTestChamberDoor()
 T CPropTicTacToePanel::FireGameEvent(IGameEvent*)
 T CPropTicTacToePanel::GetDataDescMap()
 T CPropTicTacToePanel::Spawn()
 T CPropTicTacToePanel::~CPropTicTacToePanel()
 T CPropTractorBeamProjector::CreateNewProjectedEntity()
 T CPropTractorBeamProjector::GetDataDescMap()
 T CPropTractorBeamProjector::GetServerClass()
 T CPropTractorBeamProjector::InputSetLinearForce(inputdata_t&)
 T CPropTractorBeamProjector::Precache()
 T CPropTractorBeamProjector::Project()
 T CPropTractorBeamProjector::Shutdown()
 T CPropTractorBeamProjector::Spawn()
 T CPropTractorBeamProjector::YouForgotToImplementOrDeclareServerClass()
 T CPropTractorBeamProjector::~CPropTractorBeamProjector()
 T CPropUnderButton::GetButtonModelName()
 T CPropUnderButton::GetDataDescMap()
 T CPropUnderButton::LookUpAnimationSequences()
 T CPropUnderButton::~CPropUnderButton()
 T CPropUnderFloorButton::CreateTriggers()
 T CPropUnderFloorButton::GetButtonModelName()
 T CPropUnderFloorButton::GetDataDescMap()
 T CPropUnderFloorButton::LookUpAnimationSequences()
 T CPropUnderFloorButton::~CPropUnderFloorButton()
 T CPropVehicle::DampenEyePosition(Vector&, QAngle&)
 T CPropVehicle::DrawDebugGeometryOverlays()
 T CPropVehicle::DrawDebugTextOverlays()
 T CPropVehicle::GetDataDescMap()
 T CPropVehicle::GetSmoothedVelocity()
 T CPropVehicle::GetUprightStrength()
 T CPropVehicle::GetUprightTime()
 T CPropVehicle::HasPhysicsAttacker(float)
 T CPropVehicle::InputAction(inputdata_t&)
 T CPropVehicle::InputHandBrakeOff(inputdata_t&)
 T CPropVehicle::InputHandBrakeOn(inputdata_t&)
 T CPropVehicle::InputSteering(inputdata_t&)
 T CPropVehicle::InputThrottle(inputdata_t&)
 T CPropVehicle::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CPropVehicle::Precache()
 T CPropVehicle::Restore(IRestore&)
 T CPropVehicle::Spawn()
 T CPropVehicle::Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T CPropVehicle::Think()
 T CPropVehicle::VPhysicsUpdate(IPhysicsObject*)
 T CPropVehicle::~CPropVehicle()
 T CPropVehicleChoreoGeneric::AllowBlockedExit(CBaseCombatCharacter*, int)
 T CPropVehicleChoreoGeneric::AllowMidairExit(CBaseCombatCharacter*, int)
 T CPropVehicleChoreoGeneric::BodyTarget(Vector const&, bool)
 T CPropVehicleChoreoGeneric::CPropVehicleChoreoGeneric()
 T CPropVehicleChoreoGeneric::CanEnterVehicle(CBaseEntity*)
 T CPropVehicleChoreoGeneric::CanExitVehicle(CBaseEntity*)
 T CPropVehicleChoreoGeneric::CreateVPhysics()
 T CPropVehicleChoreoGeneric::DrawDebugGeometryOverlays()
 T CPropVehicleChoreoGeneric::EnterVehicle(CBaseCombatCharacter*)
 T CPropVehicleChoreoGeneric::ExitVehicle(int)
 T CPropVehicleChoreoGeneric::FinishMove(CBasePlayer*, CUserCmd*, CMoveData*)
 T CPropVehicleChoreoGeneric::GetDataDescMap()
 T CPropVehicleChoreoGeneric::GetDriver()
 T CPropVehicleChoreoGeneric::GetServerClass()
 T CPropVehicleChoreoGeneric::GetServerVehicle()
 T CPropVehicleChoreoGeneric::GetVectors(Vector*, Vector*, Vector*) const
 T CPropVehicleChoreoGeneric::GetVehicleScriptName()
 T CPropVehicleChoreoGeneric::HandleAnimEvent(animevent_t*)
 T CPropVehicleChoreoGeneric::InputClose(inputdata_t&)
 T CPropVehicleChoreoGeneric::InputEnterVehicle(inputdata_t&)
 T CPropVehicleChoreoGeneric::InputEnterVehicleImmediate(inputdata_t&)
 T CPropVehicleChoreoGeneric::InputExitVehicle(inputdata_t&)
 T CPropVehicleChoreoGeneric::InputLock(inputdata_t&)
 T CPropVehicleChoreoGeneric::InputOpen(inputdata_t&)
 T CPropVehicleChoreoGeneric::InputSetCanShoot(inputdata_t&)
 T CPropVehicleChoreoGeneric::InputSetMaxPitch(inputdata_t&)
 T CPropVehicleChoreoGeneric::InputSetMaxYaw(inputdata_t&)
 T CPropVehicleChoreoGeneric::InputSetMinPitch(inputdata_t&)
 T CPropVehicleChoreoGeneric::InputSetMinYaw(inputdata_t&)
 T CPropVehicleChoreoGeneric::InputUnlock(inputdata_t&)
 T CPropVehicleChoreoGeneric::InputUseAttachmentEyes(inputdata_t&)
 T CPropVehicleChoreoGeneric::InputViewlock(inputdata_t&)
 T CPropVehicleChoreoGeneric::ItemPostFrame(CBasePlayer*)
 T CPropVehicleChoreoGeneric::NetworkVar_m_vehicleView::NetworkStateChanged()
 T CPropVehicleChoreoGeneric::NetworkVar_m_vehicleView::NetworkStateChanged(void*)
 T CPropVehicleChoreoGeneric::ObjectCaps()
 T CPropVehicleChoreoGeneric::OnTakeDamage(CTakeDamageInfo const&)
 T CPropVehicleChoreoGeneric::OverridePropdata()
 T CPropVehicleChoreoGeneric::ParseViewParams(char const*)
 T CPropVehicleChoreoGeneric::PassengerShouldReceiveDamage(CTakeDamageInfo&)
 T CPropVehicleChoreoGeneric::PreExitVehicle(CBaseCombatCharacter*, int)
 T CPropVehicleChoreoGeneric::Precache()
 T CPropVehicleChoreoGeneric::ProcessMovement(CBasePlayer*, CMoveData*)
 T CPropVehicleChoreoGeneric::SetVehicleEntryAnim(bool)
 T CPropVehicleChoreoGeneric::SetVehicleExitAnim(bool, Vector)
 T CPropVehicleChoreoGeneric::SetupMove(CBasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T CPropVehicleChoreoGeneric::ShouldCollide(int, int) const
 T CPropVehicleChoreoGeneric::Spawn()
 T CPropVehicleChoreoGeneric::Think()
 T CPropVehicleChoreoGeneric::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CPropVehicleChoreoGeneric::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CPropVehicleChoreoGeneric::YouForgotToImplementOrDeclareServerClass()
 T CPropVehicleChoreoGeneric::~CPropVehicleChoreoGeneric()
 T CPropVehicleDriveable::AllowBlockedExit(CBaseCombatCharacter*, int)
 T CPropVehicleDriveable::AllowMidairExit(CBaseCombatCharacter*, int)
 T CPropVehicleDriveable::CPropVehicleDriveable()
 T CPropVehicleDriveable::CanEnterVehicle(CBaseEntity*)
 T CPropVehicleDriveable::CanExitVehicle(CBaseEntity*)
 T CPropVehicleDriveable::CreateServerVehicle()
 T CPropVehicleDriveable::DriveVehicle(float, CUserCmd*, int, int)
 T CPropVehicleDriveable::EnterVehicle(CBaseCombatCharacter*)
 T CPropVehicleDriveable::Event_KilledOther(CBaseEntity*, CTakeDamageInfo const&)
 T CPropVehicleDriveable::ExitVehicle(int)
 T CPropVehicleDriveable::FinishMove(CBasePlayer*, CUserCmd*, CMoveData*)
 T CPropVehicleDriveable::GetDataDescMap()
 T CPropVehicleDriveable::GetDriver()
 T CPropVehicleDriveable::GetServerClass()
 T CPropVehicleDriveable::GetServerVehicle()
 T CPropVehicleDriveable::GetVectors(Vector*, Vector*, Vector*) const
 T CPropVehicleDriveable::GetVehicleScriptName()
 T CPropVehicleDriveable::InputLock(inputdata_t&)
 T CPropVehicleDriveable::InputTurnOff(inputdata_t&)
 T CPropVehicleDriveable::InputTurnOn(inputdata_t&)
 T CPropVehicleDriveable::InputUnlock(inputdata_t&)
 T CPropVehicleDriveable::IsOverturned()
 T CPropVehicleDriveable::IsVehicleBodyInWater()
 T CPropVehicleDriveable::ItemPostFrame(CBasePlayer*)
 T CPropVehicleDriveable::NPC_AddPassenger(CAI_BaseNPC*, string_t, int)
 T CPropVehicleDriveable::NPC_CanEnterVehicle(CAI_BaseNPC*, bool)
 T CPropVehicleDriveable::NPC_CanExitVehicle(CAI_BaseNPC*, bool)
 T CPropVehicleDriveable::NPC_FinishedEnterVehicle(CAI_BaseNPC*, bool)
 T CPropVehicleDriveable::NPC_FinishedExitVehicle(CAI_BaseNPC*, bool)
 T CPropVehicleDriveable::NPC_RemovePassenger(CAI_BaseNPC*)
 T CPropVehicleDriveable::ObjectCaps()
 T CPropVehicleDriveable::OnRestore()
 T CPropVehicleDriveable::PassengerShouldReceiveDamage(CTakeDamageInfo&)
 T CPropVehicleDriveable::PreExitVehicle(CBaseCombatCharacter*, int)
 T CPropVehicleDriveable::Precache()
 T CPropVehicleDriveable::ProcessMovement(CBasePlayer*, CMoveData*)
 T CPropVehicleDriveable::ResetUseKey(CBasePlayer*)
 T CPropVehicleDriveable::Restore(IRestore&)
 T CPropVehicleDriveable::SetVehicleEntryAnim(bool)
 T CPropVehicleDriveable::SetVehicleExitAnim(bool, Vector)
 T CPropVehicleDriveable::SetupMove(CBasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T CPropVehicleDriveable::ShouldThink()
 T CPropVehicleDriveable::Spawn()
 T CPropVehicleDriveable::Think()
 T CPropVehicleDriveable::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CPropVehicleDriveable::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CPropVehicleDriveable::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CPropVehicleDriveable::VPhysicsGetObjectList(IPhysicsObject**, int)
 T CPropVehicleDriveable::VehicleAngleVectors(QAngle const&, Vector*, Vector*, Vector*)
 T CPropVehicleDriveable::YouForgotToImplementOrDeclareServerClass()
 T CPropVehicleDriveable::~CPropVehicleDriveable()
 T CPropVehicleViewController::EnterVehicle(CBasePlayer*)
 T CPropVehicleViewController::ExitVehicle(int)
 T CPropVehicleViewController::GetDataDescMap()
 T CPropVehicleViewController::InputForcePlayerIn(inputdata_t&)
 T CPropVehicleViewController::InputForcePlayerOut(inputdata_t&)
 T CPropVehicleViewController::SetupMove(CBasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T CPropVehicleViewController::Spawn()
 T CPropVehicleViewController::Think()
 T CPropVehicleViewController::~CPropVehicleViewController()
 T CPropWallProjector::CreateNewProjectedEntity()
 T CPropWallProjector::GetDataDescMap()
 T CPropWallProjector::Precache()
 T CPropWallProjector::Project()
 T CPropWallProjector::Shutdown()
 T CPropWallProjector::Spawn()
 T CPropWallProjector::~CPropWallProjector()
 T CPropWeightedCube::Activate()
 T CPropWeightedCube::CPropWeightedCube()
 T CPropWeightedCube::CreatePortalWeightedCube(WeightedCubeType_e, bool, Vector const&)
 T CPropWeightedCube::DisabledThink()
 T CPropWeightedCube::EnterDisabledState()
 T CPropWeightedCube::ExitDisabledState()
 T CPropWeightedCube::ExitTractorBeamThink()
 T CPropWeightedCube::GetDataDescMap()
 T CPropWeightedCube::GetEntity()
 T CPropWeightedCube::GetServerClass()
 T CPropWeightedCube::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T CPropWeightedCube::InputDisablePickup(inputdata_t&)
 T CPropWeightedCube::InputDisablePortalFunnel(inputdata_t&)
 T CPropWeightedCube::InputDissolve(inputdata_t&)
 T CPropWeightedCube::InputEnablePickup(inputdata_t&)
 T CPropWeightedCube::InputEnablePortalFunnel(inputdata_t&)
 T CPropWeightedCube::InputExitDisabledState(inputdata_t&)
 T CPropWeightedCube::InputPreDissolveJoke(inputdata_t&)
 T CPropWeightedCube::InputSetPaint(inputdata_t&)
 T CPropWeightedCube::InputSilentDissolve(inputdata_t&)
 T CPropWeightedCube::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
 T CPropWeightedCube::ObjectCaps()
 T CPropWeightedCube::OnEnteredTractorBeam()
 T CPropWeightedCube::OnExitedTractorBeam()
 T CPropWeightedCube::OnFizzled()
 T CPropWeightedCube::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CPropWeightedCube::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CPropWeightedCube::Paint(PaintPowerType, Vector const&)
 T CPropWeightedCube::Precache()
 T CPropWeightedCube::PreferredCarryAngles()
 T CPropWeightedCube::SchrodingerThink()
 T CPropWeightedCube::SetActivated(bool)
 T CPropWeightedCube::SetCubeSkin()
 T CPropWeightedCube::SetCubeType()
 T CPropWeightedCube::SetLaser(CBaseEntity*)
 T CPropWeightedCube::SetPaintedMaterial(PaintPowerType)
 T CPropWeightedCube::ShouldEnterDisabledState()
 T CPropWeightedCube::Spawn()
 T CPropWeightedCube::StartTouch(CBaseEntity*)
 T CPropWeightedCube::TractorBeamThink()
 T CPropWeightedCube::UpdateOnRemove()
 T CPropWeightedCube::UpdatePreferredAngles(CBasePlayer*)
 T CPropWeightedCube::UpdateSchrodingerSound()
 T CPropWeightedCube::UpdateTransmitState()
 T CPropWeightedCube::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CPropWeightedCube::YouForgotToImplementOrDeclareServerClass()
 T CPropWeightedCube::~CPropWeightedCube()
 T CProp_Hallucination::DrawDebugTextOverlays()
 T CProp_Hallucination::GetDataDescMap()
 T CProp_Hallucination::GetServerClass()
 T CProp_Hallucination::InputDisable(inputdata_t&)
 T CProp_Hallucination::InputEnable(inputdata_t&)
 T CProp_Hallucination::InputSetRechargeTime(inputdata_t&)
 T CProp_Hallucination::InputSetVisibleTime(inputdata_t&)
 T CProp_Hallucination::Precache()
 T CProp_Hallucination::Spawn()
 T CProp_Hallucination::YouForgotToImplementOrDeclareServerClass()
 T CProp_Hallucination::~CProp_Hallucination()
 T CProp_Mirror::CProp_Mirror()
 T CProp_Mirror::ComputeFrustumThroughPolygon(Vector const&, VPlane const*, int, VPlane*, int)
 T CProp_Mirror::ComputeSubVisibility(CPVS_Extender**, int, unsigned char*, int, Vector const&, VPlane const*, int, CPVS_Extender::VisExtensionChain_t*, int*, int)
 T CProp_Mirror::GetDataDescMap()
 T CProp_Mirror::GetExtenderEdict() const
 T CProp_Mirror::GetExtenderNetworkProp()
 T CProp_Mirror::GetExtensionPVSOrigin()
 T CProp_Mirror::GetServerClass()
 T CProp_Mirror::IsExtenderValid()
 T CProp_Mirror::ObjectCaps()
 T CProp_Mirror::Precache()
 T CProp_Mirror::Spawn()
 T CProp_Mirror::UpdateReflectionPlane()
 T CProp_Mirror::UpdateReflectionPolygon()
 T CProp_Mirror::UpdateTransmitState()
 T CProp_Mirror::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CProp_Mirror::YouForgotToImplementOrDeclareServerClass()
 T CProp_Mirror::~CProp_Mirror()
 T CProp_Portal::Activate()
 T CProp_Portal::ActivatePortal()
 T CProp_Portal::AddToLinkageGroup()
 T CProp_Portal::CProp_Portal()
 T CProp_Portal::ChangeLinkageGroup(unsigned char)
 T CProp_Portal::CreatePortalEffect(CBasePlayer*, int, Vector, QAngle, int, int)
 T CProp_Portal::CreateSounds()
 T CProp_Portal::DelayedPlacementThink()
 T CProp_Portal::DispatchPortalPlacementParticles(bool)
 T CProp_Portal::DoFizzleEffect(int, bool)
 T CProp_Portal::EndTouch(CBaseEntity*)
 T CProp_Portal::FindPortal(unsigned char, bool, bool)
 T CProp_Portal::Fizzle()
 T CProp_Portal::GetDataDescMap()
 T CProp_Portal::GetMaximumExitSpeed(bool, bool, bool, Vector const&, CBaseEntity*)
 T CProp_Portal::GetMinimumExitSpeed(bool, bool, bool, Vector const&, CBaseEntity*)
 T CProp_Portal::GetPortalSize(float&, float&, CProp_Portal*)
 T CProp_Portal::GetServerClass()
 T CProp_Portal::InputFizzle(inputdata_t&)
 T CProp_Portal::InputNewLocation(inputdata_t&)
 T CProp_Portal::InputResize(inputdata_t&)
 T CProp_Portal::InputSetActivatedState(inputdata_t&)
 T CProp_Portal::InputSetLinkageGroupId(inputdata_t&)
 T CProp_Portal::NewLocation(Vector const&, QAngle const&)
 T CProp_Portal::OnPortalDeactivated()
 T CProp_Portal::OnRestore()
 T CProp_Portal::PlacePortal(Vector const&, QAngle const&, PortalPlacementResult_t, bool)
 T CProp_Portal::PostTeleportTouchingEntity(CBaseEntity*)
 T CProp_Portal::PreTeleportTouchingEntity(CBaseEntity*)
 T CProp_Portal::Precache()
 T CProp_Portal::ResetModel()
 T CProp_Portal::SetFiredByPlayer(CBasePlayer*)
 T CProp_Portal::Spawn()
 T CProp_Portal::StartTouch(CBaseEntity*)
 T CProp_Portal::StopLoopingSounds()
 T CProp_Portal::Touch(CBaseEntity*)
 T CProp_Portal::UpdatePortalLinkage()
 T CProp_Portal::UpdateTransmitState()
 T CProp_Portal::YouForgotToImplementOrDeclareServerClass()
 T CProp_Portal::~CProp_Portal()
 T CProportionalFloatProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalFloatProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CProportionalFloatProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalIntProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalIntProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CProportionalIntProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalXPosProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalXPosProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CProportionalXPosProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalYPosProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalYPosProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CProportionalYPosProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CPushBlockerEnum::CPushBlockerEnum(CPhysicsPushedEntities*)
 T CPushBlockerEnum::EnumElement(IHandleEntity*)
 T CPushBlockerEnum::GetPushableEntity(IHandleEntity*)
 T CPushBlockerEnum::IntersectsPushers(CBaseEntity*)
 T CPushable::CreateVPhysics()
 T CPushable::ObjectCaps()
 T CPushable::OnTakeDamage(CTakeDamageInfo const&)
 T CPushable::PhysicsSolidMaskForEntity() const
 T CPushable::Spawn()
 T CPushable::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CPushable::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CPushable::~CPushable()
 T CRC32_Final(unsigned long*)
 T CRC32_Init(unsigned long*)
 T CRC32_ProcessBuffer(unsigned long*, void const*, int)
 T CRTime::CRTime()
 T CRTime::GetDayOfMonth() const
 T CRTime::GetMonth() const
 T CRTime::GetYear() const
 T CRTime::RTime32FromFmtString(char const*, char const*)
 T CRTime::RTime32FromString(char const*)
 T CRagGib::Spawn(char const*, Vector const&, Vector const&, float)
 T CRagGib::~CRagGib()
 T CRagdollBoogie::AttachToEntity(CBaseEntity*)
 T CRagdollBoogie::BoogieThink()
 T CRagdollBoogie::Create(CBaseEntity*, float, float, float, int)
 T CRagdollBoogie::DecrementSuppressionCount(CBaseEntity*)
 T CRagdollBoogie::GetDataDescMap()
 T CRagdollBoogie::IncrementSuppressionCount(CBaseEntity*)
 T CRagdollBoogie::Precache()
 T CRagdollBoogie::Spawn()
 T CRagdollBoogie::ZapThink()
 T CRagdollBoogie::~CRagdollBoogie()
 T CRagdollConstraint::CreateConstraint(IPhysicsConstraintGroup*, hl_constraint_info_t const&)
 T CRagdollConstraint::GetDataDescMap()
 T CRagdollConstraint::~CRagdollConstraint()
 T CRagdollLRURetirement::FrameUpdatePostEntityThink()
 T CRagdollLRURetirement::LevelInitPreEntity()
 T CRagdollLRURetirement::MoveToTopOfLRU(CBaseAnimating*, bool, float)
 T CRagdollLRURetirement::Update(float)
 T CRagdollLRURetirement::~CRagdollLRURetirement()
 T CRagdollLowViolenceManager::SetLowViolence(char const*)
 T CRagdollMagnet::DistToPoint(Vector const&)
 T CRagdollMagnet::FindBestMagnet(CBaseEntity*)
 T CRagdollMagnet::GetDataDescMap()
 T CRagdollMagnet::GetForceVector(CBaseEntity*)
 T CRagdollMagnet::InputDisable(inputdata_t&)
 T CRagdollMagnet::InputEnable(inputdata_t&)
 T CRagdollMagnet::~CRagdollMagnet()
 T CRagdollManager::Activate()
 T CRagdollManager::CRagdollManager()
 T CRagdollManager::DrawDebugTextOverlays()
 T CRagdollManager::GetDataDescMap()
 T CRagdollManager::GetServerClass()
 T CRagdollManager::InputSetMaxRagdollCount(inputdata_t&)
 T CRagdollManager::UpdateCurrentMaxRagDollCount()
 T CRagdollManager::UpdateTransmitState()
 T CRagdollManager::YouForgotToImplementOrDeclareServerClass()
 T CRagdollManager::~CRagdollManager()
 T CRagdollProp::ClearFlagsThink()
 T CRagdollProp::DrawDebugGeometryOverlays()
 T CRagdollProp::DrawDebugTextOverlays()
 T CRagdollProp::FadeOutThink()
 T CRagdollProp::GetAngleOverrideFromCurrentState(char*, int)
 T CRagdollProp::GetDataDescMap()
 T CRagdollProp::GetResponseSystem()
 T CRagdollProp::GetServerClass()
 T CRagdollProp::HandleFirstCollisionInteractions(int, gamevcollisionevent_t*)
 T CRagdollProp::HasPhysgunInteraction(char const*, char const*)
 T CRagdollProp::HasPhysicsAttacker(float)
 T CRagdollProp::InitRagdoll(Vector const&, int, Vector const&, matrix3x4_t*, matrix3x4_t*, float, int, bool, bool)
 T CRagdollProp::InitRagdollAnimation()
 T CRagdollProp::InputDisableMotion(inputdata_t&)
 T CRagdollProp::InputEnableMotion(inputdata_t&)
 T CRagdollProp::InputFadeAndRemove(inputdata_t&)
 T CRagdollProp::InputStartRadgollBoogie(inputdata_t&)
 T CRagdollProp::InputTurnOff(inputdata_t&)
 T CRagdollProp::InputTurnOn(inputdata_t&)
 T CRagdollProp::IsAlive()
 T CRagdollProp::IsRagdoll()
 T CRagdollProp::ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T CRagdollProp::ObjectCaps()
 T CRagdollProp::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T CRagdollProp::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T CRagdollProp::OnRestore()
 T CRagdollProp::OnSave(IEntitySaveUtils*)
 T CRagdollProp::OnTakeDamage(CTakeDamageInfo const&)
 T CRagdollProp::PhysGunLaunchAngularImpulse()
 T CRagdollProp::Precache()
 T CRagdollProp::SetDamageEntity(CBaseEntity*)
 T CRagdollProp::SetDebrisThink()
 T CRagdollProp::SetupBones(matrix3x4a_t*, int)
 T CRagdollProp::Spawn()
 T CRagdollProp::Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T CRagdollProp::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CRagdollProp::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T CRagdollProp::UpdateNetworkDataFromVPhysics(IPhysicsObject*, int)
 T CRagdollProp::UpdateOnRemove()
 T CRagdollProp::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CRagdollProp::VPhysicsGetObjectList(IPhysicsObject**, int)
 T CRagdollProp::VPhysicsUpdate(IPhysicsObject*)
 T CRagdollProp::YouForgotToImplementOrDeclareServerClass()
 T CRagdollProp::~CRagdollProp()
 T CRagdollPropAttached::Detach()
 T CRagdollPropAttached::GetDataDescMap()
 T CRagdollPropAttached::GetServerClass()
 T CRagdollPropAttached::InitRagdollAttached(IPhysicsObject*, Vector const&, int, matrix3x4_t*, matrix3x4_t*, float, int, CBaseAnimating*, int, Vector const&, int, Vector const&)
 T CRagdollPropAttached::VPhysicsUpdate(IPhysicsObject*)
 T CRagdollPropAttached::YouForgotToImplementOrDeclareServerClass()
 T CRagdollPropAttached::~CRagdollPropAttached()
 T CRallyPoint::DrawDebugTextOverlays()
 T CRallyPoint::GetDataDescMap()
 T CRallyPoint::~CRallyPoint()
 T CRecharge* _CreateEntityTemplate<CRecharge>(CRecharge*, char const*)
 T CRecharge::CreateVPhysics()
 T CRecharge::DrawDebugTextOverlays()
 T CRecharge::GetDataDescMap()
 T CRecharge::InputRecharge(inputdata_t&)
 T CRecharge::KeyValue(char const*, char const*)
 T CRecharge::ObjectCaps()
 T CRecharge::Off()
 T CRecharge::Recharge()
 T CRecharge::Spawn()
 T CRecharge::UpdateJuice(int)
 T CRecharge::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CRecharge::~CRecharge()
 T CRecipientFilter::AddAllPlayers()
 T CRecipientFilter::AddPlayersFromBitMask(CBitVec<64>&)
 T CRecipientFilter::AddRecipient(CBasePlayer*)
 T CRecipientFilter::AddRecipientsByPAS(Vector const&)
 T CRecipientFilter::AddRecipientsByPVS(Vector const&)
 T CRecipientFilter::AddRecipientsByTeam(CTeam*)
 T CRecipientFilter::CRecipientFilter()
 T CRecipientFilter::CopyFrom(CRecipientFilter const&)
 T CRecipientFilter::GetRecipientCount() const
 T CRecipientFilter::GetRecipientIndex(int) const
 T CRecipientFilter::IgnorePredictionCull() const
 T CRecipientFilter::IsInitMessage() const
 T CRecipientFilter::IsReliable() const
 T CRecipientFilter::MakeInitMessage()
 T CRecipientFilter::MakeReliable()
 T CRecipientFilter::RemoveAllRecipients()
 T CRecipientFilter::RemoveRecipient(CBasePlayer*)
 T CRecipientFilter::RemoveRecipientByPlayerIndex(int)
 T CRecipientFilter::RemoveRecipientsByTeam(CTeam*)
 T CRecipientFilter::RemoveRecipientsNotOnTeam(CTeam*)
 T CRecipientFilter::RemoveSplitScreenPlayers()
 T CRecipientFilter::ReplaceSplitScreenPlayersWithOwners()
 T CRecipientFilter::SetIgnorePredictionCull(bool)
 T CRecipientFilter::UsePredictionRules()
 T CRecipientFilter::~CRecipientFilter()
 T CRefCountServiceBase<true, CRefMT>::OnFinalRelease()
 T CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >::AddRef()
 T CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >::Release()
 T CRefCounted1<IRefCounted, CRefCountServiceBase<true, CRefMT> >::AddRef()
 T CRefCounted1<IRefCounted, CRefCountServiceBase<true, CRefMT> >::Release()
 T CRegistry::DirectInit(char const*)
 T CRegistry::Init(char const*)
 T CRegistry::ReadInt(char const*, char const*, int)
 T CRegistry::ReadInt(char const*, int)
 T CRegistry::ReadString(char const*, char const*)
 T CRegistry::ReadString(char const*, char const*, char const*)
 T CRegistry::Shutdown()
 T CRegistry::WriteInt(char const*, char const*, int)
 T CRegistry::WriteInt(char const*, int)
 T CRegistry::WriteString(char const*, char const*)
 T CRegistry::WriteString(char const*, char const*, char const*)
 T CRegistry::~CRegistry()
 T CReliableBroadcastRecipientFilter::~CReliableBroadcastRecipientFilter()
 T CRemarkableEntityList::LevelShutdownPostEntity()
 T CRemarkableEntityList::~CRemarkableEntityList()
 T CRemoteBugHelper::Init()
 T CRemoteBugHelper::Name()
 T CRemoteBugHelper::Shutdown()
 T CRemoteBugHelper::~CRemoteBugHelper()
 T CRespawnEntitiesFilter::CreateNextEntity(char const*)
 T CRespawnEntitiesFilter::ShouldCreateEntity(char const*)
 T CResponseQueue::Add(CAI_Concept const&, ResponseRules::CriteriaSet const*, float, CResponseQueue::CFollowupTargetSpec_t const&, CBaseEntity*)
 T CResponseQueue::AddExpresserHost(CBaseEntity*)
 T CResponseQueue::CResponseQueue(int)
 T CResponseQueue::DispatchOneResponse(CResponseQueue::CDeferredResponse&)
 T CResponseQueue::DispatchOneResponse_ThenANY(CResponseQueue::CDeferredResponse&, ResponseRules::CriteriaSet*, CBaseEntity*, float)
 T CResponseQueue::PerFrameDispatch()
 T CResponseQueue::RemoveExpresserHost(CBaseEntity*)
 T CResponseQueue::RemoveSpeechQueuedFor(CBaseEntity const*)
 T CResponseQueueManager::FrameUpdatePostEntityThink()
 T CResponseQueueManager::LevelInitPreEntity()
 T CResponseQueueManager::Shutdown()
 T CResponseQueueManager::~CResponseQueueManager()
 T CResponseRulesToEngineInterface::FreeFile(unsigned char*)
 T CResponseRulesToEngineInterface::GetCommandLine()
 T CResponseRulesToEngineInterface::GetFilesystem()
 T CResponseRulesToEngineInterface::GetRandomStream()
 T CResponseRulesToEngineInterface::LoadFileForMe(char const*, int*)
 T CResponseRulesToEngineInterface::ParseFile(char const*, char*, int)
 T CResponseSystemSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CResponseSystemSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CRestore::CRestore(CSaveRestoreData*)
 T CRestore::DoReadAll(void*, datamap_t*, datamap_t*)
 T CRestore::EmptyFields(void*, typedescription_t*, int)
 T CRestore::EndBlock()
 T CRestore::GetGameSaveRestoreInfo()
 T CRestore::GetPrecacheMode()
 T CRestore::GetReadPos() const
 T CRestore::ReadAll(void*, datamap_t*)
 T CRestore::ReadBasicField(SaveRestoreRecordHeader_t const&, void*, datamap_t*, typedescription_t*)
 T CRestore::ReadBool(bool*, int, int)
 T CRestore::ReadData(char*, int, int)
 T CRestore::ReadEHandle(CHandle<CBaseEntity>*, int, int)
 T CRestore::ReadEdictPtr(edict_t**, int, int)
 T CRestore::ReadEntityPtr(CBaseEntity**, int, int)
 T CRestore::ReadFields(char const*, void*, datamap_t*, typedescription_t*, int)
 T CRestore::ReadFloat(float*, int, int)
 T CRestore::ReadFunction(datamap_t*, void (CBaseEntity::**)(inputdata_t&), int, int)
 T CRestore::ReadGameField(SaveRestoreRecordHeader_t const&, void*, datamap_t*, typedescription_t*)
 T CRestore::ReadHeader(SaveRestoreRecordHeader_t*)
 T CRestore::ReadInt()
 T CRestore::ReadInt(int*, int, int)
 T CRestore::ReadMatrix3x4Worldspace(matrix3x4_t*, int, int)
 T CRestore::ReadPositionVector(Vector*)
 T CRestore::ReadPositionVector(Vector*, int, int)
 T CRestore::ReadQuaternion(Quaternion*)
 T CRestore::ReadQuaternion(Quaternion*, int, int)
 T CRestore::ReadShort()
 T CRestore::ReadShort(short*, int, int)
 T CRestore::ReadString(char*, int, int)
 T CRestore::ReadString(string_t*, int, int)
 T CRestore::ReadTick(int*, int, int)
 T CRestore::ReadTime(float*, int, int)
 T CRestore::ReadVMatrix(VMatrix*, int, int)
 T CRestore::ReadVMatrixWorldspace(VMatrix*, int, int)
 T CRestore::ReadVector(Vector*)
 T CRestore::ReadVector(Vector*, int, int)
 T CRestore::ScanAheadForHammerID()
 T CRestore::SetReadPos(int)
 T CRestore::SkipEntityData()
 T CRestore::SkipHeader()
 T CRestore::StartBlock()
 T CRestore::StartBlock(SaveRestoreRecordHeader_t*)
 T CRestore::StartBlock(char*)
 T CRestore::StringFromHeaderSymbol(int)
 T CRestore::~CRestore()
 T CRevertSaved::GetDataDescMap()
 T CRevertSaved::InputReload(inputdata_t&)
 T CRevertSaved::LoadThink()
 T CRevertSaved::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CRevertSaved::~CRevertSaved()
 T CRocket_Turret_Projectile::CreateSmokeTrail()
 T CRocket_Turret_Projectile::CreateSounds()
 T CRocket_Turret_Projectile::CreateVPhysics()
 T CRocket_Turret_Projectile::DoExplosion()
 T CRocket_Turret_Projectile::Explode()
 T CRocket_Turret_Projectile::GetDataDescMap()
 T CRocket_Turret_Projectile::MissileTouch(CBaseEntity*)
 T CRocket_Turret_Projectile::NotifySystemEvent(CBaseEntity*, notify_system_event_t, notify_system_event_params_t const&)
 T CRocket_Turret_Projectile::Precache()
 T CRocket_Turret_Projectile::SetLauncher(CHandle<CBaseEntity>)
 T CRocket_Turret_Projectile::Spawn()
 T CRocket_Turret_Projectile::StopLoopingSounds()
 T CRocket_Turret_Projectile::UpdateOnRemove()
 T CRocket_Turret_Projectile::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CRocket_Turret_Projectile::~CRocket_Turret_Projectile()
 T CRopeAnchor::FallThink()
 T CRopeAnchor::GetDataDescMap()
 T CRopeAnchor::RemoveThink()
 T CRopeAnchor::Spawn()
 T CRopeAnchor::~CRopeAnchor()
 T CRopeKeyframe::Activate()
 T CRopeKeyframe::Break()
 T CRopeKeyframe::CRopeKeyframe()
 T CRopeKeyframe::Create(CBaseEntity*, CBaseEntity*, int, int, int, char const*, int, char const*)
 T CRopeKeyframe::CreateWithSecondPointDetached(CBaseEntity*, int, int, int, char const*, int, bool, char const*)
 T CRopeKeyframe::DetachPoint(int)
 T CRopeKeyframe::EnableWind(bool)
 T CRopeKeyframe::EndpointsChanged()
 T CRopeKeyframe::GetDataDescMap()
 T CRopeKeyframe::GetEndPointPos(int, Vector&)
 T CRopeKeyframe::GetServerClass()
 T CRopeKeyframe::Init()
 T CRopeKeyframe::InputBreak(inputdata_t&)
 T CRopeKeyframe::InputSetForce(inputdata_t&)
 T CRopeKeyframe::InputSetScrollSpeed(inputdata_t&)
 T CRopeKeyframe::KeyValue(char const*, char const*)
 T CRopeKeyframe::NotifyPositionChanged(CBaseEntity*)
 T CRopeKeyframe::ObjectCaps()
 T CRopeKeyframe::OnTakeDamage(CTakeDamageInfo const&)
 T CRopeKeyframe::Precache()
 T CRopeKeyframe::PrecacheShakeRopes()
 T CRopeKeyframe::PropagateForce(CBaseEntity*, CBaseEntity*, CBaseEntity*, float, float, float)
 T CRopeKeyframe::RecalculateLength()
 T CRopeKeyframe::SetAttachmentPoint(CBaseHandle&, short&, CBaseEntity*, int)
 T CRopeKeyframe::SetParent(CBaseEntity*, int)
 T CRopeKeyframe::SetTransmit(CCheckTransmitInfo*, bool)
 T CRopeKeyframe::ShakeRopes(Vector const&, float, float)
 T CRopeKeyframe::Spawn()
 T CRopeKeyframe::UpdateBBox(bool)
 T CRopeKeyframe::UpdateTransmitState()
 T CRopeKeyframe::YouForgotToImplementOrDeclareServerClass()
 T CRopeKeyframe::~CRopeKeyframe()
 T CRotButton* _CreateEntityTemplate<CRotButton>(CRotButton*, char const*)
 T CRotButton::CreateVPhysics()
 T CRotButton::Spawn()
 T CRotButton::~CRotButton()
 T CRotDoor::CreateVPhysics()
 T CRotDoor::GetDataDescMap()
 T CRotDoor::IsRotatingDoor()
 T CRotDoor::SetToggleState(int)
 T CRotDoor::Spawn()
 T CRotDoor::~CRotDoor()
 T CRotorWashShooter::DoWashPush(float, Vector const&)
 T CRotorWashShooter::GetDataDescMap()
 T CRotorWashShooter::Spawn()
 T CRotorWashShooter::~CRotorWashShooter()
 T CRuleBrushEntity::Spawn()
 T CRulePointEntity::GetDataDescMap()
 T CRulePointEntity::Spawn()
 T CSGPlaneList(CUtlVector<Vector, CUtlMemory<Vector, int> >&, CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >&, CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >&, VPlane*, int, float)
 T CSGPlaneList_SIMD(CUtlVector<float __vector(4), CUtlMemory<float __vector(4), int> >&, CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >&, CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >&, float __vector(4)*, int, float)
 T CSOEconClaimCode::ByteSize() const
 T CSOEconClaimCode::Clear()
 T CSOEconClaimCode::GetCachedSize() const
 T CSOEconClaimCode::GetMetadata() const
 T CSOEconClaimCode::IsInitialized() const
 T CSOEconClaimCode::MergeFrom(CSOEconClaimCode const&)
 T CSOEconClaimCode::New() const
 T CSOEconClaimCode::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOEconClaimCode::SetCachedSize(int) const
 T CSOEconClaimCode::~CSOEconClaimCode()
 T CSOEconGameAccountClient::ByteSize() const
 T CSOEconGameAccountClient::Clear()
 T CSOEconGameAccountClient::GetCachedSize() const
 T CSOEconGameAccountClient::GetMetadata() const
 T CSOEconGameAccountClient::IsInitialized() const
 T CSOEconGameAccountClient::MergeFrom(CSOEconGameAccountClient const&)
 T CSOEconGameAccountClient::New() const
 T CSOEconGameAccountClient::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOEconGameAccountClient::SetCachedSize(int) const
 T CSOEconGameAccountClient::~CSOEconGameAccountClient()
 T CSOEconItem::ByteSize() const
 T CSOEconItem::CSOEconItem()
 T CSOEconItem::Clear()
 T CSOEconItem::GetCachedSize() const
 T CSOEconItem::GetMetadata() const
 T CSOEconItem::IsInitialized() const
 T CSOEconItem::MergeFrom(CSOEconItem const&)
 T CSOEconItem::New() const
 T CSOEconItem::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOEconItem::SetCachedSize(int) const
 T CSOEconItem::SharedDtor()
 T CSOEconItem::~CSOEconItem()
 T CSOEconItemAttribute::ByteSize() const
 T CSOEconItemAttribute::CSOEconItemAttribute()
 T CSOEconItemAttribute::Clear()
 T CSOEconItemAttribute::GetCachedSize() const
 T CSOEconItemAttribute::GetMetadata() const
 T CSOEconItemAttribute::IsInitialized() const
 T CSOEconItemAttribute::MergeFrom(CSOEconItemAttribute const&)
 T CSOEconItemAttribute::New() const
 T CSOEconItemAttribute::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOEconItemAttribute::SetCachedSize(int) const
 T CSOEconItemAttribute::~CSOEconItemAttribute()
 T CSOEconItemEquipped::ByteSize() const
 T CSOEconItemEquipped::CSOEconItemEquipped()
 T CSOEconItemEquipped::Clear()
 T CSOEconItemEquipped::GetCachedSize() const
 T CSOEconItemEquipped::GetMetadata() const
 T CSOEconItemEquipped::IsInitialized() const
 T CSOEconItemEquipped::MergeFrom(CSOEconItemEquipped const&)
 T CSOEconItemEquipped::New() const
 T CSOEconItemEquipped::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOEconItemEquipped::SetCachedSize(int) const
 T CSOEconItemEquipped::~CSOEconItemEquipped()
 T CSOEconItemPresetInstance::ByteSize() const
 T CSOEconItemPresetInstance::Clear()
 T CSOEconItemPresetInstance::GetCachedSize() const
 T CSOEconItemPresetInstance::GetMetadata() const
 T CSOEconItemPresetInstance::IsInitialized() const
 T CSOEconItemPresetInstance::MergeFrom(CSOEconItemPresetInstance const&)
 T CSOEconItemPresetInstance::New() const
 T CSOEconItemPresetInstance::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOEconItemPresetInstance::SetCachedSize(int) const
 T CSOEconItemPresetInstance::~CSOEconItemPresetInstance()
 T CSOItemCommunityMap::ByteSize() const
 T CSOItemCommunityMap::Clear()
 T CSOItemCommunityMap::GetCachedSize() const
 T CSOItemCommunityMap::GetMetadata() const
 T CSOItemCommunityMap::IsInitialized() const
 T CSOItemCommunityMap::MergeFrom(CSOItemCommunityMap const&)
 T CSOItemCommunityMap::New() const
 T CSOItemCommunityMap::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOItemCommunityMap::SetCachedSize(int) const
 T CSOItemCommunityMap::SharedDtor()
 T CSOItemCommunityMap::~CSOItemCommunityMap()
 T CSOItemCriteria::ByteSize() const
 T CSOItemCriteria::CSOItemCriteria()
 T CSOItemCriteria::Clear()
 T CSOItemCriteria::GetCachedSize() const
 T CSOItemCriteria::GetMetadata() const
 T CSOItemCriteria::IsInitialized() const
 T CSOItemCriteria::MergeFrom(CSOItemCriteria const&)
 T CSOItemCriteria::New() const
 T CSOItemCriteria::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOItemCriteria::SetCachedSize(int) const
 T CSOItemCriteria::~CSOItemCriteria()
 T CSOItemCriteriaCondition::ByteSize() const
 T CSOItemCriteriaCondition::CSOItemCriteriaCondition()
 T CSOItemCriteriaCondition::Clear()
 T CSOItemCriteriaCondition::GetCachedSize() const
 T CSOItemCriteriaCondition::GetMetadata() const
 T CSOItemCriteriaCondition::IsInitialized() const
 T CSOItemCriteriaCondition::MergeFrom(CSOItemCriteriaCondition const&)
 T CSOItemCriteriaCondition::New() const
 T CSOItemCriteriaCondition::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOItemCriteriaCondition::SetCachedSize(int) const
 T CSOItemCriteriaCondition::SharedDtor()
 T CSOItemCriteriaCondition::~CSOItemCriteriaCondition()
 T CSOItemRecipe::ByteSize() const
 T CSOItemRecipe::CSOItemRecipe()
 T CSOItemRecipe::Clear()
 T CSOItemRecipe::GetCachedSize() const
 T CSOItemRecipe::GetMetadata() const
 T CSOItemRecipe::IsInitialized() const
 T CSOItemRecipe::MergeFrom(CSOItemRecipe const&)
 T CSOItemRecipe::New() const
 T CSOItemRecipe::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOItemRecipe::SetCachedSize(int) const
 T CSOItemRecipe::SharedDtor()
 T CSOItemRecipe::~CSOItemRecipe()
 T CSOLobbyInvite::ByteSize() const
 T CSOLobbyInvite::Clear()
 T CSOLobbyInvite::GetCachedSize() const
 T CSOLobbyInvite::GetMetadata() const
 T CSOLobbyInvite::IsInitialized() const
 T CSOLobbyInvite::MergeFrom(CSOLobbyInvite const&)
 T CSOLobbyInvite::New() const
 T CSOLobbyInvite::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOLobbyInvite::SetCachedSize(int) const
 T CSOLobbyInvite::~CSOLobbyInvite()
 T CSOPartyInvite::ByteSize() const
 T CSOPartyInvite::Clear()
 T CSOPartyInvite::GetCachedSize() const
 T CSOPartyInvite::GetMetadata() const
 T CSOPartyInvite::IsInitialized() const
 T CSOPartyInvite::MergeFrom(CSOPartyInvite const&)
 T CSOPartyInvite::New() const
 T CSOPartyInvite::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOPartyInvite::SetCachedSize(int) const
 T CSOPartyInvite::~CSOPartyInvite()
 T CSOSelectedItemPreset::ByteSize() const
 T CSOSelectedItemPreset::Clear()
 T CSOSelectedItemPreset::GetCachedSize() const
 T CSOSelectedItemPreset::GetMetadata() const
 T CSOSelectedItemPreset::IsInitialized() const
 T CSOSelectedItemPreset::MergeFrom(CSOSelectedItemPreset const&)
 T CSOSelectedItemPreset::New() const
 T CSOSelectedItemPreset::SerializeWithCachedSizesToArray(unsigned char*) const
 T CSOSelectedItemPreset::SetCachedSize(int) const
 T CSOSelectedItemPreset::~CSOSelectedItemPreset()
 T CSave::BufferData(char const*, int)
 T CSave::CSave(CSaveRestoreData*)
 T CSave::DoWriteAll(void const*, datamap_t*, datamap_t*)
 T CSave::EndBlock()
 T CSave::EndLogging()
 T CSave::EntityFlagsSet(int, int)
 T CSave::EntityIndex(CBaseEntity const*)
 T CSave::GetGameSaveRestoreInfo()
 T CSave::GetWritePos() const
 T CSave::IsAsync()
 T CSave::SetWritePos(int)
 T CSave::ShouldSaveField(void const*, typedescription_t*)
 T CSave::StartBlock()
 T CSave::StartBlock(char const*)
 T CSave::StartLogging(char const*)
 T CSave::WriteAll(void const*, datamap_t*)
 T CSave::WriteBasicField(char const*, void*, datamap_t*, typedescription_t*)
 T CSave::WriteBool(bool const*, int)
 T CSave::WriteBool(char const*, bool const*, int)
 T CSave::WriteData(char const*, int)
 T CSave::WriteData(char const*, int, char const*)
 T CSave::WriteEHandle(CHandle<CBaseEntity> const*, int)
 T CSave::WriteEHandle(char const*, CHandle<CBaseEntity> const*, int)
 T CSave::WriteEdictPtr(char const*, edict_t**, int)
 T CSave::WriteEdictPtr(edict_t**, int)
 T CSave::WriteEntityPtr(CBaseEntity**, int)
 T CSave::WriteEntityPtr(char const*, CBaseEntity**, int)
 T CSave::WriteFields(char const*, void const*, datamap_t*, typedescription_t*, int)
 T CSave::WriteFloat(char const*, float const*, int)
 T CSave::WriteFloat(float const*, int)
 T CSave::WriteFunction(datamap_t*, char const*, void (CBaseEntity::* const*)(inputdata_t&), int)
 T CSave::WriteGameField(char const*, void*, datamap_t*, typedescription_t*)
 T CSave::WriteHeader(char const*, int)
 T CSave::WriteInt(char const*, int const*, int)
 T CSave::WriteInt(int const*, int)
 T CSave::WriteMatrix3x4Worldspace(matrix3x4_t const*, int)
 T CSave::WritePositionVector(Vector const&)
 T CSave::WritePositionVector(Vector const*, int)
 T CSave::WritePositionVector(char const*, Vector const&)
 T CSave::WritePositionVector(char const*, Vector const*, int)
 T CSave::WriteQuaternion(Quaternion const&)
 T CSave::WriteQuaternion(Quaternion const*, int)
 T CSave::WriteQuaternion(char const*, Quaternion const&)
 T CSave::WriteQuaternion(char const*, Quaternion const*, int)
 T CSave::WriteShort(char const*, short const*, int)
 T CSave::WriteShort(short const*, int)
 T CSave::WriteString(char const*)
 T CSave::WriteString(char const*, char const*)
 T CSave::WriteString(char const*, string_t const*, int)
 T CSave::WriteString(string_t const*, int)
 T CSave::WriteTick(char const*, int const*, int)
 T CSave::WriteTick(int const*, int)
 T CSave::WriteTime(char const*, float const*, int)
 T CSave::WriteTime(float const*, int)
 T CSave::WriteVMatrixWorldspace(char const*, VMatrix const*, int)
 T CSave::WriteVector(Vector const&)
 T CSave::WriteVector(Vector const*, int)
 T CSave::WriteVector(char const*, Vector const&)
 T CSave::WriteVector(char const*, Vector const*, int)
 T CSave::~CSave()
 T CSaveRestoreBlockSet::AddBlockHandler(ISaveRestoreBlockHandler*)
 T CSaveRestoreBlockSet::CallBlockHandlerRestore(ISaveRestoreBlockHandler*, int, IRestore*, bool)
 T CSaveRestoreBlockSet::GetBlockName()
 T CSaveRestoreBlockSet::PostRestore()
 T CSaveRestoreBlockSet::PostSave()
 T CSaveRestoreBlockSet::PreRestore()
 T CSaveRestoreBlockSet::PreSave(CSaveRestoreData*)
 T CSaveRestoreBlockSet::ReadRestoreHeaders(IRestore*)
 T CSaveRestoreBlockSet::RemoveBlockHandler(ISaveRestoreBlockHandler*)
 T CSaveRestoreBlockSet::Restore(IRestore*, bool)
 T CSaveRestoreBlockSet::Save(ISave*)
 T CSaveRestoreBlockSet::WriteSaveHeaders(ISave*)
 T CSaveRestoreBlockSet::~CSaveRestoreBlockSet()
 T CSceneEntity::Activate()
 T CSceneEntity::AddBroadcastTeamTarget(int)
 T CSceneEntity::AddListManager(CSceneListManager*)
 T CSceneEntity::BuildSortedSpeakEventSoundsPrefetchList(CChoreoScene*, CUtlSymbolTable&, CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >&, float)
 T CSceneEntity::CSceneEntity()
 T CSceneEntity::CancelPlayback()
 T CSceneEntity::CheckActors()
 T CSceneEntity::CheckEvent(float, CChoreoScene*, CChoreoEvent*)
 T CSceneEntity::CheckInterruptCompletion()
 T CSceneEntity::ClearActivatorTargets()
 T CSceneEntity::ClearInterrupt()
 T CSceneEntity::ClearSceneEvents(CChoreoScene*, bool)
 T CSceneEntity::ClearSchedules(CChoreoScene*)
 T CSceneEntity::DispatchEndExpression(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchEndFace(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchEndFlexAnimation(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchEndGeneric(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchEndGesture(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchEndInterrupt(CChoreoScene*, CChoreoEvent*)
 T CSceneEntity::DispatchEndLookAt(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchEndMoveTo(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchEndPermitResponses(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchEndSequence(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchEndSpeak(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchPauseScene(CChoreoScene*, char const*)
 T CSceneEntity::DispatchProcessLoop(CChoreoScene*, CChoreoEvent*)
 T CSceneEntity::DispatchStartExpression(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchStartFace(CChoreoScene*, CBaseFlex*, CBaseEntity*, CChoreoEvent*)
 T CSceneEntity::DispatchStartFlexAnimation(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchStartGeneric(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchStartGesture(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchStartInterrupt(CChoreoScene*, CChoreoEvent*)
 T CSceneEntity::DispatchStartLookAt(CChoreoScene*, CBaseFlex*, CBaseEntity*, CChoreoEvent*)
 T CSceneEntity::DispatchStartMoveTo(CChoreoScene*, CBaseFlex*, CBaseEntity*, CChoreoEvent*)
 T CSceneEntity::DispatchStartPermitResponses(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchStartSequence(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchStartSpeak(CChoreoScene*, CBaseFlex*, CChoreoEvent*, soundlevel_t)
 T CSceneEntity::DispatchStartSubScene(CChoreoScene*, CBaseFlex*, CChoreoEvent*)
 T CSceneEntity::DispatchStopPoint(CChoreoScene*, char const*)
 T CSceneEntity::DoThink(float)
 T CSceneEntity::DrawDebugTextOverlays()
 T CSceneEntity::EndEvent(float, CChoreoScene*, CChoreoEvent*)
 T CSceneEntity::EstimateLength()
 T CSceneEntity::FindNamedActor(CChoreoActor*)
 T CSceneEntity::FindNamedActor(char const*)
 T CSceneEntity::FindNamedActor(int)
 T CSceneEntity::FindNamedEntity(char const*, CBaseEntity*, bool, bool)
 T CSceneEntity::FindNamedEntityClosest(char const*, CBaseEntity*, bool, bool, char const*)
 T CSceneEntity::FindNamedTarget(string_t, bool)
 T CSceneEntity::GenerateSceneForSound(CBaseFlex*, char const*)
 T CSceneEntity::GetDataDescMap()
 T CSceneEntity::GetPostSpeakDelay()
 T CSceneEntity::GetScriptDesc()
 T CSceneEntity::GetServerClass()
 T CSceneEntity::GetSoundNameForPlayer(CChoreoEvent*, CBasePlayer*, char*, unsigned long)
 T CSceneEntity::InputCancelAtNextInterrupt(inputdata_t&)
 T CSceneEntity::InputCancelPlayback(inputdata_t&)
 T CSceneEntity::InputInterjectResponse(inputdata_t&)
 T CSceneEntity::InputPausePlayback(inputdata_t&)
 T CSceneEntity::InputPitchShiftPlayback(inputdata_t&)
 T CSceneEntity::InputResumePlayback(inputdata_t&)
 T CSceneEntity::InputScriptPlayerDeath(inputdata_t&)
 T CSceneEntity::InputSetTarget1(inputdata_t&)
 T CSceneEntity::InputSetTarget2(inputdata_t&)
 T CSceneEntity::InputSetTarget3(inputdata_t&)
 T CSceneEntity::InputSetTarget4(inputdata_t&)
 T CSceneEntity::InputStartPlayback(inputdata_t&)
 T CSceneEntity::InputStopWaitingForActor(inputdata_t&)
 T CSceneEntity::InputTriggerEvent(inputdata_t&)
 T CSceneEntity::InterruptThisScene(CSceneEntity*)
 T CSceneEntity::IsPaused() const
 T CSceneEntity::IsPlayingBack() const
 T CSceneEntity::LoadScene(char const*, IChoreoEventCallback*)
 T CSceneEntity::NotifyOfCompletion(CSceneEntity*)
 T CSceneEntity::OnLoaded()
 T CSceneEntity::OnRestore()
 T CSceneEntity::OnSceneFinished(bool, bool)
 T CSceneEntity::PausePlayback()
 T CSceneEntity::PauseThink()
 T CSceneEntity::PitchShiftPlayback(float)
 T CSceneEntity::Precache()
 T CSceneEntity::PrecacheScene(CChoreoScene*)
 T CSceneEntity::PrefetchAnimBlocks(CChoreoScene*)
 T CSceneEntity::ProcessEvent(float, CChoreoScene*, CChoreoEvent*)
 T CSceneEntity::QueueResumePlayback()
 T CSceneEntity::RemoveBroadcastTeamTarget(int)
 T CSceneEntity::RequestCompletionNotification(CSceneEntity*)
 T CSceneEntity::ResumePlayback()
 T CSceneEntity::ScriptFindNamedEntity(char const*)
 T CSceneEntity::ScriptLoadSceneFromString(char const*, char const*)
 T CSceneEntity::ShouldNetwork() const
 T CSceneEntity::ShouldTransmit(CCheckTransmitInfo const*)
 T CSceneEntity::Spawn()
 T CSceneEntity::SpeakEventSoundLessFunc(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&)
 T CSceneEntity::StartEvent(float, CChoreoScene*, CChoreoEvent*)
 T CSceneEntity::StartPlayback()
 T CSceneEntity::Think()
 T CSceneEntity::UnloadScene()
 T CSceneEntity::UpdateOnRemove()
 T CSceneEntity::UpdateTransmitState()
 T CSceneEntity::YouForgotToImplementOrDeclareServerClass()
 T CSceneEntity::~CSceneEntity()
 T CSceneEventInfo::InitWeight(CBaseFlex*)
 T CSceneEventInfo::UpdateWeight(CBaseFlex*)
 T CSceneFindMarkFilter::GetFilterResult()
 T CSceneFindMarkFilter::ShouldFindEntity(CBaseEntity*)
 T CSceneFindNearestMarkFilter::CSceneFindNearestMarkFilter(CBaseEntity const*, Vector const&, float)
 T CSceneFindNearestMarkFilter::GetFilterResult()
 T CSceneFindNearestMarkFilter::ShouldFindEntity(CBaseEntity*)
 T CSceneListManager::Activate()
 T CSceneListManager::AddListManager(CSceneListManager*)
 T CSceneListManager::GetDataDescMap()
 T CSceneListManager::InputShutdown(inputdata_t&)
 T CSceneListManager::RemoveScene(int)
 T CSceneListManager::SceneStarted(CBaseEntity*)
 T CSceneListManager::~CSceneListManager()
 T CSceneManager::ActivateScene(CSceneEntity*)
 T CSceneManager::AddSceneEntity(CSceneEntity*)
 T CSceneManager::GetDataDescMap()
 T CSceneManager::IsInInterruptableScenes(CBaseFlex*)
 T CSceneManager::IsRunningScriptedScene(CBaseFlex*, bool)
 T CSceneManager::IsRunningScriptedSceneAndNotPaused(CBaseFlex*, bool)
 T CSceneManager::IsRunningScriptedSceneWithSpeech(CBaseFlex*, bool)
 T CSceneManager::IsRunningScriptedSceneWithSpeechAndNotPaused(CBaseFlex*, bool)
 T CSceneManager::ObjectCaps()
 T CSceneManager::OnClientActive(CBasePlayer*)
 T CSceneManager::PauseActorsScenes(CBaseFlex*, bool)
 T CSceneManager::QueueActorsScenesToResume(CBaseFlex*, bool)
 T CSceneManager::QueueRestoredSound(CBaseFlex*, char const*, soundlevel_t, float)
 T CSceneManager::RemoveActorFromScenes(CBaseFlex*, bool, bool, char const*)
 T CSceneManager::Spawn()
 T CSceneManager::Think()
 T CSceneManager::~CSceneManager()
 T CScenePrecacheSystem::LevelShutdownPreEntity()
 T CScenePrecacheSystem::~CScenePrecacheSystem()
 T CSceneTokenProcessor::CurrentToken()
 T CSceneTokenProcessor::Error(char const*, ...)
 T CSceneTokenProcessor::GetToken(bool)
 T CSceneTokenProcessor::SetBuffer(char*)
 T CSceneTokenProcessor::TokenAvailable()
 T CSchemaClassBindingBase::Install()
 T CScriptConstructor<CScriptKeyValues>::Construct()
 T CScriptConstructor<CScriptKeyValues>::Destruct(void*)
 T CScriptEntityIterator::CreateByClassname(char const*)
 T CScriptEntityIterator::FindByClassname(HSCRIPT__*, char const*)
 T CScriptEntityIterator::FindByClassnameNearest(char const*, Vector const&, float)
 T CScriptEntityIterator::FindByClassnameWithin(HSCRIPT__*, char const*, Vector const&, float)
 T CScriptEntityIterator::FindByModel(HSCRIPT__*, char const*)
 T CScriptEntityIterator::FindByName(HSCRIPT__*, char const*)
 T CScriptEntityIterator::FindByNameNearest(char const*, Vector const&, float)
 T CScriptEntityIterator::FindByNameWithin(HSCRIPT__*, char const*, Vector const&, float)
 T CScriptEntityIterator::FindByTarget(HSCRIPT__*, char const*)
 T CScriptEntityIterator::FindInSphere(HSCRIPT__*, Vector const&, float)
 T CScriptEntityIterator::First()
 T CScriptEntityIterator::Next(HSCRIPT__*)
 T CScriptIntro::Activate()
 T CScriptIntro::BlendComplete()
 T CScriptIntro::GetDataDescMap()
 T CScriptIntro::GetServerClass()
 T CScriptIntro::InputActivate(inputdata_t&)
 T CScriptIntro::InputDeactivate(inputdata_t&)
 T CScriptIntro::InputFadeTo(inputdata_t&)
 T CScriptIntro::InputSetBlendMode(inputdata_t&)
 T CScriptIntro::InputSetCameraViewEntity(inputdata_t&)
 T CScriptIntro::InputSetFOV(inputdata_t&)
 T CScriptIntro::InputSetFOVBlendTime(inputdata_t&)
 T CScriptIntro::InputSetFadeColor(inputdata_t&)
 T CScriptIntro::InputSetNextBlendMode(inputdata_t&)
 T CScriptIntro::InputSetNextBlendTime(inputdata_t&)
 T CScriptIntro::InputSetNextFOV(inputdata_t&)
 T CScriptIntro::Precache()
 T CScriptIntro::Spawn()
 T CScriptIntro::UpdateTransmitState()
 T CScriptIntro::YouForgotToImplementOrDeclareServerClass()
 T CScriptIntro::~CScriptIntro()
 T CScriptKeyValues::CScriptKeyValues(KeyValues*)
 T CScriptKeyValues::ScriptFindKey(char const*)
 T CScriptKeyValues::ScriptGetFirstSubKey()
 T CScriptKeyValues::ScriptGetKeyValueBool(char const*)
 T CScriptKeyValues::ScriptGetKeyValueFloat(char const*)
 T CScriptKeyValues::ScriptGetKeyValueInt(char const*)
 T CScriptKeyValues::ScriptGetKeyValueString(char const*)
 T CScriptKeyValues::ScriptGetNextKey()
 T CScriptKeyValues::ScriptIsKeyValueEmpty(char const*)
 T CScriptKeyValues::ScriptReleaseKeyValues()
 T CScriptScopeT<CDefScriptScopeBase>::Run(char const*, char const*)
 T CScriptScopeT<CDefScriptScopeBase>::Term()
 T CScriptScopeT<CDefScriptScopeBase>::~CScriptScopeT()
 T CScriptedTarget::DrawDebugGeometryOverlays()
 T CScriptedTarget::DrawDebugTextOverlays()
 T CScriptedTarget::FindEntity()
 T CScriptedTarget::GetDataDescMap()
 T CScriptedTarget::InputDisable(inputdata_t&)
 T CScriptedTarget::InputEnable(inputdata_t&)
 T CScriptedTarget::ObjectCaps()
 T CScriptedTarget::ScriptThink()
 T CScriptedTarget::Spawn()
 T CScriptedTarget::~CScriptedTarget()
 T CSendProxyRecipients::ExcludeOnly(int)
 T CSendProxyRecipients::SetOnly(int)
 T CServerBenchmark::CalculateBenchmarkCRC()
 T CServerBenchmark::EndBenchmark()
 T CServerBenchmark::GetTickOffset()
 T CServerBenchmark::InternalStartBenchmark(int, float)
 T CServerBenchmark::IsBenchmarkRunning()
 T CServerBenchmark::IsLocalBenchmarkPlayer(CBasePlayer*)
 T CServerBenchmark::OutputResults()
 T CServerBenchmark::RandomFloat(float, float)
 T CServerBenchmark::RandomInt(int, int)
 T CServerBenchmark::StartBenchmark()
 T CServerBenchmark::UpdateBenchmark()
 T CServerBenchmark::UpdateVPhysicsObjects()
 T CServerBenchmark::~CServerBenchmark()
 T CServerDLLSharedAppSystems::Count()
 T CServerDLLSharedAppSystems::GetDllName(int)
 T CServerDLLSharedAppSystems::GetInterfaceName(int)
 T CServerDLLSharedAppSystems::~CServerDLLSharedAppSystems()
 T CServerGameClients::ClientActive(edict_t*, bool)
 T CServerGameClients::ClientCommand(edict_t*, CCommand const&)
 T CServerGameClients::ClientCommandKeyValues(edict_t*, KeyValues*)
 T CServerGameClients::ClientConnect(edict_t*, char const*, char const*, char*, int)
 T CServerGameClients::ClientDisconnect(edict_t*)
 T CServerGameClients::ClientEarPosition(edict_t*, Vector*)
 T CServerGameClients::ClientFullyConnect(edict_t*)
 T CServerGameClients::ClientPutInServer(edict_t*, char const*)
 T CServerGameClients::ClientSettingsChanged(edict_t*)
 T CServerGameClients::ClientSetupVisibility(edict_t*, edict_t*, unsigned char*, int)
 T CServerGameClients::ClientVoice(edict_t*)
 T CServerGameClients::GetBugReportInfo(char*, int)
 T CServerGameClients::GetMaxHumanPlayers()
 T CServerGameClients::GetMaxSplitscreenPlayers()
 T CServerGameClients::GetPlayerLimits(int&, int&, int&) const
 T CServerGameClients::GetPlayerState(edict_t*)
 T CServerGameClients::GetReplayDelay(edict_t*, int&)
 T CServerGameClients::NetworkIDValidated(char const*, char const*)
 T CServerGameClients::PostClientMessagesSent()
 T CServerGameClients::ProcessUsercmds(edict_t*, bf_read*, int, int, int, bool, bool)
 T CServerGameClients::SetCommandClient(int)
 T CServerGameDLL::ApplyGameSettings(KeyValues*)
 T CServerGameDLL::BuildAdjacentMapList()
 T CServerGameDLL::CreateEntityTransitionList(CSaveRestoreData*, int)
 T CServerGameDLL::CreateNetworkStringTables()
 T CServerGameDLL::DLLInit(void* (*)(char const*, int*), void* (*)(char const*, int*), void* (*)(char const*, int*), CGlobalVars*)
 T CServerGameDLL::DLLShutdown()
 T CServerGameDLL::GameFrame(bool)
 T CServerGameDLL::GameInit()
 T CServerGameDLL::GameServerSteamAPIActivated()
 T CServerGameDLL::GameShutdown()
 T CServerGameDLL::GetAllServerClasses()
 T CServerGameDLL::GetGameDescription()
 T CServerGameDLL::GetMatchmakingTags(char*, unsigned long)
 T CServerGameDLL::GetSaveComment(char*, int, float, float, bool)
 T CServerGameDLL::GetStandardSendProxies()
 T CServerGameDLL::GetTickInterval() const
 T CServerGameDLL::GetUserMessageInfo(int, char*, int, int&)
 T CServerGameDLL::InvalidateMdlCache()
 T CServerGameDLL::IsRestoring()
 T CServerGameDLL::LevelInit(char const*, char const*, char const*, char const*, bool, bool)
 T CServerGameDLL::LevelInit_ParseAllEntities(char const*)
 T CServerGameDLL::LevelShutdown()
 T CServerGameDLL::OnQueryCvarValueFinished(int, edict_t*, EQueryCvarValueStatus, char const*, char const*)
 T CServerGameDLL::PostInit()
 T CServerGameDLL::PostToolsInit()
 T CServerGameDLL::PreClientUpdate(bool)
 T CServerGameDLL::PreSave(CSaveRestoreData*)
 T CServerGameDLL::PreSaveGameLoaded(char const*, bool)
 T CServerGameDLL::ReadRestoreHeaders(CSaveRestoreData*)
 T CServerGameDLL::Restore(CSaveRestoreData*, bool)
 T CServerGameDLL::RestoreGlobalState(CSaveRestoreData*)
 T CServerGameDLL::Save(CSaveRestoreData*)
 T CServerGameDLL::SaveGlobalState(CSaveRestoreData*)
 T CServerGameDLL::SaveInit(int)
 T CServerGameDLL::SaveReadFields(CSaveRestoreData*, char const*, void*, datamap_t*, typedescription_t*, int)
 T CServerGameDLL::SaveWriteFields(CSaveRestoreData*, char const*, void*, datamap_t*, typedescription_t*, int)
 T CServerGameDLL::ServerActivate(edict_t*, int, int)
 T CServerGameDLL::ServerHibernationUpdate(bool)
 T CServerGameDLL::ShouldHideServer()
 T CServerGameDLL::ShouldPreferSteamAuth()
 T CServerGameDLL::SupportsSaveRestore()
 T CServerGameDLL::Think(bool)
 T CServerGameDLL::WriteSaveHeaders(CSaveRestoreData*)
 T CServerGameEnts::BaseEntityToEdict(CBaseEntity*)
 T CServerGameEnts::CheckTransmit(CCheckTransmitInfo*, unsigned short const*, int)
 T CServerGameEnts::EdictToBaseEntity(edict_t*)
 T CServerGameEnts::FreeContainingEntity(edict_t*)
 T CServerGameEnts::MarkEntitiesAsTouching(edict_t*, edict_t*)
 T CServerGameEnts::PrepareForFullUpdate(edict_t*)
 T CServerGameEnts::~CServerGameEnts()
 T CServerGameTags::GetTaggedConVarList(KeyValues*)
 T CServerNetworkProperty::AreaNum() const
 T CServerNetworkProperty::AttachEdict(edict_t*)
 T CServerNetworkProperty::CServerNetworkProperty()
 T CServerNetworkProperty::CacheServerClass()
 T CServerNetworkProperty::FireEvent()
 T CServerNetworkProperty::GetBaseEntity()
 T CServerNetworkProperty::GetBaseNetworkable()
 T CServerNetworkProperty::GetClassName() const
 T CServerNetworkProperty::GetDataDescMap()
 T CServerNetworkProperty::GetEdict() const
 T CServerNetworkProperty::GetEntityHandle()
 T CServerNetworkProperty::GetNetworkParent()
 T CServerNetworkProperty::GetPVSInfo()
 T CServerNetworkProperty::GetServerClass()
 T CServerNetworkProperty::Init(CBaseEntity*)
 T CServerNetworkProperty::IsInPVS(CCheckTransmitInfo const*)
 T CServerNetworkProperty::IsInPVS(edict_t const*, void const*, int)
 T CServerNetworkProperty::IsMarkedForDeletion() const
 T CServerNetworkProperty::MarkForDeletion()
 T CServerNetworkProperty::RecomputePVSInformation()
 T CServerNetworkProperty::Release()
 T CServerNetworkProperty::~CServerNetworkProperty()
 T CServerOnlyEntity::ObjectCaps()
 T CServerOnlyPointEntity::KeyValue(char const*, char const*)
 T CServerRagdollTrigger::EndTouch(CBaseEntity*)
 T CServerRagdollTrigger::Spawn()
 T CServerRagdollTrigger::StartTouch(CBaseEntity*)
 T CServerRagdollTrigger::~CServerRagdollTrigger()
 T CServerTools::AddOriginToPVS(Vector const&)
 T CServerTools::CreateEntityByName(char const*)
 T CServerTools::DestroyEntityByHammerId(int)
 T CServerTools::DispatchSpawn(void*)
 T CServerTools::FindEntityByHammerID(int)
 T CServerTools::FirstEntity()
 T CServerTools::GetIServerEntity(IClientEntity*)
 T CServerTools::GetKeyValue(void*, char const*, char*, int)
 T CServerTools::GetPlayerFOV(IClientEntity*)
 T CServerTools::GetPlayerPosition(Vector&, QAngle&, IClientEntity*)
 T CServerTools::IsInNoClipMode(IClientEntity*)
 T CServerTools::MoveEngineViewTo(Vector const&, QAngle const&)
 T CServerTools::NextEntity(void*)
 T CServerTools::ReloadParticleDefintions(char const*, void const*, int)
 T CServerTools::RemoveEntity(int)
 T CServerTools::RespawnEntitiesWithEdits(CEntityRespawnInfo*, int)
 T CServerTools::SetKeyValue(void*, char const*, Vector const&)
 T CServerTools::SetKeyValue(void*, char const*, char const*)
 T CServerTools::SetKeyValue(void*, char const*, float)
 T CServerTools::SetPlayerFOV(int, IClientEntity*)
 T CServerTools::SnapPlayerToPosition(Vector const&, QAngle const&, IClientEntity*)
 T CServerTools::~CServerTools()
 T CShadowControl::CShadowControl()
 T CShadowControl::GetDataDescMap()
 T CShadowControl::GetServerClass()
 T CShadowControl::InputSetAngles(inputdata_t&)
 T CShadowControl::KeyValue(char const*, char const*)
 T CShadowControl::ObjectCaps()
 T CShadowControl::Spawn()
 T CShadowControl::UpdateTransmitState()
 T CShadowControl::YouForgotToImplementOrDeclareServerClass()
 T CShadowControl::~CShadowControl()
 T CSharedUtlVectorBase<BlobInterpolationData_t, CPaintStream::SharedVar_m_sharedBlobData>::Shared_CUtlVector_Vars_Must_Use_CSharedUtlVector()
 T CSharedUtlVectorBase<BlobInterpolationData_t, CPaintStream::SharedVar_m_sharedBlobData>::_IsEmpty()
 T CSharedUtlVectorBase<BlobInterpolationData_t, CPaintStream::SharedVar_m_sharedBlobData>::_MakeEmpty()
 T CSharedUtlVectorBase<BlobInterpolationData_t, CPaintStream::SharedVar_m_sharedBlobData>::_Restore(IRestore*)
 T CSharedUtlVectorBase<BlobInterpolationData_t, CPaintStream::SharedVar_m_sharedBlobData>::_Save(ISave*)
 T CSharedVarBase<CThreadFastMutex, CPaintStream::SharedVar_m_sharedBlobDataMutex>::_IsEmpty()
 T CSharedVarBase<CThreadFastMutex, CPaintStream::SharedVar_m_sharedBlobDataMutex>::_MakeEmpty()
 T CSharedVarBase<CThreadFastMutex, CPaintStream::SharedVar_m_sharedBlobDataMutex>::_Restore(IRestore*)
 T CSharedVarBase<CThreadFastMutex, CPaintStream::SharedVar_m_sharedBlobDataMutex>::_Save(ISave*)
 T CSheet::CSheet(CUtlBuffer&)
 T CSheet::~CSheet()
 T CShower::ObjectCaps()
 T CShower::Spawn()
 T CShower::Think()
 T CShower::Touch(CBaseEntity*)
 T CShower::~CShower()
 T CSimThinkManager::EntityChanged(CBaseEntity*)
 T CSimThinkManager::LevelShutdownPostEntity()
 T CSimThinkManager::OnEntityCreated(CBaseEntity*)
 T CSimThinkManager::OnEntityDeleted(CBaseEntity*)
 T CSimThinkManager::~CSimThinkManager()
 T CSimplePhysicsBrush::Spawn()
 T CSimplePhysicsBrush::~CSimplePhysicsBrush()
 T CSimplePhysicsProp::ObjectCaps()
 T CSimplePhysicsProp::Spawn()
 T CSimplePhysicsProp::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CSimplePhysicsProp::~CSimplePhysicsProp()
 T CSingleDayHoliday::IsActive(CRTime const&)
 T CSingleDayHoliday::~CSingleDayHoliday()
 T CSingleUserRecipientFilter::~CSingleUserRecipientFilter()
 T CSingleplayRules::AllowAutoTargetCrosshair()
 T CSingleplayRules::AllowDamage(CBaseEntity*, CTakeDamageInfo const&)
 T CSingleplayRules::CSingleplayRules()
 T CSingleplayRules::CanHaveItem(CBasePlayer*, CItem*)
 T CSingleplayRules::ClientConnected(edict_t*, char const*, char const*, char*, int)
 T CSingleplayRules::ClientDisconnected(edict_t*)
 T CSingleplayRules::Damage_GetNoPhysicsForce()
 T CSingleplayRules::Damage_GetShouldGibCorpse()
 T CSingleplayRules::Damage_GetShouldNotBleed()
 T CSingleplayRules::Damage_GetShowOnHud()
 T CSingleplayRules::Damage_GetTimeBased()
 T CSingleplayRules::Damage_IsTimeBased(int)
 T CSingleplayRules::Damage_NoPhysicsForce(int)
 T CSingleplayRules::Damage_ShouldGibCorpse(int)
 T CSingleplayRules::Damage_ShouldNotBleed(int)
 T CSingleplayRules::Damage_ShowOnHUD(int)
 T CSingleplayRules::DeadPlayerAmmo(CBasePlayer*)
 T CSingleplayRules::DeadPlayerWeapons(CBasePlayer*)
 T CSingleplayRules::DeathNotice(CBasePlayer*, CTakeDamageInfo const&)
 T CSingleplayRules::FAllowFlashlight()
 T CSingleplayRules::FAllowNPCs()
 T CSingleplayRules::FPlayerCanRespawn(CBasePlayer*)
 T CSingleplayRules::FShouldSwitchWeapon(CBasePlayer*, CBaseCombatWeapon*)
 T CSingleplayRules::FlHealthChargerRechargeTime()
 T CSingleplayRules::FlItemRespawnTime(CItem*)
 T CSingleplayRules::FlPlayerFallDamage(CBasePlayer*)
 T CSingleplayRules::FlPlayerSpawnTime(CBasePlayer*)
 T CSingleplayRules::FlWeaponRespawnTime(CBaseCombatWeapon*)
 T CSingleplayRules::FlWeaponTryRespawn(CBaseCombatWeapon*)
 T CSingleplayRules::GetAutoAimMode()
 T CSingleplayRules::GetNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)
 T CSingleplayRules::GetTeamID(CBaseEntity*)
 T CSingleplayRules::IPointsForKill(CBasePlayer*, CBasePlayer*)
 T CSingleplayRules::InitHUD(CBasePlayer*)
 T CSingleplayRules::IsAllowedToSpawn(CBaseEntity*)
 T CSingleplayRules::IsCoOp()
 T CSingleplayRules::IsDeathmatch()
 T CSingleplayRules::IsMultiplayer()
 T CSingleplayRules::ItemShouldRespawn(CItem*)
 T CSingleplayRules::PlayerCanHearChat(CBasePlayer*, CBasePlayer*)
 T CSingleplayRules::PlayerGotAmmo(CBaseCombatCharacter*, char*, int)
 T CSingleplayRules::PlayerGotItem(CBasePlayer*, CItem*)
 T CSingleplayRules::PlayerKilled(CBasePlayer*, CTakeDamageInfo const&)
 T CSingleplayRules::PlayerRelationship(CBaseEntity*, CBaseEntity*)
 T CSingleplayRules::PlayerSpawn(CBasePlayer*)
 T CSingleplayRules::SwitchToNextBestWeapon(CBaseCombatCharacter*, CBaseCombatWeapon*)
 T CSingleplayRules::Think()
 T CSingleplayRules::VecItemRespawnAngles(CItem*)
 T CSingleplayRules::VecItemRespawnSpot(CItem*)
 T CSingleplayRules::VecWeaponRespawnSpot(CBaseCombatWeapon*)
 T CSingleplayRules::WeaponShouldRespawn(CBaseCombatWeapon*)
 T CSingleplayRules::~CSingleplayRules()
 T CSkipKeys::ParseKeyValue(void*, char const*, char const*)
 T CSkipKeys::SetDefaults(void*)
 T CSkyCamera::Activate()
 T CSkyCamera::GetDataDescMap()
 T CSkyCamera::InputActivateSkybox(inputdata_t&)
 T CSkyCamera::Spawn()
 T CSkyCamera::~CSkyCamera()
 T CSkyboxSwapper::GetDataDescMap()
 T CSkyboxSwapper::InputTrigger(inputdata_t&)
 T CSkyboxSwapper::Precache()
 T CSkyboxSwapper::Spawn()
 T CSkyboxSwapper::~CSkyboxSwapper()
 T CSlideshowDisplay::BuildSlideShowImagesList()
 T CSlideshowDisplay::GetDataDescMap()
 T CSlideshowDisplay::GetServerClass()
 T CSlideshowDisplay::InputAddSlides(inputdata_t&)
 T CSlideshowDisplay::InputDisable(inputdata_t&)
 T CSlideshowDisplay::InputEnable(inputdata_t&)
 T CSlideshowDisplay::InputRemoveAllSlides(inputdata_t&)
 T CSlideshowDisplay::InputSetCycleType(inputdata_t&)
 T CSlideshowDisplay::InputSetDisplayText(inputdata_t&)
 T CSlideshowDisplay::InputSetMaxSlideTime(inputdata_t&)
 T CSlideshowDisplay::InputSetMinSlideTime(inputdata_t&)
 T CSlideshowDisplay::InputSetNoListRepeats(inputdata_t&)
 T CSlideshowDisplay::KeyValue(char const*, char const*)
 T CSlideshowDisplay::OnRestore()
 T CSlideshowDisplay::Precache()
 T CSlideshowDisplay::RestoreControlPanels()
 T CSlideshowDisplay::ScreenVisible(bool)
 T CSlideshowDisplay::SetTransmit(CCheckTransmitInfo*, bool)
 T CSlideshowDisplay::Spawn()
 T CSlideshowDisplay::SpawnControlPanels()
 T CSlideshowDisplay::UpdateTransmitState()
 T CSlideshowDisplay::YouForgotToImplementOrDeclareServerClass()
 T CSlideshowDisplay::~CSlideshowDisplay()
 T CSmallTextEntry::ApplySchemeSettings(vgui::IScheme*)
 T CSmallTextEntry::CSmallTextEntry(vgui::Panel*, char const*)
 T CSmallTextEntry::GetAnimMap()
 T CSmallTextEntry::GetKBMap()
 T CSmallTextEntry::GetMessageMap()
 T CSmallTextEntry::GetPanelClassName()
 T CSmallTextEntry::~CSmallTextEntry()
 T CSmokeStack::Activate()
 T CSmokeStack::CSmokeStack()
 T CSmokeStack::GetDataDescMap()
 T CSmokeStack::GetServerClass()
 T CSmokeStack::InputToggle(inputdata_t&)
 T CSmokeStack::InputTurnOff(inputdata_t&)
 T CSmokeStack::InputTurnOn(inputdata_t&)
 T CSmokeStack::KeyValue(char const*, char const*)
 T CSmokeStack::Precache()
 T CSmokeStack::Spawn()
 T CSmokeStack::YouForgotToImplementOrDeclareServerClass()
 T CSmokeStack::~CSmokeStack()
 T CSolidSetDefaults::ParseKeyValue(void*, char const*, char const*)
 T CSolidSetDefaults::SetDefaults(void*)
 T CSortedEntityList::ReportEntityList()
 T CSound::FIsScent()
 T CSound::FIsSound()
 T CSound::GetSoundOrigin()
 T CSound::GetSoundReactOrigin()
 T CSound::Reset()
 T CSoundControllerImp::CheckLoopingSoundsForPlayer(CBasePlayer*)
 T CSoundControllerImp::CommandAdd(CSoundPatch*, float, soundcommands_t, float, float)
 T CSoundControllerImp::CommandClear(CSoundPatch*)
 T CSoundControllerImp::LevelShutdownPreEntity()
 T CSoundControllerImp::OnRestore()
 T CSoundControllerImp::Play(CSoundPatch*, float, float, float)
 T CSoundControllerImp::PreClientUpdate()
 T CSoundControllerImp::ProcessCommand(SoundCommand_t*)
 T CSoundControllerImp::RestoreSoundPatch(CSoundPatch**, IRestore*)
 T CSoundControllerImp::SaveSoundPatch(CSoundPatch*, ISave*)
 T CSoundControllerImp::Shutdown(CSoundPatch*)
 T CSoundControllerImp::SoundChangePitch(CSoundPatch*, float, float)
 T CSoundControllerImp::SoundChangeVolume(CSoundPatch*, float, float)
 T CSoundControllerImp::SoundCreate(IRecipientFilter&, int, EmitSound_t const&)
 T CSoundControllerImp::SoundCreate(IRecipientFilter&, int, char const*)
 T CSoundControllerImp::SoundCreate(IRecipientFilter&, int, int, char const*, float, Vector const*, float)
 T CSoundControllerImp::SoundCreate(IRecipientFilter&, int, int, char const*, float, float)
 T CSoundControllerImp::SoundCreate(IRecipientFilter&, int, int, char const*, soundlevel_t)
 T CSoundControllerImp::SoundDestroy(CSoundPatch*)
 T CSoundControllerImp::SoundFadeOut(CSoundPatch*, float, bool)
 T CSoundControllerImp::SoundGetName(CSoundPatch*)
 T CSoundControllerImp::SoundGetPitch(CSoundPatch*)
 T CSoundControllerImp::SoundGetScriptName(CSoundPatch*)
 T CSoundControllerImp::SoundGetVolume(CSoundPatch*)
 T CSoundControllerImp::SoundPlayEnvelope(CSoundPatch*, soundcommands_t, envelopeDescription_t*)
 T CSoundControllerImp::SoundPlayEnvelope(CSoundPatch*, soundcommands_t, envelopePoint_t*, int)
 T CSoundControllerImp::SoundSetCloseCaptionDuration(CSoundPatch*, float)
 T CSoundControllerImp::SystemReset()
 T CSoundControllerImp::SystemUpdate()
 T CSoundControllerImp::~CSoundControllerImp()
 T CSoundEmitterSystem::AddCaptionFile(char const*)
 T CSoundEmitterSystem::EmitAmbientSound(int, Vector const&, char const*, float, int, int, float, float*)
 T CSoundEmitterSystem::EmitAmbientSound(int, Vector const&, char const*, float, soundlevel_t, int, int, float, float*)
 T CSoundEmitterSystem::EmitAmbientSoundAsEntry(CSoundParameters&, int, Vector const&, char const*, float, int, int, float, float*)
 T CSoundEmitterSystem::EmitCloseCaption(IRecipientFilter&, int, CSoundParameters const&, EmitSound_t const&)
 T CSoundEmitterSystem::EmitCloseCaption(IRecipientFilter&, int, bool, char const*, CUtlVector<Vector, CUtlMemory<Vector, int> >&, float, bool, bool)
 T CSoundEmitterSystem::EmitSound(IRecipientFilter&, int, EmitSound_t const&)
 T CSoundEmitterSystem::EmitSoundByHandle(IRecipientFilter&, int, EmitSound_t const&, unsigned int&)
 T CSoundEmitterSystem::EmitSoundBySoundFile(IRecipientFilter&, int, EmitSound_t const&)
 T CSoundEmitterSystem::GetCaptionHash(char const*, bool, unsigned int&)
 T CSoundEmitterSystem::GetSoundEntryParameters(int, EmitSound_t const&, CSoundParameters&, unsigned int&)
 T CSoundEmitterSystem::Init()
 T CSoundEmitterSystem::InternalPrecacheWaves(int, bool)
 T CSoundEmitterSystem::LevelInitPostEntity()
 T CSoundEmitterSystem::LevelInitPreEntity()
 T CSoundEmitterSystem::LevelShutdownPostEntity()
 T CSoundEmitterSystem::LoadServerCaptions()
 T CSoundEmitterSystem::LogPrecache(char const*)
 T CSoundEmitterSystem::Name()
 T CSoundEmitterSystem::PrecacheSOSScriptSounds(KeyValues*, bool)
 T CSoundEmitterSystem::PrecacheScriptSound(char const*)
 T CSoundEmitterSystem::PrecacheScriptSoundPuzzleMaker(char const*)
 T CSoundEmitterSystem::PrefetchScriptSound(char const*)
 T CSoundEmitterSystem::PreloadSounds()
 T CSoundEmitterSystem::Shutdown()
 T CSoundEmitterSystem::StartLog()
 T CSoundEmitterSystem::StopSound(int, int, char const*, bool)
 T CSoundEmitterSystem::StopSoundByHandle(int, char const*, unsigned int&, bool)
 T CSoundEmitterSystem::TraceEmitSound(int, char const*, ...)
 T CSoundEmitterSystem::~CSoundEmitterSystem()
 T CSoundEnt::ActiveList()
 T CSoundEnt::ClientSoundIndex(edict_t*)
 T CSoundEnt::FreeSound(int)
 T CSoundEnt::GetDataDescMap()
 T CSoundEnt::InitSoundEnt()
 T CSoundEnt::Initialize()
 T CSoundEnt::InsertSound(int, Vector const&, int, float, CBaseEntity*, int, CBaseEntity*)
 T CSoundEnt::ObjectCaps()
 T CSoundEnt::OnRestore()
 T CSoundEnt::Precache()
 T CSoundEnt::ShutdownSoundEnt()
 T CSoundEnt::SoundPointerForIndex(int)
 T CSoundEnt::Spawn()
 T CSoundEnt::Think()
 T CSoundEnt::~CSoundEnt()
 T CSoundEnvelopeController::GetController()
 T CSoundPatch::AddPlayerPost(CBasePlayer*)
 T CSoundPatch::Init(IRecipientFilter*, CBaseEntity*, int, char const*, soundlevel_t, Vector const*, float)
 T CSoundPatch::ResumeSound()
 T CSoundPatch::Shutdown()
 T CSoundPatch::StartSound(float)
 T CSoundPatch::Update(float, float)
 T CSoundPatchSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CSoundPatchSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CSoundscapeSystem::AddSoundscapeEntity(CEnvSoundscape*)
 T CSoundscapeSystem::AddSoundscapeFile(char const*)
 T CSoundscapeSystem::FrameUpdatePostEntityThink()
 T CSoundscapeSystem::GetSoundscapeIndex(char const*)
 T CSoundscapeSystem::Init()
 T CSoundscapeSystem::IsValidIndex(int)
 T CSoundscapeSystem::LevelInitPostEntity()
 T CSoundscapeSystem::LevelInitPreEntity()
 T CSoundscapeSystem::PrintDebugInfo()
 T CSoundscapeSystem::RemoveSoundscapeEntity(CEnvSoundscape*)
 T CSoundscapeSystem::Shutdown()
 T CSoundscapeSystem::~CSoundscapeSystem()
 T CSpatialEntity::CSpatialEntity()
 T CSpatialEntity::FadeInThink()
 T CSpatialEntity::FadeOutThink()
 T CSpatialEntity::GetDataDescMap()
 T CSpatialEntity::GetServerClass()
 T CSpatialEntity::InputDisable(inputdata_t&)
 T CSpatialEntity::InputEnable(inputdata_t&)
 T CSpatialEntity::InputSetFadeInDuration(inputdata_t&)
 T CSpatialEntity::InputSetFadeOutDuration(inputdata_t&)
 T CSpatialEntity::ObjectCaps()
 T CSpatialEntity::Spawn()
 T CSpatialEntity::UpdateTransmitState()
 T CSpatialEntity::YouForgotToImplementOrDeclareServerClass()
 T CSpatialEntity::~CSpatialEntity()
 T CSpeaker::GetDataDescMap()
 T CSpeaker::GetResponseSystem()
 T CSpeaker::InputToggle(inputdata_t&)
 T CSpeaker::InputTurnOff(inputdata_t&)
 T CSpeaker::InputTurnOn(inputdata_t&)
 T CSpeaker::ObjectCaps()
 T CSpeaker::Precache()
 T CSpeaker::Restore(IRestore&)
 T CSpeaker::Save(ISave&)
 T CSpeaker::Spawn()
 T CSpeaker::SpeakerThink()
 T CSpeaker::~CSpeaker()
 T CSpotlightEnd::GetDataDescMap()
 T CSpotlightEnd::GetServerClass()
 T CSpotlightEnd::ObjectCaps()
 T CSpotlightEnd::Spawn()
 T CSpotlightEnd::YouForgotToImplementOrDeclareServerClass()
 T CSpotlightEnd::~CSpotlightEnd()
 T CSprayCan::ObjectCaps()
 T CSprayCan::Precache()
 T CSprayCan::Think()
 T CSprayCan::~CSprayCan()
 T CSprite::Animate(float)
 T CSprite::AnimateThink()
 T CSprite::AnimateUntilDead()
 T CSprite::BeginFadeOutThink()
 T CSprite::CSprite()
 T CSprite::ComputeWorldSpaceSurroundingBox(Vector*, Vector*)
 T CSprite::ExpandThink()
 T CSprite::GetDataDescMap()
 T CSprite::GetServerClass()
 T CSprite::InputColorBlueValue(inputdata_t&)
 T CSprite::InputColorGreenValue(inputdata_t&)
 T CSprite::InputColorRedValue(inputdata_t&)
 T CSprite::InputHideSprite(inputdata_t&)
 T CSprite::InputShowSprite(inputdata_t&)
 T CSprite::InputToggleSprite(inputdata_t&)
 T CSprite::ObjectCaps()
 T CSprite::OnRestore()
 T CSprite::Precache()
 T CSprite::SetBrightness(int, float)
 T CSprite::SetModel(char const*)
 T CSprite::SetScale(float, float)
 T CSprite::ShouldTransmit(CCheckTransmitInfo const*)
 T CSprite::Spawn()
 T CSprite::SpriteCreate(char const*, Vector const&, bool)
 T CSprite::SpriteInit(char const*, Vector const&)
 T CSprite::TurnOff()
 T CSprite::TurnOn()
 T CSprite::UpdateTransmitState()
 T CSprite::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CSprite::YouForgotToImplementOrDeclareServerClass()
 T CSprite::~CSprite()
 T CSpriteOriented::GetServerClass()
 T CSpriteOriented::Spawn()
 T CSpriteOriented::YouForgotToImplementOrDeclareServerClass()
 T CSpriteOriented::~CSpriteOriented()
 T CSpriteTrail::CSpriteTrail()
 T CSpriteTrail::GetDataDescMap()
 T CSpriteTrail::GetServerClass()
 T CSpriteTrail::Precache()
 T CSpriteTrail::SetEndWidth(float)
 T CSpriteTrail::SetLifeTime(float)
 T CSpriteTrail::SetStartWidth(float)
 T CSpriteTrail::SetTextureResolution(float)
 T CSpriteTrail::Spawn()
 T CSpriteTrail::SpriteTrailCreate(char const*, Vector const&, bool)
 T CSpriteTrail::YouForgotToImplementOrDeclareServerClass()
 T CSpriteTrail::~CSpriteTrail()
 T CStackMemoryDispenser::RecurseDelete(void*)
 T CStaticCollisionPolyhedronCache::GetBrushPolyhedron(int)
 T CStaticCollisionPolyhedronCache::GetStaticPropPolyhedrons(ICollideable*, CPolyhedron const**, int)
 T CStaticCollisionPolyhedronCache::LevelInitPreEntity()
 T CStaticCollisionPolyhedronCache::ReleaseBrushPolyhedron(int, CPolyhedron const*)
 T CStaticCollisionPolyhedronCache::ReleaseStaticPropPolyhedrons(ICollideable*, CPolyhedron const**, int)
 T CStaticCollisionPolyhedronCache::Shutdown()
 T CStaticCollisionPolyhedronCache::Update()
 T CStaticCollisionPolyhedronCache::~CStaticCollisionPolyhedronCache()
 T CStatueProp::CStatueProp()
 T CStatueProp::CollisionPartnerThink()
 T CStatueProp::ComputeWorldSpaceSurroundingBox(Vector*, Vector*)
 T CStatueProp::CreateVPhysics()
 T CStatueProp::CreateVPhysicsFromHitBoxes(CBaseAnimating*)
 T CStatueProp::CreateVPhysicsFromOBBs(CBaseAnimating*)
 T CStatueProp::Event_Killed(CTakeDamageInfo const&)
 T CStatueProp::Freeze(float, CBaseEntity*, Ray_t*)
 T CStatueProp::GetDataDescMap()
 T CStatueProp::GetServerClass()
 T CStatueProp::OnTakeDamage(CTakeDamageInfo const&)
 T CStatueProp::Precache()
 T CStatueProp::Spawn()
 T CStatueProp::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CStatueProp::VPhysicsUpdate(IPhysicsObject*)
 T CStatueProp::YouForgotToImplementOrDeclareServerClass()
 T CStatueProp::~CStatueProp()
 T CStdStringSaveRestoreOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CStdStringSaveRestoreOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CStdStringSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CStdStringSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CSteamAPIContext::Init()
 T CSteamGameServerAPIContext::Init()
 T CSteamID::Render() const
 T CSteamID::Render(unsigned long long)
 T CSteamJet::GetDataDescMap()
 T CSteamJet::GetServerClass()
 T CSteamJet::InputToggle(inputdata_t&)
 T CSteamJet::InputTurnOff(inputdata_t&)
 T CSteamJet::InputTurnOn(inputdata_t&)
 T CSteamJet::Precache()
 T CSteamJet::Spawn()
 T CSteamJet::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CSteamJet::YouForgotToImplementOrDeclareServerClass()
 T CSteamJet::~CSteamJet()
 T CSteamWorksGameStatsUploader::AddStatsForUpload(KeyValues*, bool)
 T CSteamWorksGameStatsUploader::CSteamWorksGameStatsUploader()
 T CSteamWorksGameStatsUploader::EndSession()
 T CSteamWorksGameStatsUploader::FireGameEvent(IGameEvent*)
 T CSteamWorksGameStatsUploader::FrameUpdatePostEntityThink()
 T CSteamWorksGameStatsUploader::FrameUpdatePreEntityThink()
 T CSteamWorksGameStatsUploader::GetInterface()
 T CSteamWorksGameStatsUploader::GetTimeSinceEpoch()
 T CSteamWorksGameStatsUploader::Init()
 T CSteamWorksGameStatsUploader::IsPerFrame()
 T CSteamWorksGameStatsUploader::LevelInitPostEntity()
 T CSteamWorksGameStatsUploader::LevelInitPreEntity()
 T CSteamWorksGameStatsUploader::OnRestore()
 T CSteamWorksGameStatsUploader::OnSave()
 T CSteamWorksGameStatsUploader::ParseKeyValuesAndSendStats(KeyValues*)
 T CSteamWorksGameStatsUploader::PostInit()
 T CSteamWorksGameStatsUploader::PreClientUpdate()
 T CSteamWorksGameStatsUploader::RequestSessionID()
 T CSteamWorksGameStatsUploader::SafeRemoveIfDesired()
 T CSteamWorksGameStatsUploader::ServerAddressToInt()
 T CSteamWorksGameStatsUploader::Shutdown()
 T CSteamWorksGameStatsUploader::StartSession()
 T CSteamWorksGameStatsUploader::Steam_OnSteamSessionInfoClosed(GameStatsSessionClosed_t*)
 T CSteamWorksGameStatsUploader::Steam_OnSteamSessionInfoIssued(GameStatsSessionIssued_t*)
 T CSteamWorksGameStatsUploader::WriteSessionRow()
 T CSteamWorksGameStatsUploader::~CSteamWorksGameStatsUploader()
 T CStringPool::Allocate(char const*)
 T CStringPool::CStringPool(StringPoolCase_t)
 T CStringPool::Find(char const*)
 T CStringPool::FreeAll()
 T CStringPool::~CStringPool()
 T CStringProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CStringProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CStringProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CStringRegistry::AddString(char const*, int)
 T CStringRegistry::CStringRegistry()
 T CStringRegistry::ClearStrings()
 T CStringRegistry::First() const
 T CStringRegistry::GetIDForKey(unsigned short)
 T CStringRegistry::GetStringForKey(unsigned short)
 T CStringRegistry::GetStringID(char const*)
 T CStringRegistry::GetStringText(int)
 T CStringRegistry::InvalidIndex() const
 T CStringRegistry::Next(unsigned short) const
 T CStringRegistry::~CStringRegistry()
 T CStringTableSaveRestoreOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CStringTableSaveRestoreOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CStringTableSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CStringTableSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CStripWeapons::GetDataDescMap()
 T CStripWeapons::InputStripWeapons(inputdata_t&)
 T CStripWeapons::InputStripWeaponsAndSuit(inputdata_t&)
 T CStripWeapons::~CStripWeapons()
 T CStudioHdr::CActivityToSequenceMapping::FindMapping(CStudioHdr const*)
 T CStudioHdr::CActivityToSequenceMapping::Initialize(CStudioHdr const*)
 T CStudioHdr::CActivityToSequenceMapping::NumSequencesForActivity(int)
 T CStudioHdr::CActivityToSequenceMapping::Reinitialize(CStudioHdr*)
 T CStudioHdr::CActivityToSequenceMapping::ReleaseMapping(CStudioHdr::CActivityToSequenceMapping*)
 T CStudioHdr::CActivityToSequenceMapping::ResetMappings()
 T CStudioHdr::CActivityToSequenceMapping::SelectWeightedSequence(CStudioHdr*, int, int)
 T CStudioHdr::CActivityToSequenceMapping::ValidateAgainst(CStudioHdr const*)
 T CStudioHdr::CActivityToSequenceMapping::~CActivityToSequenceMapping()
 T CStudioHdr::CStudioHdr()
 T CStudioHdr::CStudioHdr(studiohdr_t const*, IMDLCache*)
 T CStudioHdr::EntryNode(int)
 T CStudioHdr::ExitNode(int)
 T CStudioHdr::GetActivityListVersion()
 T CStudioHdr::GetAttachmentBone(int)
 T CStudioHdr::GetNumAttachments() const
 T CStudioHdr::GetNumIKAutoplayLocks() const
 T CStudioHdr::GetNumPoseParameters() const
 T CStudioHdr::GetNumSeq_Internal() const
 T CStudioHdr::GetSharedPoseParameter(int, int) const
 T CStudioHdr::GetTransition(int, int) const
 T CStudioHdr::GroupStudioHdr(int)
 T CStudioHdr::Init(studiohdr_t const*, IMDLCache*)
 T CStudioHdr::RemapSeqBone(int, int) const
 T CStudioHdr::ResetVModel(virtualmodel_t const*) const
 T CStudioHdr::SequencesAvailable() const
 T CStudioHdr::SetActivityListVersion(int)
 T CStudioHdr::SetEventListVersion(int)
 T CStudioHdr::Term()
 T CStudioHdr::iRelativeAnim_Internal(int, int) const
 T CStudioHdr::iRelativeSeq(int, int) const
 T CStudioHdr::pAnimStudioHdr(int)
 T CStudioHdr::pAnimdesc_Internal(int)
 T CStudioHdr::pAttachment(int)
 T CStudioHdr::pIKAutoplayLock(int)
 T CStudioHdr::pPoseParameter(int)
 T CStudioHdr::pSeqStudioHdr(int)
 T CStudioHdr::pSeqdesc_Internal(int)
 T CStudioHdr::pszNodeName(int)
 T CStudioHdr::~CStudioHdr()
 T CSun::Activate()
 T CSun::CSun()
 T CSun::GetDataDescMap()
 T CSun::GetServerClass()
 T CSun::InputSetColor(inputdata_t&)
 T CSun::InputTurnOff(inputdata_t&)
 T CSun::InputTurnOn(inputdata_t&)
 T CSun::UpdateTransmitState()
 T CSun::YouForgotToImplementOrDeclareServerClass()
 T CSun::~CSun()
 T CSunlightShadowControl::CSunlightShadowControl()
 T CSunlightShadowControl::GetDataDescMap()
 T CSunlightShadowControl::GetKeyValue(char const*, char*, int)
 T CSunlightShadowControl::GetServerClass()
 T CSunlightShadowControl::InputDisable(inputdata_t&)
 T CSunlightShadowControl::InputEnable(inputdata_t&)
 T CSunlightShadowControl::InputSetAngles(inputdata_t&)
 T CSunlightShadowControl::InputSetEnableShadows(inputdata_t&)
 T CSunlightShadowControl::InputSetLightColor(inputdata_t&)
 T CSunlightShadowControl::InputSetTexture(inputdata_t&)
 T CSunlightShadowControl::KeyValue(char const*, char const*)
 T CSunlightShadowControl::ObjectCaps()
 T CSunlightShadowControl::Spawn()
 T CSunlightShadowControl::UpdateTransmitState()
 T CSunlightShadowControl::YouForgotToImplementOrDeclareServerClass()
 T CSunlightShadowControl::~CSunlightShadowControl()
 T CTEAntlionDust::GetServerClass()
 T CTEAntlionDust::Test(Vector const&, QAngle const&)
 T CTEAntlionDust::YouForgotToImplementOrDeclareServerClass()
 T CTEAntlionDust::~CTEAntlionDust()
 T CTEArmorRicochet::GetServerClass()
 T CTEArmorRicochet::YouForgotToImplementOrDeclareServerClass()
 T CTEArmorRicochet::~CTEArmorRicochet()
 T CTEBSPDecal::GetServerClass()
 T CTEBSPDecal::Test(Vector const&, QAngle const&)
 T CTEBSPDecal::YouForgotToImplementOrDeclareServerClass()
 T CTEBSPDecal::~CTEBSPDecal()
 T CTEBaseBeam::CTEBaseBeam(char const*)
 T CTEBaseBeam::GetServerClass()
 T CTEBaseBeam::YouForgotToImplementOrDeclareServerClass()
 T CTEBaseBeam::~CTEBaseBeam()
 T CTEBeamEntPoint::GetServerClass()
 T CTEBeamEntPoint::Test(Vector const&, QAngle const&)
 T CTEBeamEntPoint::YouForgotToImplementOrDeclareServerClass()
 T CTEBeamEntPoint::~CTEBeamEntPoint()
 T CTEBeamEnts::GetServerClass()
 T CTEBeamEnts::Test(Vector const&, QAngle const&)
 T CTEBeamEnts::YouForgotToImplementOrDeclareServerClass()
 T CTEBeamEnts::~CTEBeamEnts()
 T CTEBeamFollow::GetServerClass()
 T CTEBeamFollow::Test(Vector const&, QAngle const&)
 T CTEBeamFollow::YouForgotToImplementOrDeclareServerClass()
 T CTEBeamFollow::~CTEBeamFollow()
 T CTEBeamLaser::GetServerClass()
 T CTEBeamLaser::Test(Vector const&, QAngle const&)
 T CTEBeamLaser::YouForgotToImplementOrDeclareServerClass()
 T CTEBeamLaser::~CTEBeamLaser()
 T CTEBeamPoints::GetServerClass()
 T CTEBeamPoints::Test(Vector const&, QAngle const&)
 T CTEBeamPoints::YouForgotToImplementOrDeclareServerClass()
 T CTEBeamPoints::~CTEBeamPoints()
 T CTEBeamRing::GetServerClass()
 T CTEBeamRing::Test(Vector const&, QAngle const&)
 T CTEBeamRing::YouForgotToImplementOrDeclareServerClass()
 T CTEBeamRing::~CTEBeamRing()
 T CTEBeamRingPoint::GetServerClass()
 T CTEBeamRingPoint::Test(Vector const&, QAngle const&)
 T CTEBeamRingPoint::YouForgotToImplementOrDeclareServerClass()
 T CTEBeamRingPoint::~CTEBeamRingPoint()
 T CTEBeamSpline::GetServerClass()
 T CTEBeamSpline::Test(Vector const&, QAngle const&)
 T CTEBeamSpline::YouForgotToImplementOrDeclareServerClass()
 T CTEBeamSpline::~CTEBeamSpline()
 T CTEBloodSprite::CTEBloodSprite(char const*)
 T CTEBloodSprite::GetServerClass()
 T CTEBloodSprite::Test(Vector const&, QAngle const&)
 T CTEBloodSprite::YouForgotToImplementOrDeclareServerClass()
 T CTEBloodSprite::~CTEBloodSprite()
 T CTEBloodStream::GetServerClass()
 T CTEBloodStream::Test(Vector const&, QAngle const&)
 T CTEBloodStream::YouForgotToImplementOrDeclareServerClass()
 T CTEBloodStream::~CTEBloodStream()
 T CTEBreakModel::CTEBreakModel(char const*)
 T CTEBreakModel::GetServerClass()
 T CTEBreakModel::YouForgotToImplementOrDeclareServerClass()
 T CTEBreakModel::~CTEBreakModel()
 T CTEBubbleTrail::CTEBubbleTrail(char const*)
 T CTEBubbleTrail::GetServerClass()
 T CTEBubbleTrail::Test(Vector const&, QAngle const&)
 T CTEBubbleTrail::YouForgotToImplementOrDeclareServerClass()
 T CTEBubbleTrail::~CTEBubbleTrail()
 T CTEBubbles::CTEBubbles(char const*)
 T CTEBubbles::GetServerClass()
 T CTEBubbles::Test(Vector const&, QAngle const&)
 T CTEBubbles::YouForgotToImplementOrDeclareServerClass()
 T CTEBubbles::~CTEBubbles()
 T CTEClientProjectile::GetServerClass()
 T CTEClientProjectile::Test(Vector const&, QAngle const&)
 T CTEClientProjectile::YouForgotToImplementOrDeclareServerClass()
 T CTEClientProjectile::~CTEClientProjectile()
 T CTEDecal::GetServerClass()
 T CTEDecal::Test(Vector const&, QAngle const&)
 T CTEDecal::YouForgotToImplementOrDeclareServerClass()
 T CTEDecal::~CTEDecal()
 T CTEDust::GetServerClass()
 T CTEDust::Test(Vector const&, QAngle const&)
 T CTEDust::YouForgotToImplementOrDeclareServerClass()
 T CTEDust::~CTEDust()
 T CTEDynamicLight::CTEDynamicLight(char const*)
 T CTEDynamicLight::GetServerClass()
 T CTEDynamicLight::Test(Vector const&, QAngle const&)
 T CTEDynamicLight::YouForgotToImplementOrDeclareServerClass()
 T CTEDynamicLight::~CTEDynamicLight()
 T CTEEffectDispatch::GetServerClass()
 T CTEEffectDispatch::YouForgotToImplementOrDeclareServerClass()
 T CTEEffectDispatch::~CTEEffectDispatch()
 T CTEEnergySplash::GetServerClass()
 T CTEEnergySplash::Test(Vector const&, QAngle const&)
 T CTEEnergySplash::YouForgotToImplementOrDeclareServerClass()
 T CTEEnergySplash::~CTEEnergySplash()
 T CTEExplosion::CTEExplosion(char const*)
 T CTEExplosion::GetServerClass()
 T CTEExplosion::Test(Vector const&, QAngle const&)
 T CTEExplosion::YouForgotToImplementOrDeclareServerClass()
 T CTEExplosion::~CTEExplosion()
 T CTEFizz::GetServerClass()
 T CTEFizz::Precache()
 T CTEFizz::Test(Vector const&, QAngle const&)
 T CTEFizz::YouForgotToImplementOrDeclareServerClass()
 T CTEFizz::~CTEFizz()
 T CTEFootprintDecal::GetServerClass()
 T CTEFootprintDecal::YouForgotToImplementOrDeclareServerClass()
 T CTEFootprintDecal::~CTEFootprintDecal()
 T CTEFoundryHelpers::GetServerClass()
 T CTEFoundryHelpers::YouForgotToImplementOrDeclareServerClass()
 T CTEFoundryHelpers::~CTEFoundryHelpers()
 T CTEGaussExplosion::GetServerClass()
 T CTEGaussExplosion::Test(Vector const&, QAngle const&)
 T CTEGaussExplosion::YouForgotToImplementOrDeclareServerClass()
 T CTEGaussExplosion::~CTEGaussExplosion()
 T CTEGlowSprite::GetServerClass()
 T CTEGlowSprite::Test(Vector const&, QAngle const&)
 T CTEGlowSprite::YouForgotToImplementOrDeclareServerClass()
 T CTEGlowSprite::~CTEGlowSprite()
 T CTEImpact::GetServerClass()
 T CTEImpact::Precache()
 T CTEImpact::YouForgotToImplementOrDeclareServerClass()
 T CTEImpact::~CTEImpact()
 T CTEKillPlayerAttachments::GetServerClass()
 T CTEKillPlayerAttachments::Test(Vector const&, QAngle const&)
 T CTEKillPlayerAttachments::YouForgotToImplementOrDeclareServerClass()
 T CTEKillPlayerAttachments::~CTEKillPlayerAttachments()
 T CTELargeFunnel::GetServerClass()
 T CTELargeFunnel::Test(Vector const&, QAngle const&)
 T CTELargeFunnel::YouForgotToImplementOrDeclareServerClass()
 T CTELargeFunnel::~CTELargeFunnel()
 T CTEMetalSparks::GetServerClass()
 T CTEMetalSparks::Test(Vector const&, QAngle const&)
 T CTEMetalSparks::YouForgotToImplementOrDeclareServerClass()
 T CTEMetalSparks::~CTEMetalSparks()
 T CTEMuzzleFlash::GetServerClass()
 T CTEMuzzleFlash::Test(Vector const&, QAngle const&)
 T CTEMuzzleFlash::YouForgotToImplementOrDeclareServerClass()
 T CTEMuzzleFlash::~CTEMuzzleFlash()
 T CTEPhysicsProp::CTEPhysicsProp(char const*)
 T CTEPhysicsProp::GetServerClass()
 T CTEPhysicsProp::YouForgotToImplementOrDeclareServerClass()
 T CTEPhysicsProp::~CTEPhysicsProp()
 T CTEPlayerAnimEvent::GetServerClass()
 T CTEPlayerAnimEvent::YouForgotToImplementOrDeclareServerClass()
 T CTEPlayerAnimEvent::~CTEPlayerAnimEvent()
 T CTEPlayerDecal::GetServerClass()
 T CTEPlayerDecal::Test(Vector const&, QAngle const&)
 T CTEPlayerDecal::YouForgotToImplementOrDeclareServerClass()
 T CTEPlayerDecal::~CTEPlayerDecal()
 T CTEProjectedDecal::GetServerClass()
 T CTEProjectedDecal::Test(Vector const&, QAngle const&)
 T CTEProjectedDecal::YouForgotToImplementOrDeclareServerClass()
 T CTEProjectedDecal::~CTEProjectedDecal()
 T CTEShatterSurface::CTEShatterSurface(char const*)
 T CTEShatterSurface::GetServerClass()
 T CTEShatterSurface::Test(Vector const&, QAngle const&)
 T CTEShatterSurface::YouForgotToImplementOrDeclareServerClass()
 T CTEShatterSurface::~CTEShatterSurface()
 T CTEShowLine::GetServerClass()
 T CTEShowLine::Test(Vector const&, QAngle const&)
 T CTEShowLine::YouForgotToImplementOrDeclareServerClass()
 T CTEShowLine::~CTEShowLine()
 T CTESmoke::GetServerClass()
 T CTESmoke::Test(Vector const&, QAngle const&)
 T CTESmoke::YouForgotToImplementOrDeclareServerClass()
 T CTESmoke::~CTESmoke()
 T CTESparks::GetServerClass()
 T CTESparks::Test(Vector const&, QAngle const&)
 T CTESparks::YouForgotToImplementOrDeclareServerClass()
 T CTESparks::~CTESparks()
 T CTESprite::GetServerClass()
 T CTESprite::Precache()
 T CTESprite::Test(Vector const&, QAngle const&)
 T CTESprite::YouForgotToImplementOrDeclareServerClass()
 T CTESprite::~CTESprite()
 T CTESpriteSpray::CTESpriteSpray(char const*)
 T CTESpriteSpray::GetServerClass()
 T CTESpriteSpray::Test(Vector const&, QAngle const&)
 T CTESpriteSpray::YouForgotToImplementOrDeclareServerClass()
 T CTESpriteSpray::~CTESpriteSpray()
 T CTEWallPaintedEvent::GetServerClass()
 T CTEWallPaintedEvent::YouForgotToImplementOrDeclareServerClass()
 T CTEWallPaintedEvent::~CTEWallPaintedEvent()
 T CTEWorldDecal::GetServerClass()
 T CTEWorldDecal::Test(Vector const&, QAngle const&)
 T CTEWorldDecal::YouForgotToImplementOrDeclareServerClass()
 T CTEWorldDecal::~CTEWorldDecal()
 T CTSListWithFreeList<CBaseHandle>::CTSListWithFreeList()
 T CTSListWithFreeList<CBaseHandle>::Purge()
 T CTSListWithFreeList<CBaseHandle>::PushItem(CBaseHandle const&)
 T CTSListWithFreeList<CBaseHandle>::~CTSListWithFreeList()
 T CTSListWithFreeList<CNavArea::AreaBindInfo>::PopItem(CNavArea::AreaBindInfo*)
 T CTSListWithFreeList<CNavArea::AreaBindInfo>::Purge()
 T CTSListWithFreeList<CNavArea::AreaBindInfo>::PushItem(CNavArea::AreaBindInfo const&)
 T CTSListWithFreeList<CNavArea::AreaBindInfo>::~CTSListWithFreeList()
 T CTSQueue<CFunctor*, false, true>::CTSQueue()
 T CTSQueue<CFunctor*, false, true>::Pop()
 T CTSQueue<CFunctor*, false, true>::Purge()
 T CTSQueue<CFunctor*, false, true>::Push(CTSQueue<CFunctor*, false, true>::Node_t*)
 T CTSQueue<CFunctor*, false, true>::~CTSQueue()
 T CTSQueue<CMsgConVarValue*, false, true>::CTSQueue()
 T CTSQueue<CMsgConVarValue*, false, true>::Pop()
 T CTSQueue<CMsgConVarValue*, false, true>::PopItem(CMsgConVarValue**)
 T CTSQueue<CMsgConVarValue*, false, true>::Purge()
 T CTSQueue<CMsgConVarValue*, false, true>::Push(CTSQueue<CMsgConVarValue*, false, true>::Node_t*)
 T CTSQueue<CMsgConVarValue*, false, true>::~CTSQueue()
 T CTSQueue<CMsgProtoBufHeader*, false, true>::CTSQueue()
 T CTSQueue<CMsgProtoBufHeader*, false, true>::Pop()
 T CTSQueue<CMsgProtoBufHeader*, false, true>::PopItem(CMsgProtoBufHeader**)
 T CTSQueue<CMsgProtoBufHeader*, false, true>::Purge()
 T CTSQueue<CMsgProtoBufHeader*, false, true>::Push(CTSQueue<CMsgProtoBufHeader*, false, true>::Node_t*)
 T CTSQueue<CMsgProtoBufHeader*, false, true>::~CTSQueue()
 T CTSQueue<CMsgReplicateConVars*, false, true>::CTSQueue()
 T CTSQueue<CMsgReplicateConVars*, false, true>::Pop()
 T CTSQueue<CMsgReplicateConVars*, false, true>::PopItem(CMsgReplicateConVars**)
 T CTSQueue<CMsgReplicateConVars*, false, true>::Purge()
 T CTSQueue<CMsgReplicateConVars*, false, true>::Push(CTSQueue<CMsgReplicateConVars*, false, true>::Node_t*)
 T CTSQueue<CMsgReplicateConVars*, false, true>::~CTSQueue()
 T CTSQueue<CMsgRequestItemSchemaData*, false, true>::CTSQueue()
 T CTSQueue<CMsgRequestItemSchemaData*, false, true>::Pop()
 T CTSQueue<CMsgRequestItemSchemaData*, false, true>::PopItem(CMsgRequestItemSchemaData**)
 T CTSQueue<CMsgRequestItemSchemaData*, false, true>::Purge()
 T CTSQueue<CMsgRequestItemSchemaData*, false, true>::Push(CTSQueue<CMsgRequestItemSchemaData*, false, true>::Node_t*)
 T CTSQueue<CMsgRequestItemSchemaData*, false, true>::~CTSQueue()
 T CTSQueue<CMsgSOCacheSubscribed*, false, true>::CTSQueue()
 T CTSQueue<CMsgSOCacheSubscribed*, false, true>::Pop()
 T CTSQueue<CMsgSOCacheSubscribed*, false, true>::PopItem(CMsgSOCacheSubscribed**)
 T CTSQueue<CMsgSOCacheSubscribed*, false, true>::Purge()
 T CTSQueue<CMsgSOCacheSubscribed*, false, true>::Push(CTSQueue<CMsgSOCacheSubscribed*, false, true>::Node_t*)
 T CTSQueue<CMsgSOCacheSubscribed*, false, true>::~CTSQueue()
 T CTSQueue<CMsgSOCacheSubscriptionCheck*, false, true>::CTSQueue()
 T CTSQueue<CMsgSOCacheSubscriptionCheck*, false, true>::Pop()
 T CTSQueue<CMsgSOCacheSubscriptionCheck*, false, true>::PopItem(CMsgSOCacheSubscriptionCheck**)
 T CTSQueue<CMsgSOCacheSubscriptionCheck*, false, true>::Purge()
 T CTSQueue<CMsgSOCacheSubscriptionCheck*, false, true>::Push(CTSQueue<CMsgSOCacheSubscriptionCheck*, false, true>::Node_t*)
 T CTSQueue<CMsgSOCacheSubscriptionCheck*, false, true>::~CTSQueue()
 T CTSQueue<CMsgSOCacheSubscriptionRefresh*, false, true>::CTSQueue()
 T CTSQueue<CMsgSOCacheSubscriptionRefresh*, false, true>::Pop()
 T CTSQueue<CMsgSOCacheSubscriptionRefresh*, false, true>::PopItem(CMsgSOCacheSubscriptionRefresh**)
 T CTSQueue<CMsgSOCacheSubscriptionRefresh*, false, true>::Purge()
 T CTSQueue<CMsgSOCacheSubscriptionRefresh*, false, true>::Push(CTSQueue<CMsgSOCacheSubscriptionRefresh*, false, true>::Node_t*)
 T CTSQueue<CMsgSOCacheSubscriptionRefresh*, false, true>::~CTSQueue()
 T CTSQueue<CMsgSOCacheUnsubscribed*, false, true>::CTSQueue()
 T CTSQueue<CMsgSOCacheUnsubscribed*, false, true>::Pop()
 T CTSQueue<CMsgSOCacheUnsubscribed*, false, true>::PopItem(CMsgSOCacheUnsubscribed**)
 T CTSQueue<CMsgSOCacheUnsubscribed*, false, true>::Purge()
 T CTSQueue<CMsgSOCacheUnsubscribed*, false, true>::Push(CTSQueue<CMsgSOCacheUnsubscribed*, false, true>::Node_t*)
 T CTSQueue<CMsgSOCacheUnsubscribed*, false, true>::~CTSQueue()
 T CTSQueue<CMsgSOMultipleObjects*, false, true>::CTSQueue()
 T CTSQueue<CMsgSOMultipleObjects*, false, true>::Pop()
 T CTSQueue<CMsgSOMultipleObjects*, false, true>::PopItem(CMsgSOMultipleObjects**)
 T CTSQueue<CMsgSOMultipleObjects*, false, true>::Purge()
 T CTSQueue<CMsgSOMultipleObjects*, false, true>::Push(CTSQueue<CMsgSOMultipleObjects*, false, true>::Node_t*)
 T CTSQueue<CMsgSOMultipleObjects*, false, true>::~CTSQueue()
 T CTSQueue<CMsgSOSingleObject*, false, true>::CTSQueue()
 T CTSQueue<CMsgSOSingleObject*, false, true>::Pop()
 T CTSQueue<CMsgSOSingleObject*, false, true>::PopItem(CMsgSOSingleObject**)
 T CTSQueue<CMsgSOSingleObject*, false, true>::Purge()
 T CTSQueue<CMsgSOSingleObject*, false, true>::Push(CTSQueue<CMsgSOSingleObject*, false, true>::Node_t*)
 T CTSQueue<CMsgSOSingleObject*, false, true>::~CTSQueue()
 T CTSQueue<CMsgUpdateItemSchema*, false, true>::CTSQueue()
 T CTSQueue<CMsgUpdateItemSchema*, false, true>::Pop()
 T CTSQueue<CMsgUpdateItemSchema*, false, true>::PopItem(CMsgUpdateItemSchema**)
 T CTSQueue<CMsgUpdateItemSchema*, false, true>::Purge()
 T CTSQueue<CMsgUpdateItemSchema*, false, true>::Push(CTSQueue<CMsgUpdateItemSchema*, false, true>::Node_t*)
 T CTSQueue<CMsgUpdateItemSchema*, false, true>::~CTSQueue()
 T CTakeDamageInfo::AdjustPlayerDamageInflictedForSkillLevel()
 T CTakeDamageInfo::CTakeDamageInfo()
 T CTakeDamageInfo::CTakeDamageInfo(CBaseEntity*, CBaseEntity*, CBaseEntity*, Vector const&, Vector const&, float, int, int, Vector*)
 T CTakeDamageInfo::CTakeDamageInfo(CBaseEntity*, CBaseEntity*, Vector const&, Vector const&, float, int, int, Vector*)
 T CTakeDamageInfo::CTakeDamageInfo(CBaseEntity*, CBaseEntity*, float, int, int)
 T CTakeDamageInfo::DebugGetDamageTypeString(unsigned int, char*, int)
 T CTakeDamageInfo::GetAmmoName() const
 T CTakeDamageInfo::Init(CBaseEntity*, CBaseEntity*, CBaseEntity*, Vector const&, Vector const&, Vector const&, float, int, int)
 T CTakeDamageInfo::Set(CBaseEntity*, CBaseEntity*, float, int, int)
 T CTankTargetChange::GetDataDescMap()
 T CTankTargetChange::Precache()
 T CTankTargetChange::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CTankTargetChange::~CTankTargetChange()
 T CTankTrainAI::Activate()
 T CTankTrainAI::GetDataDescMap()
 T CTankTrainAI::InputTargetEntity(inputdata_t&)
 T CTankTrainAI::Precache()
 T CTankTrainAI::SoundEngineStart()
 T CTankTrainAI::Spawn()
 T CTankTrainAI::Think()
 T CTankTrainAI::~CTankTrainAI()
 T CTargetCDAudioRep::GetDataDescMap()
 T CTargetCDAudioRep::InputChangeCDTrack(inputdata_t&)
 T CTargetCDAudioRep::~CTargetCDAudioRep()
 T CTargetChangeGravity::GetDataDescMap()
 T CTargetChangeGravity::InputChangeGrav(inputdata_t&)
 T CTargetChangeGravity::InputResetGrav(inputdata_t&)
 T CTargetChangeGravity::~CTargetChangeGravity()
 T CTeam::AddPlayer(CBasePlayer*)
 T CTeam::AddScore(int)
 T CTeam::AddSpawnpoint(CTeamSpawnPoint*)
 T CTeam::CTeam()
 T CTeam::GetName()
 T CTeam::GetNumPlayers()
 T CTeam::GetPlayer(int)
 T CTeam::GetRoundsWon()
 T CTeam::GetScore()
 T CTeam::GetServerClass()
 T CTeam::GetTeamNumber() const
 T CTeam::IncrementRoundsWon()
 T CTeam::Init(char const*, int)
 T CTeam::InitializePlayers()
 T CTeam::InitializeSpawnpoints()
 T CTeam::Precache()
 T CTeam::RemovePlayer(CBasePlayer*)
 T CTeam::RemoveSpawnpoint(CTeamSpawnPoint*)
 T CTeam::ResetScores()
 T CTeam::SetRoundsWon(int)
 T CTeam::SetScore(int)
 T CTeam::ShouldTransmitToPlayer(CBasePlayer*, CBaseEntity*)
 T CTeam::SpawnPlayer(CBasePlayer*)
 T CTeam::Think()
 T CTeam::UpdateClientData(CBasePlayer*)
 T CTeam::UpdateTransmitState()
 T CTeam::YouForgotToImplementOrDeclareServerClass()
 T CTeam::~CTeam()
 T CTeamSpawnPoint::Activate()
 T CTeamSpawnPoint::GetDataDescMap()
 T CTeamSpawnPoint::InputDisable(inputdata_t&)
 T CTeamSpawnPoint::InputEnable(inputdata_t&)
 T CTeamSpawnPoint::IsValid(CBasePlayer*)
 T CTeamSpawnPoint::~CTeamSpawnPoint()
 T CTeamVehicleSpawnPoint::Activate()
 T CTeamVehicleSpawnPoint::GetDataDescMap()
 T CTeamVehicleSpawnPoint::~CTeamVehicleSpawnPoint()
 T CTeamplayRules::CTeamplayRules()
 T CTeamplayRules::ChangePlayerTeam(CBasePlayer*, char const*, bool, bool)
 T CTeamplayRules::ClientCommand(CBaseEntity*, CCommand const&)
 T CTeamplayRules::ClientDisconnected(edict_t*)
 T CTeamplayRules::ClientSettingsChanged(CBasePlayer*)
 T CTeamplayRules::DeathNotice(CBasePlayer*, CTakeDamageInfo const&)
 T CTeamplayRules::FPlayerCanTakeDamage(CBasePlayer*, CBaseEntity*)
 T CTeamplayRules::GetCaptureValueForPlayer(CBasePlayer*)
 T CTeamplayRules::GetGameDescription()
 T CTeamplayRules::GetIndexedTeamName(int)
 T CTeamplayRules::GetTeamID(CBaseEntity*)
 T CTeamplayRules::GetTeamIndex(char const*)
 T CTeamplayRules::HandleScrambleTeams()
 T CTeamplayRules::HandleSwitchTeams()
 T CTeamplayRules::IPointsForKill(CBasePlayer*, CBasePlayer*)
 T CTeamplayRules::InitHUD(CBasePlayer*)
 T CTeamplayRules::IsTeamplay()
 T CTeamplayRules::IsValidTeam(char const*)
 T CTeamplayRules::PlayerCanHearChat(CBasePlayer*, CBasePlayer*)
 T CTeamplayRules::PlayerKilled(CBasePlayer*, CTakeDamageInfo const&)
 T CTeamplayRules::PlayerMayBlockPoint(CBasePlayer*, int, char*, int)
 T CTeamplayRules::PlayerMayCapturePoint(CBasePlayer*, int, char*, int)
 T CTeamplayRules::PlayerRelationship(CBaseEntity*, CBaseEntity*)
 T CTeamplayRules::PointsMayBeCaptured()
 T CTeamplayRules::Precache()
 T CTeamplayRules::RecountTeams()
 T CTeamplayRules::SetDefaultPlayerTeam(CBasePlayer*)
 T CTeamplayRules::SetLastCapPointChanged(int)
 T CTeamplayRules::SetScrambleTeams(bool)
 T CTeamplayRules::SetStalemate(int, bool, bool)
 T CTeamplayRules::SetSwitchTeams(bool)
 T CTeamplayRules::SetWinningTeam(int, int, bool, bool, bool)
 T CTeamplayRules::ShouldAutoAim(CBasePlayer*, edict_t*)
 T CTeamplayRules::ShouldScrambleTeams()
 T CTeamplayRules::ShouldSwitchTeams()
 T CTeamplayRules::TeamMayCapturePoint(int, int)
 T CTeamplayRules::Think()
 T CTeamplayRules::TimerMayExpire()
 T CTeamplayRules::~CTeamplayRules()
 T CTempEntTester::Create(Vector const&, QAngle const&, char const*, char const*)
 T CTempEntTester::Spawn()
 T CTempEntTester::Think()
 T CTempEntTester::~CTempEntTester()
 T CTempEntsSystem::ArmorRicochet(IRecipientFilter&, float, Vector const*, Vector const*)
 T CTempEntsSystem::BSPDecal(IRecipientFilter&, float, Vector const*, int, int)
 T CTempEntsSystem::BeamEntPoint(IRecipientFilter&, float, int, Vector const*, int, Vector const*, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T CTempEntsSystem::BeamEnts(IRecipientFilter&, float, int, int, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T CTempEntsSystem::BeamFollow(IRecipientFilter&, float, int, int, int, float, float, float, float, float, float, float, float)
 T CTempEntsSystem::BeamLaser(IRecipientFilter&, float, int, int, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T CTempEntsSystem::BeamPoints(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T CTempEntsSystem::BeamRing(IRecipientFilter&, float, int, int, int, int, int, int, float, float, int, float, int, int, int, int, int, int)
 T CTempEntsSystem::BeamRingPoint(IRecipientFilter&, float, Vector const&, float, float, int, int, int, int, float, float, int, float, int, int, int, int, int, int)
 T CTempEntsSystem::BeamSpline(IRecipientFilter&, float, int, Vector*)
 T CTempEntsSystem::BloodSprite(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int, int, int)
 T CTempEntsSystem::BloodStream(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int, int, int)
 T CTempEntsSystem::BreakModel(IRecipientFilter&, float, Vector const&, QAngle const&, Vector const&, Vector const&, int, int, int, float, int)
 T CTempEntsSystem::BubbleTrail(IRecipientFilter&, float, Vector const*, Vector const*, float, int, int, float)
 T CTempEntsSystem::Bubbles(IRecipientFilter&, float, Vector const*, Vector const*, float, int, int, float)
 T CTempEntsSystem::ClientProjectile(IRecipientFilter&, float, Vector const*, Vector const*, int, int, CBaseEntity*)
 T CTempEntsSystem::Decal(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int)
 T CTempEntsSystem::Dust(IRecipientFilter&, float, Vector const&, Vector const&, float, float)
 T CTempEntsSystem::DynamicLight(IRecipientFilter&, float, Vector const*, int, int, int, int, float, float, float)
 T CTempEntsSystem::EnergySplash(IRecipientFilter&, float, Vector const*, Vector const*, bool)
 T CTempEntsSystem::Explosion(IRecipientFilter&, float, Vector const*, int, float, int, int, int, int, Vector const*, unsigned char)
 T CTempEntsSystem::Fizz(IRecipientFilter&, float, CBaseEntity const*, int, int, int)
 T CTempEntsSystem::FootprintDecal(IRecipientFilter&, float, Vector const*, Vector const*, int, int, unsigned char)
 T CTempEntsSystem::GaussExplosion(IRecipientFilter&, float, Vector const&, Vector const&, int)
 T CTempEntsSystem::GlowSprite(IRecipientFilter&, float, Vector const*, int, float, float, int)
 T CTempEntsSystem::KillPlayerAttachments(IRecipientFilter&, float, int)
 T CTempEntsSystem::LargeFunnel(IRecipientFilter&, float, Vector const*, int, int)
 T CTempEntsSystem::MetalSparks(IRecipientFilter&, float, Vector const*, Vector const*)
 T CTempEntsSystem::MuzzleFlash(IRecipientFilter&, float, Vector const&, QAngle const&, float, int)
 T CTempEntsSystem::PhysicsProp(IRecipientFilter&, float, int, int, Vector const&, QAngle const&, Vector const&, int, int)
 T CTempEntsSystem::PlayerDecal(IRecipientFilter&, float, Vector const*, int, int)
 T CTempEntsSystem::ProjectDecal(IRecipientFilter&, float, Vector const*, QAngle const*, float, int)
 T CTempEntsSystem::ShatterSurface(IRecipientFilter&, float, Vector const*, QAngle const*, Vector const*, Vector const*, float, float, float, ShatterSurface_t, int, int, int, int, int, int)
 T CTempEntsSystem::ShowLine(IRecipientFilter&, float, Vector const*, Vector const*)
 T CTempEntsSystem::Smoke(IRecipientFilter&, float, Vector const*, int, float, int)
 T CTempEntsSystem::Sparks(IRecipientFilter&, float, Vector const*, int, int, Vector const*)
 T CTempEntsSystem::Sprite(IRecipientFilter&, float, Vector const*, int, float, int)
 T CTempEntsSystem::SpriteSpray(IRecipientFilter&, float, Vector const*, Vector const*, int, int, float, int)
 T CTempEntsSystem::SuppressTE(IRecipientFilter&)
 T CTempEntsSystem::TriggerTempEntity(KeyValues*)
 T CTempEntsSystem::WorldDecal(IRecipientFilter&, float, Vector const*, int)
 T CTempEntsSystem::~CTempEntsSystem()
 T CTemplateNPCMaker* _CreateEntityTemplate<CTemplateNPCMaker>(CTemplateNPCMaker*, char const*)
 T CTemplateNPCMaker::FindSpawnDestination()
 T CTemplateNPCMaker::GetDataDescMap()
 T CTemplateNPCMaker::InputChangeDestinationGroup(inputdata_t&)
 T CTemplateNPCMaker::InputSetMinimumSpawnDistance(inputdata_t&)
 T CTemplateNPCMaker::InputSpawnInLine(inputdata_t&)
 T CTemplateNPCMaker::InputSpawnInRadius(inputdata_t&)
 T CTemplateNPCMaker::InputSpawnMultiple(inputdata_t&)
 T CTemplateNPCMaker::MakeMultipleNPCS(int)
 T CTemplateNPCMaker::MakeNPC()
 T CTemplateNPCMaker::MakeNPCFromTemplate()
 T CTemplateNPCMaker::MakeNPCInLine()
 T CTemplateNPCMaker::MakeNPCInRadius()
 T CTemplateNPCMaker::PlaceNPCInLine(CAI_BaseNPC*)
 T CTemplateNPCMaker::Precache()
 T CTemplateNPCMaker::PrecacheTemplateEntity(CBaseEntity*)
 T CTemplateNPCMaker::~CTemplateNPCMaker()
 T CTemplate_SaveRestoreBlockHandler::GetBlockName()
 T CTemplate_SaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CTemplate_SaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CTemplate_SaveRestoreBlockHandler::Save(ISave*)
 T CTemplate_SaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CTemplatesHook::LevelShutdownPostEntity()
 T CTemplatesHook::~CTemplatesHook()
 T CTesla::Activate()
 T CTesla::CTesla()
 T CTesla::DoSpark()
 T CTesla::GetDataDescMap()
 T CTesla::GetServerClass()
 T CTesla::InputDoSpark(inputdata_t&)
 T CTesla::InputTurnOff(inputdata_t&)
 T CTesla::InputTurnOn(inputdata_t&)
 T CTesla::Precache()
 T CTesla::ShootArcThink()
 T CTesla::Spawn()
 T CTesla::YouForgotToImplementOrDeclareServerClass()
 T CTesla::~CTesla()
 T CTestEffect::Precache()
 T CTestEffect::Spawn()
 T CTestEffect::Think()
 T CTestEffect::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CTestEffect::~CTestEffect()
 T CTestTraceline::GetDataDescMap()
 T CTestTraceline::GetServerClass()
 T CTestTraceline::Spawn()
 T CTestTraceline::Spin()
 T CTestTraceline::UpdateTransmitState()
 T CTestTraceline::YouForgotToImplementOrDeclareServerClass()
 T CTestTraceline::~CTestTraceline()
 T CTest_ProxyToggle_Networkable::CTest_ProxyToggle_Networkable()
 T CTest_ProxyToggle_Networkable::GetServerClass()
 T CTest_ProxyToggle_Networkable::UpdateTransmitState()
 T CTest_ProxyToggle_Networkable::YouForgotToImplementOrDeclareServerClass()
 T CTest_ProxyToggle_Networkable::~CTest_ProxyToggle_Networkable()
 T CTextStat::~CTextStat()
 T CTextStatsMgr::GetStatsFilename()
 T CTextStatsMgr::SetStatsFilename(char*)
 T CTextStatsMgr::WriteFile(IFileSystem*, char const*)
 T CTextureIdProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CTextureIdProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CTextureIdProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CTextureToggle::GetDataDescMap()
 T CTextureToggle::InputIncrementBrushTexIndex(inputdata_t&)
 T CTextureToggle::InputSetBrushTexIndex(inputdata_t&)
 T CTextureToggle::~CTextureToggle()
 T CThinkContextsSaveDataOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CThinkContextsSaveDataOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CThinkContextsSaveDataOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CThinkContextsSaveDataOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CThinkSyncTester::EntityThinking(int, CBaseEntity*, float, int)
 T CThinkSyncTester::Report()
 T CThinkSyncTester::ThinkLessFunc(ThinkSync const&, ThinkSync const&)
 T CThinkSyncTester::~CThinkSyncTester()
 T CThreadMutex::~CThreadMutex()
 T CThreadRWLock::CThreadRWLock()
 T CThreadSafeMemoryPool::Alloc(unsigned int)
 T CThreadSafeMemoryPool::CThreadSafeMemoryPool(int, int, int)
 T CThreadSafeMemoryPool::Free(void*, int)
 T CThreadSafeMemoryPool::~CThreadSafeMemoryPool()
 T CThreadSafeMultiMemoryPool::Alloc(unsigned int)
 T CThreadSafeMultiMemoryPool::CThreadSafeMultiMemoryPool(CThreadSafeMultiMemoryPool::MemPoolConfig_t const*, int, int)
 T CThreadSafeMultiMemoryPool::Free(void*)
 T CThreadSafeMultiMemoryPool::~CThreadSafeMultiMemoryPool()
 T CThreadsafeTree<false>::~CThreadsafeTree()
 T CThrustController::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CTimedEventMgr::CTimedEventMgr()
 T CTimedEventMgr::FireEvents()
 T CTimedEventMgr::~CTimedEventMgr()
 T CTimerEntity::DrawDebugTextOverlays()
 T CTimerEntity::FireTimer()
 T CTimerEntity::GetDataDescMap()
 T CTimerEntity::InputAddToTimer(inputdata_t&)
 T CTimerEntity::InputDisable(inputdata_t&)
 T CTimerEntity::InputEnable(inputdata_t&)
 T CTimerEntity::InputFireTimer(inputdata_t&)
 T CTimerEntity::InputRefireTime(inputdata_t&)
 T CTimerEntity::InputResetTimer(inputdata_t&)
 T CTimerEntity::InputSubtractFromTimer(inputdata_t&)
 T CTimerEntity::InputToggle(inputdata_t&)
 T CTimerEntity::Spawn()
 T CTimerEntity::Think()
 T CTimerEntity::~CTimerEntity()
 T CTonemapSystem::LevelInitPostEntity()
 T CTonemapSystem::LevelInitPreEntity()
 T CTonemapSystem::~CTonemapSystem()
 T CTonemapTrigger::EndTouch(CBaseEntity*)
 T CTonemapTrigger::GetDataDescMap()
 T CTonemapTrigger::Spawn()
 T CTonemapTrigger::StartTouch(CBaseEntity*)
 T CTonemapTrigger::~CTonemapTrigger()
 T CToolFrameworkServer::FrameUpdatePostEntityThink()
 T CToolFrameworkServer::FrameUpdatePreEntityThink()
 T CToolFrameworkServer::Init()
 T CToolFrameworkServer::LevelInitPostEntity()
 T CToolFrameworkServer::LevelInitPreEntity()
 T CToolFrameworkServer::LevelShutdownPostEntity()
 T CToolFrameworkServer::LevelShutdownPreEntity()
 T CToolFrameworkServer::PreClientUpdate()
 T CToolFrameworkServer::PreSetupVisibility()
 T CToolFrameworkServer::~CToolFrameworkServer()
 T CTraceFilter::GetTraceType() const
 T CTraceFilterAgainstEntityList::GetTraceType() const
 T CTraceFilterAgainstEntityList::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterCollisionGroupDelta::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterDoor::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterEntitiesOnly::GetTraceType() const
 T CTraceFilterEntity::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterEntityIgnoreOther::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterGroundEntities::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterHitAll::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterLOS::CTraceFilterLOS(IHandleEntity*, int, IHandleEntity*)
 T CTraceFilterLOS::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterMelee::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterNav::CTraceFilterNav(CAI_BaseNPC*, bool, IServerEntity const*, int, bool)
 T CTraceFilterNav::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterNoCombatCharacters::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterNoNPCsOrPlayer::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterNoPlayers::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterOnlyHitThis::CTraceFilterOnlyHitThis(IHandleEntity const*)
 T CTraceFilterOnlyHitThis::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterOnlyNPCsAndPlayer::GetTraceType() const
 T CTraceFilterOnlyNPCsAndPlayer::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterPlayersNPCs::GetTraceType() const
 T CTraceFilterPlayersNPCs::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterPlayersNPCsPhysicsProps::GetTraceType() const
 T CTraceFilterPlayersNPCsPhysicsProps::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterPushFinal::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterPushMove::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterSimple::CTraceFilterSimple(IHandleEntity const*, int, bool (*)(IHandleEntity*, int))
 T CTraceFilterSimple::SetCollisionGroup(int)
 T CTraceFilterSimple::SetPassEntity(IHandleEntity const*)
 T CTraceFilterSimple::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterSimpleClassnameList::AddClassnameToIgnore(char const*)
 T CTraceFilterSimpleClassnameList::CTraceFilterSimpleClassnameList(IHandleEntity const*, int)
 T CTraceFilterSimpleClassnameList::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterSimpleList::AddEntityToIgnore(IHandleEntity*)
 T CTraceFilterSimpleList::CTraceFilterSimpleList(int)
 T CTraceFilterSimpleList::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterSkipNPCs::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterSkipTwoEntities::CTraceFilterSkipTwoEntities(IHandleEntity const*, IHandleEntity const*, int)
 T CTraceFilterSkipTwoEntities::SetPassEntity2(IHandleEntity const*)
 T CTraceFilterSkipTwoEntities::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterSkipTwoEntitiesAndTeammates::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterTranslateClones::GetTraceType() const
 T CTraceFilterTranslateClones::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterValidForDecal::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterWalkableEntities::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterWorldAndPropsOnly::GetTraceType() const
 T CTraceFilterWorldAndPropsOnly::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterWorldOnly::GetTraceType() const
 T CTraceFilterWorldOnly::ShouldHitEntity(IHandleEntity*, int)
 T CTracePassFilter::ShouldHitEntity(IHandleEntity*, int)
 T CTraceTypeWrapper::GetTraceType() const
 T CTraceTypeWrapper::ShouldHitEntity(IHandleEntity*, int)
 T CTractorBeam_Manager::LevelShutdownPostEntity()
 T CTractorBeam_Manager::PreClientUpdate()
 T CTractorBeam_Manager::~CTractorBeam_Manager()
 T CTransformedCollideable::CollisionToWorldTransform() const
 T CTransformedCollideable::GetCollisionAngles() const
 T CTransformedCollideable::GetCollisionGroup() const
 T CTransformedCollideable::GetCollisionModel()
 T CTransformedCollideable::GetCollisionModelIndex()
 T CTransformedCollideable::GetCollisionOrigin() const
 T CTransformedCollideable::GetEntityHandle()
 T CTransformedCollideable::GetIClientUnknown()
 T CTransformedCollideable::GetRequiredTriggerFlags() const
 T CTransformedCollideable::GetRootParentToWorldTransform() const
 T CTransformedCollideable::GetSolid() const
 T CTransformedCollideable::GetSolidFlags() const
 T CTransformedCollideable::GetVPhysicsObject() const
 T CTransformedCollideable::OBBMaxs() const
 T CTransformedCollideable::OBBMins() const
 T CTransformedCollideable::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CTransformedCollideable::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)
 T CTransformedCollideable::WorldSpaceSurroundingBounds(Vector*, Vector*)
 T CTransformedCollideable::WorldSpaceTriggerBounds(Vector*, Vector*) const
 T CTriggerAutoCrouch::EndTouch(CBaseEntity*)
 T CTriggerAutoCrouch::GetDataDescMap()
 T CTriggerAutoCrouch::PassesTriggerFilters(CBaseEntity*)
 T CTriggerAutoCrouch::Spawn()
 T CTriggerAutoCrouch::StartTouch(CBaseEntity*)
 T CTriggerAutoCrouch::~CTriggerAutoCrouch()
 T CTriggerBrush::EndTouch(CBaseEntity*)
 T CTriggerBrush::GetDataDescMap()
 T CTriggerBrush::InputDisable(inputdata_t&)
 T CTriggerBrush::InputEnable(inputdata_t&)
 T CTriggerBrush::Spawn()
 T CTriggerBrush::StartTouch(CBaseEntity*)
 T CTriggerBrush::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CTriggerBrush::~CTriggerBrush()
 T CTriggerCDAudio::PlayTrack()
 T CTriggerCDAudio::Spawn()
 T CTriggerCDAudio::Touch(CBaseEntity*)
 T CTriggerCDAudio::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CTriggerCDAudio::~CTriggerCDAudio()
 T CTriggerCamera::Disable()
 T CTriggerCamera::Enable()
 T CTriggerCamera::FindAttachment()
 T CTriggerCamera::FollowTarget()
 T CTriggerCamera::GetDataDescMap()
 T CTriggerCamera::GetScriptDesc()
 T CTriggerCamera::InputDisable(inputdata_t&)
 T CTriggerCamera::InputEnable(inputdata_t&)
 T CTriggerCamera::InputReturnToEyes(inputdata_t&)
 T CTriggerCamera::InputSetPath(inputdata_t&)
 T CTriggerCamera::InputSetTarget(inputdata_t&)
 T CTriggerCamera::InputSetTargetAttachment(inputdata_t&)
 T CTriggerCamera::InputSetTrackSpeed(inputdata_t&)
 T CTriggerCamera::InputTeleportToView(inputdata_t&)
 T CTriggerCamera::KeyValue(char const*, char const*)
 T CTriggerCamera::Move()
 T CTriggerCamera::MoveViewTo(QAngle)
 T CTriggerCamera::ReturnToEyes()
 T CTriggerCamera::ScriptGetFov()
 T CTriggerCamera::ScriptSetFov(int, float)
 T CTriggerCamera::Spawn()
 T CTriggerCamera::StartCameraShot(char const*, CBaseEntity*, CBaseEntity*, CBaseEntity*, float)
 T CTriggerCamera::UpdateTransmitState()
 T CTriggerCamera::Use(CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T CTriggerCamera::~CTriggerCamera()
 T CTriggerCameraMultiplayer::AddPlayer(CBasePlayer*)
 T CTriggerCameraMultiplayer::Disable()
 T CTriggerCameraMultiplayer::Enable()
 T CTriggerCameraMultiplayer::GetDataDescMap()
 T CTriggerCameraMultiplayer::InputAddPlayer(inputdata_t&)
 T CTriggerCameraMultiplayer::InputDisable(inputdata_t&)
 T CTriggerCameraMultiplayer::InputEnable(inputdata_t&)
 T CTriggerCameraMultiplayer::InputRemovePlayer(inputdata_t&)
 T CTriggerCameraMultiplayer::InputStartMovement(inputdata_t&)
 T CTriggerCameraMultiplayer::MoveTime(float)
 T CTriggerCameraMultiplayer::Spawn()
 T CTriggerCameraMultiplayer::UpdateTransmitState()
 T CTriggerCameraMultiplayer::~CTriggerCameraMultiplayer()
 T CTriggerCatapult::CTriggerCatapult()
 T CTriggerCatapult::CalculateLaunchVector(CBaseEntity*, CBaseEntity*)
 T CTriggerCatapult::CalculateLaunchVectorPreserve(Vector, CBaseEntity*, CBaseEntity*, bool)
 T CTriggerCatapult::DrawDebugGeometryOverlays()
 T CTriggerCatapult::DrawDebugTextOverlays()
 T CTriggerCatapult::EndTouch(CBaseEntity*)
 T CTriggerCatapult::GetDataDescMap()
 T CTriggerCatapult::GetEntity()
 T CTriggerCatapult::GetServerClass()
 T CTriggerCatapult::InputSetExactVelocityChoiceType(inputdata_t&)
 T CTriggerCatapult::InputSetLaunchTarget(inputdata_t&)
 T CTriggerCatapult::InputSetPhysicsSpeed(inputdata_t&)
 T CTriggerCatapult::InputSetPlayerSpeed(inputdata_t&)
 T CTriggerCatapult::LaunchByDirection(CBaseEntity*)
 T CTriggerCatapult::LaunchByTarget(CBaseEntity*, CBaseEntity*)
 T CTriggerCatapult::LaunchThink()
 T CTriggerCatapult::NetworkVar_m_flRefireDelay::GetForModify(int)
 T CTriggerCatapult::OnLaunchedVictim(CBaseEntity*)
 T CTriggerCatapult::PlayerPassesTriggerFiltersThink()
 T CTriggerCatapult::Spawn()
 T CTriggerCatapult::StartTouch(CBaseEntity*)
 T CTriggerCatapult::YouForgotToImplementOrDeclareServerClass()
 T CTriggerCatapult::~CTriggerCatapult()
 T CTriggerGravity::EndTouch(CBaseEntity*)
 T CTriggerGravity::GetDataDescMap()
 T CTriggerGravity::GravityTouch(CBaseEntity*)
 T CTriggerGravity::Spawn()
 T CTriggerGravity::~CTriggerGravity()
 T CTriggerHierarchy::Activate()
 T CTriggerHierarchy::GetDataDescMap()
 T CTriggerHierarchy::HasChildThatPassesChildFilter(CBaseEntity*)
 T CTriggerHierarchy::PassesTriggerFilters(CBaseEntity*)
 T CTriggerHierarchy::~CTriggerHierarchy()
 T CTriggerHurt::EndTouch(CBaseEntity*)
 T CTriggerHurt::GetDataDescMap()
 T CTriggerHurt::HurtAllTouchers(float)
 T CTriggerHurt::HurtEntity(CBaseEntity*, float)
 T CTriggerHurt::HurtThink()
 T CTriggerHurt::NavThink()
 T CTriggerHurt::RadiationThink()
 T CTriggerHurt::Spawn()
 T CTriggerHurt::Touch(CBaseEntity*)
 T CTriggerHurt::~CTriggerHurt()
 T CTriggerImpact::DrawDebugTextOverlays()
 T CTriggerImpact::GetDataDescMap()
 T CTriggerImpact::InputImpact(inputdata_t&)
 T CTriggerImpact::InputSetMagnitude(inputdata_t&)
 T CTriggerImpact::Spawn()
 T CTriggerImpact::StartTouch(CBaseEntity*)
 T CTriggerImpact::~CTriggerImpact()
 T CTriggerLook::Activate()
 T CTriggerLook::DrawDebugTextOverlays()
 T CTriggerLook::EndTouch(CBaseEntity*)
 T CTriggerLook::GetDataDescMap()
 T CTriggerLook::Spawn()
 T CTriggerLook::StartTouch(CBaseEntity*)
 T CTriggerLook::TimeoutThink()
 T CTriggerLook::Touch(CBaseEntity*)
 T CTriggerLook::Trigger(CBaseEntity*, bool)
 T CTriggerLook::~CTriggerLook()
 T CTriggerMultiple::ActivateMultiTrigger(CBaseEntity*)
 T CTriggerMultiple::GetDataDescMap()
 T CTriggerMultiple::MultiTouch(CBaseEntity*)
 T CTriggerMultiple::MultiWaitOver()
 T CTriggerMultiple::Spawn()
 T CTriggerMultiple::~CTriggerMultiple()
 T CTriggerOnce::Spawn()
 T CTriggerOnce::~CTriggerOnce()
 T CTriggerPaintCleanser::Activate()
 T CTriggerPaintCleanser::Enable()
 T CTriggerPaintCleanser::GetDataDescMap()
 T CTriggerPaintCleanser::GetServerClass()
 T CTriggerPaintCleanser::NetworkStateChanged_m_bDisabled()
 T CTriggerPaintCleanser::NetworkStateChanged_m_bDisabled(void*)
 T CTriggerPaintCleanser::Spawn()
 T CTriggerPaintCleanser::Touch(CBaseEntity*)
 T CTriggerPaintCleanser::UpdateOnRemove()
 T CTriggerPaintCleanser::UpdateTransmitState()
 T CTriggerPaintCleanser::YouForgotToImplementOrDeclareServerClass()
 T CTriggerPaintCleanser::~CTriggerPaintCleanser()
 T CTriggerPhysicsTrap::GetDataDescMap()
 T CTriggerPhysicsTrap::InputDisable(inputdata_t&)
 T CTriggerPhysicsTrap::InputEnable(inputdata_t&)
 T CTriggerPhysicsTrap::InputToggle(inputdata_t&)
 T CTriggerPhysicsTrap::Touch(CBaseEntity*)
 T CTriggerPhysicsTrap::~CTriggerPhysicsTrap()
 T CTriggerPingDetector::FireGameEvent(IGameEvent*)
 T CTriggerPingDetector::GetDataDescMap()
 T CTriggerPingDetector::Spawn()
 T CTriggerPingDetector::~CTriggerPingDetector()
 T CTriggerPlayerMovement::EndTouch(CBaseEntity*)
 T CTriggerPlayerMovement::GetDataDescMap()
 T CTriggerPlayerMovement::GetServerClass()
 T CTriggerPlayerMovement::Spawn()
 T CTriggerPlayerMovement::StartTouch(CBaseEntity*)
 T CTriggerPlayerMovement::YouForgotToImplementOrDeclareServerClass()
 T CTriggerPlayerMovement::~CTriggerPlayerMovement()
 T CTriggerPlayerTeam::EndTouch(CBaseEntity*)
 T CTriggerPlayerTeam::GetDataDescMap()
 T CTriggerPlayerTeam::Spawn()
 T CTriggerPlayerTeam::StartTouch(CBaseEntity*)
 T CTriggerPlayerTeam::~CTriggerPlayerTeam()
 T CTriggerPortalCleanser::Activate()
 T CTriggerPortalCleanser::CTriggerPortalCleanser()
 T CTriggerPortalCleanser::Disable()
 T CTriggerPortalCleanser::Enable()
 T CTriggerPortalCleanser::FizzleBaseAnimating(CTriggerPortalCleanser*, CBaseAnimating*)
 T CTriggerPortalCleanser::FizzleTouchingPortals()
 T CTriggerPortalCleanser::GetDataDescMap()
 T CTriggerPortalCleanser::GetEntity()
 T CTriggerPortalCleanser::GetServerClass()
 T CTriggerPortalCleanser::InputFizzleTouchingPortals(inputdata_t&)
 T CTriggerPortalCleanser::NetworkStateChanged_m_bDisabled()
 T CTriggerPortalCleanser::NetworkStateChanged_m_bDisabled(void*)
 T CTriggerPortalCleanser::PlayerPassesTriggerFiltersThink()
 T CTriggerPortalCleanser::Precache()
 T CTriggerPortalCleanser::SearchThink()
 T CTriggerPortalCleanser::SetPortalShot()
 T CTriggerPortalCleanser::Spawn()
 T CTriggerPortalCleanser::StartAmbientSounds()
 T CTriggerPortalCleanser::StopAmbientSounds()
 T CTriggerPortalCleanser::Touch(CBaseEntity*)
 T CTriggerPortalCleanser::UpdateOnRemove()
 T CTriggerPortalCleanser::UpdateTransmitState()
 T CTriggerPortalCleanser::YouForgotToImplementOrDeclareServerClass()
 T CTriggerPortalCleanser::~CTriggerPortalCleanser()
 T CTriggerProximity::Activate()
 T CTriggerProximity::EndTouch(CBaseEntity*)
 T CTriggerProximity::GetDataDescMap()
 T CTriggerProximity::MeasureThink()
 T CTriggerProximity::Spawn()
 T CTriggerProximity::StartTouch(CBaseEntity*)
 T CTriggerProximity::~CTriggerProximity()
 T CTriggerPush::Activate()
 T CTriggerPush::DrawDebugGeometryOverlays()
 T CTriggerPush::GetDataDescMap()
 T CTriggerPush::InputSetPushDirection(inputdata_t&)
 T CTriggerPush::Spawn()
 T CTriggerPush::Touch(CBaseEntity*)
 T CTriggerPush::~CTriggerPush()
 T CTriggerRPGFire::OnRestore()
 T CTriggerRPGFire::Spawn()
 T CTriggerRPGFire::~CTriggerRPGFire()
 T CTriggerRemove::GetDataDescMap()
 T CTriggerRemove::Spawn()
 T CTriggerRemove::Touch(CBaseEntity*)
 T CTriggerRemove::~CTriggerRemove()
 T CTriggerSave::GetDataDescMap()
 T CTriggerSave::Spawn()
 T CTriggerSave::Touch(CBaseEntity*)
 T CTriggerSave::~CTriggerSave()
 T CTriggerSoundscape::Activate()
 T CTriggerSoundscape::EndTouch(CBaseEntity*)
 T CTriggerSoundscape::GetDataDescMap()
 T CTriggerSoundscape::PlayerUpdateThink()
 T CTriggerSoundscape::Spawn()
 T CTriggerSoundscape::StartTouch(CBaseEntity*)
 T CTriggerSoundscape::~CTriggerSoundscape()
 T CTriggerTeleport::GetDataDescMap()
 T CTriggerTeleport::InputSetTarget(inputdata_t&)
 T CTriggerTeleport::Spawn()
 T CTriggerTeleport::Touch(CBaseEntity*)
 T CTriggerTeleport::~CTriggerTeleport()
 T CTriggerToggleSave::GetDataDescMap()
 T CTriggerToggleSave::InputDisable(inputdata_t&)
 T CTriggerToggleSave::InputEnable(inputdata_t&)
 T CTriggerToggleSave::Spawn()
 T CTriggerToggleSave::Touch(CBaseEntity*)
 T CTriggerToggleSave::~CTriggerToggleSave()
 T CTriggerTraceEnum::EnumEntity(IHandleEntity*)
 T CTriggerVPhysicsMotion* _CreateEntityTemplate<CTriggerVPhysicsMotion>(CTriggerVPhysicsMotion*, char const*)
 T CTriggerVPhysicsMotion::CreateVPhysics()
 T CTriggerVPhysicsMotion::EndTouch(CBaseEntity*)
 T CTriggerVPhysicsMotion::GetDataDescMap()
 T CTriggerVPhysicsMotion::InputSetVelocityLimitTime(inputdata_t&)
 T CTriggerVPhysicsMotion::OnRestore()
 T CTriggerVPhysicsMotion::Precache()
 T CTriggerVPhysicsMotion::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CTriggerVPhysicsMotion::Spawn()
 T CTriggerVPhysicsMotion::StartTouch(CBaseEntity*)
 T CTriggerVPhysicsMotion::UpdateOnRemove()
 T CTriggerVPhysicsMotion::~CTriggerVPhysicsMotion()
 T CTriggerViewProxy::Disable()
 T CTriggerViewProxy::Enable()
 T CTriggerViewProxy::GetDataDescMap()
 T CTriggerViewProxy::GetPlayerOffset()
 T CTriggerViewProxy::InputDisable(inputdata_t&)
 T CTriggerViewProxy::InputEnable(inputdata_t&)
 T CTriggerViewProxy::InputTeleportPlayerToProxy(inputdata_t&)
 T CTriggerViewProxy::KeyValue(char const*, char const*)
 T CTriggerViewProxy::Move()
 T CTriggerViewProxy::Spawn()
 T CTriggerViewProxy::TranslateViewToProxy()
 T CTriggerViewProxy::UpdateTransmitState()
 T CTriggerViewProxy::~CTriggerViewProxy()
 T CTriggerVolume::Activate()
 T CTriggerVolume::Spawn()
 T CTriggerVolume::~CTriggerVolume()
 T CTriggerWateryDeath::EndTouch(CBaseEntity*)
 T CTriggerWateryDeath::GetDataDescMap()
 T CTriggerWateryDeath::PassesTriggerFilters(CBaseEntity*)
 T CTriggerWateryDeath::Precache()
 T CTriggerWateryDeath::Spawn()
 T CTriggerWateryDeath::StartTouch(CBaseEntity*)
 T CTriggerWateryDeath::Touch(CBaseEntity*)
 T CTriggerWateryDeath::~CTriggerWateryDeath()
 T CTriggerWeaponDissolve::Activate()
 T CTriggerWeaponDissolve::AddWeapon(CBaseCombatWeapon*)
 T CTriggerWeaponDissolve::CreateBeam(Vector const&, CBaseEntity*, float)
 T CTriggerWeaponDissolve::DissolveThink()
 T CTriggerWeaponDissolve::GetConduitPoint(CBaseEntity*)
 T CTriggerWeaponDissolve::GetDataDescMap()
 T CTriggerWeaponDissolve::InputStopSound(inputdata_t&)
 T CTriggerWeaponDissolve::Precache()
 T CTriggerWeaponDissolve::Spawn()
 T CTriggerWeaponDissolve::StartTouch(CBaseEntity*)
 T CTriggerWeaponDissolve::~CTriggerWeaponDissolve()
 T CTriggerWeaponStrip::EndTouch(CBaseEntity*)
 T CTriggerWeaponStrip::GetDataDescMap()
 T CTriggerWeaponStrip::StartTouch(CBaseEntity*)
 T CTriggerWeaponStrip::~CTriggerWeaponStrip()
 T CTriggerWind::CreateVPhysics()
 T CTriggerWind::DrawDebugTextOverlays()
 T CTriggerWind::EndTouch(CBaseEntity*)
 T CTriggerWind::GetDataDescMap()
 T CTriggerWind::InputSetSpeed(inputdata_t&)
 T CTriggerWind::KeyValue(char const*, char const*)
 T CTriggerWind::OnRestore()
 T CTriggerWind::Spawn()
 T CTriggerWind::StartTouch(CBaseEntity*)
 T CTriggerWind::UpdateOnRemove()
 T CTriggerWind::WindThink()
 T CTriggerWind::~CTriggerWind()
 T CTrigger_TractorBeam::Activate()
 T CTrigger_TractorBeam::CTrigger_TractorBeam()
 T CTrigger_TractorBeam::CalculateFrameMovement(IPhysicsObject*, CBaseEntity*, float, Vector&, Vector&)
 T CTrigger_TractorBeam::CreateTractorBeam(Vector const&, Vector const&, CBaseEntity*)
 T CTrigger_TractorBeam::CreateVPhysics()
 T CTrigger_TractorBeam::EndTouch(CBaseEntity*)
 T CTrigger_TractorBeam::ForceAttachEntity(CBaseEntity*)
 T CTrigger_TractorBeam::GetDataDescMap()
 T CTrigger_TractorBeam::GetEntity()
 T CTrigger_TractorBeam::GetForceDirection() const
 T CTrigger_TractorBeam::GetLastUpdateFrame() const
 T CTrigger_TractorBeam::GetLinearLimit()
 T CTrigger_TractorBeam::GetServerClass()
 T CTrigger_TractorBeam::InputSetVelocityLimitTime(inputdata_t&)
 T CTrigger_TractorBeam::NetworkStateChanged_m_bDisabled()
 T CTrigger_TractorBeam::NetworkStateChanged_m_bDisabled(void*)
 T CTrigger_TractorBeam::OnRestore()
 T CTrigger_TractorBeam::Precache()
 T CTrigger_TractorBeam::RemoveAllBlobsFromBeam()
 T CTrigger_TractorBeam::RemoveDeadBlobs()
 T CTrigger_TractorBeam::SetDirection(Vector const&, Vector const&)
 T CTrigger_TractorBeam::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CTrigger_TractorBeam::Spawn()
 T CTrigger_TractorBeam::StartTouch(CBaseEntity*)
 T CTrigger_TractorBeam::StopLoopingSounds()
 T CTrigger_TractorBeam::TractorThink()
 T CTrigger_TractorBeam::UpdateBeam(Vector const&, Vector const&, float)
 T CTrigger_TractorBeam::UpdateOnRemove()
 T CTrigger_TractorBeam::WakeTouchingObjects()
 T CTrigger_TractorBeam::YouForgotToImplementOrDeclareServerClass()
 T CTrigger_TractorBeam::~CTrigger_TractorBeam()
 T CTrigger_TractorBeam_Shared::RemoveBlobsFromPreviousBeams()
 T CTrigger_TractorBeam_Shared::RemoveDeadBlobsFromBeams()
 T CTurretTipController::Activate()
 T CTurretTipController::Enable(bool)
 T CTurretTipController::Enabled()
 T CTurretTipController::GetDataDescMap()
 T CTurretTipController::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T CTurretTipController::Spawn()
 T CTurretTipController::Suspend(float)
 T CTurretTipController::~CTurretTipController()
 T CUsePushFilter::ShouldHitEntity(IHandleEntity*, int)
 T CUserCmd::~CUserCmd()
 T CUserMessageThrottleMgr::~CUserMessageThrottleMgr()
 T CUserMessages::GetUserMessageName(int)
 T CUserMessages::GetUserMessageSize(int)
 T CUserMessages::IsValidIndex(int)
 T CUserMessages::LookupUserMessage(char const*)
 T CUserMessages::Register(char const*, int)
 T CUserMessages::~CUserMessages()
 T CUtlBinaryBlock::CUtlBinaryBlock(CUtlBinaryBlock const&)
 T CUtlBinaryBlock::CUtlBinaryBlock(int, int)
 T CUtlBinaryBlock::Set(void const*, int)
 T CUtlBinaryBlock::SetLength(int)
 T CUtlBuffer::AddNullTermination(int)
 T CUtlBuffer::AssumeMemory(void*, int, int, int)
 T CUtlBuffer::CUtlBuffer(int, int, int)
 T CUtlBuffer::CUtlBuffer(void const*, int, int)
 T CUtlBuffer::CheckArbitraryPeekGet(int, int&)
 T CUtlBuffer::CheckGet(int)
 T CUtlBuffer::CheckPut(int)
 T CUtlBuffer::EatCPPComment()
 T CUtlBuffer::EatWhiteSpace()
 T CUtlBuffer::EnsureCapacity(int)
 T CUtlBuffer::Get(void*, int)
 T CUtlBuffer::GetDelimitedCharInternal(CUtlCharConversion*)
 T CUtlBuffer::GetDelimitedString(CUtlCharConversion*, char*, int)
 T CUtlBuffer::GetLine(char*, int)
 T CUtlBuffer::GetOverflow(int)
 T CUtlBuffer::GetString(char*, int)
 T CUtlBuffer::GetToken(char const*)
 T CUtlBuffer::ParseToken(char const*, char const*, char*, int)
 T CUtlBuffer::ParseToken(characterset_t*, char*, int, bool)
 T CUtlBuffer::PeekDelimitedStringLength(CUtlCharConversion*, bool)
 T CUtlBuffer::PeekGet(int, int)
 T CUtlBuffer::PeekLineLength()
 T CUtlBuffer::PeekStringLength()
 T CUtlBuffer::PeekStringMatch(int, char const*, int)
 T CUtlBuffer::PeekWhiteSpace(int)
 T CUtlBuffer::Printf(char const*, ...)
 T CUtlBuffer::Put(void const*, int)
 T CUtlBuffer::PutChar(char)
 T CUtlBuffer::PutOverflow(int)
 T CUtlBuffer::PutString(char const*)
 T CUtlBuffer::Scanf(char const*, ...)
 T CUtlBuffer::SeekGet(CUtlBuffer::SeekType_t, int)
 T CUtlBuffer::SeekPut(CUtlBuffer::SeekType_t, int)
 T CUtlBuffer::SetBufferType(bool, bool)
 T CUtlBuffer::SetExternalBuffer(void*, int, int, int)
 T CUtlBuffer::VaScanf(char const*, char*)
 T CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
 T CUtlCStringConversion::FindConversion(char const*, int*)
 T CUtlCachedFileData<CModelSoundsCache>::CheckDiskInfo(bool, long)
 T CUtlCachedFileData<CModelSoundsCache>::FileNameHandleLessFunc(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&)
 T CUtlCachedFileData<CModelSoundsCache>::Get(char const*)
 T CUtlCachedFileData<CModelSoundsCache>::GetIndex(char const*)
 T CUtlCachedFileData<CModelSoundsCache>::Init()
 T CUtlCachedFileData<CModelSoundsCache>::InitLargeBuffer(void*&, bool&)
 T CUtlCachedFileData<CModelSoundsCache>::InitSmallBuffer(void*&, int, bool&)
 T CUtlCachedFileData<CModelSoundsCache>::Save()
 T CUtlCachedFileData<CModelSoundsCache>::SaveManifest()
 T CUtlCachedFileData<CModelSoundsCache>::Shutdown()
 T CUtlCachedFileData<CModelSoundsCache>::~CUtlCachedFileData()
 T CUtlCharConversion::FindConversion(char const*, int*)
 T CUtlDict<AchievementAward_t*, int>::~CUtlDict()
 T CUtlDict<CActivityRemapCache, int>::~CUtlDict()
 T CUtlDict<CDecalEmitterSystem::DecalEntry, int>::~CUtlDict()
 T CUtlDict<CNavArea*, int>::~CUtlDict()
 T CUtlDict<CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::~CUtlDict()
 T CUtlDict<CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::~CUtlDict()
 T CUtlDict<CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::~CUtlDict()
 T CUtlDict<CUserMessage*, int>::~CUtlDict()
 T CUtlDict<CUtlConstStringBase<char>, int>::~CUtlDict()
 T CUtlDict<ConceptHistory_t, int>::Insert(char const*, ConceptHistory_t const&)
 T CUtlDict<ConceptHistory_t, int>::~CUtlDict()
 T CUtlDict<EventGroup, int>::~CUtlDict()
 T CUtlDict<FileWeaponInfo_t*, unsigned short>::~CUtlDict()
 T CUtlDict<ResponseRules::CResponseSystem::Enumeration, short>::~CUtlDict()
 T CUtlDict<ResponseRules::Criteria, short>::Insert(char const*)
 T CUtlDict<ResponseRules::Criteria, short>::~CUtlDict()
 T CUtlDict<ResponseRules::ResponseGroup, short>::Insert(char const*)
 T CUtlDict<ResponseRules::ResponseGroup, short>::~CUtlDict()
 T CUtlDict<int, int>::~CUtlDict()
 T CUtlDict<vgui::IPanelAnimationPropertyConverter*, int>::~CUtlDict()
 T CUtlFixedLinkedList<CAI_PlaneSolver::CircleObstacles_t>::~CUtlFixedLinkedList()
 T CUtlFixedLinkedList<CInfoCameraLink*>::~CUtlFixedLinkedList()
 T CUtlHandleTable<vgui::BuildGroup, 20>::AddHandle()
 T CUtlHandleTable<vgui::BuildGroup, 20>::RemoveHandle(unsigned int)
 T CUtlHandleTable<vgui::BuildGroup, 20>::~CUtlHandleTable()
 T CUtlHash<CEntityDataInstantiator<CWatcherList>::HashEntry, bool (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&, CEntityDataInstantiator<CWatcherList>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&)>::CUtlHash(int, int, int, bool (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&, CEntityDataInstantiator<CWatcherList>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&))
 T CUtlHash<CEntityDataInstantiator<CWatcherList>::HashEntry, bool (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&, CEntityDataInstantiator<CWatcherList>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&)>::Insert(CEntityDataInstantiator<CWatcherList>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<CWatcherList>::HashEntry, bool (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&, CEntityDataInstantiator<CWatcherList>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CEntityDataInstantiator<ModelScale>::HashEntry, bool (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&, CEntityDataInstantiator<ModelScale>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&)>::CUtlHash(int, int, int, bool (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&, CEntityDataInstantiator<ModelScale>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&))
 T CUtlHash<CEntityDataInstantiator<ModelScale>::HashEntry, bool (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&, CEntityDataInstantiator<ModelScale>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&)>::Insert(CEntityDataInstantiator<ModelScale>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<ModelScale>::HashEntry, bool (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&, CEntityDataInstantiator<ModelScale>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CEntityDataInstantiator<StepSimulationData>::HashEntry, bool (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&, CEntityDataInstantiator<StepSimulationData>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&)>::CUtlHash(int, int, int, bool (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&, CEntityDataInstantiator<StepSimulationData>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&))
 T CUtlHash<CEntityDataInstantiator<StepSimulationData>::HashEntry, bool (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&, CEntityDataInstantiator<StepSimulationData>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&)>::Insert(CEntityDataInstantiator<StepSimulationData>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<StepSimulationData>::HashEntry, bool (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&, CEntityDataInstantiator<StepSimulationData>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CEntityDataInstantiator<groundlink_t>::HashEntry, bool (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&, CEntityDataInstantiator<groundlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&)>::CUtlHash(int, int, int, bool (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&, CEntityDataInstantiator<groundlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&))
 T CUtlHash<CEntityDataInstantiator<groundlink_t>::HashEntry, bool (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&, CEntityDataInstantiator<groundlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&)>::Insert(CEntityDataInstantiator<groundlink_t>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<groundlink_t>::HashEntry, bool (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&, CEntityDataInstantiator<groundlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CEntityDataInstantiator<physicspushlist_t>::HashEntry, bool (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&, CEntityDataInstantiator<physicspushlist_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&)>::CUtlHash(int, int, int, bool (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&, CEntityDataInstantiator<physicspushlist_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&))
 T CUtlHash<CEntityDataInstantiator<physicspushlist_t>::HashEntry, bool (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&, CEntityDataInstantiator<physicspushlist_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&)>::Insert(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<physicspushlist_t>::HashEntry, bool (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&, CEntityDataInstantiator<physicspushlist_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CEntityDataInstantiator<touchlink_t>::HashEntry, bool (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&, CEntityDataInstantiator<touchlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&)>::CUtlHash(int, int, int, bool (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&, CEntityDataInstantiator<touchlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&))
 T CUtlHash<CEntityDataInstantiator<touchlink_t>::HashEntry, bool (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&, CEntityDataInstantiator<touchlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&)>::Insert(CEntityDataInstantiator<touchlink_t>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<touchlink_t>::HashEntry, bool (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&, CEntityDataInstantiator<touchlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, bool (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&, CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&)>::CUtlHash(int, int, int, bool (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&, CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&))
 T CUtlHash<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, bool (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&, CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&)>::Insert(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, bool (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&, CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CGameSaveRestoreInfo::CHashElement, CGameSaveRestoreInfo::CHashFuncs, CGameSaveRestoreInfo::CHashFuncs>::Insert(CGameSaveRestoreInfo::CHashElement const&)
 T CUtlHash<CNavNode*, CNodeHashFuncs, CNodeHashFuncs>::Insert(CNavNode* const&, bool*)
 T CUtlHash<CNavNode*, CNodeHashFuncs, CNodeHashFuncs>::~CUtlHash()
 T CUtlHash<CStudioHdr::CActivityToSequenceMapping::HashValueType, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs>::CUtlHash(int, int, int, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs)
 T CUtlHash<CStudioHdr::CActivityToSequenceMapping::HashValueType, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs>::Insert(CStudioHdr::CActivityToSequenceMapping::HashValueType const&)
 T CUtlHash<CStudioHdr::CActivityToSequenceMapping::HashValueType, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs>::~CUtlHash()
 T CUtlHash<EntsByStringList_t, CEntsByStringHashFuncs, CEntsByStringHashFuncs>::Insert(EntsByStringList_t const&)
 T CUtlHash<EntsByStringList_t, CEntsByStringHashFuncs, CEntsByStringHashFuncs>::~CUtlHash()
 T CUtlHash<NavVisPair_t, CVisPairHashFuncs, CVisPairHashFuncs>::Insert(NavVisPair_t const&)
 T CUtlLinkedList<AI_Follower_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<AI_Follower_t, int> > >::AllocInternal(bool)
 T CUtlLinkedList<AI_Follower_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<AI_Follower_t, int> > >::RemoveAll()
 T CUtlLinkedList<AI_Follower_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<AI_Follower_t, int> > >::Unlink(int)
 T CUtlLinkedList<CAI_PlaneSolver::CircleObstacles_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CAI_PlaneSolver::CircleObstacles_t, int> > >::RemoveAll()
 T CUtlLinkedList<CAI_PlaneSolver::CircleObstacles_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CAI_PlaneSolver::CircleObstacles_t, int> > >::Unlink(int)
 T CUtlLinkedList<CBaseCombatWeapon*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBaseCombatWeapon*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CBaseCombatWeapon*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBaseCombatWeapon*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CBaseCombatWeapon*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBaseCombatWeapon*, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CBaseCombatWeapon*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBaseCombatWeapon*, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CEnvWindShared*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CEnvWindShared*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CEnvWindShared*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CEnvWindShared*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CEnvWindShared*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CEnvWindShared*, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CEnvWindShared::WindAveEvent_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CEnvWindShared::WindAveEvent_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CEnvWindShared::WindVariationEvent_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CEnvWindShared::WindVariationEvent_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CFoundryEntitySpawnRecord*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CFoundryEntitySpawnRecord*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<CFoundryEntitySpawnRecord*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CFoundryEntitySpawnRecord*, int>, int> >::PurgeAndDeleteElements()
 T CUtlLinkedList<CFoundryEntitySpawnRecord*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CFoundryEntitySpawnRecord*, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<CFuncAreaPortalBase*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFuncAreaPortalBase*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CFuncAreaPortalBase*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFuncAreaPortalBase*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CFuncAreaPortalBase*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFuncAreaPortalBase*, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CFuncNavBlocker*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFuncNavBlocker*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CFuncNavBlocker*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFuncNavBlocker*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CFuncNavBlocker*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CFuncNavBlocker*, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CHandle<CBaseAnimating>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CHandle<CBaseAnimating>, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CHandle<CBaseAnimating>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CHandle<CBaseAnimating>, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CHandle<CBaseAnimating>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CHandle<CBaseAnimating>, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CHandle<CBaseAnimating>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CHandle<CBaseAnimating>, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CInfoCameraLink*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CInfoCameraLink*, int> > >::AllocInternal(bool)
 T CUtlLinkedList<CInfoCameraLink*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CInfoCameraLink*, int> > >::RemoveAll()
 T CUtlLinkedList<CInfoCameraLink*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CInfoCameraLink*, int> > >::Unlink(int)
 T CUtlLinkedList<CInfoRemarkable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CInfoRemarkable*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CInfoRemarkable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CInfoRemarkable*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CInfoRemarkable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CInfoRemarkable*, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CInfoRemarkable*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CInfoRemarkable*, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CMapEntityRef, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CMapEntityRef, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CMapEntityRef, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CMapEntityRef, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CMapEntityRef, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CMapEntityRef, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CMapEntityRef, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CMapEntityRef, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CPlayerCmdInfo, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CPlayerCmdInfo, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CPlayerCmdInfo, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CPlayerCmdInfo, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CPlayerCmdInfo, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CPlayerCmdInfo, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CPlayerSimInfo, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CPlayerSimInfo, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CPlayerSimInfo, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CPlayerSimInfo, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CPlayerSimInfo, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CPlayerSimInfo, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CRagdollEntry, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRagdollEntry, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CRagdollEntry, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRagdollEntry, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CRagdollEntry, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRagdollEntry, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CResponseQueue::CDeferredResponse, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CResponseQueue::CDeferredResponse, int> > >::AllocInternal(bool)
 T CUtlLinkedList<CResponseQueue::CDeferredResponse, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CResponseQueue::CDeferredResponse, int> > >::RemoveAll()
 T CUtlLinkedList<CResponseQueue::CDeferredResponse, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CResponseQueue::CDeferredResponse, int> > >::Unlink(int)
 T CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CUtlMultiList<watcher_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<watcher_t, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CUtlMultiList<watcher_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<watcher_t, unsigned short>::List_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CUtlMultiList<watcher_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<watcher_t, unsigned short>::List_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<GCSDK::CJobMgr::JobTimeout_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<GCSDK::CJobMgr::JobTimeout_t, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<GCSDK::CJobMgr::JobTimeout_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<GCSDK::CJobMgr::JobTimeout_t, int>, int> >::LinkToTail(int)
 T CUtlLinkedList<GCSDK::CJobMgr::JobTimeout_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<GCSDK::CJobMgr::JobTimeout_t, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<GCSDK::CJobMgr::JobYielding_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<GCSDK::CJobMgr::JobYielding_t, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<GCSDK::CJobMgr::JobYielding_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<GCSDK::CJobMgr::JobYielding_t, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<GCSDK::IMsgNetPacket*, int, false, int, CUtlMemory<UtlLinkedListElem_t<GCSDK::IMsgNetPacket*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<GCSDK::IMsgNetPacket*, int, false, int, CUtlMemory<UtlLinkedListElem_t<GCSDK::IMsgNetPacket*, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<LagRecord, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<LagRecord, int> > >::AllocInternal(bool)
 T CUtlLinkedList<LagRecord, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<LagRecord, int> > >::LinkAfter(int, int)
 T CUtlLinkedList<LagRecord, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<LagRecord, int> > >::RemoveAll()
 T CUtlLinkedList<LagRecord, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<LagRecord, int> > >::Unlink(int)
 T CUtlLinkedList<ResponseRules::CRR_Concept, unsigned short, false, unsigned int, CUtlMemory<UtlLinkedListElem_t<ResponseRules::CRR_Concept, unsigned short>, unsigned int> >::AllocInternal(bool)
 T CUtlLinkedList<ResponseRules::CRR_Concept, unsigned short, false, unsigned int, CUtlMemory<UtlLinkedListElem_t<ResponseRules::CRR_Concept, unsigned short>, unsigned int> >::LinkBefore(unsigned int, unsigned int)
 T CUtlLinkedList<ResponseRules::CRR_Concept, unsigned short, false, unsigned int, CUtlMemory<UtlLinkedListElem_t<ResponseRules::CRR_Concept, unsigned short>, unsigned int> >::~CUtlLinkedList()
 T CUtlLinkedList<vgui::FastSortListPanelItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::FastSortListPanelItem*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::FastSortListPanelItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::FastSortListPanelItem*, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<vgui::GraphPanel::Sample_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::GraphPanel::Sample_t, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<vgui::ListPanel::column_t, unsigned char, false, unsigned char, CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::ListPanel::column_t, unsigned char, false, unsigned char, CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char> >::LinkBefore(unsigned char, unsigned char)
 T CUtlLinkedList<vgui::ListPanel::column_t, unsigned char, false, unsigned char, CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char> >::~CUtlLinkedList()
 T CUtlLinkedList<vgui::ListViewItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::ListViewItem*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::ListViewItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::ListViewItem*, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<vgui::MenuItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::MenuItem*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::MenuItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::MenuItem*, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<vgui::PanelListPanel::dataitem_s, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::PanelListPanel::dataitem_s, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::PanelListPanel::dataitem_s, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::PanelListPanel::dataitem_s, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<vgui::TreeNode*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::TreeNode*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::TreeNode*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::TreeNode*, int>, int> >::~CUtlLinkedList()
 T CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Insert(CBaseEntity* const&, AI_EnemyInfo_t* const&)
 T CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Insert(CBaseEntity* const&, CPhysSaveRestoreBlockHandler::CEntityRestoreSet* const&)
 T CUtlMap<CBaseEntity*, int, unsigned short>::Insert(CBaseEntity* const&, int const&)
 T CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Insert(CChoreoActor* const&, CBaseFlex* const&)
 T CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Insert(CHandle<CBaseEntity> const&, CLagCompensationManager::EntityLagData* const&)
 T CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Insert(CPhysCollide const* const&, BBox_t const&)
 T CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Insert(CSteamID const&, GCSDK::CGCClientSharedObjectCache* const&)
 T CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Insert(CUtlSymbol const&, CGlobalEventLine* const&)
 T CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Insert(CUtlSymbol const&, ConceptInfo_t* const&)
 T CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Insert(IPhysicsObject* const&, CPhysCollide const* const&)
 T CUtlMap<IPhysicsObject*, int, unsigned short>::Insert(IPhysicsObject* const&, int const&)
 T CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Insert(char const* const&)
 T CUtlMap<char const*, CBaseEntity*, unsigned short>::Insert(char const* const&, CBaseEntity* const&)
 T CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Insert(char const* const&, CDecalEmitterSystem::DecalEntry const&)
 T CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Insert(char const* const&, CGenericClassmap<CAI_BehaviorBase>::classentry_t const&)
 T CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Insert(char const* const&, CNPCEventResponseSystem::storedevent_t const&)
 T CUtlMap<char const*, CUtlConstStringBase<char>, int>::Insert(char const* const&, CUtlConstStringBase<char> const&)
 T CUtlMap<char const*, EventGroup, int>::Insert(char const* const&, EventGroup const&)
 T CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Insert(char const* const&, FileWeaponInfo_t* const&)
 T CUtlMap<char const*, IEntityFactory*, unsigned short>::Insert(char const* const&, IEntityFactory* const&)
 T CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Insert(char const* const&, ResponseRules::CResponseSystem::Enumeration const&)
 T CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Insert(char const* const&, ResponseRules::CriteriaSet::CritEntry_t const* const&)
 T CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Insert(char const* const&, codecontrolledbodygroupdata_t const&)
 T CUtlMap<char const*, int, unsigned short>::Insert(char const* const&, int const&)
 T CUtlMap<int, CAIHintVector, unsigned short>::~CUtlMap()
 T CUtlMap<int, CEconItemQualityDefinition, int>::Find(int const&) const
 T CUtlMap<int, CEconItemQualityDefinition, int>::Insert(int const&)
 T CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Insert(int const&, GCSDK::CSharedObject::SharedObjectInfo_t const&)
 T CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::InsertOrReplace(int const&, GCSDK::CSharedObject::SharedObjectInfo_t const&)
 T CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::~CUtlMap()
 T CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Insert(int const&, GCSDK::CSharedObjectTypeCache* const&)
 T CUtlMap<int, attachedparticlesystem_t, unsigned short>::Insert(int const&)
 T CUtlMap<int, char const*, unsigned short>::Insert(int const&, char const* const&)
 T CUtlMap<int, int, unsigned short>::Insert(int const&, int const&)
 T CUtlMap<string_t, CSimpleSimTimer, char>::Insert(string_t const&, CSimpleSimTimer const&)
 T CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Insert(studiohdr_t const* const&)
 T CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::~CUtlMap()
 T CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Insert(unsigned int const&, AchievementAward_t* const&)
 T CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::PurgeAndDeleteElements()
 T CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Insert(unsigned int const&, GCSDK::JobStatsBucket_t const&)
 T CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Insert(unsigned int const&, ResponseRules::Rule* const&)
 T CUtlMap<unsigned int, char const*, unsigned short>::Insert(unsigned int const&, char const* const&)
 T CUtlMap<unsigned int, float, unsigned short>::Insert(unsigned int const&, float const&)
 T CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Insert(unsigned int const&, void (ResponseRules::CResponseSystem::* const&)())
 T CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Insert(unsigned int const&, void (ResponseRules::CResponseSystem::* const&)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*))
 T CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Insert(unsigned int const&, void (ResponseRules::CResponseSystem::* const&)(ResponseRules::Rule&))
 T CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Insert(unsigned int const&, void (ResponseRules::CResponseSystem::* const&)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&))
 T CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Insert(vcollide_t* const&, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t const&)
 T CUtlMapDataOps<CUtlMap<string_t, CSimpleSimTimer, char>, 2, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlMapDataOps<CUtlMap<string_t, CSimpleSimTimer, char>, 2, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlMapDataOps<CUtlMap<string_t, CSimpleSimTimer, char>, 2, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlMapDataOps<CUtlMap<string_t, CSimpleSimTimer, char>, 2, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlMemory<AIChannelScheduleState_t, int>::Grow(int)
 T CUtlMemory<AIRebalanceInfo_t, int>::Grow(int)
 T CUtlMemory<AISquadEnemyInfo_t, int>::Grow(int)
 T CUtlMemory<AI_FollowGroup_t*, int>::Grow(int)
 T CUtlMemory<AI_MoveSuggestion_t, int>::Grow(int)
 T CUtlMemory<AI_NearNode_t, int>::Grow(int)
 T CUtlMemory<AI_Waypoint_t, int>::Grow(int)
 T CUtlMemory<AccumulatedImpactSound, int>::Grow(int)
 T CUtlMemory<Activity, int>::Grow(int)
 T CUtlMemory<AppSystemInfo_t, int>::Grow(int)
 T CUtlMemory<AsyncCaption_t, int>::Grow(int)
 T CUtlMemory<BlobData_t, int>::Grow(int)
 T CUtlMemory<BlobInterpolationData_t, int>::Grow(int)
 T CUtlMemory<BlobTeleportationHistory_t, int>::Grow(int)
 T CUtlMemory<BrushContact, int>::Grow(int)
 T CUtlMemory<CAI_BaseNPC*, int>::Grow(int)
 T CUtlMemory<CAI_BlendedMotor::AI_Movementscript_t, int>::Grow(int)
 T CUtlMemory<CAI_Hint*, int>::Grow(int)
 T CUtlMemory<CAI_InterestTarget_t, int>::Grow(int)
 T CUtlMemory<CAI_Link*, int>::Grow(int)
 T CUtlMemory<CAI_PlaneSolver::CircleObstacles_t, int>::Grow(int)
 T CUtlMemory<CAI_ScriptConditionsElement, int>::Grow(int)
 T CUtlMemory<CAnimationLayer, int>::Grow(int)
 T CUtlMemory<CAttributeManager::cached_attribute_float_t, int>::Grow(int)
 T CUtlMemory<CBaseEntity*, int>::Grow(int)
 T CUtlMemory<CBasePlayer*, int>::Grow(int)
 T CUtlMemory<CBaseProjector*, int>::Grow(int)
 T CUtlMemory<CBaseServerVehicle::entryanim_t, int>::Grow(int)
 T CUtlMemory<CBaseServerVehicle::exitanim_t, int>::Grow(int)
 T CUtlMemory<CChangedPaintBoundsCache::Bounds_t, int>::Grow(int)
 T CUtlMemory<CChoreoActor*, int>::Grow(int)
 T CUtlMemory<CChoreoChannel*, int>::Grow(int)
 T CUtlMemory<CChoreoEvent*, int>::Grow(int)
 T CUtlMemory<CChoreoScene*, int>::Grow(int)
 T CUtlMemory<CCommandContext, int>::Grow(int)
 T CUtlMemory<CConstraintFloodEntry, int>::Grow(int)
 T CUtlMemory<CDecalEmitterSystem::DecalListEntry, int>::Grow(int)
 T CUtlMemory<CDmxAttribute*, int>::Grow(int)
 T CUtlMemory<CDmxElement*, int>::Grow(int)
 T CUtlMemory<CDmxElementDictionary::AttributeInfo_t, int>::Grow(int)
 T CUtlMemory<CDmxElementDictionary::DictInfo_t, int>::Grow(int)
 T CUtlMemory<CDragDropHelperPanel::DragHelperPanel_t, int>::Grow(int)
 T CUtlMemory<CEconColorDefinition*, int>::Grow(int)
 T CUtlMemory<CEconItem::attribute_t, int>::Grow(int)
 T CUtlMemory<CEconItemAttribute, int>::Grow(int)
 T CUtlMemory<CEconItemCustomData::EquippedInstance, int>::Grow(int)
 T CUtlMemory<CEconItemSchema::EquipRegion, int>::Grow(int)
 T CUtlMemory<CEconItemSetDefinition::itemset_attrib_t, int>::Grow(int)
 T CUtlMemory<CEconItemView, int>::Grow(int)
 T CUtlMemory<CEconStyleInfo*, int>::Grow(int)
 T CUtlMemory<CEffectScriptElement, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityPortalledNetworkMessage, int>::Grow(int)
 T CUtlMemory<CEnvSoundscape*, int>::Grow(int)
 T CUtlMemory<CEventAbsoluteTag, int>::Grow(int)
 T CUtlMemory<CEventRegister*, int>::Grow(int)
 T CUtlMemory<CEventRelativeTag, int>::Grow(int)
 T CUtlMemory<CExpressionSample, int>::Grow(int)
 T CUtlMemory<CFish*, int>::Grow(int)
 T CUtlMemory<CFlexAnimationTrack*, int>::Grow(int)
 T CUtlMemory<CFlexSceneFile*, int>::Grow(int)
 T CUtlMemory<CFlexTimingTag, int>::Grow(int)
 T CUtlMemory<CFogVolume*, int>::Grow(int)
 T CUtlMemory<CFuncLadder*, int>::Grow(int)
 T CUtlMemory<CFunctor*, int>::Grow(int)
 T CUtlMemory<CGameSaveRestoreInfo::CHashElement, int>::Grow(int)
 T CUtlMemory<CGameWeaponManager*, int>::Grow(int)
 T CUtlMemory<CGlobalEvent*, int>::Grow(int)
 T CUtlMemory<CHandle<CAI_BaseNPC>, int>::Grow(int)
 T CUtlMemory<CHandle<CAI_DynamicLink>, int>::Grow(int)
 T CUtlMemory<CHandle<CBaseCombatWeapon>, int>::Grow(int)
 T CUtlMemory<CHandle<CBaseEntity>, int>::Grow(int)
 T CUtlMemory<CHandle<CBaseFlex>, int>::Grow(int)
 T CUtlMemory<CHandle<CBasePlayer>, int>::Grow(int)
 T CUtlMemory<CHandle<CBasePropDoor>, int>::Grow(int)
 T CUtlMemory<CHandle<CEconWearable>, int>::Grow(int)
 T CUtlMemory<CHandle<CEnvMicrophone>, int>::Grow(int)
 T CUtlMemory<CHandle<CEnvPlayerSurfaceTrigger>, int>::Grow(int)
 T CUtlMemory<CHandle<CFish>, int>::Grow(int)
 T CUtlMemory<CHandle<CInfoLadderDismount>, int>::Grow(int)
 T CUtlMemory<CHandle<CInfoPlacementHelper>, int>::Grow(int)
 T CUtlMemory<CHandle<CMessageEntity>, int>::Grow(int)
 T CUtlMemory<CHandle<CPointTemplate>, int>::Grow(int)
 T CUtlMemory<CHandle<CSceneEntity>, int>::Grow(int)
 T CUtlMemory<CHandle<CSceneListManager>, int>::Grow(int)
 T CUtlMemory<CHandle<CTonemapTrigger>, int>::Grow(int)
 T CUtlMemory<CHandle<CTriggerMultiple>, int>::Grow(int)
 T CUtlMemory<CHandle<CVGuiScreen>, int>::Grow(int)
 T CUtlMemory<CHintCriteria::hintZone_t, int>::Grow(int)
 T CUtlMemory<CHintMessage*, int>::Grow(int)
 T CUtlMemory<CHintMessageTimers::hintmessagetime_t*, int>::Grow(int)
 T CUtlMemory<CInfo_Coop_Spawn*, int>::Grow(int)
 T CUtlMemory<CInventoryManager::inventories_t, int>::Grow(int)
 T CUtlMemory<CInventoryManager::pendingreq_t, int>::Grow(int)
 T CUtlMemory<CItemSelectionCriteria, int>::Grow(int)
 T CUtlMemory<CItemSelectionCriteria::CCondition*, int>::Grow(int)
 T CUtlMemory<CItem_Nugget*, int>::Grow(int)
 T CUtlMemory<CModelSoundsCache*, int>::Grow(int)
 T CUtlMemory<CMoveHelperServer::touchlist_t, int>::Grow(int)
 T CUtlMemory<CNPC_Bullseye*, int>::Grow(int)
 T CUtlMemory<CNavArea*, int>::Grow(int)
 T CUtlMemory<CNavLadder*, int>::Grow(int)
 T CUtlMemory<CNavMesh::WalkableSeedSpot, int>::Grow(int)
 T CUtlMemory<CNavNode*, int>::Grow(int)
 T CUtlMemory<CPVS_Extender*, int>::Grow(int)
 T CUtlMemory<CPaintBlob*, int>::Grow(int)
 T CUtlMemory<CParticleOperatorInstance*, int>::Grow(int)
 T CUtlMemory<CParticleSystemDefinition*, int>::Grow(int)
 T CUtlMemory<CPassengerInfo, int>::Grow(int)
 T CUtlMemory<CPassengerRole, int>::Grow(int)
 T CUtlMemory<CPassengerSeat, int>::Grow(int)
 T CUtlMemory<CPassengerSeatTransition, int>::Grow(int)
 T CUtlMemory<CPhysSaveRestoreBlockHandler::QueuedItem_t, int>::Grow(int)
 T CUtlMemory<CPhysicsPushedEntities::PhysicsPushedInfo_t, int>::Grow(int)
 T CUtlMemory<CPhysicsPushedEntities::PhysicsPusherInfo_t, int>::Grow(int)
 T CUtlMemory<CPhysicsShadowClone*, int>::Grow(int)
 T CUtlMemory<CPointTemplate*, int>::Grow(int)
 T CUtlMemory<CPolyhedron*, int>::Grow(int)
 T CUtlMemory<CPortalLaser::PortalLaserInfo_t, int>::Grow(int)
 T CUtlMemory<CPortalSimulator*, int>::Grow(int)
 T CUtlMemory<CPortal_Base2D*, int>::Grow(int)
 T CUtlMemory<CPortal_Player::RecentPortalTransform_t, int>::Grow(int)
 T CUtlMemory<CProjectedWallEntity*, int>::Grow(int)
 T CUtlMemory<CPropData::propdata_breakablechunk_t, int>::Grow(int)
 T CUtlMemory<CProp_Portal*, int>::Grow(int)
 T CUtlMemory<CSceneEventInfo, int>::Grow(int)
 T CUtlMemory<CSceneManager::CRestoreSceneSound, int>::Grow(int)
 T CUtlMemory<CSheet*, int>::Grow(int)
 T CUtlMemory<CSheet::SheetInfo_t, int>::Grow(int)
 T CUtlMemory<CSoundPatch*, int>::Grow(int)
 T CUtlMemory<CStressEntityReg*, int>::Grow(int)
 T CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int>::Grow(int)
 T CUtlMemory<CTeam*, int>::Grow(int)
 T CUtlMemory<CTeamSpawnPoint*, int>::Grow(int)
 T CUtlMemory<CThreadSafeMemoryPool::BlockSet_t, int>::Grow(int)
 T CUtlMemory<CThreadSafeMultiMemoryPool::MemPoolRecord_t*, int>::Grow(int)
 T CUtlMemory<CThreadSafeMultiMemoryPool::MemPoolRecord_t, int>::Grow(int)
 T CUtlMemory<CTriggerPaintCleanser*, int>::Grow(int)
 T CUtlMemory<CUserCmd, int>::Grow(int)
 T CUtlMemory<CUtlBinaryBlock, int>::Grow(int)
 T CUtlMemory<CUtlHandleTable<vgui::BuildGroup, 20>::EntryType_t, int>::Grow(int)
 T CUtlMemory<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::ListElem_t, int>::Grow(int)
 T CUtlMemory<CUtlMultiList<watcher_t, unsigned short>::ListElem_t, int>::Grow(int)
 T CUtlMemory<CUtlString, int>::Grow(int)
 T CUtlMemory<CUtlSymbol, int>::Grow(int)
 T CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::Grow(int)
 T CUtlMemory<CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>::StringPool_t*, int>::Grow(int)
 T CUtlMemory<CUtlSymbolTableLargeBase<CThreadsafeTree<false>, false, 2048ul>::StringPool_t*, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<CWatcherList>::HashEntry, CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<ModelScale>::HashEntry, CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<StepSimulationData>::HashEntry, CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<groundlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<physicspushlist_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<touchlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CGameSaveRestoreInfo::CHashElement, CUtlMemory<CGameSaveRestoreInfo::CHashElement, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CNavArea*, CUtlMemory<CNavArea*, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CNavNode*, CUtlMemory<CNavNode*, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<EntsByStringList_t, CUtlMemory<EntsByStringList_t, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<NavVisPair_t, CUtlMemory<NavVisPair_t, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<VoiceCommandMenuItem_t, CUtlMemory<VoiceCommandMenuItem_t, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<ikcontextikrule_t, CUtlMemory<ikcontextikrule_t, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<int, CUtlMemory<int, int> >, int>::Grow(int)
 T CUtlMemory<CVarBitVec, int>::Grow(int)
 T CUtlMemory<CaptionLookup_t, int>::Grow(int)
 T CUtlMemory<Color, int>::Grow(int)
 T CUtlMemory<DamageInfo, int>::Grow(int)
 T CUtlMemory<DmeTime_t, int>::Grow(int)
 T CUtlMemory<EntsByStringList_t, int>::Grow(int)
 T CUtlMemory<GCSDK::CJobMgr::JobSleeping_t, int>::Grow(int)
 T CUtlMemory<GCSDK::CLock*, int>::Grow(int)
 T CUtlMemory<GCSDK::CSharedObject*, int>::Grow(int)
 T CUtlMemory<GCSDK::IProtoBufMsgMemoryPool*, int>::Grow(int)
 T CUtlMemory<GCSDK::ISharedObjectListener*, int>::Grow(int)
 T CUtlMemory<GestureSlot_t, int>::Grow(int)
 T CUtlMemory<IEntityListener*, int>::Grow(int)
 T CUtlMemory<IGCUser*, int>::Grow(int)
 T CUtlMemory<IGameStatTracker::IStatContainer*, int>::Grow(int)
 T CUtlMemory<IGameSystem*, int>::Grow(int)
 T CUtlMemory<IGameSystemPerFrame*, int>::Grow(int)
 T CUtlMemory<IHandleEntity*, int>::Grow(int)
 T CUtlMemory<INavAvoidanceObstacle*, int>::Grow(int)
 T CUtlMemory<IPaintStreamAutoList*, int>::Grow(int)
 T CUtlMemory<IParticleOperatorDefinition*, int>::Grow(int)
 T CUtlMemory<IPhysicsObject*, int>::Grow(int)
 T CUtlMemory<IPortalLaserAutoList*, int>::Grow(int)
 T CUtlMemory<IPortalServerDllPropPortalLocator::PortalInfo_t, int>::Grow(int)
 T CUtlMemory<IProjectedWallEntityAutoList*, int>::Grow(int)
 T CUtlMemory<IPropWeightedCubeAutoList*, int>::Grow(int)
 T CUtlMemory<ISaveRestoreBlockHandler*, int>::Grow(int)
 T CUtlMemory<IServerNetworkable*, int>::Grow(int)
 T CUtlMemory<ITriggerCatapultAutoList*, int>::Grow(int)
 T CUtlMemory<ITriggerPortalCleanserAutoList*, int>::Grow(int)
 T CUtlMemory<ITriggerTractorBeamAutoList*, int>::Grow(int)
 T CUtlMemory<KeyValues*, int>::Grow(int)
 T CUtlMemory<NPCInterjection, int>::Grow(int)
 T CUtlMemory<NavVisPair_t, int>::Grow(int)
 T CUtlMemory<OneWayLink_t, int>::Grow(int)
 T CUtlMemory<PS_SD_Dynamic_CarvedEntities_CarvedEntity_t, int>::Grow(int)
 T CUtlMemory<PS_SD_Static_World_StaticProps_ClippedProp_t, int>::Grow(int)
 T CUtlMemory<PaintBlobImpactEffect_t, int>::Grow(int)
 T CUtlMemory<PaintEntityData_t, int>::Grow(int)
 T CUtlMemory<PaintLocationData_t, int>::Grow(int)
 T CUtlMemory<PaintPowerInfo_t, int>::Grow(int)
 T CUtlMemory<PaintPowerType, int>::Grow(int)
 T CUtlMemory<PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::ContextSurfacePaintPowerInfo_t, int>::Grow(int)
 T CUtlMemory<PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::ContextSurfacePaintPowerInfo_t, int>::Grow(int)
 T CUtlMemory<PaintPowerUser<CPaintableEntity<CPhysicsProp> >::ContextSurfacePaintPowerInfo_t, int>::Grow(int)
 T CUtlMemory<PanelAnimationMapEntry, int>::Grow(int)
 T CUtlMemory<PanelItem_t, int>::Grow(int)
 T CUtlMemory<ParticleChildrenInfo_t, int>::Grow(int)
 T CUtlMemory<PhysicsObjectCloneLink_t, int>::Grow(int)
 T CUtlMemory<PortalRadiusExtension_t, int>::Grow(int)
 T CUtlMemory<PortalVortexEffect_t, int>::Grow(int)
 T CUtlMemory<QAngle, int>::Grow(int)
 T CUtlMemory<Quaternion, int>::Grow(int)
 T CUtlMemory<Relationship_t, int>::Grow(int)
 T CUtlMemory<ResponseContext_t, int>::Grow(int)
 T CUtlMemory<ResponseRules::CRR_Response, int>::Grow(int)
 T CUtlMemory<ResponseRules::CResponseSystem::ScriptEntry, int>::Grow(int)
 T CUtlMemory<ResponseRules::ParserResponse, int>::Grow(int)
 T CUtlMemory<SCatapultData*, int>::Grow(int)
 T CUtlMemory<SDeaths*, int>::Grow(int)
 T CUtlMemory<SFizzledData*, int>::Grow(int)
 T CUtlMemory<SMPMapStats*, int>::Grow(int)
 T CUtlMemory<SPortalData*, int>::Grow(int)
 T CUtlMemory<SPuzzleData*, int>::Grow(int)
 T CUtlMemory<SStuckPlayers*, int>::Grow(int)
 T CUtlMemory<STaunts*, int>::Grow(int)
 T CUtlMemory<STractorBeamData*, int>::Grow(int)
 T CUtlMemory<SaveRestoreBlockHeader_t, int>::Grow(int)
 T CUtlMemory<ScriptFunctionBinding_t, int>::Grow(int)
 T CUtlMemory<ScriptedNPCInteraction_t, int>::Grow(int)
 T CUtlMemory<SlideKeywordList_t*, int>::Grow(int)
 T CUtlMemory<SoundCommand_t*, int>::Grow(int)
 T CUtlMemory<SpotOrder, int>::Grow(int)
 T CUtlMemory<TeleportListEntry_t, int>::Grow(int)
 T CUtlMemory<TemplateEntityData_t*, int>::Grow(int)
 T CUtlMemory<UTIL_Remove_PhysicsStack_t, int>::Grow(int)
 T CUtlMemory<UnreachableEnt_t, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CBaseCombatWeapon*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CEnvWindShared*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CFoundryEntitySpawnRecord*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CFuncAreaPortalBase*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CFuncNavBlocker*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CHandle<CBaseAnimating>, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CInfoRemarkable*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CMapEntityRef, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CPlayerCmdInfo, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CPlayerSimInfo, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CRagdollEntry, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<watcher_t, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<GCSDK::CJobMgr::JobTimeout_t, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<GCSDK::CJobMgr::JobYielding_t, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<GCSDK::IMsgNetPacket*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<ResponseRules::CRR_Concept, unsigned short>, unsigned int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::FastSortListPanelItem*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::ListViewItem*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::MenuItem*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::PanelListPanel::dataitem_s, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::TreeNode*, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char>, unsigned char>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short>, short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short>, short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short>, short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char>, char>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, int, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<GCSDK::JobType_t const*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<char const*, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<VMatrix, int>::Grow(int)
 T CUtlMemory<VPhysicsClipEntry_t, int>::Grow(int)
 T CUtlMemory<Vector, int>::Grow(int)
 T CUtlMemory<Vector2D, int>::Grow(int)
 T CUtlMemory<Vector4D, int>::Grow(int)
 T CUtlMemory<VoiceCommandMenuItem_t, int>::Grow(int)
 T CUtlMemory<activitylist_t, int>::Grow(int)
 T CUtlMemory<animation_on_wearable_t, int>::Grow(int)
 T CUtlMemory<attachedmodel_t, int>::Grow(int)
 T CUtlMemory<attachedparticlesystem_t, int>::Grow(int)
 T CUtlMemory<breakmodel_t, int>::Grow(int)
 T CUtlMemory<busyanim_t, int>::Grow(int)
 T CUtlMemory<busysafezone_t, int>::Grow(int)
 T CUtlMemory<char const*, int>::Grow(int)
 T CUtlMemory<char*, int>::Grow(int)
 T CUtlMemory<clusterSoundscapeList_t, int>::Grow(int)
 T CUtlMemory<constraint_anchor_t, int>::Grow(int)
 T CUtlMemory<damageevent_t, int>::Grow(int)
 T CUtlMemory<entitynotify_t, int>::Grow(int)
 T CUtlMemory<eventlist_t, int>::Grow(int)
 T CUtlMemory<float __vector(4), int>::Grow(int)
 T CUtlMemory<float, int>::Grow(int)
 T CUtlMemory<fluidevent_t, int>::Grow(int)
 T CUtlMemory<globalentity_t, int>::Grow(int)
 T CUtlMemory<ikcontextikrule_t, int>::Grow(int)
 T CUtlMemory<inflictorstate_t, int>::Grow(int)
 T CUtlMemory<int, int>::Grow(int)
 T CUtlMemory<magnetted_objects_t, int>::Grow(int)
 T CUtlMemory<masscenteroverride_t, int>::Grow(int)
 T CUtlMemory<modifiedconvars_t, int>::Grow(int)
 T CUtlMemory<penetrateevent_t, int>::Grow(int)
 T CUtlMemory<physfollower_t, int>::Grow(int)
 T CUtlMemory<physicssound::breaksound_t, int>::Grow(int)
 T CUtlMemory<physicssound::impactsound_t, int>::Grow(int)
 T CUtlMemory<simthinkentry_t, int>::Grow(int)
 T CUtlMemory<static_attrib_t, int>::Grow(int)
 T CUtlMemory<string_t, int>::Grow(int)
 T CUtlMemory<studiohdr_t const*, int>::Grow(int)
 T CUtlMemory<template_t, int>::Grow(int)
 T CUtlMemory<thinkfunc_t, int>::Grow(int)
 T CUtlMemory<touchevent_t, int>::Grow(int)
 T CUtlMemory<unsigned int, int>::Grow(int)
 T CUtlMemory<unsigned long long, int>::Grow(int)
 T CUtlMemory<unsigned long, int>::Grow(int)
 T CUtlMemory<unsigned short, int>::Grow(int)
 T CUtlMemory<vehicle_crashsound_t, int>::Grow(int)
 T CUtlMemory<vehicle_gear_t, int>::Grow(int)
 T CUtlMemory<vehiclescript_t, int>::Grow(int)
 T CUtlMemory<vgui::AnimationController::ActiveAnimation_t, int>::Grow(int)
 T CUtlMemory<vgui::BoundKey_t, int>::Grow(int)
 T CUtlMemory<vgui::BuildModeDialog*, int>::Grow(int)
 T CUtlMemory<vgui::CTreeViewListControl::CColumnInfo, int>::Grow(int)
 T CUtlMemory<vgui::ClickPanel*, int>::Grow(int)
 T CUtlMemory<vgui::DHANDLE<vgui::Menu>, int>::Grow(int)
 T CUtlMemory<vgui::IImage*, int>::Grow(int)
 T CUtlMemory<vgui::Label::TImageInfo, int>::Grow(int)
 T CUtlMemory<vgui::MenuButton*, int>::Grow(int)
 T CUtlMemory<vgui::MenuSeparator*, int>::Grow(int)
 T CUtlMemory<vgui::MessageMapItem_t, int>::Grow(int)
 T CUtlMemory<vgui::OverridableColorEntry, int>::Grow(int)
 T CUtlMemory<vgui::PHandle, int>::Grow(int)
 T CUtlMemory<vgui::Panel*, int>::Grow(int)
 T CUtlMemory<vgui::RichText::TFormatStream, int>::Grow(int)
 T CUtlMemory<vgui::TreeNode*, int>::Grow(int)
 T CUtlMemory<visibility_target_t, int>::Grow(int)
 T CUtlMemory<void (*)(IConVar*, char const*, float), int>::Grow(int)
 T CUtlMemory<wchar_t*, int>::Grow(int)
 T CUtlMemory<wchar_t, int>::Grow(int)
 T CUtlMemoryAligned<BlobsInAirUpdate_SIMD::BlobAirUpdateData_t, 16>::~CUtlMemoryAligned()
 T CUtlMemoryAligned<BlobsInBeamUpdate_SIMD::BlobBeamUpdateData_t, 16>::~CUtlMemoryAligned()
 T CUtlMemoryAligned<BlobsInStreakUpdate_SIMD::BlobStreakUpdateData_t, 16>::~CUtlMemoryAligned()
 T CUtlMemoryFixedGrowable<AccumulatedImpactSound, 32ul, int>::~CUtlMemoryFixedGrowable()
 T CUtlMemoryPool::AddNewBlob()
 T CUtlMemoryPool::Alloc()
 T CUtlMemoryPool::Alloc(unsigned long)
 T CUtlMemoryPool::CUtlMemoryPool(int, int, int, char const*, int)
 T CUtlMemoryPool::Clear()
 T CUtlMemoryPool::Free(void*)
 T CUtlMemoryPool::~CUtlMemoryPool()
 T CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Alloc()
 T CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::LinkBefore(unsigned short, unsigned short, unsigned short)
 T CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::~CUtlMultiList()
 T CUtlMultiList<watcher_t, unsigned short>::Alloc()
 T CUtlMultiList<watcher_t, unsigned short>::LinkBefore(unsigned short, unsigned short, unsigned short)
 T CUtlMultiList<watcher_t, unsigned short>::Remove(unsigned short, unsigned short)
 T CUtlMultiList<watcher_t, unsigned short>::~CUtlMultiList()
 T CUtlNoEscConversion::FindConversion(char const*, int*)
 T CUtlPriorityQueue<AI_NearNode_t, CDefUtlPriorityQueueLessFunc<AI_NearNode_t>, CUtlMemory<AI_NearNode_t, int> >::Insert(AI_NearNode_t const&)
 T CUtlPriorityQueue<CEventRegister*, CDefUtlPriorityQueueLessFunc<CEventRegister*>, CUtlMemory<CEventRegister*, int> >::Insert(CEventRegister* const&)
 T CUtlPriorityQueue<CEventRegister*, CDefUtlPriorityQueueLessFunc<CEventRegister*>, CUtlMemory<CEventRegister*, int> >::RemoveAt(int)
 T CUtlPriorityQueue<CEventRegister*, CDefUtlPriorityQueueLessFunc<CEventRegister*>, CUtlMemory<CEventRegister*, int> >::RemoveAtHead()
 T CUtlPriorityQueue<CPhysSaveRestoreBlockHandler::QueuedItem_t, CDefUtlPriorityQueueLessFunc<CPhysSaveRestoreBlockHandler::QueuedItem_t>, CUtlMemory<CPhysSaveRestoreBlockHandler::QueuedItem_t, int> >::Insert(CPhysSaveRestoreBlockHandler::QueuedItem_t const&)
 T CUtlPriorityQueue<CPhysSaveRestoreBlockHandler::QueuedItem_t, CDefUtlPriorityQueueLessFunc<CPhysSaveRestoreBlockHandler::QueuedItem_t>, CUtlMemory<CPhysSaveRestoreBlockHandler::QueuedItem_t, int> >::RemoveAtHead()
 T CUtlPriorityQueue<GCSDK::CJobMgr::JobSleeping_t, CDefUtlPriorityQueueLessFunc<GCSDK::CJobMgr::JobSleeping_t>, CUtlMemory<GCSDK::CJobMgr::JobSleeping_t, int> >::RemoveAtHead()
 T CUtlPriorityQueue<SoundCommand_t*, CDefUtlPriorityQueueLessFunc<SoundCommand_t*>, CUtlMemory<SoundCommand_t*, int> >::Insert(SoundCommand_t* const&)
 T CUtlPriorityQueue<SoundCommand_t*, CDefUtlPriorityQueueLessFunc<SoundCommand_t*>, CUtlMemory<SoundCommand_t*, int> >::RemoveAt(int)
 T CUtlPriorityQueue<SoundCommand_t*, CDefUtlPriorityQueueLessFunc<SoundCommand_t*>, CUtlMemory<SoundCommand_t*, int> >::RemoveAtHead()
 T CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::Find(CAI_BaseNPC* const&) const
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::FindInsertionPosition(CAI_BaseNPC* const&, unsigned short&, bool&)
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CAI_BaseNPC*, unsigned short, bool (*)(CAI_BaseNPC* const&, CAI_BaseNPC* const&), CUtlMemory<UtlRBTreeNode_t<CAI_BaseNPC*, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::Find(CBaseEntity* const&) const
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::FindInsertionPosition(CBaseEntity* const&, unsigned short&, bool&)
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::Insert(CBaseEntity* const&)
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CBaseEntity*, unsigned short, bool (*)(CBaseEntity* const&, CBaseEntity* const&), CUtlMemory<UtlRBTreeNode_t<CBaseEntity*, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::Find(CBaseFlex::FS_LocalToGlobal_t const&) const
 T CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::FindInsertionPosition(CBaseFlex::FS_LocalToGlobal_t const&, unsigned short&, bool&)
 T CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::Insert(CBaseFlex::FS_LocalToGlobal_t const&)
 T CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CBaseFlex::FS_LocalToGlobal_t, unsigned short, bool (*)(CBaseFlex::FS_LocalToGlobal_t const&, CBaseFlex::FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<CBaseFlex::FS_LocalToGlobal_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CBreakModelsPrecached::breakable_precache_t, unsigned short, bool (*)(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&), CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short> >::Find(CBreakModelsPrecached::breakable_precache_t const&) const
 T CUtlRBTree<CBreakModelsPrecached::breakable_precache_t, unsigned short, bool (*)(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&), CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short> >::FindInsertionPosition(CBreakModelsPrecached::breakable_precache_t const&, unsigned short&, bool&)
 T CUtlRBTree<CBreakModelsPrecached::breakable_precache_t, unsigned short, bool (*)(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&), CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CBreakModelsPrecached::breakable_precache_t, unsigned short, bool (*)(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&), CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CBreakModelsPrecached::breakable_precache_t, unsigned short, bool (*)(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&), CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CBreakModelsPrecached::breakable_precache_t, unsigned short, bool (*)(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&), CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CBreakModelsPrecached::breakable_precache_t, unsigned short, bool (*)(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&), CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CBreakModelsPrecached::breakable_precache_t, unsigned short, bool (*)(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&), CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CBreakModelsPrecached::breakable_precache_t, unsigned short, bool (*)(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&), CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CBreakModelsPrecached::breakable_precache_t, unsigned short, bool (*)(CBreakModelsPrecached::breakable_precache_t const&, CBreakModelsPrecached::breakable_precache_t const&), CUtlMemory<UtlRBTreeNode_t<CBreakModelsPrecached::breakable_precache_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::FindInsertionPosition(CChoreoEvent* const&, unsigned short&, bool&)
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::Insert(CChoreoEvent* const&)
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::FindInsertionPosition(CChoreoScene::ActiveList const&, int&, bool&)
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::FirstInorder() const
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::NewNode()
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::RemoveAll()
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::RotateRight(int)
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::FindInsertionPosition(CHLTVGameEvent const&, unsigned short&, bool&)
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CHLTVGameEvent, unsigned short, bool (*)(CHLTVGameEvent const&, CHLTVGameEvent const&), CUtlMemory<UtlRBTreeNode_t<CHLTVGameEvent, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::Find(CHandle<CBaseEntity> const&) const
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::FindInsertionPosition(CHandle<CBaseEntity> const&, unsigned short&, bool&)
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CHandle<CBaseEntity>, unsigned short, bool (*)(CHandle<CBaseEntity> const&, CHandle<CBaseEntity> const&), CUtlMemory<UtlRBTreeNode_t<CHandle<CBaseEntity>, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CKeyBindingsMgr::KBContext_t, int, bool (*)(CKeyBindingsMgr::KBContext_t const&, CKeyBindingsMgr::KBContext_t const&), CUtlMemory<UtlRBTreeNode_t<CKeyBindingsMgr::KBContext_t, int>, int> >::Find(CKeyBindingsMgr::KBContext_t const&) const
 T CUtlRBTree<CKeyBindingsMgr::KBContext_t, int, bool (*)(CKeyBindingsMgr::KBContext_t const&, CKeyBindingsMgr::KBContext_t const&), CUtlMemory<UtlRBTreeNode_t<CKeyBindingsMgr::KBContext_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CKeyBindingsMgr::KBContext_t, int, bool (*)(CKeyBindingsMgr::KBContext_t const&, CKeyBindingsMgr::KBContext_t const&), CUtlMemory<UtlRBTreeNode_t<CKeyBindingsMgr::KBContext_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::FindInsertionPosition(CSceneEntity::SpeakEventSound_t const&, unsigned short&, bool&)
 T CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CSceneEntity::SpeakEventSound_t, unsigned short, bool (*)(CSceneEntity::SpeakEventSound_t const&, CSceneEntity::SpeakEventSound_t const&), CUtlMemory<UtlRBTreeNode_t<CSceneEntity::SpeakEventSound_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::Find(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&) const
 T CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short, bool (*)(CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&, CUtlCachedFileData<CModelSoundsCache>::ElementType_t const&), CUtlMemory<UtlRBTreeNode_t<CUtlCachedFileData<CModelSoundsCache>::ElementType_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char>, unsigned char> >::Find(CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t const&) const
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char>, unsigned char> >::FindInsertionPosition(CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t const&, unsigned char&, bool&)
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char>, unsigned char> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char>, unsigned char> >::InsertRebalance(unsigned char)
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char>, unsigned char> >::IsLeftChild(unsigned char) const
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char>, unsigned char> >::IsRightChild(unsigned char) const
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char>, unsigned char> >::NewNode()
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char>, unsigned char> >::NextInorder(unsigned char) const
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char>, unsigned char> >::RemoveAll()
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char>, unsigned char> >::RemoveRebalance(unsigned char)
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char>, unsigned char> >::RotateLeft(unsigned char)
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char>, unsigned char> >::RotateRight(unsigned char)
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char>, unsigned char> >::Unlink(unsigned char)
 T CUtlRBTree<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char, CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, AI_EnemyInfo_t*, unsigned char>::Node_t, unsigned char>, unsigned char> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<CBaseEntity*, int, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<CBaseEntity*, int, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short, CUtlMap<CBaseEntity*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CBaseEntity*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, CBaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, CLagCompensationManager::EntityLagData*, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short, CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CHandle<CBaseEntity>, EntityBeamHistory_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, GCSDK::CGCClientSharedObjectCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, CGlobalEventLine*, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlSymbol, ConceptInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, AchievementAward_t*, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, AchievementAward_t*, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int, CUtlMap<char const*, AchievementAward_t*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, AchievementAward_t*, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, BasicGameStatsRecord_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int, CUtlMap<char const*, CActivityRemapCache, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int, CUtlMap<char const*, CActivityRemapCache, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int, CUtlMap<char const*, CActivityRemapCache, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int, CUtlMap<char const*, CActivityRemapCache, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int, CUtlMap<char const*, CActivityRemapCache, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CBaseEntity*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBaseEntity*, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CBitVec<64>, int>::Node_t, int, CUtlMap<char const*, CBitVec<64>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBitVec<64>, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, CBitVec<64>, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CBitVec<64>, int>::Node_t, int, CUtlMap<char const*, CBitVec<64>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBitVec<64>, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CBitVec<64>, int>::Node_t, int, CUtlMap<char const*, CBitVec<64>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBitVec<64>, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CBitVec<64>, int>::Node_t, int, CUtlMap<char const*, CBitVec<64>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBitVec<64>, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CBitVec<64>, int>::Node_t, int, CUtlMap<char const*, CBitVec<64>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBitVec<64>, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CBitVec<64>, int>::Node_t, int, CUtlMap<char const*, CBitVec<64>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CBitVec<64>, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int, CUtlMap<char const*, CEconItemSetDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int, CUtlMap<char const*, CEconItemSetDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int, CUtlMap<char const*, CEconItemSetDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int, CUtlMap<char const*, CEconItemSetDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int, CUtlMap<char const*, CEconItemSetDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int, CUtlMap<char const*, CEconItemSetDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int, CUtlMap<char const*, CEconItemSetDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int, CUtlMap<char const*, CEconItemSetDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int, CUtlMap<char const*, CEconItemSetDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int, CUtlMap<char const*, CEconItemSetDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconItemSetDefinition, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int, CUtlMap<char const*, CEconLootListDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, CEconLootListDefinition, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int, CUtlMap<char const*, CEconLootListDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CEconLootListDefinition, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int, CUtlMap<char const*, CEconLootListDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int, CUtlMap<char const*, CEconLootListDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int, CUtlMap<char const*, CEconLootListDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int, CUtlMap<char const*, CEconLootListDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int, CUtlMap<char const*, CEconLootListDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int, CUtlMap<char const*, CEconLootListDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int, CUtlMap<char const*, CEconLootListDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int, CUtlMap<char const*, CEconLootListDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CEconLootListDefinition, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CGenericClassmap<CAI_BehaviorBase>::classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int>, int> >::RemoveRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int>, int> >::Unlink(int)
 T CUtlRBTree<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int, CUtlMap<char const*, CInstancedResponseSystem*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CInstancedResponseSystem*, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int, CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int, CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int, CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int, CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int, CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int, CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int, CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int, CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int, CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int, CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int>, int> >::RemoveRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int, CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int, CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int, CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int>, int> >::Unlink(int)
 T CUtlRBTree<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int, CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNPCEventResponseSystem::storedevent_t, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int>::Node_t, int, CUtlMap<char const*, CNavArea*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, CNavArea*, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int>::Node_t, int, CUtlMap<char const*, CNavArea*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, CNavArea*, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int>::Node_t, int, CUtlMap<char const*, CNavArea*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int>::Node_t, int, CUtlMap<char const*, CNavArea*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CNavArea*, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int>::Node_t, int, CUtlMap<char const*, CNavArea*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int>::Node_t, int, CUtlMap<char const*, CNavArea*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int>::Node_t, int, CUtlMap<char const*, CNavArea*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int>::Node_t, int, CUtlMap<char const*, CNavArea*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int>::Node_t, int, CUtlMap<char const*, CNavArea*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int>::Node_t, int, CUtlMap<char const*, CNavArea*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int>::Node_t, int, CUtlMap<char const*, CNavArea*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int>::Node_t, int, CUtlMap<char const*, CNavArea*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CNavArea*, int>::Node_t, int, CUtlMap<char const*, CNavArea*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CNavArea*, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, CUserMessage*, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, CUserMessage*, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CUserMessage*, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int, CUtlMap<char const*, CUtlConstStringBase<char>, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlConstStringBase<char>, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, ConceptHistory_t, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, ConceptHistory_t, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, ConceptHistory_t, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int, CUtlMap<char const*, ConceptHistory_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ConceptHistory_t, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, EventGroup, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, EventGroup, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, EventGroup, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IEntityFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IEntityFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, KeyValues*, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, KeyValues*, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, KeyValues*, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short>, short> >::Find(CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short>, short> >::FindInsertionPosition(CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t const&, short&, bool&)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short>, short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short>, short> >::InsertRebalance(short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short>, short> >::IsLeftChild(short) const
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short>, short> >::IsRightChild(short) const
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short>, short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short>, short> >::NextInorder(short) const
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short>, short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short>, short> >::RotateLeft(short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short>, short> >::RotateRight(short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short, CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CResponseSystem::Enumeration, short>::Node_t, short>, short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short>, short> >::Find(CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short>, short> >::FindInsertionPosition(CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t const&, short&, bool&)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short>, short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short>, short> >::Insert(CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short>, short> >::InsertRebalance(short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short>, short> >::IsLeftChild(short) const
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short>, short> >::IsRightChild(short) const
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short>, short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short>, short> >::NextInorder(short) const
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short>, short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short>, short> >::RotateLeft(short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short>, short> >::RotateRight(short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short, CUtlMap<char const*, ResponseRules::Criteria, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::Criteria, short>::Node_t, short>, short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::CriteriaSet::CritEntry_t const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short>, short> >::Find(CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short>, short> >::FindInsertionPosition(CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t const&, short&, bool&)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short>, short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short>, short> >::Insert(CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short>, short> >::InsertRebalance(short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short>, short> >::IsLeftChild(short) const
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short>, short> >::IsRightChild(short) const
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short>, short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short>, short> >::NextInorder(short) const
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short>, short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short>, short> >::RotateLeft(short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short>, short> >::RotateRight(short)
 T CUtlRBTree<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short, CUtlMap<char const*, ResponseRules::ResponseGroup, short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, ResponseRules::ResponseGroup, short>::Node_t, short>, short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, codecontrolledbodygroupdata_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, int, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, int, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, int, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<char const*, int, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<char const*, int, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<int, CAIHintVector, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<int, CAIHintVector, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<int, CAIHintVector, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short, CUtlMap<int, CAIHintVector, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CAIHintVector, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int>, int> >::Find(CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int>, int> >::Insert(CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int, CUtlMap<int, CEconCraftingRecipeDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconCraftingRecipeDefinition*, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int>, int> >::Find(CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int>, int> >::Insert(CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int, CUtlMap<int, CEconItemAttributeDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemAttributeDefinition, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int, CUtlMap<int, CEconItemDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int>, int> >::Find(CUtlMap<int, CEconItemDefinition*, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int, CUtlMap<int, CEconItemDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<int, CEconItemDefinition*, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int, CUtlMap<int, CEconItemDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int, CUtlMap<int, CEconItemDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int>, int> >::Insert(CUtlMap<int, CEconItemDefinition*, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int, CUtlMap<int, CEconItemDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int, CUtlMap<int, CEconItemDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int, CUtlMap<int, CEconItemDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int, CUtlMap<int, CEconItemDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int, CUtlMap<int, CEconItemDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int, CUtlMap<int, CEconItemDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int, CUtlMap<int, CEconItemDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int>, int> >::RemoveRebalance(int)
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int, CUtlMap<int, CEconItemDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int, CUtlMap<int, CEconItemDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int, CUtlMap<int, CEconItemDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int>, int> >::Unlink(int)
 T CUtlRBTree<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int, CUtlMap<int, CEconItemDefinition*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemDefinition*, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int>, int> >::Find(CUtlMap<int, CEconItemQualityDefinition, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<int, CEconItemQualityDefinition, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int>, int> >::Insert(CUtlMap<int, CEconItemQualityDefinition, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int, CUtlMap<int, CEconItemQualityDefinition, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CEconItemQualityDefinition, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObject::SharedObjectInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short, CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, GCSDK::CSharedObjectTypeCache*, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, attachedparticlesystem_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, attachedparticlesystem_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, attachedparticlesystem_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, attachedparticlesystem_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, attachedparticlesystem_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, attachedparticlesystem_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, attachedparticlesystem_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, attachedparticlesystem_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, attachedparticlesystem_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short, CUtlMap<int, attachedparticlesystem_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, attachedparticlesystem_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<int, char const*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<int, int, unsigned short>::Node_t, unsigned short, CUtlMap<int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<int, int, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<int, int, unsigned short>::Node_t, unsigned short, CUtlMap<int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<int, int, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<int, int, unsigned short>::Node_t, unsigned short, CUtlMap<int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<int, int, unsigned short>::Node_t, unsigned short, CUtlMap<int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<int, int, unsigned short>::Node_t, unsigned short, CUtlMap<int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<int, int, unsigned short>::Node_t, unsigned short, CUtlMap<int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<int, int, unsigned short>::Node_t, unsigned short, CUtlMap<int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<int, int, unsigned short>::Node_t, unsigned short, CUtlMap<int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<int, int, unsigned short>::Node_t, unsigned short, CUtlMap<int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<int, int, unsigned short>::Node_t, unsigned short, CUtlMap<int, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char>, char> >::Find(CUtlMap<string_t, CSimpleSimTimer, char>::Node_t const&) const
 T CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char>, char> >::FindInsertionPosition(CUtlMap<string_t, CSimpleSimTimer, char>::Node_t const&, char&, bool&)
 T CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char>, char> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char>, char> >::InsertRebalance(char)
 T CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char>, char> >::IsLeftChild(char) const
 T CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char>, char> >::IsRightChild(char) const
 T CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char>, char> >::NewNode()
 T CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char>, char> >::NextInorder(char) const
 T CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char>, char> >::RemoveAll()
 T CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char>, char> >::RotateLeft(char)
 T CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char>, char> >::RotateRight(char)
 T CUtlRBTree<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char, CUtlMap<string_t, CSimpleSimTimer, char>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<string_t, CSimpleSimTimer, char>::Node_t, char>, char> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short, CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<studiohdr_t const*, StudioHdrToActivityMapEntry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, AchievementAward_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int, CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int>, int> >::Find(CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int, CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int, CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int, CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int, CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int, CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int, CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int, CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int, CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int, CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, GCSDK::JobStatsBucket_t, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, ResponseRules::Rule*, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<unsigned int, char const*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<unsigned int, char const*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, char const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, char const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<unsigned int, float, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<unsigned int, float, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, float, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, float, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, int, int>::Node_t, int, CUtlMap<unsigned int, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int>::Node_t, int>, int> >::Find(CUtlMap<unsigned int, int, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<unsigned int, int, int>::Node_t, int, CUtlMap<unsigned int, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<unsigned int, int, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<unsigned int, int, int>::Node_t, int, CUtlMap<unsigned int, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int>::Node_t, int>, int> >::Insert(CUtlMap<unsigned int, int, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned int, int, int>::Node_t, int, CUtlMap<unsigned int, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<unsigned int, int, int>::Node_t, int, CUtlMap<unsigned int, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<unsigned int, int, int>::Node_t, int, CUtlMap<unsigned int, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<unsigned int, int, int>::Node_t, int, CUtlMap<unsigned int, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, int, int>::Node_t, int, CUtlMap<unsigned int, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<unsigned int, int, int>::Node_t, int, CUtlMap<unsigned int, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<unsigned int, int, int>::Node_t, int, CUtlMap<unsigned int, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<unsigned int, int, int>::Node_t, int, CUtlMap<unsigned int, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, int, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*), unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(ResponseRules::Rule&), unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short, CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, void (ResponseRules::CResponseSystem::*)(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&), unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int, CUtlMap<unsigned long long, GCSDK::CJob*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int>, int> >::Find(CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int, CUtlMap<unsigned long long, GCSDK::CJob*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int, CUtlMap<unsigned long long, GCSDK::CJob*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int>, int> >::Insert(CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int, CUtlMap<unsigned long long, GCSDK::CJob*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int, CUtlMap<unsigned long long, GCSDK::CJob*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int, CUtlMap<unsigned long long, GCSDK::CJob*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int, CUtlMap<unsigned long long, GCSDK::CJob*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int, CUtlMap<unsigned long long, GCSDK::CJob*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int, CUtlMap<unsigned long long, GCSDK::CJob*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int>, int> >::RemoveRebalance(int)
 T CUtlRBTree<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int, CUtlMap<unsigned long long, GCSDK::CJob*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int, CUtlMap<unsigned long long, GCSDK::CJob*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int, CUtlMap<unsigned long long, GCSDK::CJob*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int>, int> >::Unlink(int)
 T CUtlRBTree<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int, CUtlMap<unsigned long long, GCSDK::CJob*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, GCSDK::CJob*, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<unsigned long long, int, int>::Node_t, int, CUtlMap<unsigned long long, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, int, int>::Node_t, int>, int> >::Find(CUtlMap<unsigned long long, int, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<unsigned long long, int, int>::Node_t, int, CUtlMap<unsigned long long, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, int, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<unsigned long long, int, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<unsigned long long, int, int>::Node_t, int, CUtlMap<unsigned long long, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, int, int>::Node_t, int>, int> >::Insert(CUtlMap<unsigned long long, int, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<unsigned long long, int, int>::Node_t, int, CUtlMap<unsigned long long, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, int, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<unsigned long long, int, int>::Node_t, int, CUtlMap<unsigned long long, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, int, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<unsigned long long, int, int>::Node_t, int, CUtlMap<unsigned long long, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, int, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<unsigned long long, int, int>::Node_t, int, CUtlMap<unsigned long long, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, int, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<unsigned long long, int, int>::Node_t, int, CUtlMap<unsigned long long, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, int, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<unsigned long long, int, int>::Node_t, int, CUtlMap<unsigned long long, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, int, int>::Node_t, int>, int> >::RemoveRebalance(int)
 T CUtlRBTree<CUtlMap<unsigned long long, int, int>::Node_t, int, CUtlMap<unsigned long long, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, int, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<unsigned long long, int, int>::Node_t, int, CUtlMap<unsigned long long, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, int, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<unsigned long long, int, int>::Node_t, int, CUtlMap<unsigned long long, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, int, int>::Node_t, int>, int> >::Unlink(int)
 T CUtlRBTree<CUtlMap<unsigned long long, int, int>::Node_t, int, CUtlMap<unsigned long long, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned long long, int, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<vcollide_t*, CStaticCollisionPolyhedronCache::StaticPropPolyhedronCacheInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int>, int> >::Find(CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int>, int> >::Insert(CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int>, int> >::RemoveRebalance(int)
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int>, int> >::Unlink(int)
 T CUtlRBTree<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int, CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, CThreadSafeMultiMemoryPool::RawAllocation_t, int>::Node_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::Find(CUtlString const&) const
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlString const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::Insert(CUtlString const&)
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlString, unsigned short, bool (*)(CUtlString const&, CUtlString const&), CUtlMemory<UtlRBTreeNode_t<CUtlString, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Find(CUtlSymbolTable::CStringPoolIndex const&) const
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlSymbolTable::CStringPoolIndex const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::Find(CUtlSymbolTableLargeBaseTreeEntry_t* const&) const
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::FindInsertionPosition(CUtlSymbolTableLargeBaseTreeEntry_t* const&, int&, bool&)
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::NewNode()
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t*, int, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t*, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<GCSDK::JobType_t const*, unsigned short, bool (*)(GCSDK::JobType_t const* const&, GCSDK::JobType_t const* const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::JobType_t const*, unsigned short>, unsigned short> >::Find(GCSDK::JobType_t const* const&) const
 T CUtlRBTree<GCSDK::JobType_t const*, unsigned short, bool (*)(GCSDK::JobType_t const* const&, GCSDK::JobType_t const* const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::JobType_t const*, unsigned short>, unsigned short> >::FindInsertionPosition(GCSDK::JobType_t const* const&, unsigned short&, bool&)
 T CUtlRBTree<GCSDK::JobType_t const*, unsigned short, bool (*)(GCSDK::JobType_t const* const&, GCSDK::JobType_t const* const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::JobType_t const*, unsigned short>, unsigned short> >::Insert(GCSDK::JobType_t const* const&)
 T CUtlRBTree<GCSDK::JobType_t const*, unsigned short, bool (*)(GCSDK::JobType_t const* const&, GCSDK::JobType_t const* const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::JobType_t const*, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<GCSDK::JobType_t const*, unsigned short, bool (*)(GCSDK::JobType_t const* const&, GCSDK::JobType_t const* const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::JobType_t const*, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<GCSDK::JobType_t const*, unsigned short, bool (*)(GCSDK::JobType_t const* const&, GCSDK::JobType_t const* const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::JobType_t const*, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<GCSDK::JobType_t const*, unsigned short, bool (*)(GCSDK::JobType_t const* const&, GCSDK::JobType_t const* const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::JobType_t const*, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<GCSDK::JobType_t const*, unsigned short, bool (*)(GCSDK::JobType_t const* const&, GCSDK::JobType_t const* const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::JobType_t const*, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<GCSDK::JobType_t const*, unsigned short, bool (*)(GCSDK::JobType_t const* const&, GCSDK::JobType_t const* const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::JobType_t const*, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<GCSDK::JobType_t const*, unsigned short, bool (*)(GCSDK::JobType_t const* const&, GCSDK::JobType_t const* const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::JobType_t const*, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<GCSDK::JobType_t const*, unsigned short, bool (*)(GCSDK::JobType_t const* const&, GCSDK::JobType_t const* const&), CUtlMemory<UtlRBTreeNode_t<GCSDK::JobType_t const*, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::Find(ResponseRules::CriteriaSet::CritEntry_t const&) const
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::FindInsertionPosition(ResponseRules::CriteriaSet::CritEntry_t const&, short&, bool&)
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::FirstInorder() const
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::Insert(ResponseRules::CriteriaSet::CritEntry_t const&)
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::InsertRebalance(short)
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::IsLeftChild(short) const
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::IsRightChild(short) const
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::NewNode()
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::NextInorder(short) const
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::RemoveAll()
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::RemoveRebalance(short)
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::RotateLeft(short)
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::RotateRight(short)
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::Unlink(short)
 T CUtlRBTree<ResponseRules::CriteriaSet::CritEntry_t, short, bool (*)(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&), CUtlMemory<UtlRBTreeNode_t<ResponseRules::CriteriaSet::CritEntry_t, short>, short> >::~CUtlRBTree()
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::Find(ThinkSync const&) const
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::FindInsertionPosition(ThinkSync const&, unsigned short&, bool&)
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::Insert(ThinkSync const&)
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::Find(VisibilityCacheEntry_t const&) const
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::FindInsertionPosition(VisibilityCacheEntry_t const&, unsigned short&, bool&)
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::Insert(VisibilityCacheEntry_t const&)
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<VisibilityCacheEntry_t, unsigned short, CVisibilityCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<VisibilityCacheEntry_t, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::FindInsertionPosition(char const* const&, int&, bool&)
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::FirstInorder() const
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::Insert(char const* const&)
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::NewNode()
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::NextInorder(int) const
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::RemoveAll()
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::RotateLeft(int)
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::RotateRight(int)
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::Find(char const* const&) const
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::FindInsertionPosition(char const* const&, unsigned short&, bool&)
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::Insert(char const* const&)
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::Find(unsigned int const&) const
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::FindInsertionPosition(unsigned int const&, unsigned short&, bool&)
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::Insert(unsigned int const&)
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<unsigned int, unsigned short, bool (*)(unsigned int const&, unsigned int const&), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::FindInsertionPosition(vgui::ListPanel::IndexItem_t const&, int&, bool&)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::Insert(vgui::ListPanel::IndexItem_t const&)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::LastInorder() const
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::NewNode()
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::RemoveAll()
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::RemoveRebalance(int)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::Unlink(int)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::~CUtlRBTree()
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::Find(void* const&) const
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::FindInsertionPosition(void* const&, unsigned short&, bool&)
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlSortVector<CBaseEntity*, CSortedEntityList::CEntityReportLess, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> > >::FindLessOrEqual(CBaseEntity* const&) const
 T CUtlSortVector<CBaseEntity*, CSortedEntityList::CEntityReportLess, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> > >::Insert(CBaseEntity* const&)
 T CUtlSortVector<CDmxAttribute*, CDmxAttributeLess, CUtlVector<CDmxAttribute*, CUtlMemory<CDmxAttribute*, int> > >::CompareHelper(CDmxAttribute* const*, CDmxAttribute* const*)
 T CUtlSortVector<CDmxAttribute*, CDmxAttributeLess, CUtlVector<CDmxAttribute*, CUtlMemory<CDmxAttribute*, int> > >::Find(CDmxAttribute* const&) const
 T CUtlSortVector<CEconItemView, CInventoryListLess, CUtlVector<CEconItemView, CUtlMemory<CEconItemView, int> > >::CompareHelper(CEconItemView const*, CEconItemView const*)
 T CUtlSortVector<CEconItemView, CInventoryListLess, CUtlVector<CEconItemView, CUtlMemory<CEconItemView, int> > >::FindLessOrEqual(CEconItemView const&) const
 T CUtlSortVector<CEconItemView, CInventoryListLess, CUtlVector<CEconItemView, CUtlMemory<CEconItemView, int> > >::Insert(CEconItemView const&)
 T CUtlSortVector<CItem_Nugget*, CNuggetDirector::CNuggetGroupSort, CUtlVector<CItem_Nugget*, CUtlMemory<CItem_Nugget*, int> > >::Find(CItem_Nugget* const&) const
 T CUtlSortVector<CItem_Nugget*, CNuggetDirector::CNuggetGroupSort, CUtlVector<CItem_Nugget*, CUtlMemory<CItem_Nugget*, int> > >::FindLessOrEqual(CItem_Nugget* const&) const
 T CUtlSortVector<CItem_Nugget*, CNuggetDirector::CNuggetGroupSort, CUtlVector<CItem_Nugget*, CUtlMemory<CItem_Nugget*, int> > >::Insert(CItem_Nugget* const&)
 T CUtlSortVector<CItem_Nugget*, CNuggetDirector::CNuggetGroupSort, CUtlVector<CItem_Nugget*, CUtlMemory<CItem_Nugget*, int> > >::Remove(CItem_Nugget* const&)
 T CUtlSortVector<CSortedCacheFile, CSortedCacheFile, CUtlVector<CSortedCacheFile, CUtlMemory<CSortedCacheFile, int> > >::CompareHelper(CSortedCacheFile const*, CSortedCacheFile const*)
 T CUtlSortVector<CaptionLookup_t, CCaptionLookupLess, CUtlVector<CaptionLookup_t, CUtlMemory<CaptionLookup_t, int> > >::CompareHelper(CaptionLookup_t const*, CaptionLookup_t const*)
 T CUtlSortVector<CaptionLookup_t, CCaptionLookupLess, CUtlVector<CaptionLookup_t, CUtlMemory<CaptionLookup_t, int> > >::Find(CaptionLookup_t const&) const
 T CUtlSortVector<FizzlerVortexObjectInfo_t, CFizzlerVortexObjectInfoLess, CUtlVector<FizzlerVortexObjectInfo_t, CUtlMemory<FizzlerVortexObjectInfo_t, int> > >::CompareHelper(FizzlerVortexObjectInfo_t const*, FizzlerVortexObjectInfo_t const*)
 T CUtlSortVector<LaserVictimInfo_t, CLaserVictimLess, CUtlVector<LaserVictimInfo_t, CUtlMemory<LaserVictimInfo_t, int> > >::CompareHelper(LaserVictimInfo_t const*, LaserVictimInfo_t const*)
 T CUtlSortVector<int, CModelSoundsCacheListLess, CUtlVector<int, CUtlMemory<int, int> > >::Find(int const&) const
 T CUtlSortVector<int, CModelSoundsCacheListLess, CUtlVector<int, CUtlMemory<int, int> > >::FindLessOrEqual(int const&) const
 T CUtlSortVector<int, CModelSoundsCacheListLess, CUtlVector<int, CUtlMemory<int, int> > >::Insert(int const&)
 T CUtlStack<bool, CUtlMemory<bool, int> >::~CUtlStack()
 T CUtlString const& CDmxElement::GetValue<CUtlString>(char const*) const
 T CUtlString::CUtlString()
 T CUtlString::CUtlString(CUtlString const&)
 T CUtlString::CUtlString(char const*)
 T CUtlString::Format(char const*, ...)
 T CUtlString::Get()
 T CUtlString::Get() const
 T CUtlString::Length() const
 T CUtlString::Set(char const*)
 T CUtlString::SetLength(int)
 T CUtlString::operator char const*() const
 T CUtlString::operator=(CUtlString const&)
 T CUtlString::operator=(char const*)
 T CUtlString::~CUtlString()
 T CUtlStringList::~CUtlStringList()
 T CUtlStringMap<CParticleSystemDefinition*>::operator[](char const*)
 T CUtlStringMap<CSheet*>::PurgeAndDeleteElements()
 T CUtlSymbol::CUtlSymbol(char const*)
 T CUtlSymbol::Initialize()
 T CUtlSymbol::String() const
 T CUtlSymbolDataOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlSymbolDataOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlSymbolDataOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlSymbolDataOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlSymbolTable::AddString(char const*)
 T CUtlSymbolTable::CLess::operator()(CUtlSymbolTable::CStringPoolIndex const&, CUtlSymbolTable::CStringPoolIndex const&) const
 T CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
 T CUtlSymbolTable::Find(char const*) const
 T CUtlSymbolTable::RemoveAll()
 T CUtlSymbolTable::String(CUtlSymbol) const
 T CUtlSymbolTable::~CUtlSymbolTable()
 T CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>::AddString(char const*)
 T CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>::Find(char const*) const
 T CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>::~CUtlSymbolTableLargeBase()
 T CUtlSymbolTableLargeBase<CThreadsafeTree<false>, false, 2048ul>::AddString(char const*)
 T CUtlSymbolTableLargeBase<CThreadsafeTree<false>, false, 2048ul>::Find(char const*) const
 T CUtlSymbolTableLargeBase<CThreadsafeTree<false>, false, 2048ul>::~CUtlSymbolTableLargeBase()
 T CUtlSymbolTableMT::String(CUtlSymbol) const
 T CUtlTSHash<CUtlSymbolTableLargeBaseTreeEntry_t*, 2048, CUtlSymbolTableLargeBaseTreeEntry_t*, CCThreadsafeTreeHashMethod<2048, CUtlSymbolTableLargeBaseTreeEntry_t*, false>, 0>::Find(CUtlSymbolTableLargeBaseTreeEntry_t*)
 T CUtlTSHash<CUtlSymbolTableLargeBaseTreeEntry_t*, 2048, CUtlSymbolTableLargeBaseTreeEntry_t*, CCThreadsafeTreeHashMethod<2048, CUtlSymbolTableLargeBaseTreeEntry_t*, false>, 0>::Insert(CUtlSymbolTableLargeBaseTreeEntry_t*, CUtlSymbolTableLargeBaseTreeEntry_t* const&, bool*)
 T CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >::~CUtlVector()
 T CUtlVector<AIRebalanceInfo_t, CUtlMemory<AIRebalanceInfo_t, int> >::~CUtlVector()
 T CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >::~CUtlVector()
 T CUtlVector<AI_FollowGroup_t*, CUtlMemory<AI_FollowGroup_t*, int> >::~CUtlVector()
 T CUtlVector<AI_MoveSuggestion_t, CUtlMemory<AI_MoveSuggestion_t, int> >::AddVectorToTail(CUtlVector<AI_MoveSuggestion_t, CUtlMemory<AI_MoveSuggestion_t, int> > const&)
 T CUtlVector<AI_MoveSuggestion_t, CUtlMemory<AI_MoveSuggestion_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<AI_MoveSuggestion_t, CUtlMemory<AI_MoveSuggestion_t, int> >::~CUtlVector()
 T CUtlVector<AI_NamespaceAddInfo_t, CUtlMemory<AI_NamespaceAddInfo_t, int> >::~CUtlVector()
 T CUtlVector<AI_NearNode_t, CUtlMemory<AI_NearNode_t, int> >::~CUtlVector()
 T CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >::InsertBefore(int, AI_Waypoint_t const&)
 T CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >::~CUtlVector()
 T CUtlVector<AccumulatedImpactSound, CUtlMemoryFixedGrowable<AccumulatedImpactSound, 32ul, int> >::InsertBefore(int)
 T CUtlVector<Activity, CUtlMemory<Activity, int> >::~CUtlVector()
 T CUtlVector<AppSystemInfo_t, CUtlMemory<AppSystemInfo_t, int> >::~CUtlVector()
 T CUtlVector<AsyncCaption_t, CUtlMemory<AsyncCaption_t, int> >::InsertBefore(int)
 T CUtlVector<AsyncCaption_t, CUtlMemory<AsyncCaption_t, int> >::~CUtlVector()
 T CUtlVector<BlobData_t, CUtlMemory<BlobData_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<BlobData_t, CUtlMemory<BlobData_t, int> >::Purge()
 T CUtlVector<BlobData_t, CUtlMemory<BlobData_t, int> >::Sort(int (*)(BlobData_t const*, BlobData_t const*))
 T CUtlVector<BlobData_t, CUtlMemory<BlobData_t, int> >::~CUtlVector()
 T CUtlVector<BlobInterpolationData_t, CUtlMemory<BlobInterpolationData_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<BlobInterpolationData_t, CUtlMemory<BlobInterpolationData_t, int> >::Purge()
 T CUtlVector<BlobInterpolationData_t, CUtlMemory<BlobInterpolationData_t, int> >::RemoveMultipleFromHead(int)
 T CUtlVector<BlobInterpolationData_t, CUtlMemory<BlobInterpolationData_t, int> >::SetCount(int)
 T CUtlVector<BlobTeleportationHistory_t, CUtlMemory<BlobTeleportationHistory_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<BlobTeleportationHistory_t, CUtlMemory<BlobTeleportationHistory_t, int> >::InsertMultipleBefore(int, int, BlobTeleportationHistory_t const*)
 T CUtlVector<BlobTeleportationHistory_t, CUtlMemory<BlobTeleportationHistory_t, int> >::operator=(CUtlVector<BlobTeleportationHistory_t, CUtlMemory<BlobTeleportationHistory_t, int> > const&)
 T CUtlVector<BlobTeleportationHistory_t, CUtlMemory<BlobTeleportationHistory_t, int> >::~CUtlVector()
 T CUtlVector<BlobsInAirUpdate_SIMD::BlobAirUpdateData_t, CUtlMemoryAligned<BlobsInAirUpdate_SIMD::BlobAirUpdateData_t, 16> >::InsertMultipleBefore(int, int)
 T CUtlVector<BlobsInBeamUpdate_SIMD::BlobBeamUpdateData_t, CUtlMemoryAligned<BlobsInBeamUpdate_SIMD::BlobBeamUpdateData_t, 16> >::InsertMultipleBefore(int, int)
 T CUtlVector<BlobsInStreakUpdate_SIMD::BlobStreakUpdateData_t, CUtlMemoryAligned<BlobsInStreakUpdate_SIMD::BlobStreakUpdateData_t, 16> >::InsertMultipleBefore(int, int)
 T CUtlVector<BrushContact, CUtlMemory<BrushContact, int> >::~CUtlVector()
 T CUtlVector<CAIHintVector*, CUtlMemory<CAIHintVector*, int> >::~CUtlVector()
 T CUtlVector<CAI_BaseActor*, CUtlMemory<CAI_BaseActor*, int> >::~CUtlVector()
 T CUtlVector<CAI_BaseNPC*, CUtlMemory<CAI_BaseNPC*, int> >::~CUtlVector()
 T CUtlVector<CAI_BehaviorBase*, CUtlMemory<CAI_BehaviorBase*, int> >::~CUtlVector()
 T CUtlVector<CAI_BlendedMotor::AI_Movementscript_t, CUtlMemory<CAI_BlendedMotor::AI_Movementscript_t, int> >::~CUtlVector()
 T CUtlVector<CAI_Hint*, CUtlMemory<CAI_Hint*, int> >::~CUtlVector()
 T CUtlVector<CAI_InterestTarget_t*, CUtlMemory<CAI_InterestTarget_t*, int> >::~CUtlVector()
 T CUtlVector<CAI_InterestTarget_t, CUtlMemory<CAI_InterestTarget_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CAI_InterestTarget_t, CUtlMemory<CAI_InterestTarget_t, int> >::~CUtlVector()
 T CUtlVector<CAI_Link*, CUtlMemory<CAI_Link*, int> >::~CUtlVector()
 T CUtlVector<CAI_PlaneSolver::CircleObstacles_t, CUtlMemory<CAI_PlaneSolver::CircleObstacles_t, int> >::~CUtlVector()
 T CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >::~CUtlVector()
 T CUtlVector<CActivityRemap, CUtlMemory<CActivityRemap, int> >::~CUtlVector()
 T CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >::InsertBefore(int)
 T CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >::~CUtlVector()
 T CUtlVector<CAssaultPoint*, CUtlMemory<CAssaultPoint*, int> >::~CUtlVector()
 T CUtlVector<CAttributeManager::cached_attribute_float_t, CUtlMemory<CAttributeManager::cached_attribute_float_t, int> >::~CUtlVector()
 T CUtlVector<CBaseCombatWeapon*, CUtlMemory<CBaseCombatWeapon*, int> >::~CUtlVector()
 T CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >::~CUtlVector()
 T CUtlVector<CBaseEntity*, CUtlMemoryFixedGrowable<CBaseEntity*, 32ul, int> >::InsertBefore(int, CBaseEntity* const&)
 T CUtlVector<CBaseEntity*, CUtlMemoryFixedGrowable<CBaseEntity*, 32ul, int> >::~CUtlVector()
 T CUtlVector<CBaseHandle, CUtlMemory<CBaseHandle, int> >::~CUtlVector()
 T CUtlVector<CBasePlayer*, CUtlMemory<CBasePlayer*, int> >::~CUtlVector()
 T CUtlVector<CBaseProjector*, CUtlMemory<CBaseProjector*, int> >::~CUtlVector()
 T CUtlVector<CBaseServerVehicle::entryanim_t, CUtlMemory<CBaseServerVehicle::entryanim_t, int> >::~CUtlVector()
 T CUtlVector<CBaseServerVehicle::exitanim_t, CUtlMemory<CBaseServerVehicle::exitanim_t, int> >::~CUtlVector()
 T CUtlVector<CChangedPaintBoundsCache::Bounds_t, CUtlMemoryFixedGrowable<CChangedPaintBoundsCache::Bounds_t, 16ul, int> >::InsertBefore(int)
 T CUtlVector<CChangedPaintBoundsCache::Bounds_t, CUtlMemoryFixedGrowable<CChangedPaintBoundsCache::Bounds_t, 16ul, int> >::~CUtlVector()
 T CUtlVector<CChoreoActor*, CUtlMemory<CChoreoActor*, int> >::~CUtlVector()
 T CUtlVector<CChoreoChannel*, CUtlMemory<CChoreoChannel*, int> >::~CUtlVector()
 T CUtlVector<CChoreoEvent*, CUtlMemory<CChoreoEvent*, int> >::~CUtlVector()
 T CUtlVector<CChoreoScene*, CUtlMemory<CChoreoScene*, int> >::~CUtlVector()
 T CUtlVector<CCommandContext, CUtlMemory<CCommandContext, int> >::~CUtlVector()
 T CUtlVector<CConstraintFloodEntry, CUtlMemory<CConstraintFloodEntry, int> >::~CUtlVector()
 T CUtlVector<CDecalEmitterSystem::DecalListEntry, CUtlMemory<CDecalEmitterSystem::DecalListEntry, int> >::~CUtlVector()
 T CUtlVector<CDmxAttribute*, CUtlMemory<CDmxAttribute*, int> >::~CUtlVector()
 T CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> > const& CDmxElement::GetArray<CDmxElement*>(char const*) const
 T CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> >::~CUtlVector()
 T CUtlVector<CDmxElementDictionary::AttributeInfo_t, CUtlMemory<CDmxElementDictionary::AttributeInfo_t, int> >::~CUtlVector()
 T CUtlVector<CDmxElementDictionary::DictInfo_t, CUtlMemory<CDmxElementDictionary::DictInfo_t, int> >::~CUtlVector()
 T CUtlVector<CDragDropHelperPanel::DragHelperPanel_t, CUtlMemory<CDragDropHelperPanel::DragHelperPanel_t, int> >::~CUtlVector()
 T CUtlVector<CEconColorDefinition*, CUtlMemory<CEconColorDefinition*, int> >::~CUtlVector()
 T CUtlVector<CEconItem::attribute_t, CUtlMemory<CEconItem::attribute_t, int> >::operator=(CUtlVector<CEconItem::attribute_t, CUtlMemory<CEconItem::attribute_t, int> > const&)
 T CUtlVector<CEconItem::attribute_t, CUtlMemory<CEconItem::attribute_t, int> >::~CUtlVector()
 T CUtlVector<CEconItemAttribute, CUtlMemory<CEconItemAttribute, int> >::InsertBefore(int)
 T CUtlVector<CEconItemAttribute, CUtlMemory<CEconItemAttribute, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CEconItemAttribute, CUtlMemory<CEconItemAttribute, int> >::~CUtlVector()
 T CUtlVector<CEconItemCustomData::EquippedInstance, CUtlMemory<CEconItemCustomData::EquippedInstance, int> >::~CUtlVector()
 T CUtlVector<CEconItemSchema::EquipRegion, CUtlMemory<CEconItemSchema::EquipRegion, int> >::InsertBefore(int, CEconItemSchema::EquipRegion const&)
 T CUtlVector<CEconItemSchema::EquipRegion, CUtlMemory<CEconItemSchema::EquipRegion, int> >::~CUtlVector()
 T CUtlVector<CEconItemSetDefinition::itemset_attrib_t, CUtlMemory<CEconItemSetDefinition::itemset_attrib_t, int> >::operator=(CUtlVector<CEconItemSetDefinition::itemset_attrib_t, CUtlMemory<CEconItemSetDefinition::itemset_attrib_t, int> > const&)
 T CUtlVector<CEconItemSetDefinition::itemset_attrib_t, CUtlMemory<CEconItemSetDefinition::itemset_attrib_t, int> >::~CUtlVector()
 T CUtlVector<CEconItemView, CUtlMemory<CEconItemView, int> >::~CUtlVector()
 T CUtlVector<CEffectScriptElement, CUtlMemory<CEffectScriptElement, int> >::InsertBefore(int, CEffectScriptElement const&)
 T CUtlVector<CEffectScriptElement, CUtlMemory<CEffectScriptElement, int> >::~CUtlVector()
 T CUtlVector<CEntityDataInstantiator<CWatcherList>::HashEntry, CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CEntityDataInstantiator<CWatcherList>::HashEntry, CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int> >::~CUtlVector()
 T CUtlVector<CEntityDataInstantiator<ModelScale>::HashEntry, CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CEntityDataInstantiator<ModelScale>::HashEntry, CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int> >::~CUtlVector()
 T CUtlVector<CEntityDataInstantiator<StepSimulationData>::HashEntry, CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CEntityDataInstantiator<StepSimulationData>::HashEntry, CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int> >::~CUtlVector()
 T CUtlVector<CEntityDataInstantiator<groundlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CEntityDataInstantiator<groundlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int> >::~CUtlVector()
 T CUtlVector<CEntityDataInstantiator<physicspushlist_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CEntityDataInstantiator<physicspushlist_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int> >::~CUtlVector()
 T CUtlVector<CEntityDataInstantiator<touchlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CEntityDataInstantiator<touchlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int> >::~CUtlVector()
 T CUtlVector<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int> >::~CUtlVector()
 T CUtlVector<CEntityPortalledNetworkMessage, CUtlMemory<CEntityPortalledNetworkMessage, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CEntityPortalledNetworkMessage, CUtlMemory<CEntityPortalledNetworkMessage, int> >::~CUtlVector()
 T CUtlVector<CEnvSoundscape*, CUtlMemory<CEnvSoundscape*, int> >::~CUtlVector()
 T CUtlVector<CEventAbsoluteTag, CUtlMemory<CEventAbsoluteTag, int> >::InsertBefore(int, CEventAbsoluteTag const&)
 T CUtlVector<CEventAbsoluteTag, CUtlMemory<CEventAbsoluteTag, int> >::Purge()
 T CUtlVector<CEventAbsoluteTag, CUtlMemory<CEventAbsoluteTag, int> >::~CUtlVector()
 T CUtlVector<CEventRegister*, CUtlMemory<CEventRegister*, int> >::~CUtlVector()
 T CUtlVector<CEventRelativeTag, CUtlMemory<CEventRelativeTag, int> >::InsertBefore(int, CEventRelativeTag const&)
 T CUtlVector<CEventRelativeTag, CUtlMemory<CEventRelativeTag, int> >::Purge()
 T CUtlVector<CEventRelativeTag, CUtlMemory<CEventRelativeTag, int> >::~CUtlVector()
 T CUtlVector<CExpressionSample, CUtlMemory<CExpressionSample, int> >::~CUtlVector()
 T CUtlVector<CFish*, CUtlMemory<CFish*, int> >::~CUtlVector()
 T CUtlVector<CFlexAnimationTrack*, CUtlMemory<CFlexAnimationTrack*, int> >::~CUtlVector()
 T CUtlVector<CFlexSceneFile*, CUtlMemory<CFlexSceneFile*, int> >::~CUtlVector()
 T CUtlVector<CFlexTimingTag, CUtlMemory<CFlexTimingTag, int> >::InsertBefore(int, CFlexTimingTag const&)
 T CUtlVector<CFlexTimingTag, CUtlMemory<CFlexTimingTag, int> >::Purge()
 T CUtlVector<CFlexTimingTag, CUtlMemory<CFlexTimingTag, int> >::~CUtlVector()
 T CUtlVector<CFogVolume*, CUtlMemory<CFogVolume*, int> >::~CUtlVector()
 T CUtlVector<CFuncLadder*, CUtlMemory<CFuncLadder*, int> >::~CUtlVector()
 T CUtlVector<CFunctor*, CUtlMemory<CFunctor*, int> >::~CUtlVector()
 T CUtlVector<CGameSaveRestoreInfo::CHashElement, CUtlMemory<CGameSaveRestoreInfo::CHashElement, int> >::~CUtlVector()
 T CUtlVector<CGameWeaponManager*, CUtlMemory<CGameWeaponManager*, int> >::~CUtlVector()
 T CUtlVector<CGlobalEvent*, CUtlMemory<CGlobalEvent*, int> >::~CUtlVector()
 T CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CAI_DynamicLink>, CUtlMemory<CHandle<CAI_DynamicLink>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CBaseCombatWeapon>, CUtlMemory<CHandle<CBaseCombatWeapon>, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CHandle<CBaseCombatWeapon>, CUtlMemory<CHandle<CBaseCombatWeapon>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >::FindAndRemove(CHandle<CBaseEntity> const&)
 T CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >::AddVectorToTail(CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> > const&)
 T CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >::FindAndRemove(CHandle<CBasePlayer> const&)
 T CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CBasePropDoor>, CUtlMemory<CHandle<CBasePropDoor>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CEconWearable>, CUtlMemory<CHandle<CEconWearable>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CEnvMicrophone>, CUtlMemory<CHandle<CEnvMicrophone>, int> >::FindAndRemove(CHandle<CEnvMicrophone> const&)
 T CUtlVector<CHandle<CEnvMicrophone>, CUtlMemory<CHandle<CEnvMicrophone>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CEnvPlayerSurfaceTrigger>, CUtlMemory<CHandle<CEnvPlayerSurfaceTrigger>, int> >::FindAndRemove(CHandle<CEnvPlayerSurfaceTrigger> const&)
 T CUtlVector<CHandle<CEnvPlayerSurfaceTrigger>, CUtlMemory<CHandle<CEnvPlayerSurfaceTrigger>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CInfoLadderDismount>, CUtlMemory<CHandle<CInfoLadderDismount>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CInfoPlacementHelper>, CUtlMemory<CHandle<CInfoPlacementHelper>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CMessageEntity>, CUtlMemory<CHandle<CMessageEntity>, int> >::FindAndRemove(CHandle<CMessageEntity> const&)
 T CUtlVector<CHandle<CMessageEntity>, CUtlMemory<CHandle<CMessageEntity>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CPointTemplate>, CUtlMemory<CHandle<CPointTemplate>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >::FindAndRemove(CHandle<CSceneEntity> const&)
 T CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CTonemapTrigger>, CUtlMemory<CHandle<CTonemapTrigger>, int> >::FindAndRemove(CHandle<CTonemapTrigger> const&)
 T CUtlVector<CHandle<CTonemapTrigger>, CUtlMemory<CHandle<CTonemapTrigger>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CTriggerMultiple>, CUtlMemory<CHandle<CTriggerMultiple>, int> >::FindAndRemove(CHandle<CTriggerMultiple> const&)
 T CUtlVector<CHandle<CTriggerMultiple>, CUtlMemory<CHandle<CTriggerMultiple>, int> >::~CUtlVector()
 T CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >::~CUtlVector()
 T CUtlVector<CHintCriteria::hintZone_t, CUtlMemory<CHintCriteria::hintZone_t, int> >::~CUtlVector()
 T CUtlVector<CInfo_Coop_Spawn*, CUtlMemory<CInfo_Coop_Spawn*, int> >::~CUtlVector()
 T CUtlVector<CInventoryManager::inventories_t, CUtlMemory<CInventoryManager::inventories_t, int> >::~CUtlVector()
 T CUtlVector<CInventoryManager::pendingreq_t, CUtlMemory<CInventoryManager::pendingreq_t, int> >::~CUtlVector()
 T CUtlVector<CItemSelectionCriteria, CUtlMemory<CItemSelectionCriteria, int> >::InsertBefore(int)
 T CUtlVector<CItemSelectionCriteria, CUtlMemory<CItemSelectionCriteria, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CItemSelectionCriteria, CUtlMemory<CItemSelectionCriteria, int> >::~CUtlVector()
 T CUtlVector<CItemSelectionCriteria::CCondition*, CUtlMemory<CItemSelectionCriteria::CCondition*, int> >::~CUtlVector()
 T CUtlVector<CItem_Nugget*, CUtlMemory<CItem_Nugget*, int> >::~CUtlVector()
 T CUtlVector<CModelSoundsCache*, CUtlMemory<CModelSoundsCache*, int> >::~CUtlVector()
 T CUtlVector<CMoveHelperServer::touchlist_t, CUtlMemory<CMoveHelperServer::touchlist_t, int> >::~CUtlVector()
 T CUtlVector<CNPC_Bullseye*, CUtlMemory<CNPC_Bullseye*, int> >::~CUtlVector()
 T CUtlVector<CNavArea*, CUtlMemory<CNavArea*, int> >::~CUtlVector()
 T CUtlVector<CNavArea::AreaBindInfo, CUtlMemoryConservative<CNavArea::AreaBindInfo> >::GrowVector(int)
 T CUtlVector<CNavLadder*, CUtlMemory<CNavLadder*, int> >::~CUtlVector()
 T CUtlVector<CNavMesh::WalkableSeedSpot, CUtlMemory<CNavMesh::WalkableSeedSpot, int> >::~CUtlVector()
 T CUtlVector<CNavNode*, CUtlMemory<CNavNode*, int> >::~CUtlVector()
 T CUtlVector<CPVS_Extender*, CUtlMemory<CPVS_Extender*, int> >::~CUtlVector()
 T CUtlVector<CPaintBlob*, CUtlMemory<CPaintBlob*, int> >::~CUtlVector()
 T CUtlVector<CParticleCollection*, CUtlMemory<CParticleCollection*, int> >::~CUtlVector()
 T CUtlVector<CParticleOperatorInstance*, CUtlMemory<CParticleOperatorInstance*, int> >::~CUtlVector()
 T CUtlVector<CParticleSystemDefinition*, CUtlMemory<CParticleSystemDefinition*, int> >::~CUtlVector()
 T CUtlVector<CParticleSystemMgr::RenderCache_t, CUtlMemory<CParticleSystemMgr::RenderCache_t, int> >::~CUtlVector()
 T CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >::InsertBefore(int)
 T CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >::~CUtlVector()
 T CUtlVector<CPassengerRole, CUtlMemory<CPassengerRole, int> >::~CUtlVector()
 T CUtlVector<CPassengerSeat, CUtlMemory<CPassengerSeat, int> >::~CUtlVector()
 T CUtlVector<CPassengerSeatTransition, CUtlMemory<CPassengerSeatTransition, int> >::~CUtlVector()
 T CUtlVector<CPhysSaveRestoreBlockHandler::QueuedItem_t, CUtlMemory<CPhysSaveRestoreBlockHandler::QueuedItem_t, int> >::~CUtlVector()
 T CUtlVector<CPhysicsPushedEntities::PhysicsPushedInfo_t, CUtlMemory<CPhysicsPushedEntities::PhysicsPushedInfo_t, int> >::~CUtlVector()
 T CUtlVector<CPhysicsPushedEntities::PhysicsPusherInfo_t, CUtlMemory<CPhysicsPushedEntities::PhysicsPusherInfo_t, int> >::AddVectorToTail(CUtlVector<CPhysicsPushedEntities::PhysicsPusherInfo_t, CUtlMemory<CPhysicsPushedEntities::PhysicsPusherInfo_t, int> > const&)
 T CUtlVector<CPhysicsPushedEntities::PhysicsPusherInfo_t, CUtlMemory<CPhysicsPushedEntities::PhysicsPusherInfo_t, int> >::~CUtlVector()
 T CUtlVector<CPhysicsShadowClone*, CUtlMemory<CPhysicsShadowClone*, int> >::~CUtlVector()
 T CUtlVector<CPointTemplate*, CUtlMemory<CPointTemplate*, int> >::~CUtlVector()
 T CUtlVector<CPolyhedron*, CUtlMemory<CPolyhedron*, int> >::InsertMultipleBefore(int, int, CPolyhedron* const*)
 T CUtlVector<CPolyhedron*, CUtlMemory<CPolyhedron*, int> >::~CUtlVector()
 T CUtlVector<CPortalLaser::PortalLaserInfo_t, CUtlMemory<CPortalLaser::PortalLaserInfo_t, int> >::~CUtlVector()
 T CUtlVector<CPortalSimulator*, CUtlMemory<CPortalSimulator*, int> >::~CUtlVector()
 T CUtlVector<CPortal_Base2D*, CUtlMemory<CPortal_Base2D*, int> >::~CUtlVector()
 T CUtlVector<CPortal_Player::RecentPortalTransform_t, CUtlMemory<CPortal_Player::RecentPortalTransform_t, int> >::~CUtlVector()
 T CUtlVector<CProjectedWallEntity*, CUtlMemory<CProjectedWallEntity*, int> >::~CUtlVector()
 T CUtlVector<CPropData::propdata_breakablechunk_t, CUtlMemory<CPropData::propdata_breakablechunk_t, int> >::~CUtlVector()
 T CUtlVector<CProp_Portal*, CUtlMemory<CProp_Portal*, int> >::~CUtlVector()
 T CUtlVector<CRallyPoint*, CUtlMemory<CRallyPoint*, int> >::~CUtlVector()
 T CUtlVector<CSceneEventInfo, CUtlMemory<CSceneEventInfo, int> >::InsertBefore(int, CSceneEventInfo const&)
 T CUtlVector<CSceneEventInfo, CUtlMemory<CSceneEventInfo, int> >::~CUtlVector()
 T CUtlVector<CSceneManager::CRestoreSceneSound, CUtlMemory<CSceneManager::CRestoreSceneSound, int> >::~CUtlVector()
 T CUtlVector<CSheet*, CUtlMemory<CSheet*, int> >::~CUtlVector()
 T CUtlVector<CSheet::SheetInfo_t, CUtlMemory<CSheet::SheetInfo_t, int> >::~CUtlVector()
 T CUtlVector<CSortedCacheFile, CUtlMemory<CSortedCacheFile, int> >::~CUtlVector()
 T CUtlVector<CSoundPatch*, CUtlMemory<CSoundPatch*, int> >::~CUtlVector()
 T CUtlVector<CStressEntityReg*, CUtlMemory<CStressEntityReg*, int> >::~CUtlVector()
 T CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >::~CUtlVector()
 T CUtlVector<CTeam*, CUtlMemory<CTeam*, int> >::~CUtlVector()
 T CUtlVector<CTeamSpawnPoint*, CUtlMemory<CTeamSpawnPoint*, int> >::~CUtlVector()
 T CUtlVector<CThreadSafeMemoryPool::BlockSet_t, CUtlMemory<CThreadSafeMemoryPool::BlockSet_t, int> >::~CUtlVector()
 T CUtlVector<CThreadSafeMultiMemoryPool::MemPoolRecord_t*, CUtlMemory<CThreadSafeMultiMemoryPool::MemPoolRecord_t*, int> >::~CUtlVector()
 T CUtlVector<CThreadSafeMultiMemoryPool::MemPoolRecord_t, CUtlMemory<CThreadSafeMultiMemoryPool::MemPoolRecord_t, int> >::~CUtlVector()
 T CUtlVector<CTimedItemRewardDefinition, CUtlMemory<CTimedItemRewardDefinition, int> >::~CUtlVector()
 T CUtlVector<CTriggerPaintCleanser*, CUtlMemory<CTriggerPaintCleanser*, int> >::operator=(CUtlVector<CTriggerPaintCleanser*, CUtlMemory<CTriggerPaintCleanser*, int> > const&)
 T CUtlVector<CTriggerPaintCleanser*, CUtlMemory<CTriggerPaintCleanser*, int> >::~CUtlVector()
 T CUtlVector<CTriggerPortalCleanser*, CUtlMemory<CTriggerPortalCleanser*, int> >::~CUtlVector()
 T CUtlVector<CUserCmd, CUtlMemory<CUserCmd, int> >::InsertBefore(int, CUserCmd const&)
 T CUtlVector<CUserCmd, CUtlMemory<CUserCmd, int> >::~CUtlVector()
 T CUtlVector<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >::InsertBefore(int)
 T CUtlVector<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >::InsertBefore(int, CUtlBinaryBlock const&)
 T CUtlVector<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >::Purge()
 T CUtlVector<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >::~CUtlVector()
 T CUtlVector<CUtlHandleTable<vgui::BuildGroup, 20>::EntryType_t, CUtlMemory<CUtlHandleTable<vgui::BuildGroup, 20>::EntryType_t, int> >::~CUtlVector()
 T CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::InsertBefore(int)
 T CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::InsertBefore(int, CUtlString const&)
 T CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::Purge()
 T CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::~CUtlVector()
 T CUtlVector<CUtlSymbol, CUtlMemory<CUtlSymbol, int> >::~CUtlVector()
 T CUtlVector<CUtlSymbolTable::StringPool_t*, CUtlMemory<CUtlSymbolTable::StringPool_t*, int> >::~CUtlVector()
 T CUtlVector<CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>::StringPool_t*, CUtlMemory<CUtlSymbolTableLargeBase<CNonThreadsafeTree<false>, false, 2048ul>::StringPool_t*, int> >::~CUtlVector()
 T CUtlVector<CUtlSymbolTableLargeBase<CThreadsafeTree<false>, false, 2048ul>::StringPool_t*, CUtlMemory<CUtlSymbolTableLargeBase<CThreadsafeTree<false>, false, 2048ul>::StringPool_t*, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<CWatcherList>::HashEntry, CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<CWatcherList>::HashEntry, CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<CWatcherList>::HashEntry, CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<CWatcherList>::HashEntry, CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<ModelScale>::HashEntry, CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<ModelScale>::HashEntry, CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<ModelScale>::HashEntry, CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<ModelScale>::HashEntry, CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<StepSimulationData>::HashEntry, CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<StepSimulationData>::HashEntry, CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<StepSimulationData>::HashEntry, CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<StepSimulationData>::HashEntry, CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<groundlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<groundlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<groundlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<groundlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<physicspushlist_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<physicspushlist_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<physicspushlist_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<physicspushlist_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<touchlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<touchlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<touchlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<touchlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CGameSaveRestoreInfo::CHashElement, CUtlMemory<CGameSaveRestoreInfo::CHashElement, int> >, CUtlMemory<CUtlVector<CGameSaveRestoreInfo::CHashElement, CUtlMemory<CGameSaveRestoreInfo::CHashElement, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, CUtlMemory<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, CUtlMemory<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CNavArea*, CUtlMemory<CNavArea*, int> >, CUtlMemory<CUtlVector<CNavArea*, CUtlMemory<CNavArea*, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CNavArea*, CUtlMemory<CNavArea*, int> >, CUtlMemory<CUtlVector<CNavArea*, CUtlMemory<CNavArea*, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CNavNode*, CUtlMemory<CNavNode*, int> >, CUtlMemory<CUtlVector<CNavNode*, CUtlMemory<CNavNode*, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >, CUtlMemory<CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<EntsByStringList_t, CUtlMemory<EntsByStringList_t, int> >, CUtlMemory<CUtlVector<EntsByStringList_t, CUtlMemory<EntsByStringList_t, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<NavVisPair_t, CUtlMemory<NavVisPair_t, int> >, CUtlMemory<CUtlVector<NavVisPair_t, CUtlMemory<NavVisPair_t, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<VoiceCommandMenuItem_t, CUtlMemory<VoiceCommandMenuItem_t, int> >, CUtlMemory<CUtlVector<VoiceCommandMenuItem_t, CUtlMemory<VoiceCommandMenuItem_t, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<ikcontextikrule_t, CUtlMemory<ikcontextikrule_t, int> >, CUtlMemory<CUtlVector<ikcontextikrule_t, CUtlMemory<ikcontextikrule_t, int> >, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CUtlVector<ikcontextikrule_t, CUtlMemory<ikcontextikrule_t, int> >, CUtlMemory<CUtlVector<ikcontextikrule_t, CUtlMemory<ikcontextikrule_t, int> >, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<int, CUtlMemory<int, int> >, CUtlMemory<CUtlVector<int, CUtlMemory<int, int> >, int> >::~CUtlVector()
 T CUtlVector<CVarBitVec, CUtlMemory<CVarBitVec, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CVarBitVec, CUtlMemory<CVarBitVec, int> >::Purge()
 T CUtlVector<CVarBitVec, CUtlMemory<CVarBitVec, int> >::~CUtlVector()
 T CUtlVector<CaptionLookup_t, CUtlMemory<CaptionLookup_t, int> >::~CUtlVector()
 T CUtlVector<CellInfo*, CUtlMemory<CellInfo*, int> >::~CUtlVector()
 T CUtlVector<Color, CUtlMemory<Color, int> >::~CUtlVector()
 T CUtlVector<DamageInfo, CUtlMemory<DamageInfo, int> >::~CUtlVector()
 T CUtlVector<DmeTime_t, CUtlMemory<DmeTime_t, int> >::~CUtlVector()
 T CUtlVector<EntsByStringList_t, CUtlMemory<EntsByStringList_t, int> >::~CUtlVector()
 T CUtlVector<FizzlerVortexObjectInfo_t, CUtlMemory<FizzlerVortexObjectInfo_t, int> >::~CUtlVector()
 T CUtlVector<GCSDK::CJobMgr::JobSleeping_t, CUtlMemory<GCSDK::CJobMgr::JobSleeping_t, int> >::InsertBefore(int)
 T CUtlVector<GCSDK::CJobMgr::JobSleeping_t, CUtlMemory<GCSDK::CJobMgr::JobSleeping_t, int> >::~CUtlVector()
 T CUtlVector<GCSDK::CLock*, CUtlMemory<GCSDK::CLock*, int> >::~CUtlVector()
 T CUtlVector<GCSDK::CSharedObject*, CUtlMemory<GCSDK::CSharedObject*, int> >::~CUtlVector()
 T CUtlVector<GCSDK::IProtoBufMsgMemoryPool*, CUtlMemory<GCSDK::IProtoBufMsgMemoryPool*, int> >::~CUtlVector()
 T CUtlVector<GCSDK::ISharedObjectListener*, CUtlMemory<GCSDK::ISharedObjectListener*, int> >::~CUtlVector()
 T CUtlVector<GCSDK::MsgInfo_t, CUtlMemory<GCSDK::MsgInfo_t, int> >::~CUtlVector()
 T CUtlVector<GestureSlot_t, CUtlMemory<GestureSlot_t, int> >::~CUtlVector()
 T CUtlVector<ICollideable*, CUtlMemory<ICollideable*, int> >::~CUtlVector()
 T CUtlVector<IEntityListener*, CUtlMemory<IEntityListener*, int> >::~CUtlVector()
 T CUtlVector<IGCUser*, CUtlMemory<IGCUser*, int> >::~CUtlVector()
 T CUtlVector<IGameSystem*, CUtlMemory<IGameSystem*, int> >::~CUtlVector()
 T CUtlVector<IGameSystemPerFrame*, CUtlMemory<IGameSystemPerFrame*, int> >::~CUtlVector()
 T CUtlVector<IHandleEntity const*, CUtlMemory<IHandleEntity const*, int> >::~CUtlVector()
 T CUtlVector<IHandleEntity*, CUtlMemory<IHandleEntity*, int> >::~CUtlVector()
 T CUtlVector<INavAvoidanceObstacle*, CUtlMemory<INavAvoidanceObstacle*, int> >::~CUtlVector()
 T CUtlVector<IPaintStreamAutoList*, CUtlMemory<IPaintStreamAutoList*, int> >::~CUtlVector()
 T CUtlVector<IParticleOperatorDefinition*, CUtlMemory<IParticleOperatorDefinition*, int> >::~CUtlVector()
 T CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::~CUtlVector()
 T CUtlVector<IPortalLaserAutoList*, CUtlMemory<IPortalLaserAutoList*, int> >::~CUtlVector()
 T CUtlVector<IProjectedWallEntityAutoList*, CUtlMemory<IProjectedWallEntityAutoList*, int> >::~CUtlVector()
 T CUtlVector<IPropWeightedCubeAutoList*, CUtlMemory<IPropWeightedCubeAutoList*, int> >::~CUtlVector()
 T CUtlVector<ISaveRestoreBlockHandler*, CUtlMemory<ISaveRestoreBlockHandler*, int> >::~CUtlVector()
 T CUtlVector<IServerNetworkable*, CUtlMemory<IServerNetworkable*, int> >::~CUtlVector()
 T CUtlVector<ITriggerCatapultAutoList*, CUtlMemory<ITriggerCatapultAutoList*, int> >::~CUtlVector()
 T CUtlVector<ITriggerPortalCleanserAutoList*, CUtlMemory<ITriggerPortalCleanserAutoList*, int> >::~CUtlVector()
 T CUtlVector<ITriggerTractorBeamAutoList*, CUtlMemory<ITriggerTractorBeamAutoList*, int> >::~CUtlVector()
 T CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >::~CUtlVector()
 T CUtlVector<LaserVictimInfo_t, CUtlMemory<LaserVictimInfo_t, int> >::~CUtlVector()
 T CUtlVector<NPCInterjection, CUtlMemory<NPCInterjection, int> >::InsertBefore(int, NPCInterjection const&)
 T CUtlVector<NPCInterjection, CUtlMemory<NPCInterjection, int> >::~CUtlVector()
 T CUtlVector<NavVisPair_t, CUtlMemory<NavVisPair_t, int> >::~CUtlVector()
 T CUtlVector<OneWayLink_t, CUtlMemoryFixedGrowable<OneWayLink_t, 512ul, int> >::InsertBefore(int, OneWayLink_t const&)
 T CUtlVector<OneWayLink_t, CUtlMemoryFixedGrowable<OneWayLink_t, 512ul, int> >::~CUtlVector()
 T CUtlVector<PS_SD_Dynamic_CarvedEntities_CarvedEntity_t, CUtlMemory<PS_SD_Dynamic_CarvedEntities_CarvedEntity_t, int> >::~CUtlVector()
 T CUtlVector<PS_SD_Static_World_StaticProps_ClippedProp_t, CUtlMemory<PS_SD_Static_World_StaticProps_ClippedProp_t, int> >::~CUtlVector()
 T CUtlVector<PaintBlobImpactEffect_t, CUtlMemory<PaintBlobImpactEffect_t, int> >::~CUtlVector()
 T CUtlVector<PaintEntityData_t, CUtlMemory<PaintEntityData_t, int> >::~CUtlVector()
 T CUtlVector<PaintLocationData_t, CUtlMemory<PaintLocationData_t, int> >::Sort(int (*)(PaintLocationData_t const*, PaintLocationData_t const*))
 T CUtlVector<PaintLocationData_t, CUtlMemory<PaintLocationData_t, int> >::~CUtlVector()
 T CUtlVector<PaintPowerInfo_t, CUtlMemory<PaintPowerInfo_t, int> >::InsertBefore(int, PaintPowerInfo_t const&)
 T CUtlVector<PaintPowerInfo_t, CUtlMemory<PaintPowerInfo_t, int> >::Sort(int (*)(PaintPowerInfo_t const*, PaintPowerInfo_t const*))
 T CUtlVector<PaintPowerInfo_t, CUtlMemory<PaintPowerInfo_t, int> >::~CUtlVector()
 T CUtlVector<PaintPowerType, CUtlMemory<PaintPowerType, int> >::~CUtlVector()
 T CUtlVector<PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::ContextSurfacePaintPowerInfo_t, CUtlMemory<PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::ContextSurfacePaintPowerInfo_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::ContextSurfacePaintPowerInfo_t, CUtlMemory<PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::ContextSurfacePaintPowerInfo_t, int> >::~CUtlVector()
 T CUtlVector<PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::ContextSurfacePaintPowerInfo_t, CUtlMemory<PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::ContextSurfacePaintPowerInfo_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::ContextSurfacePaintPowerInfo_t, CUtlMemory<PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::ContextSurfacePaintPowerInfo_t, int> >::~CUtlVector()
 T CUtlVector<PaintPowerUser<CPaintableEntity<CPhysicsProp> >::ContextSurfacePaintPowerInfo_t, CUtlMemory<PaintPowerUser<CPaintableEntity<CPhysicsProp> >::ContextSurfacePaintPowerInfo_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<PaintPowerUser<CPaintableEntity<CPhysicsProp> >::ContextSurfacePaintPowerInfo_t, CUtlMemory<PaintPowerUser<CPaintableEntity<CPhysicsProp> >::ContextSurfacePaintPowerInfo_t, int> >::~CUtlVector()
 T CUtlVector<PanelAnimationMapEntry, CUtlMemory<PanelAnimationMapEntry, int> >::~CUtlVector()
 T CUtlVector<ParticleChildrenInfo_t, CUtlMemory<ParticleChildrenInfo_t, int> >::~CUtlVector()
 T CUtlVector<PhysicsObjectCloneLink_t, CUtlMemory<PhysicsObjectCloneLink_t, int> >::~CUtlVector()
 T CUtlVector<PortalRadiusExtension_t, CUtlMemory<PortalRadiusExtension_t, int> >::~CUtlVector()
 T CUtlVector<PortalVortexEffect_t, CUtlMemory<PortalVortexEffect_t, int> >::~CUtlVector()
 T CUtlVector<QAngle, CUtlMemory<QAngle, int> >::~CUtlVector()
 T CUtlVector<Quaternion, CUtlMemory<Quaternion, int> >::~CUtlVector()
 T CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >::~CUtlVector()
 T CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >::~CUtlVector()
 T CUtlVector<ResponseRules::CRR_Response, CUtlMemory<ResponseRules::CRR_Response, int> >::InsertBefore(int)
 T CUtlVector<ResponseRules::CRR_Response, CUtlMemory<ResponseRules::CRR_Response, int> >::~CUtlVector()
 T CUtlVector<ResponseRules::CResponseSystem::ScriptEntry, CUtlMemory<ResponseRules::CResponseSystem::ScriptEntry, int> >::~CUtlVector()
 T CUtlVector<ResponseRules::ParserResponse, CUtlMemory<ResponseRules::ParserResponse, int> >::InsertBefore(int)
 T CUtlVector<ResponseRules::ParserResponse, CUtlMemory<ResponseRules::ParserResponse, int> >::InsertBefore(int, ResponseRules::ParserResponse const&)
 T CUtlVector<ResponseRules::ParserResponse, CUtlMemory<ResponseRules::ParserResponse, int> >::~CUtlVector()
 T CUtlVector<SCatapultData*, CUtlMemory<SCatapultData*, int> >::~CUtlVector()
 T CUtlVector<SDeaths*, CUtlMemory<SDeaths*, int> >::~CUtlVector()
 T CUtlVector<SFizzledData*, CUtlMemory<SFizzledData*, int> >::~CUtlVector()
 T CUtlVector<SPortalData*, CUtlMemory<SPortalData*, int> >::~CUtlVector()
 T CUtlVector<SStuckPlayers*, CUtlMemory<SStuckPlayers*, int> >::~CUtlVector()
 T CUtlVector<STaunts*, CUtlMemory<STaunts*, int> >::~CUtlVector()
 T CUtlVector<STractorBeamData*, CUtlMemory<STractorBeamData*, int> >::~CUtlVector()
 T CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >::~CUtlVector()
 T CUtlVector<ScriptFunctionBinding_t, CUtlMemory<ScriptFunctionBinding_t, int> >::InsertBefore(int)
 T CUtlVector<ScriptFunctionBinding_t, CUtlMemory<ScriptFunctionBinding_t, int> >::~CUtlVector()
 T CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >::InsertBefore(int)
 T CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >::~CUtlVector()
 T CUtlVector<SlideKeywordList_t*, CUtlMemory<SlideKeywordList_t*, int> >::~CUtlVector()
 T CUtlVector<SoundCommand_t*, CUtlMemory<SoundCommand_t*, int> >::~CUtlVector()
 T CUtlVector<SpotOrder, CUtlMemory<SpotOrder, int> >::~CUtlVector()
 T CUtlVector<SurfaceType, CUtlMemory<SurfaceType, int> >::~CUtlVector()
 T CUtlVector<TeleportListEntry_t, CUtlMemory<TeleportListEntry_t, int> >::~CUtlVector()
 T CUtlVector<TemplateEntityData_t*, CUtlMemory<TemplateEntityData_t*, int> >::~CUtlVector()
 T CUtlVector<UTIL_Remove_PhysicsStack_t, CUtlMemory<UTIL_Remove_PhysicsStack_t, int> >::~CUtlVector()
 T CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >::~CUtlVector()
 T CUtlVector<VMatrix, CUtlMemory<VMatrix, int> >::~CUtlVector()
 T CUtlVector<VPhysicsClipEntry_t, CUtlMemory<VPhysicsClipEntry_t, int> >::~CUtlVector()
 T CUtlVector<VPlane, CUtlMemory<VPlane, int> >::~CUtlVector()
 T CUtlVector<Vector, CUtlMemory<Vector, int> >::~CUtlVector()
 T CUtlVector<Vector, CUtlMemoryFixedGrowable<Vector, 16ul, int> >::InsertBefore(int, Vector const&)
 T CUtlVector<Vector, CUtlMemoryFixedGrowable<Vector, 16ul, int> >::~CUtlVector()
 T CUtlVector<Vector, CUtlMemoryFixedGrowable<Vector, 32ul, int> >::InsertBefore(int, Vector const&)
 T CUtlVector<Vector, CUtlMemoryFixedGrowable<Vector, 32ul, int> >::~CUtlVector()
 T CUtlVector<Vector2D, CUtlMemory<Vector2D, int> >::~CUtlVector()
 T CUtlVector<Vector4D, CUtlMemory<Vector4D, int> >::~CUtlVector()
 T CUtlVector<VoiceCommandMenuItem_t, CUtlMemory<VoiceCommandMenuItem_t, int> >::~CUtlVector()
 T CUtlVector<activitylist_t, CUtlMemory<activitylist_t, int> >::~CUtlVector()
 T CUtlVector<bbox_t, CUtlMemory<bbox_t, int> >::~CUtlVector()
 T CUtlVector<bool (*)(), CUtlMemory<bool (*)(), int> >::~CUtlVector()
 T CUtlVector<bool, CUtlMemory<bool, int> >::GrowVector(int)
 T CUtlVector<bool, CUtlMemory<bool, int> >::~CUtlVector()
 T CUtlVector<breakmodel_t, CUtlMemory<breakmodel_t, int> >::~CUtlVector()
 T CUtlVector<busyanim_t, CUtlMemory<busyanim_t, int> >::~CUtlVector()
 T CUtlVector<busysafezone_t, CUtlMemory<busysafezone_t, int> >::~CUtlVector()
 T CUtlVector<char const*, CUtlMemory<char const*, int> >::operator=(CUtlVector<char const*, CUtlMemory<char const*, int> > const&)
 T CUtlVector<char const*, CUtlMemory<char const*, int> >::~CUtlVector()
 T CUtlVector<char*, CUtlMemory<char*, int> >::~CUtlVector()
 T CUtlVector<char, CUtlMemory<char, int> >::AddToTail(char const&)
 T CUtlVector<char, CUtlMemory<char, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<char, CUtlMemory<char, int> >::~CUtlVector()
 T CUtlVector<clusterSoundscapeList_t, CUtlMemory<clusterSoundscapeList_t, int> >::~CUtlVector()
 T CUtlVector<collidelist_t, CUtlMemory<collidelist_t, int> >::~CUtlVector()
 T CUtlVector<constraint_anchor_t, CUtlMemory<constraint_anchor_t, int> >::~CUtlVector()
 T CUtlVector<damageevent_t, CUtlMemory<damageevent_t, int> >::InsertBefore(int)
 T CUtlVector<damageevent_t, CUtlMemory<damageevent_t, int> >::~CUtlVector()
 T CUtlVector<double, CUtlMemory<double, int> >::~CUtlVector()
 T CUtlVector<entitynotify_t, CUtlMemory<entitynotify_t, int> >::~CUtlVector()
 T CUtlVector<eventlist_t, CUtlMemory<eventlist_t, int> >::~CUtlVector()
 T CUtlVector<float __vector(4), CUtlMemory<float __vector(4), int> >::~CUtlVector()
 T CUtlVector<float, CUtlMemory<float, int> >::operator=(CUtlVector<float, CUtlMemory<float, int> > const&)
 T CUtlVector<float, CUtlMemory<float, int> >::~CUtlVector()
 T CUtlVector<fluidevent_t, CUtlMemory<fluidevent_t, int> >::~CUtlVector()
 T CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >::~CUtlVector()
 T CUtlVector<grouptemplate_t, CUtlMemory<grouptemplate_t, int> >::~CUtlVector()
 T CUtlVector<ikcontextikrule_t, CUtlMemory<ikcontextikrule_t, int> >::~CUtlVector()
 T CUtlVector<inflictorstate_t, CUtlMemory<inflictorstate_t, int> >::~CUtlVector()
 T CUtlVector<int, CUtlMemory<int, int> >::AddToTail(int const&)
 T CUtlVector<int, CUtlMemory<int, int> >::operator=(CUtlVector<int, CUtlMemory<int, int> > const&)
 T CUtlVector<int, CUtlMemory<int, int> >::~CUtlVector()
 T CUtlVector<int, CUtlMemoryFixedGrowable<int, 4ul, int> >::InsertBefore(int, int const&)
 T CUtlVector<int, CUtlMemoryFixedGrowable<int, 4ul, int> >::~CUtlVector()
 T CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >::~CUtlVector()
 T CUtlVector<masscenteroverride_t, CUtlMemory<masscenteroverride_t, int> >::~CUtlVector()
 T CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >::~CUtlVector()
 T CUtlVector<penetrateevent_t, CUtlMemory<penetrateevent_t, int> >::~CUtlVector()
 T CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >::~CUtlVector()
 T CUtlVector<physicssound::breaksound_t, CUtlMemory<physicssound::breaksound_t, int> >::~CUtlVector()
 T CUtlVector<physicssound::impactsound_t, CUtlMemory<physicssound::impactsound_t, int> >::~CUtlVector()
 T CUtlVector<short*, CUtlMemory<short*, int> >::~CUtlVector()
 T CUtlVector<short, CUtlMemory<short, int> >::~CUtlVector()
 T CUtlVector<simthinkentry_t, CUtlMemory<simthinkentry_t, int> >::~CUtlVector()
 T CUtlVector<static_attrib_t, CUtlMemory<static_attrib_t, int> >::InsertBefore(int)
 T CUtlVector<static_attrib_t, CUtlMemory<static_attrib_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<static_attrib_t, CUtlMemory<static_attrib_t, int> >::~CUtlVector()
 T CUtlVector<std::pair<float, float>, CUtlMemory<std::pair<float, float>, int> >::~CUtlVector()
 T CUtlVector<string_t, CUtlMemory<string_t, int> >::~CUtlVector()
 T CUtlVector<studiohdr_t const*, CUtlMemory<studiohdr_t const*, int> >::~CUtlVector()
 T CUtlVector<template_t, CUtlMemory<template_t, int> >::~CUtlVector()
 T CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >::~CUtlVector()
 T CUtlVector<touchevent_t, CUtlMemory<touchevent_t, int> >::~CUtlVector()
 T CUtlVector<triggerevent_t, CUtlMemory<triggerevent_t, int> >::~CUtlVector()
 T CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::InsertBefore(int, unsigned char const&)
 T CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::~CUtlVector()
 T CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >::operator=(CUtlVector<unsigned int, CUtlMemory<unsigned int, int> > const&)
 T CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >::~CUtlVector()
 T CUtlVector<unsigned long long, CUtlMemory<unsigned long long, int> >::~CUtlVector()
 T CUtlVector<unsigned long, CUtlMemory<unsigned long, int> >::~CUtlVector()
 T CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >::~CUtlVector()
 T CUtlVector<unsigned short, CUtlMemoryConservative<unsigned short> >::GrowVector(int)
 T CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >::~CUtlVector()
 T CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >::~CUtlVector()
 T CUtlVector<vehiclescript_t, CUtlMemory<vehiclescript_t, int> >::~CUtlVector()
 T CUtlVector<vgui::AnimationController::ActiveAnimation_t, CUtlMemory<vgui::AnimationController::ActiveAnimation_t, int> >::~CUtlVector()
 T CUtlVector<vgui::AnimationController::AnimCommand_t, CUtlMemory<vgui::AnimationController::AnimCommand_t, int> >::~CUtlVector()
 T CUtlVector<vgui::AnimationController::AnimSequence_t, CUtlMemory<vgui::AnimationController::AnimSequence_t, int> >::~CUtlVector()
 T CUtlVector<vgui::AnimationController::PostedMessage_t, CUtlMemory<vgui::AnimationController::PostedMessage_t, int> >::~CUtlVector()
 T CUtlVector<vgui::BoundKey_t, CUtlMemory<vgui::BoundKey_t, int> >::InsertBefore(int, vgui::BoundKey_t const&)
 T CUtlVector<vgui::BuildModeDialog*, CUtlMemory<vgui::BuildModeDialog*, int> >::~CUtlVector()
 T CUtlVector<vgui::CTreeViewListControl::CColumnInfo, CUtlMemory<vgui::CTreeViewListControl::CColumnInfo, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<vgui::CTreeViewListControl::CColumnInfo, CUtlMemory<vgui::CTreeViewListControl::CColumnInfo, int> >::~CUtlVector()
 T CUtlVector<vgui::ClickPanel*, CUtlMemory<vgui::ClickPanel*, int> >::~CUtlVector()
 T CUtlVector<vgui::DHANDLE<vgui::Menu>, CUtlMemory<vgui::DHANDLE<vgui::Menu>, int> >::~CUtlVector()
 T CUtlVector<vgui::IImage*, CUtlMemory<vgui::IImage*, int> >::~CUtlVector()
 T CUtlVector<vgui::Label::TImageInfo, CUtlMemory<vgui::Label::TImageInfo, int> >::~CUtlVector()
 T CUtlVector<vgui::MenuButton*, CUtlMemory<vgui::MenuButton*, int> >::~CUtlVector()
 T CUtlVector<vgui::MenuSeparator*, CUtlMemory<vgui::MenuSeparator*, int> >::~CUtlVector()
 T CUtlVector<vgui::OverridableColorEntry, CUtlMemory<vgui::OverridableColorEntry, int> >::~CUtlVector()
 T CUtlVector<vgui::PHandle, CUtlMemory<vgui::PHandle, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<vgui::PHandle, CUtlMemory<vgui::PHandle, int> >::~CUtlVector()
 T CUtlVector<vgui::Panel*, CUtlMemory<vgui::Panel*, int> >::~CUtlVector()
 T CUtlVector<vgui::RichText::TFormatStream, CUtlMemory<vgui::RichText::TFormatStream, int> >::~CUtlVector()
 T CUtlVector<vgui::TreeNode*, CUtlMemory<vgui::TreeNode*, int> >::~CUtlVector()
 T CUtlVector<vgui::label_colorchange_t, CUtlMemory<vgui::label_colorchange_t, int> >::~CUtlVector()
 T CUtlVector<visibility_target_t, CUtlMemory<visibility_target_t, int> >::~CUtlVector()
 T CUtlVector<void (*)(IConVar*, char const*, float), CUtlMemory<void (*)(IConVar*, char const*, float), int> >::~CUtlVector()
 T CUtlVector<void (*)(bf_read&), CUtlMemory<void (*)(bf_read&), int> >::~CUtlVector()
 T CUtlVector<void*, CUtlMemory<void*, int> >::~CUtlVector()
 T CUtlVector<wchar_t*, CUtlMemory<wchar_t*, int> >::~CUtlVector()
 T CUtlVector<wchar_t, CUtlMemory<wchar_t, int> >::~CUtlVector()
 T CUtlVectorConservative<CNavArea::AreaBindInfo>::~CUtlVectorConservative()
 T CUtlVectorDataOps<CAI_InterestTarget, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CAI_InterestTarget, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CAI_InterestTarget, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CAI_InterestTarget, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<AIChannelScheduleState_t, CUtlMemory<AIChannelScheduleState_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<AISquadEnemyInfo_t, CUtlMemory<AISquadEnemyInfo_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<AI_Waypoint_t, CUtlMemory<AI_Waypoint_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CAI_ScriptConditionsElement, CUtlMemory<CAI_ScriptConditionsElement, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >, 12>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >, 12>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >, 12>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >, 12>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >, 13>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >, 13>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >, 13>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CAI_BaseNPC>, CUtlMemory<CHandle<CAI_BaseNPC>, int> >, 13>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseCombatWeapon>, CUtlMemory<CHandle<CBaseCombatWeapon>, int> >, 13>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseCombatWeapon>, CUtlMemory<CHandle<CBaseCombatWeapon>, int> >, 13>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseCombatWeapon>, CUtlMemory<CHandle<CBaseCombatWeapon>, int> >, 13>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseCombatWeapon>, CUtlMemory<CHandle<CBaseCombatWeapon>, int> >, 13>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, 13>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, 13>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, 13>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseEntity>, CUtlMemory<CHandle<CBaseEntity>, int> >, 13>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >, 13>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >, 13>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >, 13>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >, 13>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >, 13>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >, 13>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >, 13>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CBasePlayer>, CUtlMemory<CHandle<CBasePlayer>, int> >, 13>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >, 13>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >, 13>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >, 13>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CFish>, CUtlMemory<CHandle<CFish>, int> >, 13>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >, 13>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >, 13>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >, 13>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CSceneEntity>, CUtlMemory<CHandle<CSceneEntity>, int> >, 13>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >, 13>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >, 13>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >, 13>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CSceneListManager>, CUtlMemory<CHandle<CSceneListManager>, int> >, 13>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >, 13>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >, 13>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >, 13>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CHandle<CVGuiScreen>, CUtlMemory<CHandle<CVGuiScreen>, int> >, 13>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<CPassengerInfo, CUtlMemory<CPassengerInfo, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<Relationship_t, CUtlMemory<Relationship_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<ResponseContext_t, CUtlMemory<ResponseContext_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<ScriptedNPCInteraction_t, CUtlMemory<ScriptedNPCInteraction_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<UnreachableEnt_t, CUtlMemory<UnreachableEnt_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<Vector, CUtlMemory<Vector, int> >, 3>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<Vector, CUtlMemory<Vector, int> >, 3>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<Vector, CUtlMemory<Vector, int> >, 3>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<Vector, CUtlMemory<Vector, int> >, 3>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<float, CUtlMemory<float, int> >, 16>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<float, CUtlMemory<float, int> >, 16>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<float, CUtlMemory<float, int> >, 16>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<float, CUtlMemory<float, int> >, 16>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<globalentity_t, CUtlMemory<globalentity_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<magnetted_objects_t, CUtlMemory<magnetted_objects_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<modifiedconvars_t, CUtlMemory<modifiedconvars_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<physfollower_t, CUtlMemory<physfollower_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<string_t, CUtlMemory<string_t, int> >, 2>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<string_t, CUtlMemory<string_t, int> >, 2>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<string_t, CUtlMemory<string_t, int> >, 2>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<string_t, CUtlMemory<string_t, int> >, 2>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<template_t, CUtlMemory<template_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<template_t, CUtlMemory<template_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<template_t, CUtlMemory<template_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<template_t, CUtlMemory<template_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<thinkfunc_t, CUtlMemory<thinkfunc_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<vehicle_crashsound_t, CUtlMemory<vehicle_crashsound_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<vehicle_gear_t, CUtlMemory<vehicle_gear_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorUltraConservative<HidingSpot*, CUtlVectorUltraConservativeAllocator>::~CUtlVectorUltraConservative()
 T CUtlVectorUltraConservative<NavConnect, CUtlVectorUltraConservativeAllocator>::EnsureCapacity(int)
 T CUtlVectorUltraConservative<NavConnect, CUtlVectorUltraConservativeAllocator>::Remove(int)
 T CUtlVectorUltraConservative<NavConnect, CUtlVectorUltraConservativeAllocator>::RemoveAll()
 T CVGuiScreen::Activate()
 T CVGuiScreen::CVGuiScreen()
 T CVGuiScreen::GetDataDescMap()
 T CVGuiScreen::GetPanelName() const
 T CVGuiScreen::GetServerClass()
 T CVGuiScreen::InputSetActive(inputdata_t&)
 T CVGuiScreen::InputSetInactive(inputdata_t&)
 T CVGuiScreen::KeyValue(char const*, char const*)
 T CVGuiScreen::MakeVisibleOnlyToTeammates(bool)
 T CVGuiScreen::OnRestore()
 T CVGuiScreen::Precache()
 T CVGuiScreen::SetActive(bool)
 T CVGuiScreen::SetActualSize(float, float)
 T CVGuiScreen::SetTransparency(bool)
 T CVGuiScreen::ShouldTransmit(CCheckTransmitInfo const*)
 T CVGuiScreen::Spawn()
 T CVGuiScreen::UpdateTransmitState()
 T CVGuiScreen::YouForgotToImplementOrDeclareServerClass()
 T CVGuiScreen::~CVGuiScreen()
 T CVScriptGameSystem::FrameUpdatePostEntityThink()
 T CVScriptGameSystem::LevelInitPostEntity()
 T CVScriptGameSystem::LevelInitPreEntity()
 T CVScriptGameSystem::LevelShutdownPostEntity()
 T CVScriptGameSystem::~CVScriptGameSystem()
 T CVScriptSaveRestoreBlockHandler::GetBlockName()
 T CVScriptSaveRestoreBlockHandler::PostRestore()
 T CVScriptSaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CVScriptSaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CVScriptSaveRestoreBlockHandler::Save(ISave*)
 T CVScriptSaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CVScriptSaveRestoreBlockHandler::~CVScriptSaveRestoreBlockHandler()
 T CV_GlobalChange_Commentary(IConVar*, char const*, float)
 T CVarBitVecBase<unsigned short>::ReallocInts(int)
 T CVarBitVecBase<unsigned short>::Resize(int, bool)
 T CVarBitVecSaveRestoreOps<CBitVec<32> >::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CVarBitVecSaveRestoreOps<CBitVec<32> >::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CVarBitVecSaveRestoreOps<CBitVec<32> >::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CVarBitVecSaveRestoreOps<CBitVec<32> >::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CVariantSaveDataOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CVariantSaveDataOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CVariantSaveDataOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CVariantSaveDataOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CVehicleChoreoViewParser::ParseKeyValue(void*, char const*, char const*)
 T CVehicleChoreoViewParser::SetDefaults(void*)
 T CVehicleSoundsParser::CVehicleSoundsParser()
 T CVehicleSoundsParser::ParseKeyValue(void*, char const*, char const*)
 T CVehicleSoundsParser::SetDefaults(void*)
 T CVehicleWaypoint::RecalculateSpline()
 T CVisibilityMonitor::AddEntity(CBaseEntity*, float, bool (*)(CBaseEntity*, CBasePlayer*), bool (*)(CBaseEntity*, CBasePlayer*), bool)
 T CVisibilityMonitor::EntityIsVisibleToPlayer(visibility_target_t const&, CBasePlayer*, int*)
 T CVisibilityMonitor::FrameUpdatePostEntityThink()
 T CVisibilityMonitor::Init()
 T CVisibilityMonitor::LevelInitPostEntity()
 T CVisibilityMonitor::LevelInitPreEntity()
 T CVisibilityMonitor::LevelShutdownPreEntity()
 T CVisibilityMonitor::Name()
 T CVisibilityMonitor::Shutdown()
 T CVisibilityMonitor::~CVisibilityMonitor()
 T CVoiceGameMgr::ClientCommand(CBasePlayer*, CCommand const&)
 T CVoiceGameMgr::ClientConnected(edict_t*)
 T CVoiceGameMgr::Init(IVoiceGameMgrHelper*, int)
 T CVoiceGameMgr::IsPlayerIgnoringPlayer(int, int)
 T CVoiceGameMgr::Update(double)
 T CVoiceGameMgr::UpdateMasks()
 T CVoiceGameMgr::~CVoiceGameMgr()
 T CVoiceGameMgrHelper::CanPlayerHearPlayer(CBasePlayer*, CBasePlayer*, bool&)
 T CVoiceGameMgrHelper::~CVoiceGameMgrHelper()
 T CWC_UpdateIgnoreList::GetDataDescMap()
 T CWC_UpdateIgnoreList::~CWC_UpdateIgnoreList()
 T CWatcherList::AddToList(CBaseEntity*)
 T CWatcherList::NotifyPositionChanged(CBaseEntity*)
 T CWatcherList::NotifyVPhysicsStateChanged(IPhysicsObject*, CBaseEntity*, bool)
 T CWatcherList::~CWatcherList()
 T CWaterBullet::BulletThink()
 T CWaterBullet::GetDataDescMap()
 T CWaterBullet::GetServerClass()
 T CWaterBullet::Precache()
 T CWaterBullet::Touch(CBaseEntity*)
 T CWaterBullet::YouForgotToImplementOrDeclareServerClass()
 T CWaterBullet::~CWaterBullet()
 T CWaterLODControl::CWaterLODControl()
 T CWaterLODControl::GetDataDescMap()
 T CWaterLODControl::GetServerClass()
 T CWaterLODControl::KeyValue(char const*, char const*)
 T CWaterLODControl::ObjectCaps()
 T CWaterLODControl::Spawn()
 T CWaterLODControl::UpdateTransmitState()
 T CWaterLODControl::YouForgotToImplementOrDeclareServerClass()
 T CWaterLODControl::~CWaterLODControl()
 T CWateryDeathLeech::GetDataDescMap()
 T CWateryDeathLeech::LeechThink()
 T CWateryDeathLeech::Precache()
 T CWateryDeathLeech::Spawn()
 T CWateryDeathLeech::~CWateryDeathLeech()
 T CWeaponCubemap::GetServerClass()
 T CWeaponCubemap::HasAnyAmmo()
 T CWeaponCubemap::Precache()
 T CWeaponCubemap::Spawn()
 T CWeaponCubemap::YouForgotToImplementOrDeclareServerClass()
 T CWeaponCubemap::~CWeaponCubemap()
 T CWeaponCycler::Deploy()
 T CWeaponCycler::GetDataDescMap()
 T CWeaponCycler::GetServerClass()
 T CWeaponCycler::Holster(CBaseCombatWeapon*)
 T CWeaponCycler::PrimaryAttack()
 T CWeaponCycler::SecondaryAttack()
 T CWeaponCycler::Spawn()
 T CWeaponCycler::YouForgotToImplementOrDeclareServerClass()
 T CWeaponCycler::~CWeaponCycler()
 T CWeaponItemBase::CWeaponItemBase()
 T CWeaponItemBase::GetDataDescMap()
 T CWeaponItemBase::GetFireRate()
 T CWeaponItemBase::GetServerClass()
 T CWeaponItemBase::GetWeaponID() const
 T CWeaponItemBase::IsAlwaysActive()
 T CWeaponItemBase::PrimaryAttack()
 T CWeaponItemBase::Reload()
 T CWeaponItemBase::SecondaryAttack()
 T CWeaponItemBase::ShouldDrawCrosshair()
 T CWeaponItemBase::Spawn()
 T CWeaponItemBase::ThinkIdle()
 T CWeaponItemBase::WeaponIdle()
 T CWeaponItemBase::YouForgotToImplementOrDeclareServerClass()
 T CWeaponItemBase::~CWeaponItemBase()
 T CWeaponLOSFilter::ShouldHitEntity(IHandleEntity*, int)
 T CWeaponList::LevelShutdownPostEntity()
 T CWeaponList::~CWeaponList()
 T CWeaponPaintGun::CleansePaint()
 T CWeaponPaintGun::GetCurrentPaint()
 T CWeaponPaintGun::HasAnyPaintPower()
 T CWeaponPaintGun::HasPaintPower(PaintPowerType)
 T CWeaponPaintGun::PaintGunThink()
 T CWeaponPaintGun::ResetPaint()
 T CWeaponPaintGun::SetCurrentPaint(PaintPowerType)
 T CWeaponPortalBase::CWeaponPortalBase()
 T CWeaponPortalBase::FireBullets(FireBulletsInfo_t const&)
 T CWeaponPortalBase::GetDataDescMap()
 T CWeaponPortalBase::GetServerClass()
 T CWeaponPortalBase::GetWeaponID() const
 T CWeaponPortalBase::IsPredicted() const
 T CWeaponPortalBase::Materialize()
 T CWeaponPortalBase::ObjectCaps()
 T CWeaponPortalBase::Spawn()
 T CWeaponPortalBase::WeaponSound(WeaponSound_t, float)
 T CWeaponPortalBase::YouForgotToImplementOrDeclareServerClass()
 T CWeaponPortalBase::~CWeaponPortalBase()
 T CWeaponPortalgun::Activate()
 T CWeaponPortalgun::ActivityList()
 T CWeaponPortalgun::ActivityListCount()
 T CWeaponPortalgun::AttemptSnapToPlacementHelper(CProp_Portal*, ComplexPortalTrace_t*, int, PortalPlacedBy_t, TracePortalPlacementInfo_t&)
 T CWeaponPortalgun::AttemptStealCoopPortal(TracePortalPlacementInfo_t&)
 T CWeaponPortalgun::CWeaponPortalgun()
 T CWeaponPortalgun::CanFirePortal1() const
 T CWeaponPortalgun::CanFirePortal2() const
 T CWeaponPortalgun::ChangeTeam(int)
 T CWeaponPortalgun::ClearPortalPositions()
 T CWeaponPortalgun::CreateSounds()
 T CWeaponPortalgun::DelayAttack(float)
 T CWeaponPortalgun::Deploy()
 T CWeaponPortalgun::DestroyEffects()
 T CWeaponPortalgun::DoEffect(int, Vector*)
 T CWeaponPortalgun::DoEffectHolding()
 T CWeaponPortalgun::DoEffectNone()
 T CWeaponPortalgun::DoEffectReady()
 T CWeaponPortalgun::FirePortal(bool, Vector*)
 T CWeaponPortalgun::FirePortal1()
 T CWeaponPortalgun::FirePortal1Helper(inputdata_t&)
 T CWeaponPortalgun::FirePortal2()
 T CWeaponPortalgun::FirePortal2Helper(inputdata_t&)
 T CWeaponPortalgun::FirePortalDirection1(inputdata_t&)
 T CWeaponPortalgun::FirePortalDirection2(inputdata_t&)
 T CWeaponPortalgun::GetAssociatedPortal(bool)
 T CWeaponPortalgun::GetBulletSpread()
 T CWeaponPortalgun::GetDataDescMap()
 T CWeaponPortalgun::GetFireRate()
 T CWeaponPortalgun::GetPrimaryAttackActivity()
 T CWeaponPortalgun::GetServerClass()
 T CWeaponPortalgun::GetWeaponID() const
 T CWeaponPortalgun::GunEffectsThink()
 T CWeaponPortalgun::Holster(CBaseCombatWeapon*)
 T CWeaponPortalgun::InputChargePortal1(inputdata_t&)
 T CWeaponPortalgun::InputChargePortal2(inputdata_t&)
 T CWeaponPortalgun::ItemHolsterFrame()
 T CWeaponPortalgun::OnPickedUp(CBaseCombatCharacter*)
 T CWeaponPortalgun::OnRestore()
 T CWeaponPortalgun::OpenProngs(bool)
 T CWeaponPortalgun::PortalPlaced()
 T CWeaponPortalgun::PortalTraceClippedByBlockers(ComplexPortalTrace_t*, int, Vector const&, bool, TracePortalPlacementInfo_t&)
 T CWeaponPortalgun::PostAttack()
 T CWeaponPortalgun::PreThink()
 T CWeaponPortalgun::Precache()
 T CWeaponPortalgun::PrimaryAttack()
 T CWeaponPortalgun::Reload()
 T CWeaponPortalgun::SecondaryAttack()
 T CWeaponPortalgun::SetCanFirePortal1(bool)
 T CWeaponPortalgun::SetCanFirePortal2(bool)
 T CWeaponPortalgun::SetLinkageGroupID(unsigned char)
 T CWeaponPortalgun::SetPotatosOnPortalgun(bool)
 T CWeaponPortalgun::ShouldDrawCrosshair()
 T CWeaponPortalgun::Spawn()
 T CWeaponPortalgun::StopEffects(bool)
 T CWeaponPortalgun::StopLoopingSounds()
 T CWeaponPortalgun::TogglePotatosThink()
 T CWeaponPortalgun::TraceFirePortal(Vector const&, Vector const&, bool, PortalPlacedBy_t, TracePortalPlacementInfo_t&)
 T CWeaponPortalgun::UpdateOnRemove()
 T CWeaponPortalgun::UpdatePortalAssociation()
 T CWeaponPortalgun::UseDeny()
 T CWeaponPortalgun::WeaponIdle()
 T CWeaponPortalgun::YouForgotToImplementOrDeclareServerClass()
 T CWeaponPortalgun::~CWeaponPortalgun()
 T CWeaponPromoAntennaBall::GetDataDescMap()
 T CWeaponPromoAntennaBall::GetServerClass()
 T CWeaponPromoAntennaBall::YouForgotToImplementOrDeclareServerClass()
 T CWeaponPromoAntennaBall::~CWeaponPromoAntennaBall()
 T CWeaponPromoAntennaEgg::GetDataDescMap()
 T CWeaponPromoAntennaEgg::GetServerClass()
 T CWeaponPromoAntennaEgg::YouForgotToImplementOrDeclareServerClass()
 T CWeaponPromoAntennaEgg::~CWeaponPromoAntennaEgg()
 T CWeaponPromoHelmetBall::GetDataDescMap()
 T CWeaponPromoHelmetBall::GetServerClass()
 T CWeaponPromoHelmetBall::YouForgotToImplementOrDeclareServerClass()
 T CWeaponPromoHelmetBall::~CWeaponPromoHelmetBall()
 T CWeaponPromoHelmetEgg::GetDataDescMap()
 T CWeaponPromoHelmetEgg::GetServerClass()
 T CWeaponPromoHelmetEgg::YouForgotToImplementOrDeclareServerClass()
 T CWeaponPromoHelmetEgg::~CWeaponPromoHelmetEgg()
 T CWeeksBasedHoliday::IsActive(CRTime const&)
 T CWeeksBasedHoliday::~CWeeksBasedHoliday()
 T CWeightButton::CreateVPhysics()
 T CWeightButton::GetDataDescMap()
 T CWeightButton::Spawn()
 T CWeightButton::TriggerThink()
 T CWeightButton::~CWeightButton()
 T CWindowPane::CreateWindowPane(Vector const&, QAngle const&)
 T CWindowPane::Die()
 T CWindowPane::GetDataDescMap()
 T CWindowPane::PaneTouch(CBaseEntity*)
 T CWindowPane::Precache()
 T CWindowPane::Spawn()
 T CWindowPane::~CWindowPane()
 T CWorld::CWorld()
 T CWorld::DecalTrace(CGameTrace*, char const*)
 T CWorld::GetDataDescMap()
 T CWorld::GetDisplayTitle() const
 T CWorld::GetServerClass()
 T CWorld::KeyValue(char const*, char const*)
 T CWorld::Precache()
 T CWorld::RequiredEdictIndex()
 T CWorld::Restore(IRestore&)
 T CWorld::SetDisplayTitle(bool)
 T CWorld::Spawn()
 T CWorld::UpdateOnRemove()
 T CWorld::VPhysicsCollision(int, gamevcollisionevent_t*)
 T CWorld::VPhysicsFriction(IPhysicsObject*, float, int, int)
 T CWorld::YouForgotToImplementOrDeclareServerClass()
 T CWorld::~CWorld()
 T CWorldItem::GetDataDescMap()
 T CWorldItem::KeyValue(char const*, char const*)
 T CWorldItem::Spawn()
 T CWorldItem::~CWorldItem()
 T CWreckage::GetDataDescMap()
 T CWreckage::Precache()
 T CWreckage::Spawn()
 T CWreckage::Think()
 T CWreckage::~CWreckage()
 T Calc3WayBlendIndices(int, int, float, float, mstudioseqdesc_t const&, int*, float*)
 T CalcAnimation(CStudioHdr const*, Vector*, Quaternion*, mstudioseqdesc_t&, int, int, float, int)
 T CalcBoneAdj(CStudioHdr const*, Vector*, Quaternion*, float const*, int)
 T CalcBoneDerivatives(Vector&, Vector&, matrix3x4_t const&, matrix3x4_t const&, float)
 T CalcBonePosition(int, float, Vector const&, Vector const&, mstudio_rle_anim_t const*, Vector&)
 T CalcBoneQuaternion(int, float, Quaternion const&, RadianEuler const&, Vector const&, int, Quaternion const&, mstudio_rle_anim_t const*, Quaternion&)
 T CalcClosestPointOnAABB(Vector const&, Vector const&, Vector const&, Vector&)
 T CalcClosestPointOnLine(Vector const&, Vector const&, Vector const&, Vector&, float*)
 T CalcClosestPointOnLineSegment(Vector const&, Vector const&, Vector const&, Vector&, float*)
 T CalcDecompressedAnimation(mstudiocompressedikerror_t const*, int, float, Vector&, Quaternion&)
 T CalcDistanceSqrToLine2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
 T CalcDistanceSqrToLineSegment(Vector const&, Vector const&, Vector const&, float*)
 T CalcDistanceToLine(Vector const&, Vector const&, Vector const&, float*)
 T CalcDistanceToLine2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
 T CalcDistanceToLineSegment(Vector const&, Vector const&, Vector const&, float*)
 T CalcLineToLineIntersectionSegment(Vector const&, Vector const&, Vector const&, Vector const&, Vector*, Vector*, float*, float*)
 T CalcPoseSingle(CStudioHdr const*, Vector*, QuaternionAligned*, mstudioseqdesc_t&, int, float, float const*, int, float)
 T CalcSqrDistanceToAABB(Vector const&, Vector const&, Vector const&)
 T CalculateBulletDamageForce(CTakeDamageInfo*, int, Vector const&, Vector const&, float)
 T CalculateDefaultPhysicsDamage(int, gamevcollisionevent_t*, float, bool, int&, string_t, bool)
 T CalculateExplosiveDamageForce(CTakeDamageInfo*, Vector const&, Vector const&, float)
 T CalculateMeleeDamageForce(CTakeDamageInfo*, Vector const&, Vector const&, float)
 T CalculateObjectStress(IPhysicsObject*, CBaseEntity*, vphysics_objectstress_t*)
 T CalculatePhysicsImpactDamage(int, gamevcollisionevent_t*, impactdamagetable_t const&, float, bool, int&, bool)
 T CanEmitCaption(unsigned int)
 T CanOverrideEnvZoomOwner(CBaseEntity*)
 T CanSeePositionThroughPortal(Vector const&, Vector const&, Vector const&, CProp_Portal*)
 T CaptionLookup_t::SetHash(char const*)
 T CaselessStringLessThan(char const* const&, char const* const&)
 T CatapultLaunchVelocityMultiplier()
 T Catmull_Rom_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T Catmull_Rom_Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T Catmull_Rom_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T Catmull_Rom_Spline_Tangent(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T CellInfo::GetWorldPosition() const
 T CellInfo::SetPortalSurface(bool)
 T ChallengePlayersReady()
 T ChangeLevel_DestinationMapName()
 T ChangeLevel_GetLandmarkName()
 T ChangeLevel_OriginMapName()
 T CharacterSetBuild(characterset_t*, char const*)
 T CheckCliff(Vector const*, NavDirType, bool)
 T CheckForClimbableSurface(Vector const&, Vector const&)
 T CheckImage::Paint()
 T CheckImage::~CheckImage()
 T CheckSwapProximity(CPortal_Player*, CPortal_Player*)
 T CheckSwapThroughPortals(CPortal_Player*, CProp_Portal*, CPortal_Player*, CProp_Portal*)
 T ClassifyCorners(Vector*, Vector&, Vector&, Vector&, Vector&)
 T ClassifySniperSpot(HidingSpot*)
 T CleanserVortexTraceEnum::EnumElement(IHandleEntity*)
 T CleanserVortexTraceEnum::GetCount() const
 T CleanupDMX(CDmxElement*)
 T ClearBounds(Vector&, Vector&)
 T ClearClientUI()
 T ClearDebugHistory()
 T ClearModelSoundsCache()
 T ClearMultiDamage()
 T ClientActive(edict_t*, bool)
 T ClientCommand(CBasePlayer*, CCommand const&)
 T ClientData_Update(CBasePlayer*)
 T ClientFullyConnect(edict_t*)
 T ClientGamePrecache()
 T ClientGamePrecachePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T ClientPrecache()
 T ClientPrecachePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T ClientPrint(CBasePlayer*, int, char const*, char const*, char const*, char const*, char const*)
 T ClientPutInServer(edict_t*, char const*)
 T ClipLinkedGeometry(GeneratePolyhedronFromPlanes_UnorderedPolygonLL*, GeneratePolyhedronFromPlanes_UnorderedLineLL*, GeneratePolyhedronFromPlanes_UnorderedPointLL*, int, float __vector(4) const*, int, float, bool, float __vector(4))
 T ClipPolyToPlane(Vector*, int, Vector*, Vector const&, float, float)
 T ClipPolyToPlane_SIMD(float __vector(4)*, int, float __vector(4)*, float __vector(4) const&, float)
 T ClipPolyhedron(CPolyhedron const*, float const*, int, float, bool)
 T ClonePhysObject(IPhysicsObject*, IPhysicsEnvironment*, void*)
 T Cmd_ShowtriggersToggle_f(CCommand const&)
 T ColorCorrectionSystem()
 T ColumnButton::ApplySchemeSettings(vgui::IScheme*)
 T ColumnButton::OnMousePressed(ButtonCode_t)
 T ColumnButton::~ColumnButton()
 T ComboBox_Factory()
 T CommandNavAddToSelectedSet()
 T CommandNavAnalyze()
 T CommandNavAnalyzeScripted(CCommand const&)
 T CommandNavAvoid()
 T CommandNavBeginArea()
 T CommandNavBeginDeselecting()
 T CommandNavBeginDragDeselecting()
 T CommandNavBeginDragSelecting()
 T CommandNavBeginSelecting()
 T CommandNavBeginShiftXY()
 T CommandNavBuildLadder()
 T CommandNavCenterInWorld()
 T CommandNavCheckFileConsistency()
 T CommandNavClearSelectedSet()
 T CommandNavClearWalkableMarks()
 T CommandNavCompressID()
 T CommandNavConnect()
 T CommandNavCornerSelect()
 T CommandNavCrouch()
 T CommandNavDelete()
 T CommandNavDeleteMarked()
 T CommandNavDisconnect()
 T CommandNavDontHide()
 T CommandNavEndArea()
 T CommandNavEndDeselecting()
 T CommandNavEndDragDeselecting()
 T CommandNavEndDragSelecting()
 T CommandNavEndSelecting()
 T CommandNavEndShiftXY()
 T CommandNavGenerate()
 T CommandNavGenerateIncremental()
 T CommandNavJump()
 T CommandNavLadderFlip()
 T CommandNavLoad()
 T CommandNavLowerDragVolumeMax()
 T CommandNavLowerDragVolumeMin()
 T CommandNavMakeSniperSpots()
 T CommandNavMark(CCommand const&)
 T CommandNavMarkUnnamed()
 T CommandNavMarkWalkable()
 T CommandNavMerge()
 T CommandNavNoHostages()
 T CommandNavNoJump()
 T CommandNavPlaceFloodFill()
 T CommandNavPlaceList()
 T CommandNavPlacePick()
 T CommandNavPlaceReplace(CCommand const&)
 T CommandNavPlaceSet()
 T CommandNavPrecise()
 T CommandNavRaiseDragVolumeMax()
 T CommandNavRaiseDragVolumeMin()
 T CommandNavRecallSelectedSet()
 T CommandNavRemoveFromSelectedSet()
 T CommandNavRemoveJumpAreas()
 T CommandNavRun()
 T CommandNavSave()
 T CommandNavSelectInvalidAreas()
 T CommandNavSetPlaceMode(CCommand const&)
 T CommandNavSplice()
 T CommandNavSplit()
 T CommandNavStand()
 T CommandNavStop()
 T CommandNavStoreSelectedSet()
 T CommandNavStrip()
 T CommandNavToggleDeselecting()
 T CommandNavToggleInSelectedSet()
 T CommandNavTogglePlaceMode()
 T CommandNavTogglePlacePainting()
 T CommandNavToggleSelectedSet()
 T CommandNavToggleSelecting()
 T CommandNavTransient()
 T CommandNavUnmark()
 T CommandNavUsePlace(CCommand const&)
 T CommandNavWalk()
 T CommandNavWarpToMark()
 T CommentarySystem_PePlayerRunCommand(CBasePlayer*, CUserCmd*)
 T ComputeAABBContactsWithBrushEntity_Old(CUtlVector<BrushContact, CUtlMemory<BrushContact, int> >&, cplane_t const*, int, Vector const&, Vector const&, Vector const&, CBaseEntity*, int)
 T ComputeAABBContactsWithBrushEntity_SIMD(CUtlVector<BrushContact, CUtlMemory<BrushContact, int> >&, cplane_t const*, int, Vector const&, Vector const&, Vector const&, CBaseEntity*, int)
 T ComputeBouncePostVelocityNoReflect(Vector const&, Vector const&, Vector const&)
 T ComputeBouncePostVelocityReflection(Vector const&, Vector const&, Vector const&)
 T ComputeContactPlane(cplane_t&, int&, CMesh const&, Vector const&)
 T ComputeContactPlane_SIMD(float __vector(4)&, CMesh const&, float __vector(4) const&)
 T ComputeJumpVelocity(Vector const&, Vector const&, float)
 T ComputePlanarDistances(GeneratePolyhedronFromPlanes_UnorderedPointLL*, int, float __vector(4))
 T ComputePlayerMatrix(CBasePlayer*, matrix3x4_t&)
 T ComputeRotSpeedToAlignAxes(Vector const&, Vector const&, Vector const&, float, float, float)
 T ComputeSeparatingPlane(Vector const&, QAngle const&, Vector const&, Vector const&, Vector const&, QAngle const&, Vector const&, Vector const&, float, cplane_t*)
 T ComputeTrianglePlane(Vector const&, Vector const&, Vector const&, Vector&, float&)
 T ComputeWallJumpHelperVelocity(Vector const&, Vector const&)
 T ConCommand::AutoCompleteSuggest(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T ConCommand::CanAutoComplete()
 T ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
 T ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
 T ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
 T ConCommand::Dispatch(CCommand const&)
 T ConCommand::IsCommand() const
 T ConCommand::~ConCommand()
 T ConCommandBase::AddFlags(int)
 T ConCommandBase::Create(char const*, char const*, int)
 T ConCommandBase::GetDLLIdentifier() const
 T ConCommandBase::GetFlags() const
 T ConCommandBase::GetHelpText() const
 T ConCommandBase::GetName() const
 T ConCommandBase::Init()
 T ConCommandBase::IsFlagSet(int) const
 T ConCommandBase::IsRegistered() const
 T ConCommandBase::RemoveFlags(int)
 T ConVar::AddFlags(int)
 T ConVar::ChangeStringValue(char const*, float)
 T ConVar::ClampValue(float&)
 T ConVar::ConVar(char const*, char const*, int)
 T ConVar::ConVar(char const*, char const*, int, char const*)
 T ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
 T ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
 T ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
 T ConVar::Create(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
 T ConVar::GetBaseName() const
 T ConVar::GetDefault() const
 T ConVar::GetFlags() const
 T ConVar::GetHelpText() const
 T ConVar::GetName() const
 T ConVar::GetSplitScreenPlayerSlot() const
 T ConVar::Init()
 T ConVar::InternalSetColorValue(Color)
 T ConVar::InternalSetFloatValue(float)
 T ConVar::InternalSetIntValue(int)
 T ConVar::InternalSetValue(char const*)
 T ConVar::IsCommand() const
 T ConVar::IsFlagSet(int) const
 T ConVar::IsRegistered() const
 T ConVar::SetValue(Color)
 T ConVar::SetValue(char const*)
 T ConVar::SetValue(float)
 T ConVar::SetValue(int)
 T ConVar::~ConVar()
 T ConVarRef::ConVarRef(IConVar*)
 T ConVarRef::ConVarRef(char const*)
 T ConVarRef::ConVarRef(char const*, bool)
 T ConVarRef::Init(char const*, bool)
 T ConVarRef::IsValid() const
 T ConVar_Register(int, IConCommandBaseAccessor*)
 T ConVar_Unregister()
 T ConcatTransforms(matrix3x4_t const&, matrix3x4_t const&, matrix3x4_t&)
 T ConcatTransforms_Aligned(matrix3x4a_t const&, matrix3x4a_t const&, matrix3x4a_t&)
 T ConceptIDLessFunc(CUtlSymbol const&, CUtlSymbol const&)
 T ConceptStringLessFunc(string_t const&, string_t const&)
 T ConnectInterfaces(void* (**)(char const*, int*), int)
 T ConnectTier1Libraries(void* (**)(char const*, int*), int)
 T ConnectTier2Libraries(void* (**)(char const*, int*), int)
 T ConnectTier3Libraries(void* (**)(char const*, int*), int)
 T ConsoleFireTargets(CBasePlayer*, char const*)
 T ConsoleKillTarget(CBasePlayer*, char const*)
 T ConvertLinkedGeometryToPolyhedron(GeneratePolyhedronFromPlanes_UnorderedPolygonLL*, GeneratePolyhedronFromPlanes_UnorderedLineLL*, GeneratePolyhedronFromPlanes_UnorderedPointLL*, bool, float __vector(4))
 T ConvertToDissolvingProp(CBaseAnimating*)
 T CoopGetBranchTotalLevelCount(int)
 T CoopGetLevelsCompletedThisBranch()
 T CoopGetNumPortalsPlaced()
 T CoopGladosBlowUpBots()
 T CoopSetCameFromLastDLCMap(bool)
 T CoopSetMapRunTime(float)
 T CopyUniqueId(UniqueId_t const&, UniqueId_t*)
 T CountdownTimer::NetworkStateChanged()
 T CountdownTimer::NetworkStateChanged(void*)
 T CountdownTimer::Now() const
 T CreateBoneFollowersFromRagdoll(CBaseAnimating*, CBoneFollowerManager*, vcollide_t*)
 T CreateEntitiesInTransitionList(CSaveRestoreData*, int)
 T CreateEntityByName(char const*, int, bool)
 T CreateEntityTransitionList(CSaveRestoreData*, int)
 T CreateGameRulesObject(char const*)
 T CreateInfoCameraLink(CBaseEntity*, CPointCamera*)
 T CreateInterface
 T CreateJob_CGCDev_NewItemRequestResponse(GCSDK::CGCClient*, void*)
 T CreateJob_CGCReplicateConVars(GCSDK::CGCClient*, void*)
 T CreateJob_CGCUpdateConVar(GCSDK::CGCClient*, void*)
 T CreateJob_CGCUpdateItemSchema(GCSDK::CGCClient*, void*)
 T CreateKeepUpright(Vector const&, QAngle const&, CBaseEntity*, float, bool)
 T CreateNetworkStringTables_GameRules()
 T CreatePaintBomb(PaintPowerType)
 T CreatePaintBombExplosion(PaintPowerType, Vector const&, bool)
 T CreatePhysExplosion(Vector, float, float, string_t, float, int)
 T CreatePhysicsProp(char const*, Vector const&, Vector const&, IHandleEntity const*, bool, char const*)
 T CreatePlayerLoadSave(Vector, float, float, float)
 T CreatePortalPlayerAnimState(CPortal_Player*)
 T CreateProp(char const*, Vector const&, char const*, int)
 T CreateRagGib(char const*, Vector const&, QAngle const&, Vector const&, float, bool)
 T CreateServerRagdoll(CBaseAnimating*, int, CTakeDamageInfo const&, int, bool)
 T CreateServerRagdollAttached(CBaseAnimating*, Vector const&, int, int, IPhysicsObject*, CBaseAnimating*, int, Vector const&, int, Vector const&)
 T CreateServerRagdollSubmodel(CBaseAnimating*, char const*, Vector const&, QAngle const&, int)
 T CreateServerStatue(CBaseAnimating*, int)
 T CreateStuckTable()
 T CreateUniqueId(UniqueId_t*)
 T CreateVGuiScreen(char const*, char const*, CBaseEntity*, CBaseEntity*, int)
 T CreateWeaponInfo()
 T Create_CvarToggleCheckButton()
 T CrossProduct(float const*, float const*, float*)
 T Cubic_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T DMXAlloc(unsigned long)
 T DamageDatabase::FindPotentialDamageEffects(int*, int, DamagedEntityType, int, int) const
 T DamageDatabase::GetDamageInfoVector(DamagedEntityType) const
 T DamageDatabase::LevelInitPreEntity()
 T DamageDatabase::PrecacheAssets() const
 T DamageDatabase::~DamageDatabase()
 T DebugConnectMsg(int, int, char const*, ...)
 T DebugConstraint(CBaseEntity*)
 T DebugDrawContactPoints(IPhysicsObject*)
 T DebugDrawLine(Vector const&, Vector const&, int, int, int, bool, float)
 T DebugPortalCollideables_f(CCommand const&)
 T DecommitDMXMemory()
 T DefaultCompletionFunc(char const*, char (*) [64])
 T DefaultConditionalErrorProc(char const*)
 T DefaultConditionalSymbolProc(char const*)
 T DefaultPortalHalfHeight()
 T DelayedSchemaData_GCDirectData::InitializeSchema(CEconItemSchema*)
 T DelayedSchemaData_GCDirectData::~DelayedSchemaData_GCDirectData()
 T DelayedSchemaData_HTTPResponseData::DelayedSchemaData_HTTPResponseData(ISteamHTTP*, unsigned int, unsigned int, unsigned int)
 T DelayedSchemaData_HTTPResponseData::InitializeSchema(CEconItemSchema*)
 T DelayedSchemaData_HTTPResponseData::~DelayedSchemaData_HTTPResponseData()
 T DeleteAll(AI_Waypoint_t*)
 T DeltaV(float, float, float)
 T DescendingPaintPriorityCompare(PaintPowerInfo_t const*, PaintPowerInfo_t const*)
 T DestroyVGuiScreen(CVGuiScreen*)
 T DetachAttachedRagdollsForEntity(CBaseEntity*)
 T DevMsg(CAI_BaseNPC*, char const*, ...)
 T DevMsg(CAI_BaseNPC*, unsigned int, char const*, ...)
 T DisableNoClip(CBasePlayer*)
 T DisconnectInterfaces()
 T DisconnectTier1Libraries()
 T DisconnectTier2Libraries()
 T DisconnectTier3Libraries()
 T DispatchDryBombParticleEffect(Vector const&, PaintPowerType, QAngle)
 T DispatchEffect(IRecipientFilter&, float, char const*, CEffectData const&)
 T DispatchEffect(char const*, CEffectData const&)
 T DispatchParticleEffect(char const*, ParticleAttachment_t, CBaseEntity*, char const*, bool, int, IRecipientFilter*)
 T DispatchParticleEffect(char const*, ParticleAttachment_t, CBaseEntity*, int, bool, int, IRecipientFilter*, bool)
 T DispatchParticleEffect(char const*, Vector, QAngle, CBaseEntity*, int, IRecipientFilter*)
 T DispatchParticleEffect(char const*, Vector, Vector, QAngle, CBaseEntity*, int, IRecipientFilter*)
 T DispatchSpawn(CBaseEntity*, bool)
 T DistanceToRay(Vector const&, Vector const&, Vector const&, float*, Vector*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<CParticleSystemDefinition>(CParticleSystemDefinition*)
 T DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Button>(vgui::Button*)
 T DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Label>(vgui::Label*)
 T DmxElementUnpackStructure_t* vgui::DmxElementUnpackInitvgui<vgui::Panel>(vgui::Panel*)
 T DoIncludeScript(char const*, HSCRIPT__*)
 T DoSpark(CBaseEntity*, Vector const&, int, int, bool, Vector const&)
 T Dragger::Dragger(int)
 T Dragger::OnCursorMoved(int, int)
 T Dragger::OnMouseDoublePressed(ButtonCode_t)
 T Dragger::OnMousePressed(ButtonCode_t)
 T Dragger::OnMouseReleased(ButtonCode_t)
 T Dragger::SetMovable(bool)
 T Dragger::~Dragger()
 T DrawAllDebugOverlays()
 T DrawDebugOverlayForShadowClone(CPhysicsShadowClone*)
 T DrawMessageEntities()
 T DrawPaintPowerContactInfo(PaintPowerInfo_t const&, Color const&, float, bool)
 T DumpActiveCollision(CPortalSimulator const*, char const*)
 T DumpEntity(CBaseEntity*)
 T DumpEntityFactories_f()
 T DumpScriptScope(CBasePlayer*, char const*)
 T DustTrail::DustTrail()
 T DustTrail::GetDataDescMap()
 T DustTrail::GetServerClass()
 T DustTrail::KeyValue(char const*, char const*)
 T DustTrail::YouForgotToImplementOrDeclareServerClass()
 T DustTrail::~DustTrail()
 T ENTINDEX(CBaseEntity*)
 T Editor_CheckVersion(char const*, int, bool)
 T Editor_CreateNode(char const*, int, float, float, float, bool)
 T Editor_CreateNodeLink(int, int, bool)
 T Editor_DeleteNode(int, bool)
 T Editor_DeleteNodeLink(int, int, bool)
 T Editor_RotateEntity(char const*, float, float, float, QAngle const&, bool)
 T Editor_SetKeyValue(char const*, float, float, float, char const*, char const*, bool)
 T EffectsPrecachePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T EmitParticles(CBaseAnimating*, DamagedEntityType, int, int)
 T EmitSound_t::EmitSound_t(CSoundParameters const&)
 T EnableNoClip(CBasePlayer*)
 T EndDMXContext(bool)
 T EndRestoreEntities()
 T EntityBeamHistory_t::IsDifferentBeam(CTrigger_TractorBeam*)
 T EntityBeamHistory_t::UpdateBeam(CTrigger_TractorBeam*)
 T EntityFactoryDictionary()
 T EntityMatrix::InitFromEntity(CBaseEntity*, int)
 T EntityMatrix::InitFromEntityLocal(CBaseEntity*)
 T EntityMessageBegin(CBaseEntity*, bool)
 T EntityNamesMatchCStrings(char const*, char const*)
 T EntityParticleTrailInfo_t::EntityParticleTrailInfo_t()
 T EntityParticleTrailInfo_t::NetworkStateChanged()
 T EntityParticleTrailInfo_t::NetworkStateChanged(void*)
 T EntityPhysics_CreateSolver(CBaseEntity*, CBaseEntity*, bool, float)
 T EntityPortalled(CPortal_Base2D*, CBaseEntity*, Vector const&, QAngle const&, bool)
 T EntityTouch_Add(CBaseEntity*)
 T EntityTouch_Remove(CBaseEntity*)
 T EventGroup::EventGroup(EventGroup const&)
 T EventList_AddEventEntry(char const*, int, bool, int)
 T EventList_Free()
 T EventList_GetEventType(int)
 T EventList_IndexForName(char const*)
 T EventList_Init()
 T EventList_NameForIndex(int)
 T EventList_RegisterPrivateEvent(char const*)
 T EventList_RegisterSharedEvents()
 T ExpandAABB(Vector&, Vector&, Vector const&)
 T ExplosionCreate(Vector const&, QAngle const&, CBaseEntity*, int, int, bool, float, bool, bool, int)
 T ExplosionCreate(Vector const&, QAngle const&, CBaseEntity*, int, int, int, float, CBaseEntity*, int, CHandle<CBaseEntity> const*, Class_T)
 T ExtendRadiusThroughPortals(Vector const&, QAngle const&, float, CUtlVector<PortalRadiusExtension_t, CUtlMemory<PortalRadiusExtension_t, int> >&)
 T ExtractAnimValue(int, mstudioanimvalue_t*, float, float&, float&)
 T ExtractBbox(CStudioHdr*, int, Vector&, Vector&)
 T ExtractKeyvalue(void*, typedescription_t*, int, char const*, char*, int)
 T ExtractSingleFrame(unsigned char, unsigned char*, unsigned char*&, Quaternion&, Vector&, bool, mstudiolinearbone_t const*, int)
 T ExtractTwoFrames(unsigned char, float, unsigned char*, unsigned char*&, int, Quaternion&, Vector&, bool, mstudiolinearbone_t const*, int)
 T FBoxVisible(CBaseEntity*, CBaseEntity*, Vector&, float)
 T FactoryList_Retrieve(factorylist_t&)
 T FactoryList_Store(factorylist_t const&)
 T FileWeaponInfo_t::FileWeaponInfo_t()
 T FileWeaponInfo_t::Parse(KeyValues*, char const*)
 T FilterDamageType::GetDataDescMap()
 T FilterDamageType::PassesDamageFilterImpl(CTakeDamageInfo const&)
 T FilterDamageType::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T FilterDamageType::~FilterDamageType()
 T FilterTeam::GetDataDescMap()
 T FilterTeam::PassesFilterImpl(CBaseEntity*, CBaseEntity*)
 T FilterTeam::~FilterTeam()
 T FindBodygroupByName(CStudioHdr*, char const*)
 T FindBumpVectorInCorner(Vector const&, Vector const&, Vector const&, Vector const&, Vector const&, Vector const&, Vector const&, Vector const&)
 T FindClosestPassableSpace(CBaseEntity*, Vector const&, unsigned int)
 T FindConvexShapeLooseAABB(float __vector(4) const*, int, Vector*, Vector*)
 T FindEmptySpace(CBaseEntity*, unsigned int, Vector const&, Vector const&, Vector const&, Vector*)
 T FindGroundZFromPoint(Vector const&, Vector const&)
 T FindHitboxSetByName(CStudioHdr*, char const*)
 T FindMaxContact(IPhysicsObject*, float, IPhysicsObject**, Vector*, Vector*)
 T FindOrAddPanelAnimationMap(char const*)
 T FindPhysicsAnchor(string_t, hl_constraint_info_t&, int, CBaseEntity*)
 T FindPhysicsObjectByName(char const*, CBaseEntity*)
 T FindPooledString(char const*)
 T FindTransitionSequence(CStudioHdr*, int, int, int*)
 T FirePaintBlob(Vector const&, Vector const&, Vector const&, Vector const&, int, float, float, float, float, float, float, float, float, float, bool, bool, CBaseEntity*, int)
 T FireSystem_AddHeatInRadius(Vector const&, float, float)
 T FireTargets(char const*, CBaseEntity*, CBaseEntity*, USE_TYPE, float)
 T FitPortalAroundOtherPortals(CProp_Portal const*, Vector&, Vector const&, Vector const&, Vector const&, float, float)
 T FitPortalOnSurface(CProp_Portal const*, Vector&, Vector const&, Vector const&, Vector const&, Vector const&, Vector const&, Vector const&, PortalPlacedBy_t, ITraceFilter*, float, float, int, CPortalCornerFitData const*, int const*, int const*)
 T FixPlayerCrouchStuck(CBasePlayer*)
 T FixPlayerCrouchStuck(CPortal_Player*)
 T FixupAngles(QAngle&)
 T FizzlerEffects::Create(CBaseEntity*)
 T FizzlerEffects::FizzleThink()
 T FizzlerEffects::GetDataDescMap()
 T FizzlerEffects::GetServerClass()
 T FizzlerEffects::Spawn()
 T FizzlerEffects::UpdateTransmitState()
 T FizzlerEffects::YouForgotToImplementOrDeclareServerClass()
 T FizzlerEffects::~FizzlerEffects()
 T FizzlerMultiOriginSoundPlayer::Create(IRecipientFilter&, char const*)
 T FizzlerMultiOriginSoundPlayer::GetDataDescMap()
 T FizzlerMultiOriginSoundPlayer::GetServerClass()
 T FizzlerMultiOriginSoundPlayer::RemoveThink()
 T FizzlerMultiOriginSoundPlayer::Spawn()
 T FizzlerMultiOriginSoundPlayer::UpdateTransmitState()
 T FizzlerMultiOriginSoundPlayer::YouForgotToImplementOrDeclareServerClass()
 T FizzlerMultiOriginSoundPlayer::~FizzlerMultiOriginSoundPlayer()
 T FogSystem()
 T FoundryHelpers_ClearEntityHighlightEffects()
 T FourVectors::CalcClosestPointOnLineSIMD(FourVectors const&, FourVectors const&, FourVectors const&, FourVectors&, float __vector(4)*)
 T FreeContainingEntity(edict_t*)
 T GCClientSystem()
 T GCSDK::CGCClient::BInit(ISteamGameCoordinator*)
 T GCSDK::CGCClient::BMainLoop(unsigned long long, unsigned long long)
 T GCSDK::CGCClient::BSendMessage(GCSDK::CMsgBase_t<GCSDK::GCMsgHdrEx_t> const&)
 T GCSDK::CGCClient::BSendMessage(GCSDK::IProtoBufMsg const&)
 T GCSDK::CGCClient::CGCClient(ISteamGameCoordinator*, bool)
 T GCSDK::CGCClient::FindSOCache(CSteamID const&, bool)
 T GCSDK::CGCClient::OnGCMessageAvailable(GCMessageAvailable_t*)
 T GCSDK::CGCClient::RemoveSOCache(CSteamID const&)
 T GCSDK::CGCClient::Test_AddEvent(CTestEvent*)
 T GCSDK::CGCClient::Test_CacheSubscribed(CSteamID const&)
 T GCSDK::CGCClient::Uninit()
 T GCSDK::CGCClient::~CGCClient()
 T GCSDK::CGCClientJob::BYieldingRunGCJob()
 T GCSDK::CGCClientJob::BYieldingRunJob(void*)
 T GCSDK::CGCClientJob::BYieldingRunJobFromMsg(GCSDK::IMsgNetPacket*)
 T GCSDK::CGCClientJob::CHeartbeatsBeforeTimeout()
 T GCSDK::CGCClientJob::GetServerType()
 T GCSDK::CGCClientSharedObjectCache::AddListener(GCSDK::ISharedObjectListener*)
 T GCSDK::CGCClientSharedObjectCache::BCreateFromMsg(int, void const*, unsigned int)
 T GCSDK::CGCClientSharedObjectCache::BDestroyFromMsg(int, void const*, unsigned int)
 T GCSDK::CGCClientSharedObjectCache::BParseCacheSubscribedMsg(CMsgSOCacheSubscribed const&)
 T GCSDK::CGCClientSharedObjectCache::BUpdateFromMsg(int, void const*, unsigned int)
 T GCSDK::CGCClientSharedObjectCache::CGCClientSharedObjectCache(CSteamID const&)
 T GCSDK::CGCClientSharedObjectCache::CreateTypeCache(int) const
 T GCSDK::CGCClientSharedObjectCache::GetOwner() const
 T GCSDK::CGCClientSharedObjectCache::NotifyUnsubscribe()
 T GCSDK::CGCClientSharedObjectCache::RemoveListener(GCSDK::ISharedObjectListener*)
 T GCSDK::CGCClientSharedObjectCache::~CGCClientSharedObjectCache()
 T GCSDK::CGCClientSharedObjectContext::BAddListener(GCSDK::ISharedObjectListener*)
 T GCSDK::CGCClientSharedObjectTypeCache::BCreateFromMsg(void const*, unsigned int, GCSDK::CSharedObject**)
 T GCSDK::CGCClientSharedObjectTypeCache::BDestroyFromMsg(void const*, unsigned int)
 T GCSDK::CGCClientSharedObjectTypeCache::BParseCacheSubscribedMsg(CMsgSOCacheSubscribed_SubscribedType const&)
 T GCSDK::CGCClientSharedObjectTypeCache::BUpdateFromMsg(void const*, unsigned int)
 T GCSDK::CGCClientSharedObjectTypeCache::~CGCClientSharedObjectTypeCache()
 T GCSDK::CGCMsg<MsgGCVerifyCacheSubscription_t>::~CGCMsg()
 T GCSDK::CGCSOCacheSubscribedJob::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T GCSDK::CGCSOCacheSubscribedJob::~CGCSOCacheSubscribedJob()
 T GCSDK::CGCSOCacheSubscriptionCheck::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T GCSDK::CGCSOCacheSubscriptionCheck::~CGCSOCacheSubscriptionCheck()
 T GCSDK::CGCSOCacheUnsubscribedJob::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T GCSDK::CGCSOCacheUnsubscribedJob::~CGCSOCacheUnsubscribedJob()
 T GCSDK::CGCSOCreateJob::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T GCSDK::CGCSOCreateJob::~CGCSOCreateJob()
 T GCSDK::CGCSODestroyJob::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T GCSDK::CGCSODestroyJob::~CGCSODestroyJob()
 T GCSDK::CGCSOUpdateJob::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T GCSDK::CGCSOUpdateJob::~CGCSOUpdateJob()
 T GCSDK::CGCSOUpdateMultipleJob::BYieldingRunGCJob(GCSDK::IMsgNetPacket*)
 T GCSDK::CGCSOUpdateMultipleJob::~CGCSOUpdateMultipleJob()
 T GCSDK::CJob::AddPacketToList(GCSDK::IMsgNetPacket*, unsigned long long)
 T GCSDK::CJob::BRunProxy(void*)
 T GCSDK::CJob::BYieldingRunJob(void*)
 T GCSDK::CJob::BYieldingRunJobFromMsg(GCSDK::IMsgNetPacket*)
 T GCSDK::CJob::BYieldingWaitOneFrame()
 T GCSDK::CJob::CHeartbeatsBeforeTimeout()
 T GCSDK::CJob::CJob(GCSDK::CJobMgr&)
 T GCSDK::CJob::Continue()
 T GCSDK::CJob::EndPause(GCSDK::EJobPauseReason)
 T GCSDK::CJob::GetName() const
 T GCSDK::CJob::GetPauseReasonDescription() const
 T GCSDK::CJob::Heartbeat()
 T GCSDK::CJob::PassLockToJob(GCSDK::CJob*, GCSDK::CLock*)
 T GCSDK::CJob::Pause(GCSDK::EJobPauseReason)
 T GCSDK::CJob::RunCoroutine()
 T GCSDK::CJob::StartJobFromNetworkMsg(GCSDK::IMsgNetPacket*, unsigned long long const&)
 T GCSDK::CJob::UnsetLock(GCSDK::CLock*)
 T GCSDK::CJob::_ReleaseLock(GCSDK::CLock*, bool, char const*, int)
 T GCSDK::CJob::_SetLock(GCSDK::CLock*, char const*, int)
 T GCSDK::CJob::~CJob()
 T GCSDK::CJobMgr::AccumulateStatsofJob(GCSDK::CJob&)
 T GCSDK::CJobMgr::AddToYieldList(GCSDK::CJob&)
 T GCSDK::CJobMgr::BFrameFuncRunSleepingJobs(CLimitTimer&)
 T GCSDK::CJobMgr::BFrameFuncRunYieldingJobs(CLimitTimer&)
 T GCSDK::CJobMgr::BLaunchJobFromNetworkMsg(void*, GCSDK::JobMsgInfo_t const&, GCSDK::IMsgNetPacket*)
 T GCSDK::CJobMgr::BResumeSleepingJobs(CLimitTimer&)
 T GCSDK::CJobMgr::BResumeYieldingJobsFromList(CUtlLinkedList<GCSDK::CJobMgr::JobYielding_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<GCSDK::CJobMgr::JobYielding_t, int>, int> >&, unsigned int, CLimitTimer&)
 T GCSDK::CJobMgr::BRouteMsgToJob(void*, GCSDK::IMsgNetPacket*, GCSDK::JobMsgInfo_t const&)
 T GCSDK::CJobMgr::BYieldingWaitTime(GCSDK::CJob&, unsigned int)
 T GCSDK::CJobMgr::CJobMgr()
 T GCSDK::CJobMgr::CheckForJobTimeouts(CLimitTimer&)
 T GCSDK::CJobMgr::GetNewJobID()
 T GCSDK::CJobMgr::InsertJob(GCSDK::CJob&)
 T GCSDK::CJobMgr::JobSleepingLessFunc(GCSDK::CJobMgr::JobSleeping_t const&, GCSDK::CJobMgr::JobSleeping_t const&)
 T GCSDK::CJobMgr::PauseJob(GCSDK::CJob&, GCSDK::EJobPauseReason)
 T GCSDK::CJobMgr::RecordOrphanedMessage(unsigned int, unsigned long long)
 T GCSDK::CJobMgr::RegisterJobType(GCSDK::JobType_t const*)
 T GCSDK::CJobMgr::RemoveJob(GCSDK::CJob&)
 T GCSDK::CJobMgr::TimeoutJob(GCSDK::CJob&)
 T GCSDK::CJobMgr::WakeupLockedJob(GCSDK::CJob&)
 T GCSDK::CJobMgr::~CJobMgr()
 T GCSDK::CJobTime::CJobTime()
 T GCSDK::CJobTime::CServerMicroSecsPassed() const
 T GCSDK::CJobTime::SetFromJobTime(long long)
 T GCSDK::CJobTime::SetToJobTime()
 T GCSDK::CJobTime::UpdateJobTime(int)
 T GCSDK::CMessageList::GetMessage(unsigned int, char const**, int)
 T GCSDK::CMessageList::TallySendmessage(unsigned int, unsigned int)
 T GCSDK::CMessageList::~CMessageList()
 T GCSDK::CMessageListRegistration::CMessageListRegistration(GCSDK::MsgInfo_t*, int, void*)
 T GCSDK::CMsgBase_t<GCSDK::GCMsgHdrEx_t>::~CMsgBase_t()
 T GCSDK::CNetPacket::AddRef()
 T GCSDK::CNetPacket::CNetPacket()
 T GCSDK::CNetPacket::Init(unsigned char*, int, unsigned char*)
 T GCSDK::CNetPacket::Release()
 T GCSDK::CProtoBufGCClientSendHandler::BAsyncSend(unsigned int, unsigned char const*, unsigned int)
 T GCSDK::CProtoBufMsg<CMsgConVarValue>::BAsyncSend(GCSDK::IProtoBufMsg::IProtoBufSendHandler&) const
 T GCSDK::CProtoBufMsg<CMsgConVarValue>::ExpectingReply(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgConVarValue>::GetClientSteamID() const
 T GCSDK::CProtoBufMsg<CMsgConVarValue>::GetEMsg() const
 T GCSDK::CProtoBufMsg<CMsgConVarValue>::GetJobIDSource() const
 T GCSDK::CProtoBufMsg<CMsgConVarValue>::GetJobIDTarget() const
 T GCSDK::CProtoBufMsg<CMsgConVarValue>::GetSourceAppID() const
 T GCSDK::CProtoBufMsg<CMsgConVarValue>::InitFromPacket(GCSDK::IMsgNetPacket*)
 T GCSDK::CProtoBufMsg<CMsgConVarValue>::OneTimeInit()
 T GCSDK::CProtoBufMsg<CMsgConVarValue>::SetJobIDSource(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgConVarValue>::SetJobIDTarget(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgConVarValue>::SetSourceAppID(unsigned int)
 T GCSDK::CProtoBufMsg<CMsgConVarValue>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgReplicateConVars>::BAsyncSend(GCSDK::IProtoBufMsg::IProtoBufSendHandler&) const
 T GCSDK::CProtoBufMsg<CMsgReplicateConVars>::ExpectingReply(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgReplicateConVars>::GetClientSteamID() const
 T GCSDK::CProtoBufMsg<CMsgReplicateConVars>::GetEMsg() const
 T GCSDK::CProtoBufMsg<CMsgReplicateConVars>::GetJobIDSource() const
 T GCSDK::CProtoBufMsg<CMsgReplicateConVars>::GetJobIDTarget() const
 T GCSDK::CProtoBufMsg<CMsgReplicateConVars>::GetSourceAppID() const
 T GCSDK::CProtoBufMsg<CMsgReplicateConVars>::InitFromPacket(GCSDK::IMsgNetPacket*)
 T GCSDK::CProtoBufMsg<CMsgReplicateConVars>::OneTimeInit()
 T GCSDK::CProtoBufMsg<CMsgReplicateConVars>::SetJobIDSource(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgReplicateConVars>::SetJobIDTarget(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgReplicateConVars>::SetSourceAppID(unsigned int)
 T GCSDK::CProtoBufMsg<CMsgReplicateConVars>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>::BAsyncSend(GCSDK::IProtoBufMsg::IProtoBufSendHandler&) const
 T GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>::CProtoBufMsg(unsigned int)
 T GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>::ExpectingReply(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>::GetClientSteamID() const
 T GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>::GetEMsg() const
 T GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>::GetJobIDSource() const
 T GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>::GetJobIDTarget() const
 T GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>::GetSourceAppID() const
 T GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>::InitFromPacket(GCSDK::IMsgNetPacket*)
 T GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>::OneTimeInit()
 T GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>::SetJobIDSource(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>::SetJobIDTarget(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>::SetSourceAppID(unsigned int)
 T GCSDK::CProtoBufMsg<CMsgRequestItemSchemaData>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::BAsyncSend(GCSDK::IProtoBufMsg::IProtoBufSendHandler&) const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::ExpectingReply(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::GetClientSteamID() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::GetEMsg() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::GetJobIDSource() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::GetJobIDTarget() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::GetSourceAppID() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::InitFromPacket(GCSDK::IMsgNetPacket*)
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::OneTimeInit()
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::SetJobIDSource(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::SetJobIDTarget(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::SetSourceAppID(unsigned int)
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscribed>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::BAsyncSend(GCSDK::IProtoBufMsg::IProtoBufSendHandler&) const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::ExpectingReply(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::GetClientSteamID() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::GetEMsg() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::GetJobIDSource() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::GetJobIDTarget() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::GetSourceAppID() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::InitFromPacket(GCSDK::IMsgNetPacket*)
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::OneTimeInit()
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::SetJobIDSource(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::SetJobIDTarget(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::SetSourceAppID(unsigned int)
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionCheck>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::BAsyncSend(GCSDK::IProtoBufMsg::IProtoBufSendHandler&) const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::CProtoBufMsg(unsigned int)
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::ExpectingReply(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::GetClientSteamID() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::GetEMsg() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::GetJobIDSource() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::GetJobIDTarget() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::GetSourceAppID() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::InitFromPacket(GCSDK::IMsgNetPacket*)
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::OneTimeInit()
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::SetJobIDSource(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::SetJobIDTarget(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::SetSourceAppID(unsigned int)
 T GCSDK::CProtoBufMsg<CMsgSOCacheSubscriptionRefresh>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::BAsyncSend(GCSDK::IProtoBufMsg::IProtoBufSendHandler&) const
 T GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::ExpectingReply(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::GetClientSteamID() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::GetEMsg() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::GetJobIDSource() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::GetJobIDTarget() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::GetSourceAppID() const
 T GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::InitFromPacket(GCSDK::IMsgNetPacket*)
 T GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::OneTimeInit()
 T GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::SetJobIDSource(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::SetJobIDTarget(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::SetSourceAppID(unsigned int)
 T GCSDK::CProtoBufMsg<CMsgSOCacheUnsubscribed>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::BAsyncSend(GCSDK::IProtoBufMsg::IProtoBufSendHandler&) const
 T GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::ExpectingReply(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::GetClientSteamID() const
 T GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::GetEMsg() const
 T GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::GetJobIDSource() const
 T GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::GetJobIDTarget() const
 T GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::GetSourceAppID() const
 T GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::InitFromPacket(GCSDK::IMsgNetPacket*)
 T GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::OneTimeInit()
 T GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::SetJobIDSource(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::SetJobIDTarget(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::SetSourceAppID(unsigned int)
 T GCSDK::CProtoBufMsg<CMsgSOMultipleObjects>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgSOSingleObject>::BAsyncSend(GCSDK::IProtoBufMsg::IProtoBufSendHandler&) const
 T GCSDK::CProtoBufMsg<CMsgSOSingleObject>::ExpectingReply(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgSOSingleObject>::GetClientSteamID() const
 T GCSDK::CProtoBufMsg<CMsgSOSingleObject>::GetEMsg() const
 T GCSDK::CProtoBufMsg<CMsgSOSingleObject>::GetJobIDSource() const
 T GCSDK::CProtoBufMsg<CMsgSOSingleObject>::GetJobIDTarget() const
 T GCSDK::CProtoBufMsg<CMsgSOSingleObject>::GetSourceAppID() const
 T GCSDK::CProtoBufMsg<CMsgSOSingleObject>::InitFromPacket(GCSDK::IMsgNetPacket*)
 T GCSDK::CProtoBufMsg<CMsgSOSingleObject>::OneTimeInit()
 T GCSDK::CProtoBufMsg<CMsgSOSingleObject>::SetJobIDSource(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgSOSingleObject>::SetJobIDTarget(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgSOSingleObject>::SetSourceAppID(unsigned int)
 T GCSDK::CProtoBufMsg<CMsgSOSingleObject>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>::BAsyncSend(GCSDK::IProtoBufMsg::IProtoBufSendHandler&) const
 T GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>::ExpectingReply(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>::GetClientSteamID() const
 T GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>::GetEMsg() const
 T GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>::GetJobIDSource() const
 T GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>::GetJobIDTarget() const
 T GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>::GetSourceAppID() const
 T GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>::InitFromPacket(GCSDK::IMsgNetPacket*)
 T GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>::OneTimeInit()
 T GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>::SetJobIDSource(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>::SetJobIDTarget(unsigned long long)
 T GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>::SetSourceAppID(unsigned int)
 T GCSDK::CProtoBufMsg<CMsgUpdateItemSchema>::~CProtoBufMsg()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgConVarValue>::AllocProtoBufHdr()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgConVarValue>::GetAllocHitCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgConVarValue>::GetAllocMissCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgConVarValue>::GetCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgConVarValue>::GetEstimatedSize()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgConVarValue>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgConVarValue>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgProtoBufHeader>::AllocProtoBufHdr()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgProtoBufHeader>::GetAllocHitCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgProtoBufHeader>::GetAllocMissCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgProtoBufHeader>::GetCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgProtoBufHeader>::GetEstimatedSize()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgProtoBufHeader>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgProtoBufHeader>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgReplicateConVars>::AllocProtoBufHdr()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgReplicateConVars>::GetAllocHitCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgReplicateConVars>::GetAllocMissCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgReplicateConVars>::GetCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgReplicateConVars>::GetEstimatedSize()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgReplicateConVars>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgReplicateConVars>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgRequestItemSchemaData>::AllocProtoBufHdr()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgRequestItemSchemaData>::GetAllocHitCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgRequestItemSchemaData>::GetAllocMissCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgRequestItemSchemaData>::GetCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgRequestItemSchemaData>::GetEstimatedSize()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgRequestItemSchemaData>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgRequestItemSchemaData>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscribed>::AllocProtoBufHdr()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscribed>::GetAllocHitCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscribed>::GetAllocMissCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscribed>::GetCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscribed>::GetEstimatedSize()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscribed>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscribed>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionCheck>::AllocProtoBufHdr()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionCheck>::GetAllocHitCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionCheck>::GetAllocMissCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionCheck>::GetCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionCheck>::GetEstimatedSize()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionCheck>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionCheck>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionRefresh>::AllocProtoBufHdr()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionRefresh>::GetAllocHitCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionRefresh>::GetAllocMissCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionRefresh>::GetCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionRefresh>::GetEstimatedSize()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionRefresh>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheSubscriptionRefresh>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheUnsubscribed>::AllocProtoBufHdr()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheUnsubscribed>::GetAllocHitCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheUnsubscribed>::GetAllocMissCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheUnsubscribed>::GetCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheUnsubscribed>::GetEstimatedSize()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheUnsubscribed>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOCacheUnsubscribed>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOMultipleObjects>::AllocProtoBufHdr()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOMultipleObjects>::GetAllocHitCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOMultipleObjects>::GetAllocMissCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOMultipleObjects>::GetCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOMultipleObjects>::GetEstimatedSize()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOMultipleObjects>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOMultipleObjects>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOSingleObject>::AllocProtoBufHdr()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOSingleObject>::GetAllocHitCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOSingleObject>::GetAllocMissCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOSingleObject>::GetCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOSingleObject>::GetEstimatedSize()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOSingleObject>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgSOSingleObject>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgUpdateItemSchema>::AllocProtoBufHdr()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgUpdateItemSchema>::GetAllocHitCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgUpdateItemSchema>::GetAllocMissCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgUpdateItemSchema>::GetCount()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgUpdateItemSchema>::GetEstimatedSize()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgUpdateItemSchema>::GetName()
 T GCSDK::CProtoBufMsgMemoryPool<CMsgUpdateItemSchema>::~CProtoBufMsgMemoryPool()
 T GCSDK::CProtoBufMsgMemoryPoolMgr::CProtoBufMsgMemoryPoolMgr()
 T GCSDK::CProtoBufMsgMemoryPoolMgr::FreeProtoBufHdr(CMsgProtoBufHeader*)
 T GCSDK::CProtoBufMsgMemoryPoolMgr::~CProtoBufMsgMemoryPoolMgr()
 T GCSDK::CProtoBufNetPacket::BHasTargetJobName() const
 T GCSDK::CProtoBufNetPacket::CProtoBufNetPacket(GCSDK::CNetPacket*, CSteamID const&, unsigned int)
 T GCSDK::CProtoBufNetPacket::CubData() const
 T GCSDK::CProtoBufNetPacket::GetCNetPacket() const
 T GCSDK::CProtoBufNetPacket::GetEMsg() const
 T GCSDK::CProtoBufNetPacket::GetEMsgFormatType() const
 T GCSDK::CProtoBufNetPacket::GetSourceAppID() const
 T GCSDK::CProtoBufNetPacket::GetSourceJobID() const
 T GCSDK::CProtoBufNetPacket::GetSteamID() const
 T GCSDK::CProtoBufNetPacket::GetTargetJobID() const
 T GCSDK::CProtoBufNetPacket::GetTargetJobName() const
 T GCSDK::CProtoBufNetPacket::PubData() const
 T GCSDK::CProtoBufNetPacket::SetSourceAppID(unsigned int)
 T GCSDK::CProtoBufNetPacket::SetSteamID(CSteamID)
 T GCSDK::CProtoBufNetPacket::SetTargetJobID(unsigned long long)
 T GCSDK::CProtoBufNetPacket::~CProtoBufNetPacket()
 T GCSDK::CRefCount::DestroyThis()
 T GCSDK::CRefCount::~CRefCount()
 T GCSDK::CSharedObject* GCSDK::CreateSharedObjectSubclass<CEconItem>()
 T GCSDK::CSharedObject::BIsKeyEqual(GCSDK::CSharedObject const&) const
 T GCSDK::CSharedObject::BShouldDeleteByCache() const
 T GCSDK::CSharedObject::Create(int)
 T GCSDK::CSharedObject::RegisterFactory(int, GCSDK::CSharedObject* (*)(), unsigned int, char const*)
 T GCSDK::CSharedObject::SharedObjectInfo_t::SharedObjectInfo_t()
 T GCSDK::CSharedObject::SharedObjectInfo_t::SharedObjectInfo_t(GCSDK::CSharedObject::SharedObjectInfo_t const&)
 T GCSDK::CSharedObject::SharedObjectInfo_t::~SharedObjectInfo_t()
 T GCSDK::CSharedObjectCache::CSharedObjectCache()
 T GCSDK::CSharedObjectCache::Dump() const
 T GCSDK::CSharedObjectCache::FindSharedObject(GCSDK::CSharedObject const&)
 T GCSDK::CSharedObjectCache::GetBaseTypeCache(int, bool)
 T GCSDK::CSharedObjectCache::MarkDirty()
 T GCSDK::CSharedObjectCache::~CSharedObjectCache()
 T GCSDK::CSharedObjectTypeCache::AddObject(GCSDK::CSharedObject*)
 T GCSDK::CSharedObjectTypeCache::CSharedObjectTypeCache(int)
 T GCSDK::CSharedObjectTypeCache::DestroyAllObjects()
 T GCSDK::CSharedObjectTypeCache::Dump() const
 T GCSDK::CSharedObjectTypeCache::EnsureCapacity(unsigned int)
 T GCSDK::CSharedObjectTypeCache::FindSharedObject(GCSDK::CSharedObject const&)
 T GCSDK::CSharedObjectTypeCache::RemoveObject(GCSDK::CSharedObject const&)
 T GCSDK::CSharedObjectTypeCache::~CSharedObjectTypeCache()
 T GCSDK::CStructNetPacket::BHasTargetJobName() const
 T GCSDK::CStructNetPacket::CubData() const
 T GCSDK::CStructNetPacket::GetCNetPacket() const
 T GCSDK::CStructNetPacket::GetEMsg() const
 T GCSDK::CStructNetPacket::GetEMsgFormatType() const
 T GCSDK::CStructNetPacket::GetSourceAppID() const
 T GCSDK::CStructNetPacket::GetSourceJobID() const
 T GCSDK::CStructNetPacket::GetSteamID() const
 T GCSDK::CStructNetPacket::GetTargetJobID() const
 T GCSDK::CStructNetPacket::GetTargetJobName() const
 T GCSDK::CStructNetPacket::PubData() const
 T GCSDK::CStructNetPacket::SetSourceAppID(unsigned int)
 T GCSDK::CStructNetPacket::SetSteamID(CSteamID)
 T GCSDK::CStructNetPacket::SetTargetJobID(unsigned long long)
 T GCSDK::CStructNetPacket::~CStructNetPacket()
 T GCSDK::CreateJob_CGCSOCacheSubscribedJob(GCSDK::CGCClient*, void*)
 T GCSDK::CreateJob_CGCSOCacheSubscriptionCheck(GCSDK::CGCClient*, void*)
 T GCSDK::CreateJob_CGCSOCacheUnsubscribedJob(GCSDK::CGCClient*, void*)
 T GCSDK::CreateJob_CGCSOCreateJob(GCSDK::CGCClient*, void*)
 T GCSDK::CreateJob_CGCSODestroyJob(GCSDK::CGCClient*, void*)
 T GCSDK::CreateJob_CGCSOUpdateJob(GCSDK::CGCClient*, void*)
 T GCSDK::CreateJob_CGCSOUpdateMultipleJob(GCSDK::CGCClient*, void*)
 T GCSDK::EmitBaseMessageV(char const*, SpewType_t, int, int, char const*, char*)
 T GCSDK::EmitError(char const*, char const*, ...)
 T GCSDK::EmitInfo(char const*, int, int, char const*, ...)
 T GCSDK::EmitWarning(char const*, int, char const*, ...)
 T GCSDK::GetCchTempTextBuffer()
 T GCSDK::GetPchTempTextBuffer()
 T GCSDK::IMsgNetPacketFromCNetPacket(GCSDK::CNetPacket*)
 T GCSDK::InitGCSystemMessageTypes()
 T GCSDK::JobTypeSortFuncByMsg(GCSDK::JobType_t const* const&, GCSDK::JobType_t const* const&)
 T GCSDK::JobTypeSortFuncByName(GCSDK::JobType_t const* const&, GCSDK::JobType_t const* const&)
 T GCSDK::PchMsgNameFromEMsg(unsigned int)
 T GEconItemSchema()
 T Gain(float, float)
 T GameLogSystem()
 T GameStartFrame()
 T GameStringSystem()
 T GameTimescale()
 T Game_SetOneWayTransition()
 T GenerateBombDirections(CUtlVector<Vector, CUtlMemory<Vector, int> >&)
 T GeneratePolyhedronFromPlanes(float const*, int, float, bool)
 T GenericThreadLocals::CThreadLocal<int>::~CThreadLocal()
 T GenericThreadLocals::CThreadLocalPtr<unsigned char>::~CThreadLocalPtr()
 T GetAISaveRestoreBlockHandler()
 T GetAllChildren(CBaseEntity*, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >&)
 T GetAllInHierarchy(CBaseEntity*, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >&)
 T GetAmmoDef()
 T GetAnimationEvent(CStudioHdr*, int, animevent_t*, float, float, int)
 T GetAttachmentLocalSpace(CStudioHdr*, int, matrix3x4_t&)
 T GetAutoMultiplayerPhysicsMode(Vector, float)
 T GetBallBotModel(bool)
 T GetBluePlayerIndex()
 T GetBreakableDamage(CTakeDamageInfo const&, IBreakableWithPropData*)
 T GetCStringCharConversion()
 T GetCameFromLastDLCMap()
 T GetCaptionHash(char const*, bool, unsigned int&)
 T GetCommentarySaveRestoreBlockHandler()
 T GetConstraintAttachments(CBaseEntity*, CBaseEntity**, IPhysicsObject**)
 T GetCoopBranchLevelIndex(int)
 T GetCoopSectionIndex()
 T GetCoopSpawnLocation(int)
 T GetCrosshairOrNamedEntities(CCommand const&, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >&)
 T GetCurrentSkyCamera()
 T GetDeathPoseActivity(CBaseAnimating*, CTakeDamageInfo const&)
 T GetDefaultLightstyleString(int)
 T GetDefaultResponseSystemSaveRestoreBlockHandler()
 T GetDeveloperLevel()
 T GetEffectIndex(char const*)
 T GetEggBotModel(bool)
 T GetEntitySaveRestoreBlockHandler()
 T GetEventQueueSaveRestoreBlockHandler()
 T GetEyePosition(CStudioHdr*, Vector&)
 T GetFileWeaponInfoFromHandle(unsigned short)
 T GetFloorZ(Vector const&)
 T GetFloorZ(Vector const&, float)
 T GetGameDescription()
 T GetGladosSpokenFlags(int)
 T GetGlobalTeam(int)
 T GetGrabControllerForPhysCannon(CBaseCombatWeapon*)
 T GetGrabControllerForPlayer(CBasePlayer*)
 T GetHaveSeenDLCTubesReveal()
 T GetHidingSpotByID(unsigned int)
 T GetHighestActiveBranch()
 T GetHintTypeDescription(CAI_Hint*)
 T GetInterpolationData(float const*, float const*, int, int, float, bool, float*, float*, float*)
 T GetInvalidWeaponInfoHandle()
 T GetItemSchema()
 T GetLongFloorZ(Vector const&)
 T GetMPConceptIndexFromString(char const*)
 T GetMapIndexInPlayOrder()
 T GetMassEquivalent(float)
 T GetMaterialIndex(char const*)
 T GetMaterialIndexDataOpsProxy()
 T GetMaterialNameFromIndex(int)
 T GetNextCommandEntity(CBasePlayer*, char const*, CBaseEntity*)
 T GetNoEscCharConversion()
 T GetNoPortalVolumeList()
 T GetNumMapsPlayed()
 T GetNumPlayersConnected()
 T GetNumberOfTeams()
 T GetOrangePlayerIndex()
 T GetPaintSaveRestoreBlockHandler()
 T GetPanelAnimationDictionary()
 T GetParticleManifest(CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T GetParticleManifest(CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&, char const*)
 T GetParticleSystemIndex(char const*)
 T GetPhysObjSaveRestoreOps(PhysInterfaceId_t)
 T GetPhysSaveRestoreBlockHandler()
 T GetPlayer()
 T GetPlayerDeathCount(int)
 T GetPlayerHeldEntity(CBasePlayer*)
 T GetPlayerHoldingEntity(CBaseEntity const*)
 T GetPlayerSilenceDuration(int)
 T GetPointCameraList()
 T GetPortalCallQueue()
 T GetPortalDetectorList()
 T GetPortalMPStats()
 T GetRecentNPCSpeech(recentNPCSpeech_t*)
 T GetSavedParamsForCarriedPhysObject(CGrabController*, IPhysicsObject*, float*, float*)
 T GetSceneDuration(char const*)
 T GetSceneManager()
 T GetScriptInstanceHelper_CBaseAnimating()
 T GetScriptInstanceHelper_CBaseEntity()
 T GetScriptInstanceHelper_CBaseMultiplayerPlayer()
 T GetScriptInstanceHelper_CBasePlayer()
 T GetSequenceActivity(CStudioHdr*, int, int*)
 T GetSequenceActivityName(CStudioHdr*, int)
 T GetSequenceFlags(CStudioHdr*, int)
 T GetSequenceLinearMotion(CStudioHdr*, int, float const*, Vector*)
 T GetSequenceName(CStudioHdr*, int)
 T GetSkyCameraList()
 T GetSoundSaveRestoreOps()
 T GetSpringAttachments(CBaseEntity*, CBaseEntity**, IPhysicsObject**)
 T GetSteamWorksSGameStatsUploader()
 T GetTeamName(int)
 T GetTemplateSaveRestoreBlockHandler()
 T GetVPhysicsClipList()
 T GetVScriptSaveRestoreBlockHandler()
 T GetVoiceGameMgr()
 T GetWeaponProficiencyName(WeaponProficiency_t)
 T GetWeaponSoundFromString(char const*)
 T GetWorldEntity()
 T GetWorldFogParams(CBaseCombatCharacter*, fogparams_t&)
 T GivePlayerPortalgun()
 T GlobalEntity_Add(char const*, char const*, GLOBALESTATE)
 T GlobalEntity_AddFlags(int, int)
 T GlobalEntity_AddToCounter(int, int)
 T GlobalEntity_EnableStateUpdates(bool)
 T GlobalEntity_GetCounter(int)
 T GlobalEntity_GetFlags(int)
 T GlobalEntity_GetIndex(char const*)
 T GlobalEntity_GetMap(int)
 T GlobalEntity_GetName(int)
 T GlobalEntity_GetNumGlobals()
 T GlobalEntity_GetState(int)
 T GlobalEntity_SetCounter(int, int)
 T GlobalEntity_SetFlags(int, int)
 T GlobalEntity_SetMap(int, string_t)
 T GlobalEntity_SetState(int, GLOBALESTATE)
 T GotoSequence(CStudioHdr*, int, float, float, int, int&, float&, int&)
 T GrabController_SetPortalPenetratingEntity(CGrabController*, CBaseEntity*)
 T GuessDamageForce(CTakeDamageInfo*, Vector const&, Vector const&, float)
 T HLTVDirector()
 T HLTVDirectorSystem()
 T Hack_FixEscapeChars(char*)
 T HandleFoundryEntitySpawnRecords()
 T Hash4(void const*)
 T Hash8(void const*)
 T HashInt(int)
 T HashString(char const*)
 T HashStringCaseless(char const*)
 T HashStringCaselessConventional(char const*)
 T Hermite_Spline(Quaternion const&, Quaternion const&, Quaternion const&, float, Quaternion&)
 T Hermite_Spline(Vector const&, Vector const&, Vector const&, float, Vector&)
 T HidingSpot::HidingSpot()
 T HidingSpot::Load(CUtlBuffer&, unsigned int)
 T HidingSpot::PostLoad()
 T HidingSpot::Save(CUtlBuffer&, unsigned int) const
 T HidingSpot::~HidingSpot()
 T HintClear()
 T HitBoxDamagedEntity<PlayerPickupPaintPowerUser<CNPC_FloorTurret> >::ApplyDamageEffect(int)
 T HitBoxDamagedEntity<PlayerPickupPaintPowerUser<CNPC_FloorTurret> >::CanApplyDamageEffect(int) const
 T HitBoxDamagedEntity<PlayerPickupPaintPowerUser<CNPC_FloorTurret> >::Spawn()
 T HitBoxDamagedEntity<PlayerPickupPaintPowerUser<CNPC_FloorTurret> >::TakeDamage(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T HitBoxDamagedEntity<PlayerPickupPaintPowerUser<CNPC_FloorTurret> >::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*)
 T HitBoxDamagedEntity<PlayerPickupPaintPowerUser<CNPC_FloorTurret> >::~HitBoxDamagedEntity()
 T Host_Say(edict_t*, CCommand const&, bool)
 T HullFromPlanes(CMesh*, CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >*, float const*, int, int, float)
 T HullFromPlanes_SIMD(CMesh*, CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >*, float __vector(4)*, int, float)
 T IAI_BehaviorBridge::BehaviorBridge_AimGun()
 T IAI_BehaviorBridge::BehaviorBridge_BestEnemy()
 T IAI_BehaviorBridge::BehaviorBridge_CanFlinch()
 T IAI_BehaviorBridge::BehaviorBridge_CanRunAScriptedNPCInteraction(bool)
 T IAI_BehaviorBridge::BehaviorBridge_FValidateHintType(CAI_Hint*)
 T IAI_BehaviorBridge::BehaviorBridge_GatherConditions()
 T IAI_BehaviorBridge::BehaviorBridge_GetDefaultNavGoalTolerance()
 T IAI_BehaviorBridge::BehaviorBridge_GetFlinchActivity(bool, bool)
 T IAI_BehaviorBridge::BehaviorBridge_GetJumpGravity() const
 T IAI_BehaviorBridge::BehaviorBridge_GetMaxTacticalLateralMovement()
 T IAI_BehaviorBridge::BehaviorBridge_GetReasonableFacingDist()
 T IAI_BehaviorBridge::BehaviorBridge_HandleAnimEvent(animevent_t*)
 T IAI_BehaviorBridge::BehaviorBridge_IsCoverPosition(Vector const&, Vector const&)
 T IAI_BehaviorBridge::BehaviorBridge_IsCrouchedActivity(Activity)
 T IAI_BehaviorBridge::BehaviorBridge_IsCrouching()
 T IAI_BehaviorBridge::BehaviorBridge_IsCurTaskContinuousMove()
 T IAI_BehaviorBridge::BehaviorBridge_IsInterruptable()
 T IAI_BehaviorBridge::BehaviorBridge_IsJumpLegal(Vector const&, Vector const&, Vector const&, float, float, float) const
 T IAI_BehaviorBridge::BehaviorBridge_IsNavigationUrgent()
 T IAI_BehaviorBridge::BehaviorBridge_IsValidCover(Vector const&, CAI_Hint const*)
 T IAI_BehaviorBridge::BehaviorBridge_IsValidEnemy(CBaseEntity*)
 T IAI_BehaviorBridge::BehaviorBridge_IsValidShootPosition(Vector const&, CAI_Node*, CAI_Hint const*)
 T IAI_BehaviorBridge::BehaviorBridge_ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T IAI_BehaviorBridge::BehaviorBridge_MovementCost(int, Vector const&, Vector const&, float*)
 T IAI_BehaviorBridge::BehaviorBridge_NPC_TranslateActivity(Activity)
 T IAI_BehaviorBridge::BehaviorBridge_OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T IAI_BehaviorBridge::BehaviorBridge_OnFriendDamaged(CBaseCombatCharacter*, CBaseEntity*)
 T IAI_BehaviorBridge::BehaviorBridge_OnMovementComplete()
 T IAI_BehaviorBridge::BehaviorBridge_OnMovementFailed()
 T IAI_BehaviorBridge::BehaviorBridge_OnScheduleChange()
 T IAI_BehaviorBridge::BehaviorBridge_OnSeeEntity(CBaseEntity*)
 T IAI_BehaviorBridge::BehaviorBridge_OnTakeDamage_Alive(CTakeDamageInfo const&)
 T IAI_BehaviorBridge::BehaviorBridge_PrescheduleThink()
 T IAI_BehaviorBridge::BehaviorBridge_QueryHearSound(CSound*)
 T IAI_BehaviorBridge::BehaviorBridge_SelectSchedule()
 T IAI_BehaviorBridge::BehaviorBridge_ShouldAlwaysThink()
 T IAI_BehaviorBridge::BehaviorBridge_ShouldIgnoreSound(CSound*)
 T IAI_BehaviorBridge::BehaviorBridge_ShouldPlayerAvoid()
 T IAI_BehaviorBridge::BehaviorBridge_Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T IAI_BehaviorBridge::BehaviorBridge_TranslateSchedule(int)
 T IAI_BehaviorBridge::BehaviorBridge_WeaponLOSCondition(Vector const&, Vector const&, bool)
 T IBoneSetup::AccumulatePose(Vector*, Quaternion*, int, float, float, float, CIKContext*)
 T IBoneSetup::CalcAutoplaySequences(Vector*, Quaternion*, float, CIKContext*)
 T IBoneSetup::CalcBoneAdj(Vector*, Quaternion*, float const*)
 T IBoneSetup::IBoneSetup(CStudioHdr const*, int, float const*, IPoseDebugger*)
 T IBoneSetup::InitPose(Vector*, QuaternionAligned*)
 T IBoneSetup::~IBoneSetup()
 T IDelayedSchemaData::InitializeSchemaInternal(CEconItemSchema*, CUtlBuffer&, bool, unsigned int)
 T IEconItemInterface::IsTradable() const
 T IEconItemInterface::IsUsableInCrafting() const
 T IEconTool::CanApplyTo(IEconItemInterface const*, IEconItemInterface const*) const
 T IEconTool::ShouldDisplayQuantity(IEconItemInterface const*) const
 T IEntityListener::OnEntityCreated(CBaseEntity*)
 T IEntityListener::OnEntityDeleted(CBaseEntity*)
 T IEntityListener::OnEntitySpawned(CBaseEntity*)
 T IGameStatTracker::CGameStatList<SCatapultData>::Clear()
 T IGameStatTracker::CGameStatList<SCatapultData>::PrintMemoryUsage()
 T IGameStatTracker::CGameStatList<SCatapultData>::SendData(KeyValues*)
 T IGameStatTracker::CGameStatList<SDeaths>::Clear()
 T IGameStatTracker::CGameStatList<SDeaths>::PrintMemoryUsage()
 T IGameStatTracker::CGameStatList<SDeaths>::SendData(KeyValues*)
 T IGameStatTracker::CGameStatList<SFizzledData>::Clear()
 T IGameStatTracker::CGameStatList<SFizzledData>::PrintMemoryUsage()
 T IGameStatTracker::CGameStatList<SFizzledData>::SendData(KeyValues*)
 T IGameStatTracker::CGameStatList<SMPMapStats>::Clear()
 T IGameStatTracker::CGameStatList<SMPMapStats>::PrintMemoryUsage()
 T IGameStatTracker::CGameStatList<SMPMapStats>::SendData(KeyValues*)
 T IGameStatTracker::CGameStatList<SPortalData>::Clear()
 T IGameStatTracker::CGameStatList<SPortalData>::PrintMemoryUsage()
 T IGameStatTracker::CGameStatList<SPortalData>::SendData(KeyValues*)
 T IGameStatTracker::CGameStatList<SPuzzleData>::Clear()
 T IGameStatTracker::CGameStatList<SPuzzleData>::PrintMemoryUsage()
 T IGameStatTracker::CGameStatList<SPuzzleData>::SendData(KeyValues*)
 T IGameStatTracker::CGameStatList<SStuckPlayers>::Clear()
 T IGameStatTracker::CGameStatList<SStuckPlayers>::PrintMemoryUsage()
 T IGameStatTracker::CGameStatList<SStuckPlayers>::SendData(KeyValues*)
 T IGameStatTracker::CGameStatList<STaunts>::Clear()
 T IGameStatTracker::CGameStatList<STaunts>::PrintMemoryUsage()
 T IGameStatTracker::CGameStatList<STaunts>::SendData(KeyValues*)
 T IGameStatTracker::CGameStatList<STractorBeamData>::Clear()
 T IGameStatTracker::CGameStatList<STractorBeamData>::PrintMemoryUsage()
 T IGameStatTracker::CGameStatList<STractorBeamData>::SendData(KeyValues*)
 T IGameSystem::Add(IGameSystem*)
 T IGameSystem::FrameUpdatePostEntityThinkAllSystems()
 T IGameSystem::FrameUpdatePreEntityThinkAllSystems()
 T IGameSystem::InitAllSystems()
 T IGameSystem::LevelInitPostEntityAllSystems()
 T IGameSystem::LevelInitPreEntityAllSystems(char const*)
 T IGameSystem::LevelShutdownPostEntityAllSystems()
 T IGameSystem::LevelShutdownPreEntityAllSystems()
 T IGameSystem::MapName()
 T IGameSystem::OnRestoreAllSystems()
 T IGameSystem::OnSaveAllSystems()
 T IGameSystem::PostInitAllSystems()
 T IGameSystem::PreClientUpdateAllSystems()
 T IGameSystem::Remove(IGameSystem*)
 T IGameSystem::ShutdownAllSystems()
 T IGameSystem::~IGameSystem()
 T IGameSystemPerFrame::~IGameSystemPerFrame()
 T IInventoryUpdateListener::SOCacheSubscribed(CSteamID const&)
 T IInventoryUpdateListener::SOCreated(CSteamID const&, GCSDK::CSharedObject const*)
 T IInventoryUpdateListener::SODestroyed(CSteamID const&, GCSDK::CSharedObject const*)
 T IInventoryUpdateListener::SOUpdated(CSteamID const&, GCSDK::CSharedObject const*)
 T IKeyValuesDumpContextAsText::KvEndKey(KeyValues*, int)
 T IKeyValuesDumpContextAsText::KvWriteIndent(int)
 T IKeyValuesDumpContextAsText::KvWriteValue(KeyValues*, int)
 T IPaintPowerUser::~IPaintPowerUser()
 T IPaintStreamAutoList::~IPaintStreamAutoList()
 T IParticleSystemQuery::BeginDrawModels(int, Vector const&, CParticleCollection*)
 T IParticleSystemQuery::FinishDrawModels(CParticleCollection*)
 T IParticleSystemQuery::GetCollisionGroupFromName(char const*)
 T IParticleSystemQuery::GetControllingObjectHitBoxInfo(CParticleCollection*, int, int, ModelHitBoxInfo_t*, char const*)
 T IParticleSystemQuery::GetControllingObjectOBBox(CParticleCollection*, int, Vector, Vector)
 T IParticleSystemQuery::GetLocalPlayerEyeVectors(Vector*, Vector*, Vector*)
 T IParticleSystemQuery::GetLocalPlayerPos()
 T IParticleSystemQuery::GetModel(char const*)
 T IParticleSystemQuery::GetRayTraceEnvironmentFromName(char const*)
 T IParticleSystemQuery::IsPointInControllingObjectHitBox(CParticleCollection*, int, Vector, bool)
 T IParticleSystemQuery::MovePointInsideControllingObject(CParticleCollection*, void*, Vector*)
 T IParticleSystemQuery::SetUpLightingEnvironment(Vector const&)
 T IPortalLaserAutoList::~IPortalLaserAutoList()
 T IPredictionSystem::~IPredictionSystem()
 T IProjectedWallEntityAutoList::~IProjectedWallEntityAutoList()
 T IPropWeightedCubeAutoList::~IPropWeightedCubeAutoList()
 T IScriptInstanceHelper::GetProxied(void*)
 T ITransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
 T ITriggerCatapultAutoList::~ITriggerCatapultAutoList()
 T ITriggerPortalCleanserAutoList::~ITriggerPortalCleanserAutoList()
 T ITriggerTractorBeamAutoList::~ITriggerTractorBeamAutoList()
 T IceKey::IceKey(int)
 T IceKey::blockSize() const
 T IceKey::decrypt(unsigned char const*, unsigned char*) const
 T IceKey::scheduleBuild(unsigned short*, int, int const*)
 T IceKey::set(unsigned char const*)
 T IceKey::~IceKey()
 T ImpulseScale(float, float)
 T IndexModelSequences(CStudioHdr*)
 T InitBodyQue()
 T InitCBaseAnimatingScriptDesc()
 T InitCBaseEntityScriptDesc()
 T InitCBaseFlexScriptDesc()
 T InitCBasePlayerScriptDesc()
 T InitCEnvEntityMakerScriptDesc()
 T InitCLinkedPortalDoorScriptDesc()
 T InitCPlayerVoiceListenerScriptDesc()
 T InitCPortal_PlayerScriptDesc()
 T InitCPropLinkedPortalDoorScriptDesc()
 T InitCSceneEntityScriptDesc()
 T InitCScriptEntityIteratorScriptDesc()
 T InitCScriptKeyValuesScriptDesc()
 T InitCTriggerCameraScriptDesc()
 T InitPortalPaintPowerValue()
 T InitPose(CStudioHdr const*, Vector*, QuaternionAligned*, int)
 T InitSurfNoPortalFlag()
 T Init_GCVs()
 T InitializeCvars()
 T InstallGameRules()
 T InstanceRegistry(char const*)
 T InstancedAutoGeneratedSoundScene(CBaseFlex*, char const*, CHandle<CBaseEntity>*)
 T InstancedScriptedScene(CBaseFlex*, char const*, CHandle<CBaseEntity>*, float, bool, ResponseRules::CRR_Response*, bool, IRecipientFilter*)
 T InterfaceReg::InterfaceReg(void* (*)(), char const*)
 T InternalSendPropArray(int, int, char*, int (*)(void const*, int), unsigned char)
 T Interpolator_CurveInterpolate(int, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T Interpolator_CurveInterpolatorsForType(int, int&, int&)
 T Interpolator_CurveTypeForName(char const*)
 T IntersectRayWithAACylinder(Ray_t const&, Vector const&, float, float, CBaseTrace*)
 T IntersectRayWithBox(Ray_t const&, Vector const&, Vector const&, float, CBaseTrace*, float*)
 T IntersectRayWithBox(Vector const&, Vector const&, Vector const&, Vector const&, float, BoxTraceInfo_t*)
 T IntersectRayWithBox(Vector const&, Vector const&, Vector const&, Vector const&, float, CBaseTrace*, float*)
 T IntersectRayWithOBB(Ray_t const&, Vector const&, QAngle const&, Vector const&, Vector const&, float, CBaseTrace*)
 T IntersectRayWithOBB(Ray_t const&, matrix3x4_t const&, Vector const&, Vector const&, float, CBaseTrace*)
 T IntersectRayWithOBB(Vector const&, Vector const&, Vector const&, QAngle const&, Vector const&, Vector const&, float, CBaseTrace*)
 T IntersectRayWithOBB(Vector const&, Vector const&, matrix3x4_t const&, Vector const&, Vector const&, float, CBaseTrace*)
 T IntersectRayWithPlane(Vector const&, Vector const&, Vector const&, float)
 T IntersectRayWithTriangle(Ray_t const&, Vector const&, Vector const&, Vector const&, bool)
 T IntervalDistance(float, float, float)
 T IntervalTimer::GetDataDescMap()
 T IntervalTimer::NetworkStateChanged()
 T IntervalTimer::NetworkStateChanged(void*)
 T IntervalTimer::Now() const
 T InvalidateQueryCache()
 T InvalidateUniqueId(UniqueId_t*)
 T InventoryManager()
 T IsActivatingPower(PaintPowerInfo_t const&)
 T IsActivePower(PaintPowerInfo_t const&)
 T IsBouncePower(PaintPowerInfo_t const&)
 T IsBoxIntersectingBox(Vector const&, Vector const&, Vector const&, Vector const&)
 T IsBoxIntersectingRay(Vector const&, Vector const&, Vector const&, Vector const&, float)
 T IsBoxIntersectingRay(float __vector(4) const&, float __vector(4) const&, Ray_t const&, float __vector(4) const&)
 T IsBoxIntersectingSphere(Vector const&, Vector const&, Vector const&, float)
 T IsBoxIntersectingTriangle(Vector const&, Vector const&, Vector const&, Vector const&, Vector const&, cplane_t const&, float)
 T IsBranchComplete(int)
 T IsDeactivatingPower(PaintPowerInfo_t const&)
 T IsEntityCreationAllowedInScripts()
 T IsEntityWalkable(CBaseEntity*, unsigned int)
 T IsExplosionTraceBlocked(CGameTrace*)
 T IsGameRulesMultiplayer()
 T IsHeadTrackingEnabled()
 T IsHeightDifferenceValid(float, float, float, float)
 T IsHidingSpotInCover(Vector const&)
 T IsInCommentaryMode()
 T IsInactivePower(PaintPowerInfo_t const&)
 T IsLevelComplete(int, int)
 T IsListeningToCommentary()
 T IsLocalSplitScreen()
 T IsNoPower(PaintPowerInfo_t const&)
 T IsOBBIntersectingOBB(Vector const&, QAngle const&, Vector const&, Vector const&, Vector const&, QAngle const&, Vector const&, Vector const&, float)
 T IsOnPortalPaint(CGameTrace const&)
 T IsPlayerBranchComplete(int, int)
 T IsPlayerLevelComplete(int, int, int)
 T IsPlayerNearTargetPortal(CPortal_Base2D const*)
 T IsPointInBounds(Vector const&, Vector const&, Vector const&)
 T IsPointInBox(Vector const&, Vector const&, Vector const&)
 T IsPortalIntersectingNoPortalVolume(Vector const&, QAngle const&, Vector const&, float, float)
 T IsPortalOnValidSurface(Vector const&, Vector const&, Vector const&, Vector const&, float, float, ITraceFilter*)
 T IsPortalOverlappingOtherPortals(CProp_Portal const*, Vector const&, QAngle const&, float, float, bool, bool)
 T IsRayIntersectingSphere(Vector const&, Vector const&, Vector const&, float, float)
 T IsRunningScriptedScene(CBaseFlex*, bool)
 T IsRunningScriptedSceneAndNotPaused(CBaseFlex*, bool)
 T IsRunningScriptedSceneWithSpeechAndNotPaused(CBaseFlex*, bool)
 T IsSpeedPower(PaintPowerInfo_t const&)
 T IsStairs(Vector const&, Vector const&, StairTestType)
 T IsStaticPointEntity(CBaseEntity*)
 T IsUniqueIdEqual(UniqueId_t const&, UniqueId_t const&)
 T ItemSystem()
 T IterateActivePhysicsEntities(void (*)(CBaseEntity*))
 T JumpConnector::TryToConnect(CNavArea*, CNavArea*, CUtlVectorUltraConservative<NavConnect, CUtlVectorUltraConservativeAllocator> const*, NavDirType)
 T JumpConnector::TryToConnect(CNavArea*, CUtlVectorUltraConservative<NavConnect, CUtlVectorUltraConservativeAllocator> const*, CUtlVectorUltraConservative<NavConnect, CUtlVectorUltraConservativeAllocator> const*, NavDirType)
 T JumpConnector::operator()(CNavArea*)
 T KeyValues::AddSubKey(KeyValues*)
 T KeyValues::Clear()
 T KeyValues::CopySubkeys(KeyValues*) const
 T KeyValues::CreateKey(char const*)
 T KeyValues::CreateNewKey()
 T KeyValues::Dump(IKeyValuesDumpContext*, int)
 T KeyValues::ElideSubKey(KeyValues*)
 T KeyValues::FindKey(char const*, bool)
 T KeyValues::FindKey(int) const
 T KeyValues::GetColor(char const*, Color const&)
 T KeyValues::GetDataType(char const*)
 T KeyValues::GetFirstSubKey()
 T KeyValues::GetFirstTrueSubKey()
 T KeyValues::GetFirstValue()
 T KeyValues::GetFloat(char const*, float)
 T KeyValues::GetInt(char const*, int)
 T KeyValues::GetName() const
 T KeyValues::GetNameSymbol() const
 T KeyValues::GetNextKey()
 T KeyValues::GetNextTrueSubKey()
 T KeyValues::GetNextValue()
 T KeyValues::GetPtr(char const*, void*)
 T KeyValues::GetString(char const*, char const*)
 T KeyValues::GetUint64(char const*, unsigned long long)
 T KeyValues::GetWString(char const*, wchar_t const*)
 T KeyValues::IsEmpty(char const*)
 T KeyValues::KeyValues(char const*)
 T KeyValues::KeyValues(char const*, char const*, char const*)
 T KeyValues::KeyValues(char const*, char const*, char const*, char const*, char const*)
 T KeyValues::KeyValues(char const*, char const*, int)
 T KeyValues::KeyValues(char const*, char const*, int, char const*, int)
 T KeyValues::KeyValues(char const*, char const*, wchar_t const*)
 T KeyValues::LoadFromBuffer(char const*, CUtlBuffer&, IBaseFileSystem*, char const*, bool (*)(char const*))
 T KeyValues::LoadFromBuffer(char const*, char const*, IBaseFileSystem*, char const*, bool (*)(char const*))
 T KeyValues::LoadFromFile(IBaseFileSystem*, char const*, char const*, bool (*)(char const*))
 T KeyValues::MakeCopy() const
 T KeyValues::ParseIncludedKeys(char const*, char const*, IBaseFileSystem*, char const*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&, bool (*)(char const*))
 T KeyValues::ProcessResolutionKeys(char const*)
 T KeyValues::ReadAsBinary(CUtlBuffer&)
 T KeyValues::ReadToken(CUtlBuffer&, bool&, bool&)
 T KeyValues::RecursiveLoadFromBuffer(char const*, CUtlBuffer&, bool (*)(char const*))
 T KeyValues::RecursiveMergeKeyValues(KeyValues*)
 T KeyValues::RecursiveSaveToFile(CUtlBuffer&, int)
 T KeyValues::RecursiveSaveToFile(IBaseFileSystem*, void*, CUtlBuffer*, int)
 T KeyValues::RemoveEverything()
 T KeyValues::SaveToFile(IBaseFileSystem*, char const*, char const*)
 T KeyValues::SetColor(char const*, Color)
 T KeyValues::SetFloat(char const*, float)
 T KeyValues::SetInt(char const*, int)
 T KeyValues::SetName(char const*)
 T KeyValues::SetPtr(char const*, void*)
 T KeyValues::SetString(char const*, char const*)
 T KeyValues::SetStringValue(char const*)
 T KeyValues::SetUint64(char const*, unsigned long long)
 T KeyValues::SetWString(char const*, wchar_t const*)
 T KeyValues::UsesEscapeSequences(bool)
 T KeyValues::WriteConvertedString(IBaseFileSystem*, void*, CUtlBuffer*, char const*)
 T KeyValues::deleteThis()
 T KeyValues::operator delete(void*)
 T KeyValues::operator new(unsigned long)
 T KillTargets(char const*)
 T Kochanek_Bartels_Spline(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T Kochanek_Bartels_Spline_NormalizeX(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T LadderEndSearch(Vector const*, NavDirType)
 T LaserDamageAmount()
 T LinkChild(CBaseEntity*, CBaseEntity*)
 T LoadLocalMapPlayOrder()
 T LoadMOTDFile(char const*, ConVar*)
 T LookupActivity(CStudioHdr*, char const*)
 T LookupSequence(CStudioHdr*, char const*)
 T MD5Update(MD5Context_t*, unsigned char const*, unsigned int)
 T MD5_PseudoRandom(unsigned int)
 T MPForceCameraCallback(IConVar*, char const*, float)
 T MPTimeLimitCallback(IConVar*, char const*, float)
 T MakeSniperSpots(CNavArea*)
 T MapColorToPower(CUtlVector<unsigned char, CUtlMemory<unsigned char, int> > const&)
 T MapColorToPower(Color const&)
 T MapColorToPower(color24 const&)
 T MapCycleFileChangedCallback(IConVar*, char const*, float)
 T MapEntity_GetNumKeysInEntity(char const*)
 T MapEntity_ParseAllEntites_SpawnTemplates(CPointTemplate**, int, CBaseEntity**, HierarchicalSpawnMapData_t*, int)
 T MapEntity_ParseAllEntities(char const*, IMapEntityFilter*, bool)
 T MapEntity_ParseEntity(CBaseEntity*&, char const*, IMapEntityFilter*)
 T MapEntity_ParseToken(char const*, char*)
 T MapEntity_PrecacheEntity(char const*, int&)
 T MapEntity_SkipToNextEntity(char const*, char*)
 T MapPowerToColor(int)
 T MapPowerToVisualColor(int)
 T MapSurfaceToPower(PaintPowerInfo_t&)
 T MarkMapComplete(char const*)
 T MarkPlanarity_CreateNewPolyLine(MarkPlanarityControlStruct_t&)
 T MaterialIndexDataOpsProxy::IsEmpty(SaveRestoreFieldInfo_t const&)
 T MaterialIndexDataOpsProxy::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T MaterialIndexDataOpsProxy::Parse(SaveRestoreFieldInfo_t const&, char const*)
 T MaterialIndexDataOpsProxy::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T MaterialIndexDataOpsProxy::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T MathLib_Init(float, float, float, int, bool, bool, bool, bool)
 T MatrixAngles(matrix3x4_t const&, Quaternion&, Vector&)
 T MatrixAngles(matrix3x4_t const&, float*)
 T MatrixBuildRotateZ(VMatrix&, float)
 T MatrixBuildRotationAboutAxis(VMatrix&, Vector const&, float)
 T MatrixBuildRotationAboutAxis(Vector const&, float, matrix3x4_t&)
 T MatrixCopy(matrix3x4_t const&, matrix3x4_t&)
 T MatrixFromAngles(QAngle const&, VMatrix&)
 T MatrixGetColumn(matrix3x4_t const&, int, Vector&)
 T MatrixInverseGeneral(VMatrix const&, VMatrix&)
 T MatrixInverseTR(VMatrix const&, VMatrix&)
 T MatrixInvert(matrix3x4_t const&, matrix3x4_t&)
 T MatrixMultiply(VMatrix const&, VMatrix const&, VMatrix&)
 T MatrixSetColumn(Vector const&, int, matrix3x4_t&)
 T MatrixSetIdentity(VMatrix&)
 T MatrixToAngles(VMatrix const&, QAngle&)
 T MatrixTranspose(matrix3x4_t const&, matrix3x4_t&)
 T MenuItemCheckImage::Paint()
 T MenuItemCheckImage::~MenuItemCheckImage()
 T MessageBox_Factory()
 T MessageEnd()
 T MessageWriteAngles(QAngle const&)
 T MessageWriteBits(void const*, int)
 T MessageWriteBool(bool)
 T MessageWriteByte(int)
 T MessageWriteChar(int)
 T MessageWriteEHandle(CBaseEntity*)
 T MessageWriteFloat(float)
 T MessageWriteLong(int)
 T MessageWriteShort(int)
 T MessageWriteString(char const*)
 T MessageWriteUBitLong(unsigned int, int)
 T MessageWriteVec3Coord(Vector const&)
 T MessageWriteVec3Normal(Vector const&)
 T MissingSceneWarning(char const*)
 T MobilePortalsUpdatedCallback(IConVar*, char const*, float)
 T ModelSoundsCacheInit()
 T ModelSoundsCacheShutdown()
 T ModelSoundsCache_FinishModel(CStudioHdr*)
 T ModelSoundsCache_LoadModel(char const*)
 T ModelSoundsCache_PrecacheScriptSound(char const*)
 T MoveHelperServer()
 T MovieExplosion::GetServerClass()
 T MovieExplosion::YouForgotToImplementOrDeclareServerClass()
 T MovieExplosion::~MovieExplosion()
 T NAI_Hull::Height(int)
 T NAI_Hull::Length(int)
 T NAI_Hull::LookupId(char const*)
 T NAI_Hull::Maxs(int)
 T NAI_Hull::Mins(int)
 T NAI_Hull::Name(int)
 T NAI_Hull::SmallMaxs(int)
 T NAI_Hull::SmallMins(int)
 T NAI_Hull::TraceMask(int)
 T NAI_Hull::Width(int)
 T NDebugOverlay::Axis(Vector const&, QAngle const&, float, bool, float)
 T NDebugOverlay::Box(Vector const&, Vector const&, Vector const&, int, int, int, int, float)
 T NDebugOverlay::BoxAngles(Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
 T NDebugOverlay::BoxDirection(Vector const&, Vector const&, Vector const&, Vector const&, int, int, int, int, float)
 T NDebugOverlay::Circle(Vector const&, QAngle const&, float, int, int, int, int, bool, float)
 T NDebugOverlay::Circle(Vector const&, Vector const&, Vector const&, float, int, int, int, int, bool, float)
 T NDebugOverlay::Cross(Vector const&, float, int, int, int, bool, float)
 T NDebugOverlay::Cross3D(Vector const&, Vector const&, Vector const&, int, int, int, bool, float)
 T NDebugOverlay::Cross3D(Vector const&, float, int, int, int, bool, float)
 T NDebugOverlay::Cross3DOriented(Vector const&, QAngle const&, float, int, int, int, bool, float)
 T NDebugOverlay::DrawGroundCrossHairOverlay()
 T NDebugOverlay::DrawTickMarkedLine(Vector const&, Vector const&, float, int, int, int, int, bool, float)
 T NDebugOverlay::EntityBounds(CBaseEntity const*, int, int, int, int, float)
 T NDebugOverlay::EntityTextAtPosition(Vector const&, int, char const*, float, int, int, int, int)
 T NDebugOverlay::Grid(Vector const&)
 T NDebugOverlay::HorzArrow(Vector const&, Vector const&, float, int, int, int, int, bool, float)
 T NDebugOverlay::Line(Vector const&, Vector const&, int, int, int, bool, float)
 T NDebugOverlay::PurgeTextOverlays()
 T NDebugOverlay::ScreenText(float, float, char const*, int, int, int, int, float)
 T NDebugOverlay::Sphere(Vector const&, QAngle const&, float, int, int, int, int, bool, float)
 T NDebugOverlay::Sphere(Vector const&, float, int, int, int, bool, float)
 T NDebugOverlay::SweptBox(Vector const&, Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
 T NDebugOverlay::Text(Vector const&, char const*, bool, float)
 T NDebugOverlay::Triangle(Vector const&, Vector const&, Vector const&, int, int, int, int, bool, float)
 T NDebugOverlay::VertArrow(Vector const&, Vector const&, float, int, int, int, int, bool, float)
 T NDebugOverlay::YawArrow(Vector const&, float, float, float, int, int, int, int, bool, float)
 T NPCPhysics_CreateSolver(CAI_BaseNPC*, CBaseEntity*, bool, float)
 T NPC_CheckBrushExclude(CBaseEntity*, CBaseEntity*)
 T NWCEdit::AirNodePlacementPosition()
 T NWCEdit::CreateAILink(CBasePlayer*)
 T NWCEdit::CreateAINode(CBasePlayer*)
 T NWCEdit::DestroyAILink(CBasePlayer*)
 T NWCEdit::DestroyAINode(CBasePlayer*)
 T NWCEdit::IsWCVersionValid()
 T NWCEdit::RememberEntityPosition(CBaseEntity*)
 T NWCEdit::UndoDestroyAINode()
 T NWCEdit::UpdateEntityPosition(CBaseEntity*)
 T NavAreaCollector::operator()(CNavArea*)
 T NavDrawDashedLine(Vector const&, Vector const&, NavEditColor)
 T NavDrawHorizontalArrow(Vector const&, Vector const&, float, NavEditColor)
 T NavDrawLine(Vector const&, Vector const&, NavEditColor)
 T NavDrawTriangle(Vector const&, Vector const&, Vector const&, NavEditColor)
 T NavDrawVolume(Vector const&, Vector const&, int, NavEditColor)
 T NavEditClearAllAttributes()
 T NavEditClearAttribute(CCommand const&)
 T NavEditMarkAttribute(CCommand const&)
 T NavMeshFactory()
 T NavMeshMergeAutocomplete(char const*, char (*) [64])
 T NotifySpeedRunSuccess(int, char const*)
 T OBBHasFullyContainedIntersectionWithQuad(Vector const&, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector const&, Vector const&, float, Vector const&, float)
 T OnBaseCombatWeaponDestroyed(CBaseCombatWeapon*)
 T OneWayLink_t::Compare(OneWayLink_t const*, OneWayLink_t const*)
 T PS_InternalData_t::NetworkStateChanged()
 T PS_InternalData_t::NetworkStateChanged(void*)
 T PS_InternalData_t::NetworkVar_Simulation::NetworkStateChanged()
 T PS_InternalData_t::NetworkVar_Simulation::NetworkStateChanged(void*)
 T PS_InternalData_t::NetworkVar_Simulation::~NetworkVar_Simulation()
 T PS_SimulationData_t::NetworkStateChanged()
 T PS_SimulationData_t::NetworkStateChanged(void*)
 T PaintBlobUpdate(CUtlVector<CPaintBlob*, CUtlMemory<CPaintBlob*, int> > const&)
 T PaintNoPower()
 T PaintPortalPower()
 T PaintPowerInfo_t::NetworkStateChanged()
 T PaintPowerInfo_t::NetworkStateChanged(void*)
 T PaintPowerInfo_t::PaintPowerInfo_t()
 T PaintPowerInfo_t::PaintPowerInfo_t(Vector const&, Vector const&, CBaseEntity*, PaintPowerType, bool)
 T PaintPowerPickup(int, CBasePlayer*)
 T PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::ActivateNoPower(PaintPowerInfo_t&)
 T PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::AddSurfacePaintPowerInfo(PaintPowerInfo_t const&, char const*)
 T PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::DeactivateNoPower(PaintPowerInfo_t&)
 T PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::FindHighestPriorityActivePaintPower() const
 T PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::GetPaintPower(unsigned int) const
 T PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::GetPaintPowers() const
 T PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::PaintPowerUser()
 T PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::UpdatePaintPowers()
 T PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::UseNoPower(PaintPowerInfo_t&)
 T PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::~PaintPowerUser()
 T PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::ActivateNoPower(PaintPowerInfo_t&)
 T PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::AddSurfacePaintPowerInfo(PaintPowerInfo_t const&, char const*)
 T PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::DeactivateNoPower(PaintPowerInfo_t&)
 T PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::FindHighestPriorityActivePaintPower() const
 T PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::GetPaintPower(unsigned int) const
 T PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::GetPaintPowers() const
 T PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::PaintPowerUser()
 T PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::UpdatePaintPowers()
 T PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::UseNoPower(PaintPowerInfo_t&)
 T PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::~PaintPowerUser()
 T PaintPowerUser<CPaintableEntity<CPhysicsProp> >::ActivateNoPower(PaintPowerInfo_t&)
 T PaintPowerUser<CPaintableEntity<CPhysicsProp> >::AddSurfacePaintPowerInfo(PaintPowerInfo_t const&, char const*)
 T PaintPowerUser<CPaintableEntity<CPhysicsProp> >::DeactivateNoPower(PaintPowerInfo_t&)
 T PaintPowerUser<CPaintableEntity<CPhysicsProp> >::FindHighestPriorityActivePaintPower() const
 T PaintPowerUser<CPaintableEntity<CPhysicsProp> >::GetPaintPower(unsigned int) const
 T PaintPowerUser<CPaintableEntity<CPhysicsProp> >::GetPaintPowers() const
 T PaintPowerUser<CPaintableEntity<CPhysicsProp> >::PaintPowerUser()
 T PaintPowerUser<CPaintableEntity<CPhysicsProp> >::UpdatePaintPowers()
 T PaintPowerUser<CPaintableEntity<CPhysicsProp> >::UseNoPower(PaintPowerInfo_t&)
 T PaintPowerUser<CPaintableEntity<CPhysicsProp> >::~PaintPowerUser()
 T PaintSpeedPower()
 T PaintSplatEffect(Vector const&, Vector const&, int)
 T ParseKeyvalue(void*, typedescription_t*, int, char const*, char const*)
 T ParseParticleEffects(bool)
 T ParseParticleEffectsMap(char const*, bool)
 T ParseStringToEffectArray(char const*, char (*) [64], int*, int)
 T ParseStringToExclusionArray(char const*, char (*) [64], int)
 T ParseStringToGibArray(char const*, char const*, char (*) [64], int)
 T ParseStringToIntArray(char const*, int*, int)
 T ParseTokenFromString(char const**)
 T ParticleSmokeGrenade::GetDataDescMap()
 T ParticleSmokeGrenade::GetServerClass()
 T ParticleSmokeGrenade::ParticleSmokeGrenade()
 T ParticleSmokeGrenade::Spawn()
 T ParticleSmokeGrenade::Think()
 T ParticleSmokeGrenade::UpdateTransmitState()
 T ParticleSmokeGrenade::YouForgotToImplementOrDeclareServerClass()
 T ParticleSmokeGrenade::~ParticleSmokeGrenade()
 T Particle_Test_Start(CBasePlayer*, char const*, bool)
 T PassServerEntityFilter(IHandleEntity const*, IHandleEntity const*)
 T PathFindDirection(CPathTrack*, Vector const&, Vector const&)
 T PhysAddShadow(CBaseEntity*)
 T PhysBreakSound(CBaseEntity*, IPhysicsObject*, Vector)
 T PhysCallbackDamage(CBaseEntity*, CTakeDamageInfo const&)
 T PhysCallbackDamage(CBaseEntity*, CTakeDamageInfo const&, gamevcollisionevent_t&, int)
 T PhysCallbackImpulse(IPhysicsObject*, Vector const&, Vector const&)
 T PhysCallbackRemove(IServerNetworkable*)
 T PhysCallbackSetVelocity(IPhysicsObject*, Vector const&)
 T PhysCannonAccountableForObject(CBaseCombatWeapon*, CBaseEntity*)
 T PhysCannonBeginUpgrade(CBaseAnimating*)
 T PhysCannonGetHeldObjectMass(CBaseCombatWeapon*, IPhysicsObject*)
 T PhysCleanupFrictionSounds(CBaseEntity*)
 T PhysCollisionDust(gamevcollisionevent_t*, surfacedata_t*)
 T PhysCollisionScreenShake(gamevcollisionevent_t*, int)
 T PhysCollisionSound(CBaseEntity*, IPhysicsObject*, int, int, int, float, float)
 T PhysComputeSlideDirection(IPhysicsObject*, Vector const&, Vector const&, Vector*, Vector*, float)
 T PhysCreateBbox(Vector const&, Vector const&)
 T PhysCreateVirtualTerrain(CBaseEntity*, objectparams_t const&)
 T PhysCreateWorld_Shared(CBaseEntity*, vcollide_t*, objectparams_t const&)
 T PhysDestroyObject(IPhysicsObject*, CBaseEntity*)
 T PhysDisableEntityCollisions(CBaseEntity*, CBaseEntity*)
 T PhysDisableEntityCollisions(IPhysicsObject*, IPhysicsObject*)
 T PhysEnableEntityCollisions(CBaseEntity*, CBaseEntity*)
 T PhysEnableEntityCollisions(IPhysicsObject*, IPhysicsObject*)
 T PhysEnableFloating(IPhysicsObject*, bool)
 T PhysEntityCollisionsAreDisabled(CBaseEntity*, CBaseEntity*)
 T PhysFindOrAddVehicleScript(char const*, vehicleparams_t*, vehiclesounds_t*)
 T PhysFlushVehicleScripts()
 T PhysForceClearVelocity(IPhysicsObject*)
 T PhysFrictionEffect(Vector&, Vector, float, int, int)
 T PhysFrictionEffectPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T PhysFrictionSound(CBaseEntity*, IPhysicsObject*, char const*, unsigned int&, float)
 T PhysFrictionSound(CBaseEntity*, IPhysicsObject*, float, int, int)
 T PhysGetEntityMass(CBaseEntity*)
 T PhysGetListOfPenetratingEntities(CBaseEntity*, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >&)
 T PhysGetMassCenterOverride(CBaseEntity*, vcollide_t*, solid_t&)
 T PhysGetTriggerEvent(triggerevent_t*, CBaseEntity*)
 T PhysHasContactWithOtherInDirection(IPhysicsObject*, Vector const&)
 T PhysIsFinalTick()
 T PhysIsInCallback()
 T PhysModelCreate(CBaseEntity*, int, Vector const&, QAngle const&, solid_t*)
 T PhysModelCreateBox(CBaseEntity*, Vector const&, Vector const&, Vector const&, bool)
 T PhysModelCreateCustom(CBaseEntity*, CPhysCollide const*, Vector const&, QAngle const&, char const*, bool, solid_t*)
 T PhysModelCreateOBB(CBaseEntity*, Vector const&, Vector const&, Vector const&, QAngle const&, bool)
 T PhysModelCreateUnmoveable(CBaseEntity*, int, Vector const&, QAngle const&)
 T PhysModelParseSolid(solid_t&, CBaseEntity*, int)
 T PhysModelParseSolidByIndex(solid_t&, CBaseEntity*, int, int)
 T PhysModelParseSolidByIndex(solid_t&, CBaseEntity*, vcollide_t*, int)
 T PhysOnCleanupDeleteList()
 T PhysParseSurfaceData(IPhysicsSurfaceProps*, IFileSystem*)
 T PhysRemoveShadow(CBaseEntity*)
 T PhysSetMassCenterOverride(masscenteroverride_t&)
 T PhysSolidOverride(solid_t&, string_t)
 T PhysTeleportConstrainedEntity(CBaseEntity*, IPhysicsObject*, IPhysicsObject*, Vector const&, QAngle const&, bool)
 T PhysicsCommand(CCommand const&, void (*)(CBaseEntity*))
 T PhysicsGameSystem()
 T PhysicsImpactSound(CBaseEntity*, IPhysicsObject*, int, int, int, float, float)
 T PhysicsSplash(IPhysicsFluidController*, IPhysicsObject*, CBaseEntity*)
 T Physics_RunThinkFunctions(bool)
 T Physics_SimulateEntity(CBaseEntity*)
 T Pickup_DefaultPhysGunLaunchVelocity(Vector const&, float)
 T Pickup_ForcePlayerToDropThisObject(CBaseEntity*)
 T Pickup_GetPreferredCarryAngles(CBaseEntity*, CBasePlayer*, matrix3x4_t&, QAngle&)
 T Pickup_OnPhysGunDrop(CBaseEntity*, CBasePlayer*, PhysGunDrop_t)
 T Pickup_OnPhysGunPickup(CBaseEntity*, CBasePlayer*, PhysGunPickup_t)
 T PlaceDirectory::~PlaceDirectory()
 T PlayLockSounds(CBaseEntity*, locksound_t*, int, int)
 T PlayerMove()
 T PlayerPickupControllerIsHoldingEntity(CBaseEntity*, CBaseEntity*)
 T PlayerPickupGetHeldObjectMass(CBaseEntity*, IPhysicsObject*)
 T PlayerPickupObject(CBasePlayer*, CBaseEntity*)
 T PlayerPickupPaintPowerUser<CNPC_FloorTurret>::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T PlayerPickupPaintPowerUser<CNPC_FloorTurret>::~PlayerPickupPaintPowerUser()
 T PlayerPickupPaintPowerUser<CPhysicsProp>::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T PlayerPickupPaintPowerUser<CPhysicsProp>::~PlayerPickupPaintPowerUser()
 T PlayerVoiceListener()
 T PointCameraSetupVisibility(CBaseEntity*, int, unsigned char*, int)
 T PointOnLineNearestPoint(Vector const&, Vector const&, Vector const&)
 T PolyFromPlane(Vector*, Vector const&, float, float)
 T PolyFromPlane_SIMD(float __vector(4)*, float __vector(4) const&, float)
 T Portal2_GetCurrentCommunityMapID()
 T PortalInventoryManager()
 T PortalPlacementSucceeded(PortalPlacementResult_t)
 T PortalReportFunc(bool)
 T PortalSurfaceType(CGameTrace const&)
 T PortalTracePlayerBBoxForGround(Vector const&, Vector const&, Vector const&, Vector const&, IHandleEntity*, unsigned int, int, CTrace_PlayerAABB_vs_Portals&, Vector const&)
 T Portal_FindUsefulVelocity(CBaseEntity*)
 T PostFrameNavigationSystem()
 T PostProcessSystem()
 T PostSimulation_SetVelocityEvent(IPhysicsObject*, Vector const&)
 T PowerTypeToString(PaintPowerInfo_t const&)
 T PrecacheCustomResponseSystem(char const*)
 T PrecacheEffect(char const*)
 T PrecacheFileWeaponInfoDatabase(IFileSystem*, unsigned char const*)
 T PrecacheGibsForModel(int)
 T PrecacheInstancedScene(char const*)
 T PrecacheMaterial(char const*)
 T PrecacheMovie(char const*)
 T PrecacheParticleSystem(char const*)
 T PrecachePhysicsSounds()
 T PrecachePointCommentaryNodePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T PrecachePointTemplates()
 T PrecacheStandardParticleSystems()
 T PrecacheVGuiScreen(char const*)
 T PreparePanelMessageMap(vgui::PanelMessageMap*)
 T PrintPowerInfoDebugMsg(PaintPowerInfo_t const&)
 T ProcessQueryCacheUpdate(QueryCacheUpdateRecord_t&)
 T ProjectedEntityAmbientSoundProxy::Create(CBaseEntity*)
 T ProjectedEntityAmbientSoundProxy::GetServerClass()
 T ProjectedEntityAmbientSoundProxy::UpdateTransmitState()
 T ProjectedEntityAmbientSoundProxy::YouForgotToImplementOrDeclareServerClass()
 T ProjectedEntityAmbientSoundProxy::~ProjectedEntityAmbientSoundProxy()
 T PropBreakableCapEdictsOnCreateAll(CUtlVector<breakmodel_t, CUtlMemory<breakmodel_t, int> >&, IPhysicsObject*, breakablepropparams_t const&, CBaseEntity*, int)
 T PropBreakableCreateAll(int, IPhysicsObject*, Vector const&, QAngle const&, Vector const&, Vector const&, float, float, int, CBaseEntity*, bool)
 T PropBreakableCreateAll(int, IPhysicsObject*, breakablepropparams_t const&, CBaseEntity*, int, bool, bool)
 T PropBreakablePrecacheAll(string_t)
 T PropIsGib(CBaseEntity*)
 T PropPaintPowerUser<CNPC_FloorTurret>::ActivateBouncePower(PaintPowerInfo_t&)
 T PropPaintPowerUser<CNPC_FloorTurret>::ActivateSpeedPower(PaintPowerInfo_t&)
 T PropPaintPowerUser<CNPC_FloorTurret>::ChooseActivePaintPowers(CUtlVector<PaintPowerInfo_t, CUtlMemory<PaintPowerInfo_t, int> >&)
 T PropPaintPowerUser<CNPC_FloorTurret>::DataMapInit()
 T PropPaintPowerUser<CNPC_FloorTurret>::DeactivateBouncePower(PaintPowerInfo_t&)
 T PropPaintPowerUser<CNPC_FloorTurret>::DeactivateSpeedPower(PaintPowerInfo_t&)
 T PropPaintPowerUser<CNPC_FloorTurret>::GetDataDescMap()
 T PropPaintPowerUser<CNPC_FloorTurret>::Paint(PaintPowerType, Vector const&)
 T PropPaintPowerUser<CNPC_FloorTurret>::UpdatePaintPowersFromContacts()
 T PropPaintPowerUser<CNPC_FloorTurret>::UseBouncePower(PaintPowerInfo_t&)
 T PropPaintPowerUser<CNPC_FloorTurret>::UseSpeedPower(PaintPowerInfo_t&)
 T PropPaintPowerUser<CNPC_FloorTurret>::VPhysicsCollision(int, gamevcollisionevent_t*)
 T PropPaintPowerUser<CNPC_FloorTurret>::VPhysicsUpdate(IPhysicsObject*)
 T PropPaintPowerUser<CPhysicsProp>::ActivateBouncePower(PaintPowerInfo_t&)
 T PropPaintPowerUser<CPhysicsProp>::ActivateSpeedPower(PaintPowerInfo_t&)
 T PropPaintPowerUser<CPhysicsProp>::ChooseActivePaintPowers(CUtlVector<PaintPowerInfo_t, CUtlMemory<PaintPowerInfo_t, int> >&)
 T PropPaintPowerUser<CPhysicsProp>::DataMapInit()
 T PropPaintPowerUser<CPhysicsProp>::DeactivateBouncePower(PaintPowerInfo_t&)
 T PropPaintPowerUser<CPhysicsProp>::DeactivateSpeedPower(PaintPowerInfo_t&)
 T PropPaintPowerUser<CPhysicsProp>::GetDataDescMap()
 T PropPaintPowerUser<CPhysicsProp>::Paint(PaintPowerType, Vector const&)
 T PropPaintPowerUser<CPhysicsProp>::Spawn()
 T PropPaintPowerUser<CPhysicsProp>::UpdatePaintPowersFromContacts()
 T PropPaintPowerUser<CPhysicsProp>::UseBouncePower(PaintPowerInfo_t&)
 T PropPaintPowerUser<CPhysicsProp>::UseSpeedPower(PaintPowerInfo_t&)
 T PropPaintPowerUser<CPhysicsProp>::VPhysicsCollision(int, gamevcollisionevent_t*)
 T PropPaintPowerUser<CPhysicsProp>::VPhysicsUpdate(IPhysicsObject*)
 T Q_log2(unsigned int)
 T QuaternionAccumulate(Quaternion const&, float, Quaternion const&, Quaternion&)
 T QuaternionAlign(Quaternion const&, Quaternion const&, Quaternion&)
 T QuaternionAngleDiff(Quaternion const&, Quaternion const&)
 T QuaternionAngles(Quaternion const&, QAngle&)
 T QuaternionAngles(Quaternion const&, RadianEuler&)
 T QuaternionAxisAngle(Quaternion const&, Vector&, float&)
 T QuaternionBlend(Quaternion const&, Quaternion const&, float, Quaternion&)
 T QuaternionBlendNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
 T QuaternionIdentityBlend(Quaternion const&, float, Quaternion&)
 T QuaternionMA(Quaternion const&, float, Quaternion const&, Quaternion&)
 T QuaternionMatrix(Quaternion const&, Vector const&, matrix3x4_t&)
 T QuaternionMatrix(Quaternion const&, matrix3x4_t&)
 T QuaternionMult(Quaternion const&, Quaternion const&, Quaternion&)
 T QuaternionNormalize(Quaternion&)
 T QuaternionSM(float, Quaternion const&, Quaternion const&, Quaternion&)
 T QuaternionScale(Quaternion const&, float, Quaternion&)
 T QuaternionSlerp(Quaternion const&, Quaternion const&, float, Quaternion&)
 T QuaternionSlerpNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
 T QueryCacheEntry_t::IssueQuery()
 T RR::CApplyContextOperator::Apply(char const*, char const*, char*, int)
 T RR::CApplyContextOperator::FindOperator(char const*)
 T RR::CDecrementOperator::Apply(char const*, char const*, char*, int)
 T RR::CIncrementOperator::Apply(char const*, char const*, char*, int)
 T RR::CToggleOperator::Apply(char const*, char const*, char*, int)
 T RadioImage::ApplySchemeSettings(vgui::IScheme*, bool)
 T RadioImage::Paint()
 T RadioImage::~RadioImage()
 T RadiusDamage(CTakeDamageInfo const&, Vector const&, float, int, CBaseEntity*)
 T RadiusSelect::operator()(CNavArea*)
 T RagdollActivate(ragdoll_t&, vcollide_t*, int, bool)
 T RagdollApplyAnimationAsVelocity(ragdoll_t&, matrix3x4_t const*, matrix3x4_t const*, float)
 T RagdollCreate(ragdoll_t&, ragdollparams_t const&, IPhysicsEnvironment*)
 T RagdollDestroy(ragdoll_t&)
 T RagdollGetBoneMatrix(ragdoll_t const&, CBoneAccessor&, int)
 T RagdollIsAsleep(ragdoll_t const&)
 T RagdollManager_SaveImportant(CAI_BaseNPC*)
 T RagdollSetupCollisions(ragdoll_t&, vcollide_t*, int)
 T RagdollSolveSeparation(ragdoll_t&, CBaseEntity*)
 T Ragdoll_GetAngleOverrideString(char*, int, CBaseEntity*)
 T Ragdoll_GetRagdoll(CBaseEntity*)
 T Ragdoll_IsPropRagdoll(CBaseEntity*)
 T RandomInterval(interval_t const&)
 T RangeCompressor(float, float, float, float)
 T Ray_t::Init(Vector const&, Vector const&, Vector const&, Vector const&)
 T ReadDMXHeader(CUtlBuffer&, char*, int, int&, char*, int, int&)
 T ReadDamageCutoutDataFromFile(CUtlVector<DamageInfo, CUtlMemory<DamageInfo, int> >&, IFileSystem*, char const*, unsigned char const*)
 T ReadEncryptedKVFile(IFileSystem*, char const*, unsigned char const*)
 T ReadInterval(char const*)
 T ReadUsercmd(bf_read*, CUserCmd*, CUserCmd*)
 T ReadWeaponDataFromFileForSlot(IFileSystem*, char const*, unsigned short*, unsigned char const*)
 T RecheckEntityCollision(CBaseEntity*)
 T RecomputePolygonSurfaceNormal(GeneratePolyhedronFromPlanes_Polygon*)
 T ReconnectInterface(void* (*)(char const*, int*), char const*)
 T ReconnectMergedArea(CUtlDict<CNavArea*, int>&, KeyValues*, NavDirType, char const*)
 T Recursive_MarkPlanarity_Dead(GeneratePolyhedronFromPlanes_LineLL*, MarkPlanarityControlStruct_t&)
 T Recursive_MarkPlanarity_OnPlane(GeneratePolyhedronFromPlanes_LineLL*, MarkPlanarityControlStruct_t&)
 T RegenerationForceOnChangeCallback(IConVar*, char const*, float)
 T RegisterUserMessages()
 T ReleaseInstancedRegistry(IRegistry*)
 T RemapAngleRange(float, float, float)
 T RemapViewAngles(ViewSmoothingData_t*, QAngle&)
 T RemoteBugOnUsage()
 T RemoveActorFromScriptedScenes(CBaseFlex*, bool, bool, char const*)
 T RemoveDegeneratePoints(GeneratePolyhedronFromPlanes_Polygon*, CClipLinkedGeometryDestructors&)
 T RemoveDegeneratePolygon(GeneratePolyhedronFromPlanes_Polygon*, CClipLinkedGeometryDestructors&)
 T RemovePooledString(char const*)
 T ReportPositionChanged(CBaseEntity*)
 T ReportVPhysicsStateChanged(IPhysicsObject*, CBaseEntity*, bool)
 T RequestMapRating()
 T ResetActivityIndexes(CStudioHdr*)
 T ResetAllPlayersStats()
 T ResetEventIndexes(CStudioHdr*)
 T ResetGlobalState()
 T ResetWindspeed()
 T RespawnEntities()
 T ResponseRules::CRR_Concept::CRR_Concept(char const*)
 T ResponseRules::CRR_Concept::GetStringConcept() const
 T ResponseRules::CRR_Concept::GetStringForGenericId(CUtlSymbol)
 T ResponseRules::CRR_Response::CRR_Response()
 T ResponseRules::CRR_Response::CRR_Response(ResponseRules::CRR_Response const&)
 T ResponseRules::CRR_Response::Describe(ResponseRules::CriteriaSet const*)
 T ResponseRules::CRR_Response::DescribeResponse(ResponseRules::ResponseType_t)
 T ResponseRules::CRR_Response::GetDelay() const
 T ResponseRules::CRR_Response::GetPreDelay() const
 T ResponseRules::CRR_Response::GetRespeakDelay() const
 T ResponseRules::CRR_Response::GetResponse(char*, unsigned long) const
 T ResponseRules::CRR_Response::GetSoundLevel() const
 T ResponseRules::CRR_Response::GetSpeakOnce() const
 T ResponseRules::CRR_Response::GetWeaponDelay() const
 T ResponseRules::CRR_Response::Init(ResponseRules::ResponseType_t, char const*, ResponseRules::ResponseParams const&, char const*, char const*, bool)
 T ResponseRules::CRR_Response::Invalidate()
 T ResponseRules::CRR_Response::ShouldBreakOnNonIdle() const
 T ResponseRules::CRR_Response::ShouldntUseScene() const
 T ResponseRules::CRR_Response::operator=(ResponseRules::CRR_Response const&)
 T ResponseRules::CRR_Response::~CRR_Response()
 T ResponseRules::CResponseSystem::BuildDispatchTables()
 T ResponseRules::CResponseSystem::CResponseSystem()
 T ResponseRules::CResponseSystem::Clear()
 T ResponseRules::CResponseSystem::CompareUsingMatcher(char const*, ResponseRules::Matcher&, bool)
 T ResponseRules::CResponseSystem::ComputeMatcher(ResponseRules::Criteria*, ResponseRules::Matcher&)
 T ResponseRules::CResponseSystem::DebugPrint(int, char const*, ...)
 T ResponseRules::CResponseSystem::DescribeResponseGroup(ResponseRules::ResponseGroup*, int, int)
 T ResponseRules::CResponseSystem::DumpRules()
 T ResponseRules::CResponseSystem::FakeDepletes(ResponseRules::ResponseGroup*, ResponseRules::IResponseFilter*)
 T ResponseRules::CResponseSystem::FindBestMatchingRule(ResponseRules::CriteriaSet const&, bool, float&)
 T ResponseRules::CResponseSystem::FindBestResponse(ResponseRules::CriteriaSet const&, ResponseRules::CRR_Response&, ResponseRules::IResponseFilter*)
 T ResponseRules::CResponseSystem::GetAllResponses(CUtlVector<ResponseRules::CRR_Response, CUtlMemory<ResponseRules::CRR_Response, int> >*)
 T ResponseRules::CResponseSystem::GetBestResponse(ResponseRules::CResponseSystem::ResponseSearchResult&, ResponseRules::Rule*, bool, ResponseRules::IResponseFilter*)
 T ResponseRules::CResponseSystem::LoadFromBuffer(char const*, char const*)
 T ResponseRules::CResponseSystem::LoadRuleSet(char const*)
 T ResponseRules::CResponseSystem::ParseCriterion()
 T ResponseRules::CResponseSystem::ParseEnumeration()
 T ResponseRules::CResponseSystem::ParseInclude()
 T ResponseRules::CResponseSystem::ParseOneCriterion(char const*)
 T ResponseRules::CResponseSystem::ParseOneResponse(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse()
 T ResponseRules::CResponseSystem::ParseResponseGroup_DefaultDelay(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_Delay(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_NoDelay(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_NoScene(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_Odds(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_PreDelay(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_RespeakDelay(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_Soundlevel(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_SpeakOnce(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_Start(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_StopOnNonIdle(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponseGroup_WeaponDelay(char const*, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams&)
 T ResponseRules::CResponseSystem::ParseResponse_DefaultDelay(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_Delay(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_DisplayFirst(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_DisplayLast(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_Fire(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_NoDelay(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_NoScene(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_Odds(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_PreDelay(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_RespeakDelay(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_Soundlevel(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_SpeakOnce(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_StopOnNonIdle(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_Then(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_WeaponDelay(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseResponse_Weight(ResponseRules::ParserResponse&, ResponseRules::ResponseGroup&, ResponseRules::ResponseParams*)
 T ResponseRules::CResponseSystem::ParseRule()
 T ResponseRules::CResponseSystem::ParseRule_ApplyContext(ResponseRules::Rule&)
 T ResponseRules::CResponseSystem::ParseRule_ApplyContextToWorld(ResponseRules::Rule&)
 T ResponseRules::CResponseSystem::ParseRule_Criteria(ResponseRules::Rule&)
 T ResponseRules::CResponseSystem::ParseRule_MatchOnce(ResponseRules::Rule&)
 T ResponseRules::CResponseSystem::ParseRule_Response(ResponseRules::Rule&)
 T ResponseRules::CResponseSystem::PushScript(char const*, unsigned char*)
 T ResponseRules::CResponseSystem::RecursiveScoreSubcriteriaAgainstRule(ResponseRules::CriteriaSet const&, ResponseRules::Criteria*, bool&, bool)
 T ResponseRules::CResponseSystem::ResetResponseGroups()
 T ResponseRules::CResponseSystem::ResolveResponse(ResponseRules::CResponseSystem::ResponseSearchResult&, int, char const*, bool, ResponseRules::IResponseFilter*)
 T ResponseRules::CResponseSystem::ResolveToken(ResponseRules::Matcher&, char*, unsigned long, char const*)
 T ResponseRules::CResponseSystem::ResponseWarning(char const*, ...)
 T ResponseRules::CResponseSystem::ScoreCriteriaAgainstRule(ResponseRules::CriteriaSet const&, ResponseRules::CResponseDict<ResponseRules::Rule*, unsigned short>&, int, bool)
 T ResponseRules::CResponseSystem::ScoreCriteriaAgainstRuleCriteria(ResponseRules::CriteriaSet const&, int, bool&, bool)
 T ResponseRules::CResponseSystem::SelectWeightedResponseFromResponseGroup(ResponseRules::ResponseGroup*, ResponseRules::IResponseFilter*)
 T ResponseRules::CResponseSystem::~CResponseSystem()
 T ResponseRules::Criteria::Criteria()
 T ResponseRules::Criteria::Criteria(ResponseRules::Criteria const&)
 T ResponseRules::Criteria::operator=(ResponseRules::Criteria const&)
 T ResponseRules::Criteria::~Criteria()
 T ResponseRules::CriteriaSet::AppendCriteria(CUtlSymbol, char const*, float)
 T ResponseRules::CriteriaSet::AppendCriteria(char const*, char const*, float)
 T ResponseRules::CriteriaSet::AppendCriteria(char const*, float, float)
 T ResponseRules::CriteriaSet::ComputeCriteriaSymbol(char const*)
 T ResponseRules::CriteriaSet::CritEntry_t::LessFunc(ResponseRules::CriteriaSet::CritEntry_t const&, ResponseRules::CriteriaSet::CritEntry_t const&)
 T ResponseRules::CriteriaSet::CriteriaSet()
 T ResponseRules::CriteriaSet::Describe() const
 T ResponseRules::CriteriaSet::FindCriterionIndex(CUtlSymbol) const
 T ResponseRules::CriteriaSet::FindCriterionIndex(char const*) const
 T ResponseRules::CriteriaSet::GetCount() const
 T ResponseRules::CriteriaSet::GetValue(int) const
 T ResponseRules::CriteriaSet::GetWeight(int) const
 T ResponseRules::CriteriaSet::InterceptWorldSetContexts(ResponseRules::CriteriaSet*, ResponseRules::CriteriaSet*)
 T ResponseRules::CriteriaSet::Merge(ResponseRules::CriteriaSet const*)
 T ResponseRules::CriteriaSet::Merge(char const*)
 T ResponseRules::CriteriaSet::RemoveCriteria(char const*)
 T ResponseRules::CriteriaSet::Reset()
 T ResponseRules::CriteriaSet::WriteToEntity(CBaseEntity*)
 T ResponseRules::IEngineEmulator::Get()
 T ResponseRules::Matcher::GetToken()
 T ResponseRules::Matcher::SetRaw(char const*)
 T ResponseRules::Matcher::SetToken(char const*)
 T ResponseRules::ParserResponse::ParserResponse()
 T ResponseRules::ParserResponse::ParserResponse(ResponseRules::ParserResponse const&)
 T ResponseRules::ParserResponse::operator=(ResponseRules::ParserResponse const&)
 T ResponseRules::ParserResponse::~ParserResponse()
 T ResponseRules::ResponseCopyString(char const*)
 T ResponseRules::ResponseGroup::ResponseGroup(ResponseRules::ResponseGroup const&)
 T ResponseRules::ResponseRulePartition::Count()
 T ResponseRules::ResponseRulePartition::GetBucketForSpeakerAndConcept(char const*, char const*, char const*)
 T ResponseRules::ResponseRulePartition::GetDictForRule(ResponseRules::CResponseSystem*, ResponseRules::Rule*)
 T ResponseRules::ResponseRulePartition::GetDictsForCriteria(CUtlVectorFixed<ResponseRules::CResponseDict<ResponseRules::Rule*, unsigned short>*, 2ul>*, ResponseRules::CriteriaSet const&)
 T ResponseRules::ResponseRulePartition::GetElementName(unsigned int const&) const
 T ResponseRules::ResponseRulePartition::IndexFromDictElem(ResponseRules::CResponseDict<ResponseRules::Rule*, unsigned short>*, int)
 T ResponseRules::ResponseRulePartition::RemoveAll()
 T ResponseRules::ResponseRulePartition::ResponseRulePartition()
 T ResponseRules::ResponseRulePartition::~ResponseRulePartition()
 T ResponseRules::Rule::GetPointerForRuleCriterionByName(ResponseRules::CResponseSystem*, CUtlSymbol const&)
 T ResponseRules::Rule::GetValueForRuleCriterionByName(ResponseRules::CResponseSystem*, CUtlSymbol const&)
 T ResponseRules::Rule::RecursiveGetPointerForRuleCriterionByName(ResponseRules::CResponseSystem*, ResponseRules::Criteria const*, CUtlSymbol const&)
 T ResponseRules::Rule::RecursiveGetValueForRuleCriterionByName(ResponseRules::CResponseSystem*, ResponseRules::Criteria const*, CUtlSymbol const&)
 T ResponseRules::Rule::Rule()
 T ResponseRules::Rule::SetContext(char const*)
 T ResponseRules::Rule::~Rule()
 T ResponseRules::response_interval_t<float16_with_assign>::FromInterval(interval_t const&)
 T ResponseRules::response_interval_t<float16_with_assign>::ToInterval(interval_t&) const
 T RestoreGlobalState(CSaveRestoreData*)
 T RocketTrail::CreateRocketTrail()
 T RocketTrail::FollowEntity(CBaseEntity*, char const*)
 T RocketTrail::GetDataDescMap()
 T RocketTrail::GetServerClass()
 T RocketTrail::RocketTrail()
 T RocketTrail::YouForgotToImplementOrDeclareServerClass()
 T RocketTrail::~RocketTrail()
 T RotateAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
 T RotatePlayerHeldObject(CBasePlayer*, float, float, bool)
 T RotationDelta(QAngle const&, QAngle const&, QAngle*)
 T RotationDeltaAxisAngle(QAngle const&, QAngle const&, Vector&, float&)
 T RunMimicCommand(CUserCmd&)
 T SENTENCEG_GetIndex(char const*)
 T SENTENCEG_Init()
 T SENTENCEG_Lookup(char const*)
 T SENTENCEG_PlayRndI(edict_t*, int, float, soundlevel_t, int, int)
 T SENTENCEG_PlayRndSz(edict_t*, char const*, float, soundlevel_t, int, int)
 T SENTENCEG_PlaySequentialSz(edict_t*, char const*, float, soundlevel_t, int, int, int, int)
 T SMPMapStats::BuildGamestatDataTable(KeyValues*)
 T SPortalData::BuildGamestatDataTable(KeyValues*)
 T SPuzzleData::BuildGamestatDataTable(KeyValues*)
 T SaveGlobalState(CSaveRestoreData*)
 T SaveInit(int)
 T SaveLocalMapPlayOrder()
 T SaveMPStatsData()
 T ScaleBones(CStudioHdr const*, Quaternion*, Vector*, int, float, int)
 T SceneManager_ClientActive(CBasePlayer*)
 T SceneNameAutocomplete(char const*, char (*) [64])
 T Scene_Printf(char const*, ...)
 T ScriptClassDesc_t* GetScriptDesc<CBaseAnimating>(CBaseAnimating*)
 T ScriptClassDesc_t* GetScriptDesc<CBaseEntity>(CBaseEntity*)
 T ScriptClassDesc_t* GetScriptDesc<CBaseMultiplayerPlayer>(CBaseMultiplayerPlayer*)
 T ScriptClassDesc_t* GetScriptDesc<CBasePlayer>(CBasePlayer*)
 T ScriptClassDesc_t* GetScriptDesc<CPlayerVoiceListener>(CPlayerVoiceListener*)
 T ScriptClassDesc_t* GetScriptDesc<CScriptKeyValues>(CScriptKeyValues*)
 T ScriptClassDesc_t::~ScriptClassDesc_t()
 T ScriptCreateSceneEntity(char const*)
 T ScriptFunctionBinding_t::~ScriptFunctionBinding_t()
 T ScriptInfo_CalculateFOV(float, float, int, int, bool)
 T ScriptInstallPreSpawnHook()
 T ScriptPostSpawn(CScriptScopeT<CDefScriptScopeBase>*, CBaseEntity**, int)
 T ScriptPreInstanceSpawn(CScriptScopeT<CDefScriptScopeBase>*, CBaseEntity*, string_t)
 T ScriptShowHudMessageAll(char const*, float)
 T ScriptSteamShowURL(char const*)
 T ScrollBar_Horizontal_Factory()
 T ScrollBar_Vertical_Factory()
 T SeatPrioritySort(CPassengerSeatTransition const*, CPassengerSeatTransition const*)
 T SeedRandSIMD(unsigned int)
 T SelectDeathPoseActivityAndFrame(CBaseAnimating*, CTakeDamageInfo const&, int, Activity&, int&)
 T SelectHeaviestSequence(CStudioHdr*, int)
 T SelectOverlappingAreas::operator()(CNavArea*)
 T SelectWeightedSequence(CStudioHdr*, int, int)
 T SendProp::SendProp()
 T SendProp::~SendProp()
 T SendPropAngle(char*, int, int, int, int, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int), unsigned char)
 T SendPropArray3(char*, int, int, int, SendProp, void* (*)(SendProp const*, void const*, void const*, CSendProxyRecipients*, int), unsigned char)
 T SendPropBool(char*, int, int)
 T SendPropDataTable(char*, int, SendTable*, void* (*)(SendProp const*, void const*, void const*, CSendProxyRecipients*, int), unsigned char)
 T SendPropEHandle(char*, int, int, int, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int))
 T SendPropExclude(char*, char*)
 T SendPropFloat(char*, int, int, int, int, float, float, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int), unsigned char)
 T SendPropInt(char*, int, int, int, int, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int), unsigned char)
 T SendPropIntWithMinusOneFlag(char*, int, int, int, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int))
 T SendPropQAngles(char*, int, int, int, int, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int), unsigned char)
 T SendPropString(char*, int, int, int, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int), unsigned char)
 T SendPropStringT(char*, int, int)
 T SendPropTime(char*, int, int)
 T SendPropUtlVector(char*, int, int, void (*)(void*, int, int), int, SendProp, void* (*)(SendProp const*, void const*, void const*, CSendProxyRecipients*, int))
 T SendPropVector(char*, int, int, int, int, float, float, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int), unsigned char)
 T SendPropVectorXY(char*, int, int, int, int, float, float, void (*)(SendProp const*, void const*, void const*, DVariant*, int, int), unsigned char)
 T SendProxyArrayLength_PlayerArray(void const*, int)
 T SendProxy_AngleToFloat(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_Angles(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_AnimTime(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_ClientSideAnimation(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_Color32ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_CropFlagsToPlayerFlagBitsLength(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_DataTablePtrToDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_DataTableToDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_EHandleToInt(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_FishAngle(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_FlexWeights(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_FloatToFloat(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_FuncRotatingAngle(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_FuncRotatingOrigin(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_FuncRotatingSimulationTime(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_HL2GameRules(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_Int16ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_Int32ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_Int64ToInt64(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_Int8ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_IntAddOne(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_LengthTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_OnlyToTeam(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_Origin(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_OriginXY(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_OriginZ(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_PlayerList(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_PortalGameRules(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_PortalMPRules(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_PortalMPStats(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_QAngles(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_SendActiveLocalWeaponDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_SendBaseCombatCharacterLocalDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_SendLocalDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_SendLocalWeaponDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_SendNonLocalDataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_ShortAddOne(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_SimulationTime(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_StringT_To_String(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_StringToString(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_String_tToString(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_TestProxyToggle(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_UInt16ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_UInt32ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_UInt64ToInt64(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_UInt8ToInt32(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_UnmodifiedQAngles(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_UtlVectorElement(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_UtlVectorElement_DataTable(SendProp const*, void const*, void const*, CSendProxyRecipients*, int)
 T SendProxy_UtlVectorLength(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendProxy_VectorToVector(SendProp const*, void const*, void const*, DVariant*, int, int)
 T SendTable::Construct(SendProp*, int, char*)
 T SendTable::SendTable()
 T SendTable::SendTable(SendProp*, int, char*)
 T SendTable::~SendTable()
 T ServiceEventQueue()
 T SetActivityForSequence(CStudioHdr*, int)
 T SetBodygroup(CStudioHdr*, int&, int, int)
 T SetDebugBits(CBasePlayer*, char const*, int)
 T SetEventIndexForSequence(mstudioseqdesc_t&)
 T SetHaveSeenDLCTubesReveal()
 T SetIdentityMatrix(matrix3x4_t&)
 T SetLocalMapPlayed(unsigned long long)
 T SetMapAsPlayed()
 T SetSerializationDelimiter(CUtlCharConversion*)
 T SetupLightNormalFromProps(QAngle const&, float, float, Vector&)
 T SetupMatrixAngles(QAngle const&)
 T SetupMatrixAxisToAxisRot(Vector const&, Vector const&)
 T SetupMatrixOrgAngles(Vector const&, QAngle const&)
 T SetupMatrixTranslation(Vector const&)
 T SetupParentsForSpawnList(int, HierarchicalSpawn_t*)
 T SharedRandomFloat(char const*, float, float, int)
 T SharedRandomInt(char const*, int, int, int)
 T SharedVehicleViewSmoothing(CBasePlayer*, Vector*, QAngle*, bool, bool, Vector const&, ViewSmoothingData_t*, float*, bool)
 T ShiftSet::operator()(CNavArea*)
 T ShortestDirectionThroughPoints(Vector const&, int, int, Vector*, int)
 T ShouldRemoveThisRagdoll(CBaseAnimating*)
 T ShowViewPortPanelToAll(char const*, bool, KeyValues*)
 T ShutdownPickupController(CBaseEntity*)
 T SignbitsForPlane(cplane_t*)
 T SimThink_EntityChanged(CBaseEntity*)
 T SimThink_ListCopy(CBaseEntity**, int)
 T SimThink_ListCount()
 T SlerpBones(CStudioHdr const*, Quaternion*, Vector*, mstudioseqdesc_t&, int, QuaternionAligned const*, Vector const*, float, int)
 T SlerpBonesSpeedy(CStudioHdr const*, QuaternionAligned*, Vector*, mstudioseqdesc_t&, int, QuaternionAligned const*, Vector const*, float, int)
 T SmokeTrail::CreateSmokeTrail()
 T SmokeTrail::FollowEntity(CBaseEntity*, char const*)
 T SmokeTrail::GetDataDescMap()
 T SmokeTrail::GetServerClass()
 T SmokeTrail::KeyValue(char const*, char const*)
 T SmokeTrail::SmokeTrail()
 T SmokeTrail::YouForgotToImplementOrDeclareServerClass()
 T SmokeTrail::~SmokeTrail()
 T SmoothCurve(float)
 T SolveQuadratic(float, float, float, float&, float&)
 T SoundCommandLessFunc(SoundCommand_t* const&, SoundCommand_t* const&)
 T SoundEmitterSystem()
 T SpawnAllEntities(int, HierarchicalSpawn_t*, bool)
 T SpawnBlood(Vector, Vector const&, int, float)
 T SpawnHierarchicalList(int, HierarchicalSpawn_t*, bool)
 T Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, Vector&, Vector&)
 T SplitBlobsIntoMovementGroup(CUtlVector<CPaintBlob*, CUtlMemory<CPaintBlob*, int> >&, CUtlVector<CPaintBlob*, CUtlMemory<CPaintBlob*, int> >&, CUtlVector<CPaintBlob*, CUtlMemory<CPaintBlob*, int> >&, CUtlVector<CPaintBlob*, CUtlMemory<CPaintBlob*, int> >&)
 T SplitContext(char const*, char*, int, char*, int, float*, char const*)
 T SporeExplosion::GetDataDescMap()
 T SporeExplosion::GetServerClass()
 T SporeExplosion::InputDisable(inputdata_t&)
 T SporeExplosion::InputEnable(inputdata_t&)
 T SporeExplosion::Spawn()
 T SporeExplosion::SporeExplosion()
 T SporeExplosion::YouForgotToImplementOrDeclareServerClass()
 T SporeExplosion::~SporeExplosion()
 T SporeTrail::GetDataDescMap()
 T SporeTrail::GetServerClass()
 T SporeTrail::SporeTrail()
 T SporeTrail::YouForgotToImplementOrDeclareServerClass()
 T SporeTrail::~SporeTrail()
 T StandardFilterRules(IHandleEntity*, int)
 T StayOnFloor(CGameTrace*, float)
 T SteamGameServerInternal_OnContextInit(void*)
 T SteamInternal_OnContextInit(void*)
 T StopParticleEffect(CBaseEntity*, char const*)
 T StopParticleEffects(CBaseEntity*)
 T StopScriptedScene(CBaseFlex*, CHandle<CBaseEntity>)
 T StrLessInsensitive(char const* const&, char const* const&)
 T StrLessSensitive(char const* const&, char const* const&)
 T StringAfterPrefix(char const*, char const*)
 T StringFieldToInt(char const*, CUtlVector<char const*, CUtlMemory<char const*, int> > const&, bool)
 T StringFieldToInt(char const*, char const**, int, bool)
 T StringLessThan(char const* const&, char const* const&)
 T StringSort(char const* const*, char const* const*)
 T Studio_AlignIKMatrix(matrix3x4a_t&, Vector const&)
 T Studio_AnimMovement(mstudioanimdesc_t*, float, float, Vector&, QAngle&)
 T Studio_AnimPosition(mstudioanimdesc_t*, float, Vector&, QAngle&)
 T Studio_BoneIndexByName(CStudioHdr const*, char const*)
 T Studio_BuildMatrices(CStudioHdr const*, QAngle const&, Vector const&, Vector const*, Quaternion const*, int, float, matrix3x4a_t*, int)
 T Studio_CPS(CStudioHdr const*, mstudioseqdesc_t&, int, float const*)
 T Studio_CalcBoneToBoneTransform(CStudioHdr const*, int, int, matrix3x4_t&)
 T Studio_CreateBoneCache(bonecacheparams_t&)
 T Studio_DestroyBoneCache(memhandle_t__*)
 T Studio_Duration(CStudioHdr const*, int, float const*)
 T Studio_FindAnimDistance(mstudioanimdesc_t*, float)
 T Studio_FindAttachment(CStudioHdr const*, char const*)
 T Studio_FindSeqDistance(CStudioHdr const*, int, float const*, float)
 T Studio_GetBoneCache(memhandle_t__*, bool)
 T Studio_GetDefaultSurfaceProps(CStudioHdr*)
 T Studio_GetKeyValueText(CStudioHdr const*, int)
 T Studio_GetMass(CStudioHdr*)
 T Studio_GetPoseParameter(CStudioHdr const*, int, float)
 T Studio_IKAnimationError(CStudioHdr const*, mstudioikrule_t*, mstudioanimdesc_t const*, float, Vector&, Quaternion&, float&)
 T Studio_IKRuleWeight(mstudioikrule_t&, mstudioanimdesc_t const*, float, int&, float&)
 T Studio_IKSequenceError(CStudioHdr const*, mstudioseqdesc_t&, int, float, int, float const*, mstudioanimdesc_t**, float*, ikcontextikrule_t&)
 T Studio_InvalidateBoneCacheIfNotMatching(memhandle_t__*, float)
 T Studio_LocalPoseParameter(CStudioHdr const*, float const*, mstudioseqdesc_t&, int, int, float&)
 T Studio_SeqAnims(CStudioHdr const*, mstudioseqdesc_t&, int, float const*, mstudioanimdesc_t**, float*)
 T Studio_SeqMovement(CStudioHdr const*, int, float, float, float const*, Vector&, QAngle&)
 T Studio_SeqVelocity(CStudioHdr const*, int, float, float const*, Vector&)
 T Studio_SetController(CStudioHdr const*, int, float, float&)
 T Studio_SetPoseParameter(CStudioHdr const*, int, float, float&)
 T Studio_SolveIK(int, int, int, Vector&, Vector&, Vector&, matrix3x4a_t*)
 T Studio_SolveIK(int, int, int, Vector&, matrix3x4a_t*)
 T Studio_SolveIK(mstudioikchain_t*, Vector&, matrix3x4a_t*)
 T Subdivider::SubdivideX(CNavArea*, bool, bool, int)
 T Subdivider::SubdivideY(CNavArea*, bool, bool, int)
 T SurfNoPaintFlag()
 T SurfNoPortalFlag()
 T SwapGunsTraceLine(Vector const&, Vector const&, CBaseEntity*, CGameTrace*)
 T SwapPaintAndPortalGuns(CPortal_Player*, CPortal_Player*)
 T SweepBoxToStudio(IPhysicsSurfaceProps*, Ray_t const&, CStudioHdr*, mstudiohitboxset_t*, matrix3x4_t**, int, CGameTrace&)
 T Sys_LoadModule(char const*)
 T TE_ArmorRicochet(IRecipientFilter&, float, Vector const*, Vector const*)
 T TE_BSPDecal(IRecipientFilter&, float, Vector const*, int, int)
 T TE_BeamEntPoint(IRecipientFilter&, float, int, Vector const*, int, Vector const*, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T TE_BeamEnts(IRecipientFilter&, float, int, int, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T TE_BeamFollow(IRecipientFilter&, float, int, int, int, float, float, float, float, float, float, float, float)
 T TE_BeamLaser(IRecipientFilter&, float, int, int, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T TE_BeamPoints(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T TE_BeamRing(IRecipientFilter&, float, int, int, int, int, int, int, float, float, int, float, int, int, int, int, int, int)
 T TE_BeamRingPoint(IRecipientFilter&, float, Vector const&, float, float, int, int, int, int, float, float, int, float, int, int, int, int, int, int)
 T TE_BeamSpline(IRecipientFilter&, float, int, Vector*)
 T TE_BloodSprite(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int, int, int)
 T TE_BloodStream(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int, int, int)
 T TE_BreakModel(IRecipientFilter&, float, Vector const&, QAngle const&, Vector const&, Vector const&, int, int, int, float, int)
 T TE_BubbleTrail(IRecipientFilter&, float, Vector const*, Vector const*, float, int, int, float)
 T TE_Bubbles(IRecipientFilter&, float, Vector const*, Vector const*, float, int, int, float)
 T TE_ClientProjectile(IRecipientFilter&, float, Vector const*, Vector const*, int, int, CBaseEntity*)
 T TE_Decal(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int)
 T TE_Dust(IRecipientFilter&, float, Vector const&, Vector const&, float, float)
 T TE_DynamicLight(IRecipientFilter&, float, Vector const*, int, int, int, int, float, float, float)
 T TE_EnergySplash(IRecipientFilter&, float, Vector const*, Vector const*, bool)
 T TE_Explosion(IRecipientFilter&, float, Vector const*, int, float, int, int, int, int, Vector const*, unsigned char)
 T TE_Fizz(IRecipientFilter&, float, CBaseEntity const*, int, int, int)
 T TE_FootprintDecal(IRecipientFilter&, float, Vector const*, Vector const*, int, int, unsigned char)
 T TE_GlowSprite(IRecipientFilter&, float, Vector const*, int, float, float, int)
 T TE_KillPlayerAttachments(IRecipientFilter&, float, int)
 T TE_LargeFunnel(IRecipientFilter&, float, Vector const*, int, int)
 T TE_MetalSparks(IRecipientFilter&, float, Vector const*, Vector const*)
 T TE_MuzzleFlash(IRecipientFilter&, float, Vector const&, QAngle const&, float, int)
 T TE_PhysicsProp(IRecipientFilter&, float, int, int, Vector const&, QAngle const&, Vector const&, int, int)
 T TE_PlayerAnimEvent(CBasePlayer*, PlayerAnimEvent_t, int)
 T TE_PlayerDecal(IRecipientFilter&, float, Vector const*, int, int)
 T TE_ProjectDecal(IRecipientFilter&, float, Vector const*, QAngle const*, float, int)
 T TE_ShatterSurface(IRecipientFilter&, float, Vector const*, QAngle const*, Vector const*, Vector const*, float, float, float, ShatterSurface_t, int, int, int, int, int, int)
 T TE_ShowLine(IRecipientFilter&, float, Vector const*, Vector const*)
 T TE_Smoke(IRecipientFilter&, float, Vector const*, int, float, int)
 T TE_Sparks(IRecipientFilter&, float, Vector const*, int, int, Vector const*)
 T TE_Sprite(IRecipientFilter&, float, Vector const*, int, float, int)
 T TE_SpriteSpray(IRecipientFilter&, float, Vector const*, Vector const*, int, int, float, int)
 T TE_WorldDecal(IRecipientFilter&, float, Vector const*, int)
 T TaskFailureToString(int)
 T Templates_Add(CBaseEntity*, char const*, int, int)
 T Templates_FindByIndex(int)
 T Templates_FindByTargetName(char const*)
 T Templates_GetEntityIOFixedMapData(int)
 T Templates_GetStringSize(int)
 T Templates_IndexRequiresEntityIOFixup(int)
 T Templates_ReconnectIOForGroup(CPointTemplate*)
 T Templates_RemoveByHammerID(int)
 T Templates_StartUniqueInstance()
 T TestAreaPortalVisibilityThroughPortals(CFuncAreaPortalBase*, edict_t*, unsigned char*, int)
 T TestEntityPosition(CBaseEntity*, unsigned int)
 T TestForValidCrouchArea(CNavNode*)
 T TestHeldEntityVsFuncClipVPhysics(CBaseEntity*, Vector)
 T TestIntersectionVsHeldObjectCollide(CBaseEntity*, Vector, CBaseEntity*)
 T TestOverlapping::OverlapsExistingArea()
 T TestRayVsFuncClipVPhysics(Ray_t const&)
 T Test_CreateEntity(CCommand const&)
 T Test_InitRandomEntitySpawner(CCommand const&)
 T Test_ProxyToggle_EnableProxy(CCommand const&)
 T Test_ProxyToggle_SetValue(CCommand const&)
 T Test_RandomPlayerPosition()
 T Test_RandomizeInPVS(CCommand const&)
 T Test_RemoveAllRandomEntities()
 T Test_SpawnRandomEntities(CCommand const&)
 T TheTonemapSystem()
 T ThinkRebalanceCompare(AIRebalanceInfo_t const*, AIRebalanceInfo_t const*)
 T TimedEventMgr_LessFunc(CEventRegister* const&, CEventRegister* const&)
 T TimescaleChanged(IConVar*, char const*, float)
 T TraceAdjacentNode(int, Vector const&, Vector const&, CGameTrace*, float)
 T TraceBumpingEntities(Vector const&, Vector const&, CGameTrace&)
 T TraceFunc_Collideable(void*, CPhysCollide*, Vector const&, QAngle const&, CGameTrace*)
 T TraceFunc_Ray(void*, CPhysCollide*, Vector const&, QAngle const&, CGameTrace*)
 T TraceHull_Door(CBasePropDoor const*, Vector const&, Vector const&, Vector const&, Vector const&, unsigned int, CBaseEntity const*, int, CGameTrace*)
 T TracePlayerBBoxForGround(ITraceListData*, Vector const&, Vector const&, Vector const&, Vector const&, unsigned int, ITraceFilter*, CGameTrace&, float, bool, int*)
 T TracePlayerBoxAgainstCollidables(CGameTrace&, CPortal_Player const*, Vector const&, Vector const&, Vector const&, Vector const&)
 T TracePortalCorner(CProp_Portal const*, Vector const&, Vector const&, Vector const&, PortalPlacedBy_t, ITraceFilter*, CGameTrace&, bool&)
 T TracePortalPlayerAABB(CPortal_Player*, CPortal_Base2D*, Ray_t const&, Ray_t const&, Vector const&, unsigned int, int, CTrace_PlayerAABB_vs_Portals&, bool)
 T TracePortals(CProp_Portal const*, Vector const&, Vector const&, Vector const&, CGameTrace&)
 T TraceToStudio(IPhysicsSurfaceProps*, Ray_t const&, CStudioHdr*, mstudiohitboxset_t*, matrix3x4_t**, int, Vector const&, float, CGameTrace&)
 T TrainSpeed(int, int)
 T TransferChildren(CBaseEntity*, CBaseEntity*)
 T TransferPhysicsObject(CBaseEntity*, CBaseEntity*, bool)
 T TransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
 T TransformAnglesToLocalSpace(QAngle const&, matrix3x4_t const&)
 T TransformAnglesToWorldSpace(QAngle const&, matrix3x4_t const&)
 T TranslatePlaneList_SIMD(float __vector(4)*, int, float __vector(4) const&)
 T TransmitShakeEvent(CBasePlayer*, float, float, float, ShakeCommand_t)
 T TransmitTiltEvent(CBasePlayer*, QAngle, float, float, ShakeCommand_t, bool)
 T TurretFloorBulletForceMultiplier()
 T TurretFloorDamageMultiplier()
 T URLLabel_Factory()
 T UTIL_AddDebugLine(Vector const&, Vector const&, bool, bool)
 T UTIL_BloodDecalTrace(CGameTrace*, int)
 T UTIL_BloodDrips(Vector const&, Vector const&, int, int)
 T UTIL_BloodStream(Vector const&, Vector const&, int, int)
 T UTIL_Bubbles(Vector const&, Vector const&, int)
 T UTIL_CalcFrustumThroughConvexPolygon(Vector const*, int, Vector const&, VPlane const*, int, VPlane*, int, int)
 T UTIL_CheckBottom(CBaseEntity*, ITraceFilter*, float)
 T UTIL_ClearTrace(CGameTrace&)
 T UTIL_ClientPVSIsExpanded()
 T UTIL_ClientPrintAll(int, char const*, char const*, char const*, char const*, char const*)
 T UTIL_ClientPrintFilter(IRecipientFilter&, int, char const*, char const*, char const*, char const*, char const*)
 T UTIL_DebugOverlay_CPhysCollide(CPhysCollide const*, int, int, int, bool, float, matrix3x4_t const*)
 T UTIL_DecalTrace(CGameTrace*, char const*)
 T UTIL_DecodeICE(unsigned char*, int, unsigned char const*)
 T UTIL_DidTraceTouchPortals(Ray_t const&, CGameTrace const&, CPortal_Base2D**, CPortal_Base2D**)
 T UTIL_DisableRemoveImmediate()
 T UTIL_DrawOverlayLines()
 T UTIL_DrawPositioningOverlay(float)
 T UTIL_DropToFloor(CBaseEntity*, unsigned int, CBaseEntity*)
 T UTIL_EmitAmbientSound(int, Vector const&, char const*, float, soundlevel_t, int, int, float, float*)
 T UTIL_EmitGroupIDSuit(edict_t*, int)
 T UTIL_EmitGroupnameSuit(edict_t*, char const*)
 T UTIL_EmitSoundSuit(edict_t*, char const*)
 T UTIL_EnableRemoveImmediate()
 T UTIL_EntitiesAlongRay(Ray_t const&, CFlaggedEntitiesEnum*)
 T UTIL_EntitiesInBox(Vector const&, Vector const&, CFlaggedEntitiesEnum*)
 T UTIL_EntitiesInPVS(CBaseEntity*, CBaseEntity*)
 T UTIL_EntitiesInSphere(Vector const&, float, CFlaggedEntitiesEnum*)
 T UTIL_EntityByIndex(int)
 T UTIL_EntityHasMatchingRootParent(CBaseEntity*, CBaseEntity*)
 T UTIL_EntityInSolid(CBaseEntity*)
 T UTIL_FindBrushEntitiesInSphere(CBrushEntityList&, Vector const&, float)
 T UTIL_FindClientInPVS(Vector const&, Vector const&)
 T UTIL_FindClientInPVS(edict_t*)
 T UTIL_FindClientInPVSGuts(edict_t*, unsigned char*, unsigned int)
 T UTIL_FindClientInVisibilityPVS(edict_t*)
 T UTIL_FindClosestPassableSpace(Vector const&, Vector const&, Vector const&, ITraceFilter*, unsigned int, unsigned int, Vector&, int)
 T UTIL_FindClosestPassableSpace(Vector const&, Vector const&, Vector const&, unsigned int, Vector&, int, FindClosestPassableSpace_TraceAdapter_t*)
 T UTIL_FindClosestPassableSpace_CenterMustStayInFrontOfPlane(Vector const&, Vector const&, Vector const&, ITraceFilter*, unsigned int, unsigned int, Vector&, VPlane const&)
 T UTIL_FindClosestPassableSpace_InPortal_CenterMustStayInFront(CPortal_Base2D const*, Vector const&, Vector const&, Vector const&, ITraceFilter*, unsigned int, unsigned int, Vector&)
 T UTIL_FindPlacementHelper(Vector const&, CBasePlayer*)
 T UTIL_FreeFile(unsigned char*)
 T UTIL_FunctionFromName(datamap_t*, char const*, void (CBaseEntity::**)(inputdata_t&))
 T UTIL_GetAchievementEventMask()
 T UTIL_GetCommandClient()
 T UTIL_GetCommandClientIndex()
 T UTIL_GetDebugColorForRelationship(int, int&, int&, int&)
 T UTIL_GetListenServerHost()
 T UTIL_GetLocalPlayer()
 T UTIL_GetModDir(char*, unsigned int)
 T UTIL_GetPlayerConnectionInfo(int, int&, int&)
 T UTIL_GetSchrodingerTwin(CBaseEntity*)
 T UTIL_GetSimulationInterval()
 T UTIL_HudHintText(CBaseEntity*, char const*)
 T UTIL_HudMessage(CBasePlayer*, hudtextparms_s const&, char const*)
 T UTIL_HudMessageAll(hudtextparms_s const&, char const*)
 T UTIL_ImpactTrace(CGameTrace*, int, char*)
 T UTIL_IntersectRayWithPortal(Ray_t const&, CPortal_Base2D const*)
 T UTIL_IntersectRayWithPortalOBBAsAABB(CPortal_Base2D const*, Ray_t const&, CGameTrace*)
 T UTIL_IsBoxIntersectingPortal(Vector const&, Vector const&, CPortal_Base2D const*, float)
 T UTIL_IsBoxIntersectingPortal(Vector const&, Vector const&, Vector const&, QAngle const&, float, float, float)
 T UTIL_IsCollideableIntersectingPhysCollide(ICollideable*, CPhysCollide const*, Vector const&, QAngle const&)
 T UTIL_IsCommandIssuedByServerAdmin()
 T UTIL_IsEntityMovingOrRotating(CBaseEntity*)
 T UTIL_IsLowViolence()
 T UTIL_IsMasterTriggered(string_t, CBaseEntity*)
 T UTIL_IsPaintableSurface(csurface_t const&)
 T UTIL_IsReflectiveCube(CBaseEntity*)
 T UTIL_IsSchrodinger(CBaseEntity*)
 T UTIL_IsWeightedCube(CBaseEntity*)
 T UTIL_ItemCanBeTouchedByPlayer(CBaseEntity*, CBasePlayer*)
 T UTIL_LoadFileForMe(char const*, int*)
 T UTIL_LogPrintf(char*, ...)
 T UTIL_NormalizedAngleDiff(QAngle const&, QAngle const&, QAngle*)
 T UTIL_OtherConnectedPlayer(CBasePlayer const*)
 T UTIL_OtherPlayer(CBasePlayer const*)
 T UTIL_PaintBrushEntity(CBaseEntity*, Vector const&, PaintPowerType, float, float)
 T UTIL_Paint_Reflect(CGameTrace const&, Vector&, Vector&, PaintPowerType)
 T UTIL_Paint_TracePower(CBaseEntity*, Vector const&, Vector const&)
 T UTIL_ParentToWorldSpace(CBaseEntity*, Vector&, QAngle&)
 T UTIL_ParentToWorldSpace(CBaseEntity*, Vector&, Quaternion&)
 T UTIL_ParticleTracer(char const*, Vector const&, Vector const&, int, int, bool)
 T UTIL_PlayerByIndex(int)
 T UTIL_PlayerByName(char const*)
 T UTIL_PlayerByUserId(int)
 T UTIL_PlayerDecalTrace(CGameTrace*, int)
 T UTIL_PointAtEntity(CBaseEntity*, CBaseEntity*)
 T UTIL_PointAtNamedEntity(CBaseEntity*, string_t)
 T UTIL_PointIsNearPortal(Vector const&, CPortal_Base2D const*, float, float)
 T UTIL_PointIsOnPortalQuad(Vector, float, CPortal_Base2D* const*, int)
 T UTIL_PortalLinked_TraceRay(CPortal_Base2D const*, Ray_t const&, unsigned int, IHandleEntity const*, int, CGameTrace*, bool)
 T UTIL_PortalLinked_TraceRay(CPortal_Base2D const*, Ray_t const&, unsigned int, ITraceFilter*, CGameTrace*, bool)
 T UTIL_Portal_AABB(CPortal_Base2D const*, Vector&, Vector&)
 T UTIL_Portal_AngleTransform(VMatrix const&, QAngle const&, QAngle&)
 T UTIL_Portal_ClipTraceToFirstTransformingPortal(CGameTrace&, Vector const&, float, CPortal_Base2D**, IntersectionCachedData_t*, int)
 T UTIL_Portal_ComplexTraceRay(Ray_t const&, unsigned int, ITraceFilter*, ComplexPortalTrace_t*, int)
 T UTIL_Portal_ComputeMatrix(CPortal_Base2D*, CPortal_Base2D*)
 T UTIL_Portal_ComputeMatrix_ForReal(CPortal_Base2D*, CPortal_Base2D*)
 T UTIL_Portal_DistanceThroughPortalSqr(CPortal_Base2D const*, Vector const&, Vector const&)
 T UTIL_Portal_EntitiesAlongRayComplex(int*, int*, int, ComplexPortalTrace_t*, int, Ray_t const&, ICountedPartitionEnumerator*, ITraceFilter*, int)
 T UTIL_Portal_EntityIsInPortalHole(CPortal_Base2D const*, CBaseEntity const*)
 T UTIL_Portal_FirstAlongRay(Ray_t const&, float&)
 T UTIL_Portal_Laser_Prevent_Tilting(Vector&)
 T UTIL_Portal_NDebugOverlay(CPortal_Base2D const*, int, int, int, int, bool, float)
 T UTIL_Portal_NDebugOverlay(Vector const&, QAngle const&, float, float, int, int, int, int, bool, float)
 T UTIL_Portal_PointTransform(VMatrix const&, Vector const&, Vector&)
 T UTIL_Portal_RayTransform(VMatrix const&, Ray_t const&, Ray_t&)
 T UTIL_Portal_ShortestDistance(Vector const&, Vector const&, CPortal_Base2D**, bool)
 T UTIL_Portal_ShortestDistanceSqr(Vector const&, Vector const&, CPortal_Base2D**, bool)
 T UTIL_Portal_TraceEntity(CBaseEntity*, Vector const&, Vector const&, unsigned int, ITraceFilter*, CGameTrace*)
 T UTIL_Portal_TraceRay(CPortal_Base2D const*, Ray_t const&, unsigned int, IHandleEntity const*, int, CGameTrace*, bool)
 T UTIL_Portal_TraceRay(CPortal_Base2D const*, Ray_t const&, unsigned int, ITraceFilter*, CGameTrace*, bool)
 T UTIL_Portal_TraceRay(Ray_t const&, unsigned int, IHandleEntity const*, int, CGameTrace*, bool)
 T UTIL_Portal_TraceRay(Ray_t const&, unsigned int, ITraceFilter*, CGameTrace*, bool)
 T UTIL_Portal_TraceRay_Bullets(CPortal_Base2D const*, Ray_t const&, unsigned int, ITraceFilter*, CGameTrace*, bool)
 T UTIL_Portal_TraceRay_PreTraceChanges(CPortal_Base2D const*, Ray_t const&, unsigned int, ITraceFilter*, CGameTrace*, bool)
 T UTIL_Portal_TraceRay_With(CPortal_Base2D const*, Ray_t const&, unsigned int, ITraceFilter*, CGameTrace*, bool)
 T UTIL_Portal_Trace_Filter(CTraceFilterSimpleClassnameList*)
 T UTIL_Portal_Triangles(Vector const&, QAngle const&, float, float, Vector*, Vector*)
 T UTIL_Portal_VectorTransform(VMatrix const&, Vector const&, Vector&)
 T UTIL_PrecacheDecal(char const*, bool)
 T UTIL_PrecacheOther(char const*, char const*)
 T UTIL_ProjectPointOntoPlane(Vector const&, cplane_t const&)
 T UTIL_RandomBloodVector()
 T UTIL_RecordAchievementEvent(char const*, CBasePlayer*)
 T UTIL_Remove(CBaseEntity*)
 T UTIL_Remove(IServerNetworkable*)
 T UTIL_RemoveHierarchy(CBaseEntity*)
 T UTIL_RemoveImmediate(CBaseEntity*)
 T UTIL_RestartAmbientSounds()
 T UTIL_SayText2Filter(IRecipientFilter&, CBasePlayer*, bool, char const*, char const*, char const*, char const*, char const*)
 T UTIL_SayTextFilter(IRecipientFilter&, char const*, CBasePlayer*, bool)
 T UTIL_ScaleForGravity(float)
 T UTIL_ScreenFade(CBaseEntity*, color32_s const&, float, float, int)
 T UTIL_ScreenFadeAll(color32_s const&, float, float, int)
 T UTIL_ScreenFadeWrite(ScreenFade_t const&, CBaseEntity*)
 T UTIL_ScreenShake(Vector const&, float, float, float, float, ShakeCommand_t, bool, CUtlVector<CBasePlayer*, CUtlMemory<CBasePlayer*, int> >*)
 T UTIL_ScreenTilt(Vector const&, QAngle const&, float, float, float, ShakeCommand_t, bool)
 T UTIL_SendClientCommandKVToPlayer(KeyValues*, CBasePlayer*)
 T UTIL_SetClientCheckPVS(edict_t*, unsigned char const*, int)
 T UTIL_SetClientVisibilityPVS(edict_t*, unsigned char const*, int)
 T UTIL_SetModel(CBaseEntity*, char const*)
 T UTIL_SetOrigin(CBaseEntity*, Vector const&, bool)
 T UTIL_SetSize(CBaseEntity*, Vector const&, Vector const&)
 T UTIL_ShouldShowBlood(int)
 T UTIL_ShowMessage(char const*, CBasePlayer*)
 T UTIL_ShowMessageAll(char const*)
 T UTIL_Smoke(Vector const&, float, float)
 T UTIL_SnapDirectionToAxis(Vector&, float)
 T UTIL_StringToFloatArray(float*, int, char const*)
 T UTIL_StringToVector(float*, char const*)
 T UTIL_StripToken(char const*, char*, int)
 T UTIL_TraceEntity(CBaseEntity*, Vector const&, Vector const&, unsigned int, CGameTrace*)
 T UTIL_TraceEntity(CBaseEntity*, Vector const&, Vector const&, unsigned int, IHandleEntity const*, int, CGameTrace*)
 T UTIL_TraceEntity(CBaseEntity*, Vector const&, Vector const&, unsigned int, ITraceFilter*, CGameTrace*)
 T UTIL_TraceLine(Vector const&, Vector const&, unsigned int, IHandleEntity const*, int, CGameTrace*)
 T UTIL_TraceLineFilterEntity(CBaseEntity*, Vector const&, Vector const&, unsigned int, int, CGameTrace*)
 T UTIL_TraceModel(Vector const&, Vector const&, Vector const&, Vector const&, CBaseEntity*, int, CGameTrace*)
 T UTIL_Tracer(Vector const&, Vector const&, int, int, float, bool, char const*, int)
 T UTIL_TransferPoseParameters(CBaseEntity*, CBaseEntity*)
 T UTIL_ValidateSoundName(string_t&, char const*)
 T UTIL_VarArgs(char const*, ...)
 T UTIL_VecToYaw(Vector const&)
 T UTIL_ViewPunch(Vector const&, QAngle, float, bool)
 T UTIL_WaterLevel(Vector const&, float, float)
 T UTIL_WorldToParentSpace(CBaseEntity*, Vector&, QAngle&)
 T UTIL_WorldToParentSpace(CBaseEntity*, Vector&, Quaternion&)
 T UTIL_YawToVector(float)
 T UniqueIdFromString(UniqueId_t*, char const*, int)
 T UnlinkChild(CBaseEntity*, CBaseEntity*)
 T UnlinkFromParent(CBaseEntity*)
 T Unserialize(CUtlBuffer&, CUtlBinaryBlock&)
 T Unserialize(CUtlBuffer&, CUtlString&)
 T Unserialize(CUtlBuffer&, Color&)
 T Unserialize(CUtlBuffer&, DmeTime_t&)
 T Unserialize(CUtlBuffer&, QAngle&)
 T Unserialize(CUtlBuffer&, Quaternion&)
 T Unserialize(CUtlBuffer&, VMatrix&)
 T Unserialize(CUtlBuffer&, Vector&)
 T Unserialize(CUtlBuffer&, Vector2D&)
 T Unserialize(CUtlBuffer&, Vector4D&)
 T Unserialize(CUtlBuffer&, bool&)
 T Unserialize(CUtlBuffer&, float&)
 T Unserialize(CUtlBuffer&, int&)
 T UnserializeDMX(CUtlBuffer&, CDmxElement**, char const*)
 T UnserializeTextDMX(char const*, CUtlBuffer&, CDmxElement**)
 T UpdateAllClientData()
 T UpdateGrabControllerTargetPosition(CBasePlayer*, Vector*, QAngle*, bool)
 T UpdateQueryCache()
 T UpgradePlayerPortalgun()
 T UpgradePlayerPotatogun()
 T UserMessageBegin(IRecipientFilter&, char const*)
 T UtlVectorTemplate<CAnimationLayer, CUtlMemory<CAnimationLayer, int> >::EnsureCapacity(void*, int, int)
 T UtlVectorTemplate<CEconItemAttribute, CUtlMemory<CEconItemAttribute, int> >::EnsureCapacity(void*, int, int)
 T UtlVectorTemplate<CEntityPortalledNetworkMessage, CUtlMemory<CEntityPortalledNetworkMessage, int> >::EnsureCapacity(void*, int, int)
 T UtlVectorTemplate<CHandle<CBaseFlex>, CUtlMemory<CHandle<CBaseFlex>, int> >::EnsureCapacity(void*, int, int)
 T VMatrix::InverseGeneral(VMatrix&) const
 T VMatrix::InverseTR() const
 T VMatrix::InverseTR(VMatrix&) const
 T VMatrix::MatrixMul(VMatrix const&, VMatrix&) const
 T VMatrix::SetupMatrixOrgAngles(Vector const&, QAngle const&)
 T VMatrix::Transpose() const
 T VMatrix::operator*(VMatrix const&) const
 T VMatrix::operator=(VMatrix const&)
 T VScriptCompileScript(char const*, bool)
 T VScriptRunScript(char const*, HSCRIPT__*, bool)
 T VScriptServerInit()
 T VScriptServerReplaceClosures(char const*, HSCRIPT__*, bool)
 T V_AppendSlash(char*, int)
 T V_ComposeFileName(char const*, char const*, char*, int)
 T V_DefaultExtension(char*, char const*, int)
 T V_ExtractFileExtension(char const*, char*, int)
 T V_ExtractFilePath(char const*, char*, int)
 T V_FileBase(char const*, char*, int)
 T V_FixSlashes(char*, char)
 T V_FixupPathName(char*, unsigned long, char const*)
 T V_GetFileExtension(char const*)
 T V_IsAbsolutePath(char const*)
 T V_RemoveDotSlashes(char*, char)
 T V_SetExtension(char*, char const*, int)
 T V_SplitString(char const*, char const*, CUtlVector<char*, CUtlMemory<char*, int> >&)
 T V_SplitString2(char const*, char const**, int, CUtlVector<char*, CUtlMemory<char*, int> >&)
 T V_StringToColor32(color32_s*, char const*)
 T V_StringToIntArray(int*, int, char const*)
 T V_StripExtension(char const*, char*, int)
 T V_StripFilename(char*)
 T V_StripLastDir(char*, int)
 T V_StripTrailingSlash(char*)
 T V_atof(char const*)
 T V_atoi(char const*)
 T V_snprintf(char*, int, char const*, ...)
 T V_snwprintf(wchar_t*, int, wchar_t const*, ...)
 T V_strcasecmp(char const*, char const*)
 T V_stristr(char const*, char const*)
 T V_stristr(char*, char const*)
 T V_strncasecmp(char const*, char const*, int)
 T V_strncat(char*, char const*, unsigned long, int)
 T V_strnchr(char const*, char, int)
 T V_strncmp(char const*, char const*, int)
 T V_strncpy(char*, char const*, int)
 T V_strnicmp(char const*, char const*, int)
 T V_strnistr(char const*, char const*, int)
 T V_vsnprintf(char*, int, char const*, char*)
 T V_vsnprintfRet(char*, int, char const*, char*, bool*)
 T VecCheckToss(CBaseEntity*, ITraceFilter*, Vector, Vector, float, float, bool, Vector*, Vector*)
 T VecCheckToss(CBaseEntity*, Vector, Vector, float, float, bool, Vector*, Vector*)
 T Vector3DMultiply(VMatrix const&, Vector const&, Vector&)
 T Vector48::operator Vector()
 T VectorAngles(Vector const&, QAngle&)
 T VectorAngles(Vector const&, Vector const&, QAngle&)
 T VectorIRotate(float const*, matrix3x4_t const&, float*)
 T VectorITransform(float const*, matrix3x4_t const&, float*)
 T VectorNormalize(Vector&)
 T VectorRotate(Vector const&, QAngle const&, Vector&)
 T VectorRotate(Vector const&, Quaternion const&, Vector&)
 T VectorRotate(float const*, matrix3x4_t const&, float*)
 T VectorTransform(float const*, matrix3x4_t const&, float*)
 T VectorVectors(Vector const&, Vector&, Vector&)
 T VectorYawRotate(Vector const&, float, Vector&)
 T VerifyPortalPlacement(CProp_Portal const*, Vector&, QAngle&, float, float, PortalPlacedBy_t)
 T VerifyPortalPlacementAndFizzleBlockingPortals(CProp_Portal const*, Vector&, QAngle&, float, float, PortalPlacedBy_t)
 T VerifySequenceIndex(CStudioHdr*)
 T VisibilityMonitor_AddEntity(CBaseEntity*, float, bool (*)(CBaseEntity*, CBasePlayer*), bool (*)(CBaseEntity*, CBasePlayer*))
 T VisibilityMonitor_AddEntity_NotVisibleThroughGlass(CBaseEntity*, float, bool (*)(CBaseEntity*, CBasePlayer*), bool (*)(CBaseEntity*, CBasePlayer*))
 T W_Precache()
 T WallPainted(int, int, CBaseEntity*)
 T WatchPositionChanges(CBaseEntity*, CBaseEntity*)
 T WaveTrace(char const*, char const*)
 T WeaponManager_AmmoMod(CBaseCombatWeapon*)
 T WeaponResourcesPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T WorldSpaceSlerp(CStudioHdr const*, Quaternion*, Vector*, mstudioseqdesc_t&, int, Quaternion const*, Vector const*, float, int)
 T _V_UTF8ToUnicode(char const*, wchar_t*, int)
 T _V_UnicodeToUTF8(wchar_t const*, char*, int)
 T _V_memcpy(void*, void const*, int)
 T _V_memmove(void*, void const*, int)
 T _V_memset(void*, int, int)
 T _V_strcmp(char const*, char const*)
 T _V_strcpy(char*, char const*)
 T _V_stricmp(char const*, char const*)
 T _V_strlen(char const*)
 T _V_strlower(char*)
 T _V_strrchr(char const*, char)
 T _V_strstr(char const*, char const*)
 T _V_wcscmp(wchar_t const*, wchar_t const*)
 T _V_wcslen(wchar_t const*)
 T __CreateGameRules_CHalfLife2()
 T __CreateGameRules_CMultiplayRules()
 T __CreateGameRules_CPortalGameRules()
 T __CreateGameRules_CPortalMPGameRules()
 T __CreateGameRules_CTeamplayRules()
 T __clang_call_terminate
 T __cxa_pure_virtual
 T __gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >** std::fill_n<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >**, unsigned long, __gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*>(__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >**, unsigned long, __gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >* const&)
 T __gnu_cxx::_Hashtable_node<std::string>** std::fill_n<__gnu_cxx::_Hashtable_node<std::string>**, unsigned long, __gnu_cxx::_Hashtable_node<std::string>*>(__gnu_cxx::_Hashtable_node<std::string>**, unsigned long, __gnu_cxx::_Hashtable_node<std::string>* const&)
 T __gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >**, std::vector<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*> > > std::fill_n<__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >**, std::vector<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*> > >, unsigned long, __gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*>(__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >**, std::vector<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*> > >, unsigned long, __gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >* const&)
 T __gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::string>**, std::vector<__gnu_cxx::_Hashtable_node<std::string>*, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*> > > std::fill_n<__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::string>**, std::vector<__gnu_cxx::_Hashtable_node<std::string>*, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*> > >, unsigned long, __gnu_cxx::_Hashtable_node<std::string>*>(__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::string>**, std::vector<__gnu_cxx::_Hashtable_node<std::string>*, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*> > >, unsigned long, __gnu_cxx::_Hashtable_node<std::string>* const&)
 T __gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > > std::fill_n<__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, unsigned long, std::string*>(__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, unsigned long, std::string* const&)
 T __gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > > std::fill_n<__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, unsigned long, void*>(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, unsigned long, void* const&)
 T __gnu_cxx::__stl_next_prime(unsigned long)
 T __gnu_cxx::new_allocator<std::string>::construct(std::string*, std::string const&)
 T bf_write::WriteBitAngles(QAngle const&)
 T bf_write::WriteBitCoord(float)
 T bf_write::WriteBitNormal(float)
 T bf_write::WriteBitVec3Coord(Vector const&)
 T bf_write::WriteBitVec3Normal(Vector const&)
 T bf_write::WriteBits(void const*, int)
 T bf_write::WriteByte(unsigned int)
 T bf_write::WriteChar(int)
 T bf_write::WriteFloat(float)
 T bf_write::WriteLong(long)
 T bf_write::WriteSBitLong(int, int)
 T bf_write::WriteShort(int)
 T bf_write::WriteString(char const*)
 T bool CNavMesh::ForAllAreasInRadius<NavAreaCollector>(NavAreaCollector&, Vector const&, float)
 T bool CNavMesh::ForAllAreasOverlappingExtent<CFuncNavBlocker>(CFuncNavBlocker&, Extent const&)
 T bool CNavMesh::ForAllAreasOverlappingExtent<CFuncNavObstruction>(CFuncNavObstruction&, Extent const&)
 T bool CNavMesh::ForAllAreasOverlappingExtent<COverlapCheck>(COverlapCheck&, Extent const&)
 T bool CNavMesh::ForAllAreasOverlappingExtent<NavAreaCollector>(NavAreaCollector&, Extent const&)
 T bool CNavMesh::StitchMesh<AreaSet>(AreaSet&)
 T bool CNavMesh::StitchMesh<IncrementallyGeneratedAreas>(IncrementallyGeneratedAreas&)
 T bool ForEachPlayer<DisableAutokick>(DisableAutokick&)
 T bool Unserialize<CUtlBinaryBlock>(CUtlBuffer&, CUtlVector<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >&)
 T bool Unserialize<CUtlString>(CUtlBuffer&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T bool Unserialize<Color>(CUtlBuffer&, CUtlVector<Color, CUtlMemory<Color, int> >&)
 T bool Unserialize<DmeTime_t>(CUtlBuffer&, CUtlVector<DmeTime_t, CUtlMemory<DmeTime_t, int> >&)
 T bool Unserialize<QAngle>(CUtlBuffer&, CUtlVector<QAngle, CUtlMemory<QAngle, int> >&)
 T bool Unserialize<Quaternion>(CUtlBuffer&, CUtlVector<Quaternion, CUtlMemory<Quaternion, int> >&)
 T bool Unserialize<VMatrix>(CUtlBuffer&, CUtlVector<VMatrix, CUtlMemory<VMatrix, int> >&)
 T bool Unserialize<Vector2D>(CUtlBuffer&, CUtlVector<Vector2D, CUtlMemory<Vector2D, int> >&)
 T bool Unserialize<Vector4D>(CUtlBuffer&, CUtlVector<Vector4D, CUtlMemory<Vector4D, int> >&)
 T bool Unserialize<Vector>(CUtlBuffer&, CUtlVector<Vector, CUtlMemory<Vector, int> >&)
 T bool Unserialize<bool>(CUtlBuffer&, CUtlVector<bool, CUtlMemory<bool, int> >&)
 T bool Unserialize<float>(CUtlBuffer&, CUtlVector<float, CUtlMemory<float, int> >&)
 T bool Unserialize<int>(CUtlBuffer&, CUtlVector<int, CUtlMemory<int, int> >&)
 T cc_bot_equip(CCommand const&)
 T cc_bot_kill(CCommand const&)
 T cc_bot_sendcommand(CCommand const&)
 T char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag)
 T datamap_t* DataMapInit<AISquadEnemyInfo_t>(AISquadEnemyInfo_t*)
 T datamap_t* DataMapInit<CAI_ActBusyBehavior>(CAI_ActBusyBehavior*)
 T datamap_t* DataMapInit<CAI_ActBusyGoal>(CAI_ActBusyGoal*)
 T datamap_t* DataMapInit<CAI_ActBusyQueueGoal>(CAI_ActBusyQueueGoal*)
 T datamap_t* DataMapInit<CAI_AddOn>(CAI_AddOn*)
 T datamap_t* DataMapInit<CAI_AllySpeechManager>(CAI_AllySpeechManager*)
 T datamap_t* DataMapInit<CAI_BaseActor>(CAI_BaseActor*)
 T datamap_t* DataMapInit<CAI_BaseNPC>(CAI_BaseNPC*)
 T datamap_t* DataMapInit<CAI_BasePhysicsFlyingBot>(CAI_BasePhysicsFlyingBot*)
 T datamap_t* DataMapInit<CAI_BattleLine>(CAI_BattleLine*)
 T datamap_t* DataMapInit<CAI_BehaviorBase>(CAI_BehaviorBase*)
 T datamap_t* DataMapInit<CAI_FightFromCoverGoal>(CAI_FightFromCoverGoal*)
 T datamap_t* DataMapInit<CAI_FollowBehavior>(CAI_FollowBehavior*)
 T datamap_t* DataMapInit<CAI_GoalEntity>(CAI_GoalEntity*)
 T datamap_t* DataMapInit<CAI_Hint>(CAI_Hint*)
 T datamap_t* DataMapInit<CAI_LeadGoal>(CAI_LeadGoal*)
 T datamap_t* DataMapInit<CAI_Motor>(CAI_Motor*)
 T datamap_t* DataMapInit<CAI_Navigator>(CAI_Navigator*)
 T datamap_t* DataMapInit<CAI_NetworkManager>(CAI_NetworkManager*)
 T datamap_t* DataMapInit<CAI_Path>(CAI_Path*)
 T datamap_t* DataMapInit<CAI_PlayerAlly>(CAI_PlayerAlly*)
 T datamap_t* DataMapInit<CAI_RadialLinkController>(CAI_RadialLinkController*)
 T datamap_t* DataMapInit<CAI_Relationship>(CAI_Relationship*)
 T datamap_t* DataMapInit<CAI_ScriptConditions>(CAI_ScriptConditions*)
 T datamap_t* DataMapInit<CAI_ScriptedSchedule>(CAI_ScriptedSchedule*)
 T datamap_t* DataMapInit<CAI_ScriptedSentence>(CAI_ScriptedSentence*)
 T datamap_t* DataMapInit<CAI_ScriptedSequence>(CAI_ScriptedSequence*)
 T datamap_t* DataMapInit<CAI_Senses>(CAI_Senses*)
 T datamap_t* DataMapInit<CAI_Squad>(CAI_Squad*)
 T datamap_t* DataMapInit<CAmbientGeneric>(CAmbientGeneric*)
 T datamap_t* DataMapInit<CAnimationLayer>(CAnimationLayer*)
 T datamap_t* DataMapInit<CAssaultPoint>(CAssaultPoint*)
 T datamap_t* DataMapInit<CAttributeManager>(CAttributeManager*)
 T datamap_t* DataMapInit<CBaseAnimating>(CBaseAnimating*)
 T datamap_t* DataMapInit<CBaseAnimatingOverlay>(CBaseAnimatingOverlay*)
 T datamap_t* DataMapInit<CBaseButton>(CBaseButton*)
 T datamap_t* DataMapInit<CBaseCombatCharacter>(CBaseCombatCharacter*)
 T datamap_t* DataMapInit<CBaseCombatWeapon>(CBaseCombatWeapon*)
 T datamap_t* DataMapInit<CBaseDoor>(CBaseDoor*)
 T datamap_t* DataMapInit<CBaseEntity>(CBaseEntity*)
 T datamap_t* DataMapInit<CBaseEntityOutput>(CBaseEntityOutput*)
 T datamap_t* DataMapInit<CBaseFilter>(CBaseFilter*)
 T datamap_t* DataMapInit<CBaseGrenade>(CBaseGrenade*)
 T datamap_t* DataMapInit<CBaseGrenadeConcussion>(CBaseGrenadeConcussion*)
 T datamap_t* DataMapInit<CBaseNPCMaker>(CBaseNPCMaker*)
 T datamap_t* DataMapInit<CBasePlatTrain>(CBasePlatTrain*)
 T datamap_t* DataMapInit<CBasePlayer>(CBasePlayer*)
 T datamap_t* DataMapInit<CBaseProjector>(CBaseProjector*)
 T datamap_t* DataMapInit<CBasePropDoor>(CBasePropDoor*)
 T datamap_t* DataMapInit<CBaseServerVehicle>(CBaseServerVehicle*)
 T datamap_t* DataMapInit<CBaseTrigger>(CBaseTrigger*)
 T datamap_t* DataMapInit<CBaseViewModel>(CBaseViewModel*)
 T datamap_t* DataMapInit<CBeamSpotlight>(CBeamSpotlight*)
 T datamap_t* DataMapInit<CBoneFollowerManager>(CBoneFollowerManager*)
 T datamap_t* DataMapInit<CBreakable>(CBreakable*)
 T datamap_t* DataMapInit<CBreakableProp>(CBreakableProp*)
 T datamap_t* DataMapInit<CBreakableSurface>(CBreakableSurface*)
 T datamap_t* DataMapInit<CBubbling>(CBubbling*)
 T datamap_t* DataMapInit<CChangeLevel>(CChangeLevel*)
 T datamap_t* DataMapInit<CColorCorrection>(CColorCorrection*)
 T datamap_t* DataMapInit<CColorCorrectionVolume>(CColorCorrectionVolume*)
 T datamap_t* DataMapInit<CCommentaryAuto>(CCommentaryAuto*)
 T datamap_t* DataMapInit<CCommentarySystem>(CCommentarySystem*)
 T datamap_t* DataMapInit<CCopyRecipientFilter>(CCopyRecipientFilter*)
 T datamap_t* DataMapInit<CCredits>(CCredits*)
 T datamap_t* DataMapInit<CCubeRotationController>(CCubeRotationController*)
 T datamap_t* DataMapInit<CDecal>(CDecal*)
 T datamap_t* DataMapInit<CDynamicLight>(CDynamicLight*)
 T datamap_t* DataMapInit<CDynamicProp>(CDynamicProp*)
 T datamap_t* DataMapInit<CEmbers>(CEmbers*)
 T datamap_t* DataMapInit<CEnergyBallLauncher>(CEnergyBallLauncher*)
 T datamap_t* DataMapInit<CEntityDissolve>(CEntityDissolve*)
 T datamap_t* DataMapInit<CEntityFlame>(CEntityFlame*)
 T datamap_t* DataMapInit<CEnvBeam>(CEnvBeam*)
 T datamap_t* DataMapInit<CEnvDOFController>(CEnvDOFController*)
 T datamap_t* DataMapInit<CEnvEffectsScript>(CEnvEffectsScript*)
 T datamap_t* DataMapInit<CEnvEntityMaker>(CEnvEntityMaker*)
 T datamap_t* DataMapInit<CEnvExplosion>(CEnvExplosion*)
 T datamap_t* DataMapInit<CEnvFade>(CEnvFade*)
 T datamap_t* DataMapInit<CEnvFireSensor>(CEnvFireSensor*)
 T datamap_t* DataMapInit<CEnvGlobal>(CEnvGlobal*)
 T datamap_t* DataMapInit<CEnvGunfire>(CEnvGunfire*)
 T datamap_t* DataMapInit<CEnvLaser>(CEnvLaser*)
 T datamap_t* DataMapInit<CEnvMicrophone>(CEnvMicrophone*)
 T datamap_t* DataMapInit<CEnvPlayerSurfaceTrigger>(CEnvPlayerSurfaceTrigger*)
 T datamap_t* DataMapInit<CEnvPortalPathTrack>(CEnvPortalPathTrack*)
 T datamap_t* DataMapInit<CEnvProjectedTexture>(CEnvProjectedTexture*)
 T datamap_t* DataMapInit<CEnvScreenOverlay>(CEnvScreenOverlay*)
 T datamap_t* DataMapInit<CEnvShake>(CEnvShake*)
 T datamap_t* DataMapInit<CEnvSoundscape>(CEnvSoundscape*)
 T datamap_t* DataMapInit<CEnvSpark>(CEnvSpark*)
 T datamap_t* DataMapInit<CEnvTonemapController>(CEnvTonemapController*)
 T datamap_t* DataMapInit<CEnvTracer>(CEnvTracer*)
 T datamap_t* DataMapInit<CEnvWind>(CEnvWind*)
 T datamap_t* DataMapInit<CFire>(CFire*)
 T datamap_t* DataMapInit<CFishPool>(CFishPool*)
 T datamap_t* DataMapInit<CFogController>(CFogController*)
 T datamap_t* DataMapInit<CFuncCombineBallSpawner>(CFuncCombineBallSpawner*)
 T datamap_t* DataMapInit<CFuncInstanceIoProxy>(CFuncInstanceIoProxy*)
 T datamap_t* DataMapInit<CFuncLadder>(CFuncLadder*)
 T datamap_t* DataMapInit<CFuncMoveLinear>(CFuncMoveLinear*)
 T datamap_t* DataMapInit<CFuncNoPortalVolume>(CFuncNoPortalVolume*)
 T datamap_t* DataMapInit<CFuncPlat>(CFuncPlat*)
 T datamap_t* DataMapInit<CFuncPortalBumper>(CFuncPortalBumper*)
 T datamap_t* DataMapInit<CFuncPortalDetector>(CFuncPortalDetector*)
 T datamap_t* DataMapInit<CFuncRotating>(CFuncRotating*)
 T datamap_t* DataMapInit<CFuncTank>(CFuncTank*)
 T datamap_t* DataMapInit<CFuncTankCombineCannon>(CFuncTankCombineCannon*)
 T datamap_t* DataMapInit<CFuncTankTrain>(CFuncTankTrain*)
 T datamap_t* DataMapInit<CFuncTrackChange>(CFuncTrackChange*)
 T datamap_t* DataMapInit<CFuncTrackTrain>(CFuncTrackTrain*)
 T datamap_t* DataMapInit<CFuncTrain>(CFuncTrain*)
 T datamap_t* DataMapInit<CFuncTrainControls>(CFuncTrainControls*)
 T datamap_t* DataMapInit<CFunc_Portalled>(CFunc_Portalled*)
 T datamap_t* DataMapInit<CFutbolCatcher>(CFutbolCatcher*)
 T datamap_t* DataMapInit<CGamePlayerZone>(CGamePlayerZone*)
 T datamap_t* DataMapInit<CGameUI>(CGameUI*)
 T datamap_t* DataMapInit<CGameWeaponManager>(CGameWeaponManager*)
 T datamap_t* DataMapInit<CGib>(CGib*)
 T datamap_t* DataMapInit<CGibShooter>(CGibShooter*)
 T datamap_t* DataMapInit<CGlobalState>(CGlobalState*)
 T datamap_t* DataMapInit<CGrenadeBeam>(CGrenadeBeam*)
 T datamap_t* DataMapInit<CGrenadeBeamChaser>(CGrenadeBeamChaser*)
 T datamap_t* DataMapInit<CGrenadeFrag>(CGrenadeFrag*)
 T datamap_t* DataMapInit<CGunTarget>(CGunTarget*)
 T datamap_t* DataMapInit<CHLSelectFireMachineGun>(CHLSelectFireMachineGun*)
 T datamap_t* DataMapInit<CHotPotato>(CHotPotato*)
 T datamap_t* DataMapInit<CHotPotatoCatcher>(CHotPotatoCatcher*)
 T datamap_t* DataMapInit<CHotPotatoSpawner>(CHotPotatoSpawner*)
 T datamap_t* DataMapInit<CHoverTurretTether>(CHoverTurretTether*)
 T datamap_t* DataMapInit<CInfoPlacementHelper>(CInfoPlacementHelper*)
 T datamap_t* DataMapInit<CInfoPortalScore>(CInfoPortalScore*)
 T datamap_t* DataMapInit<CInfo_Player_Ping_Detector>(CInfo_Player_Ping_Detector*)
 T datamap_t* DataMapInit<CItem>(CItem*)
 T datamap_t* DataMapInit<CItemSoda>(CItemSoda*)
 T datamap_t* DataMapInit<CItem_Nugget>(CItem_Nugget*)
 T datamap_t* DataMapInit<CKeepUpright>(CKeepUpright*)
 T datamap_t* DataMapInit<CLaserCatcher>(CLaserCatcher*)
 T datamap_t* DataMapInit<CLight>(CLight*)
 T datamap_t* DataMapInit<CLinkedPortalDoor>(CLinkedPortalDoor*)
 T datamap_t* DataMapInit<CLogicAchievement>(CLogicAchievement*)
 T datamap_t* DataMapInit<CLogicActiveAutosave>(CLogicActiveAutosave*)
 T datamap_t* DataMapInit<CLogicAuto>(CLogicAuto*)
 T datamap_t* DataMapInit<CLogicBranch>(CLogicBranch*)
 T datamap_t* DataMapInit<CLogicBranchList>(CLogicBranchList*)
 T datamap_t* DataMapInit<CLogicCase>(CLogicCase*)
 T datamap_t* DataMapInit<CLogicCompare>(CLogicCompare*)
 T datamap_t* DataMapInit<CLogicCompareInteger>(CLogicCompareInteger*)
 T datamap_t* DataMapInit<CLogicCoopManager>(CLogicCoopManager*)
 T datamap_t* DataMapInit<CLogicEventListener>(CLogicEventListener*)
 T datamap_t* DataMapInit<CLogicLineToEntity>(CLogicLineToEntity*)
 T datamap_t* DataMapInit<CLogicMeasureMovement>(CLogicMeasureMovement*)
 T datamap_t* DataMapInit<CLogicPlayMovie>(CLogicPlayMovie*)
 T datamap_t* DataMapInit<CLogicPlayerProxy>(CLogicPlayerProxy*)
 T datamap_t* DataMapInit<CLogicRandomOutputs>(CLogicRandomOutputs*)
 T datamap_t* DataMapInit<CLogicRegisterActivator>(CLogicRegisterActivator*)
 T datamap_t* DataMapInit<CLogicRelay>(CLogicRelay*)
 T datamap_t* DataMapInit<CMathColorBlend>(CMathColorBlend*)
 T datamap_t* DataMapInit<CMathCounter>(CMathCounter*)
 T datamap_t* DataMapInit<CMathRemap>(CMathRemap*)
 T datamap_t* DataMapInit<CMessage>(CMessage*)
 T datamap_t* DataMapInit<CMomentaryRotButton>(CMomentaryRotButton*)
 T datamap_t* DataMapInit<CMortarShell>(CMortarShell*)
 T datamap_t* DataMapInit<CMultiSource>(CMultiSource*)
 T datamap_t* DataMapInit<CNPCSimpleTalker>(CNPCSimpleTalker*)
 T datamap_t* DataMapInit<CNPCSpawnDestination>(CNPCSpawnDestination*)
 T datamap_t* DataMapInit<CNPC_Bullseye>(CNPC_Bullseye*)
 T datamap_t* DataMapInit<CNPC_EnemyFinder>(CNPC_EnemyFinder*)
 T datamap_t* DataMapInit<CNPC_FloorTurret>(CNPC_FloorTurret*)
 T datamap_t* DataMapInit<CNPC_HoverTurret>(CNPC_HoverTurret*)
 T datamap_t* DataMapInit<CNPC_PersonalityCore>(CNPC_PersonalityCore*)
 T datamap_t* DataMapInit<CNPC_Portal_FloorTurret>(CNPC_Portal_FloorTurret*)
 T datamap_t* DataMapInit<CNPC_RocketTurret>(CNPC_RocketTurret*)
 T datamap_t* DataMapInit<CNPC_SecurityCamera>(CNPC_SecurityCamera*)
 T datamap_t* DataMapInit<CNeurotoxinCountdown>(CNeurotoxinCountdown*)
 T datamap_t* DataMapInit<CNewRecharge>(CNewRecharge*)
 T datamap_t* DataMapInit<COuttroStats>(COuttroStats*)
 T datamap_t* DataMapInit<CPaintSprayer>(CPaintSprayer*)
 T datamap_t* DataMapInit<CParticleSystem>(CParticleSystem*)
 T datamap_t* DataMapInit<CPathCorner>(CPathCorner*)
 T datamap_t* DataMapInit<CPathTrack>(CPathTrack*)
 T datamap_t* DataMapInit<CPhysBox>(CPhysBox*)
 T datamap_t* DataMapInit<CPhysConstraint>(CPhysConstraint*)
 T datamap_t* DataMapInit<CPhysConstraintSystem>(CPhysConstraintSystem*)
 T datamap_t* DataMapInit<CPhysConvert>(CPhysConvert*)
 T datamap_t* DataMapInit<CPhysExplosion>(CPhysExplosion*)
 T datamap_t* DataMapInit<CPhysForce>(CPhysForce*)
 T datamap_t* DataMapInit<CPhysImpact>(CPhysImpact*)
 T datamap_t* DataMapInit<CPhysMagnet>(CPhysMagnet*)
 T datamap_t* DataMapInit<CPhysMotor>(CPhysMotor*)
 T datamap_t* DataMapInit<CPhysicsCannister>(CPhysicsCannister*)
 T datamap_t* DataMapInit<CPhysicsNPCSolver>(CPhysicsNPCSolver*)
 T datamap_t* DataMapInit<CPhysicsProp>(CPhysicsProp*)
 T datamap_t* DataMapInit<CPhysicsPropRespawnable>(CPhysicsPropRespawnable*)
 T datamap_t* DataMapInit<CPhysicsSpring>(CPhysicsSpring*)
 T datamap_t* DataMapInit<CPlayerPickupController>(CPlayerPickupController*)
 T datamap_t* DataMapInit<CPlayerResource>(CPlayerResource*)
 T datamap_t* DataMapInit<CPointAngleSensor>(CPointAngleSensor*)
 T datamap_t* DataMapInit<CPointAngularVelocitySensor>(CPointAngularVelocitySensor*)
 T datamap_t* DataMapInit<CPointCamera>(CPointCamera*)
 T datamap_t* DataMapInit<CPointChangelevel>(CPointChangelevel*)
 T datamap_t* DataMapInit<CPointCommentaryNode>(CPointCommentaryNode*)
 T datamap_t* DataMapInit<CPointDevShotCamera>(CPointDevShotCamera*)
 T datamap_t* DataMapInit<CPointEntityFinder>(CPointEntityFinder*)
 T datamap_t* DataMapInit<CPointFutbolShooter>(CPointFutbolShooter*)
 T datamap_t* DataMapInit<CPointHurt>(CPointHurt*)
 T datamap_t* DataMapInit<CPointPlayerMoveConstraint>(CPointPlayerMoveConstraint*)
 T datamap_t* DataMapInit<CPointProximitySensor>(CPointProximitySensor*)
 T datamap_t* DataMapInit<CPointSpotlight>(CPointSpotlight*)
 T datamap_t* DataMapInit<CPointSurvey>(CPointSurvey*)
 T datamap_t* DataMapInit<CPointTemplate>(CPointTemplate*)
 T datamap_t* DataMapInit<CPointVelocitySensor>(CPointVelocitySensor*)
 T datamap_t* DataMapInit<CPortalCredits>(CPortalCredits*)
 T datamap_t* DataMapInit<CPortalLaser>(CPortalLaser*)
 T datamap_t* DataMapInit<CPortalLaserTarget>(CPortalLaserTarget*)
 T datamap_t* DataMapInit<CPortalRaceCheckpoint>(CPortalRaceCheckpoint*)
 T datamap_t* DataMapInit<CPortal_Base2D>(CPortal_Base2D*)
 T datamap_t* DataMapInit<CPortal_Player>(CPortal_Player*)
 T datamap_t* DataMapInit<CPortal_PointPush>(CPortal_PointPush*)
 T datamap_t* DataMapInit<CPoseController>(CPoseController*)
 T datamap_t* DataMapInit<CPostProcessController>(CPostProcessController*)
 T datamap_t* DataMapInit<CProjectedDecal>(CProjectedDecal*)
 T datamap_t* DataMapInit<CPropButton>(CPropButton*)
 T datamap_t* DataMapInit<CPropCombineBall>(CPropCombineBall*)
 T datamap_t* DataMapInit<CPropDoorRotating>(CPropDoorRotating*)
 T datamap_t* DataMapInit<CPropEnergyBall>(CPropEnergyBall*)
 T datamap_t* DataMapInit<CPropExplodingFutbol>(CPropExplodingFutbol*)
 T datamap_t* DataMapInit<CPropFloorButton>(CPropFloorButton*)
 T datamap_t* DataMapInit<CPropFutbolSpawner>(CPropFutbolSpawner*)
 T datamap_t* DataMapInit<CPropGladosCore>(CPropGladosCore*)
 T datamap_t* DataMapInit<CPropGlassFutbol>(CPropGlassFutbol*)
 T datamap_t* DataMapInit<CPropIndicatorPanel>(CPropIndicatorPanel*)
 T datamap_t* DataMapInit<CPropLinkedPortalDoor>(CPropLinkedPortalDoor*)
 T datamap_t* DataMapInit<CPropMonsterBox>(CPropMonsterBox*)
 T datamap_t* DataMapInit<CPropPaintBomb>(CPropPaintBomb*)
 T datamap_t* DataMapInit<CPropPersonalitySphere>(CPropPersonalitySphere*)
 T datamap_t* DataMapInit<CPropPortalStatsDisplay>(CPropPortalStatsDisplay*)
 T datamap_t* DataMapInit<CPropRocketTripwire>(CPropRocketTripwire*)
 T datamap_t* DataMapInit<CPropTelescopicArm>(CPropTelescopicArm*)
 T datamap_t* DataMapInit<CPropTestChamberDoor>(CPropTestChamberDoor*)
 T datamap_t* DataMapInit<CPropTicTacToePanel>(CPropTicTacToePanel*)
 T datamap_t* DataMapInit<CPropTractorBeamProjector>(CPropTractorBeamProjector*)
 T datamap_t* DataMapInit<CPropVehicle>(CPropVehicle*)
 T datamap_t* DataMapInit<CPropVehicleChoreoGeneric>(CPropVehicleChoreoGeneric*)
 T datamap_t* DataMapInit<CPropVehicleDriveable>(CPropVehicleDriveable*)
 T datamap_t* DataMapInit<CPropWallProjector>(CPropWallProjector*)
 T datamap_t* DataMapInit<CPropWeightedCube>(CPropWeightedCube*)
 T datamap_t* DataMapInit<CProp_Portal>(CProp_Portal*)
 T datamap_t* DataMapInit<CRagdollBoogie>(CRagdollBoogie*)
 T datamap_t* DataMapInit<CRagdollProp>(CRagdollProp*)
 T datamap_t* DataMapInit<CRagdollPropAttached>(CRagdollPropAttached*)
 T datamap_t* DataMapInit<CRallyPoint>(CRallyPoint*)
 T datamap_t* DataMapInit<CRecharge>(CRecharge*)
 T datamap_t* DataMapInit<CRevertSaved>(CRevertSaved*)
 T datamap_t* DataMapInit<CRocket_Turret_Projectile>(CRocket_Turret_Projectile*)
 T datamap_t* DataMapInit<CRopeAnchor>(CRopeAnchor*)
 T datamap_t* DataMapInit<CSceneEntity>(CSceneEntity*)
 T datamap_t* DataMapInit<CSceneListManager>(CSceneListManager*)
 T datamap_t* DataMapInit<CSceneManager>(CSceneManager*)
 T datamap_t* DataMapInit<CScriptIntro>(CScriptIntro*)
 T datamap_t* DataMapInit<CScriptedTarget>(CScriptedTarget*)
 T datamap_t* DataMapInit<CSpatialEntity>(CSpatialEntity*)
 T datamap_t* DataMapInit<CSpeaker>(CSpeaker*)
 T datamap_t* DataMapInit<CSprite>(CSprite*)
 T datamap_t* DataMapInit<CStatueProp>(CStatueProp*)
 T datamap_t* DataMapInit<CTankTrainAI>(CTankTrainAI*)
 T datamap_t* DataMapInit<CTeamSpawnPoint>(CTeamSpawnPoint*)
 T datamap_t* DataMapInit<CTeamVehicleSpawnPoint>(CTeamVehicleSpawnPoint*)
 T datamap_t* DataMapInit<CTesla>(CTesla*)
 T datamap_t* DataMapInit<CTestTraceline>(CTestTraceline*)
 T datamap_t* DataMapInit<CTimerEntity>(CTimerEntity*)
 T datamap_t* DataMapInit<CTriggerBrush>(CTriggerBrush*)
 T datamap_t* DataMapInit<CTriggerCamera>(CTriggerCamera*)
 T datamap_t* DataMapInit<CTriggerCatapult>(CTriggerCatapult*)
 T datamap_t* DataMapInit<CTriggerGravity>(CTriggerGravity*)
 T datamap_t* DataMapInit<CTriggerHurt>(CTriggerHurt*)
 T datamap_t* DataMapInit<CTriggerImpact>(CTriggerImpact*)
 T datamap_t* DataMapInit<CTriggerLook>(CTriggerLook*)
 T datamap_t* DataMapInit<CTriggerMultiple>(CTriggerMultiple*)
 T datamap_t* DataMapInit<CTriggerPingDetector>(CTriggerPingDetector*)
 T datamap_t* DataMapInit<CTriggerPlayerTeam>(CTriggerPlayerTeam*)
 T datamap_t* DataMapInit<CTriggerPortalCleanser>(CTriggerPortalCleanser*)
 T datamap_t* DataMapInit<CTriggerProximity>(CTriggerProximity*)
 T datamap_t* DataMapInit<CTriggerRemove>(CTriggerRemove*)
 T datamap_t* DataMapInit<CTriggerSoundscape>(CTriggerSoundscape*)
 T datamap_t* DataMapInit<CTriggerVPhysicsMotion>(CTriggerVPhysicsMotion*)
 T datamap_t* DataMapInit<CTriggerViewProxy>(CTriggerViewProxy*)
 T datamap_t* DataMapInit<CTriggerWateryDeath>(CTriggerWateryDeath*)
 T datamap_t* DataMapInit<CTriggerWeaponDissolve>(CTriggerWeaponDissolve*)
 T datamap_t* DataMapInit<CTriggerWind>(CTriggerWind*)
 T datamap_t* DataMapInit<CTrigger_TractorBeam>(CTrigger_TractorBeam*)
 T datamap_t* DataMapInit<CTurretTipController>(CTurretTipController*)
 T datamap_t* DataMapInit<CWaterBullet>(CWaterBullet*)
 T datamap_t* DataMapInit<CWateryDeathLeech>(CWateryDeathLeech*)
 T datamap_t* DataMapInit<CWeaponItemBase>(CWeaponItemBase*)
 T datamap_t* DataMapInit<CWeaponPaintGun>(CWeaponPaintGun*)
 T datamap_t* DataMapInit<CWeaponPortalgun>(CWeaponPortalgun*)
 T datamap_t* DataMapInit<CWeightButton>(CWeightButton*)
 T datamap_t* DataMapInit<CWindowPane>(CWindowPane*)
 T datamap_t* DataMapInit<EventQueuePrioritizedEvent_t>(EventQueuePrioritizedEvent_t*)
 T datamap_t* DataMapInit<FizzlerEffects>(FizzlerEffects*)
 T datamap_t* DataMapInit<FizzlerMultiOriginSoundPlayer>(FizzlerMultiOriginSoundPlayer*)
 T datamap_t* DataMapInit<magnetted_objects_t>(magnetted_objects_t*)
 T datamap_t* DataMapInit<vehiclesounds_t>(vehiclesounds_t*)
 T dyld_stub_binding_helper
 T entityflamePrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T env_entity_freezingPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T findFirstAreaInDirection(Vector const*, NavDirType, float, float, CBaseEntity*, Vector*)
 T fogparams_t::NetworkStateChanged()
 T fogparams_t::NetworkStateChanged(void*)
 T fogparams_t::operator!=(fogparams_t const&) const
 T fogparams_t::operator=(fogparams_t const&)
 T int CRestore::ReadSimple<Quaternion>(Quaternion*, int, int)
 T int CRestore::ReadSimple<VMatrix>(VMatrix*, int, int)
 T int CRestore::ReadSimple<Vector>(Vector*, int, int)
 T int CRestore::ReadSimple<bool>(bool*, int, int)
 T int CRestore::ReadSimple<char>(char*, int, int)
 T int CRestore::ReadSimple<float>(float*, int, int)
 T int CRestore::ReadSimple<int>(int*, int, int)
 T int CRestore::ReadSimple<interval_t>(interval_t*, int, int)
 T int CRestore::ReadSimple<short>(short*, int, int)
 T int ServerClassInit<DT_AI_BaseNPC::ignored>(DT_AI_BaseNPC::ignored*)
 T int ServerClassInit<DT_AR2Explosion::ignored>(DT_AR2Explosion::ignored*)
 T int ServerClassInit<DT_AnimTimeMustBeFirst::ignored>(DT_AnimTimeMustBeFirst::ignored*)
 T int ServerClassInit<DT_Animationlayer::ignored>(DT_Animationlayer::ignored*)
 T int ServerClassInit<DT_AttributeContainer::ignored>(DT_AttributeContainer::ignored*)
 T int ServerClassInit<DT_AttributeContainerPlayer::ignored>(DT_AttributeContainerPlayer::ignored*)
 T int ServerClassInit<DT_AttributeList::ignored>(DT_AttributeList::ignored*)
 T int ServerClassInit<DT_AttributeManager::ignored>(DT_AttributeManager::ignored*)
 T int ServerClassInit<DT_BCCLocalPlayerExclusive::ignored>(DT_BCCLocalPlayerExclusive::ignored*)
 T int ServerClassInit<DT_BaseAnimating::ignored>(DT_BaseAnimating::ignored*)
 T int ServerClassInit<DT_BaseAnimatingOverlay::ignored>(DT_BaseAnimatingOverlay::ignored*)
 T int ServerClassInit<DT_BaseBeam::ignored>(DT_BaseBeam::ignored*)
 T int ServerClassInit<DT_BaseButton::ignored>(DT_BaseButton::ignored*)
 T int ServerClassInit<DT_BaseCombatCharacter::ignored>(DT_BaseCombatCharacter::ignored*)
 T int ServerClassInit<DT_BaseCombatWeapon::ignored>(DT_BaseCombatWeapon::ignored*)
 T int ServerClassInit<DT_BaseDoor::ignored>(DT_BaseDoor::ignored*)
 T int ServerClassInit<DT_BaseEntity::ignored>(DT_BaseEntity::ignored*)
 T int ServerClassInit<DT_BaseFlex::ignored>(DT_BaseFlex::ignored*)
 T int ServerClassInit<DT_BaseGrenade::ignored>(DT_BaseGrenade::ignored*)
 T int ServerClassInit<DT_BaseHLCombatWeapon::ignored>(DT_BaseHLCombatWeapon::ignored*)
 T int ServerClassInit<DT_BaseParticleEntity::ignored>(DT_BaseParticleEntity::ignored*)
 T int ServerClassInit<DT_BasePlayer::ignored>(DT_BasePlayer::ignored*)
 T int ServerClassInit<DT_BasePortalCombatWeapon::ignored>(DT_BasePortalCombatWeapon::ignored*)
 T int ServerClassInit<DT_BaseProjectedEntity::ignored>(DT_BaseProjectedEntity::ignored*)
 T int ServerClassInit<DT_BaseProjector::ignored>(DT_BaseProjector::ignored*)
 T int ServerClassInit<DT_BasePropDoor::ignored>(DT_BasePropDoor::ignored*)
 T int ServerClassInit<DT_BaseTempEntity::ignored>(DT_BaseTempEntity::ignored*)
 T int ServerClassInit<DT_BaseToggle::ignored>(DT_BaseToggle::ignored*)
 T int ServerClassInit<DT_BaseTrigger::ignored>(DT_BaseTrigger::ignored*)
 T int ServerClassInit<DT_BaseVPhysicsTrigger::ignored>(DT_BaseVPhysicsTrigger::ignored*)
 T int ServerClassInit<DT_BaseViewModel::ignored>(DT_BaseViewModel::ignored*)
 T int ServerClassInit<DT_Beam::ignored>(DT_Beam::ignored*)
 T int ServerClassInit<DT_BeamSpotlight::ignored>(DT_BeamSpotlight::ignored*)
 T int ServerClassInit<DT_BoneFollower::ignored>(DT_BoneFollower::ignored*)
 T int ServerClassInit<DT_BreakableProp::ignored>(DT_BreakableProp::ignored*)
 T int ServerClassInit<DT_BreakableSurface::ignored>(DT_BreakableSurface::ignored*)
 T int ServerClassInit<DT_CFish::ignored>(DT_CFish::ignored*)
 T int ServerClassInit<DT_CitadelEnergyCore::ignored>(DT_CitadelEnergyCore::ignored*)
 T int ServerClassInit<DT_CollisionProperty::ignored>(DT_CollisionProperty::ignored*)
 T int ServerClassInit<DT_ColorCorrection::ignored>(DT_ColorCorrection::ignored*)
 T int ServerClassInit<DT_ColorCorrectionVolume::ignored>(DT_ColorCorrectionVolume::ignored*)
 T int ServerClassInit<DT_Corpse::ignored>(DT_Corpse::ignored*)
 T int ServerClassInit<DT_CountdownTimer::ignored>(DT_CountdownTimer::ignored*)
 T int ServerClassInit<DT_DetailController::ignored>(DT_DetailController::ignored*)
 T int ServerClassInit<DT_DustTrail::ignored>(DT_DustTrail::ignored*)
 T int ServerClassInit<DT_DynamicLight::ignored>(DT_DynamicLight::ignored*)
 T int ServerClassInit<DT_DynamicProp::ignored>(DT_DynamicProp::ignored*)
 T int ServerClassInit<DT_EffectData::ignored>(DT_EffectData::ignored*)
 T int ServerClassInit<DT_Embers::ignored>(DT_Embers::ignored*)
 T int ServerClassInit<DT_EntityDissolve::ignored>(DT_EntityDissolve::ignored*)
 T int ServerClassInit<DT_EntityFlame::ignored>(DT_EntityFlame::ignored*)
 T int ServerClassInit<DT_EntityFreezing::ignored>(DT_EntityFreezing::ignored*)
 T int ServerClassInit<DT_EntityParticleTrail::ignored>(DT_EntityParticleTrail::ignored*)
 T int ServerClassInit<DT_EntityParticleTrailInfo::ignored>(DT_EntityParticleTrailInfo::ignored*)
 T int ServerClassInit<DT_EntityPortalledNetworkMessage::ignored>(DT_EntityPortalledNetworkMessage::ignored*)
 T int ServerClassInit<DT_EnvAmbientLight::ignored>(DT_EnvAmbientLight::ignored*)
 T int ServerClassInit<DT_EnvDOFController::ignored>(DT_EnvDOFController::ignored*)
 T int ServerClassInit<DT_EnvParticleScript::ignored>(DT_EnvParticleScript::ignored*)
 T int ServerClassInit<DT_EnvPortalPathTrack::ignored>(DT_EnvPortalPathTrack::ignored*)
 T int ServerClassInit<DT_EnvProjectedTexture::ignored>(DT_EnvProjectedTexture::ignored*)
 T int ServerClassInit<DT_EnvScreenEffect::ignored>(DT_EnvScreenEffect::ignored*)
 T int ServerClassInit<DT_EnvScreenOverlay::ignored>(DT_EnvScreenOverlay::ignored*)
 T int ServerClassInit<DT_EnvTonemapController::ignored>(DT_EnvTonemapController::ignored*)
 T int ServerClassInit<DT_EnvWind::ignored>(DT_EnvWind::ignored*)
 T int ServerClassInit<DT_EnvWindShared::ignored>(DT_EnvWindShared::ignored*)
 T int ServerClassInit<DT_Env_Lightrail_Endpoint::ignored>(DT_Env_Lightrail_Endpoint::ignored*)
 T int ServerClassInit<DT_FireSmoke::ignored>(DT_FireSmoke::ignored*)
 T int ServerClassInit<DT_FireTrail::ignored>(DT_FireTrail::ignored*)
 T int ServerClassInit<DT_FizzlerEffects::ignored>(DT_FizzlerEffects::ignored*)
 T int ServerClassInit<DT_FizzlerMultiOriginSoundPlayer::ignored>(DT_FizzlerMultiOriginSoundPlayer::ignored*)
 T int ServerClassInit<DT_FogController::ignored>(DT_FogController::ignored*)
 T int ServerClassInit<DT_FuncAreaPortalWindow::ignored>(DT_FuncAreaPortalWindow::ignored*)
 T int ServerClassInit<DT_FuncBrush::ignored>(DT_FuncBrush::ignored*)
 T int ServerClassInit<DT_FuncConveyor::ignored>(DT_FuncConveyor::ignored*)
 T int ServerClassInit<DT_FuncLadder::ignored>(DT_FuncLadder::ignored*)
 T int ServerClassInit<DT_FuncMonitor::ignored>(DT_FuncMonitor::ignored*)
 T int ServerClassInit<DT_FuncMoveLinear::ignored>(DT_FuncMoveLinear::ignored*)
 T int ServerClassInit<DT_FuncNoPortalVolume::ignored>(DT_FuncNoPortalVolume::ignored*)
 T int ServerClassInit<DT_FuncOccluder::ignored>(DT_FuncOccluder::ignored*)
 T int ServerClassInit<DT_FuncPortalBumper::ignored>(DT_FuncPortalBumper::ignored*)
 T int ServerClassInit<DT_FuncReflectiveGlass::ignored>(DT_FuncReflectiveGlass::ignored*)
 T int ServerClassInit<DT_FuncRotating::ignored>(DT_FuncRotating::ignored*)
 T int ServerClassInit<DT_FuncSmokeVolume::ignored>(DT_FuncSmokeVolume::ignored*)
 T int ServerClassInit<DT_FuncTrackTrain::ignored>(DT_FuncTrackTrain::ignored*)
 T int ServerClassInit<DT_Func_Dust::ignored>(DT_Func_Dust::ignored*)
 T int ServerClassInit<DT_Func_LOD::ignored>(DT_Func_LOD::ignored*)
 T int ServerClassInit<DT_GameRulesProxy::ignored>(DT_GameRulesProxy::ignored*)
 T int ServerClassInit<DT_HL2GameRules::ignored>(DT_HL2GameRules::ignored*)
 T int ServerClassInit<DT_HLMachineGun::ignored>(DT_HLMachineGun::ignored*)
 T int ServerClassInit<DT_HLSelectFireMachineGun::ignored>(DT_HLSelectFireMachineGun::ignored*)
 T int ServerClassInit<DT_HalfLife2Proxy::ignored>(DT_HalfLife2Proxy::ignored*)
 T int ServerClassInit<DT_HandleTest::ignored>(DT_HandleTest::ignored*)
 T int ServerClassInit<DT_InfoLadderDismount::ignored>(DT_InfoLadderDismount::ignored*)
 T int ServerClassInit<DT_InfoOverlayAccessor::ignored>(DT_InfoOverlayAccessor::ignored*)
 T int ServerClassInit<DT_InfoPlacementHelper::ignored>(DT_InfoPlacementHelper::ignored*)
 T int ServerClassInit<DT_InfoPortalScore::ignored>(DT_InfoPortalScore::ignored*)
 T int ServerClassInit<DT_IntervalTimer::ignored>(DT_IntervalTimer::ignored*)
 T int ServerClassInit<DT_LabIndicatorPanel::ignored>(DT_LabIndicatorPanel::ignored*)
 T int ServerClassInit<DT_LevelPlacardDisplay::ignored>(DT_LevelPlacardDisplay::ignored*)
 T int ServerClassInit<DT_LightGlow::ignored>(DT_LightGlow::ignored*)
 T int ServerClassInit<DT_Local::ignored>(DT_Local::ignored*)
 T int ServerClassInit<DT_LocalActiveWeaponData::ignored>(DT_LocalActiveWeaponData::ignored*)
 T int ServerClassInit<DT_LocalPlayerExclusive::ignored>(DT_LocalPlayerExclusive::ignored*)
 T int ServerClassInit<DT_LocalWeaponData::ignored>(DT_LocalWeaponData::ignored*)
 T int ServerClassInit<DT_MP_LobbyScreen::ignored>(DT_MP_LobbyScreen::ignored*)
 T int ServerClassInit<DT_MaterialModifyControl::ignored>(DT_MaterialModifyControl::ignored*)
 T int ServerClassInit<DT_MortarShell::ignored>(DT_MortarShell::ignored*)
 T int ServerClassInit<DT_MovieDisplay::ignored>(DT_MovieDisplay::ignored*)
 T int ServerClassInit<DT_MovieExplosion::ignored>(DT_MovieExplosion::ignored*)
 T int ServerClassInit<DT_NPC_HoverTurret::ignored>(DT_NPC_HoverTurret::ignored*)
 T int ServerClassInit<DT_NPC_Personality_Core::ignored>(DT_NPC_Personality_Core::ignored*)
 T int ServerClassInit<DT_NPC_Portal_FloorTurret::ignored>(DT_NPC_Portal_FloorTurret::ignored*)
 T int ServerClassInit<DT_NPC_RocketTurret::ignored>(DT_NPC_RocketTurret::ignored*)
 T int ServerClassInit<DT_NPC_Wheatley_Boss::ignored>(DT_NPC_Wheatley_Boss::ignored*)
 T int ServerClassInit<DT_NeurotoxinCountdown::ignored>(DT_NeurotoxinCountdown::ignored*)
 T int ServerClassInit<DT_OverlayVars::ignored>(DT_OverlayVars::ignored*)
 T int ServerClassInit<DT_PSCollisionEntity::ignored>(DT_PSCollisionEntity::ignored*)
 T int ServerClassInit<DT_PS_InternalData_t::ignored>(DT_PS_InternalData_t::ignored*)
 T int ServerClassInit<DT_PS_SimulationData_t::ignored>(DT_PS_SimulationData_t::ignored*)
 T int ServerClassInit<DT_PaintSprayer::ignored>(DT_PaintSprayer::ignored*)
 T int ServerClassInit<DT_PaintStream::ignored>(DT_PaintStream::ignored*)
 T int ServerClassInit<DT_ParticleFire::ignored>(DT_ParticleFire::ignored*)
 T int ServerClassInit<DT_ParticlePerformanceMonitor::ignored>(DT_ParticlePerformanceMonitor::ignored*)
 T int ServerClassInit<DT_ParticleSmokeGrenade::ignored>(DT_ParticleSmokeGrenade::ignored*)
 T int ServerClassInit<DT_ParticleSystem::ignored>(DT_ParticleSystem::ignored*)
 T int ServerClassInit<DT_PhysBox::ignored>(DT_PhysBox::ignored*)
 T int ServerClassInit<DT_PhysBoxMultiplayer::ignored>(DT_PhysBoxMultiplayer::ignored*)
 T int ServerClassInit<DT_PhysMagnet::ignored>(DT_PhysMagnet::ignored*)
 T int ServerClassInit<DT_PhysicsProp::ignored>(DT_PhysicsProp::ignored*)
 T int ServerClassInit<DT_PhysicsPropMultiplayer::ignored>(DT_PhysicsPropMultiplayer::ignored*)
 T int ServerClassInit<DT_Plasma::ignored>(DT_Plasma::ignored*)
 T int ServerClassInit<DT_PlayerResource::ignored>(DT_PlayerResource::ignored*)
 T int ServerClassInit<DT_PlayerState::ignored>(DT_PlayerState::ignored*)
 T int ServerClassInit<DT_PointCamera::ignored>(DT_PointCamera::ignored*)
 T int ServerClassInit<DT_PointCommentaryNode::ignored>(DT_PointCommentaryNode::ignored*)
 T int ServerClassInit<DT_PointSurvey::ignored>(DT_PointSurvey::ignored*)
 T int ServerClassInit<DT_PortalGameRules::ignored>(DT_PortalGameRules::ignored*)
 T int ServerClassInit<DT_PortalGameRulesProxy::ignored>(DT_PortalGameRulesProxy::ignored*)
 T int ServerClassInit<DT_PortalLaser::ignored>(DT_PortalLaser::ignored*)
 T int ServerClassInit<DT_PortalLocal::ignored>(DT_PortalLocal::ignored*)
 T int ServerClassInit<DT_PortalLocalPlayerExclusive::ignored>(DT_PortalLocalPlayerExclusive::ignored*)
 T int ServerClassInit<DT_PortalMPGameRules::ignored>(DT_PortalMPGameRules::ignored*)
 T int ServerClassInit<DT_PortalMPGameRulesProxy::ignored>(DT_PortalMPGameRulesProxy::ignored*)
 T int ServerClassInit<DT_PortalMPStatsProxy::ignored>(DT_PortalMPStatsProxy::ignored*)
 T int ServerClassInit<DT_PortalNonLocalPlayerExclusive::ignored>(DT_PortalNonLocalPlayerExclusive::ignored*)
 T int ServerClassInit<DT_PortalPlayerShared::ignored>(DT_PortalPlayerShared::ignored*)
 T int ServerClassInit<DT_PortalPlayerStatistics::ignored>(DT_PortalPlayerStatistics::ignored*)
 T int ServerClassInit<DT_PortalPointPush::ignored>(DT_PortalPointPush::ignored*)
 T int ServerClassInit<DT_PortalRagdoll::ignored>(DT_PortalRagdoll::ignored*)
 T int ServerClassInit<DT_PortalSimulator::ignored>(DT_PortalSimulator::ignored*)
 T int ServerClassInit<DT_Portal_Base2D::ignored>(DT_Portal_Base2D::ignored*)
 T int ServerClassInit<DT_Portal_MP_Stats::ignored>(DT_Portal_MP_Stats::ignored*)
 T int ServerClassInit<DT_Portal_Player::ignored>(DT_Portal_Player::ignored*)
 T int ServerClassInit<DT_PoseController::ignored>(DT_PoseController::ignored*)
 T int ServerClassInit<DT_PostProcessController::ignored>(DT_PostProcessController::ignored*)
 T int ServerClassInit<DT_Precipitation::ignored>(DT_Precipitation::ignored*)
 T int ServerClassInit<DT_PrecipitationBlocker::ignored>(DT_PrecipitationBlocker::ignored*)
 T int ServerClassInit<DT_PredictedViewModel::ignored>(DT_PredictedViewModel::ignored*)
 T int ServerClassInit<DT_ProjectedEntityAmbientSoundProxy::ignored>(DT_ProjectedEntityAmbientSoundProxy::ignored*)
 T int ServerClassInit<DT_ProjectedTractorBeamEntity::ignored>(DT_ProjectedTractorBeamEntity::ignored*)
 T int ServerClassInit<DT_ProjectedWallEntity::ignored>(DT_ProjectedWallEntity::ignored*)
 T int ServerClassInit<DT_PropCombineBall::ignored>(DT_PropCombineBall::ignored*)
 T int ServerClassInit<DT_PropDoorRotating::ignored>(DT_PropDoorRotating::ignored*)
 T int ServerClassInit<DT_PropEnergyBall::ignored>(DT_PropEnergyBall::ignored*)
 T int ServerClassInit<DT_PropFloorButton::ignored>(DT_PropFloorButton::ignored*)
 T int ServerClassInit<DT_PropLinkedPortalDoor::ignored>(DT_PropLinkedPortalDoor::ignored*)
 T int ServerClassInit<DT_PropPaintBomb::ignored>(DT_PropPaintBomb::ignored*)
 T int ServerClassInit<DT_PropPortalStatsDisplay::ignored>(DT_PropPortalStatsDisplay::ignored*)
 T int ServerClassInit<DT_PropRocketTripwire::ignored>(DT_PropRocketTripwire::ignored*)
 T int ServerClassInit<DT_PropTractorBeamProjector::ignored>(DT_PropTractorBeamProjector::ignored*)
 T int ServerClassInit<DT_PropVehicleChoreoGeneric::ignored>(DT_PropVehicleChoreoGeneric::ignored*)
 T int ServerClassInit<DT_PropVehicleDriveable::ignored>(DT_PropVehicleDriveable::ignored*)
 T int ServerClassInit<DT_PropWeightedCube::ignored>(DT_PropWeightedCube::ignored*)
 T int ServerClassInit<DT_Prop_Hallucination::ignored>(DT_Prop_Hallucination::ignored*)
 T int ServerClassInit<DT_Prop_Mirror::ignored>(DT_Prop_Mirror::ignored*)
 T int ServerClassInit<DT_Prop_Portal::ignored>(DT_Prop_Portal::ignored*)
 T int ServerClassInit<DT_ProxyToggle::ignored>(DT_ProxyToggle::ignored*)
 T int ServerClassInit<DT_ProxyToggle_ProxiedData::ignored>(DT_ProxyToggle_ProxiedData::ignored*)
 T int ServerClassInit<DT_QuadraticBeam::ignored>(DT_QuadraticBeam::ignored*)
 T int ServerClassInit<DT_Ragdoll::ignored>(DT_Ragdoll::ignored*)
 T int ServerClassInit<DT_RagdollManager::ignored>(DT_RagdollManager::ignored*)
 T int ServerClassInit<DT_Ragdoll_Attached::ignored>(DT_Ragdoll_Attached::ignored*)
 T int ServerClassInit<DT_RocketTrail::ignored>(DT_RocketTrail::ignored*)
 T int ServerClassInit<DT_RopeKeyframe::ignored>(DT_RopeKeyframe::ignored*)
 T int ServerClassInit<DT_SceneEntity::ignored>(DT_SceneEntity::ignored*)
 T int ServerClassInit<DT_ScriptCreatedAttribute::ignored>(DT_ScriptCreatedAttribute::ignored*)
 T int ServerClassInit<DT_ScriptCreatedItem::ignored>(DT_ScriptCreatedItem::ignored*)
 T int ServerClassInit<DT_ScriptIntro::ignored>(DT_ScriptIntro::ignored*)
 T int ServerClassInit<DT_ServerAnimationData::ignored>(DT_ServerAnimationData::ignored*)
 T int ServerClassInit<DT_ShadowControl::ignored>(DT_ShadowControl::ignored*)
 T int ServerClassInit<DT_SlideshowDisplay::ignored>(DT_SlideshowDisplay::ignored*)
 T int ServerClassInit<DT_SmokeStack::ignored>(DT_SmokeStack::ignored*)
 T int ServerClassInit<DT_SmokeTrail::ignored>(DT_SmokeTrail::ignored*)
 T int ServerClassInit<DT_SpatialEntity::ignored>(DT_SpatialEntity::ignored*)
 T int ServerClassInit<DT_SporeExplosion::ignored>(DT_SporeExplosion::ignored*)
 T int ServerClassInit<DT_SporeTrail::ignored>(DT_SporeTrail::ignored*)
 T int ServerClassInit<DT_SpotlightEnd::ignored>(DT_SpotlightEnd::ignored*)
 T int ServerClassInit<DT_Sprite::ignored>(DT_Sprite::ignored*)
 T int ServerClassInit<DT_SpriteOriented::ignored>(DT_SpriteOriented::ignored*)
 T int ServerClassInit<DT_SpriteTrail::ignored>(DT_SpriteTrail::ignored*)
 T int ServerClassInit<DT_StatueProp::ignored>(DT_StatueProp::ignored*)
 T int ServerClassInit<DT_SteamJet::ignored>(DT_SteamJet::ignored*)
 T int ServerClassInit<DT_Sun::ignored>(DT_Sun::ignored*)
 T int ServerClassInit<DT_SunlightShadowControl::ignored>(DT_SunlightShadowControl::ignored*)
 T int ServerClassInit<DT_TEAntlionDust::ignored>(DT_TEAntlionDust::ignored*)
 T int ServerClassInit<DT_TEArmorRicochet::ignored>(DT_TEArmorRicochet::ignored*)
 T int ServerClassInit<DT_TEBSPDecal::ignored>(DT_TEBSPDecal::ignored*)
 T int ServerClassInit<DT_TEBeamEntPoint::ignored>(DT_TEBeamEntPoint::ignored*)
 T int ServerClassInit<DT_TEBeamEnts::ignored>(DT_TEBeamEnts::ignored*)
 T int ServerClassInit<DT_TEBeamFollow::ignored>(DT_TEBeamFollow::ignored*)
 T int ServerClassInit<DT_TEBeamLaser::ignored>(DT_TEBeamLaser::ignored*)
 T int ServerClassInit<DT_TEBeamPoints::ignored>(DT_TEBeamPoints::ignored*)
 T int ServerClassInit<DT_TEBeamRing::ignored>(DT_TEBeamRing::ignored*)
 T int ServerClassInit<DT_TEBeamRingPoint::ignored>(DT_TEBeamRingPoint::ignored*)
 T int ServerClassInit<DT_TEBeamSpline::ignored>(DT_TEBeamSpline::ignored*)
 T int ServerClassInit<DT_TEBloodSprite::ignored>(DT_TEBloodSprite::ignored*)
 T int ServerClassInit<DT_TEBloodStream::ignored>(DT_TEBloodStream::ignored*)
 T int ServerClassInit<DT_TEBreakModel::ignored>(DT_TEBreakModel::ignored*)
 T int ServerClassInit<DT_TEBubbleTrail::ignored>(DT_TEBubbleTrail::ignored*)
 T int ServerClassInit<DT_TEBubbles::ignored>(DT_TEBubbles::ignored*)
 T int ServerClassInit<DT_TEClientProjectile::ignored>(DT_TEClientProjectile::ignored*)
 T int ServerClassInit<DT_TEDecal::ignored>(DT_TEDecal::ignored*)
 T int ServerClassInit<DT_TEDust::ignored>(DT_TEDust::ignored*)
 T int ServerClassInit<DT_TEDynamicLight::ignored>(DT_TEDynamicLight::ignored*)
 T int ServerClassInit<DT_TEEffectDispatch::ignored>(DT_TEEffectDispatch::ignored*)
 T int ServerClassInit<DT_TEEnergySplash::ignored>(DT_TEEnergySplash::ignored*)
 T int ServerClassInit<DT_TEExplosion::ignored>(DT_TEExplosion::ignored*)
 T int ServerClassInit<DT_TEFizz::ignored>(DT_TEFizz::ignored*)
 T int ServerClassInit<DT_TEFootprintDecal::ignored>(DT_TEFootprintDecal::ignored*)
 T int ServerClassInit<DT_TEFoundryHelpers::ignored>(DT_TEFoundryHelpers::ignored*)
 T int ServerClassInit<DT_TEGaussExplosion::ignored>(DT_TEGaussExplosion::ignored*)
 T int ServerClassInit<DT_TEGlowSprite::ignored>(DT_TEGlowSprite::ignored*)
 T int ServerClassInit<DT_TEImpact::ignored>(DT_TEImpact::ignored*)
 T int ServerClassInit<DT_TEKillPlayerAttachments::ignored>(DT_TEKillPlayerAttachments::ignored*)
 T int ServerClassInit<DT_TELargeFunnel::ignored>(DT_TELargeFunnel::ignored*)
 T int ServerClassInit<DT_TEMetalSparks::ignored>(DT_TEMetalSparks::ignored*)
 T int ServerClassInit<DT_TEMuzzleFlash::ignored>(DT_TEMuzzleFlash::ignored*)
 T int ServerClassInit<DT_TEParticleSystem::ignored>(DT_TEParticleSystem::ignored*)
 T int ServerClassInit<DT_TEPhysicsProp::ignored>(DT_TEPhysicsProp::ignored*)
 T int ServerClassInit<DT_TEPlayerAnimEvent::ignored>(DT_TEPlayerAnimEvent::ignored*)
 T int ServerClassInit<DT_TEPlayerDecal::ignored>(DT_TEPlayerDecal::ignored*)
 T int ServerClassInit<DT_TEProjectedDecal::ignored>(DT_TEProjectedDecal::ignored*)
 T int ServerClassInit<DT_TEShatterSurface::ignored>(DT_TEShatterSurface::ignored*)
 T int ServerClassInit<DT_TEShowLine::ignored>(DT_TEShowLine::ignored*)
 T int ServerClassInit<DT_TESmoke::ignored>(DT_TESmoke::ignored*)
 T int ServerClassInit<DT_TESparks::ignored>(DT_TESparks::ignored*)
 T int ServerClassInit<DT_TESprite::ignored>(DT_TESprite::ignored*)
 T int ServerClassInit<DT_TESpriteSpray::ignored>(DT_TESpriteSpray::ignored*)
 T int ServerClassInit<DT_TEWallPaintedEvent::ignored>(DT_TEWallPaintedEvent::ignored*)
 T int ServerClassInit<DT_TEWorldDecal::ignored>(DT_TEWorldDecal::ignored*)
 T int ServerClassInit<DT_Team::ignored>(DT_Team::ignored*)
 T int ServerClassInit<DT_Tesla::ignored>(DT_Tesla::ignored*)
 T int ServerClassInit<DT_TestTraceline::ignored>(DT_TestTraceline::ignored*)
 T int ServerClassInit<DT_Timeline::ignored>(DT_Timeline::ignored*)
 T int ServerClassInit<DT_TriggerCatapult::ignored>(DT_TriggerCatapult::ignored*)
 T int ServerClassInit<DT_TriggerPaintCleanser::ignored>(DT_TriggerPaintCleanser::ignored*)
 T int ServerClassInit<DT_TriggerPlayerMovement::ignored>(DT_TriggerPlayerMovement::ignored*)
 T int ServerClassInit<DT_TriggerPortalCleanser::ignored>(DT_TriggerPortalCleanser::ignored*)
 T int ServerClassInit<DT_Trigger_TractorBeam::ignored>(DT_Trigger_TractorBeam::ignored*)
 T int ServerClassInit<DT_VGuiScreen::ignored>(DT_VGuiScreen::ignored*)
 T int ServerClassInit<DT_WORLD::ignored>(DT_WORLD::ignored*)
 T int ServerClassInit<DT_WaterBullet::ignored>(DT_WaterBullet::ignored*)
 T int ServerClassInit<DT_WaterLODControl::ignored>(DT_WaterLODControl::ignored*)
 T int ServerClassInit<DT_WeaponCubemap::ignored>(DT_WeaponCubemap::ignored*)
 T int ServerClassInit<DT_WeaponCycler::ignored>(DT_WeaponCycler::ignored*)
 T int ServerClassInit<DT_WeaponItemBase::ignored>(DT_WeaponItemBase::ignored*)
 T int ServerClassInit<DT_WeaponPaintGun::ignored>(DT_WeaponPaintGun::ignored*)
 T int ServerClassInit<DT_WeaponPortalBase::ignored>(DT_WeaponPortalBase::ignored*)
 T int ServerClassInit<DT_WeaponPortalgun::ignored>(DT_WeaponPortalgun::ignored*)
 T int ServerClassInit<DT_WeaponPromoAntennaBall::ignored>(DT_WeaponPromoAntennaBall::ignored*)
 T int ServerClassInit<DT_WeaponPromoAntennaEgg::ignored>(DT_WeaponPromoAntennaEgg::ignored*)
 T int ServerClassInit<DT_WeaponPromoHelmetBall::ignored>(DT_WeaponPromoHelmetBall::ignored*)
 T int ServerClassInit<DT_WeaponPromoHelmetEgg::ignored>(DT_WeaponPromoHelmetEgg::ignored*)
 T isbreakablewspace(wchar_t)
 T kill_helper(CCommand const&, bool, bool)
 T locksound_t::GetDataDescMap()
 T mstudioanimdesc_t::pAnim(int*) const
 T mstudioanimdesc_t::pAnim(int*, float&) const
 T mstudioanimdesc_t::pHierarchy(int) const
 T mstudioanimdesc_t::pIKRule(int) const
 T nexttoken(char*, unsigned long, char const*, char)
 T non-virtual thunk to CAI_BaseActor::UseSemaphore()
 T non-virtual thunk to CAI_BaseHumanoid::OnMoveBlocked(AIMoveResult_t*)
 T non-virtual thunk to CAI_BaseNPC::CalcYawSpeed()
 T non-virtual thunk to CAI_BaseNPC::OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T non-virtual thunk to CAI_BaseNPC::OnObstructionPreSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T non-virtual thunk to CAI_BasePhysicsFlyingBot::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_AimGun()
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_BestEnemy()
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_CanFlinch()
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_CanRunAScriptedNPCInteraction(bool)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_FValidateHintType(CAI_Hint*)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_GatherConditions()
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_GetDefaultNavGoalTolerance()
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_GetFlinchActivity(bool, bool)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_GetMaxTacticalLateralMovement()
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_GetReasonableFacingDist()
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_HandleAnimEvent(animevent_t*)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_IsCoverPosition(Vector const&, Vector const&)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_IsCrouchedActivity(Activity)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_IsCrouching()
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_IsCurTaskContinuousMove()
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_IsInterruptable()
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_IsNavigationUrgent()
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_IsValidCover(Vector const&, CAI_Hint const*)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_IsValidEnemy(CBaseEntity*)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_IsValidShootPosition(Vector const&, CAI_Node*, CAI_Hint const*)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_NPC_TranslateActivity(Activity)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_OnFriendDamaged(CBaseCombatCharacter*, CBaseEntity*)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_OnMovementComplete()
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_OnMovementFailed()
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_OnScheduleChange()
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_OnSeeEntity(CBaseEntity*)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_OnTakeDamage_Alive(CTakeDamageInfo const&)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_PrescheduleThink()
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_QueryHearSound(CSound*)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_SelectSchedule()
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_ShouldAlwaysThink()
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_ShouldIgnoreSound(CSound*)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_ShouldPlayerAvoid()
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_TranslateSchedule(int)
 T non-virtual thunk to CAI_BehaviorBase::BehaviorBridge_WeaponLOSCondition(Vector const&, Vector const&, bool)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_AimGun()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_BestEnemy()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_CanFlinch()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_CanRunAScriptedNPCInteraction(bool)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_FValidateHintType(CAI_Hint*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GatherConditions()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetDefaultNavGoalTolerance()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetFlinchActivity(bool, bool)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetJumpGravity() const
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetMaxTacticalLateralMovement()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_GetReasonableFacingDist()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_HandleAnimEvent(animevent_t*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsCoverPosition(Vector const&, Vector const&)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsCrouchedActivity(Activity)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsCrouching()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsCurTaskContinuousMove()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsInterruptable()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsJumpLegal(Vector const&, Vector const&, Vector const&, float, float, float) const
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsNavigationUrgent()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsValidCover(Vector const&, CAI_Hint const*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsValidEnemy(CBaseEntity*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_IsValidShootPosition(Vector const&, CAI_Node*, CAI_Hint const*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_ModifyOrAppendCriteria(ResponseRules::CriteriaSet&)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_MovementCost(int, Vector const&, Vector const&, float*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_NPC_TranslateActivity(Activity)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnFriendDamaged(CBaseCombatCharacter*, CBaseEntity*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnMovementComplete()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnMovementFailed()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnScheduleChange()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnSeeEntity(CBaseEntity*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_OnTakeDamage_Alive(CTakeDamageInfo const&)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_PrescheduleThink()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_QueryHearSound(CSound*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_SelectSchedule()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_ShouldAlwaysThink()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_ShouldIgnoreSound(CSound*)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_ShouldPlayerAvoid()
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_Teleport(Vector const*, QAngle const*, Vector const*, bool)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_TranslateSchedule(int)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::BehaviorBridge_WeaponLOSCondition(Vector const&, Vector const&, bool)
 T non-virtual thunk to CAI_BehaviorHost<CAI_BaseNPC>::OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T non-virtual thunk to CAI_GoalEntity::OnEntityCreated(CBaseEntity*)
 T non-virtual thunk to CAI_GoalEntity::OnEntityDeleted(CBaseEntity*)
 T non-virtual thunk to CAI_LeadGoal::GetConceptModifiers(char const*)
 T non-virtual thunk to CAI_LeadGoal::OnEvent(int)
 T non-virtual thunk to CAI_LeadGoal_Weapon::GetConceptModifiers(char const*)
 T non-virtual thunk to CAI_Navigator::CalcYawSpeed()
 T non-virtual thunk to CAI_Navigator::OnCalcBaseMove(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T non-virtual thunk to CAI_Navigator::OnFailedLocalNavigation(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T non-virtual thunk to CAI_Navigator::OnFailedSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T non-virtual thunk to CAI_Navigator::OnInsufficientStopDist(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T non-virtual thunk to CAI_Navigator::OnMoveBlocked(AIMoveResult_t*)
 T non-virtual thunk to CAI_Navigator::OnMoveExecuteFailed(AILocalMoveGoal_t const&, AIMoveTrace_t const&, AIMotorMoveResult_t, AIMoveResult_t*)
 T non-virtual thunk to CAI_Navigator::OnMoveStalled(AILocalMoveGoal_t const&)
 T non-virtual thunk to CAI_Navigator::OnObstructionPreSteer(AILocalMoveGoal_t*, float, AIMoveResult_t*)
 T non-virtual thunk to CAI_PlayerAlly::OnSpokeConcept(CAI_Concept, ResponseRules::CRR_Response*)
 T non-virtual thunk to CAI_PlayerAlly::OnStartSpeaking()
 T non-virtual thunk to CAI_Relationship::OnEntityDeleted(CBaseEntity*)
 T non-virtual thunk to CAI_Relationship::OnEntitySpawned(CBaseEntity*)
 T non-virtual thunk to CAI_ScriptConditions::OnEntitySpawned(CBaseEntity*)
 T non-virtual thunk to CAI_SpeechFilter::OnEntityCreated(CBaseEntity*)
 T non-virtual thunk to CAI_SpeechFilter::OnEntityDeleted(CBaseEntity*)
 T non-virtual thunk to CBasePropDoor::~CBasePropDoor()
 T non-virtual thunk to CBreakable::GetBasePropData()
 T non-virtual thunk to CBreakable::GetBreakableCount()
 T non-virtual thunk to CBreakable::GetBreakableModel()
 T non-virtual thunk to CBreakable::GetBreakableSkin()
 T non-virtual thunk to CBreakable::GetDmgModBullet()
 T non-virtual thunk to CBreakable::GetDmgModClub()
 T non-virtual thunk to CBreakable::GetDmgModExplosive()
 T non-virtual thunk to CBreakable::GetDmgModFire()
 T non-virtual thunk to CBreakable::GetExplosiveDamage()
 T non-virtual thunk to CBreakable::GetExplosiveRadius()
 T non-virtual thunk to CBreakable::GetMaxBreakableSize()
 T non-virtual thunk to CBreakable::GetMultiplayerBreakMode() const
 T non-virtual thunk to CBreakable::GetPhysicsDamageTable()
 T non-virtual thunk to CBreakable::GetPhysicsMode()
 T non-virtual thunk to CBreakable::HasInteraction(propdata_interactions_t)
 T non-virtual thunk to CBreakable::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CBreakable::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CBreakable::SetBasePropData(string_t)
 T non-virtual thunk to CBreakable::SetBreakableCount(int)
 T non-virtual thunk to CBreakable::SetBreakableModel(string_t)
 T non-virtual thunk to CBreakable::SetBreakableSkin(int)
 T non-virtual thunk to CBreakable::SetDmgModBullet(float)
 T non-virtual thunk to CBreakable::SetDmgModClub(float)
 T non-virtual thunk to CBreakable::SetDmgModExplosive(float)
 T non-virtual thunk to CBreakable::SetExplosiveDamage(float)
 T non-virtual thunk to CBreakable::SetExplosiveRadius(float)
 T non-virtual thunk to CBreakable::SetInteraction(propdata_interactions_t)
 T non-virtual thunk to CBreakable::SetMaxBreakableSize(int)
 T non-virtual thunk to CBreakable::SetMultiplayerBreakMode(mp_break_t)
 T non-virtual thunk to CBreakable::SetPhysicsDamageTable(string_t)
 T non-virtual thunk to CBreakable::SetPhysicsMode(int)
 T non-virtual thunk to CBreakable::SetPropDataBlocksLOS(bool)
 T non-virtual thunk to CBreakable::SetPropDataIsAIWalkable(bool)
 T non-virtual thunk to CBreakableProp::GetBasePropData()
 T non-virtual thunk to CBreakableProp::GetBreakableCount()
 T non-virtual thunk to CBreakableProp::GetBreakableModel()
 T non-virtual thunk to CBreakableProp::GetBreakableSkin()
 T non-virtual thunk to CBreakableProp::GetDmgModBullet()
 T non-virtual thunk to CBreakableProp::GetDmgModClub()
 T non-virtual thunk to CBreakableProp::GetDmgModExplosive()
 T non-virtual thunk to CBreakableProp::GetDmgModFire()
 T non-virtual thunk to CBreakableProp::GetExplosiveDamage()
 T non-virtual thunk to CBreakableProp::GetExplosiveRadius()
 T non-virtual thunk to CBreakableProp::GetMaxBreakableSize()
 T non-virtual thunk to CBreakableProp::GetMultiplayerBreakMode() const
 T non-virtual thunk to CBreakableProp::GetPhysicsDamageTable()
 T non-virtual thunk to CBreakableProp::GetPhysicsMode()
 T non-virtual thunk to CBreakableProp::HasInteraction(propdata_interactions_t)
 T non-virtual thunk to CBreakableProp::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T non-virtual thunk to CBreakableProp::OnAttemptPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CBreakableProp::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CBreakableProp::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CBreakableProp::PhysGunLaunchAngularImpulse()
 T non-virtual thunk to CBreakableProp::PreferredCarryAngles()
 T non-virtual thunk to CBreakableProp::SetBasePropData(string_t)
 T non-virtual thunk to CBreakableProp::SetBreakableCount(int)
 T non-virtual thunk to CBreakableProp::SetBreakableModel(string_t)
 T non-virtual thunk to CBreakableProp::SetBreakableSkin(int)
 T non-virtual thunk to CBreakableProp::SetDmgModBullet(float)
 T non-virtual thunk to CBreakableProp::SetDmgModClub(float)
 T non-virtual thunk to CBreakableProp::SetDmgModExplosive(float)
 T non-virtual thunk to CBreakableProp::SetExplosiveDamage(float)
 T non-virtual thunk to CBreakableProp::SetExplosiveRadius(float)
 T non-virtual thunk to CBreakableProp::SetInteraction(propdata_interactions_t)
 T non-virtual thunk to CBreakableProp::SetMaxBreakableSize(int)
 T non-virtual thunk to CBreakableProp::SetMultiplayerBreakMode(mp_break_t)
 T non-virtual thunk to CBreakableProp::SetPhysicsDamageTable(string_t)
 T non-virtual thunk to CBreakableProp::SetPhysicsMode(int)
 T non-virtual thunk to CBreakableProp::SetPropDataBlocksLOS(bool)
 T non-virtual thunk to CBreakableProp::SetPropDataIsAIWalkable(bool)
 T non-virtual thunk to CCollisionEvent::AdditionalCollisionChecksThisTick(int)
 T non-virtual thunk to CCollisionEvent::ObjectSleep(IPhysicsObject*)
 T non-virtual thunk to CCollisionEvent::ObjectWake(IPhysicsObject*)
 T non-virtual thunk to CCollisionEvent::ShouldCollide(IPhysicsObject*, IPhysicsObject*, void*, void*)
 T non-virtual thunk to CCollisionEvent::ShouldFreezeContacts(IPhysicsObject**, int)
 T non-virtual thunk to CCollisionEvent::ShouldFreezeObject(IPhysicsObject*)
 T non-virtual thunk to CCollisionEvent::ShouldSolvePenetration(IPhysicsObject*, IPhysicsObject*, void*, void*, float)
 T non-virtual thunk to CColorCorrectionSystem::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CColorCorrectionSystem::~CColorCorrectionSystem()
 T non-virtual thunk to CCubeRotationController::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T non-virtual thunk to CDecalEmitterSystem::Init()
 T non-virtual thunk to CDecalEmitterSystem::LevelInitPreEntity()
 T non-virtual thunk to CDecalEmitterSystem::Shutdown()
 T non-virtual thunk to CDecalEmitterSystem::~CDecalEmitterSystem()
 T non-virtual thunk to CDefaultResponseSystem::Init()
 T non-virtual thunk to CDefaultResponseSystem::LevelInitPostEntity()
 T non-virtual thunk to CDefaultResponseSystem::LevelInitPreEntity()
 T non-virtual thunk to CDefaultResponseSystem::Shutdown()
 T non-virtual thunk to CDefaultResponseSystem::~CDefaultResponseSystem()
 T non-virtual thunk to CDirtySpatialPartitionEntityList::OnPostQuery(int)
 T non-virtual thunk to CDirtySpatialPartitionEntityList::OnPreQuery(int)
 T non-virtual thunk to CDynamicProp::NotifyPositionChanged(CBaseEntity*)
 T non-virtual thunk to CDynamicProp::~CDynamicProp()
 T non-virtual thunk to CEconEntity::GetAttributeContainer()
 T non-virtual thunk to CEconEntity::GetAttributeList()
 T non-virtual thunk to CEconEntity::GetAttributeManager()
 T non-virtual thunk to CEconEntity::GetAttributeOwner()
 T non-virtual thunk to CEconEntity::ReapplyProvision()
 T non-virtual thunk to CEconItem::FindAttributeInternal(CEconItemAttributeDefinition const*, float*) const
 T non-virtual thunk to CEconItem::GetAccountID() const
 T non-virtual thunk to CEconItem::GetCustomDesc() const
 T non-virtual thunk to CEconItem::GetCustomName() const
 T non-virtual thunk to CEconItem::GetFlags() const
 T non-virtual thunk to CEconItem::GetInUse() const
 T non-virtual thunk to CEconItem::GetItemDefinition() const
 T non-virtual thunk to CEconItem::GetItemLevel() const
 T non-virtual thunk to CEconItem::GetOrigin() const
 T non-virtual thunk to CEconItem::GetQuality() const
 T non-virtual thunk to CEconItem::GetQuantity() const
 T non-virtual thunk to CEconItem::GetStyle() const
 T non-virtual thunk to CEconItem::IsTradable() const
 T non-virtual thunk to CEconItem::IsUsableInCrafting() const
 T non-virtual thunk to CEconItem::IterateAttributes(IEconItemAttributeIterator*) const
 T non-virtual thunk to CEconItem::~CEconItem()
 T non-virtual thunk to CEmptyConVar::GetName() const
 T non-virtual thunk to CEmptyConVar::IsFlagSet(int) const
 T non-virtual thunk to CEmptyConVar::SetValue(char const*)
 T non-virtual thunk to CEmptyConVar::SetValue(float)
 T non-virtual thunk to CEmptyConVar::SetValue(int)
 T non-virtual thunk to CEntFireAutoCompletionFunctor::CommandCompletionCallback(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T non-virtual thunk to CEventLog::Init()
 T non-virtual thunk to CEventLog::~CEventLog()
 T non-virtual thunk to CFishPool::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CFishPool::~CFishPool()
 T non-virtual thunk to CFogSystem::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CFogSystem::~CFogSystem()
 T non-virtual thunk to CFuncNavObstruction::CanObstructNavAreas() const
 T non-virtual thunk to CFuncNavObstruction::GetNavObstructionHeight() const
 T non-virtual thunk to CFuncNavObstruction::GetObstructingEntity()
 T non-virtual thunk to CFuncNavObstruction::IsPotentiallyAbleToObstructNavAreas() const
 T non-virtual thunk to CFuncNavObstruction::OnNavMeshLoaded()
 T non-virtual thunk to CFunctor1<void (*)(CBaseEntity*), CBaseEntity*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor1()
 T non-virtual thunk to CFunctor1<void (*)(bool), bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor1()
 T non-virtual thunk to CFunctor2<void (*)(CFunctor**, unsigned int), CFunctor**, int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor2()
 T non-virtual thunk to CFunctor2<void (*)(IPhysicsObject*, Vector const&), IPhysicsObject*, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor2()
 T non-virtual thunk to CFunctor3<void (*)(IPhysicsObject*, Vector const&, Vector const&), IPhysicsObject*, Vector, Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor3()
 T non-virtual thunk to CFunctor4<CBaseEntity* (*)(CBaseEntity*, CBaseEntity*, bool, float), CBaseEntity*, CBaseEntity*, bool, float, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor4()
 T non-virtual thunk to CFunctorJob::~CFunctorJob()
 T non-virtual thunk to CGib::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CGib::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CGrenadeFrag::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CHL2EventLog::Name()
 T non-virtual thunk to CHL2EventLog::~CHL2EventLog()
 T non-virtual thunk to CHLTVDirector::FrameUpdatePostEntityThink()
 T non-virtual thunk to CHLTVDirector::GetDelay()
 T non-virtual thunk to CHLTVDirector::GetDirectorTick()
 T non-virtual thunk to CHLTVDirector::GetHLTVServer()
 T non-virtual thunk to CHLTVDirector::GetModEvents()
 T non-virtual thunk to CHLTVDirector::GetPVSEntity()
 T non-virtual thunk to CHLTVDirector::GetPVSOrigin()
 T non-virtual thunk to CHLTVDirector::Init()
 T non-virtual thunk to CHLTVDirector::IsActive()
 T non-virtual thunk to CHLTVDirector::LevelInitPostEntity()
 T non-virtual thunk to CHLTVDirector::Name()
 T non-virtual thunk to CHLTVDirector::SetHLTVServer(IHLTVServer*)
 T non-virtual thunk to CHLTVDirector::Shutdown()
 T non-virtual thunk to CHLTVDirector::~CHLTVDirector()
 T non-virtual thunk to CHotPotato::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CHotPotato::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CInfo_Player_Ping_Detector::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CInfo_Player_Ping_Detector::~CInfo_Player_Ping_Detector()
 T non-virtual thunk to CInventoryManager::InitGC()
 T non-virtual thunk to CInventoryManager::PostInitGC()
 T non-virtual thunk to CInventoryManager::PreInitGC()
 T non-virtual thunk to CInventoryManager::ShutdownGC()
 T non-virtual thunk to CInventoryManager::Type()
 T non-virtual thunk to CItem::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CItem::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CJob::~CJob()
 T non-virtual thunk to CKeepUpright::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T non-virtual thunk to CLagCompensationManager::AddAdditionalEntity(CBaseEntity*)
 T non-virtual thunk to CLagCompensationManager::FinishLagCompensation(CBasePlayer*)
 T non-virtual thunk to CLagCompensationManager::RemoveAdditionalEntity(CBaseEntity*)
 T non-virtual thunk to CLagCompensationManager::StartLagCompensation(CBasePlayer*, LagCompensationType, Vector const&, QAngle const&, float)
 T non-virtual thunk to CLaserCatcher::OnPowered()
 T non-virtual thunk to CLaserCatcher::OnUnPowered()
 T non-virtual thunk to CLogicEventListener::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CLogicEventListener::~CLogicEventListener()
 T non-virtual thunk to CLogicNavigation::OnEntitySpawned(CBaseEntity*)
 T non-virtual thunk to CMemberFunctor0<CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>*, void (CParallelProcessor<CNavArea*, CFuncJobItemProcessor<CNavArea*>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T non-virtual thunk to CMemberFunctor0<CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>*, void (CParallelProcessor<QueryCacheUpdateRecord_t, CFuncJobItemProcessor<QueryCacheUpdateRecord_t>, 1>::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T non-virtual thunk to CMemberFunctor0<CPropCombineBall*, void (CPropCombineBall::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T non-virtual thunk to CMemberFunctor1<CAI_Navigator*, bool (CAI_Navigator::*)(Vector const&), Vector, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor1()
 T non-virtual thunk to CMemberFunctor1<CPortal_Base2D*, void (CPortal_Base2D::*)(CBaseEntity*), CBaseEntity*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor1()
 T non-virtual thunk to CMemberFunctor2<CAI_Navigator*, bool (CAI_Navigator::*)(AI_NavGoal_t const&, unsigned int), AI_NavGoal_t, unsigned int, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor2()
 T non-virtual thunk to CMemberFunctor3<CBreakableProp*, void (CBreakableProp::*)(Vector const&, Vector const&, QAngle const&), Vector, Vector, QAngle, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor3()
 T non-virtual thunk to CNPCBaseInteractive<CAI_BaseNPC>::AlyxFinishedInteraction()
 T non-virtual thunk to CNPCBaseInteractive<CAI_BaseNPC>::AlyxStartedInteraction()
 T non-virtual thunk to CNPCBaseInteractive<CAI_BaseNPC>::CanInteractWith(CAI_BaseNPC*)
 T non-virtual thunk to CNPCBaseInteractive<CAI_BaseNPC>::HasBeenInteractedWith()
 T non-virtual thunk to CNPCBaseInteractive<CAI_BaseNPC>::NotifyInteraction(CAI_BaseNPC*)
 T non-virtual thunk to CNPCBaseInteractive<CAI_BasePhysicsFlyingBot>::AlyxFinishedInteraction()
 T non-virtual thunk to CNPCBaseInteractive<CAI_BasePhysicsFlyingBot>::AlyxStartedInteraction()
 T non-virtual thunk to CNPCBaseInteractive<CAI_BasePhysicsFlyingBot>::CanInteractWith(CAI_BaseNPC*)
 T non-virtual thunk to CNPCBaseInteractive<CAI_BasePhysicsFlyingBot>::HasBeenInteractedWith()
 T non-virtual thunk to CNPCBaseInteractive<CAI_BasePhysicsFlyingBot>::NotifyInteraction(CAI_BaseNPC*)
 T non-virtual thunk to CNPC_FloorTurret::CanInteractWith(CAI_BaseNPC*)
 T non-virtual thunk to CNPC_FloorTurret::HasBeenInteractedWith()
 T non-virtual thunk to CNPC_FloorTurret::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T non-virtual thunk to CNPC_FloorTurret::NotifyInteraction(CAI_BaseNPC*)
 T non-virtual thunk to CNPC_FloorTurret::OnAttemptPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CNPC_FloorTurret::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CNPC_FloorTurret::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CNPC_FloorTurret::PreferredCarryAngles()
 T non-virtual thunk to CNPC_HoverTurret::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T non-virtual thunk to CNPC_HoverTurret::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CNPC_HoverTurret::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CNPC_HoverTurret::PreferredCarryAngles()
 T non-virtual thunk to CNPC_PersonalityCore::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T non-virtual thunk to CNPC_PersonalityCore::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CNPC_PersonalityCore::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CNPC_PersonalityCore::PreferredCarryAngles()
 T non-virtual thunk to CNPC_Portal_FloorTurret::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T non-virtual thunk to CNPC_Portal_FloorTurret::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CNPC_Portal_FloorTurret::Paint(PaintPowerType, Vector const&)
 T non-virtual thunk to CNPC_Portal_FloorTurret::PreferredCarryAngles()
 T non-virtual thunk to CNPC_Portal_FloorTurret::~CNPC_Portal_FloorTurret()
 T non-virtual thunk to CNPC_SecurityCamera::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CNPC_SecurityCamera::OnAttemptPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CNPC_SecurityCamera::~CNPC_SecurityCamera()
 T non-virtual thunk to CNotifyList::OnEntityCreated(CBaseEntity*)
 T non-virtual thunk to CNotifyList::OnEntityDeleted(CBaseEntity*)
 T non-virtual thunk to COrnamentProp::~COrnamentProp()
 T non-virtual thunk to CPS_AutoGameSys_EntityListener::OnEntityDeleted(CBaseEntity*)
 T non-virtual thunk to CPaintDatabase::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CPaintDatabase::~CPaintDatabase()
 T non-virtual thunk to CPaintStream::GetEntity()
 T non-virtual thunk to CPaintStream::~CPaintStream()
 T non-virtual thunk to CPaintableEntity<CBaseMultiplayerPlayer>::CleansePaint()
 T non-virtual thunk to CPaintableEntity<CBaseMultiplayerPlayer>::GetPaintPowerAtPoint(Vector const&) const
 T non-virtual thunk to CPaintableEntity<CBaseMultiplayerPlayer>::GetPaintedPower() const
 T non-virtual thunk to CPaintableEntity<CBaseMultiplayerPlayer>::Paint(PaintPowerType, Vector const&)
 T non-virtual thunk to CPaintableEntity<CBaseProjectedEntity>::CleansePaint()
 T non-virtual thunk to CPaintableEntity<CBaseProjectedEntity>::GetPaintPowerAtPoint(Vector const&) const
 T non-virtual thunk to CPaintableEntity<CBaseProjectedEntity>::GetPaintedPower() const
 T non-virtual thunk to CPaintableEntity<CBaseProjectedEntity>::Paint(PaintPowerType, Vector const&)
 T non-virtual thunk to CPaintableEntity<CBaseProjectedEntity>::~CPaintableEntity()
 T non-virtual thunk to CPaintableEntity<CNPC_FloorTurret>::CleansePaint()
 T non-virtual thunk to CPaintableEntity<CNPC_FloorTurret>::GetPaintPowerAtPoint(Vector const&) const
 T non-virtual thunk to CPaintableEntity<CNPC_FloorTurret>::GetPaintedPower() const
 T non-virtual thunk to CPaintableEntity<CNPC_FloorTurret>::Paint(PaintPowerType, Vector const&)
 T non-virtual thunk to CPaintableEntity<CPhysicsProp>::CleansePaint()
 T non-virtual thunk to CPaintableEntity<CPhysicsProp>::GetPaintPowerAtPoint(Vector const&) const
 T non-virtual thunk to CPaintableEntity<CPhysicsProp>::GetPaintedPower() const
 T non-virtual thunk to CPaintableEntity<CPhysicsProp>::Paint(PaintPowerType, Vector const&)
 T non-virtual thunk to CPhysBox::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T non-virtual thunk to CPhysBox::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CPhysBox::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CPhysBox::PreferredCarryAngles()
 T non-virtual thunk to CPhysBoxMultiplayer::GetMass()
 T non-virtual thunk to CPhysBoxMultiplayer::GetMultiplayerPhysicsMode()
 T non-virtual thunk to CPhysBoxMultiplayer::IsAsleep()
 T non-virtual thunk to CPhysHinge::NotifyVPhysicsStateChanged(IPhysicsObject*, CBaseEntity*, bool)
 T non-virtual thunk to CPhysHinge::~CPhysHinge()
 T non-virtual thunk to CPhysMagnet::ConstraintBroken(IPhysicsConstraint*)
 T non-virtual thunk to CPhysSaveRestoreBlockHandler::AssociateModel(IPhysicsObject*, CPhysCollide const*)
 T non-virtual thunk to CPhysSaveRestoreBlockHandler::AssociateModel(IPhysicsObject*, int)
 T non-virtual thunk to CPhysSaveRestoreBlockHandler::ForgetAllModels()
 T non-virtual thunk to CPhysSaveRestoreBlockHandler::ForgetModel(IPhysicsObject*)
 T non-virtual thunk to CPhysSaveRestoreBlockHandler::NoteBBox(Vector const&, Vector const&, CPhysCollide*)
 T non-virtual thunk to CPhysSaveRestoreBlockHandler::OnEntityCreated(CBaseEntity*)
 T non-virtual thunk to CPhysSaveRestoreBlockHandler::OnEntityDeleted(CBaseEntity*)
 T non-virtual thunk to CPhysSlideConstraint::NotifyVPhysicsStateChanged(IPhysicsObject*, CBaseEntity*, bool)
 T non-virtual thunk to CPhysSlideConstraint::~CPhysSlideConstraint()
 T non-virtual thunk to CPhysicsCannister::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T non-virtual thunk to CPhysicsCannister::OnAttemptPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CPhysicsCannister::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CPhysicsCannister::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CPhysicsCannister::PhysGunLaunchAngularImpulse()
 T non-virtual thunk to CPhysicsCannister::PhysGunLaunchVelocity(Vector const&, float)
 T non-virtual thunk to CPhysicsCannister::PreferredCarryAngles()
 T non-virtual thunk to CPhysicsCannister::ShouldPuntUseLaunchForces(PhysGunForce_t)
 T non-virtual thunk to CPhysicsNPCSolver::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T non-virtual thunk to CPhysicsProp::CanObstructNavAreas() const
 T non-virtual thunk to CPhysicsProp::GetNavObstructionHeight() const
 T non-virtual thunk to CPhysicsProp::GetObstructingEntity()
 T non-virtual thunk to CPhysicsProp::IsPotentiallyAbleToObstructNavAreas() const
 T non-virtual thunk to CPhysicsProp::OnNavMeshLoaded()
 T non-virtual thunk to CPhysicsProp::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CPhysicsProp::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CPhysicsPropMultiplayer::GetMass()
 T non-virtual thunk to CPhysicsPropMultiplayer::GetMultiplayerPhysicsMode()
 T non-virtual thunk to CPhysicsPropMultiplayer::GetPhysicsMode()
 T non-virtual thunk to CPhysicsPropMultiplayer::IsAsleep()
 T non-virtual thunk to CPhysicsPropMultiplayer::SetPhysicsMode(int)
 T non-virtual thunk to CPlayerInfo::ChangeTeam(int)
 T non-virtual thunk to CPlayerInfo::GetAbsAngles()
 T non-virtual thunk to CPlayerInfo::GetAbsOrigin()
 T non-virtual thunk to CPlayerInfo::GetArmorValue()
 T non-virtual thunk to CPlayerInfo::GetDeathCount()
 T non-virtual thunk to CPlayerInfo::GetFragCount()
 T non-virtual thunk to CPlayerInfo::GetHealth()
 T non-virtual thunk to CPlayerInfo::GetLastUserCommand()
 T non-virtual thunk to CPlayerInfo::GetMaxHealth()
 T non-virtual thunk to CPlayerInfo::GetModelName()
 T non-virtual thunk to CPlayerInfo::GetName()
 T non-virtual thunk to CPlayerInfo::GetNetworkIDString()
 T non-virtual thunk to CPlayerInfo::GetPlayerMaxs()
 T non-virtual thunk to CPlayerInfo::GetPlayerMins()
 T non-virtual thunk to CPlayerInfo::GetTeamIndex()
 T non-virtual thunk to CPlayerInfo::GetUserID()
 T non-virtual thunk to CPlayerInfo::GetWeaponName()
 T non-virtual thunk to CPlayerInfo::IsConnected()
 T non-virtual thunk to CPlayerInfo::IsDead()
 T non-virtual thunk to CPlayerInfo::IsFakeClient()
 T non-virtual thunk to CPlayerInfo::IsHLTV()
 T non-virtual thunk to CPlayerInfo::IsInAVehicle()
 T non-virtual thunk to CPlayerInfo::IsObserver()
 T non-virtual thunk to CPlayerInfo::IsPlayer()
 T non-virtual thunk to CPortal2ResearchDataTracker::OnEvent(KeyValues*)
 T non-virtual thunk to CPortalGameStats::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CPortalGameStats::GetStatContainerList()
 T non-virtual thunk to CPortalGameStats::Init()
 T non-virtual thunk to CPortalGameStats::OnEvent(KeyValues*)
 T non-virtual thunk to CPortalGameStats::Shutdown()
 T non-virtual thunk to CPortalGameStats::SubmitGameStats(KeyValues*)
 T non-virtual thunk to CPortalGameStats::~CPortalGameStats()
 T non-virtual thunk to CPortalLaser::GetEntity()
 T non-virtual thunk to CPortalLaser::~CPortalLaser()
 T non-virtual thunk to CPortalMPStats::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CPortalMPStats::GetStatContainerList()
 T non-virtual thunk to CPortalMPStats::OnEvent(KeyValues*)
 T non-virtual thunk to CPortalMPStats::SubmitGameStats(KeyValues*)
 T non-virtual thunk to CPortalMPStats::~CPortalMPStats()
 T non-virtual thunk to CPortal_Base2D::ComputeSubVisibility(CPVS_Extender**, int, unsigned char*, int, Vector const&, VPlane const*, int, CPVS_Extender::VisExtensionChain_t*, int*, int)
 T non-virtual thunk to CPortal_Base2D::GetExtenderEdict() const
 T non-virtual thunk to CPortal_Base2D::GetExtenderNetworkProp()
 T non-virtual thunk to CPortal_Base2D::GetExtensionPVSOrigin()
 T non-virtual thunk to CPortal_Base2D::IsExtenderValid()
 T non-virtual thunk to CPortal_Base2D::PortalSimulator_ReleasedOwnershipOfEntity(CBaseEntity*)
 T non-virtual thunk to CPortal_Base2D::PortalSimulator_TookOwnershipOfEntity(CBaseEntity*)
 T non-virtual thunk to CPortal_Base2D::~CPortal_Base2D()
 T non-virtual thunk to CPortal_CollisionEvent::ShouldCollide(IPhysicsObject*, IPhysicsObject*, void*, void*)
 T non-virtual thunk to CPortal_CollisionEvent::ShouldSolvePenetration(IPhysicsObject*, IPhysicsObject*, void*, void*, float)
 T non-virtual thunk to CPortal_Player::CleansePaint()
 T non-virtual thunk to CPortal_Player::GetPaintPowerAtPoint(Vector const&) const
 T non-virtual thunk to CPortal_Player::InventoryUpdated(CPlayerInventory*)
 T non-virtual thunk to CPortal_Player::Paint(PaintPowerType, Vector const&)
 T non-virtual thunk to CPortal_Player::SOCacheUnsubscribed(CSteamID const&)
 T non-virtual thunk to CPortal_Player::~CPortal_Player()
 T non-virtual thunk to CPostProcessSystem::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CPostProcessSystem::~CPostProcessSystem()
 T non-virtual thunk to CProjectedWallEntity::CleansePaint()
 T non-virtual thunk to CProjectedWallEntity::GetEntity()
 T non-virtual thunk to CProjectedWallEntity::GetPaintPowerAtPoint(Vector const&) const
 T non-virtual thunk to CProjectedWallEntity::Paint(PaintPowerType, Vector const&)
 T non-virtual thunk to CProjectedWallEntity::~CProjectedWallEntity()
 T non-virtual thunk to CPropCombineBall::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CPropCombineBall::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CPropCombineBall::ShouldPuntUseLaunchForces(PhysGunForce_t)
 T non-virtual thunk to CPropDoorRotating::~CPropDoorRotating()
 T non-virtual thunk to CPropExplodingFutbol::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CPropExplodingFutbol::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CPropFloorBallButton::~CPropFloorBallButton()
 T non-virtual thunk to CPropFloorButton::~CPropFloorButton()
 T non-virtual thunk to CPropFloorCubeButton::~CPropFloorCubeButton()
 T non-virtual thunk to CPropGladosCore::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T non-virtual thunk to CPropGladosCore::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CPropGladosCore::PreferredCarryAngles()
 T non-virtual thunk to CPropGlassFutbol::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T non-virtual thunk to CPropGlassFutbol::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CPropGlassFutbol::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CPropGlassFutbol::PreferredCarryAngles()
 T non-virtual thunk to CPropMonsterBox::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T non-virtual thunk to CPropMonsterBox::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CPropMonsterBox::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CPropMonsterBox::PreferredCarryAngles()
 T non-virtual thunk to CPropPersonalitySphere::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T non-virtual thunk to CPropPersonalitySphere::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CPropPersonalitySphere::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CPropPersonalitySphere::PreferredCarryAngles()
 T non-virtual thunk to CPropPhysicsPaintable::~CPropPhysicsPaintable()
 T non-virtual thunk to CPropTicTacToePanel::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CPropTicTacToePanel::~CPropTicTacToePanel()
 T non-virtual thunk to CPropUnderFloorButton::~CPropUnderFloorButton()
 T non-virtual thunk to CPropVehicle::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CPropVehicleChoreoGeneric::AllowBlockedExit(CBaseCombatCharacter*, int)
 T non-virtual thunk to CPropVehicleChoreoGeneric::AllowMidairExit(CBaseCombatCharacter*, int)
 T non-virtual thunk to CPropVehicleChoreoGeneric::CanEnterVehicle(CBaseEntity*)
 T non-virtual thunk to CPropVehicleChoreoGeneric::CanExitVehicle(CBaseEntity*)
 T non-virtual thunk to CPropVehicleChoreoGeneric::EnterVehicle(CBaseCombatCharacter*)
 T non-virtual thunk to CPropVehicleChoreoGeneric::ExitVehicle(int)
 T non-virtual thunk to CPropVehicleChoreoGeneric::FinishMove(CBasePlayer*, CUserCmd*, CMoveData*)
 T non-virtual thunk to CPropVehicleChoreoGeneric::GetDriver()
 T non-virtual thunk to CPropVehicleChoreoGeneric::GetVehicleScriptName()
 T non-virtual thunk to CPropVehicleChoreoGeneric::ItemPostFrame(CBasePlayer*)
 T non-virtual thunk to CPropVehicleChoreoGeneric::PassengerShouldReceiveDamage(CTakeDamageInfo&)
 T non-virtual thunk to CPropVehicleChoreoGeneric::PreExitVehicle(CBaseCombatCharacter*, int)
 T non-virtual thunk to CPropVehicleChoreoGeneric::ProcessMovement(CBasePlayer*, CMoveData*)
 T non-virtual thunk to CPropVehicleChoreoGeneric::SetVehicleEntryAnim(bool)
 T non-virtual thunk to CPropVehicleChoreoGeneric::SetVehicleExitAnim(bool, Vector)
 T non-virtual thunk to CPropVehicleChoreoGeneric::SetupMove(CBasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T non-virtual thunk to CPropVehicleChoreoGeneric::~CPropVehicleChoreoGeneric()
 T non-virtual thunk to CPropVehicleDriveable::AllowBlockedExit(CBaseCombatCharacter*, int)
 T non-virtual thunk to CPropVehicleDriveable::AllowMidairExit(CBaseCombatCharacter*, int)
 T non-virtual thunk to CPropVehicleDriveable::CanEnterVehicle(CBaseEntity*)
 T non-virtual thunk to CPropVehicleDriveable::CanExitVehicle(CBaseEntity*)
 T non-virtual thunk to CPropVehicleDriveable::EnterVehicle(CBaseCombatCharacter*)
 T non-virtual thunk to CPropVehicleDriveable::ExitVehicle(int)
 T non-virtual thunk to CPropVehicleDriveable::FinishMove(CBasePlayer*, CUserCmd*, CMoveData*)
 T non-virtual thunk to CPropVehicleDriveable::GetDriver()
 T non-virtual thunk to CPropVehicleDriveable::GetVehicleScriptName()
 T non-virtual thunk to CPropVehicleDriveable::ItemPostFrame(CBasePlayer*)
 T non-virtual thunk to CPropVehicleDriveable::NPC_AddPassenger(CAI_BaseNPC*, string_t, int)
 T non-virtual thunk to CPropVehicleDriveable::NPC_CanEnterVehicle(CAI_BaseNPC*, bool)
 T non-virtual thunk to CPropVehicleDriveable::NPC_CanExitVehicle(CAI_BaseNPC*, bool)
 T non-virtual thunk to CPropVehicleDriveable::NPC_FinishedEnterVehicle(CAI_BaseNPC*, bool)
 T non-virtual thunk to CPropVehicleDriveable::NPC_FinishedExitVehicle(CAI_BaseNPC*, bool)
 T non-virtual thunk to CPropVehicleDriveable::NPC_RemovePassenger(CAI_BaseNPC*)
 T non-virtual thunk to CPropVehicleDriveable::PassengerShouldReceiveDamage(CTakeDamageInfo&)
 T non-virtual thunk to CPropVehicleDriveable::PreExitVehicle(CBaseCombatCharacter*, int)
 T non-virtual thunk to CPropVehicleDriveable::ProcessMovement(CBasePlayer*, CMoveData*)
 T non-virtual thunk to CPropVehicleDriveable::SetVehicleEntryAnim(bool)
 T non-virtual thunk to CPropVehicleDriveable::SetVehicleExitAnim(bool, Vector)
 T non-virtual thunk to CPropVehicleDriveable::SetupMove(CBasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T non-virtual thunk to CPropVehicleViewController::ExitVehicle(int)
 T non-virtual thunk to CPropVehicleViewController::SetupMove(CBasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T non-virtual thunk to CPropWeightedCube::GetEntity()
 T non-virtual thunk to CPropWeightedCube::HasPreferredCarryAnglesForPlayer(CBasePlayer*)
 T non-virtual thunk to CPropWeightedCube::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CPropWeightedCube::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CPropWeightedCube::Paint(PaintPowerType, Vector const&)
 T non-virtual thunk to CPropWeightedCube::PreferredCarryAngles()
 T non-virtual thunk to CPropWeightedCube::~CPropWeightedCube()
 T non-virtual thunk to CProp_Mirror::ComputeSubVisibility(CPVS_Extender**, int, unsigned char*, int, Vector const&, VPlane const*, int, CPVS_Extender::VisExtensionChain_t*, int*, int)
 T non-virtual thunk to CProp_Mirror::GetExtenderEdict() const
 T non-virtual thunk to CProp_Mirror::GetExtenderNetworkProp()
 T non-virtual thunk to CProp_Mirror::GetExtensionPVSOrigin()
 T non-virtual thunk to CProp_Mirror::IsExtenderValid()
 T non-virtual thunk to CProp_Mirror::~CProp_Mirror()
 T non-virtual thunk to CProp_Portal::~CProp_Portal()
 T non-virtual thunk to CRagdollProp::OnPhysGunDrop(CBasePlayer*, PhysGunDrop_t)
 T non-virtual thunk to CRagdollProp::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to CRagdollProp::PhysGunLaunchAngularImpulse()
 T non-virtual thunk to CRopeKeyframe::NotifyPositionChanged(CBaseEntity*)
 T non-virtual thunk to CRopeKeyframe::~CRopeKeyframe()
 T non-virtual thunk to CRotorWashShooter::DoWashPush(float, Vector const&)
 T non-virtual thunk to CSceneEntity::CheckEvent(float, CChoreoScene*, CChoreoEvent*)
 T non-virtual thunk to CSceneEntity::EndEvent(float, CChoreoScene*, CChoreoEvent*)
 T non-virtual thunk to CSceneEntity::ProcessEvent(float, CChoreoScene*, CChoreoEvent*)
 T non-virtual thunk to CSceneEntity::StartEvent(float, CChoreoScene*, CChoreoEvent*)
 T non-virtual thunk to CServerNetworkProperty::FireEvent()
 T non-virtual thunk to CSoundControllerImp::LevelShutdownPreEntity()
 T non-virtual thunk to CSoundControllerImp::OnRestore()
 T non-virtual thunk to CSoundControllerImp::PreClientUpdate()
 T non-virtual thunk to CSoundControllerImp::~CSoundControllerImp()
 T non-virtual thunk to CSteamWorksGameStatsUploader::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CSteamWorksGameStatsUploader::~CSteamWorksGameStatsUploader()
 T non-virtual thunk to CToolFrameworkServer::PreSetupVisibility()
 T non-virtual thunk to CTriggerCatapult::GetEntity()
 T non-virtual thunk to CTriggerCatapult::~CTriggerCatapult()
 T non-virtual thunk to CTriggerPingDetector::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CTriggerPingDetector::~CTriggerPingDetector()
 T non-virtual thunk to CTriggerPortalCleanser::GetEntity()
 T non-virtual thunk to CTriggerPortalCleanser::~CTriggerPortalCleanser()
 T non-virtual thunk to CTriggerVPhysicsMotion::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T non-virtual thunk to CTrigger_TractorBeam::GetEntity()
 T non-virtual thunk to CTrigger_TractorBeam::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T non-virtual thunk to CTrigger_TractorBeam::~CTrigger_TractorBeam()
 T non-virtual thunk to CTurretTipController::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T non-virtual thunk to ConVar::GetBaseName() const
 T non-virtual thunk to ConVar::GetName() const
 T non-virtual thunk to ConVar::GetSplitScreenPlayerSlot() const
 T non-virtual thunk to ConVar::IsFlagSet(int) const
 T non-virtual thunk to ConVar::SetValue(Color)
 T non-virtual thunk to ConVar::SetValue(char const*)
 T non-virtual thunk to ConVar::SetValue(float)
 T non-virtual thunk to ConVar::SetValue(int)
 T non-virtual thunk to HitBoxDamagedEntity<PlayerPickupPaintPowerUser<CNPC_FloorTurret> >::~HitBoxDamagedEntity()
 T non-virtual thunk to PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::AddSurfacePaintPowerInfo(PaintPowerInfo_t const&, char const*)
 T non-virtual thunk to PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::FindHighestPriorityActivePaintPower() const
 T non-virtual thunk to PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::GetPaintPower(unsigned int) const
 T non-virtual thunk to PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::GetPaintPowers() const
 T non-virtual thunk to PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::UpdatePaintPowers()
 T non-virtual thunk to PaintPowerUser<CPaintableEntity<CBaseMultiplayerPlayer> >::~PaintPowerUser()
 T non-virtual thunk to PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::AddSurfacePaintPowerInfo(PaintPowerInfo_t const&, char const*)
 T non-virtual thunk to PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::FindHighestPriorityActivePaintPower() const
 T non-virtual thunk to PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::GetPaintPower(unsigned int) const
 T non-virtual thunk to PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::GetPaintPowers() const
 T non-virtual thunk to PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::UpdatePaintPowers()
 T non-virtual thunk to PaintPowerUser<CPaintableEntity<CNPC_FloorTurret> >::~PaintPowerUser()
 T non-virtual thunk to PaintPowerUser<CPaintableEntity<CPhysicsProp> >::AddSurfacePaintPowerInfo(PaintPowerInfo_t const&, char const*)
 T non-virtual thunk to PaintPowerUser<CPaintableEntity<CPhysicsProp> >::FindHighestPriorityActivePaintPower() const
 T non-virtual thunk to PaintPowerUser<CPaintableEntity<CPhysicsProp> >::GetPaintPower(unsigned int) const
 T non-virtual thunk to PaintPowerUser<CPaintableEntity<CPhysicsProp> >::GetPaintPowers() const
 T non-virtual thunk to PaintPowerUser<CPaintableEntity<CPhysicsProp> >::UpdatePaintPowers()
 T non-virtual thunk to PaintPowerUser<CPaintableEntity<CPhysicsProp> >::~PaintPowerUser()
 T non-virtual thunk to PlayerPickupPaintPowerUser<CNPC_FloorTurret>::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to PlayerPickupPaintPowerUser<CPhysicsProp>::OnPhysGunPickup(CBasePlayer*, PhysGunPickup_t)
 T non-virtual thunk to PlayerPickupPaintPowerUser<CPhysicsProp>::~PlayerPickupPaintPowerUser()
 T non-virtual thunk to PropPaintPowerUser<CNPC_FloorTurret>::Paint(PaintPowerType, Vector const&)
 T non-virtual thunk to PropPaintPowerUser<CPhysicsProp>::Paint(PaintPowerType, Vector const&)
 T operator delete(void*)
 T operator delete[](void*)
 T operator new(unsigned long)
 T operator new[](unsigned long)
 T physicssound::AddBreakSound(CUtlVector<physicssound::breaksound_t, CUtlMemory<physicssound::breaksound_t, int> >&, Vector const&, unsigned short)
 T physicssound::AddImpactSound(physicssound::soundlist_t&, void*, int, int, IPhysicsObject*, int, int, float, float)
 T physicssound::PlayBreakSounds(CUtlVector<physicssound::breaksound_t, CUtlMemory<physicssound::breaksound_t, int> >&)
 T physicssound::PlayImpactSounds(physicssound::soundlist_t&)
 T protobuf_AddDesc_base_5fgcmessages_2eproto()
 T protobuf_AddDesc_gcsdk_5fgcmessages_2eproto()
 T protobuf_AddDesc_steammessages_2eproto()
 T protobuf_AssignDesc_base_5fgcmessages_2eproto()
 T protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()
 T protobuf_AssignDesc_steammessages_2eproto()
 T protobuf_ShutdownFile_base_5fgcmessages_2eproto()
 T protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto()
 T protobuf_ShutdownFile_steammessages_2eproto()
 T rand
 T respawn(CBaseEntity*, bool)
 T sky3dparams_t::NetworkStateChanged()
 T sky3dparams_t::NetworkStateChanged(void*)
 T sky3dparams_t::NetworkVar_fog::NetworkStateChanged()
 T sky3dparams_t::NetworkVar_fog::NetworkStateChanged(void*)
 T spraycanPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T static_attrib_t::BInitFromKV(char const*, KeyValues*, CEconItemSchema&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*)
 T std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, int const&)
 T std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::insert_unique(int const&)
 T std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::insert_unique(std::_Rb_tree_iterator<int>, int const&)
 T std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >*)
 T std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > const&)
 T std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::find(std::pair<std::string, int> const&) const
 T std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::insert_unique(std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > const&)
 T std::_Rb_tree<std::pair<std::string, int>, std::pair<std::pair<std::string, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::string, int> >, std::allocator<std::pair<std::pair<std::string, int> const, std::pair<void const*, int> > > >::lower_bound(std::pair<std::string, int> const&)
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_erase(std::_Rb_tree_node<std::pair<std::string const, std::pair<void const*, int> > >*)
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::string const, std::pair<void const*, int> > const&)
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::find(std::string const&) const
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::insert_unique(std::_Rb_tree_iterator<std::pair<std::string const, std::pair<void const*, int> > >, std::pair<std::string const, std::pair<void const*, int> > const&)
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::insert_unique(std::pair<std::string const, std::pair<void const*, int> > const&)
 T std::_Rb_tree<std::string, std::pair<std::string const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::string const, std::pair<void const*, int> > >, std::less<std::string>, std::allocator<std::pair<std::string const, std::pair<void const*, int> > > >::upper_bound(std::string const&)
 T std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*)
 T std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::string const&)
 T std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::insert_unique(std::string const&)
 T std::_Vector_base<__gnu_cxx::_Hashtable_node<std::string>*, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*> >::get_allocator() const
 T std::_Vector_base<__gnu_cxx::_Hashtable_node<std::string>*, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*> >::~_Vector_base()
 T std::_Vector_base<char const*, std::allocator<char const*> >::get_allocator() const
 T std::_Vector_base<char const*, std::allocator<char const*> >::~_Vector_base()
 T std::_Vector_base<std::string*, std::allocator<std::string*> >::get_allocator() const
 T std::_Vector_base<std::string*, std::allocator<std::string*> >::~_Vector_base()
 T std::_Vector_base<std::string, std::allocator<std::string> >::get_allocator() const
 T std::_Vector_base<std::string, std::allocator<std::string> >::~_Vector_base()
 T std::_Vector_base<void*, std::allocator<void*> >::get_allocator() const
 T std::_Vector_base<void*, std::allocator<void*> >::~_Vector_base()
 T std::allocator<__gnu_cxx::_Hashtable_node<std::string>*>::~allocator()
 T std::allocator<char const*>::allocator(std::allocator<char const*> const&)
 T std::allocator<char const*>::~allocator()
 T std::allocator<std::string*>::allocator(std::allocator<std::string*> const&)
 T std::allocator<std::string*>::~allocator()
 T std::allocator<std::string>::allocator(std::allocator<std::string> const&)
 T std::allocator<std::string>::~allocator()
 T std::allocator<void*>::allocator(std::allocator<void*> const&)
 T std::allocator<void*>::~allocator()
 T std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 T std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&)
 T std::string** std::fill_n<std::string**, unsigned long, std::string*>(std::string**, unsigned long, std::string* const&)
 T std::vector<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >**, std::vector<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*> > >, unsigned long, __gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >* const&)
 T std::vector<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*> >::reserve(unsigned long)
 T std::vector<__gnu_cxx::_Hashtable_node<std::string>*, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::string>**, std::vector<__gnu_cxx::_Hashtable_node<std::string>*, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*> > >, unsigned long, __gnu_cxx::_Hashtable_node<std::string>* const&)
 T std::vector<__gnu_cxx::_Hashtable_node<std::string>*, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*> >::reserve(unsigned long)
 T std::vector<char const*, std::allocator<char const*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, char const* const&)
 T std::vector<char const*, std::allocator<char const*> >::erase(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >)
 T std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
 T std::vector<int, std::allocator<int> >::erase(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 T std::vector<int, std::allocator<int> >::insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
 T std::vector<std::string*, std::allocator<std::string*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, unsigned long, std::string* const&)
 T std::vector<std::string*, std::allocator<std::string*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, std::string* const&)
 T std::vector<std::string*, std::allocator<std::string*> >::erase(__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, __gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >)
 T std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&)
 T std::vector<std::string, std::allocator<std::string> >::erase(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >)
 T std::vector<void (*)(), std::allocator<void (*)()> >::_M_insert_aux(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
 T std::vector<void*, std::allocator<void*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, unsigned long, void* const&)
 T std::vector<void*, std::allocator<void*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, void* const&)
 T std::vector<void*, std::allocator<void*> >::erase(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, __gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >)
 T studiohdr_t::GetAnimBlock(int, bool) const
 T studiohdr_t::GetAutoplayList(unsigned short**) const
 T studiohdr_t::GetVirtualModel() const
 T studiohdr_t::SetActivityListVersion(int) const
 T studiohdr_t::hasAnimBlockBeenPreloaded(int) const
 T sv_portal_staticcollisioncache_cache_ChangeFN(IConVar*, char const*, float)
 T testJumpDown(Vector const*, Vector const*)
 T unsigned long const* std::lower_bound<unsigned long const*, unsigned long>(unsigned long const*, unsigned long const*, unsigned long const&)
 T variant_t::Convert(_fieldtypes)
 T variant_t::Set(_fieldtypes, void*)
 T variant_t::SetEntity(CBaseEntity*)
 T variant_t::SetOther(void*)
 T variant_t::ToString() const
 T vehicle_crashsound_t::GetDataDescMap()
 T vehicle_gear_t::GetDataDescMap()
 T vehiclesounds_t::GetDataDescMap()
 T vehicleview_t::GetDataDescMap()
 T vehicleview_t::NetworkStateChanged()
 T vehicleview_t::NetworkStateChanged(void*)
 T vgui::AnimatingImagePanel::AddImage(vgui::IImage*)
 T vgui::AnimatingImagePanel::AnimatingImagePanel(vgui::Panel*, char const*)
 T vgui::AnimatingImagePanel::ApplySettings(KeyValues*)
 T vgui::AnimatingImagePanel::GetAnimMap()
 T vgui::AnimatingImagePanel::GetDescription()
 T vgui::AnimatingImagePanel::GetKBMap()
 T vgui::AnimatingImagePanel::GetMessageMap()
 T vgui::AnimatingImagePanel::GetPanelClassName()
 T vgui::AnimatingImagePanel::GetSettings(KeyValues*)
 T vgui::AnimatingImagePanel::LoadAnimation(char const*, int)
 T vgui::AnimatingImagePanel::OnTick()
 T vgui::AnimatingImagePanel::PaintBackground()
 T vgui::AnimatingImagePanel::PerformLayout()
 T vgui::AnimatingImagePanel::ResetAnimation(int)
 T vgui::AnimatingImagePanel::StartAnimation()
 T vgui::AnimatingImagePanel::StopAnimation()
 T vgui::AnimatingImagePanel::~AnimatingImagePanel()
 T vgui::AnimationController::AnimationController(vgui::Panel*)
 T vgui::AnimationController::GetAnimMap()
 T vgui::AnimationController::GetKBMap()
 T vgui::AnimationController::GetMessageMap()
 T vgui::AnimationController::GetPanelClassName()
 T vgui::AnimationController::RunAnimationCommand(vgui::Panel*, char const*, Color, float, float, vgui::AnimationController::Interpolators_e, float)
 T vgui::AnimationController::RunAnimationCommand(vgui::Panel*, char const*, float, float, float, vgui::AnimationController::Interpolators_e, float)
 T vgui::AnimationController::StartCmd_Animate(vgui::Panel*, unsigned short, vgui::AnimationController::AnimCmdAnimate_t&)
 T vgui::AnimationController::~AnimationController()
 T vgui::BaseTooltip::GetText()
 T vgui::BaseTooltip::HideTooltip()
 T vgui::BaseTooltip::PerformLayout()
 T vgui::BaseTooltip::PositionWindow(vgui::Panel*)
 T vgui::BaseTooltip::ResetDelay()
 T vgui::BaseTooltip::SetEnabled(bool)
 T vgui::BaseTooltip::SetText(char const*)
 T vgui::BaseTooltip::SetTooltipDelay(int)
 T vgui::BaseTooltip::SetTooltipFormatToSingleLine()
 T vgui::BaseTooltip::ShowTooltip(vgui::Panel*)
 T vgui::BuildGroup::ActivateBuildDialog()
 T vgui::BuildGroup::ApplySchemeSettings(vgui::IScheme*)
 T vgui::BuildGroup::ApplySettings(KeyValues*)
 T vgui::BuildGroup::BuildGroup(vgui::Panel*, vgui::Panel*)
 T vgui::BuildGroup::ChangeControlSettingsFile(char const*)
 T vgui::BuildGroup::CreateBuildDialog()
 T vgui::BuildGroup::CursorMoved(int, int, vgui::Panel*)
 T vgui::BuildGroup::DeleteAllControlsCreatedByControlSettingsFile()
 T vgui::BuildGroup::DrawRulers()
 T vgui::BuildGroup::FieldNameTaken(char const*)
 T vgui::BuildGroup::GetContextPanel()
 T vgui::BuildGroup::GetControlGroup()
 T vgui::BuildGroup::GetCurrentPanel()
 T vgui::BuildGroup::GetCursor(vgui::Panel*)
 T vgui::BuildGroup::GetDialogVariables()
 T vgui::BuildGroup::GetNewFieldName(char*, int, vgui::Panel*)
 T vgui::BuildGroup::GetRegisteredControlSettingsFileByIndex(int)
 T vgui::BuildGroup::GetRegisteredControlSettingsFileCount()
 T vgui::BuildGroup::GetResourceName()
 T vgui::BuildGroup::GetSettings(KeyValues*)
 T vgui::BuildGroup::HasRulersOn()
 T vgui::BuildGroup::IsEnabled()
 T vgui::BuildGroup::KeyCodeReleased(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::KeyCodeTyped(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::KeyTyped(wchar_t, vgui::Panel*)
 T vgui::BuildGroup::LoadControlSettings(char const*, char const*, KeyValues*, KeyValues*)
 T vgui::BuildGroup::MouseDoublePressed(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::MousePressed(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::MouseReleased(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::NewControl(KeyValues*, int, int)
 T vgui::BuildGroup::NewControl(char const*, int, int)
 T vgui::BuildGroup::PanelAdded(vgui::Panel*)
 T vgui::BuildGroup::PanelRemoved(vgui::Panel*)
 T vgui::BuildGroup::ProcessConditionalKeys(KeyValues*, KeyValues*)
 T vgui::BuildGroup::RegisterControlSettingsFile(char const*, char const*)
 T vgui::BuildGroup::ReloadControlSettings()
 T vgui::BuildGroup::RemoveSettings()
 T vgui::BuildGroup::SaveControlSettings()
 T vgui::BuildGroup::SetContextPanel(vgui::Panel*)
 T vgui::BuildGroup::SetEnabled(bool)
 T vgui::BuildGroup::SetRulerLabelsVisible(bool)
 T vgui::BuildGroup::ToggleRulerDisplay()
 T vgui::BuildGroup::~BuildGroup()
 T vgui::BuildModeDialog::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::BuildModeDialog::ApplyDataToControls()
 T vgui::BuildModeDialog::ApplySchemeSettings(vgui::IScheme*)
 T vgui::BuildModeDialog::BuildModeDialog(vgui::BuildGroup*)
 T vgui::BuildModeDialog::CreateControls()
 T vgui::BuildModeDialog::DoCopy()
 T vgui::BuildModeDialog::DoPaste()
 T vgui::BuildModeDialog::DoUndo()
 T vgui::BuildModeDialog::EnableSaveButton()
 T vgui::BuildModeDialog::GetAnimMap()
 T vgui::BuildModeDialog::GetKBMap()
 T vgui::BuildModeDialog::GetMessageMap()
 T vgui::BuildModeDialog::GetPanelClassName()
 T vgui::BuildModeDialog::IsBuildGroupEnabled()
 T vgui::BuildModeDialog::OnChangeChild(int)
 T vgui::BuildModeDialog::OnClose()
 T vgui::BuildModeDialog::OnCommand(char const*)
 T vgui::BuildModeDialog::OnCreateNewControl(char const*)
 T vgui::BuildModeDialog::OnDeletePanel()
 T vgui::BuildModeDialog::OnKeyCodeTyped(ButtonCode_t)
 T vgui::BuildModeDialog::OnPanelMoved()
 T vgui::BuildModeDialog::OnReloadLocalization()
 T vgui::BuildModeDialog::OnSetClipboardText(char const*)
 T vgui::BuildModeDialog::OnShowNewControlMenu()
 T vgui::BuildModeDialog::OnTextChanged(vgui::Panel*)
 T vgui::BuildModeDialog::OnTextKillFocus()
 T vgui::BuildModeDialog::PanelList::AddItem(vgui::Panel*, vgui::TextEntry*, vgui::ComboBox*, vgui::Button*, char const*, int)
 T vgui::BuildModeDialog::PerformLayout()
 T vgui::BuildModeDialog::SetActiveControl(vgui::Panel*)
 T vgui::BuildModeDialog::ShutdownBuildMode()
 T vgui::BuildModeDialog::StoreSettings()
 T vgui::BuildModeDialog::StoreUndoSettings()
 T vgui::BuildModeDialog::UpdateControlData(vgui::Panel*)
 T vgui::BuildModeDialog::~BuildModeDialog()
 T vgui::Button::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Button::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Button::ApplySettings(KeyValues*)
 T vgui::Button::Button(vgui::Panel*, char const*, char const*, vgui::Panel*, char const*)
 T vgui::Button::Button(vgui::Panel*, char const*, wchar_t const*, vgui::Panel*, char const*)
 T vgui::Button::CanBeDefaultButton()
 T vgui::Button::DoClick()
 T vgui::Button::DrawFocusBorder(int, int, int, int)
 T vgui::Button::FireActionSignal()
 T vgui::Button::ForceDepressed(bool)
 T vgui::Button::GetAnimMap()
 T vgui::Button::GetBorder(bool, bool, bool, bool)
 T vgui::Button::GetButtonBgColor()
 T vgui::Button::GetButtonFgColor()
 T vgui::Button::GetCommand()
 T vgui::Button::GetDescription()
 T vgui::Button::GetKBMap()
 T vgui::Button::GetMessageMap()
 T vgui::Button::GetPanelClassName()
 T vgui::Button::GetSettings(KeyValues*)
 T vgui::Button::GetSizerMinimumSize(int&, int&)
 T vgui::Button::GetUnpackStructure() const
 T vgui::Button::Init()
 T vgui::Button::IsArmed()
 T vgui::Button::IsBlinking()
 T vgui::Button::IsDepressed()
 T vgui::Button::IsMouseClickEnabled(ButtonCode_t)
 T vgui::Button::IsSelected()
 T vgui::Button::IsUseCaptureMouseEnabled()
 T vgui::Button::NavigateFrom()
 T vgui::Button::NavigateTo()
 T vgui::Button::OnCursorEntered()
 T vgui::Button::OnCursorExited()
 T vgui::Button::OnHotkey()
 T vgui::Button::OnKeyCodePressed(ButtonCode_t)
 T vgui::Button::OnKeyCodeReleased(ButtonCode_t)
 T vgui::Button::OnKillFocus()
 T vgui::Button::OnMouseDoublePressed(ButtonCode_t)
 T vgui::Button::OnMousePressed(ButtonCode_t)
 T vgui::Button::OnMouseReleased(ButtonCode_t)
 T vgui::Button::OnSetFocus()
 T vgui::Button::OnSetState(int)
 T vgui::Button::Paint()
 T vgui::Button::PerformLayout()
 T vgui::Button::RecalculateDepressedState()
 T vgui::Button::RequestInfo(KeyValues*)
 T vgui::Button::SetArmed(bool)
 T vgui::Button::SetArmedColor(Color, Color)
 T vgui::Button::SetAsCurrentDefaultButton(int)
 T vgui::Button::SetAsDefaultButton(int)
 T vgui::Button::SetBlink(bool)
 T vgui::Button::SetBlinkColor(Color)
 T vgui::Button::SetButtonActivationType(vgui::Button::ActivationType_t)
 T vgui::Button::SetButtonBorderEnabled(bool)
 T vgui::Button::SetCommand(KeyValues*)
 T vgui::Button::SetCommand(char const*)
 T vgui::Button::SetDefaultBorder(vgui::IBorder*)
 T vgui::Button::SetDefaultColor(Color, Color)
 T vgui::Button::SetDepressedBorder(vgui::IBorder*)
 T vgui::Button::SetDepressedColor(Color, Color)
 T vgui::Button::SetKeyFocusBorder(vgui::IBorder*)
 T vgui::Button::SetMouseClickEnabled(ButtonCode_t, bool)
 T vgui::Button::SetSelected(bool)
 T vgui::Button::SetUseCaptureMouse(bool)
 T vgui::Button::SizeToContents()
 T vgui::Button::~Button()
 T vgui::CBitmapImagePanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::CBitmapImagePanel::ApplySettings(KeyValues*)
 T vgui::CBitmapImagePanel::CBitmapImagePanel(vgui::Panel*, char const*, char const*)
 T vgui::CBitmapImagePanel::ComputeImagePosition(int&, int&, int&, int&)
 T vgui::CBitmapImagePanel::GetDescription()
 T vgui::CBitmapImagePanel::GetSettings(KeyValues*)
 T vgui::CBitmapImagePanel::PaintBackground()
 T vgui::CBitmapImagePanel::PaintBorder()
 T vgui::CBitmapImagePanel::SetContentAlignment(vgui::Label::Alignment)
 T vgui::CBitmapImagePanel::setTexture(char const*, bool)
 T vgui::CBitmapImagePanel::~CBitmapImagePanel()
 T vgui::CBuildFactoryHelper::CBuildFactoryHelper(char const*, vgui::Panel* (*)())
 T vgui::CBuildFactoryHelper::GetFactoryNames(CUtlVector<char const*, CUtlMemory<char const*, int> >&)
 T vgui::CBuildFactoryHelper::InstancePanel(char const*)
 T vgui::CMenuManager::AddMenu(vgui::Menu*)
 T vgui::CMenuManager::IsWithinMenuOrRelative(vgui::Panel*, int, int)
 T vgui::CMenuManager::OnInternalMousePressed(vgui::Panel*, ButtonCode_t)
 T vgui::CMenuManager::~CMenuManager()
 T vgui::CSizerBase::CSizerMember::RecursiveInvalidateCachedSize()
 T vgui::CTreeViewListControl::CTreeViewListControl(vgui::Panel*, char const*)
 T vgui::CTreeViewListControl::DrawTitleBars()
 T vgui::CTreeViewListControl::GetAnimMap()
 T vgui::CTreeViewListControl::GetGridElementBounds(int, int, int&, int&, int&, int&)
 T vgui::CTreeViewListControl::GetKBMap()
 T vgui::CTreeViewListControl::GetMessageMap()
 T vgui::CTreeViewListControl::GetNumColumns() const
 T vgui::CTreeViewListControl::GetNumRows()
 T vgui::CTreeViewListControl::GetPanelClassName()
 T vgui::CTreeViewListControl::GetScrollBarSize()
 T vgui::CTreeViewListControl::GetTitleBarHeight()
 T vgui::CTreeViewListControl::GetTree()
 T vgui::CTreeViewListControl::GetTreeItemAtRow(int)
 T vgui::CTreeViewListControl::Paint()
 T vgui::CTreeViewListControl::PerformLayout()
 T vgui::CTreeViewListControl::PostChildPaint()
 T vgui::CTreeViewListControl::RecalculateRows_R(int)
 T vgui::CTreeViewListControl::SetBorderColor(Color)
 T vgui::CTreeViewListControl::SetColumnInfo(int, char const*, int, int)
 T vgui::CTreeViewListControl::SetNumColumns(int)
 T vgui::CTreeViewListControl::SetTitleBarInfo(unsigned long, int)
 T vgui::CTreeViewListControl::SetTreeView(vgui::TreeView*)
 T vgui::CTreeViewListControl::~CTreeViewListControl()
 T vgui::CheckButton::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::CheckButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::CheckButton::CheckButton(vgui::Panel*, char const*, char const*)
 T vgui::CheckButton::GetAnimMap()
 T vgui::CheckButton::GetBorder(bool, bool, bool, bool)
 T vgui::CheckButton::GetButtonFgColor()
 T vgui::CheckButton::GetKBMap()
 T vgui::CheckButton::GetMessageMap()
 T vgui::CheckButton::GetPanelClassName()
 T vgui::CheckButton::IsCheckButtonCheckable() const
 T vgui::CheckButton::OnCheckButtonChecked(vgui::Panel*)
 T vgui::CheckButton::SetCheckButtonCheckable(bool)
 T vgui::CheckButton::SetSelected(bool)
 T vgui::CheckButton::~CheckButton()
 T vgui::CircularProgressBar::ApplySchemeSettings(vgui::IScheme*)
 T vgui::CircularProgressBar::ApplySettings(KeyValues*)
 T vgui::CircularProgressBar::CircularProgressBar(vgui::Panel*, char const*)
 T vgui::CircularProgressBar::DrawCircleSegment(Color, float, bool)
 T vgui::CircularProgressBar::GetAnimMap()
 T vgui::CircularProgressBar::GetKBMap()
 T vgui::CircularProgressBar::GetMessageMap()
 T vgui::CircularProgressBar::GetPanelClassName()
 T vgui::CircularProgressBar::Paint()
 T vgui::CircularProgressBar::PaintBackground()
 T vgui::CircularProgressBar::SetImage(char const*, progress_textures_t)
 T vgui::CircularProgressBar::~CircularProgressBar()
 T vgui::ClickPanel::ClickPanel(vgui::Panel*)
 T vgui::ClickPanel::GetAnimMap()
 T vgui::ClickPanel::GetKBMap()
 T vgui::ClickPanel::GetMessageMap()
 T vgui::ClickPanel::GetPanelClassName()
 T vgui::ClickPanel::OnMousePressed(ButtonCode_t)
 T vgui::ClickPanel::~ClickPanel()
 T vgui::ComboBox::ActivateItem(int)
 T vgui::ComboBox::ActivateItemByRow(int)
 T vgui::ComboBox::AddItem(char const*, KeyValues const*)
 T vgui::ComboBox::AddItem(wchar_t const*, KeyValues const*)
 T vgui::ComboBox::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ComboBox::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ComboBox::ApplySettings(KeyValues*)
 T vgui::ComboBox::ComboBox(vgui::Panel*, char const*, int, bool)
 T vgui::ComboBox::DoClick()
 T vgui::ComboBox::GetActiveItemUserData()
 T vgui::ComboBox::GetAnimMap()
 T vgui::ComboBox::GetItemCount()
 T vgui::ComboBox::GetKBMap()
 T vgui::ComboBox::GetMenu()
 T vgui::ComboBox::GetMessageMap()
 T vgui::ComboBox::GetPanelClassName()
 T vgui::ComboBox::HideMenu()
 T vgui::ComboBox::IsDropdownVisible()
 T vgui::ComboBox::IsItemIDValid(int)
 T vgui::ComboBox::OnCommand(char const*)
 T vgui::ComboBox::OnCursorEntered()
 T vgui::ComboBox::OnCursorExited()
 T vgui::ComboBox::OnHideMenu(vgui::Menu*)
 T vgui::ComboBox::OnKeyCodeTyped(ButtonCode_t)
 T vgui::ComboBox::OnKeyTyped(wchar_t)
 T vgui::ComboBox::OnKillFocus()
 T vgui::ComboBox::OnMenuClose()
 T vgui::ComboBox::OnMenuItemSelected()
 T vgui::ComboBox::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ComboBox::OnMousePressed(ButtonCode_t)
 T vgui::ComboBox::OnSetFocus()
 T vgui::ComboBox::OnSetText(wchar_t const*)
 T vgui::ComboBox::OnShowMenu(vgui::Menu*)
 T vgui::ComboBox::OnSizeChanged(int, int)
 T vgui::ComboBox::PerformLayout()
 T vgui::ComboBox::SetDropdownButtonVisible(bool)
 T vgui::ComboBox::SetFont(unsigned long)
 T vgui::ComboBox::SetItemEnabled(char const*, bool)
 T vgui::ComboBox::SetItemEnabled(int, bool)
 T vgui::ComboBox::SetMenu(vgui::Menu*)
 T vgui::ComboBox::SetNumberOfEditLines(int)
 T vgui::ComboBox::SetOpenDirection(vgui::Menu::MenuDirection_e)
 T vgui::ComboBox::SetUseFallbackFont(bool, unsigned long)
 T vgui::ComboBox::ShowMenu()
 T vgui::ComboBox::SortItems()
 T vgui::ComboBox::UpdateItem(int, char const*, KeyValues const*)
 T vgui::ComboBox::UpdateItem(int, wchar_t const*, KeyValues const*)
 T vgui::ComboBox::~ComboBox()
 T vgui::ComboBoxButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ComboBoxButton::GetBorder(bool, bool, bool, bool)
 T vgui::ComboBoxButton::GetButtonBgColor()
 T vgui::ComboBoxButton::OnCursorExited()
 T vgui::ComboBoxButton::~ComboBoxButton()
 T vgui::ContinuousProgressBar::ContinuousProgressBar(vgui::Panel*, char const*)
 T vgui::ContinuousProgressBar::GetAnimMap()
 T vgui::ContinuousProgressBar::GetKBMap()
 T vgui::ContinuousProgressBar::GetMessageMap()
 T vgui::ContinuousProgressBar::GetPanelClassName()
 T vgui::ContinuousProgressBar::Paint()
 T vgui::ContinuousProgressBar::~ContinuousProgressBar()
 T vgui::CvarToggleCheckButton<ConVarRef>::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::CvarToggleCheckButton<ConVarRef>::ApplySettings(KeyValues*)
 T vgui::CvarToggleCheckButton<ConVarRef>::CvarToggleCheckButton(vgui::Panel*, char const*, char const*, char const*, bool)
 T vgui::CvarToggleCheckButton<ConVarRef>::GetAnimMap()
 T vgui::CvarToggleCheckButton<ConVarRef>::GetKBMap()
 T vgui::CvarToggleCheckButton<ConVarRef>::GetMessageMap()
 T vgui::CvarToggleCheckButton<ConVarRef>::GetPanelClassName()
 T vgui::CvarToggleCheckButton<ConVarRef>::OnApplyChanges()
 T vgui::CvarToggleCheckButton<ConVarRef>::OnButtonChecked()
 T vgui::CvarToggleCheckButton<ConVarRef>::Paint()
 T vgui::CvarToggleCheckButton<ConVarRef>::SetSelected(bool)
 T vgui::CvarToggleCheckButton<ConVarRef>::~CvarToggleCheckButton()
 T vgui::Divider::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Divider::Divider(vgui::Panel*, char const*)
 T vgui::Divider::GetAnimMap()
 T vgui::Divider::GetKBMap()
 T vgui::Divider::GetMessageMap()
 T vgui::Divider::GetPanelClassName()
 T vgui::Divider::~Divider()
 T vgui::EditablePanel::ActivateBuildMode()
 T vgui::EditablePanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::EditablePanel::ApplySettings(KeyValues*)
 T vgui::EditablePanel::ApplyUserConfigSettings(KeyValues*)
 T vgui::EditablePanel::CreateControlByName(char const*)
 T vgui::EditablePanel::EditablePanel(vgui::Panel*, char const*)
 T vgui::EditablePanel::ForceSubPanelsToUpdateWithNewDialogVariables()
 T vgui::EditablePanel::GetAnimMap()
 T vgui::EditablePanel::GetBuildGroup()
 T vgui::EditablePanel::GetControlInt(char const*, int)
 T vgui::EditablePanel::GetControlString(char const*, char const*)
 T vgui::EditablePanel::GetControlString(char const*, char*, int, char const*)
 T vgui::EditablePanel::GetCurrentKeyFocus()
 T vgui::EditablePanel::GetDialogVariables()
 T vgui::EditablePanel::GetFocusNavGroup()
 T vgui::EditablePanel::GetKBMap()
 T vgui::EditablePanel::GetMessageMap()
 T vgui::EditablePanel::GetPanelClassName()
 T vgui::EditablePanel::GetUserConfigSettings(KeyValues*)
 T vgui::EditablePanel::HasHotkey(wchar_t)
 T vgui::EditablePanel::LoadControlSettings(char const*, char const*, KeyValues*, KeyValues*)
 T vgui::EditablePanel::LoadControlSettingsAndUserConfig(char const*, int)
 T vgui::EditablePanel::LoadUserConfig(char const*, int)
 T vgui::EditablePanel::OnChildAdded(unsigned int)
 T vgui::EditablePanel::OnClose()
 T vgui::EditablePanel::OnCurrentDefaultButtonSet(unsigned int)
 T vgui::EditablePanel::OnDefaultButtonSet(unsigned int)
 T vgui::EditablePanel::OnFindDefaultButton()
 T vgui::EditablePanel::OnKeyCodeTyped(ButtonCode_t)
 T vgui::EditablePanel::OnRequestFocus(unsigned int, unsigned int)
 T vgui::EditablePanel::OnSetFocus()
 T vgui::EditablePanel::OnSizeChanged(int, int)
 T vgui::EditablePanel::PaintBackground()
 T vgui::EditablePanel::PerformLayout()
 T vgui::EditablePanel::RegisterControlSettingsFile(char const*, char const*)
 T vgui::EditablePanel::RequestFocus(int)
 T vgui::EditablePanel::RequestFocusNext(unsigned int)
 T vgui::EditablePanel::RequestFocusPrev(unsigned int)
 T vgui::EditablePanel::RequestInfo(KeyValues*)
 T vgui::EditablePanel::SaveUserConfig()
 T vgui::EditablePanel::SetControlEnabled(char const*, bool)
 T vgui::EditablePanel::SetControlInt(char const*, int)
 T vgui::EditablePanel::SetControlString(char const*, char const*)
 T vgui::EditablePanel::SetControlString(char const*, wchar_t const*)
 T vgui::EditablePanel::SetControlVisible(char const*, bool)
 T vgui::EditablePanel::SetDialogVariable(char const*, char const*)
 T vgui::EditablePanel::SetDialogVariable(char const*, float)
 T vgui::EditablePanel::SetDialogVariable(char const*, int)
 T vgui::EditablePanel::SetDialogVariable(char const*, wchar_t const*)
 T vgui::EditablePanel::~EditablePanel()
 T vgui::ExpandButton::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ExpandButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ExpandButton::ExpandButton(vgui::Panel*, char const*)
 T vgui::ExpandButton::GetAnimMap()
 T vgui::ExpandButton::GetBorder(bool, bool, bool, bool)
 T vgui::ExpandButton::GetKBMap()
 T vgui::ExpandButton::GetMessageMap()
 T vgui::ExpandButton::GetPanelClassName()
 T vgui::ExpandButton::OnExpanded(vgui::Panel*)
 T vgui::ExpandButton::Paint()
 T vgui::ExpandButton::SetSelected(bool)
 T vgui::ExpandButton::~ExpandButton()
 T vgui::FindOrAddPanelKeyBindingMap(char const*)
 T vgui::FindOrAddPanelMessageMap(char const*)
 T vgui::FocusNavGroup::CanButtonBeDefault(unsigned int)
 T vgui::FocusNavGroup::FindPanelByHotkey(wchar_t)
 T vgui::FocusNavGroup::FocusNavGroup(vgui::Panel*)
 T vgui::FocusNavGroup::GetCurrentDefaultButton()
 T vgui::FocusNavGroup::GetCurrentFocus()
 T vgui::FocusNavGroup::GetDefaultButton()
 T vgui::FocusNavGroup::GetDefaultPanel()
 T vgui::FocusNavGroup::RequestFocusNext(unsigned int)
 T vgui::FocusNavGroup::RequestFocusPrev(unsigned int)
 T vgui::FocusNavGroup::SetCurrentDefaultButton(unsigned int, bool)
 T vgui::FocusNavGroup::SetCurrentFocus(unsigned int, unsigned int)
 T vgui::FocusNavGroup::SetDefaultButton(vgui::Panel*)
 T vgui::FocusNavGroup::SetFocusTopLevel(bool)
 T vgui::FocusNavGroup::~FocusNavGroup()
 T vgui::Frame::Activate()
 T vgui::Frame::ActivateMinimized()
 T vgui::Frame::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T vgui::Frame::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Frame::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Frame::ApplySettings(KeyValues*)
 T vgui::Frame::ApplyUserConfigSettings(KeyValues*)
 T vgui::Frame::Close()
 T vgui::Frame::CloseModal()
 T vgui::Frame::DoModal()
 T vgui::Frame::FlashWindow()
 T vgui::Frame::FlashWindowStop()
 T vgui::Frame::Frame(vgui::Panel*, char const*, bool, bool)
 T vgui::Frame::GetAnimMap()
 T vgui::Frame::GetBottomRightSize()
 T vgui::Frame::GetCaptionHeight()
 T vgui::Frame::GetClientArea(int&, int&, int&, int&)
 T vgui::Frame::GetClipToParent() const
 T vgui::Frame::GetCornerSize()
 T vgui::Frame::GetDefaultScreenPosition(int&, int&, int&, int&)
 T vgui::Frame::GetDescription()
 T vgui::Frame::GetDraggerSize()
 T vgui::Frame::GetKBMap()
 T vgui::Frame::GetMessageMap()
 T vgui::Frame::GetPanelClassName()
 T vgui::Frame::GetSettings(KeyValues*)
 T vgui::Frame::GetSizerClientArea(int&, int&, int&, int&)
 T vgui::Frame::GetSysMenu()
 T vgui::Frame::GetUserConfigSettings(KeyValues*)
 T vgui::Frame::GetVar_m_iTitleTextInsetXOverride(vgui::Panel*)
 T vgui::Frame::GetVar_m_iTitleTextInsetYOverride(vgui::Panel*)
 T vgui::Frame::HasUserConfigSettings()
 T vgui::Frame::InternalFlashWindow()
 T vgui::Frame::InternalSetTitle(char const*)
 T vgui::Frame::IsMinimized()
 T vgui::Frame::IsMoveable()
 T vgui::Frame::IsSizeable()
 T vgui::Frame::IsSmallCaption() const
 T vgui::Frame::LayoutProportional(vgui::FrameButton*)
 T vgui::Frame::LoadControlSettings(char const*, char const*, KeyValues*, KeyValues*)
 T vgui::Frame::MoveToCenterOfScreen()
 T vgui::Frame::OnChildAdded(unsigned int)
 T vgui::Frame::OnClose()
 T vgui::Frame::OnCloseFrameButtonPressed()
 T vgui::Frame::OnCommand(char const*)
 T vgui::Frame::OnDialogVariablesChanged(KeyValues*)
 T vgui::Frame::OnFinishedClose()
 T vgui::Frame::OnFrameFocusChanged(bool)
 T vgui::Frame::OnGripPanelMoveFinished()
 T vgui::Frame::OnGripPanelMoved(int, int, int, int)
 T vgui::Frame::OnKeyCodeReleased(ButtonCode_t)
 T vgui::Frame::OnKeyCodeTyped(ButtonCode_t)
 T vgui::Frame::OnKeyFocusTicked()
 T vgui::Frame::OnKeyTyped(wchar_t)
 T vgui::Frame::OnMinimize()
 T vgui::Frame::OnMinimizeToSysTray()
 T vgui::Frame::OnMousePressed(ButtonCode_t)
 T vgui::Frame::OnScreenSizeChanged(int, int)
 T vgui::Frame::OnThink()
 T vgui::Frame::PaintBackground()
 T vgui::Frame::PerformLayout()
 T vgui::Frame::PlaceUnderCursor()
 T vgui::Frame::SetClipToParent(bool)
 T vgui::Frame::SetCloseButtonVisible(bool)
 T vgui::Frame::SetDeleteSelfOnClose(bool)
 T vgui::Frame::SetMaximizeButtonVisible(bool)
 T vgui::Frame::SetMenuButtonResponsive(bool)
 T vgui::Frame::SetMenuButtonVisible(bool)
 T vgui::Frame::SetMinimizeButtonVisible(bool)
 T vgui::Frame::SetMinimizeToSysTrayButtonVisible(bool)
 T vgui::Frame::SetMoveable(bool)
 T vgui::Frame::SetSizeable(bool)
 T vgui::Frame::SetSmallCaption(bool)
 T vgui::Frame::SetSysMenu(vgui::Menu*)
 T vgui::Frame::SetTitle(char const*, bool)
 T vgui::Frame::SetTitle(wchar_t const*, bool)
 T vgui::Frame::SetTitleBarVisible(bool)
 T vgui::Frame::SetupResizeCursors()
 T vgui::Frame::~Frame()
 T vgui::FrameButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::FrameButton::FrameButton(vgui::Panel*, char const*, char const*)
 T vgui::FrameButton::GetBorder(bool, bool, bool, bool)
 T vgui::FrameButton::OnMousePressed(ButtonCode_t)
 T vgui::FrameButton::PerformLayout()
 T vgui::FrameButton::SetDisabledLook(bool)
 T vgui::FrameButton::~FrameButton()
 T vgui::FrameSystemButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::FrameSystemButton::FrameSystemButton(vgui::Panel*, char const*)
 T vgui::FrameSystemButton::GetAnimMap()
 T vgui::FrameSystemButton::GetBorder(bool, bool, bool, bool)
 T vgui::FrameSystemButton::GetKBMap()
 T vgui::FrameSystemButton::GetMessageMap()
 T vgui::FrameSystemButton::GetPanelClassName()
 T vgui::FrameSystemButton::OnMouseDoublePressed(ButtonCode_t)
 T vgui::FrameSystemButton::OnMousePressed(ButtonCode_t)
 T vgui::FrameSystemButton::SetEnabled(bool)
 T vgui::FrameSystemButton::~FrameSystemButton()
 T vgui::GetAnimationController()
 T vgui::GetControlsModuleName()
 T vgui::GraphPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::GraphPanel::GetAnimMap()
 T vgui::GraphPanel::GetKBMap()
 T vgui::GraphPanel::GetMessageMap()
 T vgui::GraphPanel::GetPanelClassName()
 T vgui::GraphPanel::GraphPanel(vgui::Panel*, char const*)
 T vgui::GraphPanel::Paint()
 T vgui::GraphPanel::PerformLayout()
 T vgui::GraphPanel::~GraphPanel()
 T vgui::Image::DrawFilledRect(int, int, int, int)
 T vgui::Image::DrawLine(int, int, int, int)
 T vgui::Image::DrawOutlinedRect(int, int, int, int)
 T vgui::Image::DrawPolyLine(int*, int*, int)
 T vgui::Image::DrawPrintChar(int, int, wchar_t)
 T vgui::Image::DrawPrintChar(wchar_t)
 T vgui::Image::DrawPrintText(int, int, wchar_t const*, int)
 T vgui::Image::DrawPrintText(wchar_t const*, int)
 T vgui::Image::DrawSetColor(Color)
 T vgui::Image::DrawSetColor(int, int, int, int)
 T vgui::Image::DrawSetTextColor(Color)
 T vgui::Image::DrawSetTextColor(int, int, int, int)
 T vgui::Image::DrawSetTextFont(unsigned long)
 T vgui::Image::DrawSetTextPos(int, int)
 T vgui::Image::DrawSetTexture(int)
 T vgui::Image::DrawTexturedRect(int, int, int, int)
 T vgui::Image::Evict()
 T vgui::Image::GetColor()
 T vgui::Image::GetContentSize(int&, int&)
 T vgui::Image::GetID()
 T vgui::Image::GetNumFrames()
 T vgui::Image::GetPos(int&, int&)
 T vgui::Image::GetSize(int&, int&)
 T vgui::Image::GetTall()
 T vgui::Image::GetWide()
 T vgui::Image::Image()
 T vgui::Image::SetBkColor(Color)
 T vgui::Image::SetColor(Color)
 T vgui::Image::SetFrame(int)
 T vgui::Image::SetPos(int, int)
 T vgui::Image::SetRotation(int)
 T vgui::Image::SetSize(int, int)
 T vgui::Image::~Image()
 T vgui::ImageList::GetImage(int)
 T vgui::ImageList::IsValidIndex(int)
 T vgui::ImageList::~ImageList()
 T vgui::ImagePanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ImagePanel::ApplySettings(KeyValues*)
 T vgui::ImagePanel::GetAnimMap()
 T vgui::ImagePanel::GetDescription()
 T vgui::ImagePanel::GetDrawColor()
 T vgui::ImagePanel::GetImage()
 T vgui::ImagePanel::GetKBMap()
 T vgui::ImagePanel::GetMessageMap()
 T vgui::ImagePanel::GetPanelClassName()
 T vgui::ImagePanel::GetSettings(KeyValues*)
 T vgui::ImagePanel::ImagePanel(vgui::Panel*, char const*)
 T vgui::ImagePanel::OnSizeChanged(int, int)
 T vgui::ImagePanel::PaintBackground()
 T vgui::ImagePanel::SetDrawColor(Color)
 T vgui::ImagePanel::SetImage(char const*)
 T vgui::ImagePanel::SetImage(vgui::IImage*)
 T vgui::ImagePanel::~ImagePanel()
 T vgui::Label::AddImage(vgui::IImage*, int)
 T vgui::Label::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Label::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Label::ApplySettings(KeyValues*)
 T vgui::Label::CalculateHotkey(char const*)
 T vgui::Label::CalculateHotkey(wchar_t const*)
 T vgui::Label::ClearImages()
 T vgui::Label::ComputeAlignment(int&, int&, int&, int&)
 T vgui::Label::DrawDashedLine(int, int, int, int, int, int)
 T vgui::Label::EnsureImageCapacity(int)
 T vgui::Label::GetAnimMap()
 T vgui::Label::GetContentSize(int&, int&)
 T vgui::Label::GetDescription()
 T vgui::Label::GetDisabledFgColor1()
 T vgui::Label::GetDisabledFgColor2()
 T vgui::Label::GetFgColor()
 T vgui::Label::GetFont()
 T vgui::Label::GetHotKey()
 T vgui::Label::GetImageAtIndex(int)
 T vgui::Label::GetImageCount()
 T vgui::Label::GetKBMap()
 T vgui::Label::GetMessageMap()
 T vgui::Label::GetPanelClassName()
 T vgui::Label::GetSettings(KeyValues*)
 T vgui::Label::GetSizerMinimumSize(int&, int&)
 T vgui::Label::GetText(char*, int)
 T vgui::Label::GetText(wchar_t*, int)
 T vgui::Label::GetTextImage()
 T vgui::Label::GetTextInset(int*, int*)
 T vgui::Label::GetUnpackStructure() const
 T vgui::Label::HandleAutoSizing()
 T vgui::Label::HasHotkey(wchar_t)
 T vgui::Label::Label(vgui::Panel*, char const*, char const*)
 T vgui::Label::Label(vgui::Panel*, char const*, wchar_t const*)
 T vgui::Label::OnDialogVariablesChanged(KeyValues*)
 T vgui::Label::OnHotkeyPressed()
 T vgui::Label::OnMousePressed(ButtonCode_t)
 T vgui::Label::OnRequestFocus(unsigned int, unsigned int)
 T vgui::Label::OnSetText(KeyValues*)
 T vgui::Label::OnSizeChanged(int, int)
 T vgui::Label::Paint()
 T vgui::Label::PerformLayout()
 T vgui::Label::RepositionTextImage(int&, int&, vgui::TextImage*)
 T vgui::Label::RequestInfo(KeyValues*)
 T vgui::Label::ResetToSimpleTextImage()
 T vgui::Label::SetAssociatedControl(vgui::Panel*)
 T vgui::Label::SetContentAlignment(vgui::Label::Alignment)
 T vgui::Label::SetDisabledFgColor1(Color)
 T vgui::Label::SetDisabledFgColor2(Color)
 T vgui::Label::SetEnabled(bool)
 T vgui::Label::SetFgColor(Color)
 T vgui::Label::SetFont(unsigned long)
 T vgui::Label::SetHotkey(wchar_t)
 T vgui::Label::SetImage(vgui::IImage*, int)
 T vgui::Label::SetImageAtIndex(int, vgui::IImage*, int)
 T vgui::Label::SetImageBounds(int, int, int)
 T vgui::Label::SetImagePreOffset(int, int)
 T vgui::Label::SetText(char const*)
 T vgui::Label::SetText(wchar_t const*, bool)
 T vgui::Label::SetTextColorState(vgui::Label::EColorState)
 T vgui::Label::SetTextImageIndex(int)
 T vgui::Label::SetTextInset(int, int)
 T vgui::Label::SizeToContents()
 T vgui::Label::~Label()
 T vgui::ListPanel::AddColumnHeader(int, char const*, char const*, int, int)
 T vgui::ListPanel::AddColumnHeader(int, char const*, char const*, int, int, int, int)
 T vgui::ListPanel::AddItem(KeyValues const*, unsigned int, bool, bool)
 T vgui::ListPanel::AddSelectedItem(int)
 T vgui::ListPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ListPanel::ApplyItemChanges(int)
 T vgui::ListPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ListPanel::ApplyUserConfigSettings(KeyValues*)
 T vgui::ListPanel::ClearSelectedItems()
 T vgui::ListPanel::DeleteAllItems()
 T vgui::ListPanel::EnterEditMode(int, int, vgui::Panel*)
 T vgui::ListPanel::FindColumn(char const*)
 T vgui::ListPanel::FirstItem() const
 T vgui::ListPanel::GetAnimMap()
 T vgui::ListPanel::GetCellAtPos(int, int, int&, int&)
 T vgui::ListPanel::GetCellBounds(int, int, int&, int&, int&, int&)
 T vgui::ListPanel::GetCellImage(int, int)
 T vgui::ListPanel::GetCellRenderer(int, int)
 T vgui::ListPanel::GetCellText(int, int, wchar_t*, int)
 T vgui::ListPanel::GetColumnHeaderText(int, char*, int)
 T vgui::ListPanel::GetItem(char const*)
 T vgui::ListPanel::GetItem(int)
 T vgui::ListPanel::GetItemCount()
 T vgui::ListPanel::GetItemCurrentRow(int)
 T vgui::ListPanel::GetItemData(int)
 T vgui::ListPanel::GetItemIDFromRow(int)
 T vgui::ListPanel::GetItemIDFromUserData(unsigned int)
 T vgui::ListPanel::GetItemUserData(int)
 T vgui::ListPanel::GetKBMap()
 T vgui::ListPanel::GetMessageMap()
 T vgui::ListPanel::GetNumColumnHeaders() const
 T vgui::ListPanel::GetPanelClassName()
 T vgui::ListPanel::GetRowsPerPage()
 T vgui::ListPanel::GetSelectedColumn()
 T vgui::ListPanel::GetSelectedItem(int)
 T vgui::ListPanel::GetSelectedItemsCount()
 T vgui::ListPanel::GetStartItem()
 T vgui::ListPanel::GetUserConfigSettings(KeyValues*)
 T vgui::ListPanel::HandleAddSelection(int, int, int)
 T vgui::ListPanel::HandleMultiSelection(int, int, int)
 T vgui::ListPanel::HasUserConfigSettings()
 T vgui::ListPanel::IndexItem(int)
 T vgui::ListPanel::InvalidItemID() const
 T vgui::ListPanel::IsInEditMode()
 T vgui::ListPanel::IsItemSelected(int)
 T vgui::ListPanel::IsValidItemID(int)
 T vgui::ListPanel::LeaveEditMode()
 T vgui::ListPanel::ListPanel(vgui::Panel*, char const*)
 T vgui::ListPanel::NextItem(int) const
 T vgui::ListPanel::OnColumnResized(int, int)
 T vgui::ListPanel::OnCreateDragData(KeyValues*)
 T vgui::ListPanel::OnKeyCodeTyped(ButtonCode_t)
 T vgui::ListPanel::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ListPanel::OnMousePressed(ButtonCode_t)
 T vgui::ListPanel::OnMouseWheeled(int)
 T vgui::ListPanel::OnSetSortColumn(int)
 T vgui::ListPanel::OnSizeChanged(int, int)
 T vgui::ListPanel::OnSliderMoved()
 T vgui::ListPanel::OnToggleColumnVisible(int)
 T vgui::ListPanel::OpenColumnChoiceMenu()
 T vgui::ListPanel::Paint()
 T vgui::ListPanel::PaintBackground()
 T vgui::ListPanel::PerformLayout()
 T vgui::ListPanel::RBTreeLessFunc(vgui::ListPanel::IndexItem_t&, vgui::ListPanel::IndexItem_t&)
 T vgui::ListPanel::RemoveAll()
 T vgui::ListPanel::RemoveColumn(int)
 T vgui::ListPanel::RemoveItem(int)
 T vgui::ListPanel::RereadAllItems()
 T vgui::ListPanel::ResizeColumnToContents(int)
 T vgui::ListPanel::ResortColumnRBTree(int)
 T vgui::ListPanel::SetAllowUserModificationOfColumns(bool)
 T vgui::ListPanel::SetColumnHeaderHeight(int)
 T vgui::ListPanel::SetColumnHeaderImage(int, int)
 T vgui::ListPanel::SetColumnHeaderText(int, char const*)
 T vgui::ListPanel::SetColumnHeaderText(int, wchar_t*)
 T vgui::ListPanel::SetColumnHeaderTooltip(int, char const*)
 T vgui::ListPanel::SetColumnSortable(int, bool)
 T vgui::ListPanel::SetColumnTextAlignment(int, int)
 T vgui::ListPanel::SetColumnVisible(int, bool)
 T vgui::ListPanel::SetEmptyListText(char const*)
 T vgui::ListPanel::SetEmptyListText(wchar_t const*)
 T vgui::ListPanel::SetFont(unsigned long)
 T vgui::ListPanel::SetImageList(vgui::ImageList*, bool)
 T vgui::ListPanel::SetItemDisabled(int, bool)
 T vgui::ListPanel::SetItemVisible(int, bool)
 T vgui::ListPanel::SetSelectIndividualCells(bool)
 T vgui::ListPanel::SetSelectedCell(int, int)
 T vgui::ListPanel::SetSingleSelectedItem(int)
 T vgui::ListPanel::SetSortColumn(int)
 T vgui::ListPanel::SetSortColumnEx(int, int, bool)
 T vgui::ListPanel::SetSortFunc(int, int (*)(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&))
 T vgui::ListPanel::SetUserData(int, unsigned int)
 T vgui::ListPanel::SortList()
 T vgui::ListPanel::UpdateSelection(ButtonCode_t, int, int, int, int)
 T vgui::ListPanel::~ListPanel()
 T vgui::ListViewItem::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ListViewItem::GetAnimMap()
 T vgui::ListViewItem::GetKBMap()
 T vgui::ListViewItem::GetMessageMap()
 T vgui::ListViewItem::GetPanelClassName()
 T vgui::ListViewItem::ListViewItem(vgui::Panel*)
 T vgui::ListViewItem::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ListViewItem::OnMousePressed(ButtonCode_t)
 T vgui::ListViewItem::PaintBackground()
 T vgui::ListViewItem::PerformLayout()
 T vgui::ListViewItem::UpdateImage()
 T vgui::ListViewItem::~ListViewItem()
 T vgui::ListViewPanel::AddItem(KeyValues const*, bool, bool)
 T vgui::ListViewPanel::AddSelectedItem(int)
 T vgui::ListViewPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ListViewPanel::ApplyItemChanges(int)
 T vgui::ListViewPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ListViewPanel::ClearSelectedItems()
 T vgui::ListViewPanel::DeleteAllItems()
 T vgui::ListViewPanel::FinishKeyPress(int)
 T vgui::ListViewPanel::GetAnimMap()
 T vgui::ListViewPanel::GetItem(int)
 T vgui::ListViewPanel::GetItemCount()
 T vgui::ListViewPanel::GetItemIDFromPos(int)
 T vgui::ListViewPanel::GetItemsPerColumn()
 T vgui::ListViewPanel::GetKBMap()
 T vgui::ListViewPanel::GetMessageMap()
 T vgui::ListViewPanel::GetPanelClassName()
 T vgui::ListViewPanel::GetSelectedItem(int)
 T vgui::ListViewPanel::GetSelectedItemsCount()
 T vgui::ListViewPanel::InvalidItemID()
 T vgui::ListViewPanel::IsValidItemID(int)
 T vgui::ListViewPanel::ListViewPanel(vgui::Panel*, char const*)
 T vgui::ListViewPanel::OnItemMousePressed(vgui::ListViewItem*, ButtonCode_t)
 T vgui::ListViewPanel::OnKeyCodeTyped(ButtonCode_t)
 T vgui::ListViewPanel::OnKeyTyped(wchar_t)
 T vgui::ListViewPanel::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ListViewPanel::OnMousePressed(ButtonCode_t)
 T vgui::ListViewPanel::OnMouseWheeled(int)
 T vgui::ListViewPanel::OnShiftSelect(int)
 T vgui::ListViewPanel::OnSizeChanged(int, int)
 T vgui::ListViewPanel::OnSliderMoved()
 T vgui::ListViewPanel::Paint()
 T vgui::ListViewPanel::PerformLayout()
 T vgui::ListViewPanel::RemoveItem(int)
 T vgui::ListViewPanel::ScrollToItem(int)
 T vgui::ListViewPanel::SetFont(unsigned long)
 T vgui::ListViewPanel::SetImageList(vgui::ImageList*, bool)
 T vgui::ListViewPanel::SetSingleSelectedItem(int)
 T vgui::ListViewPanel::SetSortFunc(bool (*)(KeyValues*, KeyValues*))
 T vgui::ListViewPanel::SortList()
 T vgui::ListViewPanel::~ListViewPanel()
 T vgui::Menu::ActivateItem(int)
 T vgui::Menu::ActivateItemByRow(int)
 T vgui::Menu::AddCascadingMenuItem(char const*, KeyValues*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, char const*, KeyValues*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, char const*, char const*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, char const*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, wchar_t const*, KeyValues*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, wchar_t const*, char const*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, char const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, char const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, wchar_t const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, wchar_t const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, char const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, char const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, wchar_t const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, wchar_t const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(vgui::MenuItem*)
 T vgui::Menu::AddScrollBar()
 T vgui::Menu::AddSeparator()
 T vgui::Menu::AddSeparatorAfterItem(int)
 T vgui::Menu::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Menu::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Menu::ClearCurrentlyHighlightedItem()
 T vgui::Menu::CloseOtherMenus(vgui::MenuItem*)
 T vgui::Menu::ComputeFullMenuHeightWithInsets()
 T vgui::Menu::DeleteAllItems()
 T vgui::Menu::ForceCalculateWidth()
 T vgui::Menu::GetActiveItem()
 T vgui::Menu::GetAnimMap()
 T vgui::Menu::GetCurrentlyHighlightedItem()
 T vgui::Menu::GetInvalidMenuID()
 T vgui::Menu::GetItemCount()
 T vgui::Menu::GetItemText(int, wchar_t*, int)
 T vgui::Menu::GetItemUserData(int)
 T vgui::Menu::GetKBMap()
 T vgui::Menu::GetMenuID(int)
 T vgui::Menu::GetMenuItem(int)
 T vgui::Menu::GetMenuItemHeight() const
 T vgui::Menu::GetMenuMode()
 T vgui::Menu::GetMessageMap()
 T vgui::Menu::GetPanelClassName()
 T vgui::Menu::GetTypeAheadMode()
 T vgui::Menu::IsValidMenuID(int)
 T vgui::Menu::LayoutMenuBorder()
 T vgui::Menu::LayoutScrollBar()
 T vgui::Menu::MakeItemsVisibleInScrollRange(int, int)
 T vgui::Menu::Menu(vgui::Panel*, char const*)
 T vgui::Menu::MoveAlongMenuItemList(int, int)
 T vgui::Menu::MoveMenuItem(int, int)
 T vgui::Menu::OnCommand(char const*)
 T vgui::Menu::OnCursorEnteredMenuItem(int)
 T vgui::Menu::OnCursorExitedMenuItem(int)
 T vgui::Menu::OnCursorMoved(int, int)
 T vgui::Menu::OnHotKey(wchar_t)
 T vgui::Menu::OnInternalMousePressed(vgui::Panel*, ButtonCode_t)
 T vgui::Menu::OnKeyCodePressed(ButtonCode_t)
 T vgui::Menu::OnKeyCodeTyped(ButtonCode_t)
 T vgui::Menu::OnKeyModeSet()
 T vgui::Menu::OnKeyTyped(wchar_t)
 T vgui::Menu::OnKillFocus()
 T vgui::Menu::OnMenuItemSelected(vgui::Panel*)
 T vgui::Menu::OnMouseWheeled(int)
 T vgui::Menu::OnSliderMoved()
 T vgui::Menu::OnTypeAhead(wchar_t)
 T vgui::Menu::Paint()
 T vgui::Menu::PerformLayout()
 T vgui::Menu::PlaceContextMenu(vgui::Panel*, vgui::Menu*)
 T vgui::Menu::PositionCascadingMenu()
 T vgui::Menu::PositionRelativeToPanel(vgui::Panel*, vgui::Menu::MenuDirection_e, int, bool)
 T vgui::Menu::RemoveScrollBar()
 T vgui::Menu::SetBgColor(Color)
 T vgui::Menu::SetBorder(vgui::IBorder*)
 T vgui::Menu::SetCurrentlyHighlightedItem(int)
 T vgui::Menu::SetCurrentlySelectedItem(int)
 T vgui::Menu::SetFgColor(Color)
 T vgui::Menu::SetFixedWidth(int)
 T vgui::Menu::SetFont(unsigned long)
 T vgui::Menu::SetItemEnabled(char const*, bool)
 T vgui::Menu::SetItemEnabled(int, bool)
 T vgui::Menu::SetItemVisible(char const*, bool)
 T vgui::Menu::SetItemVisible(int, bool)
 T vgui::Menu::SetMenuItemChecked(int, bool)
 T vgui::Menu::SetMenuItemHeight(int)
 T vgui::Menu::SetNumberOfVisibleItems(int)
 T vgui::Menu::SetTypeAheadMode(vgui::Menu::MenuTypeAheadMode)
 T vgui::Menu::SetUseFallbackFont(bool, unsigned long)
 T vgui::Menu::SetVisible(bool)
 T vgui::Menu::UpdateMenuItem(int, char const*, KeyValues*, KeyValues const*)
 T vgui::Menu::UpdateMenuItem(int, wchar_t const*, KeyValues*, KeyValues const*)
 T vgui::Menu::~Menu()
 T vgui::MenuBar::AddButton(vgui::MenuButton*)
 T vgui::MenuBar::AddMenu(char const*, vgui::Menu*)
 T vgui::MenuBar::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::MenuBar::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MenuBar::GetAnimMap()
 T vgui::MenuBar::GetContentSize(int&, int&)
 T vgui::MenuBar::GetKBMap()
 T vgui::MenuBar::GetMessageMap()
 T vgui::MenuBar::GetPanelClassName()
 T vgui::MenuBar::MenuBar(vgui::Panel*, char const*)
 T vgui::MenuBar::OnCursorEnteredMenuButton(int)
 T vgui::MenuBar::OnKeyCodeTyped(ButtonCode_t)
 T vgui::MenuBar::OnKeyTyped(wchar_t)
 T vgui::MenuBar::OnMenuClose()
 T vgui::MenuBar::Paint()
 T vgui::MenuBar::PerformLayout()
 T vgui::MenuBar::~MenuBar()
 T vgui::MenuButton::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::MenuButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MenuButton::CanBeDefaultButton()
 T vgui::MenuButton::DoClick()
 T vgui::MenuButton::DrawFocusBorder(int, int, int, int)
 T vgui::MenuButton::GetAnimMap()
 T vgui::MenuButton::GetKBMap()
 T vgui::MenuButton::GetMenu()
 T vgui::MenuButton::GetMessageMap()
 T vgui::MenuButton::GetPanelClassName()
 T vgui::MenuButton::HideMenu()
 T vgui::MenuButton::MenuButton(vgui::Panel*, char const*, char const*)
 T vgui::MenuButton::OnCheckMenuItemCount()
 T vgui::MenuButton::OnCursorEntered()
 T vgui::MenuButton::OnCursorMoved(int, int)
 T vgui::MenuButton::OnHideMenu(vgui::Menu*)
 T vgui::MenuButton::OnKeyCodeTyped(ButtonCode_t)
 T vgui::MenuButton::OnKillFocus(KeyValues*)
 T vgui::MenuButton::OnMenuClose()
 T vgui::MenuButton::OnShowMenu(vgui::Menu*)
 T vgui::MenuButton::Paint()
 T vgui::MenuButton::PerformLayout()
 T vgui::MenuButton::SetMenu(vgui::Menu*)
 T vgui::MenuButton::SetOpenDirection(vgui::Menu::MenuDirection_e)
 T vgui::MenuButton::SetOpenOffsetY(int)
 T vgui::MenuButton::~MenuButton()
 T vgui::MenuItem::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::MenuItem::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MenuItem::ArmItem()
 T vgui::MenuItem::CanBeDefaultButton()
 T vgui::MenuItem::CloseCascadeMenu()
 T vgui::MenuItem::DisarmItem()
 T vgui::MenuItem::FireActionSignal()
 T vgui::MenuItem::GetAnimMap()
 T vgui::MenuItem::GetBorder(bool, bool, bool, bool)
 T vgui::MenuItem::GetCheckImageSize(int&, int&)
 T vgui::MenuItem::GetContentSize(int&, int&)
 T vgui::MenuItem::GetKBMap()
 T vgui::MenuItem::GetMenu()
 T vgui::MenuItem::GetMessageMap()
 T vgui::MenuItem::GetPanelClassName()
 T vgui::MenuItem::GetParentMenu()
 T vgui::MenuItem::GetUserData()
 T vgui::MenuItem::HasMenu()
 T vgui::MenuItem::Init()
 T vgui::MenuItem::IsCheckable()
 T vgui::MenuItem::MenuItem(vgui::Menu*, char const*, char const*, vgui::Menu*, bool)
 T vgui::MenuItem::MenuItem(vgui::Menu*, char const*, wchar_t const*, vgui::Menu*, bool)
 T vgui::MenuItem::OnCursorEntered()
 T vgui::MenuItem::OnCursorExited()
 T vgui::MenuItem::OnCursorMoved(int, int)
 T vgui::MenuItem::OnKeyCodeReleased(ButtonCode_t)
 T vgui::MenuItem::OnKeyModeSet()
 T vgui::MenuItem::OnKillFocus()
 T vgui::MenuItem::OpenCascadeMenu()
 T vgui::MenuItem::Paint()
 T vgui::MenuItem::PerformLayout()
 T vgui::MenuItem::RepositionTextImage(int&, int&, vgui::TextImage*)
 T vgui::MenuItem::SetChecked(bool)
 T vgui::MenuItem::SetUserData(KeyValues const*)
 T vgui::MenuItem::~MenuItem()
 T vgui::MenuSeparator::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MenuSeparator::GetAnimMap()
 T vgui::MenuSeparator::GetKBMap()
 T vgui::MenuSeparator::GetMessageMap()
 T vgui::MenuSeparator::GetPanelClassName()
 T vgui::MenuSeparator::MenuSeparator(vgui::Panel*, char const*)
 T vgui::MenuSeparator::Paint()
 T vgui::MenuSeparator::~MenuSeparator()
 T vgui::MessageBox::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::MessageBox::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MessageBox::DisableCloseButton(bool)
 T vgui::MessageBox::DoModal(vgui::Frame*)
 T vgui::MessageBox::GetAnimMap()
 T vgui::MessageBox::GetKBMap()
 T vgui::MessageBox::GetMessageMap()
 T vgui::MessageBox::GetPanelClassName()
 T vgui::MessageBox::Init()
 T vgui::MessageBox::MessageBox(char const*, char const*, vgui::Panel*)
 T vgui::MessageBox::OnCommand(char const*)
 T vgui::MessageBox::OnShutdownRequest()
 T vgui::MessageBox::PerformLayout()
 T vgui::MessageBox::SetCommand(KeyValues*)
 T vgui::MessageBox::SetCommand(char const*)
 T vgui::MessageBox::SetOKButtonText(char const*)
 T vgui::MessageBox::SetOKButtonText(wchar_t const*)
 T vgui::MessageBox::SetOKButtonVisible(bool)
 T vgui::MessageBox::ShowWindow(vgui::Frame*)
 T vgui::MessageBox::~MessageBox()
 T vgui::PHandle::Get()
 T vgui::PHandle::Set(vgui::Panel*)
 T vgui::Panel::AddActionSignalTarget(unsigned int)
 T vgui::Panel::AddActionSignalTarget(vgui::Panel*)
 T vgui::Panel::AddKeyBinding(char const*, int, int)
 T vgui::Panel::AddPropertyConverter(char const*, vgui::IPanelAnimationPropertyConverter*)
 T vgui::Panel::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T vgui::Panel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Panel::AddToOverridableColors(Color*, char const*)
 T vgui::Panel::ApplyAutoResizeSettings(KeyValues*)
 T vgui::Panel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Panel::ApplySettings(KeyValues*)
 T vgui::Panel::ApplyUserConfigSettings(KeyValues*)
 T vgui::Panel::CallParentFunction(KeyValues*)
 T vgui::Panel::CanStartDragging(int, int, int, int)
 T vgui::Panel::CreateDragData()
 T vgui::Panel::DeletePanel()
 T vgui::Panel::DragDropStartDragging()
 T vgui::Panel::DrawBox(int, int, int, int, Color, float, bool)
 T vgui::Panel::DrawBoxFade(int, int, int, int, Color, float, unsigned int, unsigned int, bool, bool)
 T vgui::Panel::DrawHollowBox(int, int, int, int, Color, float)
 T vgui::Panel::DrawHollowBox(int, int, int, int, Color, float, int, int)
 T vgui::Panel::DrawTexturedBox(int, int, int, int, Color, float)
 T vgui::Panel::EditKeyBindings()
 T vgui::Panel::FillRectSkippingPanel(Color, int, int, int, int, vgui::Panel*)
 T vgui::Panel::FindChildByName(char const*, bool)
 T vgui::Panel::FindDropTargetPanel()
 T vgui::Panel::FindDropTargetPanel_R(CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >&, int, int, unsigned int)
 T vgui::Panel::FindSiblingByName(char const*)
 T vgui::Panel::GetAlpha()
 T vgui::Panel::GetAnimMap()
 T vgui::Panel::GetAutoResize()
 T vgui::Panel::GetBgColor()
 T vgui::Panel::GetBorder()
 T vgui::Panel::GetBounds(int&, int&, int&, int&)
 T vgui::Panel::GetChild(int)
 T vgui::Panel::GetChildCount()
 T vgui::Panel::GetClassName()
 T vgui::Panel::GetClipRect(int&, int&, int&, int&)
 T vgui::Panel::GetCornerTextureSize(int&, int&)
 T vgui::Panel::GetCurrentKeyFocus()
 T vgui::Panel::GetCursor()
 T vgui::Panel::GetDescription()
 T vgui::Panel::GetDragData(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::GetDragDropInfo()
 T vgui::Panel::GetDragFailCursor(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::GetDragPanel()
 T vgui::Panel::GetDragStartTolerance() const
 T vgui::Panel::GetDropContextMenu(vgui::Menu*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::GetDropCursor(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::GetDropTarget(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::GetFgColor()
 T vgui::Panel::GetInset(int&, int&, int&, int&)
 T vgui::Panel::GetKBMap()
 T vgui::Panel::GetKeyBindingsContext() const
 T vgui::Panel::GetKeyBindingsFile() const
 T vgui::Panel::GetKeyBindingsFilePathID() const
 T vgui::Panel::GetMessageMap()
 T vgui::Panel::GetMinimumSize(int&, int&)
 T vgui::Panel::GetModuleName()
 T vgui::Panel::GetName()
 T vgui::Panel::GetNavDown(vgui::Panel*)
 T vgui::Panel::GetNavLeft(vgui::Panel*)
 T vgui::Panel::GetNavRight(vgui::Panel*)
 T vgui::Panel::GetNavUp(vgui::Panel*)
 T vgui::Panel::GetPaintBackgroundType()
 T vgui::Panel::GetPaintSize(int&, int&)
 T vgui::Panel::GetPanel()
 T vgui::Panel::GetPanelClassName()
 T vgui::Panel::GetPanelMap()
 T vgui::Panel::GetParent()
 T vgui::Panel::GetPinCorner()
 T vgui::Panel::GetPinOffset(int&, int&)
 T vgui::Panel::GetPos(int&, int&)
 T vgui::Panel::GetResizeOffset(int&, int&)
 T vgui::Panel::GetScheme()
 T vgui::Panel::GetSchemeColor(char const*, Color, vgui::IScheme*)
 T vgui::Panel::GetSchemeColor(char const*, vgui::IScheme*)
 T vgui::Panel::GetSettings(KeyValues*)
 T vgui::Panel::GetSize(int&, int&)
 T vgui::Panel::GetSizerClientArea(int&, int&, int&, int&)
 T vgui::Panel::GetSizerMinimumSize(int&, int&)
 T vgui::Panel::GetTabPosition()
 T vgui::Panel::GetTall()
 T vgui::Panel::GetTooltip()
 T vgui::Panel::GetUnpackStructure() const
 T vgui::Panel::GetUserConfigSettings(KeyValues*)
 T vgui::Panel::GetVPanel()
 T vgui::Panel::GetVParent()
 T vgui::Panel::GetVar_m_flAlpha(vgui::Panel*)
 T vgui::Panel::GetVar_m_nBgTextureId1(vgui::Panel*)
 T vgui::Panel::GetVar_m_nBgTextureId2(vgui::Panel*)
 T vgui::Panel::GetVar_m_nBgTextureId3(vgui::Panel*)
 T vgui::Panel::GetVar_m_nBgTextureId4(vgui::Panel*)
 T vgui::Panel::GetVar_m_nPaintBackgroundType(vgui::Panel*)
 T vgui::Panel::GetWide()
 T vgui::Panel::HasFocus()
 T vgui::Panel::HasHotkey(wchar_t)
 T vgui::Panel::HasParent(unsigned int)
 T vgui::Panel::HasUserConfigSettings()
 T vgui::Panel::Init(int, int, int, int)
 T vgui::Panel::InitPropertyConverters()
 T vgui::Panel::InstallMouseHandler(vgui::Panel*)
 T vgui::Panel::InternalApplySettings(PanelAnimationMap*, KeyValues*)
 T vgui::Panel::InternalCursorEntered()
 T vgui::Panel::InternalCursorExited()
 T vgui::Panel::InternalCursorMoved(int, int)
 T vgui::Panel::InternalFocusChanged(bool)
 T vgui::Panel::InternalInitDefaultValues(PanelAnimationMap*)
 T vgui::Panel::InternalInvalidateLayout()
 T vgui::Panel::InternalKeyCodePressed(int)
 T vgui::Panel::InternalKeyCodeReleased(int)
 T vgui::Panel::InternalKeyCodeTyped(int)
 T vgui::Panel::InternalKeyFocusTicked()
 T vgui::Panel::InternalKeyTyped(int)
 T vgui::Panel::InternalMouseDoublePressed(int)
 T vgui::Panel::InternalMouseFocusTicked()
 T vgui::Panel::InternalMousePressed(int)
 T vgui::Panel::InternalMouseReleased(int)
 T vgui::Panel::InternalMouseTriplePressed(int)
 T vgui::Panel::InternalMouseWheeled(int)
 T vgui::Panel::InternalMove()
 T vgui::Panel::InternalRequestInfo(PanelAnimationMap*, KeyValues*)
 T vgui::Panel::InternalSetCursor()
 T vgui::Panel::InternalSetInfo(PanelAnimationMap*, KeyValues*)
 T vgui::Panel::InvalidateLayout(bool, bool)
 T vgui::Panel::IsAutoDeleteSet()
 T vgui::Panel::IsBeingDragged()
 T vgui::Panel::IsBlockingDragChaining() const
 T vgui::Panel::IsBuildGroupEnabled()
 T vgui::Panel::IsBuildModeActive()
 T vgui::Panel::IsBuildModeDeletable()
 T vgui::Panel::IsBuildModeEditable()
 T vgui::Panel::IsConsoleStylePanel() const
 T vgui::Panel::IsCursorNone()
 T vgui::Panel::IsCursorOver()
 T vgui::Panel::IsDragEnabled() const
 T vgui::Panel::IsDropEnabled() const
 T vgui::Panel::IsDroppable(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::IsEnabled()
 T vgui::Panel::IsFullyVisible()
 T vgui::Panel::IsKeyBoardInputEnabled()
 T vgui::Panel::IsKeyOverridden(ButtonCode_t, int)
 T vgui::Panel::IsKeyRebound(ButtonCode_t, int)
 T vgui::Panel::IsLayoutInvalid()
 T vgui::Panel::IsMouseInputEnabled()
 T vgui::Panel::IsOpaque()
 T vgui::Panel::IsPopup()
 T vgui::Panel::IsProportional()
 T vgui::Panel::IsTriplePressAllowed() const
 T vgui::Panel::IsValidKeyBindingsContext() const
 T vgui::Panel::IsVisible()
 T vgui::Panel::IsWithin(int, int)
 T vgui::Panel::IsWithinTraverse(int, int, bool)
 T vgui::Panel::LocalToScreen(int&, int&)
 T vgui::Panel::LookupBindingByKeyCode(ButtonCode_t, int)
 T vgui::Panel::LookupElementBounds(char const*, int&, int&, int&, int&)
 T vgui::Panel::MakePopup(bool, bool)
 T vgui::Panel::MakeReadyForUse()
 T vgui::Panel::MarkForDeletion()
 T vgui::Panel::MoveToFront()
 T vgui::Panel::NavigateDown()
 T vgui::Panel::NavigateFrom()
 T vgui::Panel::NavigateLeft()
 T vgui::Panel::NavigateRight()
 T vgui::Panel::NavigateTo()
 T vgui::Panel::NavigateToChild(vgui::Panel*)
 T vgui::Panel::NavigateUp()
 T vgui::Panel::OnChildAdded(unsigned int)
 T vgui::Panel::OnCommand(char const*)
 T vgui::Panel::OnContinueDragging()
 T vgui::Panel::OnCreateDragData(KeyValues*)
 T vgui::Panel::OnCursorEntered()
 T vgui::Panel::OnCursorExited()
 T vgui::Panel::OnCursorMoved(int, int)
 T vgui::Panel::OnDelete()
 T vgui::Panel::OnDragFailed(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnDraggablePanelPaint()
 T vgui::Panel::OnDropContextHoverHide(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnDropContextHoverShow(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnDroppablePanelPaint(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&, CUtlVector<vgui::Panel*, CUtlMemory<vgui::Panel*, int> >&)
 T vgui::Panel::OnFinishDragging(bool, ButtonCode_t, bool)
 T vgui::Panel::OnGetAdditionalDragPanels(CUtlVector<vgui::Panel*, CUtlMemory<vgui::Panel*, int> >&)
 T vgui::Panel::OnKeyCodePressed(ButtonCode_t)
 T vgui::Panel::OnKeyCodeReleased(ButtonCode_t)
 T vgui::Panel::OnKeyCodeTyped(ButtonCode_t)
 T vgui::Panel::OnKeyFocusTicked()
 T vgui::Panel::OnKeyTyped(wchar_t)
 T vgui::Panel::OnKillFocus()
 T vgui::Panel::OnMessage(KeyValues const*, unsigned int)
 T vgui::Panel::OnMouseCaptureLost()
 T vgui::Panel::OnMouseDoublePressed(ButtonCode_t)
 T vgui::Panel::OnMouseFocusTicked()
 T vgui::Panel::OnMousePressed(ButtonCode_t)
 T vgui::Panel::OnMouseReleased(ButtonCode_t)
 T vgui::Panel::OnMouseTriplePressed(ButtonCode_t)
 T vgui::Panel::OnMouseWheeled(int)
 T vgui::Panel::OnMove()
 T vgui::Panel::OnNavigateFrom(char const*)
 T vgui::Panel::OnNavigateTo(char const*)
 T vgui::Panel::OnOldMessage(KeyValues*, unsigned int)
 T vgui::Panel::OnPanelDropped(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnPanelEnteredDroppablePanel(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnPanelExitedDroppablePanel(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnRequestFocus(unsigned int, unsigned int)
 T vgui::Panel::OnScreenSizeChanged(int, int)
 T vgui::Panel::OnSetFocus()
 T vgui::Panel::OnSizeChanged(int, int)
 T vgui::Panel::OnStartDragging()
 T vgui::Panel::OnThink()
 T vgui::Panel::OnTick()
 T vgui::Panel::OnUnserialized(CDmxElement*)
 T vgui::Panel::Paint()
 T vgui::Panel::PaintBackground()
 T vgui::Panel::PaintBorder()
 T vgui::Panel::PaintBuildOverlay()
 T vgui::Panel::PaintTraverse(bool, bool)
 T vgui::Panel::Panel()
 T vgui::Panel::Panel(vgui::Panel*)
 T vgui::Panel::Panel(vgui::Panel*, char const*)
 T vgui::Panel::ParentLocalToScreen(int&, int&)
 T vgui::Panel::PerformApplySchemeSettings()
 T vgui::Panel::PerformLayout()
 T vgui::Panel::PinToSibling(char const*, vgui::Panel::PinCorner_e, vgui::Panel::PinCorner_e)
 T vgui::Panel::PostActionSignal(KeyValues*)
 T vgui::Panel::PostChildPaint()
 T vgui::Panel::PostMessage(unsigned int, KeyValues*, float)
 T vgui::Panel::PostMessage(vgui::Panel*, KeyValues*, float)
 T vgui::Panel::PostMessageToChild(char const*, KeyValues*)
 T vgui::Panel::PreparePanelMap(vgui::PanelMap_t*)
 T vgui::Panel::QueryInterface(vgui::EInterfaceID)
 T vgui::Panel::RemoveActionSignalTarget(vgui::Panel*)
 T vgui::Panel::Repaint()
 T vgui::Panel::RequestFocus(int)
 T vgui::Panel::RequestFocusNext(unsigned int)
 T vgui::Panel::RequestFocusPrev(unsigned int)
 T vgui::Panel::RequestInfo(KeyValues*)
 T vgui::Panel::RequestInfoFromChild(char const*, KeyValues*)
 T vgui::Panel::ScreenToLocal(int&, int&)
 T vgui::Panel::SetAllowKeyBindingChainToParent(bool)
 T vgui::Panel::SetAlpha(int)
 T vgui::Panel::SetAutoDelete(bool)
 T vgui::Panel::SetBgColor(Color)
 T vgui::Panel::SetBlockDragChaining(bool)
 T vgui::Panel::SetBorder(vgui::IBorder*)
 T vgui::Panel::SetBounds(int, int, int, int)
 T vgui::Panel::SetBuildGroup(vgui::BuildGroup*)
 T vgui::Panel::SetBuildModeDeletable(bool)
 T vgui::Panel::SetBuildModeEditable(bool)
 T vgui::Panel::SetCursor(unsigned long)
 T vgui::Panel::SetDragEnabled(bool)
 T vgui::Panel::SetDragSTartTolerance(int)
 T vgui::Panel::SetDropEnabled(bool, float)
 T vgui::Panel::SetEnabled(bool)
 T vgui::Panel::SetFgColor(Color)
 T vgui::Panel::SetInfo(KeyValues*)
 T vgui::Panel::SetKeyBindingsContext(vgui::KeyBindingContextHandle_t)
 T vgui::Panel::SetKeyBoardInputEnabled(bool)
 T vgui::Panel::SetMessageContextId_R(int)
 T vgui::Panel::SetMinimumSize(int, int)
 T vgui::Panel::SetMouseInputEnabled(bool)
 T vgui::Panel::SetName(char const*)
 T vgui::Panel::SetOverridableColor(Color*, Color const&)
 T vgui::Panel::SetPaintBackgroundEnabled(bool)
 T vgui::Panel::SetPaintBackgroundType(int)
 T vgui::Panel::SetPaintBorderEnabled(bool)
 T vgui::Panel::SetPaintEnabled(bool)
 T vgui::Panel::SetParent(unsigned int)
 T vgui::Panel::SetParent(vgui::Panel*)
 T vgui::Panel::SetPos(int, int)
 T vgui::Panel::SetPostChildPaintEnabled(bool)
 T vgui::Panel::SetProportional(bool)
 T vgui::Panel::SetScheme(char const*)
 T vgui::Panel::SetScheme(unsigned long)
 T vgui::Panel::SetShowDragHelper(bool)
 T vgui::Panel::SetSilentMode(bool)
 T vgui::Panel::SetSize(int, int)
 T vgui::Panel::SetSkipChildDuringPainting(vgui::Panel*)
 T vgui::Panel::SetTabPosition(int)
 T vgui::Panel::SetTall(int)
 T vgui::Panel::SetTriplePressAllowed(bool)
 T vgui::Panel::SetVisible(bool)
 T vgui::Panel::SetWide(int)
 T vgui::Panel::SetZPos(int)
 T vgui::Panel::Think()
 T vgui::Panel::ToHandle() const
 T vgui::Panel::UpdateSiblingPin()
 T vgui::Panel::~Panel()
 T vgui::PanelListPanel::AddItem(vgui::Panel*, vgui::Panel*)
 T vgui::PanelListPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::PanelListPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::PanelListPanel::ApplySettings(KeyValues*)
 T vgui::PanelListPanel::ComputeVPixelsNeeded()
 T vgui::PanelListPanel::DeleteAllItems()
 T vgui::PanelListPanel::GetAnimMap()
 T vgui::PanelListPanel::GetCellRenderer(int)
 T vgui::PanelListPanel::GetDescription()
 T vgui::PanelListPanel::GetItemLabel(int)
 T vgui::PanelListPanel::GetItemPanel(int)
 T vgui::PanelListPanel::GetKBMap()
 T vgui::PanelListPanel::GetMessageMap()
 T vgui::PanelListPanel::GetPanelClassName()
 T vgui::PanelListPanel::GetSettings(KeyValues*)
 T vgui::PanelListPanel::MoveScrollBarToTop()
 T vgui::PanelListPanel::OnMouseWheeled(int)
 T vgui::PanelListPanel::OnSizeChanged(int, int)
 T vgui::PanelListPanel::OnSliderMoved(int)
 T vgui::PanelListPanel::PanelListPanel(vgui::Panel*, char const*)
 T vgui::PanelListPanel::PerformLayout()
 T vgui::PanelListPanel::RemoveAll()
 T vgui::PanelListPanel::RemoveItem(int)
 T vgui::PanelListPanel::~PanelListPanel()
 T vgui::ProgressBar::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ProgressBar::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ProgressBar::ApplySettings(KeyValues*)
 T vgui::ProgressBar::GetAnimMap()
 T vgui::ProgressBar::GetDescription()
 T vgui::ProgressBar::GetKBMap()
 T vgui::ProgressBar::GetMessageMap()
 T vgui::ProgressBar::GetPanelClassName()
 T vgui::ProgressBar::GetProgress()
 T vgui::ProgressBar::GetSettings(KeyValues*)
 T vgui::ProgressBar::OnDialogVariablesChanged(KeyValues*)
 T vgui::ProgressBar::Paint()
 T vgui::ProgressBar::PaintBackground()
 T vgui::ProgressBar::PaintSegment(int&, int&, int, int)
 T vgui::ProgressBar::ProgressBar(vgui::Panel*, char const*)
 T vgui::ProgressBar::SetProgress(float)
 T vgui::ProgressBar::SetSegmentInfo(int, int)
 T vgui::ProgressBar::~ProgressBar()
 T vgui::RadioButton::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::RadioButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::RadioButton::ApplySettings(KeyValues*)
 T vgui::RadioButton::DoClick()
 T vgui::RadioButton::FindBestRadioButton(int)
 T vgui::RadioButton::GetAnimMap()
 T vgui::RadioButton::GetBorder(bool, bool, bool, bool)
 T vgui::RadioButton::GetDescription()
 T vgui::RadioButton::GetKBMap()
 T vgui::RadioButton::GetMessageMap()
 T vgui::RadioButton::GetPanelClassName()
 T vgui::RadioButton::GetRadioTabPosition()
 T vgui::RadioButton::GetSettings(KeyValues*)
 T vgui::RadioButton::GetSubTabPosition()
 T vgui::RadioButton::OnKeyCodeTyped(ButtonCode_t)
 T vgui::RadioButton::OnRadioButtonChecked(int)
 T vgui::RadioButton::Paint()
 T vgui::RadioButton::PerformLayout()
 T vgui::RadioButton::RadioButton(vgui::Panel*, char const*, char const*)
 T vgui::RadioButton::SetSelected(bool)
 T vgui::RadioButton::SetSubTabPosition(int)
 T vgui::RadioButton::~RadioButton()
 T vgui::RichText::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::RichText::ApplySchemeSettings(vgui::IScheme*)
 T vgui::RichText::ApplySettings(KeyValues*)
 T vgui::RichText::CopySelected()
 T vgui::RichText::CreateEditMenu()
 T vgui::RichText::CursorToPixelSpace(int, int&, int&)
 T vgui::RichText::CutSelected()
 T vgui::RichText::DrawString(int, int, vgui::RichText::TRenderState&, unsigned long)
 T vgui::RichText::FinishingURL(int, int)
 T vgui::RichText::GetAnimMap()
 T vgui::RichText::GetDescription()
 T vgui::RichText::GetKBMap()
 T vgui::RichText::GetMessageMap()
 T vgui::RichText::GetPanelClassName()
 T vgui::RichText::GetSettings(KeyValues*)
 T vgui::RichText::GotoWordLeft()
 T vgui::RichText::GotoWordRight()
 T vgui::RichText::LayoutVerticalScrollBarSlider()
 T vgui::RichText::MoveScrollBar(int)
 T vgui::RichText::MoveScrollBarDirect(int)
 T vgui::RichText::OnClickPanel(int)
 T vgui::RichText::OnCursorEntered()
 T vgui::RichText::OnCursorExited()
 T vgui::RichText::OnCursorMoved(int, int)
 T vgui::RichText::OnKeyCodeTyped(ButtonCode_t)
 T vgui::RichText::OnKillFocus()
 T vgui::RichText::OnMouseCaptureLost()
 T vgui::RichText::OnMouseDoublePressed(ButtonCode_t)
 T vgui::RichText::OnMouseFocusTicked()
 T vgui::RichText::OnMousePressed(ButtonCode_t)
 T vgui::RichText::OnMouseReleased(ButtonCode_t)
 T vgui::RichText::OnMouseWheeled(int)
 T vgui::RichText::OnSetFocus()
 T vgui::RichText::OnSetText(wchar_t const*)
 T vgui::RichText::OnSizeChanged(int, int)
 T vgui::RichText::OnSliderMoved()
 T vgui::RichText::OnTextClicked(wchar_t const*)
 T vgui::RichText::OnThink()
 T vgui::RichText::OpenEditMenu()
 T vgui::RichText::Paint()
 T vgui::RichText::PerformLayout()
 T vgui::RichText::PixelToCursorSpace(int, int)
 T vgui::RichText::RecalculateDefaultState(int)
 T vgui::RichText::RecalculateLineBreaks()
 T vgui::RichText::RequestInfo(KeyValues*)
 T vgui::RichText::RichText(vgui::Panel*, char const*)
 T vgui::RichText::SetDrawOffsets(int, int)
 T vgui::RichText::SetFgColor(Color)
 T vgui::RichText::SetText(char const*)
 T vgui::RichText::SetText(wchar_t const*)
 T vgui::RichText::SetVerticalScrollbar(bool)
 T vgui::RichText::UpdateRenderState(int, vgui::RichText::TRenderState&)
 T vgui::RichText::~RichText()
 T vgui::RichTextInterior::ApplySchemeSettings(vgui::IScheme*)
 T vgui::RichTextInterior::GetAnimMap()
 T vgui::RichTextInterior::GetKBMap()
 T vgui::RichTextInterior::GetMessageMap()
 T vgui::RichTextInterior::GetPanelClassName()
 T vgui::RichTextInterior::RichTextInterior(vgui::RichText*, char const*)
 T vgui::RichTextInterior::~RichTextInterior()
 T vgui::ScalableImagePanel::ApplySettings(KeyValues*)
 T vgui::ScalableImagePanel::GetAnimMap()
 T vgui::ScalableImagePanel::GetDescription()
 T vgui::ScalableImagePanel::GetKBMap()
 T vgui::ScalableImagePanel::GetMessageMap()
 T vgui::ScalableImagePanel::GetPanelClassName()
 T vgui::ScalableImagePanel::GetSettings(KeyValues*)
 T vgui::ScalableImagePanel::PaintBackground()
 T vgui::ScalableImagePanel::PerformLayout()
 T vgui::ScalableImagePanel::ScalableImagePanel(vgui::Panel*, char const*)
 T vgui::ScalableImagePanel::SetImage(char const*)
 T vgui::ScalableImagePanel::~ScalableImagePanel()
 T vgui::ScrollBar::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T vgui::ScrollBar::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ScrollBar::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ScrollBar::ApplySettings(KeyValues*)
 T vgui::ScrollBar::GetAnimMap()
 T vgui::ScrollBar::GetButton(int)
 T vgui::ScrollBar::GetKBMap()
 T vgui::ScrollBar::GetMessageMap()
 T vgui::ScrollBar::GetPanelClassName()
 T vgui::ScrollBar::GetRange(int&, int&)
 T vgui::ScrollBar::GetRangeWindow()
 T vgui::ScrollBar::GetSlider()
 T vgui::ScrollBar::GetValue()
 T vgui::ScrollBar::GetVar_m_bAutoHideButtons(vgui::Panel*)
 T vgui::ScrollBar::GetVar_m_bAutoHideSelf(vgui::Panel*)
 T vgui::ScrollBar::HasFullRange()
 T vgui::ScrollBar::IsVertical()
 T vgui::ScrollBar::OnMouseFocusTicked()
 T vgui::ScrollBar::OnSizeChanged(int, int)
 T vgui::ScrollBar::OnSliderMoved(int)
 T vgui::ScrollBar::OnSliderReleased(int)
 T vgui::ScrollBar::PerformLayout()
 T vgui::ScrollBar::RespondToScrollArrow(int)
 T vgui::ScrollBar::ScrollBar(vgui::Panel*, char const*, bool)
 T vgui::ScrollBar::SendScrollBarSliderReleasedMessage(int)
 T vgui::ScrollBar::SendSliderMoveMessage(int)
 T vgui::ScrollBar::SetButton(vgui::Button*, int)
 T vgui::ScrollBar::SetButtonPressedScrollValue(int)
 T vgui::ScrollBar::SetPaintBackgroundEnabled(bool)
 T vgui::ScrollBar::SetPaintBorderEnabled(bool)
 T vgui::ScrollBar::SetPaintEnabled(bool)
 T vgui::ScrollBar::SetRange(int, int)
 T vgui::ScrollBar::SetRangeWindow(int)
 T vgui::ScrollBar::SetScrollbarButtonsVisible(bool)
 T vgui::ScrollBar::SetSlider(vgui::ScrollBarSlider*)
 T vgui::ScrollBar::SetValue(int)
 T vgui::ScrollBar::UpdateButtonsForImages()
 T vgui::ScrollBar::UpdateSliderImages()
 T vgui::ScrollBar::Validate()
 T vgui::ScrollBar::~ScrollBar()
 T vgui::ScrollBarSlider::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ScrollBarSlider::GetAnimMap()
 T vgui::ScrollBarSlider::GetKBMap()
 T vgui::ScrollBarSlider::GetMessageMap()
 T vgui::ScrollBarSlider::GetNobPos(int&, int&)
 T vgui::ScrollBarSlider::GetPanelClassName()
 T vgui::ScrollBarSlider::GetRange(int&, int&)
 T vgui::ScrollBarSlider::GetRangeWindow()
 T vgui::ScrollBarSlider::GetValue()
 T vgui::ScrollBarSlider::HasFullRange()
 T vgui::ScrollBarSlider::IsMouseOverNob()
 T vgui::ScrollBarSlider::IsSliderVisible()
 T vgui::ScrollBarSlider::IsVertical()
 T vgui::ScrollBarSlider::OnCursorEntered()
 T vgui::ScrollBarSlider::OnCursorExited()
 T vgui::ScrollBarSlider::OnCursorMoved(int, int)
 T vgui::ScrollBarSlider::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ScrollBarSlider::OnMousePressed(ButtonCode_t)
 T vgui::ScrollBarSlider::OnMouseReleased(ButtonCode_t)
 T vgui::ScrollBarSlider::Paint()
 T vgui::ScrollBarSlider::PaintBackground()
 T vgui::ScrollBarSlider::PerformLayout()
 T vgui::ScrollBarSlider::RecomputeNobPosFromValue()
 T vgui::ScrollBarSlider::RecomputeValueFromNobPos()
 T vgui::ScrollBarSlider::ScrollBarSlider(vgui::Panel*, char const*, bool)
 T vgui::ScrollBarSlider::SendScrollBarSliderMovedMessage()
 T vgui::ScrollBarSlider::SendScrollBarSliderReleasedMessage()
 T vgui::ScrollBarSlider::SetButtonOffset(int)
 T vgui::ScrollBarSlider::SetRange(int, int)
 T vgui::ScrollBarSlider::SetRangeWindow(int)
 T vgui::ScrollBarSlider::SetSize(int, int)
 T vgui::ScrollBarSlider::SetValue(int)
 T vgui::ScrollBarSlider::~ScrollBarSlider()
 T vgui::TextEntry::AddAnotherLine(int&, int&)
 T vgui::TextEntry::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::TextEntry::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TextEntry::ApplySettings(KeyValues*)
 T vgui::TextEntry::Backspace()
 T vgui::TextEntry::CompositionString(wchar_t const*)
 T vgui::TextEntry::ConversionModeChanged(int)
 T vgui::TextEntry::CopySelected()
 T vgui::TextEntry::CreateEditMenu()
 T vgui::TextEntry::CursorToPixelSpace(int, int&, int&)
 T vgui::TextEntry::CutSelected()
 T vgui::TextEntry::Delete()
 T vgui::TextEntry::DeleteSelected()
 T vgui::TextEntry::DrawChar(wchar_t, unsigned long, int, int, int)
 T vgui::TextEntry::DrawCursor(int, int)
 T vgui::TextEntry::FireActionSignal()
 T vgui::TextEntry::GetAnimMap()
 T vgui::TextEntry::GetDescription()
 T vgui::TextEntry::GetDragPanel()
 T vgui::TextEntry::GetDropContextMenu(vgui::Menu*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TextEntry::GetKBMap()
 T vgui::TextEntry::GetMaximumCharCount()
 T vgui::TextEntry::GetMessageMap()
 T vgui::TextEntry::GetNumLines()
 T vgui::TextEntry::GetPanelClassName()
 T vgui::TextEntry::GetSelectedRange(int&, int&)
 T vgui::TextEntry::GetSettings(KeyValues*)
 T vgui::TextEntry::GetSizerMinimumSize(int&, int&)
 T vgui::TextEntry::GetStartDrawIndex(int&)
 T vgui::TextEntry::GetText(char*, int)
 T vgui::TextEntry::GetText(wchar_t*, int)
 T vgui::TextEntry::GetTextCursorPos()
 T vgui::TextEntry::GetTextLength() const
 T vgui::TextEntry::GetTextRange(char*, int, int)
 T vgui::TextEntry::GetTextRange(wchar_t*, int, int)
 T vgui::TextEntry::GetValueAsFloat()
 T vgui::TextEntry::GetValueAsInt()
 T vgui::TextEntry::GetYStart()
 T vgui::TextEntry::GotoDown()
 T vgui::TextEntry::GotoEndOfLine()
 T vgui::TextEntry::GotoFirstOfLine()
 T vgui::TextEntry::GotoLeft()
 T vgui::TextEntry::GotoRight()
 T vgui::TextEntry::GotoTextEnd()
 T vgui::TextEntry::GotoTextStart()
 T vgui::TextEntry::GotoUp()
 T vgui::TextEntry::GotoWordLeft()
 T vgui::TextEntry::GotoWordRight()
 T vgui::TextEntry::HideIMECandidates()
 T vgui::TextEntry::InsertChar(wchar_t)
 T vgui::TextEntry::InsertString(char const*)
 T vgui::TextEntry::InsertString(wchar_t*)
 T vgui::TextEntry::IsDroppable(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TextEntry::IsEditable()
 T vgui::TextEntry::IsMultiline()
 T vgui::TextEntry::IsTextFullySelected() const
 T vgui::TextEntry::LanguageChanged(int)
 T vgui::TextEntry::LayoutVerticalScrollBarSlider()
 T vgui::TextEntry::MoveCursor(int, int)
 T vgui::TextEntry::NeedsEllipses(unsigned long, int*)
 T vgui::TextEntry::OnCreateDragData(KeyValues*)
 T vgui::TextEntry::OnCursorEntered()
 T vgui::TextEntry::OnCursorExited()
 T vgui::TextEntry::OnCursorMoved(int, int)
 T vgui::TextEntry::OnKeyCodeTyped(ButtonCode_t)
 T vgui::TextEntry::OnKeyFocusTicked()
 T vgui::TextEntry::OnKeyTyped(wchar_t)
 T vgui::TextEntry::OnKillFocus()
 T vgui::TextEntry::OnMouseCaptureLost()
 T vgui::TextEntry::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TextEntry::OnMouseFocusTicked()
 T vgui::TextEntry::OnMousePressed(ButtonCode_t)
 T vgui::TextEntry::OnMouseReleased(ButtonCode_t)
 T vgui::TextEntry::OnMouseTriplePressed(ButtonCode_t)
 T vgui::TextEntry::OnMouseWheeled(int)
 T vgui::TextEntry::OnPanelDropped(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TextEntry::OnSetFocus()
 T vgui::TextEntry::OnSetState(int)
 T vgui::TextEntry::OnSetText(wchar_t const*)
 T vgui::TextEntry::OnSizeChanged(int, int)
 T vgui::TextEntry::OnSliderMoved()
 T vgui::TextEntry::OpenEditMenu()
 T vgui::TextEntry::PaintBackground()
 T vgui::TextEntry::Paste()
 T vgui::TextEntry::PerformLayout()
 T vgui::TextEntry::PixelToCursorSpace(int, int)
 T vgui::TextEntry::RecalculateLineBreaks()
 T vgui::TextEntry::RequestInfo(KeyValues*)
 T vgui::TextEntry::ResetCursorBlink()
 T vgui::TextEntry::SaveUndoState()
 T vgui::TextEntry::ScrollRight()
 T vgui::TextEntry::SelectAllText(bool)
 T vgui::TextEntry::SelectCheck(bool)
 T vgui::TextEntry::SelectNoText()
 T vgui::TextEntry::SelectNone()
 T vgui::TextEntry::SendNewLine(bool)
 T vgui::TextEntry::SentenceModeChanged(int)
 T vgui::TextEntry::SetAutoLocalize(bool)
 T vgui::TextEntry::SetAutoProgressOnHittingCharLimit(bool)
 T vgui::TextEntry::SetCatchEnterKey(bool)
 T vgui::TextEntry::SetCatchTabKey(bool)
 T vgui::TextEntry::SetCharAt(wchar_t, int)
 T vgui::TextEntry::SetDisabledBgColor(Color)
 T vgui::TextEntry::SetDrawWidth(int)
 T vgui::TextEntry::SetEditable(bool)
 T vgui::TextEntry::SetEnabled(bool)
 T vgui::TextEntry::SetFont(unsigned long)
 T vgui::TextEntry::SetHorizontalScrolling(bool)
 T vgui::TextEntry::SetMaximumCharCount(int)
 T vgui::TextEntry::SetMultiline(bool)
 T vgui::TextEntry::SetSelectionBgColor(Color const&)
 T vgui::TextEntry::SetSelectionTextColor(Color const&)
 T vgui::TextEntry::SetSelectionUnfocusedBgColor(Color const&)
 T vgui::TextEntry::SetTabSpaces(int)
 T vgui::TextEntry::SetText(char const*)
 T vgui::TextEntry::SetText(wchar_t const*)
 T vgui::TextEntry::SetTextHidden(bool)
 T vgui::TextEntry::SetToFullHeight()
 T vgui::TextEntry::SetToFullWidth()
 T vgui::TextEntry::SetUseFallbackFont(bool, unsigned long)
 T vgui::TextEntry::SetVerticalScrollbar(bool)
 T vgui::TextEntry::SetWrap(bool)
 T vgui::TextEntry::ShowIMECandidates()
 T vgui::TextEntry::TextEntry(vgui::Panel*, char const*)
 T vgui::TextEntry::Undo()
 T vgui::TextEntry::UpdateIMECandidates()
 T vgui::TextEntry::~TextEntry()
 T vgui::TextImage::GetContentSize(int&, int&)
 T vgui::TextImage::GetFont()
 T vgui::TextImage::GetText(char*, int)
 T vgui::TextImage::GetText(wchar_t*, int)
 T vgui::TextImage::GetTextSize(int&, int&)
 T vgui::TextImage::GetUnlocalizedText(char*, int)
 T vgui::TextImage::GetUnlocalizedTextSymbol()
 T vgui::TextImage::Paint()
 T vgui::TextImage::RecalculateCenterWrapIndents()
 T vgui::TextImage::RecalculateEllipsesPosition()
 T vgui::TextImage::RecalculateNewLinePositions()
 T vgui::TextImage::ResizeImageToContent()
 T vgui::TextImage::SetAllCaps(bool)
 T vgui::TextImage::SetCenterWrap(bool)
 T vgui::TextImage::SetDrawWidth(int)
 T vgui::TextImage::SetFont(unsigned long)
 T vgui::TextImage::SetNoShortcutSyntax(bool)
 T vgui::TextImage::SetSize(int, int)
 T vgui::TextImage::SetText(char const*)
 T vgui::TextImage::SetText(wchar_t const*, bool)
 T vgui::TextImage::SetUseAsianWordWrapping()
 T vgui::TextImage::SetUseFallbackFont(bool, unsigned long)
 T vgui::TextImage::SetWrap(bool)
 T vgui::TextImage::TextImage(char const*)
 T vgui::TextImage::TextImage(wchar_t const*)
 T vgui::TextImage::~TextImage()
 T vgui::TextTooltip::HideTooltip()
 T vgui::TextTooltip::PerformLayout()
 T vgui::TextTooltip::SetText(char const*)
 T vgui::TextTooltip::ShowTooltip(vgui::Panel*)
 T vgui::TextTooltip::SizeTextWindow()
 T vgui::TextTooltip::TextTooltip(vgui::Panel*, char const*)
 T vgui::ToggleButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ToggleButton::CanBeDefaultButton()
 T vgui::ToggleButton::DoClick()
 T vgui::ToggleButton::GetAnimMap()
 T vgui::ToggleButton::GetButtonFgColor()
 T vgui::ToggleButton::GetKBMap()
 T vgui::ToggleButton::GetMessageMap()
 T vgui::ToggleButton::GetPanelClassName()
 T vgui::ToggleButton::OnKeyCodePressed(ButtonCode_t)
 T vgui::ToggleButton::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ToggleButton::ToggleButton(vgui::Panel*, char const*, char const*)
 T vgui::ToggleButton::~ToggleButton()
 T vgui::TreeNode::AddChild(vgui::TreeNode*)
 T vgui::TreeNode::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::TreeNode::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TreeNode::CalculateVisibleMaxWidth()
 T vgui::TreeNode::ClosePreviousParents(vgui::TreeNode*)
 T vgui::TreeNode::CountVisibleIndex()
 T vgui::TreeNode::CountVisibleNodes()
 T vgui::TreeNode::FindChild(vgui::TreeNode*)
 T vgui::TreeNode::FindItemUnderMouse(int&, int&, int, int&, int, int)
 T vgui::TreeNode::FindNodesInRange_R(CUtlVector<vgui::TreeNode*, CUtlMemory<vgui::TreeNode*, int> >&, bool&, bool&, int, int)
 T vgui::TreeNode::GetAnimMap()
 T vgui::TreeNode::GetDropContextMenu(vgui::Menu*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNode::GetDropCursor(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNode::GetKBMap()
 T vgui::TreeNode::GetMessageMap()
 T vgui::TreeNode::GetPanelClassName()
 T vgui::TreeNode::HasParent(vgui::TreeNode*)
 T vgui::TreeNode::IsDragEnabled() const
 T vgui::TreeNode::IsDroppable(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNode::OnCreateDragData(KeyValues*)
 T vgui::TreeNode::OnGetAdditionalDragPanels(CUtlVector<vgui::Panel*, CUtlMemory<vgui::Panel*, int> >&)
 T vgui::TreeNode::OnKeyCodeTyped(ButtonCode_t)
 T vgui::TreeNode::OnLabelChanged(KeyValues*)
 T vgui::TreeNode::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TreeNode::OnMousePressed(ButtonCode_t)
 T vgui::TreeNode::OnMouseReleased(ButtonCode_t)
 T vgui::TreeNode::OnMouseWheeled(int)
 T vgui::TreeNode::OnPanelDropped(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNode::OnSetFocus()
 T vgui::TreeNode::Paint()
 T vgui::TreeNode::PaintBackground()
 T vgui::TreeNode::PerformLayout()
 T vgui::TreeNode::PositionAndSetVisibleNodes(int&, int&, int, int&)
 T vgui::TreeNode::RequestFocus(int)
 T vgui::TreeNode::SelectNextChild(vgui::TreeNode*)
 T vgui::TreeNode::SelectPrevChild(vgui::TreeNode*)
 T vgui::TreeNode::SetBgColor(Color)
 T vgui::TreeNode::SetFgColor(Color)
 T vgui::TreeNode::SetFont(unsigned long)
 T vgui::TreeNode::SetKeyValues(KeyValues*)
 T vgui::TreeNode::SetNodeExpanded(bool)
 T vgui::TreeNode::SetVisible(bool)
 T vgui::TreeNode::StepInto(bool)
 T vgui::TreeNode::StepOut(bool)
 T vgui::TreeNode::StepOver(bool)
 T vgui::TreeNode::TreeNode(vgui::Panel*, int, vgui::TreeView*)
 T vgui::TreeNode::~TreeNode()
 T vgui::TreeNodeDropPanel::GetAnimMap()
 T vgui::TreeNodeDropPanel::GetKBMap()
 T vgui::TreeNodeDropPanel::GetMessageMap()
 T vgui::TreeNodeDropPanel::GetPanelClassName()
 T vgui::TreeNodeDropPanel::IsDroppable(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNodeDropPanel::OnPanelDropped(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNodeDropPanel::TreeNodeDropPanel(vgui::Panel*, int, vgui::TreeView*)
 T vgui::TreeNodeDropPanel::~TreeNodeDropPanel()
 T vgui::TreeNodeImage::OnCursorMoved(int, int)
 T vgui::TreeNodeImage::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TreeNodeImage::OnMousePressed(ButtonCode_t)
 T vgui::TreeNodeImage::OnMouseWheeled(int)
 T vgui::TreeNodeImage::~TreeNodeImage()
 T vgui::TreeNodeText::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::TreeNodeText::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TreeNodeText::EnterEditingInPlace()
 T vgui::TreeNodeText::FinishEditingInPlace(bool)
 T vgui::TreeNodeText::GetAnimMap()
 T vgui::TreeNodeText::GetKBMap()
 T vgui::TreeNodeText::GetMessageMap()
 T vgui::TreeNodeText::GetPanelClassName()
 T vgui::TreeNodeText::IsKeyRebound(ButtonCode_t, int)
 T vgui::TreeNodeText::OnCursorMoved(int, int)
 T vgui::TreeNodeText::OnKeyCodeTyped(ButtonCode_t)
 T vgui::TreeNodeText::OnKillFocus()
 T vgui::TreeNodeText::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TreeNodeText::OnMousePressed(ButtonCode_t)
 T vgui::TreeNodeText::OnMouseReleased(ButtonCode_t)
 T vgui::TreeNodeText::OnMouseWheeled(int)
 T vgui::TreeNodeText::OnTextChanged()
 T vgui::TreeNodeText::OnTick()
 T vgui::TreeNodeText::PaintBackground()
 T vgui::TreeNodeText::TreeNodeText(vgui::Panel*, char const*, int, vgui::TreeView*)
 T vgui::TreeNodeText::~TreeNodeText()
 T vgui::TreeView::AddItem(KeyValues*, int)
 T vgui::TreeView::AddSelectedItem(int, bool, bool, bool)
 T vgui::TreeView::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::TreeView::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TreeView::CanCurrentlyEditLabel(int) const
 T vgui::TreeView::ClearSelection()
 T vgui::TreeView::ExpandItem(int, bool)
 T vgui::TreeView::FindNodesInRange(int, int, CUtlVector<int, CUtlMemory<int, int> >&)
 T vgui::TreeView::FirstItem() const
 T vgui::TreeView::GenerateChildrenOfNode(int)
 T vgui::TreeView::GenerateContextMenu(int, int, int)
 T vgui::TreeView::GenerateDragDataForItem(int, KeyValues*)
 T vgui::TreeView::GetAnimMap()
 T vgui::TreeView::GetChild(int, int)
 T vgui::TreeView::GetFirstSelectedItem() const
 T vgui::TreeView::GetFont()
 T vgui::TreeView::GetHighestItemID()
 T vgui::TreeView::GetItemCount()
 T vgui::TreeView::GetItemData(int) const
 T vgui::TreeView::GetItemDropContextMenu(int, vgui::Menu*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::GetItemDropCursor(int, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::GetItemParent(int) const
 T vgui::TreeView::GetKBMap()
 T vgui::TreeView::GetMessageMap()
 T vgui::TreeView::GetNextChildItemIndex(int)
 T vgui::TreeView::GetNumChildren(int)
 T vgui::TreeView::GetPanelClassName()
 T vgui::TreeView::GetPrevChildItemIndex(int)
 T vgui::TreeView::GetRootItemIndex()
 T vgui::TreeView::GetRowHeight()
 T vgui::TreeView::GetSelectedItem(int) const
 T vgui::TreeView::GetSelectedItemCount() const
 T vgui::TreeView::GetSelectedItemData(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::GetSelectedItems(CUtlVector<int, CUtlMemory<int, int> >&) const
 T vgui::TreeView::GetSelectedItemsForDrag(int, CUtlVector<int, CUtlMemory<int, int> >&)
 T vgui::TreeView::GetVBarInfo(int&, int&, bool&)
 T vgui::TreeView::InvalidItemID() const
 T vgui::TreeView::IsItemDroppable(int, bool, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::IsItemExpanded(int)
 T vgui::TreeView::IsItemIDValid(int)
 T vgui::TreeView::IsItemSelected(int) const
 T vgui::TreeView::IsLabelBeingEdited() const
 T vgui::TreeView::IsLabelEditingAllowed() const
 T vgui::TreeView::MakeItemVisible(int)
 T vgui::TreeView::ModifyItem(int, KeyValues*)
 T vgui::TreeView::NextItem(int) const
 T vgui::TreeView::OnContextMenuSelection(int)
 T vgui::TreeView::OnItemDropped(int, bool, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::OnLabelChanged(int, char const*, char const*)
 T vgui::TreeView::OnMousePressed(ButtonCode_t)
 T vgui::TreeView::OnMouseWheeled(int)
 T vgui::TreeView::OnSizeChanged(int, int)
 T vgui::TreeView::OnSliderMoved(int)
 T vgui::TreeView::PerformLayout()
 T vgui::TreeView::RangeSelectItems(int)
 T vgui::TreeView::RemoveAll()
 T vgui::TreeView::RemoveChildrenOfNode(int)
 T vgui::TreeView::RemoveItem(int, bool, bool)
 T vgui::TreeView::RemoveSelectedItem(int)
 T vgui::TreeView::SelectAll()
 T vgui::TreeView::SetAllowLabelEditing(bool)
 T vgui::TreeView::SetBgColor(Color)
 T vgui::TreeView::SetDragEnabledItems(bool)
 T vgui::TreeView::SetFont(unsigned long)
 T vgui::TreeView::SetImageList(vgui::ImageList*, bool)
 T vgui::TreeView::SetItemBgColor(int, Color const&)
 T vgui::TreeView::SetItemFgColor(int, Color const&)
 T vgui::TreeView::SetItemSelectionBgColor(int, Color const&)
 T vgui::TreeView::SetItemSelectionTextColor(int, Color const&)
 T vgui::TreeView::SetItemSelectionUnfocusedBgColor(int, Color const&)
 T vgui::TreeView::SetLabelEditingAllowed(int, bool)
 T vgui::TreeView::StartEditingLabel(int)
 T vgui::TreeView::TreeView(vgui::Panel*, char const*)
 T vgui::TreeView::~TreeView()
 T vgui::TreeViewSubPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TreeViewSubPanel::OnCursorMoved(int, int)
 T vgui::TreeViewSubPanel::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TreeViewSubPanel::OnMousePressed(ButtonCode_t)
 T vgui::TreeViewSubPanel::OnMouseWheeled(int)
 T vgui::TreeViewSubPanel::~TreeViewSubPanel()
 T vgui::URLLabel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::URLLabel::ApplySettings(KeyValues*)
 T vgui::URLLabel::GetAnimMap()
 T vgui::URLLabel::GetDescription()
 T vgui::URLLabel::GetKBMap()
 T vgui::URLLabel::GetMessageMap()
 T vgui::URLLabel::GetPanelClassName()
 T vgui::URLLabel::GetSettings(KeyValues*)
 T vgui::URLLabel::OnMousePressed(ButtonCode_t)
 T vgui::URLLabel::URLLabel(vgui::Panel*, char const*, char const*, char const*)
 T vgui::URLLabel::~URLLabel()
 T vgui::VPanelHandle::Get()
 T vgui::VPanelHandle::Set(unsigned int)
 T vgui_screenPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T virtualgroup_t::GetStudioHdr() const
 T void CCallQueueT<CTSQueue<CFunctor*, false, true> >::QueueCall<CBreakableProp*, CBreakableProp, void, Vector const&, Vector const&, QAngle const&, Vector, Vector, QAngle>(CBreakableProp*, void (CBreakableProp::*)(Vector const&, Vector const&, QAngle const&), Vector const&, Vector const&, QAngle const&)
 T void CCallQueueT<CTSQueue<CFunctor*, false, true> >::QueueCall<CPortal_Base2D*, CPortal_Base2D, void, CBaseEntity*, CBaseEntity*>(CPortal_Base2D*, void (CPortal_Base2D::*)(CBaseEntity*), CBaseEntity* const&)
 T void CDmxAttribute::UnserializeTypedElement<CUtlVector<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >, CUtlBinaryBlock>(bool&, CUtlBuffer&)
 T void CDmxAttribute::UnserializeTypedElement<CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >, CUtlString>(bool&, CUtlBuffer&)
 T void CDmxElement::UnpackBitfield<char>(char*, DmxElementUnpackStructure_t const*, CDmxAttribute const*) const
 T void CDmxElement::UnpackBitfield<short>(short*, DmxElementUnpackStructure_t const*, CDmxAttribute const*) const
 T void CNavMesh::StitchAreaIntoMesh<AreaSet>(CNavArea*, NavDirType, AreaSet&)
 T void CNavMesh::StitchAreaIntoMesh<IncrementallyGeneratedAreas>(CNavArea*, NavDirType, IncrementallyGeneratedAreas&)
 T void CUtlBuffer::GetType<double>(double&)
 T void CUtlBuffer::GetType<float>(float&)
 T void CUtlBuffer::GetType<int>(int&)
 T void CUtlBuffer::GetType<long long>(long long&)
 T void CUtlBuffer::GetType<short>(short&)
 T void CUtlBuffer::GetType<unsigned int>(unsigned int&)
 T void CUtlBuffer::GetType<unsigned short>(unsigned short&)
 T void CUtlBuffer::PutTypeBin<char>(char)
 T void IGameStatTracker::SubmitStat<SMPMapStats>(SMPMapStats&)
 T void ScriptDeduceFunctionSignature<CBaseAnimating*, CBaseAnimating, void, int, int>(ScriptFuncDescriptor_t*, CBaseAnimating*, void (CBaseAnimating::*)(int, int))
 T void ScriptDeduceFunctionSignature<CBaseEntity*, CBaseEntity, bool, char const*, Vector const&>(ScriptFuncDescriptor_t*, CBaseEntity*, bool (CBaseEntity::*)(char const*, Vector const&))
 T void ScriptDeduceFunctionSignature<CBaseEntity*, CBaseEntity, bool, char const*, char const*>(ScriptFuncDescriptor_t*, CBaseEntity*, bool (CBaseEntity::*)(char const*, char const*))
 T void ScriptDeduceFunctionSignature<CBaseEntity*, CBaseEntity, bool, char const*, float>(ScriptFuncDescriptor_t*, CBaseEntity*, bool (CBaseEntity::*)(char const*, float))
 T void ScriptDeduceFunctionSignature<CBaseEntity*, CBaseEntity, bool, char const*, int>(ScriptFuncDescriptor_t*, CBaseEntity*, bool (CBaseEntity::*)(char const*, int))
 T void ScriptDeduceFunctionSignature<CBaseEntity*, CBaseEntity, float, char const*, char const*>(ScriptFuncDescriptor_t*, CBaseEntity*, float (CBaseEntity::*)(char const*, char const*))
 T void ScriptDeduceFunctionSignature<CBaseEntity*, CBaseEntity, void, Vector const&, Vector const&>(ScriptFuncDescriptor_t*, CBaseEntity*, void (CBaseEntity::*)(Vector const&, Vector const&))
 T void ScriptDeduceFunctionSignature<CBaseEntity*, CBaseEntity, void, char const*, char const*>(ScriptFuncDescriptor_t*, CBaseEntity*, void (CBaseEntity::*)(char const*, char const*))
 T void ScriptDeduceFunctionSignature<CBaseEntity*, CBaseEntity, void, float, float, float>(ScriptFuncDescriptor_t*, CBaseEntity*, void (CBaseEntity::*)(float, float, float))
 T void ScriptDeduceFunctionSignature<CEnvEntityMaker*, CEnvEntityMaker, void, Vector const&, Vector const&>(ScriptFuncDescriptor_t*, CEnvEntityMaker*, void (CEnvEntityMaker::*)(Vector const&, Vector const&))
 T void ScriptDeduceFunctionSignature<CSceneEntity*, CSceneEntity, bool, char const*, char const*>(ScriptFuncDescriptor_t*, CSceneEntity*, bool (CSceneEntity::*)(char const*, char const*))
 T void ScriptDeduceFunctionSignature<CScriptEntityIterator*, CScriptEntityIterator, HSCRIPT__*, HSCRIPT__*, Vector const&, float>(ScriptFuncDescriptor_t*, CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(HSCRIPT__*, Vector const&, float))
 T void ScriptDeduceFunctionSignature<CScriptEntityIterator*, CScriptEntityIterator, HSCRIPT__*, HSCRIPT__*, char const*, Vector const&, float>(ScriptFuncDescriptor_t*, CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(HSCRIPT__*, char const*, Vector const&, float))
 T void ScriptDeduceFunctionSignature<CScriptEntityIterator*, CScriptEntityIterator, HSCRIPT__*, HSCRIPT__*, char const*>(ScriptFuncDescriptor_t*, CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(HSCRIPT__*, char const*))
 T void ScriptDeduceFunctionSignature<CScriptEntityIterator*, CScriptEntityIterator, HSCRIPT__*, char const*, Vector const&, float>(ScriptFuncDescriptor_t*, CScriptEntityIterator*, HSCRIPT__* (CScriptEntityIterator::*)(char const*, Vector const&, float))
 T void ScriptDeduceFunctionSignature<CTriggerCamera*, CTriggerCamera, void, int, float>(ScriptFuncDescriptor_t*, CTriggerCamera*, void (CTriggerCamera::*)(int, float))
 T void ScriptDeduceFunctionSignature<HSCRIPT__*, char const*, Vector const&, char const*, int>(ScriptFuncDescriptor_t*, HSCRIPT__* (*)(char const*, Vector const&, char const*, int))
 T void ScriptDeduceFunctionSignature<bool, char const*, HSCRIPT__*>(ScriptFuncDescriptor_t*, bool (*)(char const*, HSCRIPT__*))
 T void ScriptDeduceFunctionSignature<bool, int, int, int>(ScriptFuncDescriptor_t*, bool (*)(int, int, int))
 T void ScriptDeduceFunctionSignature<bool, int, int>(ScriptFuncDescriptor_t*, bool (*)(int, int))
 T void ScriptDeduceFunctionSignature<float, Vector const&, Vector const&, HSCRIPT__*>(ScriptFuncDescriptor_t*, float (*)(Vector const&, Vector const&, HSCRIPT__*))
 T void ScriptDeduceFunctionSignature<void, HSCRIPT__*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*>(ScriptFuncDescriptor_t*, void (*)(HSCRIPT__*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*))
 T void ScriptDeduceFunctionSignature<void, Vector const&, Vector const&, Vector const&, int, int, int, int, float>(ScriptFuncDescriptor_t*, void (*)(Vector const&, Vector const&, Vector const&, int, int, int, int, float))
 T void ScriptDeduceFunctionSignature<void, Vector const&, Vector const&, int, int, int, bool, float>(ScriptFuncDescriptor_t*, void (*)(Vector const&, Vector const&, int, int, int, bool, float))
 T void ScriptDeduceFunctionSignature<void, char const*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*>(ScriptFuncDescriptor_t*, void (*)(char const*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*))
 T void ScriptDeduceFunctionSignature<void, char const*, char const*, float>(ScriptFuncDescriptor_t*, void (*)(char const*, char const*, float))
 T void ScriptDeduceFunctionSignature<void, char const*, float>(ScriptFuncDescriptor_t*, void (*)(char const*, float))
 T void ScriptDeduceFunctionSignature<void, char const*, int>(ScriptFuncDescriptor_t*, void (*)(char const*, int))
 T void ScriptDeduceFunctionSignature<void, int, char const*>(ScriptFuncDescriptor_t*, void (*)(int, char const*))
 T void ScriptDeduceFunctionSignature<void, int, int>(ScriptFuncDescriptor_t*, void (*)(int, int))
 T void SearchSurroundingAreas<DrawSelectedSet>(CNavArea*, Vector const&, DrawSelectedSet&, float, unsigned int, int)
 T void SearchSurroundingAreas<PlaceFloodFillFunctor>(CNavArea*, Vector const&, PlaceFloodFillFunctor&, float, unsigned int, int)
 T void SearchSurroundingAreas<SelectCollector>(CNavArea*, Vector const&, SelectCollector&, float, unsigned int, int)
 T void std::_Destroy<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >**, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*> >(__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >**, __gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >**, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*>)
 T void std::_Destroy<__gnu_cxx::_Hashtable_node<std::string>**, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*> >(__gnu_cxx::_Hashtable_node<std::string>**, __gnu_cxx::_Hashtable_node<std::string>**, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*>)
 T void std::_Destroy<__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >**, std::vector<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*> > >, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*> >(__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >**, std::vector<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*> > >, __gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >**, std::vector<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*> > >, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*>)
 T void std::_Destroy<__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::string>**, std::vector<__gnu_cxx::_Hashtable_node<std::string>*, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*> > >, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*> >(__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::string>**, std::vector<__gnu_cxx::_Hashtable_node<std::string>*, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*> > >, __gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::string>**, std::vector<__gnu_cxx::_Hashtable_node<std::string>*, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*> > >, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*>)
 T void std::_Destroy<__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, std::allocator<char const*> >(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, __gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, std::allocator<char const*>)
 T void std::_Destroy<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, std::allocator<int> >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, std::allocator<int>)
 T void std::_Destroy<__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, std::allocator<std::string*> >(__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, __gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, std::allocator<std::string*>)
 T void std::_Destroy<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::allocator<std::string> >(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::allocator<std::string>)
 T void std::_Destroy<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, std::allocator<void (*)()> >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, std::allocator<void (*)()>)
 T void std::_Destroy<__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, std::allocator<void*> >(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, __gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, std::allocator<void*>)
 T void std::_Destroy<char const**, std::allocator<char const*> >(char const**, char const**, std::allocator<char const*>)
 T void std::_Destroy<int*, std::allocator<int> >(int*, int*, std::allocator<int>)
 T void std::_Destroy<std::string**, std::allocator<std::string*> >(std::string**, std::string**, std::allocator<std::string*>)
 T void std::_Destroy<std::string*, std::allocator<std::string> >(std::string*, std::string*, std::allocator<std::string>)
 T void std::_Destroy<void (**)(), std::allocator<void (*)()> >(void (**)(), void (**)(), std::allocator<void (*)()>)
 T void std::_Destroy<void**, std::allocator<void*> >(void**, void**, std::allocator<void*>)
 T void std::__uninitialized_fill_n_a<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >**, unsigned long, __gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*, __gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*>(__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >**, unsigned long, __gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >* const&, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*>)
 T void std::__uninitialized_fill_n_a<__gnu_cxx::_Hashtable_node<std::string>**, unsigned long, __gnu_cxx::_Hashtable_node<std::string>*, __gnu_cxx::_Hashtable_node<std::string>*>(__gnu_cxx::_Hashtable_node<std::string>**, unsigned long, __gnu_cxx::_Hashtable_node<std::string>* const&, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*>)
 T void std::__uninitialized_fill_n_a<__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >**, std::vector<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*> > >, unsigned long, __gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*, __gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*>(__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >**, std::vector<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*> > >, unsigned long, __gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >* const&, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*>)
 T void std::__uninitialized_fill_n_a<__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::string>**, std::vector<__gnu_cxx::_Hashtable_node<std::string>*, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*> > >, unsigned long, __gnu_cxx::_Hashtable_node<std::string>*, __gnu_cxx::_Hashtable_node<std::string>*>(__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::string>**, std::vector<__gnu_cxx::_Hashtable_node<std::string>*, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*> > >, unsigned long, __gnu_cxx::_Hashtable_node<std::string>* const&, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*>)
 T void std::__uninitialized_fill_n_a<__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, unsigned long, std::string*, std::string*>(__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, unsigned long, std::string* const&, std::allocator<std::string*>)
 T void std::__uninitialized_fill_n_a<__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, unsigned long, void*, void*>(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, unsigned long, void* const&, std::allocator<void*>)
 T void std::__uninitialized_fill_n_a<std::string**, unsigned long, std::string*, std::string*>(std::string**, unsigned long, std::string* const&, std::allocator<std::string*>)
 T void std::__uninitialized_fill_n_a<void**, unsigned long, void*, void*>(void**, unsigned long, void* const&, std::allocator<void*>)
 T void std::fill<__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >**, std::vector<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*> > >, __gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*>(__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >**, std::vector<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*> > >, __gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >**, std::vector<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >*> > >, __gnu_cxx::_Hashtable_node<std::pair<char const* const, void (*)(std::string const&)> >* const&)
 T void std::fill<__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::string>**, std::vector<__gnu_cxx::_Hashtable_node<std::string>*, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*> > >, __gnu_cxx::_Hashtable_node<std::string>*>(__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::string>**, std::vector<__gnu_cxx::_Hashtable_node<std::string>*, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*> > >, __gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::string>**, std::vector<__gnu_cxx::_Hashtable_node<std::string>*, std::allocator<__gnu_cxx::_Hashtable_node<std::string>*> > >, __gnu_cxx::_Hashtable_node<std::string>* const&)
 T void std::fill<__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, std::string*>(__gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, __gnu_cxx::__normal_iterator<std::string**, std::vector<std::string*, std::allocator<std::string*> > >, std::string* const&)
 T void std::fill<__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, void*>(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, __gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, void* const&)
 T void** std::fill_n<void**, unsigned long, void*>(void**, unsigned long, void* const&)
 T weapon_portalgunPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T weapon_promo_antenna_ballPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T weapon_promo_antenna_eggPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T weapon_promo_helmet_ballPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T weapon_promo_helmet_eggPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 T wearable_itemPrecache::CResourcePrecacher::Cache(IPrecacheHandler*, bool, ResourceList_t__*, bool)
 ThreadGetCurrentId
 ThreadInterlockedAssignIf64
 ThreadSleep
 V_UTF8_strncpy
 V_UnicodeToUTF8
 Warning
 WriteMiniDump
 _DefaultRuneLocale
 _ExitOnFatalAssert
 _Unwind_Resume
 __cxa_atexit
 __cxa_begin_catch
 __cxa_call_unexpected
 __cxa_end_catch
 __cxa_guard_abort
 __cxa_guard_acquire
 __cxa_guard_release
 __cxa_rethrow
 __divdi3
 __dynamic_cast
 __error
 __fixunssfdi
 __gnu_cxx::__exchange_and_add(int volatile*, int)
 __gxx_personality_v0
 __maskrune
 __moddi3
 __stack_chk_fail
 __stack_chk_guard
 __stderrp
 __tolower
 __toupper
 __udivdi3
 abort
 acos
 acosf
 asctime
 asin
 atan
 atan2
 atan2f
 atof
 atoi
 b (anonymous namespace)::CCommunity_GamePersonalDataCategoryInfo_descriptor_
 b (anonymous namespace)::CCommunity_GamePersonalDataCategoryInfo_reflection_
 b (anonymous namespace)::CCommunity_GetGamePersonalDataCategories_Request_descriptor_
 b (anonymous namespace)::CCommunity_GetGamePersonalDataCategories_Request_reflection_
 b (anonymous namespace)::CCommunity_GetGamePersonalDataCategories_Response_descriptor_
 b (anonymous namespace)::CCommunity_GetGamePersonalDataCategories_Response_reflection_
 b (anonymous namespace)::CCommunity_GetGamePersonalDataEntries_Request_descriptor_
 b (anonymous namespace)::CCommunity_GetGamePersonalDataEntries_Request_reflection_
 b (anonymous namespace)::CCommunity_GetGamePersonalDataEntries_Response_descriptor_
 b (anonymous namespace)::CCommunity_GetGamePersonalDataEntries_Response_reflection_
 b (anonymous namespace)::CCommunity_TerminateGamePersonalDataEntries_Request_descriptor_
 b (anonymous namespace)::CCommunity_TerminateGamePersonalDataEntries_Request_reflection_
 b (anonymous namespace)::CCommunity_TerminateGamePersonalDataEntries_Response_descriptor_
 b (anonymous namespace)::CCommunity_TerminateGamePersonalDataEntries_Response_reflection_
 b (anonymous namespace)::CGCMsgGetIPLocationResponse_descriptor_
 b (anonymous namespace)::CGCMsgGetIPLocationResponse_reflection_
 b (anonymous namespace)::CGCMsgGetIPLocation_descriptor_
 b (anonymous namespace)::CGCMsgGetIPLocation_reflection_
 b (anonymous namespace)::CGCMsgGetSystemStatsResponse_descriptor_
 b (anonymous namespace)::CGCMsgGetSystemStatsResponse_reflection_
 b (anonymous namespace)::CGCMsgGetSystemStats_descriptor_
 b (anonymous namespace)::CGCMsgGetSystemStats_reflection_
 b (anonymous namespace)::CGCMsgMemCachedDelete_descriptor_
 b (anonymous namespace)::CGCMsgMemCachedDelete_reflection_
 b (anonymous namespace)::CGCMsgMemCachedGetResponse_ValueTag_descriptor_
 b (anonymous namespace)::CGCMsgMemCachedGetResponse_ValueTag_reflection_
 b (anonymous namespace)::CGCMsgMemCachedGetResponse_descriptor_
 b (anonymous namespace)::CGCMsgMemCachedGetResponse_reflection_
 b (anonymous namespace)::CGCMsgMemCachedGet_descriptor_
 b (anonymous namespace)::CGCMsgMemCachedGet_reflection_
 b (anonymous namespace)::CGCMsgMemCachedSet_KeyPair_descriptor_
 b (anonymous namespace)::CGCMsgMemCachedSet_KeyPair_reflection_
 b (anonymous namespace)::CGCMsgMemCachedSet_descriptor_
 b (anonymous namespace)::CGCMsgMemCachedSet_reflection_
 b (anonymous namespace)::CGCMsgSystemStatsSchema_descriptor_
 b (anonymous namespace)::CGCMsgSystemStatsSchema_reflection_
 b (anonymous namespace)::CGCStorePurchaseInit_LineItem_descriptor_
 b (anonymous namespace)::CGCStorePurchaseInit_LineItem_reflection_
 b (anonymous namespace)::CIPLocationInfo_descriptor_
 b (anonymous namespace)::CIPLocationInfo_reflection_
 b (anonymous namespace)::CMsgAMAddFreeLicenseResponse_descriptor_
 b (anonymous namespace)::CMsgAMAddFreeLicenseResponse_reflection_
 b (anonymous namespace)::CMsgAMAddFreeLicense_descriptor_
 b (anonymous namespace)::CMsgAMAddFreeLicense_reflection_
 b (anonymous namespace)::CMsgAMFindAccountsResponse_descriptor_
 b (anonymous namespace)::CMsgAMFindAccountsResponse_reflection_
 b (anonymous namespace)::CMsgAMFindAccounts_descriptor_
 b (anonymous namespace)::CMsgAMFindAccounts_reflection_
 b (anonymous namespace)::CMsgAMGetLicensesResponse_descriptor_
 b (anonymous namespace)::CMsgAMGetLicensesResponse_reflection_
 b (anonymous namespace)::CMsgAMGetLicenses_descriptor_
 b (anonymous namespace)::CMsgAMGetLicenses_reflection_
 b (anonymous namespace)::CMsgAMGetUserGameStatsResponse_Achievement_Blocks_descriptor_
 b (anonymous namespace)::CMsgAMGetUserGameStatsResponse_Achievement_Blocks_reflection_
 b (anonymous namespace)::CMsgAMGetUserGameStatsResponse_Stats_descriptor_
 b (anonymous namespace)::CMsgAMGetUserGameStatsResponse_Stats_reflection_
 b (anonymous namespace)::CMsgAMGetUserGameStatsResponse_descriptor_
 b (anonymous namespace)::CMsgAMGetUserGameStatsResponse_reflection_
 b (anonymous namespace)::CMsgAMGetUserGameStats_descriptor_
 b (anonymous namespace)::CMsgAMGetUserGameStats_reflection_
 b (anonymous namespace)::CMsgAMSendEmailResponse_descriptor_
 b (anonymous namespace)::CMsgAMSendEmailResponse_reflection_
 b (anonymous namespace)::CMsgAMSendEmail_PersonaNameReplacementToken_descriptor_
 b (anonymous namespace)::CMsgAMSendEmail_PersonaNameReplacementToken_reflection_
 b (anonymous namespace)::CMsgAMSendEmail_ReplacementToken_descriptor_
 b (anonymous namespace)::CMsgAMSendEmail_ReplacementToken_reflection_
 b (anonymous namespace)::CMsgAMSendEmail_descriptor_
 b (anonymous namespace)::CMsgAMSendEmail_reflection_
 b (anonymous namespace)::CMsgAdjustItemEquippedState_descriptor_
 b (anonymous namespace)::CMsgAdjustItemEquippedState_reflection_
 b (anonymous namespace)::CMsgCommunityMapAddQueueHistoryEntry_descriptor_
 b (anonymous namespace)::CMsgCommunityMapAddQueueHistoryEntry_reflection_
 b (anonymous namespace)::CMsgCommunityMapItemVoteSummaryResponse_descriptor_
 b (anonymous namespace)::CMsgCommunityMapItemVoteSummaryResponse_reflection_
 b (anonymous namespace)::CMsgCommunityMapItemVoteSummary_descriptor_
 b (anonymous namespace)::CMsgCommunityMapItemVoteSummary_reflection_
 b (anonymous namespace)::CMsgConVarValue_descriptor_
 b (anonymous namespace)::CMsgConVarValue_reflection_
 b (anonymous namespace)::CMsgDevDebugRollLootRequest_descriptor_
 b (anonymous namespace)::CMsgDevDebugRollLootRequest_reflection_
 b (anonymous namespace)::CMsgDevNewItemRequest_descriptor_
 b (anonymous namespace)::CMsgDevNewItemRequest_reflection_
 b (anonymous namespace)::CMsgGCClientDisplayNotification_descriptor_
 b (anonymous namespace)::CMsgGCClientDisplayNotification_reflection_
 b (anonymous namespace)::CMsgGCError_descriptor_
 b (anonymous namespace)::CMsgGCError_reflection_
 b (anonymous namespace)::CMsgGCGetCommandListResponse_descriptor_
 b (anonymous namespace)::CMsgGCGetCommandListResponse_reflection_
 b (anonymous namespace)::CMsgGCGetCommandList_descriptor_
 b (anonymous namespace)::CMsgGCGetCommandList_reflection_
 b (anonymous namespace)::CMsgGCGetEmailTemplateResponse_descriptor_
 b (anonymous namespace)::CMsgGCGetEmailTemplateResponse_reflection_
 b (anonymous namespace)::CMsgGCGetEmailTemplate_descriptor_
 b (anonymous namespace)::CMsgGCGetEmailTemplate_reflection_
 b (anonymous namespace)::CMsgGCNameItemNotification_descriptor_
 b (anonymous namespace)::CMsgGCNameItemNotification_reflection_
 b (anonymous namespace)::CMsgGCReportAbuseResponse_descriptor_
 b (anonymous namespace)::CMsgGCReportAbuseResponse_reflection_
 b (anonymous namespace)::CMsgGCReportAbuse_descriptor_
 b (anonymous namespace)::CMsgGCReportAbuse_reflection_
 b (anonymous namespace)::CMsgGCStorePurchaseInitResponse_descriptor_
 b (anonymous namespace)::CMsgGCStorePurchaseInitResponse_reflection_
 b (anonymous namespace)::CMsgGCStorePurchaseInit_descriptor_
 b (anonymous namespace)::CMsgGCStorePurchaseInit_reflection_
 b (anonymous namespace)::CMsgGameServerInfo_ServerType_descriptor_
 b (anonymous namespace)::CMsgGameServerInfo_descriptor_
 b (anonymous namespace)::CMsgGameServerInfo_reflection_
 b (anonymous namespace)::CMsgHttpRequest_QueryParam_descriptor_
 b (anonymous namespace)::CMsgHttpRequest_QueryParam_reflection_
 b (anonymous namespace)::CMsgHttpRequest_RequestHeader_descriptor_
 b (anonymous namespace)::CMsgHttpRequest_RequestHeader_reflection_
 b (anonymous namespace)::CMsgHttpRequest_descriptor_
 b (anonymous namespace)::CMsgHttpRequest_reflection_
 b (anonymous namespace)::CMsgHttpResponse_ResponseHeader_descriptor_
 b (anonymous namespace)::CMsgHttpResponse_ResponseHeader_reflection_
 b (anonymous namespace)::CMsgHttpResponse_descriptor_
 b (anonymous namespace)::CMsgHttpResponse_reflection_
 b (anonymous namespace)::CMsgIncrementKillCountAttribute_descriptor_
 b (anonymous namespace)::CMsgIncrementKillCountAttribute_reflection_
 b (anonymous namespace)::CMsgInvitationCreated_descriptor_
 b (anonymous namespace)::CMsgInvitationCreated_reflection_
 b (anonymous namespace)::CMsgInviteToParty_descriptor_
 b (anonymous namespace)::CMsgInviteToParty_reflection_
 b (anonymous namespace)::CMsgItemAcknowledged_descriptor_
 b (anonymous namespace)::CMsgItemAcknowledged_reflection_
 b (anonymous namespace)::CMsgKickFromParty_descriptor_
 b (anonymous namespace)::CMsgKickFromParty_reflection_
 b (anonymous namespace)::CMsgLeaveParty_descriptor_
 b (anonymous namespace)::CMsgLeaveParty_reflection_
 b (anonymous namespace)::CMsgNotifyWatchdog_descriptor_
 b (anonymous namespace)::CMsgNotifyWatchdog_reflection_
 b (anonymous namespace)::CMsgPackageLicense_descriptor_
 b (anonymous namespace)::CMsgPackageLicense_reflection_
 b (anonymous namespace)::CMsgPartyInviteResponse_descriptor_
 b (anonymous namespace)::CMsgPartyInviteResponse_reflection_
 b (anonymous namespace)::CMsgPlaytestMarkDemoForDelete_descriptor_
 b (anonymous namespace)::CMsgPlaytestMarkDemoForDelete_reflection_
 b (anonymous namespace)::CMsgPlaytestMarkDemoNotNew_descriptor_
 b (anonymous namespace)::CMsgPlaytestMarkDemoNotNew_reflection_
 b (anonymous namespace)::CMsgPlaytestRemoveDemo_descriptor_
 b (anonymous namespace)::CMsgPlaytestRemoveDemo_reflection_
 b (anonymous namespace)::CMsgPlaytestReportDemoSession_descriptor_
 b (anonymous namespace)::CMsgPlaytestReportDemoSession_reflection_
 b (anonymous namespace)::CMsgPlaytestReportDemo_descriptor_
 b (anonymous namespace)::CMsgPlaytestReportDemo_reflection_
 b (anonymous namespace)::CMsgPlaytestRetrieveDemoHandlesResponse_descriptor_
 b (anonymous namespace)::CMsgPlaytestRetrieveDemoHandlesResponse_reflection_
 b (anonymous namespace)::CMsgPlaytestRetrieveDemoHandles_descriptor_
 b (anonymous namespace)::CMsgPlaytestRetrieveDemoHandles_reflection_
 b (anonymous namespace)::CMsgPlaytestRetrieveDemoPlayersForMapResponse_descriptor_
 b (anonymous namespace)::CMsgPlaytestRetrieveDemoPlayersForMapResponse_reflection_
 b (anonymous namespace)::CMsgPlaytestRetrieveDemoPlayersForMap_descriptor_
 b (anonymous namespace)::CMsgPlaytestRetrieveDemoPlayersForMap_reflection_
 b (anonymous namespace)::CMsgPlaytestRetrieveNewDemoCountResponse_descriptor_
 b (anonymous namespace)::CMsgPlaytestRetrieveNewDemoCountResponse_reflection_
 b (anonymous namespace)::CMsgPlaytestTestMessage_descriptor_
 b (anonymous namespace)::CMsgPlaytestTestMessage_reflection_
 b (anonymous namespace)::CMsgProtoBufHeader_descriptor_
 b (anonymous namespace)::CMsgProtoBufHeader_reflection_
 b (anonymous namespace)::CMsgReplayUploadedToYouTube_descriptor_
 b (anonymous namespace)::CMsgReplayUploadedToYouTube_reflection_
 b (anonymous namespace)::CMsgReplicateConVars_descriptor_
 b (anonymous namespace)::CMsgReplicateConVars_reflection_
 b (anonymous namespace)::CMsgRequestInventoryRefresh_descriptor_
 b (anonymous namespace)::CMsgRequestInventoryRefresh_reflection_
 b (anonymous namespace)::CMsgRequestItemSchemaData_descriptor_
 b (anonymous namespace)::CMsgRequestItemSchemaData_reflection_
 b (anonymous namespace)::CMsgSOCacheSubscribed_SubscribedType_descriptor_
 b (anonymous namespace)::CMsgSOCacheSubscribed_SubscribedType_reflection_
 b (anonymous namespace)::CMsgSOCacheSubscribed_descriptor_
 b (anonymous namespace)::CMsgSOCacheSubscribed_reflection_
 b (anonymous namespace)::CMsgSOCacheSubscriptionCheck_descriptor_
 b (anonymous namespace)::CMsgSOCacheSubscriptionCheck_reflection_
 b (anonymous namespace)::CMsgSOCacheSubscriptionRefresh_descriptor_
 b (anonymous namespace)::CMsgSOCacheSubscriptionRefresh_reflection_
 b (anonymous namespace)::CMsgSOCacheUnsubscribed_descriptor_
 b (anonymous namespace)::CMsgSOCacheUnsubscribed_reflection_
 b (anonymous namespace)::CMsgSOCacheVersion_descriptor_
 b (anonymous namespace)::CMsgSOCacheVersion_reflection_
 b (anonymous namespace)::CMsgSOMultipleObjects_SingleObject_descriptor_
 b (anonymous namespace)::CMsgSOMultipleObjects_SingleObject_reflection_
 b (anonymous namespace)::CMsgSOMultipleObjects_descriptor_
 b (anonymous namespace)::CMsgSOMultipleObjects_reflection_
 b (anonymous namespace)::CMsgSOSingleObject_descriptor_
 b (anonymous namespace)::CMsgSOSingleObject_reflection_
 b (anonymous namespace)::CMsgSelectItemPresetForClassReply_descriptor_
 b (anonymous namespace)::CMsgSelectItemPresetForClassReply_reflection_
 b (anonymous namespace)::CMsgSelectItemPresetForClass_descriptor_
 b (anonymous namespace)::CMsgSelectItemPresetForClass_reflection_
 b (anonymous namespace)::CMsgServerAvailable_descriptor_
 b (anonymous namespace)::CMsgServerAvailable_reflection_
 b (anonymous namespace)::CMsgSetPresetItemPosition_descriptor_
 b (anonymous namespace)::CMsgSetPresetItemPosition_reflection_
 b (anonymous namespace)::CMsgSortItems_descriptor_
 b (anonymous namespace)::CMsgSortItems_reflection_
 b (anonymous namespace)::CMsgStoreGetUserDataResponse_descriptor_
 b (anonymous namespace)::CMsgStoreGetUserDataResponse_reflection_
 b (anonymous namespace)::CMsgStoreGetUserData_descriptor_
 b (anonymous namespace)::CMsgStoreGetUserData_reflection_
 b (anonymous namespace)::CMsgSystemBroadcast_descriptor_
 b (anonymous namespace)::CMsgSystemBroadcast_reflection_
 b (anonymous namespace)::CMsgUpdateItemSchema_descriptor_
 b (anonymous namespace)::CMsgUpdateItemSchema_reflection_
 b (anonymous namespace)::CMsgUpdatePeriodicEvent_descriptor_
 b (anonymous namespace)::CMsgUpdatePeriodicEvent_reflection_
 b (anonymous namespace)::CMsgUseItem_descriptor_
 b (anonymous namespace)::CMsgUseItem_reflection_
 b (anonymous namespace)::CMsgWebAPIKey_descriptor_
 b (anonymous namespace)::CMsgWebAPIKey_reflection_
 b (anonymous namespace)::CMsgWebAPIRequest_descriptor_
 b (anonymous namespace)::CMsgWebAPIRequest_reflection_
 b (anonymous namespace)::CSOEconClaimCode_descriptor_
 b (anonymous namespace)::CSOEconClaimCode_reflection_
 b (anonymous namespace)::CSOEconGameAccountClient_descriptor_
 b (anonymous namespace)::CSOEconGameAccountClient_reflection_
 b (anonymous namespace)::CSOEconItemAttribute_descriptor_
 b (anonymous namespace)::CSOEconItemAttribute_reflection_
 b (anonymous namespace)::CSOEconItemEquipped_descriptor_
 b (anonymous namespace)::CSOEconItemEquipped_reflection_
 b (anonymous namespace)::CSOEconItemPresetInstance_descriptor_
 b (anonymous namespace)::CSOEconItemPresetInstance_reflection_
 b (anonymous namespace)::CSOEconItem_descriptor_
 b (anonymous namespace)::CSOEconItem_reflection_
 b (anonymous namespace)::CSOItemCommunityMap_descriptor_
 b (anonymous namespace)::CSOItemCommunityMap_reflection_
 b (anonymous namespace)::CSOItemCriteriaCondition_descriptor_
 b (anonymous namespace)::CSOItemCriteriaCondition_reflection_
 b (anonymous namespace)::CSOItemCriteria_descriptor_
 b (anonymous namespace)::CSOItemCriteria_reflection_
 b (anonymous namespace)::CSOItemRecipe_descriptor_
 b (anonymous namespace)::CSOItemRecipe_reflection_
 b (anonymous namespace)::CSOLobbyInvite_descriptor_
 b (anonymous namespace)::CSOLobbyInvite_reflection_
 b (anonymous namespace)::CSOPartyInvite_descriptor_
 b (anonymous namespace)::CSOPartyInvite_reflection_
 b (anonymous namespace)::CSOSelectedItemPreset_descriptor_
 b (anonymous namespace)::CSOSelectedItemPreset_reflection_
 b (anonymous namespace)::__g_CreateCPlayerInfoManager_V1IPlayerInfoManager_V1_reg
 b ABS_UP
 b ACT_DOOR_LOCKED
 b ACT_DOOR_OPEN
 b AE_ACTBUSY_WEAPON_FIRE_OFF
 b AE_ACTBUSY_WEAPON_FIRE_ON
 b AIN_DEF_TARGET
 b AddMultiDamage(CTakeDamageInfo const&, CBaseEntity*)::warningCount
 b Bias(float, float)::lastExponent
 b CAI_BaseNPC::FindNamedEntity(char const*, IEntityFindFilter*)::playerwarningcount
 b CAI_BaseNPC::FindNamedEntity(char const*, IEntityFindFilter*)::selfwarningcount
 b CAI_BaseNPC::NPCThink()::timer
 b CAI_BaseNPC::RebalanceThinks()::iPrevTick
 b CAI_BaseNPC::RebalanceThinks()::nRebalanceableThinksInTick
 b CAI_BaseNPC::RebalanceThinks()::nThinksInTick
 b CAI_BaseNPC::RebalanceThinks()::rebalanceCandidates
 b CAI_BaseNPC::ResolveActivityToSequence(Activity, int&, Activity&, Activity&)::lastWarnActivity
 b CAI_BaseNPC::ResolveActivityToSequence(Activity, int&, Activity&, Activity&)::pLastWarn
 b CAI_BaseNPC::ResolveActivityToSequence(Activity, int&, Activity&, Activity&)::timeLastWarn
 b CAI_BaseNPC::TranslateActivity(Activity, Activity*)::sUniqueActivities
 b CAI_BaseNPC::UpdateEfficiency(bool)::vPlayerEyePosition
 b CAI_BaseNPC::UpdateEfficiency(bool)::vPlayerForward
 b CAI_BehaviorBase::GetBehaviorClassesInternal()::s_BehaviorClasses
 b CAI_NetworkEditTools::DrawAINetworkOverlay()::endDrawNode
 b CAI_NetworkEditTools::DrawAINetworkOverlay()::flDrawDuration
 b CAI_NetworkEditTools::DrawAINetworkOverlay()::startDrawNode
 b CAI_Path::BaseGoalPosition() const::vecResult
 b CAI_Pathfinder::CTriDebugOverlay::AddTriOverlayLine(Vector const&, Vector const&, int, int, int, bool)::overCounter
 b CAI_TacticalServices::FindCoverNode(Vector const&, Vector const&, Vector const&, float, float)::nSearchRandomizer
 b CAI_TacticalServices::FindLosNode(Vector const&, Vector const&, float, float, float, FlankType_t, Vector const&, float)::nSearchRandomizer
 b CBGSDriver
 b CBaseAnimating::ScriptGetAttachmentAngles(int)::absAngles
 b CBaseAnimating::ScriptGetAttachmentAngles(int)::absOrigin
 b CBaseAnimating::ScriptGetAttachmentAngles(int)::qa
 b CBaseAnimating::ScriptGetAttachmentOrigin(int)::absOrigin
 b CBaseAnimating::ScriptGetAttachmentOrigin(int)::qa
 b CBaseCombatCharacter::FindEntityRelationship(CBaseEntity*)::dummy
 b CBaseCombatWeapon::GetBulletSpread()::cone
 b CBaseEntity::FireBullets(FireBulletsInfo_t const&)::tracerCount
 b CBaseEntity::KeyValue(char const*, char const*)::szBuf
 b CBaseEntity::PhysicsDispatchThink(void (CBaseEntity::*)())::think_trace_limit
 b CBaseEntity::PrecacheModelComponents(int)::keyName
 b CBaseEntity::PrecacheModelComponents(int)::keyParticles
 b CBaseEntity::ScriptGetLocalAngularVelocity()::v
 b CBaseEntity::TakeDamage(CTakeDamageInfo const&)::warningCount
 b CBaseEntity::ValidateScriptScope()::__executeCount
 b CBaseFlex::FindSceneFile(char const*)::szExtendedName
 b CBaseFlex::FindSceneFile(char const*)::szExtendedPath
 b CBasePlayer::EyeAngles()::angEyeWorld
 b CBasePlayer::UpdateStepSound(surfacedata_t*, Vector const&, Vector const&)::iSkipStep
 b CBaseProp::ParsePropData()::keyPropData
 b CBeam::GetAbsEndPos() const::vecAbsPos
 b CC_CollisionTest(CCommand const&)::first
 b CC_CollisionTest(CCommand const&)::targets
 b CC_KDTreeTest(CCommand const&)::bFirst
 b CC_KDTreeTest(CCommand const&)::vecTargets
 b CC_Player_SetModel(CCommand const&)::szName
 b CChoreoEvent::GetDescription()::description
 b CCollisionProperty::CollisionToWorldTransform() const::s_matTemp
 b CCollisionProperty::CollisionToWorldTransform() const::s_nIndex
 b CCurveData::GetBoundedSample(ICurveDataAccessor*, int, bool&)::nullend
 b CCurveData::GetBoundedSample(ICurveDataAccessor*, int, bool&)::nullstart
 b CDataManagerBase::GetForFreeByIndex(unsigned short)::__executeCount
 b CEconItem::CustomAttributes() const::sEmptyVecAttributes
 b CEconItemSchema::GetItemDefinition(int)::s_pEmptyDefinition
 b CEnvInstructorHint::InputEndHint(inputdata_t&)::s_InstructorServerHintEventStop
 b CEnvInstructorHint::InputShowHint(inputdata_t&)::s_InstructorServerHintEventCreate
 b CEventLog::FormatPlayer(CBaseEntity*) const::s_buffer
 b CEventLog::FormatPlayer(CBaseEntity*) const::s_index
 b CFlexAnimationTrack::GetBoundedSample(int, bool&, int)::nullend
 b CFlexAnimationTrack::GetBoundedSample(int, bool&, int)::nullstart
 b CGameMovement::ProcessMovement(CBasePlayer*, CMoveData*)::_counter
 b CGib::~CGib()::__executeCount
 b CGrabController::UpdateObject(CBasePlayer*, float, bool)::flLastDelta
 b CKeyValuesDumpContextAsDevMsg::KvBeginKey(KeyValues*, int)::r_developer
 b CNPC_Bullseye::CanBeAnEnemyOf(CBaseEntity*)::flFullFov
 b CNPC_FloorTurret::PreferredCarryAngles()::g_prefAngles
 b CNPC_FloorTurret::Spawn()::nextSkin
 b CNPC_HoverTurret::PreferredCarryAngles()::g_prefAngles
 b CNPC_Portal_FloorTurret::GetAttackDamageScale(CBaseEntity*)::CEG_TURRET_FLOOR_DAMAGE_MULTIPLIER
 b CNPC_Portal_FloorTurret::Shoot(Vector const&, Vector const&, bool)::CEG_TURRET_FLOOR_BULLET_FORCE_MULTIPLIER
 b CNavArea::ComputeVisibilityDelta(CNavArea const*) const::delta
 b CNavArea::Draw() const::blink
 b CNavArea::Draw() const::blinkOn
 b CNavMesh::DrawEditMode()::host_thread_mode
 b CNavMesh::DrawEditMode()::sb_perf_collect
 b CNavMesh::GetFilename() const::filename
 b CNavMesh::GetNearestNavArea(Vector const&, bool, float, bool, bool) const::searchMarker
 b CNavMesh::UpdateGeneration(float)::host_thread_mode
 b CNavMesh::UpdateGeneration(float)::s_playerSettleTimer
 b CNavMesh::UpdateGeneration(float)::s_unlitAreas
 b CNavMesh::UpdateGeneration(float)::s_unlitSeedAreas
 b CNavNode::GetNode(Vector const&)::lookup
 b CPVS_Extender::ComputeExtendedPVS(CBaseEntity const*, Vector const&, unsigned char*, int, int)::s_PVSExtenderMutex
 b CPaintDatabase::PaintEntity(CBaseEntity*, PaintPowerType, Vector const&)::CEG_NO_POWER
 b CParticleSystemDefinition_UnpackInit::s_pUnpack
 b CPhysicsProp::GetCarryDistanceOffset()::keyPhysgunInteractions
 b CPhysicsProp::GetPropDataAngles(char const*, QAngle&)::keyPhysgunInteractions
 b CPhysicsProp::VPhysicsUpdate(IPhysicsObject*)::g_flLastPropFunnelTime
 b CPortalGameRules::CPortalGameRules()::flashlightbrightness
 b CPortalGameRules::RegisterScriptFunctions()::binding
 b CPortalLaser::BeamDamage(CGameTrace*)::CEG_LASER_DAMAGE_AMOUNT
 b CPortalMPGameRules::CPortalMPGameRules()::flashlightbrightness
 b CPortalMPGameRules::IsCoOp()::coop_ref
 b CPortalMPGameRules::LevelInitPreEntity()::flashlightbrightness
 b CPortalMPGameRules::RegisterScriptFunctions()::binding
 b CPortalPlayerAnimState::HandleMoving(Activity&)::CEG_SPEED_POWER
 b CPortalSimulator::CPortalSimulator()::s_iPortalSimulatorGUIDAllocator
 b CPortalStatsController::LevelStart(float)::map_wants_save_disable
 b CPortal_Player::IsTryingToSuperJump(PaintPowerInfo_t const*) const::CEG_SPEED_POWER
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyAIWalkable
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyAllowStatic
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBase
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBlockLOS
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBreakableCount
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBreakableModel
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBreakableSkin
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyDamageTable
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyDmgBullets
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyDmgClub
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyDmgExplosive
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyExplosiveDamage
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyExplosiveRadius
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyHealth
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyMultiplayerBreak
 b CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyPhysicsMode
 b CPropWeightedCube::PreferredCarryAngles()::s_prefAngles
 b CProp_Portal::Spawn()::s_bPortalLocatorForClientRegistered
 b CServerGameClients::ClientSettingsChanged(edict_t*)::pMax
 b CServerGameClients::ClientSettingsChanged(edict_t*)::pMaxUpdateRate
 b CServerGameClients::ClientSettingsChanged(edict_t*)::pMin
 b CServerGameClients::ClientSettingsChanged(edict_t*)::pMinUpdateRate
 b CServerGameDLL::ApplyGameSettings(KeyValues*)::coop_ref
 b CServerGameDLL::ApplyGameSettings(KeyValues*)::map_wants_save_disable
 b CServerGameDLL::ApplyGameSettings(KeyValues*)::moddir
 b CServerGameDLL::ApplyGameSettings(KeyValues*)::sv_bonus_challenge
 b CServerGameDLL::LevelInit(char const*, char const*, char const*, char const*, bool, bool)::map_wants_save_disable
 b CSkyboxSwapper::InputTrigger(inputdata_t&)::skyname
 b CStatueProp::CStatueProp()::vcollide_wireframe
 b CSteamID::Render() const::nBuf
 b CSteamID::Render() const::rgchBuf
 b CStudioHdr::CActivityToSequenceMapping::SelectWeightedSequence(CStudioHdr*, int, int)::__executeCount
 b CStudioHdr::GroupStudioHdr(int)::__executeCount
 b CTestTraceline::Spin()::traceline_spin
 b CTextStat::GetTextStatsList()::theList
 b CTriggerCatapult::CalculateLaunchVector(CBaseEntity*, CBaseEntity*)::CEG_CATAPULT_LAUNCH_VELOCITY_MULTIPLIER
 b CUtlSymbol::Initialize()::symbolsInitialized
 b CalcLocalHierarchyAnimation(CStudioHdr const*, matrix3x4a_t*, CBoneBitList&, Vector*, Quaternion*, mstudiobone_t const*, mstudiolocalhierarchy_t*, int, int, float, int, float, int)::rootXform
 b ClearAllNavAttributes
 b ConVarRef::Init(char const*, bool)::bFirst
 b CreateStuckTable()::firsttime
 b DEBUG_THINK_TRACE_COUNTER_ALLOWED()::bIsPublic
 b DEFAULT_PAINT_SURFACE_NORMAL
 b DEFAULT_SURFACE_NORMAL
 b DescribeAxis(int)::sz
 b DoUniqueString(char const*)::szBuf
 b EntityFactoryDictionary()::s_EntityFactory
 b EventSymbols
 b GCSDK::CJob::GetPauseReasonDescription() const::srgchPauseReason
 b GCSDK::GMapJobTypesByMsg()::s_MapJobTypes
 b GCSDK::GMapJobTypesByName()::s_MapJobTypes
 b GCSDK::GetPchTempTextBuffer()::s_irgchBuffer
 b GCSDK::GetPchTempTextBuffer()::s_rgtlsBuffers
 b GCSDK::InitGCSystemMessageTypes()::m_reg
 b GetAmmoDef()::bInitted
 b GetAmmoDef()::def
 b GetBspFilename(char const*)::bspFilename
 b GetMapName()::mapName
 b GetPanelAnimationDictionary()::dictionary
 b GetPanelMessageMapDictionary()::dictionary
 b GetPhysObjSaveRestoreOps(PhysInterfaceId_t)::inited
 b GetPropertyConverters()::g_AnimationPropertyConverters
 b GetSceneManager()::s_SceneManager
 b GetSequenceLinearMotion(CStudioHdr*, int, float const*, Vector*)::msgCount
 b IEconItemInterface::IsTradable() const::pAttrib_AlwaysTradable
 b IEconItemInterface::IsTradable() const::pAttrib_CannotTrade
 b IEconItemInterface::IsTradable() const::pAttrib_TradableAfter
 b IEconItemInterface::IsUsableInCrafting() const::pAttrib_AlwaysUsableInCraft
 b IEconTool::ShouldDisplayQuantity(IEconItemInterface const*) const::pAttrDef_UnlimitedQuantity
 b InitCBaseAnimatingScriptDesc()::bInitialized
 b InitCBaseEntityScriptDesc()::bInitialized
 b InitCBaseFlexScriptDesc()::bInitialized
 b InitCBaseMultiplayerPlayerScriptDesc()::bInitialized
 b InitCBasePlayerScriptDesc()::bInitialized
 b InitCEnvEntityMakerScriptDesc()::bInitialized
 b InitCLinkedPortalDoorScriptDesc()::bInitialized
 b InitCPlayerVoiceListenerScriptDesc()::bInitialized
 b InitCPortal_PlayerScriptDesc()::bInitialized
 b InitCPropLinkedPortalDoorScriptDesc()::bInitialized
 b InitCSceneEntityScriptDesc()::bInitialized
 b InitCScriptEntityIteratorScriptDesc()::bInitialized
 b InitCScriptKeyValuesScriptDesc()::bInitialized
 b InitCTriggerCameraScriptDesc()::bInitialized
 b IsTemporaryItem(IEconItemInterface const*)::pAttrib_ExpirationDate
 b ItemSystem()::pSystem
 b KeyValues::RecursiveSaveToFile(IBaseFileSystem*, void*, CUtlBuffer*, int)::buf
 b ListRecentNPCSpeechCmd
 b MissingSceneWarning(char const*)::missing
 b MobilePortalsUpdatedCallback(IConVar*, char const*, float)::sv_cheats
 b NavClearAttribute
 b NavMarkAttribute
 b ParseTokenFromString(char const**)::buf
 b ParticleChildrenInfo_t_UnpackInit::s_pUnpack
 b PhysFrame(float)::lastObjectCount
 b PortalReportFunc(bool)::oldReport
 b Portals_ResizeAll
 b ResponseRules::CResponseSystem::ParseOneCriterion(char const*)::dummy
 b ResponseRules::CResponseSystem::ParseRule()::instancedCriteria
 b ResponseRules::ResponseRulePartition::GetDictForRule(ResponseRules::CResponseSystem*, ResponseRules::Rule*)::kCONCEPT
 b ResponseRules::ResponseRulePartition::GetDictForRule(ResponseRules::CResponseSystem*, ResponseRules::Rule*)::kSUBJECT
 b ResponseRules::ResponseRulePartition::GetDictForRule(ResponseRules::CResponseSystem*, ResponseRules::Rule*)::kWHO
 b SelectWeightedSequence(CStudioHdr*, int, int)::_counter
 b UNSPECIFIED_LOGGING_COLOR
 b UTIL_EntitiesInPVS(CBaseEntity*, CBaseEntity*)::lastOrg
 b UTIL_EntitiesInPVS(CBaseEntity*, CBaseEntity*)::pvs
 b UTIL_IsPaintableSurface(csurface_t const&)::CEG_SURF_NO_PAINT_FLAG
 b UTIL_VarArgs(char const*, ...)::string
 b VScriptServerInit()::binding
 b WaveTrace(char const*, char const*)::s_WaveTrace
 b _ZGVZ17VScriptServerInitvE7binding__10_
 b _ZGVZ17VScriptServerInitvE7binding__11_
 b _ZGVZ17VScriptServerInitvE7binding__12_
 b _ZGVZ17VScriptServerInitvE7binding__13_
 b _ZGVZ17VScriptServerInitvE7binding__14_
 b _ZGVZ17VScriptServerInitvE7binding__15_
 b _ZGVZ17VScriptServerInitvE7binding__16_
 b _ZGVZ17VScriptServerInitvE7binding__17_
 b _ZGVZ17VScriptServerInitvE7binding__18_
 b _ZGVZ17VScriptServerInitvE7binding__19_
 b _ZGVZ17VScriptServerInitvE7binding__20_
 b _ZGVZN16CPortalGameRules23RegisterScriptFunctionsEvE7binding__10_
 b _ZGVZN16CPortalGameRules23RegisterScriptFunctionsEvE7binding__11_
 b _ZGVZN16CPortalGameRules23RegisterScriptFunctionsEvE7binding__12_
 b _ZGVZN16CPortalGameRules23RegisterScriptFunctionsEvE7binding__13_
 b _ZGVZN16CPortalGameRules23RegisterScriptFunctionsEvE7binding__14_
 b _ZGVZN16CPortalGameRules23RegisterScriptFunctionsEvE7binding__15_
 b _ZGVZN16CPortalGameRules23RegisterScriptFunctionsEvE7binding__16_
 b _ZGVZN16CPortalGameRules23RegisterScriptFunctionsEvE7binding__17_
 b _ZGVZN16CPortalGameRules23RegisterScriptFunctionsEvE7binding__18_
 b _ZGVZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__10_
 b _ZGVZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__11_
 b _ZGVZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__12_
 b _ZGVZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__13_
 b _ZGVZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__14_
 b _ZGVZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__15_
 b _ZGVZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__16_
 b _ZGVZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__17_
 b _ZGVZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__18_
 b _ZGVZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__19_
 b _ZGVZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__20_
 b _ZGVZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__21_
 b _ZGVZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__22_
 b _ZGVZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__23_
 b _ZGVZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__24_
 b _ZGVZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__25_
 b _ZGVZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__26_
 b _ZGVZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__27_
 b _ZGVZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__28_
 b _ZL8ice_sbox.0
 b _ZL8ice_sbox.1
 b _ZL8ice_sbox.2
 b _ZL8ice_sbox.3
 b _ZZ17VScriptServerInitvE7binding__10_
 b _ZZ17VScriptServerInitvE7binding__11_
 b _ZZ17VScriptServerInitvE7binding__12_
 b _ZZ17VScriptServerInitvE7binding__13_
 b _ZZ17VScriptServerInitvE7binding__14_
 b _ZZ17VScriptServerInitvE7binding__15_
 b _ZZ17VScriptServerInitvE7binding__16_
 b _ZZ17VScriptServerInitvE7binding__17_
 b _ZZ17VScriptServerInitvE7binding__18_
 b _ZZ17VScriptServerInitvE7binding__19_
 b _ZZ17VScriptServerInitvE7binding__20_
 b _ZZN16CPortalGameRules23RegisterScriptFunctionsEvE7binding__10_
 b _ZZN16CPortalGameRules23RegisterScriptFunctionsEvE7binding__11_
 b _ZZN16CPortalGameRules23RegisterScriptFunctionsEvE7binding__12_
 b _ZZN16CPortalGameRules23RegisterScriptFunctionsEvE7binding__13_
 b _ZZN16CPortalGameRules23RegisterScriptFunctionsEvE7binding__14_
 b _ZZN16CPortalGameRules23RegisterScriptFunctionsEvE7binding__15_
 b _ZZN16CPortalGameRules23RegisterScriptFunctionsEvE7binding__16_
 b _ZZN16CPortalGameRules23RegisterScriptFunctionsEvE7binding__17_
 b _ZZN16CPortalGameRules23RegisterScriptFunctionsEvE7binding__18_
 b _ZZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__10_
 b _ZZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__11_
 b _ZZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__12_
 b _ZZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__13_
 b _ZZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__14_
 b _ZZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__15_
 b _ZZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__16_
 b _ZZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__17_
 b _ZZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__18_
 b _ZZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__19_
 b _ZZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__20_
 b _ZZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__21_
 b _ZZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__22_
 b _ZZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__23_
 b _ZZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__24_
 b _ZZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__25_
 b _ZZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__26_
 b _ZZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__27_
 b _ZZN18CPortalMPGameRules23RegisterScriptFunctionsEvE7binding__28_
 b __g_CServerDLLSharedAppSystems_singleton
 b __g_CServerGameEnts_singleton
 b __g_CreateCEffectsServerIEffects_reg
 b __g_CreateCGameMovementIGameMovement_reg
 b __g_CreateCHLTVDirectorIHLTVDirector_reg
 b __g_CreateCPlayerInfoManagerIPlayerInfoManager_reg
 b __g_CreateCPluginBotManagerIBotManager_reg
 b __g_CreateCPluginHelpersCheckIPluginHelpersCheck_reg
 b __g_CreateCServerDLLSharedAppSystemsIServerDLLSharedAppSystems_reg
 b __g_CreateCServerGameClientsIServerGameClients_reg
 b __g_CreateCServerGameDLLIServerGameDLL_reg
 b __g_CreateCServerGameEntsIServerGameEnts_reg
 b __g_CreateCServerGameTagsIServerGameTags_reg
 b __g_CreateCServerToolsIServerTools_reg
 b __g_GameRulesRegister_CHalfLife2
 b __g_GameRulesRegister_CMultiplayRules
 b __g_GameRulesRegister_CPortalGameRules
 b __g_GameRulesRegister_CPortalMPGameRules
 b __g_GameRulesRegister_CTeamplayRules
 b __proxy_SendProxy_ClientSideAnimation
 b __proxy_SendProxy_FlexWeights
 b __proxy_SendProxy_OnlyToTeam
 b __proxy_SendProxy_SendActiveLocalWeaponDataTable
 b __proxy_SendProxy_SendBaseCombatCharacterLocalDataTable
 b __proxy_SendProxy_SendLocalDataTable
 b __proxy_SendProxy_SendLocalWeaponDataTable
 b __proxy_SendProxy_SendNonLocalDataTable
 b __proxy_SendProxy_TestProxyToggle
 b _firesmoke
 b _plasma
 b ai_ally_speech_manager
 b ai_battle_line
 b ai_changehintgroup
 b ai_changetarget
 b ai_clear_bad_links_command
 b ai_debug_node_connect_command
 b ai_disable
 b ai_dump_hints_command
 b ai_goal_actbusy
 b ai_goal_actbusy_queue
 b ai_goal_assault
 b ai_goal_fightfromcover
 b ai_goal_follow
 b ai_goal_lead
 b ai_goal_lead_weapon
 b ai_goal_standoff
 b ai_hint
 b ai_hull
 b ai_network
 b ai_next_hull
 b ai_nodes
 b ai_npc_eventresponsesystem
 b ai_relationship
 b ai_resume
 b ai_script_conditions
 b ai_set_move_height_epsilon_command
 b ai_setenabled_command
 b ai_show_connect
 b ai_show_connect_crawl
 b ai_show_connect_fly
 b ai_show_connect_jump
 b ai_show_graph_connect
 b ai_show_grid
 b ai_show_hints
 b ai_show_hull
 b ai_show_node_command
 b ai_show_visibility
 b ai_sound
 b ai_speechfilter
 b ai_step
 b ai_test_los_command
 b ainet_generate_report_command
 b ainet_generate_report_only_command
 b air_density
 b aiscripted_schedule
 b aitesthull
 b ambient_generic
 b anim_3wayblend
 b ar2explosion
 b assault_assaultpoint
 b assault_rallypoint
 b baseanimating_projectile
 b basehlcombatweapon
 b baseportalcombatweapon
 b baseprojectile
 b basespriteprojectile
 b beam
 b beam_spotlight
 b bodyque
 b bot_command
 b bot_equip
 b bot_kill
 b bot_mimic
 b bot_mimic_yaw_offset
 b bot_refill_command
 b bot_sendcommand
 b bot_teleport_command
 b buddha_command
 b bugswap
 b cast_hull_command
 b cast_ray_command
 b cast_ray_paint_command
 b cc_norepeat
 b ch_createairboat
 b ch_createjeep
 b challenge_mode_end_node
 b cl_simdbones
 b cl_spewscriptintro
 b clear_debug_overlays_command
 b collision_test
 b color_correction
 b color_correction_volume
 b commentary_auto
 b commentary_cvarsnotchanging
 b commentary_finishnode
 b create_flashlight
 b creditsdone
 b cube_rotationcontroller
 b cycler
 b cycler_actor
 b cycler_blender
 b cycler_flex
 b cycler_weapon
 b cycler_wreckage
 b dbghist_addline
 b dbghist_dump
 b debug_fixmyposition
 b debug_overlay_fullposition
 b debugportalcollideables
 b defaultresponsesytem
 b dispcoll_drawplane
 b displayportalplayerstats_command
 b drawcross
 b drawline
 b dump_entity_sizes_command
 b dump_globals_command
 b dumpentityfactories
 b dumpeventqueue
 b dumpgamestringtable
 b dynamic_prop
 b emptyMapping
 b ent_absbox
 b ent_attachments
 b ent_autoaim
 b ent_bbox
 b ent_cancelpendingentfires
 b ent_create
 b ent_create_paint_bomb_erase_command
 b ent_create_paint_bomb_jump_command
 b ent_create_paint_bomb_portal_command
 b ent_create_paint_bomb_speed_command
 b ent_create_portal_companion_cube
 b ent_create_portal_reflector_cube
 b ent_create_portal_weighted_antique
 b ent_create_portal_weighted_cube
 b ent_create_portal_weighted_sphere
 b ent_dump
 b ent_fire
 b ent_hover_turret_tether
 b ent_info
 b ent_keyvalue
 b ent_messages
 b ent_name
 b ent_orient
 b ent_pause
 b ent_pivot
 b ent_rbox
 b ent_remove
 b ent_remove_all
 b ent_rotate
 b ent_script_dump
 b ent_setang_command
 b ent_setname
 b ent_setpos_command
 b ent_show_response_criteria
 b ent_step
 b ent_teleport
 b ent_text
 b ent_viewoffset
 b ent_watery_leech
 b entity_blocker
 b entityflame
 b env_ambient_light
 b env_ar2explosion
 b env_beam
 b env_beverage
 b env_blood
 b env_bubbles
 b env_citadel_energy_core
 b env_credits
 b env_debughistory
 b env_detail_controller
 b env_dof_controller
 b env_dustpuff
 b env_dusttrail
 b env_effectscript
 b env_embers
 b env_entity_dissolver
 b env_entity_freezing
 b env_entity_igniter
 b env_entity_maker
 b env_explosion
 b env_fade
 b env_fire
 b env_fire_trail
 b env_firesensor
 b env_firesource
 b env_fizzler_effects
 b env_fog_controller
 b env_funnel
 b env_global
 b env_glow
 b env_gunfire
 b env_hudhint
 b env_instructor_hint
 b env_laser
 b env_lightglow
 b env_lightrail_endpoint
 b env_message
 b env_microphone
 b env_movieexplosion
 b env_muzzleflash
 b env_outtro_stats
 b env_particle_performance_monitor
 b env_particle_trail
 b env_particlefire
 b env_particlelight
 b env_particlescript
 b env_particlesmokegrenade
 b env_physexplosion
 b env_physimpact
 b env_physwire
 b env_player_surface_trigger
 b env_player_viewfinder
 b env_portal_credits
 b env_portal_laser
 b env_portal_path_track
 b env_projectedtexture
 b env_quadraticbeam
 b env_ragdoll_boogie
 b env_rockettrail
 b env_rotorshooter
 b env_screeneffect
 b env_screenoverlay
 b env_shake
 b env_shooter
 b env_smokestack
 b env_smoketrail
 b env_soundscape
 b env_soundscape_proxy
 b env_soundscape_triggerable
 b env_spark
 b env_speaker
 b env_splash
 b env_sporeexplosion
 b env_sporetrail
 b env_sprite
 b env_sprite_clientside
 b env_sprite_oriented
 b env_spritetrail
 b env_steam
 b env_steamjet
 b env_sun
 b env_texturetoggle
 b env_tilt
 b env_tonemap_controller
 b env_tracer
 b env_viewpunch
 b env_wind
 b env_zoom
 b event_queue_saveload_proxy
 b explode_command
 b explodevector_command
 b fadein
 b fadeout
 b filter_activator_class
 b filter_activator_context
 b filter_activator_mass_greater
 b filter_activator_model
 b filter_activator_name
 b filter_activator_team
 b filter_base
 b filter_combineball_type
 b filter_damage_type
 b filter_enemy
 b filter_multi
 b filter_player_held
 b filter_size
 b find_ent
 b find_ent_index
 b firetarget
 b fish
 b fizzler_multiorigin_sound_player
 b floorturret_tipcontroller
 b fog_volume
 b foundry_engine_get_mouse_control_command
 b foundry_engine_release_mouse_control_command
 b foundry_select_entity_command
 b foundry_sync_hammer_view_command
 b foundry_update_entity_command
 b funCBaseFlex
 b func_areaportal
 b func_areaportalwindow
 b func_breakable
 b func_breakable_surf
 b func_brush
 b func_button
 b func_clip_vphysics
 b func_combine_ball_spawner
 b func_conveyor
 b func_detail_blocker
 b func_door
 b func_door_rotating
 b func_dustcloud
 b func_dustmotes
 b func_fish_pool
 b func_guntarget
 b func_illusionary
 b func_instance_io_proxy
 b func_ladderendpoint
 b func_lod
 b func_monitor
 b func_movelinear
 b func_nav_avoidance_obstacle
 b func_nav_blocker
 b func_noportal_volume
 b func_occluder
 b func_physbox
 b func_physbox_multiplayer
 b func_placement_clip
 b func_plat
 b func_platrot
 b func_portal_bumper
 b func_portal_detector
 b func_portal_orientation
 b func_portalled
 b func_precipitation
 b func_precipitation_blocker
 b func_proprrespawnzone
 b func_pushable
 b func_recharge
 b func_reflective_glass
 b func_rot_button
 b func_rotating
 b func_smokevolume
 b func_tank
 b func_tank_combine_cannon
 b func_tanklaser
 b func_tankmortar
 b func_tankphyscannister
 b func_tankpulselaser
 b func_tanktrain
 b func_trackautochange
 b func_trackchange
 b func_tracktrain
 b func_train
 b func_traincontrols
 b func_useableladder
 b func_vehicleclip
 b func_wall
 b func_wall_toggle
 b func_water
 b func_water_analog
 b func_weight_button
 b futbol_catcher
 b gGlobalState
 b gNullWeaponInfo
 b gTankSpread
 b g_AISystemHook
 b g_AR2Explosion_ClassReg
 b g_AimManager
 b g_AnchorList
 b g_AnimatingImagePanel_Helper
 b g_BlobDebugColor
 b g_BotData
 b g_BreakModelsPrecached
 b g_BreakPropEvent
 b g_BreakSetIncludingColons
 b g_BuildModeDialogMgr
 b g_Button_Helper
 b g_CAI_BaseNPC_ClassReg
 b g_CBaseAnimatingOverlay_ClassReg
 b g_CBaseAnimating_ClassReg
 b g_CBaseButton_ClassReg
 b g_CBaseCombatCharacter_ClassReg
 b g_CBaseCombatWeapon_ClassReg
 b g_CBaseDoor_ClassReg
 b g_CBaseEntity_ClassReg
 b g_CBaseFlex_ClassReg
 b g_CBaseGrenade_ClassReg
 b g_CBaseHLCombatWeapon_ClassReg
 b g_CBaseParticleEntity_ClassReg
 b g_CBasePlayer_ClassReg
 b g_CBasePortalCombatWeapon_ClassReg
 b g_CBaseProjectedEntity_ClassReg
 b g_CBaseProjector_ClassReg
 b g_CBasePropDoor_ClassReg
 b g_CBaseTempEntity_ClassReg
 b g_CBaseToggle_ClassReg
 b g_CBaseTrigger_ClassReg
 b g_CBaseVPhysicsTrigger_ClassReg
 b g_CBaseViewModel_ClassReg
 b g_CBeamSpotlight_ClassReg
 b g_CBeam_ClassReg
 b g_CBitmapImagePanel_Helper
 b g_CBoneFollower_ClassReg
 b g_CBreakableProp_ClassReg
 b g_CBreakableSurface_ClassReg
 b g_CCitadelEnergyCore_ClassReg
 b g_CColorCorrectionVolume_ClassReg
 b g_CColorCorrection_ClassReg
 b g_CCorpse_ClassReg
 b g_CDynamicLight_ClassReg
 b g_CDynamicProp_ClassReg
 b g_CEmbers_ClassReg
 b g_CEntityDissolve_ClassReg
 b g_CEntityFlame_ClassReg
 b g_CEntityFreezing_ClassReg
 b g_CEntityParticleTrail_ClassReg
 b g_CEnvAmbientLight_ClassReg
 b g_CEnvDOFController_ClassReg
 b g_CEnvDetailController_ClassReg
 b g_CEnvParticleScript_ClassReg
 b g_CEnvPortalPathTrack_ClassReg
 b g_CEnvProjectedTexture_ClassReg
 b g_CEnvQuadraticBeam_ClassReg
 b g_CEnvScreenEffect_ClassReg
 b g_CEnvScreenOverlay_ClassReg
 b g_CEnvTonemapController_ClassReg
 b g_CEnvWind_ClassReg
 b g_CEnv_Lightrail_Endpoint_ClassReg
 b g_CFireSmoke_ClassReg
 b g_CFireTrail_ClassReg
 b g_CFish_ClassReg
 b g_CFogController_ClassReg
 b g_CFuncAreaPortalWindow_ClassReg
 b g_CFuncBrush_ClassReg
 b g_CFuncConveyor_ClassReg
 b g_CFuncLadder_ClassReg
 b g_CFuncMonitor_ClassReg
 b g_CFuncMoveLinear_ClassReg
 b g_CFuncNoPortalVolume_ClassReg
 b g_CFuncOccluder_ClassReg
 b g_CFuncPortalBumper_ClassReg
 b g_CFuncReflectiveGlass_ClassReg
 b g_CFuncRotating_ClassReg
 b g_CFuncSmokeVolume_ClassReg
 b g_CFuncTrackTrain_ClassReg
 b g_CFunc_Dust_ClassReg
 b g_CFunc_LOD_ClassReg
 b g_CGameRulesProxy_ClassReg
 b g_CHLMachineGun_ClassReg
 b g_CHLSelectFireMachineGun_ClassReg
 b g_CHalfLife2Proxy_ClassReg
 b g_CHandleTest_ClassReg
 b g_CInfoLadderDismount_ClassReg
 b g_CInfoOverlayAccessor_ClassReg
 b g_CInfoPlacementHelper_ClassReg
 b g_CInfoPortalScore_ClassReg
 b g_CLabIndicatorPanel_ClassReg
 b g_CLevelPlacardDisplay_ClassReg
 b g_CLightGlow_ClassReg
 b g_CMP_LobbyScreen_ClassReg
 b g_CMaterialModifyControl_ClassReg
 b g_CMortarShell_ClassReg
 b g_CMovieDisplay_ClassReg
 b g_CNPC_HoverTurret_ClassReg
 b g_CNPC_PersonalityCore_ClassReg
 b g_CNPC_Portal_FloorTurret_ClassReg
 b g_CNPC_RocketTurret_ClassReg
 b g_CNPC_Wheatley_Boss_ClassReg
 b g_CNeurotoxinCountdown_ClassReg
 b g_CPSCollisionEntity_ClassReg
 b g_CPaintSprayer_ClassReg
 b g_CPaintStream_ClassReg
 b g_CParticleFire_ClassReg
 b g_CParticlePerformanceMonitor_ClassReg
 b g_CParticleSystem_ClassReg
 b g_CPhysBoxMultiplayer_ClassReg
 b g_CPhysBox_ClassReg
 b g_CPhysMagnet_ClassReg
 b g_CPhysicsPropMultiplayer_ClassReg
 b g_CPhysicsProp_ClassReg
 b g_CPlasma_ClassReg
 b g_CPlayerResource_ClassReg
 b g_CPointCamera_ClassReg
 b g_CPointCommentaryNode_ClassReg
 b g_CPointSurvey_ClassReg
 b g_CPortalGameRulesProxy_ClassReg
 b g_CPortalLaser_ClassReg
 b g_CPortalMPGameRulesProxy_ClassReg
 b g_CPortalMPStatsProxy_ClassReg
 b g_CPortalRagdoll_ClassReg
 b g_CPortal_Base2D_ClassReg
 b g_CPortal_Player_ClassReg
 b g_CPortal_PointPush_ClassReg
 b g_CPoseController_ClassReg
 b g_CPostProcessController_ClassReg
 b g_CPrecipitationBlocker_ClassReg
 b g_CPrecipitation_ClassReg
 b g_CPredictedViewModel_ClassReg
 b g_CProjectedTractorBeamEntity_ClassReg
 b g_CProjectedWallEntity_ClassReg
 b g_CPropCombineBall_ClassReg
 b g_CPropDoorRotating_ClassReg
 b g_CPropEnergyBall_ClassReg
 b g_CPropFloorButton_ClassReg
 b g_CPropLinkedPortalDoor_ClassReg
 b g_CPropPaintBomb_ClassReg
 b g_CPropPortalStatsDisplay_ClassReg
 b g_CPropRocketTripwire_ClassReg
 b g_CPropTractorBeamProjector_ClassReg
 b g_CPropVehicleChoreoGeneric_ClassReg
 b g_CPropVehicleDriveable_ClassReg
 b g_CPropWeightedCube_ClassReg
 b g_CProp_Hallucination_ClassReg
 b g_CProp_Mirror_ClassReg
 b g_CProp_Portal_ClassReg
 b g_CRagdollManager_ClassReg
 b g_CRagdollPropAttached_ClassReg
 b g_CRagdollProp_ClassReg
 b g_CRopeKeyframe_ClassReg
 b g_CSceneEntity_ClassReg
 b g_CScriptIntro_ClassReg
 b g_CShadowControl_ClassReg
 b g_CSlideshowDisplay_ClassReg
 b g_CSmokeStack_ClassReg
 b g_CSpatialEntity_ClassReg
 b g_CSpotlightEnd_ClassReg
 b g_CSpriteOriented_ClassReg
 b g_CSpriteTrail_ClassReg
 b g_CSprite_ClassReg
 b g_CStatueProp_ClassReg
 b g_CSteamJet_ClassReg
 b g_CSun_ClassReg
 b g_CSunlightShadowControl_ClassReg
 b g_CTEAntlionDust_ClassReg
 b g_CTEArmorRicochet_ClassReg
 b g_CTEBSPDecal_ClassReg
 b g_CTEBaseBeam_ClassReg
 b g_CTEBeamEntPoint_ClassReg
 b g_CTEBeamEnts_ClassReg
 b g_CTEBeamFollow_ClassReg
 b g_CTEBeamLaser_ClassReg
 b g_CTEBeamPoints_ClassReg
 b g_CTEBeamRingPoint_ClassReg
 b g_CTEBeamRing_ClassReg
 b g_CTEBeamSpline_ClassReg
 b g_CTEBloodSprite_ClassReg
 b g_CTEBloodStream_ClassReg
 b g_CTEBreakModel_ClassReg
 b g_CTEBubbleTrail_ClassReg
 b g_CTEBubbles_ClassReg
 b g_CTEClientProjectile_ClassReg
 b g_CTEDecal_ClassReg
 b g_CTEDust_ClassReg
 b g_CTEDynamicLight_ClassReg
 b g_CTEEffectDispatch_ClassReg
 b g_CTEEnergySplash_ClassReg
 b g_CTEExplosion_ClassReg
 b g_CTEFizz_ClassReg
 b g_CTEFootprintDecal_ClassReg
 b g_CTEFoundryHelpers_ClassReg
 b g_CTEGaussExplosion_ClassReg
 b g_CTEGlowSprite_ClassReg
 b g_CTEImpact_ClassReg
 b g_CTEKillPlayerAttachments_ClassReg
 b g_CTELargeFunnel_ClassReg
 b g_CTEMetalSparks_ClassReg
 b g_CTEMuzzleFlash_ClassReg
 b g_CTEParticleSystem_ClassReg
 b g_CTEPhysicsProp_ClassReg
 b g_CTEPlayerAnimEvent_ClassReg
 b g_CTEPlayerDecal_ClassReg
 b g_CTEProjectedDecal_ClassReg
 b g_CTEShatterSurface_ClassReg
 b g_CTEShowLine_ClassReg
 b g_CTESmoke_ClassReg
 b g_CTESparks_ClassReg
 b g_CTESpriteSpray_ClassReg
 b g_CTESprite_ClassReg
 b g_CTEWallPaintedEvent_ClassReg
 b g_CTEWorldDecal_ClassReg
 b g_CTeam_ClassReg
 b g_CTesla_ClassReg
 b g_CTestTraceline_ClassReg
 b g_CTest_ProxyToggle_Networkable_ClassReg
 b g_CTreeViewListControl_Helper
 b g_CTriggerCatapult_ClassReg
 b g_CTriggerPaintCleanser_ClassReg
 b g_CTriggerPlayerMovement_ClassReg
 b g_CTriggerPortalCleanser_ClassReg
 b g_CTrigger_TractorBeam_ClassReg
 b g_CVGuiScreen_ClassReg
 b g_CWaterBullet_ClassReg
 b g_CWaterLODControl_ClassReg
 b g_CWeaponCubemap_ClassReg
 b g_CWeaponCycler_ClassReg
 b g_CWeaponItemBase_ClassReg
 b g_CWeaponPaintGun_ClassReg
 b g_CWeaponPortalBase_ClassReg
 b g_CWeaponPortalgun_ClassReg
 b g_CWeaponPromoAntennaBall_ClassReg
 b g_CWeaponPromoAntennaEgg_ClassReg
 b g_CWeaponPromoHelmetBall_ClassReg
 b g_CWeaponPromoHelmetEgg_ClassReg
 b g_CWorld_ClassReg
 b g_CaptionRepeats
 b g_CheckButton_Helper
 b g_CircularProgressBar_Helper
 b g_CleanupDefaultRelationships
 b g_CleanupSymbolTable
 b g_ComboBox_Helper
 b g_ConceptInfoMap
 b g_ContinuousProgressBar_Helper
 b g_Controller
 b g_CvarToggleCheckButton_Helper
 b g_DataObjectAccessSystem
 b g_DecalSystem
 b g_DefaultViewVectors
 b g_DeleteList
 b g_Divider_Helper
 b g_DragDropCapture
 b g_DustTrail_ClassReg
 b g_EdictTouchLinks
 b g_EditablePanel_Helper
 b g_EntityGroundLinks
 b g_EntityListSystem
 b g_ExpandButton_Helper
 b g_FizzlerEffects_ClassReg
 b g_FizzlerMultiOriginSoundPlayer_ClassReg
 b g_FoundryEntitySpawnRecords
 b g_GameMovement
 b g_GameStringPool
 b g_GameUI
 b g_GlobalSymbolDataOps
 b g_GraphPanel_Helper
 b g_HLMoveData
 b g_HighestActivity
 b g_HighestEvent
 b g_Holiday_Christmas
 b g_Holiday_FullMoon
 b g_Holiday_Halloween
 b g_Holiday_HalloweenOrFullMoon
 b g_Holiday_NoHoliday
 b g_Holiday_TF2Birthday
 b g_ImagePanel_Helper
 b g_InRestore
 b g_KBMgr
 b g_KVMutex
 b g_KeyValues2ErrorStack
 b g_Label_Helper
 b g_LagCompensationManager
 b g_ListPanel_Helper
 b g_ListViewPanel_Helper
 b g_LogFileHandle
 b g_Managers
 b g_Mathlib_GammaToLinear
 b g_Mathlib_LinearToGamma
 b g_MenuBar_Helper
 b g_MenuButton_Helper
 b g_MenuItem_Helper
 b g_Menu_Helper
 b g_MessageBox_Helper
 b g_MessageEntities
 b g_ModelPrecacheSystem
 b g_ModelSoundsCache
 b g_ModelSoundsCacheSaver
 b g_ModelSoundsSymbolHelper
 b g_MovieExplosion_ClassReg
 b g_NotifyList
 b g_NpcTimeThisFrame
 b g_NuggetDirector
 b g_OverridenColorSymbols
 b g_Panel_Helper
 b g_ParticleSmokeGrenade_ClassReg
 b g_PhysAverageSimTime
 b g_PlacementManager
 b g_PlayerHurtEvent
 b g_PlayerMove
 b g_PortalMPViewVectors
 b g_PositionAttribute
 b g_PostClientManager
 b g_ProgressBar_Helper
 b g_ProjectedEntityAmbientSoundProxy_ClassReg
 b g_RadioButton_Helper
 b g_RecipientFilterPredictionSystem
 b g_RemoteDebugHelper
 b g_RestoredEntities
 b g_RichText_Helper
 b g_RocketTrail_ClassReg
 b g_ScalableImagePanel_Helper
 b g_ScenePrecacheSystem
 b g_ScriptServerRunScriptDepth
 b g_ScriptSymbols
 b g_ScrollBar_Helper
 b g_ScrollBar_Horizontal_Helper
 b g_ScrollBar_Vertical_Helper
 b g_ServerBenchmark
 b g_ServerTools
 b g_SmokeTrail_ClassReg
 b g_SoundEmitterSystem
 b g_SporeExplosion_ClassReg
 b g_SporeTrail_ClassReg
 b g_StartTimeCurThink
 b g_SteamWorksGameStats
 b g_StudioBoneCache
 b g_TEAntlionDust
 b g_TEArmorRicochet
 b g_TEBSPDecal
 b g_TEBeamEntPoint
 b g_TEBeamEnts
 b g_TEBeamFollow
 b g_TEBeamLaser
 b g_TEBeamPoints
 b g_TEBeamRing
 b g_TEBeamRingPoint
 b g_TEBeamSpline
 b g_TEBloodSprite
 b g_TEBloodStream
 b g_TEBreakModel
 b g_TEBubbleTrail
 b g_TEBubbles
 b g_TEClientProjectile
 b g_TEDecal
 b g_TEDust
 b g_TEDynamicLight
 b g_TEEffectDispatch
 b g_TEEnergySplash
 b g_TEExplosion
 b g_TEFizz
 b g_TEFootprintDecal
 b g_TEFoundryHelpers
 b g_TEGaussExplosion
 b g_TEGlowSprite
 b g_TEImpact
 b g_TEKillPlayerAttachments
 b g_TELargeFunnel
 b g_TEMetalSparks
 b g_TEMuzzleFlash
 b g_TEPlayerAnimEvent
 b g_TEPlayerDecal
 b g_TEProjectedDecal
 b g_TEShatterSurface
 b g_TEShowLine
 b g_TESmoke
 b g_TESparks
 b g_TESprite
 b g_TESpriteSpray
 b g_TESystem
 b g_TEWallPaintedEvent
 b g_TEWorldDecal
 b g_TeleportStack
 b g_Templates
 b g_TextEntry_Helper
 b g_ThinkChecker
 b g_ThrottleMgr
 b g_ToggleButton_Helper
 b g_ToolFrameworkServer
 b g_TouchManager
 b g_TouchTrace
 b g_TreeView_Helper
 b g_URLLabel_Helper
 b g_UserMessages
 b g_VisibilityCache
 b g_WatcherList
 b g_bPermitDirectSoundPrecache
 b g_bTracingVsCommentaryNodes
 b g_iDebuggingTransition
 b g_iShadowCloneCount
 b g_nCommandClientIndex
 b g_pBehaviorClasses
 b g_pClassnameSpawnPriority
 b g_pClientPutInServerOverride
 b g_pClosecaption
 b g_pGibManager
 b g_pMsgBuffer
 b g_pNextLink
 b g_pPlayerPortalStatsController
 b g_pPortalMPStats
 b g_pSoundEnt
 b g_pTestObj
 b g_pcv_ThreadMode
 b g_pcv_commentary
 b game_end
 b game_gib_manager
 b game_player_equip
 b game_player_team
 b game_ragdoll_manager
 b game_score
 b game_text
 b game_ui
 b game_weapon_manager
 b game_zone_player
 b generic_actor
 b gib
 b gibshooter
 b give_a_point
 b give_command
 b give_portalgun
 b give_promo_helmet_command
 b givecurrentammo
 b global_event_log_enabled
 b global_set
 b god
 b grenade
 b grenade_beam
 b grenade_beam_chaser
 b groundlist
 b guard variable for CAI_BaseNPC::NPCThink()::timer
 b guard variable for CAI_BaseNPC::RebalanceThinks()::rebalanceCandidates
 b guard variable for CAI_BaseNPC::TranslateActivity(Activity, Activity*)::sUniqueActivities
 b guard variable for CAI_BaseNPC::UpdateEfficiency(bool)::vPlayerEyePosition
 b guard variable for CAI_BaseNPC::UpdateEfficiency(bool)::vPlayerForward
 b guard variable for CAI_BehaviorBase::GetBehaviorClassesInternal()::s_BehaviorClasses
 b guard variable for CAI_Path::BaseGoalPosition() const::vecResult
 b guard variable for CBaseAnimating::ScriptGetAttachmentAngles(int)::absAngles
 b guard variable for CBaseAnimating::ScriptGetAttachmentAngles(int)::absOrigin
 b guard variable for CBaseAnimating::ScriptGetAttachmentAngles(int)::qa
 b guard variable for CBaseAnimating::ScriptGetAttachmentOrigin(int)::absOrigin
 b guard variable for CBaseAnimating::ScriptGetAttachmentOrigin(int)::qa
 b guard variable for CBaseCombatCharacter::FindEntityRelationship(CBaseEntity*)::dummy
 b guard variable for CBaseCombatWeapon::GetBulletSpread()::cone
 b guard variable for CBaseEntity::PhysicsDispatchThink(void (CBaseEntity::*)())::think_trace_limit
 b guard variable for CBaseEntity::PrecacheModelComponents(int)::keyName
 b guard variable for CBaseEntity::PrecacheModelComponents(int)::keyParticles
 b guard variable for CBaseEntity::ScriptGetLocalAngularVelocity()::v
 b guard variable for CBasePlayer::EyeAngles()::angEyeWorld
 b guard variable for CBaseProp::ParsePropData()::keyPropData
 b guard variable for CBeam::GetAbsEndPos() const::vecAbsPos
 b guard variable for CCollisionProperty::CollisionToWorldTransform() const::s_matTemp
 b guard variable for CCurveData::GetBoundedSample(ICurveDataAccessor*, int, bool&)::nullend
 b guard variable for CCurveData::GetBoundedSample(ICurveDataAccessor*, int, bool&)::nullstart
 b guard variable for CEconItem::CustomAttributes() const::sEmptyVecAttributes
 b guard variable for CEconItemSchema::GetItemDefinition(int)::s_pEmptyDefinition
 b guard variable for CFlexAnimationTrack::GetBoundedSample(int, bool&, int)::nullend
 b guard variable for CFlexAnimationTrack::GetBoundedSample(int, bool&, int)::nullstart
 b guard variable for CGameMovement::ProcessMovement(CBasePlayer*, CMoveData*)::_counter
 b guard variable for CKeyValuesDumpContextAsDevMsg::KvBeginKey(KeyValues*, int)::r_developer
 b guard variable for CNPC_Bullseye::CanBeAnEnemyOf(CBaseEntity*)::flFullFov
 b guard variable for CNPC_FloorTurret::PreferredCarryAngles()::g_prefAngles
 b guard variable for CNPC_HoverTurret::PreferredCarryAngles()::g_prefAngles
 b guard variable for CNPC_Portal_FloorTurret::GetAttackDamageScale(CBaseEntity*)::CEG_TURRET_FLOOR_DAMAGE_MULTIPLIER
 b guard variable for CNPC_Portal_FloorTurret::Shoot(Vector const&, Vector const&, bool)::CEG_TURRET_FLOOR_BULLET_FORCE_MULTIPLIER
 b guard variable for CNavArea::ComputeVisibilityDelta(CNavArea const*) const::delta
 b guard variable for CNavArea::Draw() const::blink
 b guard variable for CNavMesh::DrawEditMode()::host_thread_mode
 b guard variable for CNavMesh::DrawEditMode()::sb_perf_collect
 b guard variable for CNavMesh::GetNearestNavArea(Vector const&, bool, float, bool, bool) const::searchMarker
 b guard variable for CNavMesh::UpdateGeneration(float)::host_thread_mode
 b guard variable for CNavMesh::UpdateGeneration(float)::s_playerSettleTimer
 b guard variable for CNavMesh::UpdateGeneration(float)::s_unlitAreas
 b guard variable for CNavMesh::UpdateGeneration(float)::s_unlitSeedAreas
 b guard variable for CNavNode::GetNode(Vector const&)::lookup
 b guard variable for CPVS_Extender::ComputeExtendedPVS(CBaseEntity const*, Vector const&, unsigned char*, int, int)::s_PVSExtenderMutex
 b guard variable for CPaintDatabase::PaintEntity(CBaseEntity*, PaintPowerType, Vector const&)::CEG_NO_POWER
 b guard variable for CPhysicsProp::GetCarryDistanceOffset()::keyPhysgunInteractions
 b guard variable for CPhysicsProp::GetPropDataAngles(char const*, QAngle&)::keyPhysgunInteractions
 b guard variable for CPortalGameRules::CPortalGameRules()::flashlightbrightness
 b guard variable for CPortalGameRules::RegisterScriptFunctions()::binding
 b guard variable for CPortalLaser::BeamDamage(CGameTrace*)::CEG_LASER_DAMAGE_AMOUNT
 b guard variable for CPortalMPGameRules::CPortalMPGameRules()::flashlightbrightness
 b guard variable for CPortalMPGameRules::IsCoOp()::coop_ref
 b guard variable for CPortalMPGameRules::LevelInitPreEntity()::flashlightbrightness
 b guard variable for CPortalMPGameRules::RegisterScriptFunctions()::binding
 b guard variable for CPortalPlayerAnimState::HandleMoving(Activity&)::CEG_SPEED_POWER
 b guard variable for CPortalStatsController::LevelStart(float)::map_wants_save_disable
 b guard variable for CPortal_Player::IsTryingToSuperJump(PaintPowerInfo_t const*) const::CEG_SPEED_POWER
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyAIWalkable
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyAllowStatic
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBase
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBlockLOS
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBreakableCount
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBreakableModel
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyBreakableSkin
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyDamageTable
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyDmgBullets
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyDmgClub
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyDmgExplosive
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyExplosiveDamage
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyExplosiveRadius
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyHealth
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyMultiplayerBreak
 b guard variable for CPropData::ParsePropFromKV(CBaseEntity*, IBreakableWithPropData*, KeyValues*, KeyValues*)::keyPhysicsMode
 b guard variable for CPropWeightedCube::PreferredCarryAngles()::s_prefAngles
 b guard variable for CServerGameClients::ClientSettingsChanged(edict_t*)::pMax
 b guard variable for CServerGameClients::ClientSettingsChanged(edict_t*)::pMaxUpdateRate
 b guard variable for CServerGameClients::ClientSettingsChanged(edict_t*)::pMin
 b guard variable for CServerGameClients::ClientSettingsChanged(edict_t*)::pMinUpdateRate
 b guard variable for CServerGameDLL::ApplyGameSettings(KeyValues*)::coop_ref
 b guard variable for CServerGameDLL::ApplyGameSettings(KeyValues*)::map_wants_save_disable
 b guard variable for CServerGameDLL::ApplyGameSettings(KeyValues*)::sv_bonus_challenge
 b guard variable for CServerGameDLL::LevelInit(char const*, char const*, char const*, char const*, bool, bool)::map_wants_save_disable
 b guard variable for CSkyboxSwapper::InputTrigger(inputdata_t&)::skyname
 b guard variable for CStatueProp::CStatueProp()::vcollide_wireframe
 b guard variable for CTestTraceline::Spin()::traceline_spin
 b guard variable for CTextStat::GetTextStatsList()::theList
 b guard variable for CTriggerCatapult::CalculateLaunchVector(CBaseEntity*, CBaseEntity*)::CEG_CATAPULT_LAUNCH_VELOCITY_MULTIPLIER
 b guard variable for CalcLocalHierarchyAnimation(CStudioHdr const*, matrix3x4a_t*, CBoneBitList&, Vector*, Quaternion*, mstudiobone_t const*, mstudiolocalhierarchy_t*, int, int, float, int, float, int)::rootXform
 b guard variable for DEBUG_THINK_TRACE_COUNTER_ALLOWED()::bIsPublic
 b guard variable for EntityFactoryDictionary()::s_EntityFactory
 b guard variable for GCSDK::GMapJobTypesByMsg()::s_MapJobTypes
 b guard variable for GCSDK::GMapJobTypesByName()::s_MapJobTypes
 b guard variable for GCSDK::GetPchTempTextBuffer()::s_irgchBuffer
 b guard variable for GCSDK::GetPchTempTextBuffer()::s_rgtlsBuffers
 b guard variable for GCSDK::InitGCSystemMessageTypes()::m_reg
 b guard variable for GetAmmoDef()::def
 b guard variable for GetPanelAnimationDictionary()::dictionary
 b guard variable for GetPanelMessageMapDictionary()::dictionary
 b guard variable for GetPropertyConverters()::g_AnimationPropertyConverters
 b guard variable for GetSceneManager()::s_SceneManager
 b guard variable for IEconItemInterface::IsTradable() const::pAttrib_AlwaysTradable
 b guard variable for IEconItemInterface::IsTradable() const::pAttrib_CannotTrade
 b guard variable for IEconItemInterface::IsTradable() const::pAttrib_TradableAfter
 b guard variable for IEconItemInterface::IsUsableInCrafting() const::pAttrib_AlwaysUsableInCraft
 b guard variable for IEconTool::ShouldDisplayQuantity(IEconItemInterface const*) const::pAttrDef_UnlimitedQuantity
 b guard variable for IsTemporaryItem(IEconItemInterface const*)::pAttrib_ExpirationDate
 b guard variable for MissingSceneWarning(char const*)::missing
 b guard variable for MobilePortalsUpdatedCallback(IConVar*, char const*, float)::sv_cheats
 b guard variable for PortalReportFunc(bool)::oldReport
 b guard variable for ResponseRules::CResponseSystem::ParseOneCriterion(char const*)::dummy
 b guard variable for ResponseRules::ResponseRulePartition::GetDictForRule(ResponseRules::CResponseSystem*, ResponseRules::Rule*)::kCONCEPT
 b guard variable for ResponseRules::ResponseRulePartition::GetDictForRule(ResponseRules::CResponseSystem*, ResponseRules::Rule*)::kSUBJECT
 b guard variable for ResponseRules::ResponseRulePartition::GetDictForRule(ResponseRules::CResponseSystem*, ResponseRules::Rule*)::kWHO
 b guard variable for SelectWeightedSequence(CStudioHdr*, int, int)::_counter
 b guard variable for UTIL_EntitiesInPVS(CBaseEntity*, CBaseEntity*)::lastOrg
 b guard variable for UTIL_IsPaintableSurface(csurface_t const&)::CEG_SURF_NO_PAINT_FLAG
 b guard variable for VScriptServerInit()::binding
 b guard variable for WaveTrace(char const*, char const*)::s_WaveTrace
 b guard variable for vgui::GetAnimationController()::s_pAnimationController
 b guard variable for vgui::GetPanelKeyBindingMapDictionary()::dictionary
 b hammer_update_entity_command
 b hammer_update_safe_entities_command
 b hammer_updateignorelist
 b handle_dummy
 b handle_test
 b hl2_gamerules
 b hostfile
 b hot_potato
 b hot_potato_catcher
 b hot_potato_socket
 b hot_potato_spawner
 b hover_turret_break_dist
 b hullcolor
 b hurtme
 b ice_sboxes_initialised
 b info_camera_link
 b info_constraint_anchor
 b info_coop_spawn
 b info_game_event_proxy
 b info_hint
 b info_intermission
 b info_ladder_dismount
 b info_landmark
 b info_landmark_entry
 b info_landmark_exit
 b info_mass_center
 b info_node
 b info_node_air
 b info_node_air_hint
 b info_node_climb
 b info_node_hint
 b info_node_link
 b info_node_link_controller
 b info_npc_spawn_destination
 b info_null
 b info_overlay_accessor
 b info_paint_sprayer
 b info_particle_system
 b info_placement_helper
 b info_player_deathmatch
 b info_player_ping_detector
 b info_player_start
 b info_player_teamspawn
 b info_portal_score
 b info_projecteddecal
 b info_radial_link_controller
 b info_remarkable
 b info_target
 b info_target_instructor_hint
 b info_target_personality_sphere
 b info_teleport_destination
 b info_vehicle_groundspawn
 b infodecal
 b instanced_scripted_scene
 b item_nugget
 b item_quality_chance_common
 b item_quality_chance_rare
 b item_quality_chance_unique
 b item_show_whitelistable_definitions_command
 b item_sodacan
 b item_suit
 b item_suitcharger
 b kdtree_test
 b keyframe_rope
 b keyframe_track
 b kill_command
 b killvector_command
 b lastMsgTime
 b light
 b light_directional
 b light_dynamic
 b light_environment
 b light_glspot
 b light_spot
 b lineartoscreen
 b lineartotexture
 b linked_portal_door
 b logic_achievement
 b logic_active_autosave
 b logic_auto
 b logic_autosave
 b logic_branch
 b logic_branch_listener
 b logic_case
 b logic_choreographed_scene
 b logic_collision_pair
 b logic_compare
 b logic_coop_manager
 b logic_eventlistener
 b logic_lineto
 b logic_measure_movement
 b logic_multicompare
 b logic_navigation
 b logic_playerproxy
 b logic_playmovie
 b logic_proximity
 b logic_random_outputs
 b logic_register_activator
 b logic_relay
 b logic_scene_list_manager
 b logic_script
 b logic_timer
 b logic_timescale
 b m_ActivityRemapDatabase
 b m_PVS
 b m_WeaponInfoDatabase
 b m_nPVSSize
 b material_modify_control
 b math_colorblend
 b math_counter
 b math_remap
 b mod_load_showstall
 b model_studio
 b momentary_door
 b momentary_rot_button
 b monster_furniture
 b monster_generic
 b mortarshell
 b motdfile
 b move_keyframed
 b move_rope
 b mp_disable_autokick_command
 b multisource
 b nFrameNumber
 b nPropBreakablesPerFrameCount
 b nav_add_to_selected_set
 b nav_add_to_selected_set_by_id_command
 b nav_analyze
 b nav_analyze_scripted
 b nav_avoid
 b nav_begin_area
 b nav_begin_deselecting
 b nav_begin_drag_deselecting
 b nav_begin_drag_selecting
 b nav_begin_selecting
 b nav_begin_shift_xy
 b nav_build_ladder
 b nav_check_file_consistency
 b nav_check_floor
 b nav_check_stairs
 b nav_chop_selected_command
 b nav_clear_selected_set
 b nav_clear_walkable_marks
 b nav_compress_id
 b nav_connect
 b nav_corner_lower_command
 b nav_corner_place_on_ground_command
 b nav_corner_raise_command
 b nav_corner_select
 b nav_crouch
 b nav_delete
 b nav_delete_marked
 b nav_disconnect
 b nav_dont_hide
 b nav_end_area
 b nav_end_deselecting
 b nav_end_drag_deselecting
 b nav_end_drag_selecting
 b nav_end_selecting
 b nav_end_shift_xy
 b nav_flood_select_command
 b nav_gen_cliffs_approx_command
 b nav_generate
 b nav_generate_incremental
 b nav_jump
 b nav_ladder_flip
 b nav_load
 b nav_lower_drag_volume_max
 b nav_lower_drag_volume_min
 b nav_make_sniper_spots
 b nav_mark
 b nav_mark_unnamed
 b nav_mark_walkable
 b nav_merge
 b nav_merge_mesh_command
 b nav_no_hostages
 b nav_no_jump
 b nav_place_floodfill
 b nav_place_list
 b nav_place_pick
 b nav_place_replace
 b nav_place_set
 b nav_precise
 b nav_raise_drag_volume_max
 b nav_raise_drag_volume_min
 b nav_recall_selected_set
 b nav_remove_from_selected_set
 b nav_remove_jump_areas
 b nav_run
 b nav_save
 b nav_save_selected_command
 b nav_select_blocked_areas_command
 b nav_select_damaging_areas_command
 b nav_select_half_space_command
 b nav_select_invalid_areas
 b nav_select_obstructed_areas_command
 b nav_select_overlapping
 b nav_select_radius_command
 b nav_select_stairs_command
 b nav_set_place_mode
 b nav_shift_command
 b nav_simplify_selected_command
 b nav_splice
 b nav_split
 b nav_stand
 b nav_stop
 b nav_store_selected_set
 b nav_strip
 b nav_subdivide_command
 b nav_test_stairs_command
 b nav_toggle_deselecting
 b nav_toggle_in_selected_set
 b nav_toggle_place_mode
 b nav_toggle_place_painting
 b nav_toggle_selected_set
 b nav_toggle_selecting
 b nav_transient
 b nav_unmark
 b nav_update_blocked
 b nav_update_lighting_command
 b nav_use_place
 b nav_walk
 b nav_warp_to_mark
 b noclip_command
 b npc_ammo_deplete_command
 b npc_bipass
 b npc_bullseye
 b npc_combat
 b npc_concussiongrenade
 b npc_conditions
 b npc_contactgrenade
 b npc_create
 b npc_create_aimed
 b npc_destroy
 b npc_destroy_unselected
 b npc_enemies
 b npc_enemyfinder
 b npc_enemyfinder_combinecannon
 b npc_focus
 b npc_freeze
 b npc_freeze_unselected_command
 b npc_furniture
 b npc_go
 b npc_go_do_run
 b npc_go_random
 b npc_grenade_frag
 b npc_handgrenade
 b npc_heal_command
 b npc_hover_turret
 b npc_kill
 b npc_maker
 b npc_nearest
 b npc_newnpc
 b npc_personality_core
 b npc_portal_turret_floor
 b npc_relationships
 b npc_reset
 b npc_rocket_turret
 b npc_route
 b npc_security_camera
 b npc_select
 b npc_set_freeze
 b npc_set_freeze_unselected_command
 b npc_speakall_command
 b npc_squads
 b npc_steering
 b npc_steering_all
 b npc_task_text
 b npc_tasks
 b npc_teleport
 b npc_template_maker
 b npc_thinknow_command
 b npc_turret_floor
 b npc_vehicledriver
 b npc_viewcone
 b npc_wheatley_boss
 b num_teams
 b old_armor
 b paint_sphere
 b paint_stream
 b particle_test_start
 b particle_test_stop
 b path_corner
 b path_corner_crash
 b path_track
 b phys_ballsocket
 b phys_bone_follower
 b phys_constraint
 b phys_constraintsystem
 b phys_convert
 b phys_hinge
 b phys_keepupright
 b phys_lengthconstraint
 b phys_magnet
 b phys_motor
 b phys_penetration_error_time
 b phys_pulleyconstraint
 b phys_ragdollconstraint
 b phys_ragdollmagnet
 b phys_slideconstraint
 b phys_spring
 b phys_thruster
 b phys_torque
 b physics_budget_command
 b physics_cannister
 b physics_constraints_command
 b physics_debug_entity_command
 b physics_entity_solver
 b physics_highlight_active_command
 b physics_npc_solver
 b physics_prop
 b physics_prop_ragdoll
 b physics_prop_statue
 b physics_report_active_command
 b physics_select_command
 b physicsclonearea
 b physicsshadowclone
 b physicsshadowupdate_render
 b picker
 b placeDirectory
 b player
 b player_loadsaved
 b player_manager
 b player_pickup
 b player_speedmod
 b player_weaponstrip
 b point_anglesensor
 b point_angularvelocitysensor
 b point_bonusmaps_accessor
 b point_broadcastclientcommand
 b point_camera
 b point_changelevel
 b point_clientcommand
 b point_combine_ball_launcher
 b point_commentary_node
 b point_commentary_viewpoint
 b point_devshot_camera
 b point_enable_motion_fixup
 b point_energy_ball_launcher
 b point_entity_finder
 b point_futbol_shooter
 b point_gamestats_counter
 b point_hurt
 b point_laser_target
 b point_message
 b point_playermoveconstraint
 b point_posecontroller
 b point_proximity_sensor
 b point_push
 b point_servercommand
 b point_spotlight
 b point_survey
 b point_teleport
 b point_template
 b point_tesla
 b point_velocitysensor
 b point_viewcontrol
 b point_viewcontrol_multiplayer
 b point_viewproxy
 b portal_base2D
 b portal_gamerules
 b portal_mp_stats
 b portal_place_command
 b portal_procedural_generator
 b portal_race_checkpoint
 b portal_ragdoll
 b portal_report_command
 b portal_stats_controller
 b portal_tauntcam_dist
 b portalmp_gamerules
 b portalsimulator_collisionentity
 b postprocess_controller
 b predicted_viewmodel
 b procedural_generator_solve_it
 b procedural_generator_test
 b procedural_surface_map
 b projected_entity_ambient_sound_proxy
 b projected_tractor_beam_entity
 b projected_wall_entity
 b prop_button
 b prop_combine_ball
 b prop_debug
 b prop_door_rotating
 b prop_dynamic
 b prop_dynamic_create
 b prop_dynamic_ornament
 b prop_dynamic_override
 b prop_energy_ball
 b prop_exploding_futbol
 b prop_floor_ball_button
 b prop_floor_button
 b prop_floor_cube_button
 b prop_glados_core
 b prop_glass_futbol
 b prop_glass_futbol_socket
 b prop_glass_futbol_spawner
 b prop_hallucination
 b prop_indicator_panel
 b prop_laser_catcher
 b prop_laser_relay
 b prop_linked_portal_door
 b prop_mirror
 b prop_monster_box
 b prop_paint_bomb
 b prop_personality_sphere
 b prop_physics
 b prop_physics_create
 b prop_physics_multiplayer
 b prop_physics_override
 b prop_physics_paintable
 b prop_physics_respawnable
 b prop_portal
 b prop_portal_stats_display
 b prop_ragdoll
 b prop_ragdoll_attached
 b prop_rocket_tripwire
 b prop_sphere
 b prop_talker
 b prop_telescopic_arm
 b prop_testchamber_door
 b prop_tic_tac_toe_panel
 b prop_tractor_beam
 b prop_under_button
 b prop_under_floor_button
 b prop_vehicle
 b prop_vehicle_choreo_generic
 b prop_vehicle_driveable
 b prop_wall_projector
 b prop_weighted_cube
 b protobuf_AddDesc_base_5fgcmessages_2eproto()::already_here
 b protobuf_AddDesc_gcsdk_5fgcmessages_2eproto()::already_here
 b protobuf_AddDesc_steammessages_2eproto()::already_here
 b raggib
 b record_research_data
 b removeallpaint
 b report_entities_command
 b report_simthinklist_command
 b report_soundpatch_command
 b report_touchlinks_command
 b resetGameStats
 b restart_entities
 b rocket_turret_projectile
 b rope_anchor
 b rr_debug_responseconcept_exclude
 b rr_forceconcept
 b rr_reloadresponsesystems_command
 b s_ActiveShadowClones
 b s_AllExtenders
 b s_AllProjectors
 b s_BoneMutex
 b s_BraceCharacters
 b s_BreakSet
 b s_BrushPolyhedronMemory
 b s_BuildReverseMap
 b s_CGCServerSystem
 b s_CPS_AGS_EL_Singleton
 b s_CombatCharVisCache
 b s_CoopTeamAssignments
 b s_DebugHistory
 b s_DirtyKDTree
 b s_DisablePenetatrationSolving
 b s_EffectServer
 b s_EmptyConVar
 b s_EntityClones
 b s_GameStats_Singleton
 b s_GameSystems
 b s_GameSystemsPerFrame
 b s_HL2EventLog
 b s_HLTVDirector
 b s_HashChains
 b s_IsShadowClone
 b s_LightMutex
 b s_ListEnemyfinders
 b s_MapOrigin
 b s_Microphones
 b s_MoveHelperServer
 b s_OwnedEntityMap
 b s_ParticleSystemMgr
 b s_PortalLinkageGroups
 b s_PortalSimulatorCollisionEntities
 b s_PortalSimulators
 b s_PrecacheRegister
 b s_QCache
 b s_RemoveImmediateSemaphore
 b s_RndOrder
 b s_SCLLManager
 b s_SIMDRandContexts
 b s_SaveOverflow
 b s_SpawnLocations
 b s_StaticPropPolyhedronMemory
 b s_Steam3Server
 b s_SteamAPIContext
 b s_SteamGameServerAPIContext
 b s_SuccessfulSpeculatives
 b s_TEPhysicsProp
 b s_TempMemoryPolyhedron
 b s_TempMemoryPolyhedron_Buffer
 b s_TraceFilter
 b s_UTIL_Remove_PhysicsStack
 b s_VPhysicsClipWatcher
 b s_VictimList
 b s_WastedSpeculativeUpdates
 b s_bAllocatorInitialized
 b s_bBuiltBreakSet
 b s_bChangedMass
 b s_bInDMXContext
 b s_bPenetrationSolvingDisabled
 b s_bPrecachesRegistered
 b s_bRegistered
 b s_bResourceFCRegistered
 b s_bRunningWithDebugModules
 b s_bSuppressRebindChecks
 b s_bSystemsInitted
 b s_bUseUnshadowed
 b s_currentSortingColumnTypeIsText
 b s_detailController
 b s_fSavedMass
 b s_factories
 b s_iTooltipWindowCount
 b s_nBaseTextureVarCache
 b s_nCVarFlag
 b s_nConnectionCount
 b s_nNumCacheMisses
 b s_nNumCacheQueries
 b s_nRegistrationCount
 b s_nTraceFilterCount
 b s_pClassLists
 b s_pConnectionRegistration
 b s_pCurrentSortingColumn
 b s_pCurrentSortingListPanel
 b s_pMapName
 b s_pNonModifiedPointerProxyHead
 b s_pPerFrameSystemList
 b s_pSortFunc
 b s_pSystemList
 b s_pTokenBuf
 b s_pUnshadowed
 b s_szPseudoUniqueID
 b s_szSaveFileName
 b s_szStatUploadRegistryKeyName
 b s_windControllers
 b say_command
 b say_team_command
 b scene_async_prefetch_spew
 b scene_clamplookat
 b scene_flush_command
 b scene_forcecombined
 b scene_manager
 b scene_maxcaptionradius
 b scene_playvcd_command
 b scene_showfaceto
 b scene_showlook
 b scene_showmoveto
 b scene_showunlock
 b script_command
 b script_debug_command
 b script_dump_all_command
 b script_execute_command
 b script_help_command
 b script_intro
 b script_reload_code_command
 b script_reload_entity_code_command
 b script_reload_think_command
 b scripted_scene
 b scripted_sentence
 b scripted_sequence
 b scripted_target
 b server_game_time_command
 b setang
 b setang_exact_command
 b setmodel
 b setpos_command
 b setpos_exact_command
 b setpos_player_command
 b shadow_control
 b shake
 b showtriggers_toggle
 b simple_physics_brush
 b simple_physics_prop
 b sk_suitcharger
 b sk_suitcharger_citadel
 b sk_suitcharger_citadel_maxarmor
 b sky_camera
 b skybox_swap
 b skybox_swapper
 b smoothstairs
 b soundent
 b soundpatch_captionlength
 b soundscape_flush_command
 b spark_shower
 b speechListIndex
 b speechListSounds
 b spotlight_end
 b spraycan
 b st_szDestinationMap
 b st_szNextMap
 b st_szNextSpot
 b st_szOriginMap
 b startneurotoxins_command
 b std::__ioinit
 b sunlight_shadow_control
 b surfaceprop_command
 b sv_benchmark_autovprofrecord
 b sv_benchmark_force_start_command
 b sv_benchmark_numticks
 b sv_clockcorrection_msecs
 b sv_debug_dumpportalhole_nextcheck
 b sv_dump_portalsimulator_collision
 b sv_dump_portalsimulator_holeshapes
 b sv_findsoundname_command
 b sv_optimizedmovement
 b sv_playerperfhistorycount
 b sv_querycache_stats_command
 b sv_reload_node_position_keys_command
 b sv_showhitboxes
 b sv_soundemitter_filecheck_command
 b sv_soundemitter_flush_command
 b sv_soundemitter_reload_command
 b sv_soundemitter_spew_command
 b sv_soundscape_printdebuginfo_command
 b sv_thinktimecheck
 b sv_threaded_init
 b tanktrain_ai
 b tanktrain_aitarget
 b target_cdaudio
 b target_changegravity
 b te_tester
 b team_manager
 b team_names
 b team_scores
 b test_dispatcheffect
 b test_effect
 b test_entity_blocker
 b test_outtro_stats
 b test_proxytoggle
 b test_traceline
 b texturetolinear
 b trigger
 b trigger_auto_crouch
 b trigger_autosave
 b trigger_brush
 b trigger_catapult
 b trigger_cdaudio
 b trigger_changelevel
 b trigger_fog
 b trigger_gravity
 b trigger_hierarchy
 b trigger_hurt
 b trigger_impact
 b trigger_look
 b trigger_multiple
 b trigger_once
 b trigger_paint_cleanser
 b trigger_physics_trap
 b trigger_ping_detector
 b trigger_playermovement
 b trigger_playerteam
 b trigger_portal_button
 b trigger_portal_cleanser
 b trigger_proximity
 b trigger_push
 b trigger_remove
 b trigger_rpgfire
 b trigger_serverragdoll
 b trigger_soundscape
 b trigger_teleport
 b trigger_togglesave
 b trigger_tonemap
 b trigger_tractorbeam
 b trigger_transition
 b trigger_vphysics_motion
 b trigger_waterydeath
 b trigger_weapon_dissolve
 b trigger_weapon_strip
 b trigger_wind
 b tv_allow_camera_man
 b tv_allow_static_shots
 b tv_delay
 b upgrade_portal
 b upgrade_potatogun
 b use
 b vLaserCatcherExtents
 b vRelayExtents
 b variant_t::ToString() const::szBuf
 b vec2_invalid
 b vec2_origin
 b vec4_invalid
 b vec4_origin
 b vehicle_flushscript_command
 b vehicle_viewcontroller
 b vgui::AnimatingImagePanel::GetDescription()::buf
 b vgui::Button::GetDescription()::buf
 b vgui::CBitmapImagePanel::GetDescription()::buf
 b vgui::EditablePanel::GetControlString(char const*, char const*)::buf
 b vgui::FocusNavGroup::RequestFocusNext(unsigned int)::stack_depth
 b vgui::Frame::GetDescription()::buf
 b vgui::GetAnimationController()::s_pAnimationController
 b vgui::GetPanelKeyBindingMapDictionary()::dictionary
 b vgui::ImagePanel::GetDescription()::buf
 b vgui::Label::GetDescription()::buf
 b vgui::Panel::InitPropertyConverters()::initialized
 b vgui::PanelListPanel::GetDescription()::buf
 b vgui::ProgressBar::GetDescription()::buf
 b vgui::RadioButton::GetDescription()::buf
 b vgui::RichText::GetDescription()::buf
 b vgui::ScalableImagePanel::GetDescription()::buf
 b vgui::TextEntry::GetDescription()::buf
 b vgui::TextImage::SetUseAsianWordWrapping()::bCheckForAsianLanguage
 b vgui::TextImage::SetUseAsianWordWrapping()::bIsAsianLanguage
 b vgui::URLLabel::GetDescription()::buf
 b vgui::g_MenuMgr
 b vgui::g_szControlsModuleName
 b vgui::vguiButton_UnpackInit::s_pUnpack
 b vgui::vguiLabel_UnpackInit::s_pUnpack
 b vgui::vguiPanel_UnpackInit::s_pUnpack
 b vgui_indicator_panel
 b vgui_level_placard_display
 b vgui_movie_display
 b vgui_mp_lobby_display
 b vgui_neurotoxin_countdown
 b vgui_screen
 b vgui_screen_team
 b vgui_slideshow_display
 b viewmodel
 b violence_ablood
 b violence_agibs
 b violence_hblood
 b violence_hgibs
 b viper_bug_command
 b voxeltree_box
 b voxeltree_playerview
 b voxeltree_sphere
 b voxeltree_view
 b water_lod_control
 b waterbullet
 b wc_air_edit_further
 b wc_air_edit_nearer
 b wc_air_node_edit
 b wc_create
 b wc_destroy
 b wc_destroy_undo
 b wc_link_edit
 b weapon_cubemap
 b weapon_portal_base
 b weapon_portalgun
 b weapon_promo_antenna_ball
 b weapon_promo_antenna_egg
 b weapon_promo_helmet_ball
 b weapon_promo_helmet_egg
 b wearable_item
 b window_pane
 b world_items
 b worldspawn
 calloc
 ceil
 ceilf
 close$UNIX2003
 cos
 cosf
 d (anonymous namespace)::protobuf_AssignDescriptors_once_
 d (anonymous namespace)::s_PlayerInfoManager_V1
 d .memset_pattern
 d AI_DEFAULT_STANDOFF_PARAMS
 d AI_SAVE_RESTORE_VERSION
 d BotNumber
 d CAI_BaseNPC::ClearSenseConditions()::conditionsToClear
 d CAI_BaseNPC::DrawDebugTextOverlays()::pMoveNames
 d CAI_BaseNPC::NPCThink()::ppszEfficiencies
 d CAI_BaseNPC::NPCThink()::ppszMoveEfficiencies
 d CAI_BaseNPC::OnListened()::conditionsToClear
 d CAI_BaseNPC::OnLooked(int)::conditionsToClear
 d CAI_BaseNPC::PreNPCThink()::iPrevFrame
 d CAI_BaseNPC::ReportAIState()::pStateNames
 d CAI_BaseNPC::SetScriptedScheduleIgnoreConditions(Interruptability_t)::g_DamageConditions
 d CAI_BaseNPC::SetScriptedScheduleIgnoreConditions(Interruptability_t)::g_GeneralConditions
 d CAI_BaseNPC::UpdateEfficiency(bool)::iPrevFrame
 d CAI_ExpresserHost_NPC_DoModifyOrAppendCriteria(CAI_BaseNPC*, ResponseRules::CriteriaSet&)::pStateNames
 d CAI_Navigator::SimplifyPathForward(float)::fullScanParams
 d CAI_Navigator::SimplifyPathQuick()::quickScanParams
 d CBaseButton::DrawDebugTextOverlays()::pszStates
 d CBaseCombatWeapon::GetProficiencyValues()::defaultWeaponProficiencyTable
 d CBaseEntity::RunVScripts()::sCallChainFunctions
 d CBaseHLCombatWeapon::GetDefaultProficiencyValues()::g_BaseWeaponProficiencyTable
 d CBasePortalCombatWeapon::GetDefaultProficiencyValues()::g_BaseWeaponProficiencyTable
 d CEG_PORTAL_POWER
 d CEG_SURF_NO_PORTAL_FLAG
 d CGlobalState::DumpGlobals()::estates
 d CHLTVDirector::GetModEvents()::s_modevents
 d COMMENTARY_SAVE_RESTORE_VERSION
 d CPortal_Player::PlayPaintSounds(CUtlVectorFixed<PaintPowerChoiceResult_t, 5ul> const&)::soundList
 d CRTime::RTime32FromFmtString(char const*, char const*)::rgszMonthNames
 d CRestore::ReadFields(char const*, void*, datamap_t*, typedescription_t*, int)::lastName
 d EVENTQUEUE_SAVE_RESTORE_VERSION
 d GCSDK::g_JobType_CGCSOCacheSubscribedJob
 d GCSDK::g_JobType_CGCSOCacheSubscriptionCheck
 d GCSDK::g_JobType_CGCSOCacheUnsubscribedJob
 d GCSDK::g_JobType_CGCSOCreateJob
 d GCSDK::g_JobType_CGCSODestroyJob
 d GCSDK::g_JobType_CGCSOUpdateJob
 d GCSDK::g_JobType_CGCSOUpdateMultipleJob
 d GCSDK::k_prgchJobPauseReason
 d GetAttachTypeFromString(char const*)::pAttachmentNames
 d GetMassEquivalent(float)::masstext
 d GetMaterialIndexDataOpsProxy()::s_MaterialIndexDataOpsProxy
 d PHYS_SAVE_RESTORE_VERSION
 d PrecacheInstancedScene(char const*)::nMakingReslists
 d RESPONSESYSTEM_SAVE_RESTORE_VERSION
 d TEMPLATE_SAVE_RESTORE_VERSION
 d VSCRIPT_SERVER_SAVE_RESTORE_VERSION
 d VScriptCompileScript(char const*, bool)::pszExtensions
 d VTT for (anonymous namespace)::CaptionGripPanel
 d VTT for (anonymous namespace)::GripPanel
 d VTT for (anonymous namespace)::ScrollBarButton
 d __g_CServerGameTags_singleton
 d boolconverter
 d cellMap
 d colorconverter
 d constraintevents
 d construction vtable for vgui::Button-in-(anonymous namespace)::ScrollBarButton
 d construction vtable for vgui::Label-in-(anonymous namespace)::ScrollBarButton
 d dyld__mach_header
 d floatconverter
 d fontconverter
 d gDamageTableRegistry
 d gTitleComments
 d g_ActivityDataOps
 d g_AntlionFollowFormation
 d g_AntlionFollowFormationSlots
 d g_CCNameMap
 d g_CommanderFollowFormation
 d g_CommanderFollowFormationSlots
 d g_ConVarAccessor
 d g_DefaultLightstyles
 d g_EntFireAutoComplete
 d g_HunterFollowFormation
 d g_HunterFollowFormationSlots
 d g_InterpolatorNameMap
 d g_JobType_CGCDev_NewItemRequestResponse
 d g_JobType_CGCReplicateConVars
 d g_JobType_CGCUpdateConVar
 d g_JobType_CGCUpdateItemSchema
 d g_MediumFollowFormation
 d g_MediumFollowFormationSlots
 d g_NameMap
 d g_NullSurface
 d g_ProficiencyNames
 d g_Script_spawn_helper
 d g_Script_vscript_server
 d g_ServerSideFlexControllers
 d g_SidekickFollowFormation
 d g_SidekickFollowFormationSlots
 d g_SimpleFollowFormation
 d g_SimpleFollowFormationSlots
 d g_TightFollowFormation
 d g_TightFollowFormationSlots
 d g_TopDownTightFollowFormation
 d g_VortigauntFollowFormation
 d g_VortigauntFollowFormationSlots
 d g_WideFollowFormation
 d g_WideFollowFormationSlots
 d g_bCleanupDatObject
 d g_bEnableProxy
 d g_pInterfaceGlobals
 d g_pSoundLevels
 d g_psxExplodableEntities
 d g_pszFizzlingVortexObjects
 d g_pszPortalNonCleansable
 d g_pszPortalNonTeleportable
 d g_pszPortalPhysicsCloneTouching
 d glassAngularTable
 d glassLinearTable
 d intconverter
 d npcAngularTable
 d npcLinearTable
 d p_floatconverter
 d p_intconverter
 d playerAngularTable
 d playerLinearTable
 d playerVehicleAngularTable
 d playerVehicleLinearTable
 d s_BotManager
 d s_ChildOperatorDefinition
 d s_DamageTypeToStrTable
 d s_DefaultAccessor
 d s_DefaultParticleSystemQuery
 d s_DummyPortalSimulatorCallback
 d s_EItemCriteriaOperator
 d s_IKSaveRestoreOp
 d s_LastFileLoadingFrom
 d s_NameMap
 d s_ParticleSystemQuery
 d s_PlayerInfoManager
 d s_PrecacheHandler
 d s_RemapOperatorNameTable
 d s_RtEnvNameMap
 d s_SoundPatchSaveRestoreOps
 d s_TooltipWindow
 d s_bSortAscending
 d s_bSortAscendingSecondary
 d s_iDuplicateIndex
 d s_nDLLIdentifier
 d s_pConversionArrays_NoEscConversion
 d s_pConversionArrays_StringCharConversion
 d s_pPrecacheResourceTypeName
 d stringconverter
 d textureidconverter
 d typeinfo for (anonymous namespace)::CPlayerInfoManager_V1
 d typeinfo for (anonymous namespace)::CaptionGripPanel
 d typeinfo for (anonymous namespace)::GripPanel
 d typeinfo for (anonymous namespace)::IPlayerInfoManager_V1
 d typeinfo for (anonymous namespace)::ScrollBarButton
 d vgui::Panel::OnOldMessage(KeyValues*, unsigned int)::s_bDebugMessages
 d vtable for (anonymous namespace)::CPlayerInfoManager_V1
 d vtable for (anonymous namespace)::CaptionGripPanel
 d vtable for (anonymous namespace)::GripPanel
 d vtable for (anonymous namespace)::ScrollBarButton
 d xposconverter
 d yposconverter
 daylight
 dlclose
 dlerror
 dlopen
 dlsym
 expf
 fflush
 floor
 floorf
 fmod
 fmodf
 fprintf
 free
 g_ClockSpeed
 g_ClockSpeedMillisecondsMultiplier
 g_ClockSpeedSecondsMultiplier
 g_VProfCurrentProfile
 g_VProfSignalSpike
 g_dwClockSpeed
 g_nThreadID
 g_pMemAlloc
 g_pThreadPool
 getcwd
 iconv
 iconv_close
 iconv_open
 localtime
 log
 log10
 logf
 lseek
 malloc
 malloc_size
 memcmp
 memcpy
 memmove
 memset
 memset_pattern16
 mktime$UNIX2003
 pow
 printf
 pthread_mutex_destroy
 pthread_mutex_init
 pthread_mutex_lock
 pthread_mutex_unlock
 pthread_mutexattr_init
 pthread_mutexattr_settype
 pthread_once
 qsort
 r .memset_pattern
 r .memset_pattern121
 r AI_NAVIGATOR_SAVE_VERSION
 r CAI_BaseNPC::NPCThink()::g_DecisionIntervals
 r CAI_BaseNPC::StartNPC()::nextThinkTimes
 r CAI_BaseNPC::UpdateEfficiency(bool)::mappings
 r CAI_BaseNPC::UpdateEfficiency(bool)::stateBase
 r CAI_Motor::MoveNormalExecute(AILocalMoveGoal_t const&)::moveResults
 r CAI_Navigator::Move(float)::failures
 r CAI_Pathfinder::CTriDebugOverlay::AddTriOverlayLines(Vector const&, Vector const&, Vector const&, AIMoveTrace_t const&, AIMoveTrace_t const&, bool)::s_TriangulationColor
 r CAI_ScriptConditions::EvalState(CAI_ScriptConditions::EvalArgs_t const&)::stateVals
 r CAI_ScriptedSchedule::StartSchedule(CAI_BaseNPC*)::forcedStatesMap
 r CBaseGameStats_Driver::SendData()::szFileName
 r CBasePlayer::FindUseEntity()::tangents
 r CPortal_Player::FindUseEntity(CPortal_Base2D**)::tangents
 r CPortal_Player::FindUseEntityThroughPortal()::tangents
 r FIZZLER_LOOPING_SOUND
 r FIZZLER_START_SOUND
 r FIZZLER_STOP_SOUND
 r GCSDK::k_rgchUnknown
 r GCSDK::s_MemPoolConfigAllocSize
 r LASER_FLESH_BURN_SOUND
 r LASER_GLOW_EFFECT
 r LASER_LOOPING_SOUND
 r LETHAL_LASER_LOOPING_SOUND
 r MAX_LOCAL_NAV_DIST_FLY
 r MAX_LOCAL_NAV_DIST_GROUND
 r MAX_PROBE_DIST
 r NO_PVS_ROUTE_SIMPLIFY_TIME_DELAY
 r PAINTABLE_ENTITY_USER_DATA_CLASS_NAME
 r PLANE_SOLVER_THINK_FREQUENCY
 r PLAYER_LASER_BURN_PAIN_SOUND
 r QUICK_SIMPLIFY_TIME_DELAY
 r REFLECTOR_GLOW_EFFECT
 r ROUTE_SIMPLIFY_TIME_DELAY
 r SCHRODINGER_THINK_CONTEXT
 r TIME_DELAY_FULL_DIRECT_PROBE
 r __gnu_cxx::__stl_prime_list
 r gSizes
 r g_AI_MoveSuggWeights
 r g_nRandomValues
 r ice_keyrot
 r ice_pbox
 r ice_smod
 r ice_sxor
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CCommunity_GamePersonalDataCategoryInfo_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CCommunity_GetGamePersonalDataCategories_Request_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CCommunity_GetGamePersonalDataCategories_Response_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CCommunity_GetGamePersonalDataEntries_Request_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CCommunity_GetGamePersonalDataEntries_Response_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CCommunity_TerminateGamePersonalDataEntries_Request_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CCommunity_TerminateGamePersonalDataEntries_Response_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CGCStorePurchaseInit_LineItem_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgAdjustItemEquippedState_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgCommunityMapAddQueueHistoryEntry_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgCommunityMapItemVoteSummaryResponse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgCommunityMapItemVoteSummary_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgConVarValue_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgDevDebugRollLootRequest_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgDevNewItemRequest_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCClientDisplayNotification_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCError_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCNameItemNotification_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCReportAbuseResponse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCReportAbuse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCStorePurchaseInitResponse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGCStorePurchaseInit_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgGameServerInfo_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgIncrementKillCountAttribute_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgInvitationCreated_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgInviteToParty_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgItemAcknowledged_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgKickFromParty_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgLeaveParty_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgPartyInviteResponse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgPlaytestMarkDemoForDelete_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgPlaytestMarkDemoNotNew_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgPlaytestRemoveDemo_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgPlaytestReportDemoSession_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgPlaytestReportDemo_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgPlaytestRetrieveDemoHandlesResponse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgPlaytestRetrieveDemoHandles_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgPlaytestRetrieveDemoPlayersForMapResponse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgPlaytestRetrieveDemoPlayersForMap_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgPlaytestRetrieveNewDemoCountResponse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgPlaytestTestMessage_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgReplayUploadedToYouTube_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgReplicateConVars_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgRequestInventoryRefresh_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgRequestItemSchemaData_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgSelectItemPresetForClassReply_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgSelectItemPresetForClass_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgServerAvailable_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgSetPresetItemPosition_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgSortItems_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgStoreGetUserDataResponse_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgStoreGetUserData_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgSystemBroadcast_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgUpdateItemSchema_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgUpdatePeriodicEvent_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CMsgUseItem_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOEconClaimCode_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOEconGameAccountClient_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOEconItemAttribute_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOEconItemEquipped_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOEconItemPresetInstance_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOEconItem_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOItemCommunityMap_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOItemCriteriaCondition_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOItemCriteria_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOItemRecipe_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOLobbyInvite_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOPartyInvite_offsets_
 r protobuf_AssignDesc_base_5fgcmessages_2eproto()::CSOSelectedItemPreset_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOCacheSubscribed_SubscribedType_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOCacheSubscribed_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOCacheSubscriptionCheck_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOCacheSubscriptionRefresh_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOCacheUnsubscribed_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOCacheVersion_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOMultipleObjects_SingleObject_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOMultipleObjects_offsets_
 r protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto()::CMsgSOSingleObject_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgGetIPLocationResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgGetIPLocation_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgGetSystemStatsResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgGetSystemStats_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgMemCachedDelete_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgMemCachedGetResponse_ValueTag_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgMemCachedGetResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgMemCachedGet_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgMemCachedSet_KeyPair_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgMemCachedSet_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CGCMsgSystemStatsSchema_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CIPLocationInfo_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMAddFreeLicenseResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMAddFreeLicense_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMFindAccountsResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMFindAccounts_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMGetLicensesResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMGetLicenses_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMGetUserGameStatsResponse_Achievement_Blocks_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMGetUserGameStatsResponse_Stats_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMGetUserGameStatsResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMGetUserGameStats_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMSendEmailResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMSendEmail_PersonaNameReplacementToken_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMSendEmail_ReplacementToken_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgAMSendEmail_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCGetCommandListResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCGetCommandList_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCGetEmailTemplateResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgGCGetEmailTemplate_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgHttpRequest_QueryParam_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgHttpRequest_RequestHeader_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgHttpRequest_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgHttpResponse_ResponseHeader_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgHttpResponse_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgNotifyWatchdog_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgPackageLicense_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgProtoBufHeader_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgWebAPIKey_offsets_
 r protobuf_AssignDesc_steammessages_2eproto()::CMsgWebAPIRequest_offsets_
 r pulCRCTable
 r s_ExtIndices
 r s_MatIndices
 r s_pAttributeSize
 r s_pDangerDistFactor
 r typeinfo name for (anonymous namespace)::CPlayerInfoManager_V1
 r typeinfo name for (anonymous namespace)::CaptionGripPanel
 r typeinfo name for (anonymous namespace)::GripPanel
 r typeinfo name for (anonymous namespace)::IPlayerInfoManager_V1
 r typeinfo name for (anonymous namespace)::ScrollBarButton
 r wszCantBeginLine
 r wszCantBreakRepeated
 r wszCantEndLine
 raise
 read$UNIX2003
 realloc
 sin
 sinf
 snprintf
 sprintf
 sscanf
 std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
 std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
 std::_Rb_tree_increment(std::_Rb_tree_node_base*)
 std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
 std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
 std::__throw_bad_alloc()
 std::__throw_length_error(char const*)
 std::__throw_logic_error(char const*)
 std::__throw_out_of_range(char const*)
 std::allocator<char>::allocator(std::allocator<char> const&)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string()
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(unsigned long, char, std::allocator<char> const&)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
 std::ios_base::Init::Init()
 std::ios_base::Init::~Init()
 std::istream::read(char*, int)
 std::ostream::write(char const*, int)
 std::string::_M_leak_hard()
 std::string::_M_mutate(unsigned long, unsigned long, unsigned long)
 std::string::_Rep::_M_destroy(std::allocator<char> const&)
 std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)
 std::string::_Rep::_S_empty_rep_storage
 std::string::_Rep::_S_terminal
 std::string::append(char const*)
 std::string::append(char const*, unsigned long)
 std::string::append(std::string const&)
 std::string::append(std::string const&, unsigned long, unsigned long)
 std::string::append(unsigned long, char)
 std::string::assign(char const*)
 std::string::assign(char const*, unsigned long)
 std::string::assign(std::string const&)
 std::string::compare(char const*) const
 std::string::compare(unsigned long, unsigned long, std::string const&) const
 std::string::find(char const*, unsigned long, unsigned long) const
 std::string::find(char, unsigned long) const
 std::string::find_first_not_of(char const*, unsigned long, unsigned long) const
 std::string::find_first_of(char const*, unsigned long, unsigned long) const
 std::string::push_back(char)
 std::string::replace(unsigned long, unsigned long, char const*, unsigned long)
 std::string::reserve(unsigned long)
 std::string::resize(unsigned long, char)
 std::string::rfind(char, unsigned long) const
 std::terminate()
 strcasecmp
 strcat
 strchr
 strcmp
 strcpy
 strerror$UNIX2003
 strlen
 strncat
 strncmp
 strncpy
 strpbrk
 strstr
 strtod$UNIX2003
 strtof$UNIX2003
 strtok
 strtok_r
 strtol
 strtoll
 strtoul
 strtoull
 swprintf
 swscanf
 t (anonymous namespace)::CPlayerInfoManager_V1::GetPlayerInfo(edict_t*)
 t (anonymous namespace)::CaptionGripPanel::CaptionGripPanel(vgui::Frame*, char const*)
 t (anonymous namespace)::CaptionGripPanel::moved(int, int)
 t (anonymous namespace)::CaptionGripPanel::tryToDock(unsigned int, int&, int&)
 t (anonymous namespace)::CaptionGripPanel::~CaptionGripPanel()
 t (anonymous namespace)::GripPanel::ApplySchemeSettings(vgui::IScheme*)
 t (anonymous namespace)::GripPanel::GripPanel(vgui::Frame*, char const*, int, int)
 t (anonymous namespace)::GripPanel::OnCursorMoved(int, int)
 t (anonymous namespace)::GripPanel::OnMouseCaptureLost()
 t (anonymous namespace)::GripPanel::OnMouseDoublePressed(ButtonCode_t)
 t (anonymous namespace)::GripPanel::OnMousePressed(ButtonCode_t)
 t (anonymous namespace)::GripPanel::OnMouseReleased(ButtonCode_t)
 t (anonymous namespace)::GripPanel::Paint()
 t (anonymous namespace)::GripPanel::PaintBackground()
 t (anonymous namespace)::GripPanel::moved(int, int)
 t (anonymous namespace)::GripPanel::~GripPanel()
 t (anonymous namespace)::ScrollBarButton::ApplySchemeSettings(vgui::IScheme*)
 t (anonymous namespace)::ScrollBarButton::OnMouseFocusTicked()
 t (anonymous namespace)::ScrollBarButton::OnMousePressed(ButtonCode_t)
 t (anonymous namespace)::ScrollBarButton::OnMouseReleased(ButtonCode_t)
 t (anonymous namespace)::ScrollBarButton::~ScrollBarButton()
 t (anonymous namespace)::__CreateCPlayerInfoManager_V1IPlayerInfoManager_V1_interface()
 t (anonymous namespace)::protobuf_RegisterTypes(std::string const&)
 t AdjustRayToPlane(Ray_t const&, Ray_t&, Vector const&, VPlane const&, float&)
 t AlignBoxes(matrix3x4_t*, Vector const&, Vector const&)
 t AnalysisProgress(char const*, int, int, bool)
 t AscendingSortFunc(void const*, void const*)
 t BuildTeleportList_r(CBaseEntity*, CUtlVector<TeleportListEntry_t, CUtlMemory<TeleportListEntry_t, int> >&)
 t CCAI_ActBusyBehaviorFactory()
 t CC_FadeIn(CCommand const&)
 t CC_FadeOut(CCommand const&)
 t CC_RR_Debug_ResponseConcept_Exclude(CCommand const&)
 t CC_ResetGameStats(CCommand const&)
 t CalcLocalHierarchyAnimation(CStudioHdr const*, matrix3x4a_t*, CBoneBitList&, Vector*, Quaternion*, mstudiobone_t const*, mstudiolocalhierarchy_t*, int, int, float, int, float, int)
 t CalcZeroframeData(CStudioHdr const*, studiohdr_t const*, virtualgroup_t const*, mstudiobone_t const*, mstudioanimdesc_t&, float, Vector*, Quaternion*, int, float)
 t CalculateKeyValuesCRCRecursive(KeyValues*, unsigned long*, bool)
 t CallbackHighlight(CBaseEntity*)
 t CallbackReport(CBaseEntity*)
 t CarveEntity(PS_PlacementData_t&, PS_SD_Dynamic_CarvedEntities_t&, PS_SD_Dynamic_CarvedEntities_CarvedEntity_t&)
 t CarveWallBrushes_Sub(float*, CUtlVector<CPolyhedron*, CUtlMemory<CPolyhedron*, int> >&, PS_InternalData_t&, CUtlVector<CPolyhedron*, CUtlMemory<CPolyhedron*, int> >&, float, float, Vector const&, Vector const&)
 t ChoreEventStartTimeLessFunc(CChoreoEvent* const&, CChoreoEvent* const&)
 t ClipRayToHitbox(Ray_t const&, mstudiobbox_t*, matrix3x4_t&, CGameTrace&)
 t CollideablePtr_KeyCompareFunc(vcollide_t* const&, vcollide_t* const&)
 t CommandNavCheckFloor()
 t CommandNavCheckStairs()
 t CommandNavSelectOverlapping()
 t CommandNavUpdateBlocked()
 t CompareSpawnOrder(HierarchicalSpawn_t*, HierarchicalSpawn_t*)
 t ComputePushStartMatrix(matrix3x4_t&, CBaseEntity*, pushblock_t const&)
 t ComputeSeparatingPlane(matrix3x4_t const&, matrix3x4_t const&, Vector const&, Vector const&, float, cplane_t*)
 t ComputeSpawnHierarchyDepth_r(CBaseEntity*)
 t ConvertBrushListToClippedPolyhedronList(unsigned int const*, int, float const*, int, float, CUtlVector<CPolyhedron*, CUtlMemory<CPolyhedron*, int> >*)
 t ConvertBrushToPolyhedron(int, int, bool)
 t ConvertPolyhedronsToCollideable(CPolyhedron**, int)
 t CreateAirboat(CBasePlayer*)
 t CreateJeep(CBasePlayer*)
 t Create_AnimatingImagePanel()
 t Create_Button()
 t Create_CBitmapImagePanel()
 t Create_CTreeViewListControl()
 t Create_CheckButton()
 t Create_CircularProgressBar()
 t Create_ContinuousProgressBar()
 t Create_Divider()
 t Create_EditablePanel()
 t Create_ExpandButton()
 t Create_GraphPanel()
 t Create_ImagePanel()
 t Create_Label()
 t Create_ListPanel()
 t Create_ListViewPanel()
 t Create_Menu()
 t Create_MenuBar()
 t Create_MenuButton()
 t Create_MenuItem()
 t Create_Panel()
 t Create_ProgressBar()
 t Create_RadioButton()
 t Create_RichText()
 t Create_ScalableImagePanel()
 t Create_TextEntry()
 t Create_ToggleButton()
 t Create_TreeView()
 t CreditsDone_f()
 t DebugConstraints(CBaseEntity*)
 t DefaultSortFunc(KeyValues*, KeyValues*)
 t DefaultSortFunc(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&)
 t DescribeGroundList(CBaseEntity*)
 t DoEntFire(char const*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*)
 t DoEntFireByInstanceHandle(HSCRIPT__*, char const*, char const*, float, HSCRIPT__*, HSCRIPT__*)
 t DoRecordAchievementEvent(char const*, int)
 t DoUniqueString(char const*)
 t EnginePointOutsideWorldFunc(Vector const&, FindClosestPassableSpace_TraceAdapter_t*)
 t EnginePointOutsideWorldFunc_CenterMustStayInFront(Vector const&, FindClosestPassableSpace_TraceAdapter_t*)
 t EngineTraceFunc(Ray_t const&, CGameTrace*, FindClosestPassableSpace_TraceAdapter_t*)
 t EngineTraceFunc_CenterMustStayInFront(Ray_t const&, CGameTrace*, FindClosestPassableSpace_TraceAdapter_t*)
 t FastSortFunc(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&)
 t FindLaunchOptionByValue(KeyValues*, char const*)
 t FindPassableSpace(CBaseEntity*, unsigned int, Vector const&, float, Vector&)
 t FindPositionInArea(CNavArea*, NavCornerType)
 t FrameTime()
 t FullSyncPhysicsObject(IPhysicsObject*, IPhysicsObject*, VMatrix const*, bool)
 t GameEventLessFunc(CHLTVGameEvent const&, CHLTVGameEvent const&)
 t GameStat_GetMapNameIndex(char const*)
 t GetAllChildren_r(CBaseEntity*, CUtlVector<CBaseEntity*, CUtlMemory<CBaseEntity*, int> >&)
 t GetFadeParms(CCommand const&, float&, color32_s&)
 t GetMapName()
 t InferExpresserFromBaseEntity(CBaseEntity*)
 t InitGameSystems(void* (*)(char const*, int*))
 t InvokeMethod(void (IGameSystem::*)(), char const*)
 t InvokeMethodReverseOrder(void (IGameSystem::*)())
 t IsNodeOverlapped(Vector const&, Vector const&)
 t LLLessFunc(int const&, int const&)
 t ListRecentNPCSpeech()
 t LoopSinglePlayerMaps()
 t MD5Transform(unsigned int*, unsigned int const*)
 t MarkVPhysicsDebug(CBaseEntity*)
 t NPCBuildFlags(CAI_BaseNPC*, Vector const&)
 t NavAttributeAutocomplete(char const*, char (*) [64])
 t OutputVPhysicsDebugInfo(CBaseEntity*)
 t PhysFrame(float)
 t PhysicsCheckSweep(CBaseEntity*, Vector const&, Vector const&, CGameTrace*)
 t PlaceNameAutocompleteCallback(char const*, char (*) [64])
 t PortalPointOutsideWorldFunc_CenterMustStayInFront(Vector const&, FindClosestPassableSpace_TraceAdapter_t*)
 t PortalSimulatorDumps_DumpCollideToGlView(CPhysCollide*, Vector const&, QAngle const&, float, char const*)
 t PortalTraceFunc_CenterMustStayInFront(Ray_t const&, CGameTrace*, FindClosestPassableSpace_TraceAdapter_t*)
 t PostSimulation_ImpulseEvent(IPhysicsObject*, Vector const&, Vector const&)
 t PostUpdateQueryCache()
 t PreUpdateQueryCache()
 t ProcessNavigationQueries(CFunctor**, unsigned int)
 t RecursiveInheritKeyValues(KeyValues*, KeyValues*)
 t ReduceToComponentAreas(CNavArea*, bool)
 t Register_LOG_SND_EMITTERSYSTEM_Tags()
 t Register_LOG_WORKSHOP_Tags()
 t ResolveFollowupTargetToEntity(CAI_Concept&, ResponseRules::CriteriaSet&, char const*, ResponseRules::CRR_Response*)
 t ScriptIsMultiplayer()
 t ScriptTraceLine(Vector const&, Vector const&, HSCRIPT__*)
 t SelectedSetColorChaged(IConVar*, char const*, float)
 t SendProxy_Empty(SendProp const*, void const*, void const*, DVariant*, int, int)
 t SendProxy_Solid(SendProp const*, void const*, void const*, DVariant*, int, int)
 t SendProxy_SolidFlags(SendProp const*, void const*, void const*, DVariant*, int, int)
 t SendToConsole(char const*)
 t SetDucking(char const*, char const*, float)
 t SetMinMaxSize(CBaseEntity*, Vector const&, Vector const&)
 t SortBlobDataByAscendingID(BlobData_t const*, BlobData_t const*)
 t Sys_LoadLibrary(char const*)
 t Sys_LoadLibraryGuts(char const*)
 t TextToSoundLevel(char const*)
 t Time()
 t TryDLC1InstalledOrCatch()
 t UTIL_GetCurrentCheckClient()
 t UtlStringLessFunc(CUtlString const&, CUtlString const&)
 t ValidateMOTDFilename(IConVar*, char const*, float)
 t VoiceServerDebug(char const*, ...)
 t __CreateCEffectsServerIEffects_interface()
 t __CreateCGameMovementIGameMovement_interface()
 t __CreateCHLTVDirectorIHLTVDirector_interface()
 t __CreateCPlayerInfoManagerIPlayerInfoManager_interface()
 t __CreateCPluginBotManagerIBotManager_interface()
 t __CreateCPluginHelpersCheckIPluginHelpersCheck_interface()
 t __CreateCServerDLLSharedAppSystemsIServerDLLSharedAppSystems_interface()
 t __CreateCServerGameClientsIServerGameClients_interface()
 t __CreateCServerGameDLLIServerGameDLL_interface()
 t __CreateCServerGameEntsIServerGameEnts_interface()
 t __CreateCServerGameTagsIServerGameTags_interface()
 t __CreateCServerToolsIServerTools_interface()
 t __cxx_global_array_dtor
 t __cxx_global_array_dtor100
 t __cxx_global_array_dtor105
 t __cxx_global_array_dtor107
 t __cxx_global_array_dtor141
 t __cxx_global_array_dtor154
 t __cxx_global_array_dtor155
 t __cxx_global_array_dtor17
 t __cxx_global_array_dtor173
 t __cxx_global_array_dtor184
 t __cxx_global_array_dtor185
 t __cxx_global_array_dtor19
 t __cxx_global_array_dtor199
 t __cxx_global_array_dtor20
 t __cxx_global_array_dtor205
 t __cxx_global_array_dtor211
 t __cxx_global_array_dtor22
 t __cxx_global_array_dtor221
 t __cxx_global_array_dtor27
 t __cxx_global_array_dtor290
 t __cxx_global_array_dtor292
 t __cxx_global_array_dtor30
 t __cxx_global_array_dtor31
 t __cxx_global_array_dtor35
 t __cxx_global_array_dtor37
 t __cxx_global_array_dtor38
 t __cxx_global_array_dtor380
 t __cxx_global_array_dtor391
 t __cxx_global_array_dtor395
 t __cxx_global_array_dtor40
 t __cxx_global_array_dtor419
 t __cxx_global_array_dtor42
 t __cxx_global_array_dtor43
 t __cxx_global_array_dtor430
 t __cxx_global_array_dtor442
 t __cxx_global_array_dtor464
 t __cxx_global_array_dtor477
 t __cxx_global_array_dtor48
 t __cxx_global_array_dtor49
 t __cxx_global_array_dtor53
 t __cxx_global_array_dtor54
 t __cxx_global_array_dtor59
 t __cxx_global_array_dtor61
 t __cxx_global_array_dtor64
 t __cxx_global_array_dtor65
 t __cxx_global_array_dtor69
 t __cxx_global_array_dtor71
 t __cxx_global_array_dtor74
 t __cxx_global_array_dtor81
 t __cxx_global_array_dtor85
 t __cxx_global_array_dtor91
 t __cxx_global_array_dtor93
 t __cxx_global_array_dtor94
 t __cxx_global_array_dtor95
 t __cxx_global_var_init10
 t __cxx_global_var_init11
 t __cxx_global_var_init117
 t __cxx_global_var_init118
 t __cxx_global_var_init12
 t __cxx_global_var_init13
 t __cxx_global_var_init14
 t __cxx_global_var_init144
 t __cxx_global_var_init145
 t __cxx_global_var_init15
 t __cxx_global_var_init19
 t __cxx_global_var_init248
 t __cxx_global_var_init33
 t __cxx_global_var_init34
 t __cxx_global_var_init42
 t __cxx_global_var_init476
 t __cxx_global_var_init6
 t __cxx_global_var_init7
 t __cxx_global_var_init8
 t __cxx_global_var_init97
 t __static_initialization_and_destruction_0(int, int)
 t __tcf_0
 t __tcf_1
 t __tcf_10
 t __tcf_11
 t __tcf_12
 t __tcf_13
 t __tcf_14
 t __tcf_15
 t __tcf_16
 t __tcf_17
 t __tcf_18
 t __tcf_2
 t __tcf_3
 t __tcf_4
 t __tcf_5
 t __tcf_6
 t __tcf_7
 t __tcf_8
 t __tcf_9
 t ai_clear_bad_links(CCommand const&)
 t ai_debug_node_connect(CCommand const&)
 t ai_dump_hints(CCommand const&)
 t ai_set_move_height_epsilon(CCommand const&)
 t ai_setenabled(CCommand const&)
 t ai_show_node(CCommand const&)
 t ai_test_los(CCommand const&)
 t ainet_generate_report(CCommand const&)
 t ainet_generate_report_only(CCommand const&)
 t bot(CCommand const&)
 t bot_refill(CCommand const&)
 t bot_teleport(CCommand const&)
 t buddha(CCommand const&)
 t cast_hull(CCommand const&)
 t cast_ray(CCommand const&)
 t cast_ray_paint(CCommand const&)
 t cc_bot_selectweapon(CCommand const&)
 t change_portalgun_linkage_id_f(CCommand const&)
 t clear_debug_overlays(CCommand const&)
 t displayportalplayerstats(CCommand const&)
 t dump_entity_sizes(CCommand const&)
 t dump_globals(CCommand const&)
 t ent_create_paint_bomb_erase(CCommand const&)
 t ent_create_paint_bomb_jump(CCommand const&)
 t ent_create_paint_bomb_portal(CCommand const&)
 t ent_create_paint_bomb_speed(CCommand const&)
 t ent_setang(CCommand const&)
 t ent_setpos(CCommand const&)
 t explode(CCommand const&)
 t explodevector(CCommand const&)
 t fire_energy_ball_f()
 t fire_rocket_projectile_f()
 t foundry_engine_get_mouse_control(CCommand const&)
 t foundry_engine_release_mouse_control(CCommand const&)
 t foundry_select_entity(CCommand const&)
 t foundry_sync_hammer_view(CCommand const&)
 t foundry_update_entity(CCommand const&)
 t give(CCommand const&)
 t give_promo_helmet(CCommand const&)
 t global constructors keyed to a
 t hammer_update_entity(CCommand const&)
 t hammer_update_safe_entities(CCommand const&)
 t item_show_whitelistable_definitions(CCommand const&)
 t kill(CCommand const&)
 t killvector(CCommand const&)
 t mp_disable_autokick(CCommand const&)
 t nav_add_to_selected_set_by_id(CCommand const&)
 t nav_chop_selected(CCommand const&)
 t nav_corner_lower(CCommand const&)
 t nav_corner_place_on_ground(CCommand const&)
 t nav_corner_raise(CCommand const&)
 t nav_flood_select(CCommand const&)
 t nav_gen_cliffs_approx(CCommand const&)
 t nav_merge_mesh(CCommand const&)
 t nav_save_selected(CCommand const&)
 t nav_select_blocked_areas(CCommand const&)
 t nav_select_damaging_areas(CCommand const&)
 t nav_select_half_space(CCommand const&)
 t nav_select_obstructed_areas(CCommand const&)
 t nav_select_radius(CCommand const&)
 t nav_select_stairs(CCommand const&)
 t nav_shift(CCommand const&)
 t nav_simplify_selected(CCommand const&)
 t nav_subdivide(CCommand const&)
 t nav_test_stairs(CCommand const&)
 t nav_update_lighting(CCommand const&)
 t noclip(CCommand const&)
 t npc_ammo_deplete(CCommand const&)
 t npc_freeze_unselected(CCommand const&)
 t npc_heal(CCommand const&)
 t npc_set_freeze_unselected(CCommand const&)
 t npc_speakall(CCommand const&)
 t npc_thinknow(CCommand const&)
 t physics_budget(CCommand const&)
 t physics_constraints(CCommand const&)
 t physics_debug_entity(CCommand const&)
 t physics_highlight_active(CCommand const&)
 t physics_report_active(CCommand const&)
 t physics_select(CCommand const&)
 t portal_place(CCommand const&)
 t portal_report(CCommand const&)
 t report_entities(CCommand const&)
 t report_simthinklist(CCommand const&)
 t report_soundpatch(CCommand const&)
 t report_touchlinks(CCommand const&)
 t rr_reloadresponsesystems(CCommand const&)
 t say(CCommand const&)
 t say_team(CCommand const&)
 t scene_flush(CCommand const&)
 t scene_playvcd(CCommand const&)
 t script(CCommand const&)
 t script_debug(CCommand const&)
 t script_dump_all(CCommand const&)
 t script_execute(CCommand const&)
 t script_help(CCommand const&)
 t script_reload_code(CCommand const&)
 t script_reload_entity_code(CCommand const&)
 t script_reload_think(CCommand const&)
 t server_game_time(CCommand const&)
 t setang_exact(CCommand const&)
 t setpos(CCommand const&)
 t setpos_exact(CCommand const&)
 t setpos_player(CCommand const&)
 t soundscape_flush(CCommand const&)
 t splitX(CNavArea*)
 t splitY(CNavArea*)
 t startneurotoxins(CCommand const&)
 t surfaceprop(CCommand const&)
 t sv_benchmark_force_start(CCommand const&)
 t sv_findsoundname(CCommand const&)
 t sv_querycache_stats(CCommand const&)
 t sv_reload_node_position_keys(CCommand const&)
 t sv_soundemitter_filecheck(CCommand const&)
 t sv_soundemitter_flush(CCommand const&)
 t sv_soundemitter_reload(CCommand const&)
 t sv_soundemitter_spew(CCommand const&)
 t sv_soundscape_printdebuginfo(CCommand const&)
 t testStitchConnection(CNavArea*, CNavArea*, Vector const&, Vector const&)
 t vehicle_flushscript(CCommand const&)
 t viper_bug(CCommand const&)
 tan
 tanf
 time
 timezone$UNIX2003
 uuid_generate
 vsnprintf
 vswprintf
 vtable for __cxxabiv1::__class_type_info
 vtable for __cxxabiv1::__si_class_type_info
 vtable for __cxxabiv1::__vmi_class_type_info
 vtune
 wcschr
 wcscmp
 wcscpy
 wcslen
 wcsncat
 wcsncmp
 wcsncpy
 wcstof
 wcstol
 write$UNIX2003

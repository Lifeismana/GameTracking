 B CAvatarImage::m_sbInitializedAvatarCache
 B CAvatarImage::s_AvatarImageCache
 B CBGSDriver
 B CBaseAchievement_DataDescInit::g_DataMapHolder
 B CBaseHudWeaponSelection::s_pInstance
 B CChoreoScene::s_bEditingDisabled
 B CClientEffectRegistration::s_pHead
 B CClientLeafSystem::s_ClientLeafSystem
 B CClientRenderablesList::s_Allocator
 B CClient_Precipitation::s_WindVector
 B CClient_Precipitation::s_raindensity
 B CClient_Precipitation::s_rainlength
 B CClient_Precipitation::s_rainspeed
 B CClient_Precipitation::s_rainwidth
 B CCollisionProperty_PredDataDescInit::g_PredMapHolder
 B CCopyRecipientFilter_DataDescInit::g_DataMapHolder
 B CDetailModel::gm_LightStylesMap
 B CDmxAttribute::s_AttributeNameSymbols
 B CDmxElement::s_TypeSymbols
 B CDmxKeyValues2ErrorStack::m_ErrorSymbolTable
 B CEnginePostMaterialProxy::s_vBloomAAValues
 B CEnginePostMaterialProxy::s_vBloomAAValues2
 B CEnginePostMaterialProxy::s_vBloomUVTransform
 B CEnvHeadcrabCanisterShared_DataDescInit::g_DataMapHolder
 B CFailableAchievement_DataDescInit::g_DataMapHolder
 B CGameRulesRegister::s_pHead
 B CHudElementHelper::m_sHelpers
 B CInterpolationContext::s_bAllowExtrapolation
 B CInterpolationContext::s_flLastTimeStamp
 B CInterpolationContext::s_pHead
 B CMultiDamage_DataDescInit::g_DataMapHolder
 B CParticleOperatorDefinition<C_INIT_AgeNoise>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_CreateAlongPath>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_CreateFromParentParticles>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_CreateFromPlaneCache>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_CreateInHierarchy>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_CreateOnModel>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_CreateSequentialPath>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_CreateWithinBox>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_CreateWithinSphere>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_CreationNoise>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_DistanceToCPInit>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_InheritVelocity>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_InitialRepulsionVelocity>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_InitialVelocityNoise>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_LifespanFromVelocity>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_MoveBetweenPoints>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_PositionOffset>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_PositionWarp>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_RandomAlpha>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_RandomColor>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_RandomLifeTime>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_RandomRadius>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_RandomRotation>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_RandomRotationSpeed>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_RandomSecondSequence>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_RandomSequence>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_RandomTrailLength>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_RandomYaw>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_RandomYawFlip>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_RemapCPtoScalar>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_RemapCPtoVector>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_RemapScalar>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_RemapScalarToVector>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_SequenceLifeTime>::m_pUnpackParams
 B CParticleOperatorDefinition<C_INIT_VelocityRandom>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_AttractToControlPoint>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_BasicMovement>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_ColorInterpolate>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_ConstrainDistance>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_ConstrainDistanceToPath>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_ContinuousEmitter>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_ControlpointLight>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_Cull>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_DampenToCP>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_Decay>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_DistanceBetweenCPs>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_DistanceToCP>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_FadeAndKill>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_FadeIn>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_FadeOut>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_InstantaneousEmitter>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_InterpolateRadius>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_LockToBone>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_MaintainSequentialPath>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_MaxVelocity>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_ModelCull>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_MovementRotateParticleAroundAxis>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_Noise>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_NoiseEmitter>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_Orient2DRelToCP>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_OrientTo2dDirection>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_OscillateScalar>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_OscillateVector>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_PerParticleEmitter>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_PlanarConstraint>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_PlaneCull>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_PositionLock>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_RandomForce>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_RemapCPtoScalar>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_RemapDotProductToScalar>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_RemapScalar>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_RemapSpeedtoCP>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_RenderPoints>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_RenderRope>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_RenderScreenVelocityRotate>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_RenderSprites>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_RenderSpritesTrail>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_SetChildControlPoints>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_SetControlPointPositions>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_SetControlPointToCenter>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_SetControlPointToPlayer>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_Spin>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_SpinUpdate>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_SpinYaw>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_TwistAroundAxis>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_VectorNoise>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_VelocityDecay>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_VelocityMatchingForce>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_WorldCollideConstraint>::m_pUnpackParams
 B CParticleOperatorDefinition<C_OP_WorldTraceConstraint>::m_pUnpackParams
 B CParticleProperty_DataDescInit::g_DataMapHolder
 B CParticleProperty_PredDataDescInit::g_PredMapHolder
 B CPlayerLocalData_PredDataDescInit::g_PredMapHolder
 B CPlayerState_PredDataDescInit::g_PredMapHolder
 B CPortalTouchScope::m_CallQueue
 B CRagdoll_DataDescInit::g_DataMapHolder
 B CRandSimTimer_DataDescInit::g_DataMapHolder
 B CRandStopwatch_DataDescInit::g_DataMapHolder
 B CScreenSpaceEffectRegistration::s_pHead
 B CSimTimer_DataDescInit::g_DataMapHolder
 B CSimpleSimTimer_DataDescInit::g_DataMapHolder
 B CSoundEnvelope_DataDescInit::g_DataMapHolder
 B CSoundPatch::g_SoundPatchCount
 B CSoundPatch::s_Allocator
 B CSoundPatch_DataDescInit::g_DataMapHolder
 B CStopwatchBase_DataDescInit::g_DataMapHolder
 B CStopwatch_DataDescInit::g_DataMapHolder
 B CTakeDamageInfo_DataDescInit::g_DataMapHolder
 B CUserMessageRegister::s_pHead
 B CUtlMemoryPool::g_ReportFunc
 B CUtlSymbol::s_pSymbolTable
 B C_BaseAnimatingOverlay_PredDataDescInit::g_PredMapHolder
 B C_BaseAnimating_PredDataDescInit::g_PredMapHolder
 B C_BaseCombatCharacter_PredDataDescInit::g_PredMapHolder
 B C_BaseCombatWeapon_PredDataDescInit::g_PredMapHolder
 B C_BaseEntity::m_pPredictionPlayer
 B C_BaseEntity::sm_bDisableTouchFuncs
 B C_BaseEntity_DataDescInit::g_DataMapHolder
 B C_BaseEntity_PredDataDescInit::g_PredMapHolder
 B C_BaseExplosionEffect::m_instance
 B C_BaseFlex::g_flexcontroller
 B C_BaseFlex::g_flexweight
 B C_BaseFlex::g_numflexcontrollers
 B C_BaseFlex_PredDataDescInit::g_PredMapHolder
 B C_BaseGrenade_PredDataDescInit::g_PredMapHolder
 B C_BaseHLCombatWeapon_PredDataDescInit::g_PredMapHolder
 B C_BaseHLPlayer_PredDataDescInit::g_PredMapHolder
 B C_BaseParticleEntity_PredDataDescInit::g_PredMapHolder
 B C_BasePlayer_PredDataDescInit::g_PredMapHolder
 B C_BaseTempEntity::s_pDynamicEntities
 B C_BaseTempEntity::s_pTempEntities
 B C_BaseViewModel_PredDataDescInit::g_PredMapHolder
 B C_Beam_PredDataDescInit::g_PredMapHolder
 B C_BreakableSurface_DataDescInit::g_DataMapHolder
 B C_ClientRagdoll_DataDescInit::g_DataMapHolder
 B C_ColorCorrectionVolume_PredDataDescInit::g_PredMapHolder
 B C_EntityClassList<C_FuncReflectiveGlass>::m_pClassList
 B C_EntityClassList<C_PointCamera>::m_pClassList
 B C_Flaregun_PredDataDescInit::g_PredMapHolder
 B C_FuncLadder::s_Ladders
 B C_FuncLadder_DataDescInit::g_DataMapHolder
 B C_GameRulesProxy::s_pGameRulesProxy
 B C_HL2PlayerLocalData_PredDataDescInit::g_PredMapHolder
 B C_MegaBombExplosionEffect::m_megainstance
 B C_NPC_AntlionGuard_DataDescInit::g_DataMapHolder
 B C_NPC_Manhack_DataDescInit::g_DataMapHolder
 B C_PlayerResource_PredDataDescInit::g_PredMapHolder
 B C_PointCommentaryNode_DataDescInit::g_DataMapHolder
 B C_PropAirboat_DataDescInit::g_DataMapHolder
 B C_PropCannon_DataDescInit::g_DataMapHolder
 B C_PropCrane_DataDescInit::g_DataMapHolder
 B C_PropVehicleChoreoGeneric_DataDescInit::g_DataMapHolder
 B C_PropVehicleDriveable_DataDescInit::g_DataMapHolder
 B C_PropVehiclePrisonerPod_DataDescInit::g_DataMapHolder
 B C_SoundscapeSystem::m_pDSPVolumeVar
 B C_SoundscapeSystem::m_pSoundMixerVar
 B C_SpriteTrail_DataDescInit::g_DataMapHolder
 B C_SpriteTrail_PredDataDescInit::g_PredMapHolder
 B C_Sprite_PredDataDescInit::g_PredMapHolder
 B C_Team_PredDataDescInit::g_PredMapHolder
 B C_WaterExplosionEffect::m_waterinstance
 B C_Weapon357_PredDataDescInit::g_PredMapHolder
 B C_WeaponAR2_PredDataDescInit::g_PredMapHolder
 B C_WeaponAlyxGun_PredDataDescInit::g_PredMapHolder
 B C_WeaponAnnabelle_PredDataDescInit::g_PredMapHolder
 B C_WeaponBinoculars_PredDataDescInit::g_PredMapHolder
 B C_WeaponBugBait_PredDataDescInit::g_PredMapHolder
 B C_WeaponCitizenPackage_PredDataDescInit::g_PredMapHolder
 B C_WeaponCitizenSuitcase_PredDataDescInit::g_PredMapHolder
 B C_WeaponCrossbow_PredDataDescInit::g_PredMapHolder
 B C_WeaponCrowbar_PredDataDescInit::g_PredMapHolder
 B C_WeaponCubemap_PredDataDescInit::g_PredMapHolder
 B C_WeaponCycler_PredDataDescInit::g_PredMapHolder
 B C_WeaponFrag_PredDataDescInit::g_PredMapHolder
 B C_WeaponGaussGun_PredDataDescInit::g_PredMapHolder
 B C_WeaponPhysCannon_PredDataDescInit::g_PredMapHolder
 B C_WeaponPistol_PredDataDescInit::g_PredMapHolder
 B C_WeaponRPG_PredDataDescInit::g_PredMapHolder
 B C_WeaponSMG1_PredDataDescInit::g_PredMapHolder
 B C_WeaponShotgun_PredDataDescInit::g_PredMapHolder
 B C_WeaponStunStick_PredDataDescInit::g_PredMapHolder
 B C_Weapon_SLAM_PredDataDescInit::g_PredMapHolder
 B CaptionLookup_t_DataDescInit::g_DataMapHolder
 B ClientWorldListInfo_t::gm_Pool
 B CompiledCaptionHeader_t_DataDescInit::g_DataMapHolder
 B ConCommandBase::s_pAccessor
 B ConCommandBase::s_pConCommandBases
 B DT_AI_BaseNPC::g_RecvTable
 B DT_AI_BaseNPC::g_RecvTableInit
 B DT_AR2Explosion::g_RecvTable
 B DT_AR2Explosion::g_RecvTableInit
 B DT_AlyxEmpEffect::g_RecvTable
 B DT_AlyxEmpEffect::g_RecvTableInit
 B DT_AnimTimeMustBeFirst::g_RecvTable
 B DT_AnimTimeMustBeFirst::g_RecvTableInit
 B DT_Animationlayer::g_RecvTable
 B DT_Animationlayer::g_RecvTableInit
 B DT_BCCLocalPlayerExclusive::g_RecvTable
 B DT_BCCLocalPlayerExclusive::g_RecvTableInit
 B DT_Barnacle::g_RecvTable
 B DT_Barnacle::g_RecvTableInit
 B DT_BaseAnimating::g_RecvTable
 B DT_BaseAnimating::g_RecvTableInit
 B DT_BaseAnimatingOverlay::g_RecvTable
 B DT_BaseAnimatingOverlay::g_RecvTableInit
 B DT_BaseBeam::g_RecvTable
 B DT_BaseBeam::g_RecvTableInit
 B DT_BaseCombatCharacter::g_RecvTable
 B DT_BaseCombatCharacter::g_RecvTableInit
 B DT_BaseCombatWeapon::g_RecvTable
 B DT_BaseCombatWeapon::g_RecvTableInit
 B DT_BaseDoor::g_RecvTable
 B DT_BaseDoor::g_RecvTableInit
 B DT_BaseEntity::g_RecvTable
 B DT_BaseEntity::g_RecvTableInit
 B DT_BaseFlex::g_RecvTable
 B DT_BaseFlex::g_RecvTableInit
 B DT_BaseGrenade::g_RecvTable
 B DT_BaseGrenade::g_RecvTableInit
 B DT_BaseHLBludgeonWeapon::g_RecvTable
 B DT_BaseHLBludgeonWeapon::g_RecvTableInit
 B DT_BaseHLCombatWeapon::g_RecvTable
 B DT_BaseHLCombatWeapon::g_RecvTableInit
 B DT_BaseHelicopter::g_RecvTable
 B DT_BaseHelicopter::g_RecvTableInit
 B DT_BaseParticleEntity::g_RecvTable
 B DT_BaseParticleEntity::g_RecvTableInit
 B DT_BasePlayer::g_RecvTable
 B DT_BasePlayer::g_RecvTableInit
 B DT_BaseProjectile::g_RecvTable
 B DT_BaseProjectile::g_RecvTableInit
 B DT_BasePropDoor::g_RecvTable
 B DT_BasePropDoor::g_RecvTableInit
 B DT_BaseTeamObjectiveResource::g_RecvTable
 B DT_BaseTeamObjectiveResource::g_RecvTableInit
 B DT_BaseTempEntity::g_RecvTable
 B DT_BaseTempEntity::g_RecvTableInit
 B DT_BaseViewModel::g_RecvTable
 B DT_BaseViewModel::g_RecvTableInit
 B DT_Beam::g_RecvTable
 B DT_Beam::g_RecvTableInit
 B DT_BeamPredictableId::g_RecvTable
 B DT_BeamPredictableId::g_RecvTableInit
 B DT_BoneFollower::g_RecvTable
 B DT_BoneFollower::g_RecvTableInit
 B DT_BreakableProp::g_RecvTable
 B DT_BreakableProp::g_RecvTableInit
 B DT_BreakableSurface::g_RecvTable
 B DT_BreakableSurface::g_RecvTableInit
 B DT_CFish::g_RecvTable
 B DT_CFish::g_RecvTableInit
 B DT_CitadelEnergyCore::g_RecvTable
 B DT_CitadelEnergyCore::g_RecvTableInit
 B DT_CollisionProperty::g_RecvTable
 B DT_CollisionProperty::g_RecvTableInit
 B DT_ColorCorrection::g_RecvTable
 B DT_ColorCorrection::g_RecvTableInit
 B DT_ColorCorrectionVolume::g_RecvTable
 B DT_ColorCorrectionVolume::g_RecvTableInit
 B DT_CombineGunship::g_RecvTable
 B DT_CombineGunship::g_RecvTableInit
 B DT_Corpse::g_RecvTable
 B DT_Corpse::g_RecvTableInit
 B DT_CrossbowBolt::g_RecvTable
 B DT_CrossbowBolt::g_RecvTableInit
 B DT_DetailController::g_RecvTable
 B DT_DetailController::g_RecvTableInit
 B DT_DustTrail::g_RecvTable
 B DT_DustTrail::g_RecvTableInit
 B DT_DynamicLight::g_RecvTable
 B DT_DynamicLight::g_RecvTableInit
 B DT_DynamicProp::g_RecvTable
 B DT_DynamicProp::g_RecvTableInit
 B DT_EffectData::g_RecvTable
 B DT_EffectData::g_RecvTableInit
 B DT_Embers::g_RecvTable
 B DT_Embers::g_RecvTableInit
 B DT_EntityDissolve::g_RecvTable
 B DT_EntityDissolve::g_RecvTableInit
 B DT_EntityFlame::g_RecvTable
 B DT_EntityFlame::g_RecvTableInit
 B DT_EntityParticleTrail::g_RecvTable
 B DT_EntityParticleTrail::g_RecvTableInit
 B DT_EntityParticleTrailInfo::g_RecvTable
 B DT_EntityParticleTrailInfo::g_RecvTableInit
 B DT_EnvHeadcrabCanister::g_RecvTable
 B DT_EnvHeadcrabCanister::g_RecvTableInit
 B DT_EnvHeadcrabCanisterShared::g_RecvTable
 B DT_EnvHeadcrabCanisterShared::g_RecvTableInit
 B DT_EnvParticleScript::g_RecvTable
 B DT_EnvParticleScript::g_RecvTableInit
 B DT_EnvProjectedTexture::g_RecvTable
 B DT_EnvProjectedTexture::g_RecvTableInit
 B DT_EnvScreenEffect::g_RecvTable
 B DT_EnvScreenEffect::g_RecvTableInit
 B DT_EnvScreenOverlay::g_RecvTable
 B DT_EnvScreenOverlay::g_RecvTableInit
 B DT_EnvStarfield::g_RecvTable
 B DT_EnvStarfield::g_RecvTableInit
 B DT_EnvTonemapController::g_RecvTable
 B DT_EnvTonemapController::g_RecvTableInit
 B DT_EnvWind::g_RecvTable
 B DT_EnvWind::g_RecvTableInit
 B DT_EnvWindShared::g_RecvTable
 B DT_EnvWindShared::g_RecvTableInit
 B DT_FireSmoke::g_RecvTable
 B DT_FireSmoke::g_RecvTableInit
 B DT_FireTrail::g_RecvTable
 B DT_FireTrail::g_RecvTableInit
 B DT_Flare::g_RecvTable
 B DT_Flare::g_RecvTableInit
 B DT_Flaregun::g_RecvTable
 B DT_Flaregun::g_RecvTableInit
 B DT_FogController::g_RecvTable
 B DT_FogController::g_RecvTableInit
 B DT_FuncAreaPortalWindow::g_RecvTable
 B DT_FuncAreaPortalWindow::g_RecvTableInit
 B DT_FuncConveyor::g_RecvTable
 B DT_FuncConveyor::g_RecvTableInit
 B DT_FuncLadder::g_RecvTable
 B DT_FuncLadder::g_RecvTableInit
 B DT_FuncMonitor::g_RecvTable
 B DT_FuncMonitor::g_RecvTableInit
 B DT_FuncOccluder::g_RecvTable
 B DT_FuncOccluder::g_RecvTableInit
 B DT_FuncReflectiveGlass::g_RecvTable
 B DT_FuncReflectiveGlass::g_RecvTableInit
 B DT_FuncRotating::g_RecvTable
 B DT_FuncRotating::g_RecvTableInit
 B DT_FuncSmokeVolume::g_RecvTable
 B DT_FuncSmokeVolume::g_RecvTableInit
 B DT_FuncTrackTrain::g_RecvTable
 B DT_FuncTrackTrain::g_RecvTableInit
 B DT_Func_Dust::g_RecvTable
 B DT_Func_Dust::g_RecvTableInit
 B DT_Func_LOD::g_RecvTable
 B DT_Func_LOD::g_RecvTableInit
 B DT_GameRulesProxy::g_RecvTable
 B DT_GameRulesProxy::g_RecvTableInit
 B DT_HL2GameRules::g_RecvTable
 B DT_HL2GameRules::g_RecvTableInit
 B DT_HL2Local::g_RecvTable
 B DT_HL2Local::g_RecvTableInit
 B DT_HL2_Player::g_RecvTable
 B DT_HL2_Player::g_RecvTableInit
 B DT_HLMachineGun::g_RecvTable
 B DT_HLMachineGun::g_RecvTableInit
 B DT_HLSelectFireMachineGun::g_RecvTable
 B DT_HLSelectFireMachineGun::g_RecvTableInit
 B DT_HalfLife2Proxy::g_RecvTable
 B DT_HalfLife2Proxy::g_RecvTableInit
 B DT_HandleTest::g_RecvTable
 B DT_HandleTest::g_RecvTableInit
 B DT_InfoLadderDismount::g_RecvTable
 B DT_InfoLadderDismount::g_RecvTableInit
 B DT_InfoLightingRelative::g_RecvTable
 B DT_InfoLightingRelative::g_RecvTableInit
 B DT_InfoOverlayAccessor::g_RecvTable
 B DT_InfoOverlayAccessor::g_RecvTableInit
 B DT_InfoTeleporterCountdown::g_RecvTable
 B DT_InfoTeleporterCountdown::g_RecvTableInit
 B DT_LightGlow::g_RecvTable
 B DT_LightGlow::g_RecvTableInit
 B DT_Local::g_RecvTable
 B DT_Local::g_RecvTableInit
 B DT_LocalActiveWeaponData::g_RecvTable
 B DT_LocalActiveWeaponData::g_RecvTableInit
 B DT_LocalPlayerExclusive::g_RecvTable
 B DT_LocalPlayerExclusive::g_RecvTableInit
 B DT_LocalWeaponData::g_RecvTable
 B DT_LocalWeaponData::g_RecvTableInit
 B DT_MaterialModifyControl::g_RecvTable
 B DT_MaterialModifyControl::g_RecvTableInit
 B DT_MortarShell::g_RecvTable
 B DT_MortarShell::g_RecvTableInit
 B DT_MovieExplosion::g_RecvTable
 B DT_MovieExplosion::g_RecvTableInit
 B DT_NPC_AntlionGuard::g_RecvTable
 B DT_NPC_AntlionGuard::g_RecvTableInit
 B DT_NPC_Barney::g_RecvTable
 B DT_NPC_Barney::g_RecvTableInit
 B DT_NPC_Manhack::g_RecvTable
 B DT_NPC_Manhack::g_RecvTableInit
 B DT_NPC_Strider::g_RecvTable
 B DT_NPC_Strider::g_RecvTableInit
 B DT_NPC_Vortigaunt::g_RecvTable
 B DT_NPC_Vortigaunt::g_RecvTableInit
 B DT_OverlayVars::g_RecvTable
 B DT_OverlayVars::g_RecvTableInit
 B DT_ParticleFire::g_RecvTable
 B DT_ParticleFire::g_RecvTableInit
 B DT_ParticlePerformanceMonitor::g_RecvTable
 B DT_ParticlePerformanceMonitor::g_RecvTableInit
 B DT_ParticleProperty::g_RecvTable
 B DT_ParticleProperty::g_RecvTableInit
 B DT_ParticleSmokeGrenade::g_RecvTable
 B DT_ParticleSmokeGrenade::g_RecvTableInit
 B DT_ParticleSystem::g_RecvTable
 B DT_ParticleSystem::g_RecvTableInit
 B DT_PhysBox::g_RecvTable
 B DT_PhysBox::g_RecvTableInit
 B DT_PhysBoxMultiplayer::g_RecvTable
 B DT_PhysBoxMultiplayer::g_RecvTableInit
 B DT_PhysMagnet::g_RecvTable
 B DT_PhysMagnet::g_RecvTableInit
 B DT_PhysicsProp::g_RecvTable
 B DT_PhysicsProp::g_RecvTableInit
 B DT_PhysicsPropMultiplayer::g_RecvTable
 B DT_PhysicsPropMultiplayer::g_RecvTableInit
 B DT_Plasma::g_RecvTable
 B DT_Plasma::g_RecvTableInit
 B DT_PlasmaBeamNode::g_RecvTable
 B DT_PlasmaBeamNode::g_RecvTableInit
 B DT_PlayerResource::g_RecvTable
 B DT_PlayerResource::g_RecvTableInit
 B DT_PlayerState::g_RecvTable
 B DT_PlayerState::g_RecvTableInit
 B DT_PointCamera::g_RecvTable
 B DT_PointCamera::g_RecvTableInit
 B DT_PointCommentaryNode::g_RecvTable
 B DT_PointCommentaryNode::g_RecvTableInit
 B DT_PoseController::g_RecvTable
 B DT_PoseController::g_RecvTableInit
 B DT_Precipitation::g_RecvTable
 B DT_Precipitation::g_RecvTableInit
 B DT_PredictableId::g_RecvTable
 B DT_PredictableId::g_RecvTableInit
 B DT_PropAirboat::g_RecvTable
 B DT_PropAirboat::g_RecvTableInit
 B DT_PropCannon::g_RecvTable
 B DT_PropCannon::g_RecvTableInit
 B DT_PropCombineBall::g_RecvTable
 B DT_PropCombineBall::g_RecvTableInit
 B DT_PropCrane::g_RecvTable
 B DT_PropCrane::g_RecvTableInit
 B DT_PropJeep::g_RecvTable
 B DT_PropJeep::g_RecvTableInit
 B DT_PropVehicleChoreoGeneric::g_RecvTable
 B DT_PropVehicleChoreoGeneric::g_RecvTableInit
 B DT_PropVehicleDriveable::g_RecvTable
 B DT_PropVehicleDriveable::g_RecvTableInit
 B DT_PropVehiclePrisonerPod::g_RecvTable
 B DT_PropVehiclePrisonerPod::g_RecvTableInit
 B DT_ProxyToggle::g_RecvTable
 B DT_ProxyToggle::g_RecvTableInit
 B DT_ProxyToggle_ProxiedData::g_RecvTable
 B DT_ProxyToggle_ProxiedData::g_RecvTableInit
 B DT_QuadraticBeam::g_RecvTable
 B DT_QuadraticBeam::g_RecvTableInit
 B DT_Ragdoll::g_RecvTable
 B DT_Ragdoll::g_RecvTableInit
 B DT_RagdollManager::g_RecvTable
 B DT_RagdollManager::g_RecvTableInit
 B DT_Ragdoll_Attached::g_RecvTable
 B DT_Ragdoll_Attached::g_RecvTableInit
 B DT_RocketTrail::g_RecvTable
 B DT_RocketTrail::g_RecvTableInit
 B DT_RollerMine::g_RecvTable
 B DT_RollerMine::g_RecvTableInit
 B DT_RopeKeyframe::g_RecvTable
 B DT_RopeKeyframe::g_RecvTableInit
 B DT_RotorWashEmitter::g_RecvTable
 B DT_RotorWashEmitter::g_RecvTableInit
 B DT_SceneEntity::g_RecvTable
 B DT_SceneEntity::g_RecvTableInit
 B DT_ScriptIntro::g_RecvTable
 B DT_ScriptIntro::g_RecvTableInit
 B DT_ServerAnimationData::g_RecvTable
 B DT_ServerAnimationData::g_RecvTableInit
 B DT_ShadowControl::g_RecvTable
 B DT_ShadowControl::g_RecvTableInit
 B DT_SlideshowDisplay::g_RecvTable
 B DT_SlideshowDisplay::g_RecvTableInit
 B DT_SmokeStack::g_RecvTable
 B DT_SmokeStack::g_RecvTableInit
 B DT_SmokeTrail::g_RecvTable
 B DT_SmokeTrail::g_RecvTableInit
 B DT_SporeExplosion::g_RecvTable
 B DT_SporeExplosion::g_RecvTableInit
 B DT_SporeTrail::g_RecvTable
 B DT_SporeTrail::g_RecvTableInit
 B DT_SpotlightEnd::g_RecvTable
 B DT_SpotlightEnd::g_RecvTableInit
 B DT_Sprite::g_RecvTable
 B DT_Sprite::g_RecvTableInit
 B DT_SpriteOriented::g_RecvTable
 B DT_SpriteOriented::g_RecvTableInit
 B DT_SpriteTrail::g_RecvTable
 B DT_SpriteTrail::g_RecvTableInit
 B DT_SteamJet::g_RecvTable
 B DT_SteamJet::g_RecvTableInit
 B DT_Sun::g_RecvTable
 B DT_Sun::g_RecvTableInit
 B DT_TEAntlionDust::g_RecvTable
 B DT_TEAntlionDust::g_RecvTableInit
 B DT_TEArmorRicochet::g_RecvTable
 B DT_TEArmorRicochet::g_RecvTableInit
 B DT_TEBSPDecal::g_RecvTable
 B DT_TEBSPDecal::g_RecvTableInit
 B DT_TEBeamEntPoint::g_RecvTable
 B DT_TEBeamEntPoint::g_RecvTableInit
 B DT_TEBeamEnts::g_RecvTable
 B DT_TEBeamEnts::g_RecvTableInit
 B DT_TEBeamFollow::g_RecvTable
 B DT_TEBeamFollow::g_RecvTableInit
 B DT_TEBeamLaser::g_RecvTable
 B DT_TEBeamLaser::g_RecvTableInit
 B DT_TEBeamPoints::g_RecvTable
 B DT_TEBeamPoints::g_RecvTableInit
 B DT_TEBeamRing::g_RecvTable
 B DT_TEBeamRing::g_RecvTableInit
 B DT_TEBeamRingPoint::g_RecvTable
 B DT_TEBeamRingPoint::g_RecvTableInit
 B DT_TEBeamSpline::g_RecvTable
 B DT_TEBeamSpline::g_RecvTableInit
 B DT_TEBloodSprite::g_RecvTable
 B DT_TEBloodSprite::g_RecvTableInit
 B DT_TEBloodStream::g_RecvTable
 B DT_TEBloodStream::g_RecvTableInit
 B DT_TEBreakModel::g_RecvTable
 B DT_TEBreakModel::g_RecvTableInit
 B DT_TEBubbleTrail::g_RecvTable
 B DT_TEBubbleTrail::g_RecvTableInit
 B DT_TEBubbles::g_RecvTable
 B DT_TEBubbles::g_RecvTableInit
 B DT_TEClientProjectile::g_RecvTable
 B DT_TEClientProjectile::g_RecvTableInit
 B DT_TEConcussiveExplosion::g_RecvTable
 B DT_TEConcussiveExplosion::g_RecvTableInit
 B DT_TEDecal::g_RecvTable
 B DT_TEDecal::g_RecvTableInit
 B DT_TEDust::g_RecvTable
 B DT_TEDust::g_RecvTableInit
 B DT_TEDynamicLight::g_RecvTable
 B DT_TEDynamicLight::g_RecvTableInit
 B DT_TEEffectDispatch::g_RecvTable
 B DT_TEEffectDispatch::g_RecvTableInit
 B DT_TEEnergySplash::g_RecvTable
 B DT_TEEnergySplash::g_RecvTableInit
 B DT_TEExplosion::g_RecvTable
 B DT_TEExplosion::g_RecvTableInit
 B DT_TEFizz::g_RecvTable
 B DT_TEFizz::g_RecvTableInit
 B DT_TEFootprintDecal::g_RecvTable
 B DT_TEFootprintDecal::g_RecvTableInit
 B DT_TEGaussExplosion::g_RecvTable
 B DT_TEGaussExplosion::g_RecvTableInit
 B DT_TEGlowSprite::g_RecvTable
 B DT_TEGlowSprite::g_RecvTableInit
 B DT_TEImpact::g_RecvTable
 B DT_TEImpact::g_RecvTableInit
 B DT_TEKillPlayerAttachments::g_RecvTable
 B DT_TEKillPlayerAttachments::g_RecvTableInit
 B DT_TELargeFunnel::g_RecvTable
 B DT_TELargeFunnel::g_RecvTableInit
 B DT_TEMetalSparks::g_RecvTable
 B DT_TEMetalSparks::g_RecvTableInit
 B DT_TEMuzzleFlash::g_RecvTable
 B DT_TEMuzzleFlash::g_RecvTableInit
 B DT_TEParticleSystem::g_RecvTable
 B DT_TEParticleSystem::g_RecvTableInit
 B DT_TEPhysicsProp::g_RecvTable
 B DT_TEPhysicsProp::g_RecvTableInit
 B DT_TEPlayerDecal::g_RecvTable
 B DT_TEPlayerDecal::g_RecvTableInit
 B DT_TEProjectedDecal::g_RecvTable
 B DT_TEProjectedDecal::g_RecvTableInit
 B DT_TEShatterSurface::g_RecvTable
 B DT_TEShatterSurface::g_RecvTableInit
 B DT_TEShowLine::g_RecvTable
 B DT_TEShowLine::g_RecvTableInit
 B DT_TESmoke::g_RecvTable
 B DT_TESmoke::g_RecvTableInit
 B DT_TESparks::g_RecvTable
 B DT_TESparks::g_RecvTableInit
 B DT_TESprite::g_RecvTable
 B DT_TESprite::g_RecvTableInit
 B DT_TESpriteSpray::g_RecvTable
 B DT_TESpriteSpray::g_RecvTableInit
 B DT_TEWorldDecal::g_RecvTable
 B DT_TEWorldDecal::g_RecvTableInit
 B DT_Team::g_RecvTable
 B DT_Team::g_RecvTableInit
 B DT_TeamplayRoundBasedRules::g_RecvTable
 B DT_TeamplayRoundBasedRules::g_RecvTableInit
 B DT_TeamplayRoundBasedRulesProxy::g_RecvTable
 B DT_TeamplayRoundBasedRulesProxy::g_RecvTableInit
 B DT_Tesla::g_RecvTable
 B DT_Tesla::g_RecvTableInit
 B DT_TestTraceline::g_RecvTable
 B DT_TestTraceline::g_RecvTableInit
 B DT_VGuiScreen::g_RecvTable
 B DT_VGuiScreen::g_RecvTableInit
 B DT_VortigauntChargeToken::g_RecvTable
 B DT_VortigauntChargeToken::g_RecvTableInit
 B DT_VortigauntEffectDispel::g_RecvTable
 B DT_VortigauntEffectDispel::g_RecvTableInit
 B DT_VoteController::g_RecvTable
 B DT_VoteController::g_RecvTableInit
 B DT_WaterBullet::g_RecvTable
 B DT_WaterBullet::g_RecvTableInit
 B DT_WaterLODControl::g_RecvTable
 B DT_WaterLODControl::g_RecvTableInit
 B DT_Weapon357::g_RecvTable
 B DT_Weapon357::g_RecvTableInit
 B DT_WeaponAR2::g_RecvTable
 B DT_WeaponAR2::g_RecvTableInit
 B DT_WeaponAlyxGun::g_RecvTable
 B DT_WeaponAlyxGun::g_RecvTableInit
 B DT_WeaponAnnabelle::g_RecvTable
 B DT_WeaponAnnabelle::g_RecvTableInit
 B DT_WeaponBinoculars::g_RecvTable
 B DT_WeaponBinoculars::g_RecvTableInit
 B DT_WeaponBugBait::g_RecvTable
 B DT_WeaponBugBait::g_RecvTableInit
 B DT_WeaponCitizenPackage::g_RecvTable
 B DT_WeaponCitizenPackage::g_RecvTableInit
 B DT_WeaponCitizenSuitcase::g_RecvTable
 B DT_WeaponCitizenSuitcase::g_RecvTableInit
 B DT_WeaponCrossbow::g_RecvTable
 B DT_WeaponCrossbow::g_RecvTableInit
 B DT_WeaponCrowbar::g_RecvTable
 B DT_WeaponCrowbar::g_RecvTableInit
 B DT_WeaponCubemap::g_RecvTable
 B DT_WeaponCubemap::g_RecvTableInit
 B DT_WeaponCycler::g_RecvTable
 B DT_WeaponCycler::g_RecvTableInit
 B DT_WeaponFrag::g_RecvTable
 B DT_WeaponFrag::g_RecvTableInit
 B DT_WeaponGaussGun::g_RecvTable
 B DT_WeaponGaussGun::g_RecvTableInit
 B DT_WeaponPhysCannon::g_RecvTable
 B DT_WeaponPhysCannon::g_RecvTableInit
 B DT_WeaponPistol::g_RecvTable
 B DT_WeaponPistol::g_RecvTableInit
 B DT_WeaponRPG::g_RecvTable
 B DT_WeaponRPG::g_RecvTableInit
 B DT_WeaponSMG1::g_RecvTable
 B DT_WeaponSMG1::g_RecvTableInit
 B DT_WeaponShotgun::g_RecvTable
 B DT_WeaponShotgun::g_RecvTableInit
 B DT_WeaponStunStick::g_RecvTable
 B DT_WeaponStunStick::g_RecvTableInit
 B DT_Weapon_SLAM::g_RecvTable
 B DT_Weapon_SLAM::g_RecvTableInit
 B DT_World::g_RecvTable
 B DT_World::g_RecvTableInit
 B FishDebug
 B HDRFinal_Float
 B HDRFinal_Float_NoBloom
 B HDRSimulate_NonHDR
 B IMoveHelper::sm_pSingleton
 B IPredictionSystem::g_pPredictionSystems
 B Initializer::s_pInitializers
 B InterfaceReg::s_pInterfaceRegs
 B PhysBlockHeader_t_DataDescInit::g_DataMapHolder
 B PhysObjectHeader_t_DataDescInit::g_DataMapHolder
 B PrecacheEffectBloodSpray::register_ClientEffectRegister
 B PrecacheEffectBuild::register_ClientEffectRegister
 B PrecacheEffectCombineBall::register_ClientEffectRegister
 B PrecacheEffectCrossbow::register_ClientEffectRegister
 B PrecacheEffectDusttrail::register_ClientEffectRegister
 B PrecacheEffectExplosion::register_ClientEffectRegister
 B PrecacheEffectFlares::register_ClientEffectRegister
 B PrecacheEffectGlassShatter::register_ClientEffectRegister
 B PrecacheEffectGlow::register_ClientEffectRegister
 B PrecacheEffectImpacts::register_ClientEffectRegister
 B PrecacheEffectMuzzleFlash::register_ClientEffectRegister
 B PrecacheEffectPlasmaBeam::register_ClientEffectRegister
 B PrecacheEffectSparks::register_ClientEffectRegister
 B PrecacheEffectSplash::register_ClientEffectRegister
 B PrecacheEffectStunstick::register_ClientEffectRegister
 B PrecacheEffectVGuiScreen::register_ClientEffectRegister
 B PrecacheEffectWarp::register_ClientEffectRegister
 B PrecacheEffectsTest::register_ClientEffectRegister
 B PrecacheGunshipFX::register_ClientEffectRegister
 B PrecacheMuzzleFlash::register_ClientEffectRegister
 B PrecacheOcclusionProxy::register_ClientEffectRegister
 B PrecachePlayerDecal::register_ClientEffectRegister
 B PrecachePostProcessingEffects::register_ClientEffectRegister
 B PrecachePrecipitation::register_ClientEffectRegister
 B PrecacheSmokeFogOverlay::register_ClientEffectRegister
 B PrecacheTracers::register_ClientEffectRegister
 B PrecacheViewRender::register_ClientEffectRegister
 B ProfilingHistogram
 B SaveRestoreBlockHeader_t_DataDescInit::g_DataMapHolder
 B SinCosTable
 B SingleFrameHistogram
 B SmokeStackMaterials::register_ClientEffectRegister
 B SoundCommand_t::s_Allocator
 B SoundCommand_t_DataDescInit::g_DataMapHolder
 B TrailPoint_t_DataDescInit::g_DataMapHolder
 B VTFFileBaseHeader_t_DataDescInit::g_DataMapHolder
 B VTFFileHeaderV7_1_t_DataDescInit::g_DataMapHolder
 B VTFFileHeaderV7_2_t_DataDescInit::g_DataMapHolder
 B VTFFileHeaderV7_3_t_DataDescInit::g_DataMapHolder
 B VTFFileHeaderX360_t_DataDescInit::g_DataMapHolder
 B VTFFileHeader_t_DataDescInit::g_DataMapHolder
 B ViewSmoothingData_t_DataDescInit::g_DataMapHolder
 B __g_CClient_PrecipitationClientClass
 B __g_CPhysBoxMultiplayerClientClass
 B __g_CPhysicsPropMultiplayerClientClass
 B __g_C_AI_BaseNPCClientClass
 B __g_C_AR2ExplosionClientClass
 B __g_C_AlyxEmpEffectClientClass
 B __g_C_BarneyClientClass
 B __g_C_BaseAnimatingClientClass
 B __g_C_BaseAnimatingOverlayClientClass
 B __g_C_BaseCombatCharacterClientClass
 B __g_C_BaseCombatWeaponClientClass
 B __g_C_BaseDoorClientClass
 B __g_C_BaseEntityClientClass
 B __g_C_BaseFlexClientClass
 B __g_C_BaseGrenadeClientClass
 B __g_C_BaseHLBludgeonWeaponClientClass
 B __g_C_BaseHLCombatWeaponClientClass
 B __g_C_BaseHLPlayerClientClass
 B __g_C_BaseHelicopterClientClass
 B __g_C_BaseParticleEntityClientClass
 B __g_C_BasePlayerClientClass
 B __g_C_BaseProjectileClientClass
 B __g_C_BasePropDoorClientClass
 B __g_C_BaseTeamObjectiveResourceClientClass
 B __g_C_BaseTempEntityClientClass
 B __g_C_BaseViewModelClientClass
 B __g_C_BeamClientClass
 B __g_C_BoneFollowerClientClass
 B __g_C_BreakablePropClientClass
 B __g_C_BreakableSurfaceClientClass
 B __g_C_CitadelEnergyCoreClientClass
 B __g_C_ColorCorrectionClientClass
 B __g_C_ColorCorrectionVolumeClientClass
 B __g_C_CombineGunshipClientClass
 B __g_C_CorpseClientClass
 B __g_C_CrossbowBoltClientClass
 B __g_C_DustTrailClientClass
 B __g_C_DynamicLightClientClass
 B __g_C_DynamicPropClientClass
 B __g_C_EmbersClientClass
 B __g_C_EntityDissolveClientClass
 B __g_C_EntityFlameClientClass
 B __g_C_EntityParticleTrailClientClass
 B __g_C_EnvDetailControllerClientClass
 B __g_C_EnvHeadcrabCanisterClientClass
 B __g_C_EnvParticleScriptClientClass
 B __g_C_EnvProjectedTextureClientClass
 B __g_C_EnvScreenEffectClientClass
 B __g_C_EnvScreenOverlayClientClass
 B __g_C_EnvStarfieldClientClass
 B __g_C_EnvTonemapControllerClientClass
 B __g_C_EnvWindClientClass
 B __g_C_FireSmokeClientClass
 B __g_C_FireTrailClientClass
 B __g_C_FishClientClass
 B __g_C_FlareClientClass
 B __g_C_FlaregunClientClass
 B __g_C_FogControllerClientClass
 B __g_C_FuncAreaPortalWindowClientClass
 B __g_C_FuncConveyorClientClass
 B __g_C_FuncLadderClientClass
 B __g_C_FuncMonitorClientClass
 B __g_C_FuncOccluderClientClass
 B __g_C_FuncReflectiveGlassClientClass
 B __g_C_FuncRotatingClientClass
 B __g_C_FuncSmokeVolumeClientClass
 B __g_C_FuncTrackTrainClientClass
 B __g_C_Func_DustClientClass
 B __g_C_Func_LODClientClass
 B __g_C_GameRulesProxyClientClass
 B __g_C_HLMachineGunClientClass
 B __g_C_HLSelectFireMachineGunClientClass
 B __g_C_HalfLife2ProxyClientClass
 B __g_C_HandleTestClientClass
 B __g_C_InfoLadderDismountClientClass
 B __g_C_InfoLightingRelativeClientClass
 B __g_C_InfoOverlayAccessorClientClass
 B __g_C_InfoTeleporterCountdownClientClass
 B __g_C_LightGlowClientClass
 B __g_C_MaterialModifyControlClientClass
 B __g_C_MortarShellClientClass
 B __g_C_MovieExplosionClientClass
 B __g_C_NPC_AntlionGuardClientClass
 B __g_C_NPC_BarnacleClientClass
 B __g_C_NPC_ManhackClientClass
 B __g_C_NPC_VortigauntClientClass
 B __g_C_ParticleFireClientClass
 B __g_C_ParticlePerformanceMonitorClientClass
 B __g_C_ParticleSmokeGrenadeClientClass
 B __g_C_ParticleSystemClientClass
 B __g_C_PhysBoxClientClass
 B __g_C_PhysMagnetClientClass
 B __g_C_PhysicsPropClientClass
 B __g_C_PlasmaBeamNodeClientClass
 B __g_C_PlasmaClientClass
 B __g_C_PlayerResourceClientClass
 B __g_C_PointCameraClientClass
 B __g_C_PointCommentaryNodeClientClass
 B __g_C_PoseControllerClientClass
 B __g_C_PropAirboatClientClass
 B __g_C_PropCannonClientClass
 B __g_C_PropCombineBallClientClass
 B __g_C_PropCraneClientClass
 B __g_C_PropJeepClientClass
 B __g_C_PropVehicleChoreoGenericClientClass
 B __g_C_PropVehicleDriveableClientClass
 B __g_C_PropVehiclePrisonerPodClientClass
 B __g_C_QuadraticBeamClientClass
 B __g_C_RagdollManagerClientClass
 B __g_C_RocketTrailClientClass
 B __g_C_RollerMineClientClass
 B __g_C_RopeKeyframeClientClass
 B __g_C_RotorWashEmitterClientClass
 B __g_C_SceneEntityClientClass
 B __g_C_ScriptIntroClientClass
 B __g_C_ServerRagdollAttachedClientClass
 B __g_C_ServerRagdollClientClass
 B __g_C_ShadowControlClientClass
 B __g_C_SlideshowDisplayClientClass
 B __g_C_SmokeStackClientClass
 B __g_C_SmokeTrailClientClass
 B __g_C_SporeExplosionClientClass
 B __g_C_SporeTrailClientClass
 B __g_C_SpotlightEndClientClass
 B __g_C_SpriteClientClass
 B __g_C_SpriteOrientedClientClass
 B __g_C_SpriteTrailClientClass
 B __g_C_SteamJetClientClass
 B __g_C_StriderClientClass
 B __g_C_SunClientClass
 B __g_C_TEAntlionDustClientClass
 B __g_C_TEArmorRicochetClientClass
 B __g_C_TEBSPDecalClientClass
 B __g_C_TEBaseBeamClientClass
 B __g_C_TEBeamEntPointClientClass
 B __g_C_TEBeamEntsClientClass
 B __g_C_TEBeamFollowClientClass
 B __g_C_TEBeamLaserClientClass
 B __g_C_TEBeamPointsClientClass
 B __g_C_TEBeamRingClientClass
 B __g_C_TEBeamRingPointClientClass
 B __g_C_TEBeamSplineClientClass
 B __g_C_TEBloodSpriteClientClass
 B __g_C_TEBloodStreamClientClass
 B __g_C_TEBreakModelClientClass
 B __g_C_TEBubbleTrailClientClass
 B __g_C_TEBubblesClientClass
 B __g_C_TEClientProjectileClientClass
 B __g_C_TEConcussiveExplosionClientClass
 B __g_C_TEDecalClientClass
 B __g_C_TEDustClientClass
 B __g_C_TEDynamicLightClientClass
 B __g_C_TEEffectDispatchClientClass
 B __g_C_TEEnergySplashClientClass
 B __g_C_TEExplosionClientClass
 B __g_C_TEFizzClientClass
 B __g_C_TEFootprintDecalClientClass
 B __g_C_TEGaussExplosionClientClass
 B __g_C_TEGlowSpriteClientClass
 B __g_C_TEImpactClientClass
 B __g_C_TEKillPlayerAttachmentsClientClass
 B __g_C_TELargeFunnelClientClass
 B __g_C_TEMetalSparksClientClass
 B __g_C_TEMuzzleFlashClientClass
 B __g_C_TEParticleSystemClientClass
 B __g_C_TEPhysicsPropClientClass
 B __g_C_TEPlayerDecalClientClass
 B __g_C_TEProjectedDecalClientClass
 B __g_C_TEShatterSurfaceClientClass
 B __g_C_TEShowLineClientClass
 B __g_C_TESmokeClientClass
 B __g_C_TESparksClientClass
 B __g_C_TESpriteClientClass
 B __g_C_TESpriteSprayClientClass
 B __g_C_TEWorldDecalClientClass
 B __g_C_TeamClientClass
 B __g_C_TeamplayRoundBasedRulesProxyClientClass
 B __g_C_TeslaClientClass
 B __g_C_TestTracelineClientClass
 B __g_C_Test_ProxyToggle_NetworkableClientClass
 B __g_C_VGuiScreenClientClass
 B __g_C_VortigauntChargeTokenClientClass
 B __g_C_VortigauntEffectDispelClientClass
 B __g_C_VoteControllerClientClass
 B __g_C_WaterBulletClientClass
 B __g_C_WaterLODControlClientClass
 B __g_C_Weapon357ClientClass
 B __g_C_WeaponAR2ClientClass
 B __g_C_WeaponAlyxGunClientClass
 B __g_C_WeaponAnnabelleClientClass
 B __g_C_WeaponBinocularsClientClass
 B __g_C_WeaponBugBaitClientClass
 B __g_C_WeaponCitizenPackageClientClass
 B __g_C_WeaponCitizenSuitcaseClientClass
 B __g_C_WeaponCrossbowClientClass
 B __g_C_WeaponCrowbarClientClass
 B __g_C_WeaponCubemapClientClass
 B __g_C_WeaponCyclerClientClass
 B __g_C_WeaponFragClientClass
 B __g_C_WeaponGaussGunClientClass
 B __g_C_WeaponPhysCannonClientClass
 B __g_C_WeaponPistolClientClass
 B __g_C_WeaponRPGClientClass
 B __g_C_WeaponSMG1ClientClass
 B __g_C_WeaponShotgunClientClass
 B __g_C_WeaponStunStickClientClass
 B __g_C_Weapon_SLAMClientClass
 B __g_C_WorldClientClass
 B ai_debug_shoot_positions
 B ai_shot_bias_max
 B ai_shot_bias_min
 B airboat_joy_response_move
 B beamRandom
 B building_cubemaps
 B cam_idealdist
 B cam_idealdistright
 B cam_idealdistup
 B cam_idealpitch
 B cam_idealyaw
 B cc_CreateHairball
 B cc_achievement_debug
 B cc_lang
 B cl_ShowBoneSetupEnts
 B cl_ShowSunVectors
 B cl_anglespeedkey
 B cl_backspeed
 B cl_burninggibs
 B cl_chatfilter_version
 B cl_chatfilters
 B cl_clearhinthistory
 B cl_debugrumble
 B cl_detail_multiplier
 B cl_detaildist
 B cl_detailfade
 B cl_disablehtmlmotd
 B cl_draw_airboat_wake
 B cl_drawhud
 B cl_drawshadowtexture
 B cl_ejectbrass
 B cl_extrapolate_amount
 B cl_fastdetailsprites
 B cl_fasttempentcollision
 B cl_forwardspeed
 B cl_hudhint_sound
 B cl_jiggle_bone_debug
 B cl_jiggle_bone_debug_pitch_constraints
 B cl_jiggle_bone_debug_yaw_constraints
 B cl_jiggle_bone_framerate_cutoff
 B cl_lagcompensation
 B cl_leveloverview
 B cl_meathook_neck_pivot_ingame_fwd
 B cl_meathook_neck_pivot_ingame_up
 B cl_mouseenable
 B cl_mouselook
 B cl_npc_speedmod_intime
 B cl_npc_speedmod_outtime
 B cl_observercrosshair
 B cl_particle_show_bbox
 B cl_particle_show_bbox_cost
 B cl_particleeffect_aabb_buffer
 B cl_phys_props_enable
 B cl_phys_props_max
 B cl_phys_props_respawndist
 B cl_phys_props_respawnrate
 B cl_phys_timescale
 B cl_pitchdown
 B cl_pitchspeed
 B cl_pitchup
 B cl_predictweapons
 B cl_ragdoll_collide
 B cl_rumblescale
 B cl_shadowtextureoverlaysize
 B cl_show_num_particle_systems
 B cl_show_splashes
 B cl_showanimstate
 B cl_showerror
 B cl_showhelp
 B cl_showtextmsg
 B cl_sidespeed
 B cl_spec_mode
 B cl_sporeclipdistance
 B cl_starfield_diameter
 B cl_starfield_distance
 B cl_sun_decay_rate
 B cl_thirdperson
 B cl_threaded_bone_setup
 B cl_upspeed
 B cl_winddir
 B cl_windspeed
 B cl_yawspeed
 B closecaption
 B colorcorrection
 B commentary_showmodelviewer
 B controlEnvelope
 B crosshair
 B cvar
 B cvar_m_pitch
 B datacache
 B debug_materialmodifycontrol_client
 B debugoverlay
 B default_fov
 B demo_fov_override
 B developer
 B effects
 B engine
 B enginesound
 B enginetrace
 B enginevgui
 B english
 B entitytable_t_DataDescInit::g_DataMapHolder
 B exampleeffect_effect
 B exampleeffect_reg
 B filesystem
 B flexsetting_t_DataDescInit::g_DataMapHolder
 B flexsettinghdr_t_DataDescInit::g_DataMapHolder
 B flexweight_t_DataDescInit::g_DataMapHolder
 B fov_desired
 B fraglimit
 B friendlyfire
 B func_break_max_pieces
 B gHLClient
 B gHUD
 B gLCD
 B gViewPortInterface
 B gWR
 B g_ActionSet
 B g_ActivityList
 B g_ActivityStrings
 B g_AimEntsList
 B g_AnimatingImagePanelLinkerHack
 B g_AnimatingImagePanelPullInModule
 B g_AsyncCaptionResourceManager
 B g_BaseAnimatingGameSystem
 B g_BeamCreationAllowed
 B g_BitWriteMasks
 B g_Blood_Core
 B g_Blood_Drops
 B g_Blood_Gore
 B g_BoneSetupEnts
 B g_BulletWhiz
 B g_ButtonLinkerHack
 B g_ButtonPullInModule
 B g_ButtonSoundNames
 B g_CBitmapImagePanelLinkerHack
 B g_CBitmapImagePanelPullInModule
 B g_CSlideshowDisplayScreenFactory
 B g_CTeleportCountdownScreenFactory
 B g_CTreeViewListControlLinkerHack
 B g_CTreeViewListControlPullInModule
 B g_CVGuiScreenPanelFactory
 B g_CV_BlinkDuration
 B g_CV_FlexRules
 B g_CV_FlexSmooth
 B g_CV_PhonemeDelay
 B g_CV_PhonemeFilter
 B g_CV_PhonemeSnap
 B g_CheckButtonLinkerHack
 B g_CheckButtonPullInModule
 B g_CircularProgressBarLinkerHack
 B g_CircularProgressBarPullInModule
 B g_ClientThinkList
 B g_ClientUIMouth
 B g_ClientVirtualReality
 B g_Collisions
 B g_ColorBlue
 B g_ColorDarkGreen
 B g_ColorGreen
 B g_ColorGrey
 B g_ColorRed
 B g_ColorYellow
 B g_ComboBoxLinkerHack
 B g_ComboBoxPullInModule
 B g_CommentaryNodes
 B g_CvarToggleCheckButtonLinkerHack
 B g_CvarToggleCheckButtonPullInModule
 B g_DataChangedEvents
 B g_DefaultViewRender
 B g_DividerLinkerHack
 B g_DividerPullInModule
 B g_EditablePanelLinkerHack
 B g_EditablePanelPullInModule
 B g_EntityCollisionHash
 B g_EntitySaveRestoreBlockHandler
 B g_EventList
 B g_EventStrings
 B g_ExpandButtonLinkerHack
 B g_ExpandButtonPullInModule
 B g_ExtraMasks
 B g_FXCreationAllowed
 B g_FireRamps
 B g_FireSpreadDirection
 B g_FleckMergeList
 B g_FlexSceneFileManager
 B g_GlowOverlaySystem
 B g_GraphPanelLinkerHack
 B g_GraphPanelPullInModule
 B g_GunshipCannonEnvelope
 B g_ImagePanelLinkerHack
 B g_ImagePanelPullInModule
 B g_InfoTeleporterCountdownList
 B g_InputInternal
 B g_KeyValuesCache
 B g_LabelLinkerHack
 B g_LabelPullInModule
 B g_Language
 B g_ListPanelLinkerHack
 B g_ListPanelPullInModule
 B g_ListViewPanelLinkerHack
 B g_ListViewPanelPullInModule
 B g_LittleBits
 B g_MakingDevShots
 B g_Mat_BloodPuff
 B g_Mat_Combine_Muzzleflash
 B g_Mat_DustPuff
 B g_Mat_Fleck_Antlion
 B g_Mat_Fleck_Cement
 B g_Mat_Fleck_Glass
 B g_Mat_Fleck_Tile
 B g_Mat_Fleck_Wood
 B g_Mat_SMG_Muzzleflash
 B g_Material_AR2Glow
 B g_Material_Spark
 B g_MatrixPool
 B g_MenuBarLinkerHack
 B g_MenuBarPullInModule
 B g_MenuButtonLinkerHack
 B g_MenuButtonPullInModule
 B g_MenuItemLinkerHack
 B g_MenuItemPullInModule
 B g_MenuLinkerHack
 B g_MenuPullInModule
 B g_MessageBoxLinkerHack
 B g_MessageBoxPullInModule
 B g_MultiDamage
 B g_Offsets
 B g_PR
 B g_PanelLinkerHack
 B g_PanelPullInModule
 B g_ParticleEffects
 B g_PhysObjSaveRestoreOps
 B g_PhysSaveRestoreBlockHandler
 B g_PhysWorldObject
 B g_PointCameraList
 B g_PrecipHack
 B g_PreviousBoneSetups
 B g_ProgressBarLinkerHack
 B g_ProgressBarPullInModule
 B g_PropDataSystem
 B g_QaternionPool
 B g_RadioButtonLinkerHack
 B g_RadioButtonPullInModule
 B g_RagdollLVManager
 B g_ReflectiveGlassList
 B g_RichTextLinkerHack
 B g_RichTextPullInModule
 B g_Ropes
 B g_RumbleEffects
 B g_SaveRestoreBlockSet
 B g_ScalableImagePanelLinkerHack
 B g_ScalableImagePanelPullInModule
 B g_ScrollBarLinkerHack
 B g_ScrollBarPullInModule
 B g_ScrollBar_HorizontalLinkerHack
 B g_ScrollBar_HorizontalPullInModule
 B g_ScrollBar_VerticalLinkerHack
 B g_ScrollBar_VerticalPullInModule
 B g_SliderLinkerHack
 B g_SliderPullInModule
 B g_SlideshowDisplays
 B g_SmokeFogOverlayAlpha
 B g_SmokeFogOverlayColor
 B g_SoundscapeSystem
 B g_StriderCannonEnvelope
 B g_StringTableEffectDispatch
 B g_StringTableGameRules
 B g_StringTableVguiScreen
 B g_Teams
 B g_TextEntryLinkerHack
 B g_TextEntryPullInModule
 B g_ThirdPersonManager
 B g_ToggleButtonLinkerHack
 B g_ToggleButtonPullInModule
 B g_TokenProcessor
 B g_TreeViewLinkerHack
 B g_TreeViewPullInModule
 B g_URLLabelLinkerHack
 B g_URLLabelPullInModule
 B g_VBAllocTracker
 B g_VectorPool
 B g_ViewEffectsSaveRestoreBlockHandler
 B g_WorldListCache
 B g_antlion_maxgibs
 B g_bDisplayParticlePerformance
 B g_bDontMakeSkipToTimeTakeForever
 B g_bDumpRenderTargets
 B g_bFlashlightIsOn
 B g_bForceCLPredictOff
 B g_bLevelInitialized
 B g_bMeasureParticlePerformance
 B g_bRenderingScreenshot
 B g_bRollingCredits
 B g_bSuppressParticleEffects
 B g_bTextMode
 B g_bUseCustomAutoExposureMax
 B g_bUseCustomAutoExposureMin
 B g_bUseCustomBloomScale
 B g_cl_particle_show_bbox
 B g_cl_particle_show_bbox_cost
 B g_debug_ragdoll_removal
 B g_debug_ragdoll_visualize
 B g_flCustomAutoExposureMax
 B g_flCustomAutoExposureMin
 B g_flCustomBloomScale
 B g_flCustomBloomScaleMinimum
 B g_flFreezeFlash
 B g_flLastPacketTimestamp
 B g_flOverlayRange
 B g_hFontTrebuchet24
 B g_hTonemapControllerInUse
 B g_hVGuiCombineScheme
 B g_iCreditsPixelHeight
 B g_lastPanel
 B g_lateralBob
 B g_material_WriteZ
 B g_nKillCamMode
 B g_nKillCamTarget1
 B g_nYou_Must_Add_Public_Vgui_Controls_Vgui_ControlsCpp_To_Your_Project
 B g_pAchievementsAndStatsInterface
 B g_pAttributeTypeName
 B g_pCVar
 B g_pClientClassHead
 B g_pClientMode
 B g_pDataCache
 B g_pDmeMakefileUtils
 B g_pFullFileSystem
 B g_pGameRules
 B g_pGamepadUI
 B g_pImpactSoundRouteFn
 B g_pInputSystem
 B g_pIntroData
 B g_pMDLCache
 B g_pMapOverview
 B g_pMatSystemSurface
 B g_pMaterialSystem
 B g_pMaterialSystemDebugTextureInfo
 B g_pMaterialSystemHardwareConfig
 B g_pMumbleMemory
 B g_pNetGraphPanel
 B g_pNetworkSystem
 B g_pObjectiveResource
 B g_pPhysicsCollision
 B g_pPrecipHackEnt
 B g_pProcessUtils
 B g_pQueuedLoader
 B g_pRenamedRecvTableInfoHead
 B g_pSoundEmitterSystem
 B g_pSourceVR
 B g_pSpectatorGUI
 B g_pStringTableClientSideChoreoScenes
 B g_pStringTableInfoPanel
 B g_pStringTableMaterials
 B g_pStringTableParticleEffectNames
 B g_pStringTableServerMapCycle
 B g_pStudioRender
 B g_pStudioStatsEntity
 B g_pTestAnimation
 B g_pUtlSortVectorQSortContext
 B g_pVGui
 B g_pVGuiInput
 B g_pVGuiLocalize
 B g_pVGuiPanel
 B g_pVGuiSchemeManager
 B g_pVGuiSurface
 B g_pVGuiSystem
 B g_pVTex
 B g_pVideo
 B g_ragdoll_fadespeed
 B g_ragdoll_important_maxcount
 B g_ragdoll_lvfadespeed
 B g_ragdoll_maxcount
 B g_sModelIndexBloodDrop
 B g_sModelIndexBloodSpray
 B g_sModelIndexBubbles
 B g_sModelIndexFireball
 B g_sModelIndexLaser
 B g_sModelIndexLaserDot
 B g_sModelIndexSmoke
 B g_sModelIndexWExplosion
 B g_szMenuString
 B g_szPrelocalisedMenuString
 B g_vSplashColor
 B g_verticalBob
 B g_viewscene_refractUpdateFrame
 B gameeventmanager
 B gamestatsuploader
 B gameuifuncs
 B gl_can_query_fast
 B gl_clear
 B gl_clear_randomcolor
 B groundlinksallocated
 B haptics
 B hidehud
 B hl2_episodic
 B hud_alpha_speed
 B hud_aspect
 B hud_autoaim_method
 B hud_autoaim_scale_icon
 B hud_autoreloadscript
 B hud_draw_active_reticle
 B hud_draw_fixed_reticle
 B hud_drawhistory_time
 B hud_fastswitch
 B hud_fastswitch_net
 B hud_freezecamhide
 B hud_invert_zoom_unzoomed_crosshair_colors
 B hud_magnetism
 B hud_reticle_maxalpha
 B hud_reticle_minalpha
 B hud_reticle_scale
 B hud_saytext_time
 B hud_showemptyweaponslots
 B hud_takesshots
 B in_back
 B in_commandermousemove
 B in_ducktoggle
 B in_forward
 B in_graph
 B in_jlook
 B in_joyspeed
 B in_joystick
 B in_left
 B in_lookspin
 B in_moveleft
 B in_moveright
 B in_resetcamera
 B in_right
 B in_speed
 B in_strafe
 B in_walk
 B inputsystem
 B joy_accel_filter
 B joy_autosprint
 B joy_pegged
 B joy_response_move_vehicle
 B joy_virtual_peg
 B lineartolightmap
 B lineartovertex
 B linksallocated
 B localplayer_visionflags
 B lod_TransitionDist
 B lookspring
 B lookstrafe
 B mat_accelerate_adjust_exposure_down
 B mat_bloomamount_rate
 B mat_bloomscale
 B mat_colorcorrection
 B mat_debug_autoexposure
 B mat_debug_bloom
 B mat_disable_bloom
 B mat_exposure_center_region_x
 B mat_exposure_center_region_x_flashlight
 B mat_exposure_center_region_y
 B mat_exposure_center_region_y_flashlight
 B mat_force_bloom
 B mat_fullbright
 B mat_hdr_level
 B mat_hdr_manual_tonemap_rate
 B mat_hdr_tonemapscale
 B mat_hdr_uncapexposure
 B mat_motion_blur_enabled
 B mat_motion_blur_falling_intensity
 B mat_motion_blur_falling_max
 B mat_motion_blur_falling_min
 B mat_motion_blur_forward_enabled
 B mat_motion_blur_rotation_intensity
 B mat_motion_blur_strength
 B mat_non_hdr_bloom_scalefactor
 B mat_show_ab_hdr_hudelement
 B mat_showlightmappage
 B mat_stub
 B mat_tonemap_algorithm
 B mat_tonemap_min_avglum
 B mat_tonemap_percent_bright_pixels
 B mat_tonemap_percent_target
 B mat_viewportscale
 B mat_viewportupscale
 B mat_wireframe
 B materials
 B materials_stub
 B mdlcache
 B mdllib
 B modelinfo
 B modelrender
 B mp_allowspectators
 B mp_blockstyle
 B mp_bonusroundtime
 B mp_capdeteriorate_time
 B mp_capstyle
 B mp_chattime
 B mp_disable_respawn_times
 B mp_facefronttime
 B mp_fadetoblack
 B mp_feetyawrate
 B mp_forceautoteam
 B mp_forcecamera
 B mp_ik
 B mp_maxrounds
 B mp_respawnwavetime
 B mp_show_voice_icons
 B mp_stalemate_meleeonly
 B mp_teams_unbalance_limit
 B mp_timelimit
 B mp_tournament
 B mp_usehwmmodels
 B mp_usehwmvcds
 B mp_winlimit
 B muzzleflash_light
 B networkstringtable
 B old_radius_damage
 B option_duck_method
 B overview_alpha
 B overview_health
 B overview_locked
 B overview_names
 B overview_tracks
 B p4
 B panel_test_title_safe
 B partition
 B phys_pushscale
 B physcannon_mega_enabled
 B physcollision
 B physenv
 B physics
 B physprops
 B player_info_s_DataDescInit::g_DataMapHolder
 B player_limit_jump_speed
 B player_squad_transient_commands
 B presence
 B props_break_max_pieces
 B props_break_max_pieces_perframe
 B pyro_max_intensity
 B pyro_max_rate
 B pyro_max_side_length
 B pyro_max_side_width
 B pyro_min_intensity
 B pyro_min_rate
 B pyro_min_side_length
 B pyro_min_side_width
 B pyro_vignette
 B pyro_vignette_distortion
 B r_AirboatPitchCurveLinear
 B r_AirboatPitchCurveZero
 B r_AirboatRollCurveLinear
 B r_AirboatRollCurveZero
 B r_AirboatViewBlendTo
 B r_AirboatViewBlendToScale
 B r_AirboatViewBlendToTime
 B r_AirboatViewDampenDamp
 B r_AirboatViewDampenFreq
 B r_AirboatViewZHeight
 B r_DrawBeams
 B r_DrawDetailProps
 B r_DrawParticles
 B r_DrawRain
 B r_JeepViewBlendTo
 B r_JeepViewBlendToScale
 B r_JeepViewBlendToTime
 B r_JeepViewDampenDamp
 B r_JeepViewDampenFreq
 B r_JeepViewZHeight
 B r_PhysPropStaticLighting
 B r_RainHack
 B r_RainProfile
 B r_RainRadius
 B r_RainSideVel
 B r_RainSimulate
 B r_RainSplashPercentage
 B r_VehicleViewClamp
 B r_VehicleViewDampen
 B r_decals
 B r_depthoverlay
 B r_dopixelvisibility
 B r_drawmodeldecals
 B r_drawopaquestaticpropslast
 B r_drawothermodels
 B r_drawpixelvisibility
 B r_drawsprites
 B r_drawviewmodel
 B r_entityclips
 B r_flashlightdepthres
 B r_flashlightdepthtexture
 B r_pixelvisibility_partial
 B r_pixelvisibility_spew
 B r_propsmaxdist
 B r_rainalpha
 B r_rainalphapow
 B r_sequence_debug
 B r_sse_s
 B r_threaded_client_shadow_manager
 B r_updaterefracttexture
 B r_visualizeproplightcaching
 B r_visualizetraces
 B r_worldlistcache
 B random_valve
 B render
 B rgDeathNoticeList
 B rgv3tStuckTable
 B s_AntlionGibManager
 B s_ChildrenInfoUnpack
 B s_DMXAllocator
 B s_DragDropHelper
 B s_NoEscConversion
 B s_RagdollLRU
 B s_StringCharConversion
 B s_bCanAccessCurrentView
 B s_bMathlibInitialized
 B s_pConv
 B s_pParticleSystemDefinitionUnpack
 B sc_controller_mode
 B sc_last_used_input
 B sc_smart_sprint
 B sc_smart_sprint_end_bounds
 B sc_smart_sprint_start_bounds
 B sc_tint_glyphs
 B sc_use_glyphs
 B scene_clientflex
 B scenefilecache
 B screenfade_t_DataDescInit::g_DataMapHolder
 B screenshake_t_DataDescInit::g_DataMapHolder
 B sensitivity
 B shadowmgr
 B showanimstate_log
 B sk_allow_autoaim
 B sk_ammo_qty_scale1
 B sk_ammo_qty_scale2
 B sk_ammo_qty_scale3
 B sk_auto_reload_time
 B sk_autoaim_mode
 B sk_autoaim_scale1
 B sk_autoaim_scale2
 B sk_dmg_inflict_scale1
 B sk_dmg_inflict_scale2
 B sk_dmg_inflict_scale3
 B sk_dmg_sniper_penetrate_npc
 B sk_dmg_sniper_penetrate_plr
 B sk_dmg_take_scale1
 B sk_dmg_take_scale2
 B sk_dmg_take_scale3
 B sk_max_357
 B sk_max_alyxgun
 B sk_max_ar2
 B sk_max_ar2_altfire
 B sk_max_buckshot
 B sk_max_crossbow
 B sk_max_gauss_round
 B sk_max_grenade
 B sk_max_pistol
 B sk_max_rpg_round
 B sk_max_smg1
 B sk_max_smg1_grenade
 B sk_max_sniper_round
 B sk_npc_dmg_357
 B sk_npc_dmg_airboat
 B sk_npc_dmg_alyxgun
 B sk_npc_dmg_ar2
 B sk_npc_dmg_buckshot
 B sk_npc_dmg_crossbow
 B sk_npc_dmg_grenade
 B sk_npc_dmg_gunship
 B sk_npc_dmg_gunship_to_plr
 B sk_npc_dmg_pistol
 B sk_npc_dmg_rpg_round
 B sk_npc_dmg_smg1
 B sk_npc_dmg_smg1_grenade
 B sk_npc_dmg_sniper_round
 B sk_plr_dmg_357
 B sk_plr_dmg_airboat
 B sk_plr_dmg_alyxgun
 B sk_plr_dmg_ar2
 B sk_plr_dmg_buckshot
 B sk_plr_dmg_crossbow
 B sk_plr_dmg_grenade
 B sk_plr_dmg_pistol
 B sk_plr_dmg_rpg_round
 B sk_plr_dmg_smg1
 B sk_plr_dmg_smg1_grenade
 B sk_plr_dmg_sniper_round
 B sk_plr_grenade_drop_time
 B sk_plr_health_drop_time
 B sk_plr_num_shotgun_pellets
 B soundemitterbase
 B soundscape_fadetime
 B spec_autodirector
 B spec_freeze_distance_max
 B spec_freeze_distance_min
 B spec_freeze_time
 B spec_freeze_traveltime
 B spec_scoreboard
 B staticpropmgr
 B studiorender
 B sv_accelerate
 B sv_airaccelerate
 B sv_alternateticks
 B sv_backspeed
 B sv_bounce
 B sv_cheats
 B sv_debug_player_use
 B sv_footsteps
 B sv_friction
 B sv_gravity
 B sv_hudhint_sound
 B sv_maxspeed
 B sv_maxvelocity
 B sv_mumble_positionalaudio
 B sv_noclipaccelerate
 B sv_noclipduringpause
 B sv_noclipspeed
 B sv_pushaway_clientside
 B sv_pushaway_clientside_size
 B sv_pushaway_force
 B sv_pushaway_max_force
 B sv_pushaway_max_player_force
 B sv_pushaway_min_player_speed
 B sv_pushaway_player_force
 B sv_robust_explosions
 B sv_rollangle
 B sv_rollspeed
 B sv_skyname
 B sv_specaccelerate
 B sv_specnoclip
 B sv_specspeed
 B sv_stepsize
 B sv_stopspeed
 B sv_suppress_viewpunch
 B sv_turbophysics
 B sv_wateraccelerate
 B sv_waterdist
 B sv_waterfriction
 B textmessage
 B tf_arena_max_streak
 B tf_arena_preround_time
 B tf_arena_round_time
 B tf_arena_use_queue
 B think_limit
 B thirdperson_platformer
 B thirdperson_screenspace
 B tracer_extra
 B v_viewmodel_fov
 B vcollide_wireframe
 B vgui::BuildGroup::m_HandleTable
 B vgui::CBuildFactoryHelper::m_sHelpers
 B vgui::g_pMDLCache
 B vgui::g_pMatSystemSurface
 B vgui::g_pMaterialSystem
 B vgui::g_pMaterialSystemHardwareConfig
 B vgui::g_pStudioRender
 B vgui_hud_posture
 B view
 B viewanim_reset
 B viewanim_test
 B voice_clientdebug
 B voice_modenable
 B vr_activate_default
 B vr_aim_yaw_offset
 B vr_debug_remote_cam
 B vr_debug_remote_cam_pos_x
 B vr_debug_remote_cam_pos_y
 B vr_debug_remote_cam_pos_z
 B vr_debug_remote_cam_target_x
 B vr_debug_remote_cam_target_y
 B vr_debug_remote_cam_target_z
 B vr_first_person_uses_world_model
 B vr_force_windowed
 B vr_hud_axis_lock_to_world
 B vr_hud_display_ratio
 B vr_hud_forward
 B vr_hud_max_fov
 B vr_hud_never_overlay
 B vr_moveaim_mode
 B vr_moveaim_mode_zoom
 B vr_moveaim_reticle_pitch_limit
 B vr_moveaim_reticle_pitch_limit_zoom
 B vr_moveaim_reticle_yaw_limit
 B vr_moveaim_reticle_yaw_limit_zoom
 B vr_projection_znear_multiplier
 B vr_render_hud_in_world
 B vr_stereo_mono_set_eye
 B vr_stereo_swap_eyes
 B vr_translation_limit
 B vr_viewmodel_offset_forward
 B vr_viewmodel_offset_forward_large
 B vr_viewmodel_translate_with_head
 B vr_zoom_multiplier
 B vr_zoom_scope_scale
 B zoom_sensitivity_ratio
 CGaussianRandomStream::AttachToStream(IUniformRandomStream*)
 CGaussianRandomStream::CGaussianRandomStream(IUniformRandomStream*)
 CGaussianRandomStream::RandomFloat(float, float)
 CThread::GetThreadProc()
 CThread::Init()
 CThread::IsThreadRunning()
 CThread::OnExit()
 CThread::SetName(char const*)
 CThread::Start(unsigned int)
 CThread::~CThread()
 CThreadEvent::CThreadEvent(bool)
 CThreadEvent::Set()
 CThreadFastMutex::Lock(unsigned int, unsigned int) volatile
 CThreadLocalBase::CThreadLocalBase()
 CThreadLocalBase::Get() const
 CThreadLocalBase::Set(void*)
 CThreadLocalBase::~CThreadLocalBase()
 CThreadRWLock::LockForWrite()
 CThreadRWLock::UnlockWrite()
 CThreadRWLock::WaitForRead()
 CThreadSpinRWLock::LockForRead()
 CThreadSpinRWLock::SpinLockForWrite(unsigned int)
 CThreadSpinRWLock::UnlockRead()
 CThreadSpinRWLock::UnlockWrite()
 CThreadSyncObject::~CThreadSyncObject()
 CUniformRandomStream::CUniformRandomStream()
 CUniformRandomStream::RandomFloat(float, float)
 CUniformRandomStream::RandomInt(int, int)
 CUniformRandomStream::SetSeed(int)
 CVProfNode::EnterScope()
 CVProfNode::ExitScope()
 CVProfNode::GetSubNode(char const*, int, char const*, int)
 CVProfile::FindOrCreateCounter(char const*, CounterGroup_t)
 CWorkerThread::CWorkerThread()
 CWorkerThread::Reply(unsigned int)
 CWorkerThread::WaitForCall(unsigned int*)
 CallAssertFailedNotifyFunc
 CommandLine_Tier0
 ConColorMsg(Color const&, char const*, ...)
 ConMsg(char const*, ...)
 D AllocTempVector()::s_nIndex
 D AllocTempVector()::s_vecTemp
 D CAchievementNotificationPanel::ChainToAnimationMap()::chained
 D CAchievementNotificationPanel::ChainToMap()::chained
 D CAchievementNotificationPanel::GetKBMap()::s_pMap
 D CAchievementNotificationPanel::GetMessageMap()::s_pMap
 D CAchievementNotificationPanel::KB_ChainToMap()::chained
 D CAvatarImagePanel::ChainToAnimationMap()::chained
 D CAvatarImagePanel::ChainToMap()::chained
 D CAvatarImagePanel::GetKBMap()::s_pMap
 D CAvatarImagePanel::GetMessageMap()::s_pMap
 D CAvatarImagePanel::KB_ChainToMap()::chained
 D CAvatarImagePanel::PanelAnimationVar_m_clrOutline::InitVar()::bAdded
 D CBaseAchievement::m_DataMap
 D CBaseHudChat::ChainToAnimationMap()::chained
 D CBaseHudChat::ChainToMap()::chained
 D CBaseHudChat::GetKBMap()::s_pMap
 D CBaseHudChat::GetMessageMap()::s_pMap
 D CBaseHudChat::KB_ChainToMap()::chained
 D CBaseHudChat::PanelMessageFunc_OnChatEntrySend::InitVar()::bAdded
 D CBaseHudChat::PanelMessageFunc_OnChatEntryStopMessageMode::InitVar()::bAdded
 D CBaseHudChat::m_nLineCounter
 D CBaseModelPanel::ChainToAnimationMap()::chained
 D CBaseModelPanel::ChainToMap()::chained
 D CBaseModelPanel::GetKBMap()::s_pMap
 D CBaseModelPanel::GetMessageMap()::s_pMap
 D CBaseModelPanel::KB_ChainToMap()::chained
 D CBaseModelPanel::PanelAnimationVar_m_bDisableManipulation::InitVar()::bAdded
 D CBaseModelPanel::PanelAnimationVar_m_bStartFramed::InitVar()::bAdded
 D CBaseViewport::ChainToAnimationMap()::chained
 D CBaseViewport::ChainToMap()::chained
 D CBaseViewport::GetKBMap()::s_pMap
 D CBaseViewport::GetMessageMap()::s_pMap
 D CBaseViewport::KB_ChainToMap()::chained
 D CBloodSprayEmitter::UpdateVelocity(SimpleParticle*, float)::decay
 D CBloodSprayEmitter::UpdateVelocity(SimpleParticle*, float)::dtime
 D CBorderVisualizerPanel::ChainToAnimationMap()::chained
 D CBorderVisualizerPanel::ChainToMap()::chained
 D CBorderVisualizerPanel::GetKBMap()::s_pMap
 D CBorderVisualizerPanel::GetMessageMap()::s_pMap
 D CBorderVisualizerPanel::KB_ChainToMap()::chained
 D CBoundedCvar_Interp::GetFloat() const::pMin
 D CBoundedCvar_Interp::GetFloat() const::pUpdateRate
 D CBoundedCvar_InterpRatio::GetFloat() const::pMax
 D CBoundedCvar_InterpRatio::GetFloat() const::pMin
 D CBoundedCvar_Predict::GetFloat() const::pClientPredict
 D CBuildModeNavCombo::ChainToAnimationMap()::chained
 D CBuildModeNavCombo::ChainToMap()::chained
 D CBuildModeNavCombo::GetKBMap()::s_pMap
 D CBuildModeNavCombo::GetMessageMap()::s_pMap
 D CBuildModeNavCombo::KB_ChainToMap()::chained
 D CCenterStringLabel::ChainToAnimationMap()::chained
 D CCenterStringLabel::ChainToMap()::chained
 D CCenterStringLabel::GetKBMap()::s_pMap
 D CCenterStringLabel::GetMessageMap()::s_pMap
 D CCenterStringLabel::KB_ChainToMap()::chained
 D CCenterStringLabel::PanelMessageFunc_OnScreenSizeChanged::InitVar()::bAdded
 D CChoreoEvent::s_nGlobalID
 D CClientScoreBoardDialog::ChainToAnimationMap()::chained
 D CClientScoreBoardDialog::ChainToMap()::chained
 D CClientScoreBoardDialog::GetKBMap()::s_pMap
 D CClientScoreBoardDialog::GetMessageMap()::s_pMap
 D CClientScoreBoardDialog::KB_ChainToMap()::chained
 D CClientScoreBoardDialog::PanelAnimationVar_m_iAvatarWidth::InitVar()::bAdded
 D CClientScoreBoardDialog::PanelAnimationVar_m_iClassWidth::InitVar()::bAdded
 D CClientScoreBoardDialog::PanelAnimationVar_m_iDeathWidth::InitVar()::bAdded
 D CClientScoreBoardDialog::PanelAnimationVar_m_iNameWidth::InitVar()::bAdded
 D CClientScoreBoardDialog::PanelAnimationVar_m_iPingWidth::InitVar()::bAdded
 D CClientScoreBoardDialog::PanelAnimationVar_m_iScoreWidth::InitVar()::bAdded
 D CClientScoreBoardDialog::PanelMessageFunc_OnPollHideCode::InitVar()::bAdded
 D CClientTools::s_nNextHandle
 D CCollisionProperty::m_PredMap
 D CColorVisualizerPanel::ChainToAnimationMap()::chained
 D CColorVisualizerPanel::ChainToMap()::chained
 D CColorVisualizerPanel::GetKBMap()::s_pMap
 D CColorVisualizerPanel::GetMessageMap()::s_pMap
 D CColorVisualizerPanel::KB_ChainToMap()::chained
 D CCommentaryModelPanel::ChainToAnimationMap()::chained
 D CCommentaryModelPanel::ChainToMap()::chained
 D CCommentaryModelPanel::GetKBMap()::s_pMap
 D CCommentaryModelPanel::GetMessageMap()::s_pMap
 D CCommentaryModelPanel::KB_ChainToMap()::chained
 D CCommentaryModelViewer::ChainToAnimationMap()::chained
 D CCommentaryModelViewer::ChainToMap()::chained
 D CCommentaryModelViewer::GetKBMap()::s_pMap
 D CCommentaryModelViewer::GetMessageMap()::s_pMap
 D CCommentaryModelViewer::KB_ChainToMap()::chained
 D CCopyRecipientFilter::m_DataMap
 D CDmxElement* const& CDmxAttribute::GetValue<CDmxElement*>() const::defaultValue
 D CDmxElement* const& CDmxElement::GetValue<CDmxElement*>(char const*) const::defaultValue
 D CDragDropHelperPanel::ChainToAnimationMap()::chained
 D CDragDropHelperPanel::ChainToMap()::chained
 D CDragDropHelperPanel::GetKBMap()::s_pMap
 D CDragDropHelperPanel::GetMessageMap()::s_pMap
 D CDragDropHelperPanel::KB_ChainToMap()::chained
 D CDustParticle::UpdateVelocity(SimpleParticle*, float)::decay
 D CDustParticle::UpdateVelocity(SimpleParticle*, float)::dtime
 D CEnginePostMaterialProxy::s_PostBloomEnable
 D CEnvHeadcrabCanisterShared::m_DataMap
 D CExplosionParticle::UpdateVelocity(SimpleParticle*, float)::decay
 D CExplosionParticle::UpdateVelocity(SimpleParticle*, float)::dtime
 D CFPSPanel::ChainToAnimationMap()::chained
 D CFPSPanel::ChainToMap()::chained
 D CFPSPanel::GetKBMap()::s_pMap
 D CFPSPanel::GetMessageMap()::s_pMap
 D CFPSPanel::KB_ChainToMap()::chained
 D CFPSPanel::PanelMessageFunc_OnScreenSizeChanged::InitVar()::bAdded
 D CFailableAchievement::m_DataMap
 D CFmtStrN<256, false>::CFmtStrN(char const*, ...)::scAsserted
 D CHUDAutoAim::ChainToAnimationMap()::chained
 D CHUDAutoAim::ChainToMap()::chained
 D CHUDAutoAim::GetKBMap()::s_pMap
 D CHUDAutoAim::GetMessageMap()::s_pMap
 D CHUDAutoAim::KB_ChainToMap()::chained
 D CHUDQuickInfo::ChainToAnimationMap()::chained
 D CHUDQuickInfo::ChainToMap()::chained
 D CHUDQuickInfo::GetKBMap()::s_pMap
 D CHUDQuickInfo::GetMessageMap()::s_pMap
 D CHUDQuickInfo::KB_ChainToMap()::chained
 D CHudAmmo::ChainToAnimationMap()::chained
 D CHudAmmo::ChainToMap()::chained
 D CHudAmmo::GetKBMap()::s_pMap
 D CHudAmmo::GetMessageMap()::s_pMap
 D CHudAmmo::KB_ChainToMap()::chained
 D CHudAnimationInfo::ChainToAnimationMap()::chained
 D CHudAnimationInfo::ChainToMap()::chained
 D CHudAnimationInfo::GetKBMap()::s_pMap
 D CHudAnimationInfo::GetMessageMap()::s_pMap
 D CHudAnimationInfo::KB_ChainToMap()::chained
 D CHudAnimationInfo::PanelAnimationVar_m_ItemColor::InitVar()::bAdded
 D CHudAnimationInfo::PanelAnimationVar_m_ItemFont::InitVar()::bAdded
 D CHudAnimationInfo::PanelAnimationVar_m_LabelColor::InitVar()::bAdded
 D CHudAnimationInfo::PanelAnimationVar_m_LabelFont::InitVar()::bAdded
 D CHudBattery::ChainToAnimationMap()::chained
 D CHudBattery::ChainToMap()::chained
 D CHudBattery::GetKBMap()::s_pMap
 D CHudBattery::GetMessageMap()::s_pMap
 D CHudBattery::KB_ChainToMap()::chained
 D CHudChat::ChainToAnimationMap()::chained
 D CHudChat::ChainToMap()::chained
 D CHudChat::GetKBMap()::s_pMap
 D CHudChat::GetMessageMap()::s_pMap
 D CHudChat::KB_ChainToMap()::chained
 D CHudChatFilterButton::ChainToAnimationMap()::chained
 D CHudChatFilterButton::ChainToMap()::chained
 D CHudChatFilterButton::GetKBMap()::s_pMap
 D CHudChatFilterButton::GetMessageMap()::s_pMap
 D CHudChatFilterButton::KB_ChainToMap()::chained
 D CHudChatFilterCheckButton::ChainToAnimationMap()::chained
 D CHudChatFilterCheckButton::ChainToMap()::chained
 D CHudChatFilterCheckButton::GetKBMap()::s_pMap
 D CHudChatFilterCheckButton::GetMessageMap()::s_pMap
 D CHudChatFilterCheckButton::KB_ChainToMap()::chained
 D CHudChatFilterPanel::ChainToAnimationMap()::chained
 D CHudChatFilterPanel::ChainToMap()::chained
 D CHudChatFilterPanel::GetKBMap()::s_pMap
 D CHudChatFilterPanel::GetMessageMap()::s_pMap
 D CHudChatFilterPanel::KB_ChainToMap()::chained
 D CHudChatFilterPanel::PanelMessageFunc_OnFilterButtonChecked::InitVar()::bAdded
 D CHudChatHistory::ChainToAnimationMap()::chained
 D CHudChatHistory::ChainToMap()::chained
 D CHudChatHistory::GetKBMap()::s_pMap
 D CHudChatHistory::GetMessageMap()::s_pMap
 D CHudChatHistory::KB_ChainToMap()::chained
 D CHudCloseCaption::ChainToAnimationMap()::chained
 D CHudCloseCaption::ChainToMap()::chained
 D CHudCloseCaption::GetKBMap()::s_pMap
 D CHudCloseCaption::GetMessageMap()::s_pMap
 D CHudCloseCaption::KB_ChainToMap()::chained
 D CHudCloseCaption::PanelAnimationVar_m_flBackgroundAlpha::InitVar()::bAdded
 D CHudCloseCaption::PanelAnimationVar_m_flGrowTime::InitVar()::bAdded
 D CHudCloseCaption::PanelAnimationVar_m_flItemFadeInTime::InitVar()::bAdded
 D CHudCloseCaption::PanelAnimationVar_m_flItemFadeOutTime::InitVar()::bAdded
 D CHudCloseCaption::PanelAnimationVar_m_flItemHiddenTime::InitVar()::bAdded
 D CHudCloseCaption::PanelAnimationVar_m_nAspectRatioOffset::InitVar()::bAdded
 D CHudCloseCaption::PanelAnimationVar_m_nTopOffset::InitVar()::bAdded
 D CHudCommentary::ChainToAnimationMap()::chained
 D CHudCommentary::ChainToMap()::chained
 D CHudCommentary::GetKBMap()::s_pMap
 D CHudCommentary::GetMessageMap()::s_pMap
 D CHudCommentary::KB_ChainToMap()::chained
 D CHudCommentary::PanelAnimationVar_m_BGOverrideColor::InitVar()::bAdded
 D CHudCommentary::PanelAnimationVar_m_BackgroundColor::InitVar()::bAdded
 D CHudCommentary::PanelAnimationVar_m_bUseScriptBGColor::InitVar()::bAdded
 D CHudCommentary::PanelAnimationVar_m_iBarTall::InitVar()::bAdded
 D CHudCommentary::PanelAnimationVar_m_iBarWide::InitVar()::bAdded
 D CHudCommentary::PanelAnimationVar_m_iBarX::InitVar()::bAdded
 D CHudCommentary::PanelAnimationVar_m_iBarY::InitVar()::bAdded
 D CHudCommentary::PanelAnimationVar_m_iCountXFR::InitVar()::bAdded
 D CHudCommentary::PanelAnimationVar_m_iCountY::InitVar()::bAdded
 D CHudCommentary::PanelAnimationVar_m_iIconTall::InitVar()::bAdded
 D CHudCommentary::PanelAnimationVar_m_iIconWide::InitVar()::bAdded
 D CHudCommentary::PanelAnimationVar_m_iIconX::InitVar()::bAdded
 D CHudCommentary::PanelAnimationVar_m_iIconY::InitVar()::bAdded
 D CHudCommentary::PanelAnimationVar_m_iSpeakersX::InitVar()::bAdded
 D CHudCommentary::PanelAnimationVar_m_iSpeakersY::InitVar()::bAdded
 D CHudCommentary::PanelAnimationVar_m_nIconTextureId::InitVar()::bAdded
 D CHudCredits::ChainToAnimationMap()::chained
 D CHudCredits::ChainToMap()::chained
 D CHudCredits::GetKBMap()::s_pMap
 D CHudCredits::GetMessageMap()::s_pMap
 D CHudCredits::KB_ChainToMap()::chained
 D CHudCredits::PanelAnimationVar_m_TextColor::InitVar()::bAdded
 D CHudCredits::PanelAnimationVar_m_hTextFont::InitVar()::bAdded
 D CHudCrosshair::ChainToAnimationMap()::chained
 D CHudCrosshair::ChainToMap()::chained
 D CHudCrosshair::GetKBMap()::s_pMap
 D CHudCrosshair::GetMessageMap()::s_pMap
 D CHudCrosshair::KB_ChainToMap()::chained
 D CHudCrosshair::PanelAnimationVar_m_bHideCrosshair::InitVar()::bAdded
 D CHudDamageIndicator::ChainToAnimationMap()::chained
 D CHudDamageIndicator::ChainToMap()::chained
 D CHudDamageIndicator::GetKBMap()::s_pMap
 D CHudDamageIndicator::GetMessageMap()::s_pMap
 D CHudDamageIndicator::KB_ChainToMap()::chained
 D CHudDamageIndicator::PanelAnimationVar_m_DmgColorLeft::InitVar()::bAdded
 D CHudDamageIndicator::PanelAnimationVar_m_DmgColorRight::InitVar()::bAdded
 D CHudDamageIndicator::PanelAnimationVar_m_DmgFullscreenColor::InitVar()::bAdded
 D CHudDamageIndicator::PanelAnimationVar_m_DmgHighColorLeft::InitVar()::bAdded
 D CHudDamageIndicator::PanelAnimationVar_m_DmgHighColorRight::InitVar()::bAdded
 D CHudDamageIndicator::PanelAnimationVar_m_flDmgTall1::InitVar()::bAdded
 D CHudDamageIndicator::PanelAnimationVar_m_flDmgTall2::InitVar()::bAdded
 D CHudDamageIndicator::PanelAnimationVar_m_flDmgWide::InitVar()::bAdded
 D CHudDamageIndicator::PanelAnimationVar_m_flDmgX::InitVar()::bAdded
 D CHudDamageIndicator::PanelAnimationVar_m_flDmgY::InitVar()::bAdded
 D CHudDeathNotice::ChainToAnimationMap()::chained
 D CHudDeathNotice::ChainToMap()::chained
 D CHudDeathNotice::GetKBMap()::s_pMap
 D CHudDeathNotice::GetMessageMap()::s_pMap
 D CHudDeathNotice::KB_ChainToMap()::chained
 D CHudFilmDemo::ChainToAnimationMap()::chained
 D CHudFilmDemo::ChainToMap()::chained
 D CHudFilmDemo::GetKBMap()::s_pMap
 D CHudFilmDemo::GetMessageMap()::s_pMap
 D CHudFilmDemo::KB_ChainToMap()::chained
 D CHudFilmDemo::PanelAnimationVar_m_BorderColor::InitVar()::bAdded
 D CHudFilmDemo::PanelAnimationVar_m_TextColor::InitVar()::bAdded
 D CHudFilmDemo::PanelAnimationVar_m_iBorderBottom::InitVar()::bAdded
 D CHudFilmDemo::PanelAnimationVar_m_iBorderCenter::InitVar()::bAdded
 D CHudFilmDemo::PanelAnimationVar_m_iBorderLeft::InitVar()::bAdded
 D CHudFilmDemo::PanelAnimationVar_m_iBorderRight::InitVar()::bAdded
 D CHudFilmDemo::PanelAnimationVar_m_iBorderTop::InitVar()::bAdded
 D CHudFilmDemo::PanelAnimationVar_m_iLeftY::InitVar()::bAdded
 D CHudFilmDemo::PanelAnimationVar_m_iRightY::InitVar()::bAdded
 D CHudGeiger::ChainToAnimationMap()::chained
 D CHudGeiger::ChainToMap()::chained
 D CHudGeiger::GetKBMap()::s_pMap
 D CHudGeiger::GetMessageMap()::s_pMap
 D CHudGeiger::KB_ChainToMap()::chained
 D CHudHDRDemo::ChainToAnimationMap()::chained
 D CHudHDRDemo::ChainToMap()::chained
 D CHudHDRDemo::GetKBMap()::s_pMap
 D CHudHDRDemo::GetMessageMap()::s_pMap
 D CHudHDRDemo::KB_ChainToMap()::chained
 D CHudHDRDemo::PanelAnimationVar_m_BorderColor::InitVar()::bAdded
 D CHudHDRDemo::PanelAnimationVar_m_TextColor::InitVar()::bAdded
 D CHudHDRDemo::PanelAnimationVar_m_iBorderBottom::InitVar()::bAdded
 D CHudHDRDemo::PanelAnimationVar_m_iBorderCenter::InitVar()::bAdded
 D CHudHDRDemo::PanelAnimationVar_m_iBorderLeft::InitVar()::bAdded
 D CHudHDRDemo::PanelAnimationVar_m_iBorderRight::InitVar()::bAdded
 D CHudHDRDemo::PanelAnimationVar_m_iBorderTop::InitVar()::bAdded
 D CHudHDRDemo::PanelAnimationVar_m_iLeftY::InitVar()::bAdded
 D CHudHDRDemo::PanelAnimationVar_m_iRightY::InitVar()::bAdded
 D CHudHealth::ChainToAnimationMap()::chained
 D CHudHealth::ChainToMap()::chained
 D CHudHealth::GetKBMap()::s_pMap
 D CHudHealth::GetMessageMap()::s_pMap
 D CHudHealth::KB_ChainToMap()::chained
 D CHudHintDisplay::ChainToAnimationMap()::chained
 D CHudHintDisplay::ChainToMap()::chained
 D CHudHintDisplay::GetKBMap()::s_pMap
 D CHudHintDisplay::GetMessageMap()::s_pMap
 D CHudHintDisplay::KB_ChainToMap()::chained
 D CHudHintDisplay::PanelAnimationVar_m_flLabelSizePercentage::InitVar()::bAdded
 D CHudHintDisplay::PanelAnimationVar_m_iCenterX::InitVar()::bAdded
 D CHudHintDisplay::PanelAnimationVar_m_iCenterY::InitVar()::bAdded
 D CHudHintDisplay::PanelAnimationVar_m_iTextX::InitVar()::bAdded
 D CHudHintDisplay::PanelAnimationVar_m_iTextY::InitVar()::bAdded
 D CHudHintKeyDisplay::ChainToAnimationMap()::chained
 D CHudHintKeyDisplay::ChainToMap()::chained
 D CHudHintKeyDisplay::GetKBMap()::s_pMap
 D CHudHintKeyDisplay::GetMessageMap()::s_pMap
 D CHudHintKeyDisplay::KB_ChainToMap()::chained
 D CHudHintKeyDisplay::PanelAnimationVar_m_iTextGapX::InitVar()::bAdded
 D CHudHintKeyDisplay::PanelAnimationVar_m_iTextGapY::InitVar()::bAdded
 D CHudHintKeyDisplay::PanelAnimationVar_m_iTextX::InitVar()::bAdded
 D CHudHintKeyDisplay::PanelAnimationVar_m_iTextY::InitVar()::bAdded
 D CHudHintKeyDisplay::PanelAnimationVar_m_iYOffset::InitVar()::bAdded
 D CHudHistoryResource::ChainToAnimationMap()::chained
 D CHudHistoryResource::ChainToMap()::chained
 D CHudHistoryResource::GetKBMap()::s_pMap
 D CHudHistoryResource::GetMessageMap()::s_pMap
 D CHudHistoryResource::KB_ChainToMap()::chained
 D CHudHistoryResource::PanelAnimationVar_m_flHistoryGap::InitVar()::bAdded
 D CHudHistoryResource::PanelAnimationVar_m_flIconInset::InitVar()::bAdded
 D CHudHistoryResource::PanelAnimationVar_m_flTextInset::InitVar()::bAdded
 D CHudHistoryResource::PanelAnimationVar_m_hNumberFont::InitVar()::bAdded
 D CHudHistoryResource::PanelAnimationVar_m_hTextFont::InitVar()::bAdded
 D CHudMenu::ChainToAnimationMap()::chained
 D CHudMenu::ChainToMap()::chained
 D CHudMenu::GetKBMap()::s_pMap
 D CHudMenu::GetMessageMap()::s_pMap
 D CHudMenu::KB_ChainToMap()::chained
 D CHudMenu::PanelAnimationVar_m_BoxColor::InitVar()::bAdded
 D CHudMenu::PanelAnimationVar_m_ItemColor::InitVar()::bAdded
 D CHudMenu::PanelAnimationVar_m_MenuColor::InitVar()::bAdded
 D CHudMenu::PanelAnimationVar_m_flAlphaOverride::InitVar()::bAdded
 D CHudMenu::PanelAnimationVar_m_flBlur::InitVar()::bAdded
 D CHudMenu::PanelAnimationVar_m_flOpenCloseTime::InitVar()::bAdded
 D CHudMenu::PanelAnimationVar_m_flSelectionAlphaOverride::InitVar()::bAdded
 D CHudMenu::PanelAnimationVar_m_flTextScan::InitVar()::bAdded
 D CHudMenu::PanelAnimationVar_m_hItemFont::InitVar()::bAdded
 D CHudMenu::PanelAnimationVar_m_hItemFontPulsing::InitVar()::bAdded
 D CHudMenu::PanelAnimationVar_m_hTextFont::InitVar()::bAdded
 D CHudMessage::ChainToAnimationMap()::chained
 D CHudMessage::ChainToMap()::chained
 D CHudMessage::GetKBMap()::s_pMap
 D CHudMessage::GetMessageMap()::s_pMap
 D CHudMessage::KB_ChainToMap()::chained
 D CHudNumericDisplay::ChainToAnimationMap()::chained
 D CHudNumericDisplay::ChainToMap()::chained
 D CHudNumericDisplay::GetKBMap()::s_pMap
 D CHudNumericDisplay::GetMessageMap()::s_pMap
 D CHudNumericDisplay::KB_ChainToMap()::chained
 D CHudNumericDisplay::PanelAnimationVar_digit2_xpos::InitVar()::bAdded
 D CHudNumericDisplay::PanelAnimationVar_digit2_ypos::InitVar()::bAdded
 D CHudNumericDisplay::PanelAnimationVar_digit_xpos::InitVar()::bAdded
 D CHudNumericDisplay::PanelAnimationVar_digit_ypos::InitVar()::bAdded
 D CHudNumericDisplay::PanelAnimationVar_m_Ammo2Color::InitVar()::bAdded
 D CHudNumericDisplay::PanelAnimationVar_m_TextColor::InitVar()::bAdded
 D CHudNumericDisplay::PanelAnimationVar_m_flBlur::InitVar()::bAdded
 D CHudNumericDisplay::PanelAnimationVar_m_hNumberFont::InitVar()::bAdded
 D CHudNumericDisplay::PanelAnimationVar_m_hNumberGlowFont::InitVar()::bAdded
 D CHudNumericDisplay::PanelAnimationVar_m_hSmallNumberFont::InitVar()::bAdded
 D CHudNumericDisplay::PanelAnimationVar_m_hTextFont::InitVar()::bAdded
 D CHudNumericDisplay::PanelAnimationVar_text_xpos::InitVar()::bAdded
 D CHudNumericDisplay::PanelAnimationVar_text_ypos::InitVar()::bAdded
 D CHudPoisonDamageIndicator::ChainToAnimationMap()::chained
 D CHudPoisonDamageIndicator::ChainToMap()::chained
 D CHudPoisonDamageIndicator::GetKBMap()::s_pMap
 D CHudPoisonDamageIndicator::GetMessageMap()::s_pMap
 D CHudPoisonDamageIndicator::KB_ChainToMap()::chained
 D CHudPoisonDamageIndicator::PanelAnimationVar_m_TextColor::InitVar()::bAdded
 D CHudPoisonDamageIndicator::PanelAnimationVar_m_hTextFont::InitVar()::bAdded
 D CHudPoisonDamageIndicator::PanelAnimationVar_text_xpos::InitVar()::bAdded
 D CHudPoisonDamageIndicator::PanelAnimationVar_text_ygap::InitVar()::bAdded
 D CHudPoisonDamageIndicator::PanelAnimationVar_text_ypos::InitVar()::bAdded
 D CHudPosture::ChainToAnimationMap()::chained
 D CHudPosture::ChainToMap()::chained
 D CHudPosture::GetKBMap()::s_pMap
 D CHudPosture::GetMessageMap()::s_pMap
 D CHudPosture::KB_ChainToMap()::chained
 D CHudPosture::PanelAnimationVar_m_IconX::InitVar()::bAdded
 D CHudPosture::PanelAnimationVar_m_IconY::InitVar()::bAdded
 D CHudPosture::PanelAnimationVar_m_TextColor::InitVar()::bAdded
 D CHudPosture::PanelAnimationVar_m_hFont::InitVar()::bAdded
 D CHudSecondaryAmmo::ChainToAnimationMap()::chained
 D CHudSecondaryAmmo::ChainToMap()::chained
 D CHudSecondaryAmmo::GetKBMap()::s_pMap
 D CHudSecondaryAmmo::GetMessageMap()::s_pMap
 D CHudSecondaryAmmo::KB_ChainToMap()::chained
 D CHudSquadStatus::ChainToAnimationMap()::chained
 D CHudSquadStatus::ChainToMap()::chained
 D CHudSquadStatus::GetKBMap()::s_pMap
 D CHudSquadStatus::GetMessageMap()::s_pMap
 D CHudSquadStatus::KB_ChainToMap()::chained
 D CHudSquadStatus::PanelAnimationVar_m_LastMemberColor::InitVar()::bAdded
 D CHudSquadStatus::PanelAnimationVar_m_SquadIconColor::InitVar()::bAdded
 D CHudSquadStatus::PanelAnimationVar_m_SquadTextColor::InitVar()::bAdded
 D CHudSquadStatus::PanelAnimationVar_m_flIconGap::InitVar()::bAdded
 D CHudSquadStatus::PanelAnimationVar_m_flIconInsetX::InitVar()::bAdded
 D CHudSquadStatus::PanelAnimationVar_m_flIconInsetY::InitVar()::bAdded
 D CHudSquadStatus::PanelAnimationVar_m_hIconFont::InitVar()::bAdded
 D CHudSquadStatus::PanelAnimationVar_m_hTextFont::InitVar()::bAdded
 D CHudSquadStatus::PanelAnimationVar_text_xpos::InitVar()::bAdded
 D CHudSquadStatus::PanelAnimationVar_text_ypos::InitVar()::bAdded
 D CHudSuitPower::ChainToAnimationMap()::chained
 D CHudSuitPower::ChainToMap()::chained
 D CHudSuitPower::GetKBMap()::s_pMap
 D CHudSuitPower::GetMessageMap()::s_pMap
 D CHudSuitPower::KB_ChainToMap()::chained
 D CHudSuitPower::PanelAnimationVar_m_AuxPowerColor::InitVar()::bAdded
 D CHudSuitPower::PanelAnimationVar_m_flBarChunkGap::InitVar()::bAdded
 D CHudSuitPower::PanelAnimationVar_m_flBarChunkWidth::InitVar()::bAdded
 D CHudSuitPower::PanelAnimationVar_m_flBarHeight::InitVar()::bAdded
 D CHudSuitPower::PanelAnimationVar_m_flBarInsetX::InitVar()::bAdded
 D CHudSuitPower::PanelAnimationVar_m_flBarInsetY::InitVar()::bAdded
 D CHudSuitPower::PanelAnimationVar_m_flBarWidth::InitVar()::bAdded
 D CHudSuitPower::PanelAnimationVar_m_hTextFont::InitVar()::bAdded
 D CHudSuitPower::PanelAnimationVar_m_iAuxPowerDisabledAlpha::InitVar()::bAdded
 D CHudSuitPower::PanelAnimationVar_text2_gap::InitVar()::bAdded
 D CHudSuitPower::PanelAnimationVar_text2_xpos::InitVar()::bAdded
 D CHudSuitPower::PanelAnimationVar_text2_ypos::InitVar()::bAdded
 D CHudSuitPower::PanelAnimationVar_text_xpos::InitVar()::bAdded
 D CHudSuitPower::PanelAnimationVar_text_ypos::InitVar()::bAdded
 D CHudTrain::ChainToAnimationMap()::chained
 D CHudTrain::ChainToMap()::chained
 D CHudTrain::GetKBMap()::s_pMap
 D CHudTrain::GetMessageMap()::s_pMap
 D CHudTrain::KB_ChainToMap()::chained
 D CHudVehicle::ChainToAnimationMap()::chained
 D CHudVehicle::ChainToMap()::chained
 D CHudVehicle::GetKBMap()::s_pMap
 D CHudVehicle::GetMessageMap()::s_pMap
 D CHudVehicle::KB_ChainToMap()::chained
 D CHudViewport::ChainToAnimationMap()::chained
 D CHudViewport::ChainToMap()::chained
 D CHudViewport::GetKBMap()::s_pMap
 D CHudViewport::GetMessageMap()::s_pMap
 D CHudViewport::KB_ChainToMap()::chained
 D CHudWeapon::ChainToAnimationMap()::chained
 D CHudWeapon::ChainToMap()::chained
 D CHudWeapon::GetKBMap()::s_pMap
 D CHudWeapon::GetMessageMap()::s_pMap
 D CHudWeapon::KB_ChainToMap()::chained
 D CHudWeaponSelection::ChainToAnimationMap()::chained
 D CHudWeaponSelection::ChainToMap()::chained
 D CHudWeaponSelection::GetKBMap()::s_pMap
 D CHudWeaponSelection::GetMessageMap()::s_pMap
 D CHudWeaponSelection::KB_ChainToMap()::chained
 D CHudWeaponSelection::PanelAnimationVar_m_BoxColor::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_BrightBoxColor::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_EmptyBoxColor::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_NumberColor::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_SelectedBoxColor::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_SelectedFgColor::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_TextColor::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_flAlphaOverride::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_flBlur::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_flBoxGap::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_flHorizWeaponSelectOffsetPoint::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_flLargeBoxTall::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_flLargeBoxWide::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_flMediumBoxTall::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_flMediumBoxWide::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_flSelectionAlphaOverride::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_flSelectionNumberXPos::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_flSelectionNumberYPos::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_flSmallBoxSize::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_flTextScan::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_flTextYPos::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_flWeaponPickupGrowTime::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_hNumberFont::InitVar()::bAdded
 D CHudWeaponSelection::PanelAnimationVar_m_hTextFont::InitVar()::bAdded
 D CHudZoom::ChainToAnimationMap()::chained
 D CHudZoom::ChainToMap()::chained
 D CHudZoom::GetKBMap()::s_pMap
 D CHudZoom::GetMessageMap()::s_pMap
 D CHudZoom::KB_ChainToMap()::chained
 D CHudZoom::PanelAnimationVar_m_flCircle1Radius::InitVar()::bAdded
 D CHudZoom::PanelAnimationVar_m_flCircle2Radius::InitVar()::bAdded
 D CHudZoom::PanelAnimationVar_m_flDashGap::InitVar()::bAdded
 D CHudZoom::PanelAnimationVar_m_flDashHeight::InitVar()::bAdded
 D CIconPanel::ChainToAnimationMap()::chained
 D CIconPanel::ChainToMap()::chained
 D CIconPanel::GetKBMap()::s_pMap
 D CIconPanel::GetMessageMap()::s_pMap
 D CIconPanel::KB_ChainToMap()::chained
 D CIconPanel::PanelAnimationVar_m_IconColor::InitVar()::bAdded
 D CMDLPanel::ChainToAnimationMap()::chained
 D CMDLPanel::ChainToMap()::chained
 D CMDLPanel::GetKBMap()::s_pMap
 D CMDLPanel::GetMessageMap()::s_pMap
 D CMDLPanel::KB_ChainToMap()::chained
 D CModelPanel::ChainToAnimationMap()::chained
 D CModelPanel::ChainToMap()::chained
 D CModelPanel::GetKBMap()::s_pMap
 D CModelPanel::GetMessageMap()::s_pMap
 D CModelPanel::KB_ChainToMap()::chained
 D CModelPanel::PanelMessageFunc_OnAddAnimation::InitVar()::bAdded
 D CModelPanel::PanelMessageFunc_OnSetAnimation::InitVar()::bAdded
 D CMultiDamage::m_DataMap
 D CNavProgress::ChainToAnimationMap()::chained
 D CNavProgress::ChainToMap()::chained
 D CNavProgress::GetKBMap()::s_pMap
 D CNavProgress::GetMessageMap()::s_pMap
 D CNavProgress::KB_ChainToMap()::chained
 D CNewParticleEffect::RenderableToWorldTransform()::mat
 D CPDumpPanel::ChainToAnimationMap()::chained
 D CPDumpPanel::ChainToMap()::chained
 D CPDumpPanel::GetKBMap()::s_pMap
 D CPDumpPanel::GetMessageMap()::s_pMap
 D CPDumpPanel::KB_ChainToMap()::chained
 D CPDumpPanel::PanelAnimationVar_m_FontBig::InitVar()::bAdded
 D CPDumpPanel::PanelAnimationVar_m_FontMedium::InitVar()::bAdded
 D CPDumpPanel::PanelAnimationVar_m_FontSmall::InitVar()::bAdded
 D CParticleProperty::m_DataMap
 D CParticleProperty::m_PredMap
 D CPlayerLocalData::m_PredMap
 D CPlayerState::m_PredMap
 D CPotteryWheelPanel::ChainToAnimationMap()::chained
 D CPotteryWheelPanel::ChainToMap()::chained
 D CPotteryWheelPanel::GetKBMap()::s_pMap
 D CPotteryWheelPanel::GetMessageMap()::s_pMap
 D CPotteryWheelPanel::KB_ChainToMap()::chained
 D CPotteryWheelPanel::PanelAnimationVar_m_bUseParentBG::InitVar()::bAdded
 D CRagdoll::m_DataMap
 D CRandSimTimer::m_DataMap
 D CRandStopwatch::m_DataMap
 D CSchemeVisualizer::ChainToAnimationMap()::chained
 D CSchemeVisualizer::ChainToMap()::chained
 D CSchemeVisualizer::GetKBMap()::s_pMap
 D CSchemeVisualizer::GetMessageMap()::s_pMap
 D CSchemeVisualizer::KB_ChainToMap()::chained
 D CSimTimer::m_DataMap
 D CSimpleSimTimer::m_DataMap
 D CSmallTextEntry::ChainToAnimationMap()::chained
 D CSmallTextEntry::ChainToMap()::chained
 D CSmallTextEntry::GetKBMap()::s_pMap
 D CSmallTextEntry::GetMessageMap()::s_pMap
 D CSmallTextEntry::KB_ChainToMap()::chained
 D CSoundEnvelope::m_DataMap
 D CSoundPatch::m_DataMap
 D CSpectatorGUI::ChainToAnimationMap()::chained
 D CSpectatorGUI::ChainToMap()::chained
 D CSpectatorGUI::GetKBMap()::s_pMap
 D CSpectatorGUI::GetMessageMap()::s_pMap
 D CSpectatorGUI::KB_ChainToMap()::chained
 D CSpectatorMenu::ChainToAnimationMap()::chained
 D CSpectatorMenu::ChainToMap()::chained
 D CSpectatorMenu::GetKBMap()::s_pMap
 D CSpectatorMenu::GetMessageMap()::s_pMap
 D CSpectatorMenu::KB_ChainToMap()::chained
 D CSpectatorMenu::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D CStopwatch::m_DataMap
 D CStopwatchBase::m_DataMap
 D CTakeDamageInfo::m_DataMap
 D CTeamMenu::ChainToAnimationMap()::chained
 D CTeamMenu::ChainToMap()::chained
 D CTeamMenu::GetKBMap()::s_pMap
 D CTeamMenu::GetMessageMap()::s_pMap
 D CTeamMenu::KB_ChainToMap()::chained
 D CTextWindow::ChainToAnimationMap()::chained
 D CTextWindow::ChainToMap()::chained
 D CTextWindow::GetKBMap()::s_pMap
 D CTextWindow::GetMessageMap()::s_pMap
 D CTextWindow::KB_ChainToMap()::chained
 D CUtlLinkedList<CAchievementNotificationPanel::Notification_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CAchievementNotificationPanel::Notification_t, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CAsyncCaption*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CAsyncCaption*, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short>, unsigned int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short>, unsigned int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short>, unsigned int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short>, unsigned int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CBreakableHelper::BreakableList_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBreakableHelper::BreakableList_t, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CClientEntityList::CPVSNotifyInfo, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientEntityList::CPVSNotifyInfo, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CClientLeafSystem::RenderableInfo_t, unsigned short, false, unsigned int, CUtlMemory<UtlLinkedListElem_t<CClientLeafSystem::RenderableInfo_t, unsigned short>, unsigned int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CClientLeafSystem::ShadowInfo_t, unsigned short, false, unsigned int, CUtlMemory<UtlLinkedListElem_t<CClientLeafSystem::ShadowInfo_t, unsigned short>, unsigned int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CClientShadowMgr::ClientShadow_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientShadowMgr::ClientShadow_t, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CClientThinkList::ThinkEntry_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientThinkList::ThinkEntry_t, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CDataChangedEvent, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDataChangedEvent, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CEffectMaterial*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CEffectMaterial*, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CGlowOverlay*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CGlowOverlay*, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CHandle<C_BaseAnimating>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CHandle<C_BaseAnimating>, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CHandle<C_BaseEntity>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CHandle<C_BaseEntity>, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CParticleEffectBinding*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CParticleEffectBinding*, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CPrecipitationParticle, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CPrecipitationParticle, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CRopeManager::RopeQueuedRenderCache_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRopeManager::RopeQueuedRenderCache_t, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CTeslaInfo, int, false, int, CUtlMemory<UtlLinkedListElem_t<CTeslaInfo, int>, int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CTextureAllocator::TextureInfo_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CTextureAllocator::TextureInfo_t, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CUtlMultiList<CPixelVisSet, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CPixelVisSet, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CUtlMultiList<CPixelVisibilityQuery, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CPixelVisibilityQuery, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<CUtlMultiList<CTextureAllocator::FragmentInfo_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CTextureAllocator::FragmentInfo_t, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<C_BaseEntity*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<C_BaseEntity*, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<C_InfoTeleporterCountdown*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<C_InfoTeleporterCountdown*, int> > >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<C_LocalTempEntity*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<C_LocalTempEntity*, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<C_RopeKeyframe*, int, false, int, CUtlMemory<UtlLinkedListElem_t<C_RopeKeyframe*, int>, int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<C_RopeKeyframe*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<C_RopeKeyframe*, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<JiggleData, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<JiggleData, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<Panel_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<Panel_t, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<vgui::CItemButton*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::CItemButton*, int>, int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<vgui::FastSortListPanelItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::FastSortListPanelItem*, int>, int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<vgui::ListPanel::column_t, unsigned char, false, unsigned char, CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<vgui::ListViewItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::ListViewItem*, int>, int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<vgui::MenuItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::MenuItem*, int>, int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<vgui::PanelListPanel::dataitem_s, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::PanelListPanel::dataitem_s, int>, int> >::AllocInternal(bool)::__executeCount
 D CUtlLinkedList<vgui::TreeNode*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::TreeNode*, int>, int> >::AllocInternal(bool)::__executeCount
 D CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Alloc()::__executeCount
 D CUtlMultiList<CPixelVisSet, unsigned short>::Alloc()::__executeCount
 D CUtlMultiList<CPixelVisibilityQuery, unsigned short>::Alloc()::__executeCount
 D CUtlMultiList<CTextureAllocator::FragmentInfo_t, unsigned short>::Alloc()::__executeCount
 D CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CBoneSetupEnt, unsigned short, bool (*)(CBoneSetupEnt const&, CBoneSetupEnt const&), CUtlMemory<UtlRBTreeNode_t<CBoneSetupEnt, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CClientTools::HToolEntry_t, unsigned short, bool (*)(CClientTools::HToolEntry_t const&, CClientTools::HToolEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CClientTools::HToolEntry_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CHudCloseCaption::CaptionRepeat, int, bool (*)(CHudCloseCaption::CaptionRepeat const&, CHudCloseCaption::CaptionRepeat const&), CUtlMemory<UtlRBTreeNode_t<CHudCloseCaption::CaptionRepeat, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CKeyBindingsMgr::KBContext_t, int, bool (*)(CKeyBindingsMgr::KBContext_t const&, CKeyBindingsMgr::KBContext_t const&), CUtlMemory<UtlRBTreeNode_t<CKeyBindingsMgr::KBContext_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CPlayerLogoProxy::PlayerLogo, unsigned short, bool (*)(CPlayerLogoProxy::PlayerLogo const&, CPlayerLogoProxy::PlayerLogo const&), CUtlMemory<UtlRBTreeNode_t<CPlayerLogoProxy::PlayerLogo, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short, CUtlMap<AvatarImagePair_t, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short, CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<IClientUnknown*, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int, CUtlMap<char const*, CActivityRemapCache, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CHudTexture*, int>::Node_t, int, CUtlMap<char const*, CHudTexture*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CHudTexture*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int, CUtlMap<char const*, CLCD::IconInfo_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CParticleSubTexture*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CUtlString, int>::Node_t, int, CUtlMap<char const*, CUtlString, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CUtlString, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IPanelFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, KeyValues*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short, CUtlMap<int, CHudRenderGroup*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<CWorldListCache::Entry_t*, unsigned short, CWorldListCache::CEntryComparator, CUtlMemory<UtlRBTreeNode_t<CWorldListCache::Entry_t*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<FS_LocalToGlobal_t, unsigned short, bool (*)(FS_LocalToGlobal_t const&, FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<FS_LocalToGlobal_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<unsigned short, unsigned short, bool (*)(unsigned short const&, unsigned short const&), CUtlMemory<UtlRBTreeNode_t<unsigned short, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::Links(int) const::s_Sentinel
 D CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D CUtlString const& CDmxAttribute::GetValue<CUtlString>() const::defaultValue
 D CUtlString const& CDmxElement::GetValue<CUtlString>(char const*) const::defaultValue
 D CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> > const& CDmxAttribute::GetArray<CDmxElement*>() const::defaultArray
 D CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> > const& CDmxElement::GetArray<CDmxElement*>(char const*) const::defaultValue
 D CWaterExplosionParticle::UpdateVelocity(SimpleParticle*, float)::decay
 D CWaterExplosionParticle::UpdateVelocity(SimpleParticle*, float)::dtime
 D C_AI_BaseNPC::m_pClassRecvTable
 D C_BaseAnimating::m_PredMap
 D C_BaseAnimating::m_pClassRecvTable
 D C_BaseAnimatingOverlay::m_PredMap
 D C_BaseAnimatingOverlay::m_pClassRecvTable
 D C_BaseCombatCharacter::m_PredMap
 D C_BaseCombatCharacter::m_pClassRecvTable
 D C_BaseCombatWeapon::m_PredMap
 D C_BaseCombatWeapon::m_pClassRecvTable
 D C_BaseEntity::m_DataMap
 D C_BaseEntity::m_PredMap
 D C_BaseEntity::m_nPredictionRandomSeed
 D C_BaseEntity::m_pClassRecvTable
 D C_BaseEntity::s_bAbsQueriesValid
 D C_BaseEntity::s_bAbsRecomputationEnabled
 D C_BaseEntity::s_bInterpolate
 D C_BaseFlex::m_PredMap
 D C_BaseFlex::m_pClassRecvTable
 D C_BaseGrenade::m_PredMap
 D C_BaseHLBludgeonWeapon::m_pClassRecvTable
 D C_BaseHLCombatWeapon::m_PredMap
 D C_BaseHLCombatWeapon::m_pClassRecvTable
 D C_BaseHLPlayer::m_PredMap
 D C_BaseHelicopter::m_pClassRecvTable
 D C_BaseParticleEntity::m_PredMap
 D C_BaseParticleEntity::m_pClassRecvTable
 D C_BasePlayer::m_PredMap
 D C_BasePlayer::m_pClassRecvTable
 D C_BaseProjectile::m_pClassRecvTable
 D C_BaseTempEntity::m_pClassRecvTable
 D C_BaseViewModel::m_PredMap
 D C_Beam::m_PredMap
 D C_BreakableProp::m_pClassRecvTable
 D C_BreakableSurface::m_DataMap
 D C_ClientRagdoll::m_DataMap
 D C_ColorCorrectionVolume::m_PredMap
 D C_DynamicProp::m_pClassRecvTable
 D C_Flaregun::m_PredMap
 D C_FuncLadder::m_DataMap
 D C_GameRulesProxy::m_pClassRecvTable
 D C_HL2PlayerLocalData::m_PredMap
 D C_HLMachineGun::m_pClassRecvTable
 D C_HLSelectFireMachineGun::m_pClassRecvTable
 D C_NPC_AntlionGuard::m_DataMap
 D C_NPC_Manhack::m_DataMap
 D C_PhysBox::m_pClassRecvTable
 D C_PhysicsProp::m_pClassRecvTable
 D C_PlayerResource::m_PredMap
 D C_PointCommentaryNode::m_DataMap
 D C_PropAirboat::m_DataMap
 D C_PropCannon::m_DataMap
 D C_PropCrane::m_DataMap
 D C_PropVehicleChoreoGeneric::m_DataMap
 D C_PropVehicleDriveable::m_DataMap
 D C_PropVehicleDriveable::m_pClassRecvTable
 D C_PropVehiclePrisonerPod::m_DataMap
 D C_ServerRagdoll::m_pClassRecvTable
 D C_Sprite::m_PredMap
 D C_Sprite::m_pClassRecvTable
 D C_SpriteTrail::m_DataMap
 D C_SpriteTrail::m_PredMap
 D C_TEBaseBeam::m_pClassRecvTable
 D C_TEMetalSparks::m_pClassRecvTable
 D C_TEParticleSystem::m_pClassRecvTable
 D C_Team::m_PredMap
 D C_Weapon357::m_PredMap
 D C_WeaponAR2::m_PredMap
 D C_WeaponAlyxGun::m_PredMap
 D C_WeaponAnnabelle::m_PredMap
 D C_WeaponBinoculars::m_PredMap
 D C_WeaponBugBait::m_PredMap
 D C_WeaponCitizenPackage::m_PredMap
 D C_WeaponCitizenPackage::m_pClassRecvTable
 D C_WeaponCitizenSuitcase::m_PredMap
 D C_WeaponCrossbow::m_PredMap
 D C_WeaponCrowbar::m_PredMap
 D C_WeaponCubemap::m_PredMap
 D C_WeaponCycler::m_PredMap
 D C_WeaponFrag::m_PredMap
 D C_WeaponGaussGun::m_PredMap
 D C_WeaponPhysCannon::m_PredMap
 D C_WeaponPistol::m_PredMap
 D C_WeaponRPG::m_PredMap
 D C_WeaponSMG1::m_PredMap
 D C_WeaponShotgun::m_PredMap
 D C_WeaponStunStick::m_PredMap
 D C_Weapon_SLAM::m_PredMap
 D CaptionLookup_t::m_DataMap
 D CommandMenu::ChainToAnimationMap()::chained
 D CommandMenu::ChainToMap()::chained
 D CommandMenu::GetKBMap()::s_pMap
 D CommandMenu::GetMessageMap()::s_pMap
 D CommandMenu::KB_ChainToMap()::chained
 D CompiledCaptionHeader_t::m_DataMap
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<CParticleSystemDefinition>(CParticleSystemDefinition*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_AgeNoise>(C_INIT_AgeNoise*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateAlongPath>(C_INIT_CreateAlongPath*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateFromParentParticles>(C_INIT_CreateFromParentParticles*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateFromPlaneCache>(C_INIT_CreateFromPlaneCache*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateInHierarchy>(C_INIT_CreateInHierarchy*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateOnModel>(C_INIT_CreateOnModel*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateSequentialPath>(C_INIT_CreateSequentialPath*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateWithinBox>(C_INIT_CreateWithinBox*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateWithinSphere>(C_INIT_CreateWithinSphere*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreationNoise>(C_INIT_CreationNoise*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_DistanceToCPInit>(C_INIT_DistanceToCPInit*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_InheritVelocity>(C_INIT_InheritVelocity*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_InitialRepulsionVelocity>(C_INIT_InitialRepulsionVelocity*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_InitialVelocityNoise>(C_INIT_InitialVelocityNoise*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_LifespanFromVelocity>(C_INIT_LifespanFromVelocity*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_MoveBetweenPoints>(C_INIT_MoveBetweenPoints*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_PositionOffset>(C_INIT_PositionOffset*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_PositionWarp>(C_INIT_PositionWarp*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomAlpha>(C_INIT_RandomAlpha*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomColor>(C_INIT_RandomColor*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomLifeTime>(C_INIT_RandomLifeTime*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomRadius>(C_INIT_RandomRadius*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomRotation>(C_INIT_RandomRotation*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomRotationSpeed>(C_INIT_RandomRotationSpeed*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomSecondSequence>(C_INIT_RandomSecondSequence*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomSequence>(C_INIT_RandomSequence*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomTrailLength>(C_INIT_RandomTrailLength*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomYaw>(C_INIT_RandomYaw*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomYawFlip>(C_INIT_RandomYawFlip*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RemapCPtoScalar>(C_INIT_RemapCPtoScalar*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RemapCPtoVector>(C_INIT_RemapCPtoVector*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RemapScalar>(C_INIT_RemapScalar*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RemapScalarToVector>(C_INIT_RemapScalarToVector*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_SequenceLifeTime>(C_INIT_SequenceLifeTime*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_VelocityRandom>(C_INIT_VelocityRandom*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_AttractToControlPoint>(C_OP_AttractToControlPoint*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_BasicMovement>(C_OP_BasicMovement*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_ColorInterpolate>(C_OP_ColorInterpolate*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_ConstrainDistance>(C_OP_ConstrainDistance*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_ConstrainDistanceToPath>(C_OP_ConstrainDistanceToPath*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_ContinuousEmitter>(C_OP_ContinuousEmitter*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_ControlpointLight>(C_OP_ControlpointLight*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_Cull>(C_OP_Cull*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_DampenToCP>(C_OP_DampenToCP*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_Decay>(C_OP_Decay*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_DistanceBetweenCPs>(C_OP_DistanceBetweenCPs*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_DistanceToCP>(C_OP_DistanceToCP*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_FadeAndKill>(C_OP_FadeAndKill*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_FadeIn>(C_OP_FadeIn*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_FadeOut>(C_OP_FadeOut*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_InstantaneousEmitter>(C_OP_InstantaneousEmitter*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_InterpolateRadius>(C_OP_InterpolateRadius*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_LockToBone>(C_OP_LockToBone*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_MaintainSequentialPath>(C_OP_MaintainSequentialPath*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_MaxVelocity>(C_OP_MaxVelocity*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_ModelCull>(C_OP_ModelCull*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_MovementRotateParticleAroundAxis>(C_OP_MovementRotateParticleAroundAxis*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_Noise>(C_OP_Noise*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_NoiseEmitter>(C_OP_NoiseEmitter*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_Orient2DRelToCP>(C_OP_Orient2DRelToCP*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_OrientTo2dDirection>(C_OP_OrientTo2dDirection*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_OscillateScalar>(C_OP_OscillateScalar*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_OscillateVector>(C_OP_OscillateVector*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_PerParticleEmitter>(C_OP_PerParticleEmitter*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_PlanarConstraint>(C_OP_PlanarConstraint*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_PlaneCull>(C_OP_PlaneCull*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_PositionLock>(C_OP_PositionLock*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RandomForce>(C_OP_RandomForce*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RemapCPtoScalar>(C_OP_RemapCPtoScalar*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RemapDotProductToScalar>(C_OP_RemapDotProductToScalar*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RemapScalar>(C_OP_RemapScalar*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RemapSpeedtoCP>(C_OP_RemapSpeedtoCP*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RenderPoints>(C_OP_RenderPoints*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RenderRope>(C_OP_RenderRope*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RenderScreenVelocityRotate>(C_OP_RenderScreenVelocityRotate*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RenderSprites>(C_OP_RenderSprites*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RenderSpritesTrail>(C_OP_RenderSpritesTrail*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_SetChildControlPoints>(C_OP_SetChildControlPoints*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_SetControlPointPositions>(C_OP_SetControlPointPositions*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_SetControlPointToCenter>(C_OP_SetControlPointToCenter*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_SetControlPointToPlayer>(C_OP_SetControlPointToPlayer*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_Spin>(C_OP_Spin*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_SpinUpdate>(C_OP_SpinUpdate*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_SpinYaw>(C_OP_SpinYaw*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_TwistAroundAxis>(C_OP_TwistAroundAxis*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_VectorNoise>(C_OP_VectorNoise*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_VelocityDecay>(C_OP_VelocityDecay*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_VelocityMatchingForce>(C_OP_VelocityMatchingForce*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_WorldCollideConstraint>(C_OP_WorldCollideConstraint*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_WorldTraceConstraint>(C_OP_WorldTraceConstraint*)::unpack
 D DmxElementUnpackStructure_t* DmxElementUnpackInit<ParticleChildrenInfo_t>(ParticleChildrenInfo_t*)::unpack
 D GetBitForBitnum(int)::bitsForBitnum
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> > >(CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >*)::ops
 D ISaveRestoreOps* CUtlVectorDataopsInstantiator<5>::GetDataOps<CUtlVector<int, CUtlMemory<int, int> > >(CUtlVector<int, CUtlMemory<int, int> >*)::ops
 D KeyValues::s_pfGetStringForSymbol
 D KeyValues::s_pfGetSymbolForString
 D MIN_SCREENSPACE_RAIN_WIDTH
 D PhysBlockHeader_t::m_DataMap
 D PhysObjectHeader_t::m_DataMap
 D PrecacheEffectBloodSpray::ClientEffectRegister::m_pszMaterials
 D PrecacheEffectBuild::ClientEffectRegister::m_pszMaterials
 D PrecacheEffectCombineBall::ClientEffectRegister::m_pszMaterials
 D PrecacheEffectCrossbow::ClientEffectRegister::m_pszMaterials
 D PrecacheEffectDusttrail::ClientEffectRegister::m_pszMaterials
 D PrecacheEffectExplosion::ClientEffectRegister::m_pszMaterials
 D PrecacheEffectFlares::ClientEffectRegister::m_pszMaterials
 D PrecacheEffectGlassShatter::ClientEffectRegister::m_pszMaterials
 D PrecacheEffectGlow::ClientEffectRegister::m_pszMaterials
 D PrecacheEffectImpacts::ClientEffectRegister::m_pszMaterials
 D PrecacheEffectMuzzleFlash::ClientEffectRegister::m_pszMaterials
 D PrecacheEffectPlasmaBeam::ClientEffectRegister::m_pszMaterials
 D PrecacheEffectSparks::ClientEffectRegister::m_pszMaterials
 D PrecacheEffectSplash::ClientEffectRegister::m_pszMaterials
 D PrecacheEffectStunstick::ClientEffectRegister::m_pszMaterials
 D PrecacheEffectVGuiScreen::ClientEffectRegister::m_pszMaterials
 D PrecacheEffectWarp::ClientEffectRegister::m_pszMaterials
 D PrecacheEffectsTest::ClientEffectRegister::m_pszMaterials
 D PrecacheGunshipFX::ClientEffectRegister::m_pszMaterials
 D PrecacheMuzzleFlash::ClientEffectRegister::m_pszMaterials
 D PrecacheOcclusionProxy::ClientEffectRegister::m_pszMaterials
 D PrecachePlayerDecal::ClientEffectRegister::m_pszMaterials
 D PrecachePostProcessingEffects::ClientEffectRegister::m_pszMaterials
 D PrecachePrecipitation::ClientEffectRegister::m_pszMaterials
 D PrecacheSmokeFogOverlay::ClientEffectRegister::m_pszMaterials
 D PrecacheTracers::ClientEffectRegister::m_pszMaterials
 D PrecacheViewRender::ClientEffectRegister::m_pszMaterials
 D SURFACEPROP_MANIFEST_FILE
 D SaveRestoreBlockHeader_t::m_DataMap
 D SmokeStackMaterials::ClientEffectRegister::m_pszMaterials
 D SoundCommand_t::m_DataMap
 D SteamAppList()::s_CallbackCounterAndContext
 D SteamApps()::s_CallbackCounterAndContext
 D SteamClient()::s_CallbackCounterAndContext
 D SteamController()::s_CallbackCounterAndContext
 D SteamFriends()::s_CallbackCounterAndContext
 D SteamGameSearch()::s_CallbackCounterAndContext
 D SteamHTMLSurface()::s_CallbackCounterAndContext
 D SteamHTTP()::s_CallbackCounterAndContext
 D SteamInput()::s_CallbackCounterAndContext
 D SteamInventory()::s_CallbackCounterAndContext
 D SteamMatchmaking()::s_CallbackCounterAndContext
 D SteamMatchmakingServers()::s_CallbackCounterAndContext
 D SteamMusic()::s_CallbackCounterAndContext
 D SteamMusicRemote()::s_CallbackCounterAndContext
 D SteamNetworking()::s_CallbackCounterAndContext
 D SteamParentalSettings()::s_CallbackCounterAndContext
 D SteamRemoteStorage()::s_CallbackCounterAndContext
 D SteamScreenshots()::s_CallbackCounterAndContext
 D SteamUGC()::s_CallbackCounterAndContext
 D SteamUser()::s_CallbackCounterAndContext
 D SteamUserStats()::s_CallbackCounterAndContext
 D SteamUtils()::s_CallbackCounterAndContext
 D SteamVideo()::s_CallbackCounterAndContext
 D TrailPoint_t::m_DataMap
 D VTFFileBaseHeader_t::m_DataMap
 D VTFFileHeaderV7_1_t::m_DataMap
 D VTFFileHeaderV7_2_t::m_DataMap
 D VTFFileHeaderV7_3_t::m_DataMap
 D VTFFileHeaderX360_t::m_DataMap
 D VTFFileHeader_t::m_DataMap
 D VTT for CAchievementNotificationPanel
 D VTT for CAvatarImagePanel
 D VTT for CBaseHudChat
 D VTT for CBaseHudChatEntry
 D VTT for CBaseHudChatInputLine
 D VTT for CBaseHudChatLine
 D VTT for CBaseModelPanel
 D VTT for CBaseViewport
 D VTT for CBaseViewport::CBackGroundPanel
 D VTT for CBitmapButton
 D VTT for CBitmapPanel
 D VTT for CBorderVisualizerPanel
 D VTT for CBuildModeNavCombo
 D VTT for CCenterStringLabel
 D VTT for CClientScoreBoardDialog
 D VTT for CColorVisualizerPanel
 D VTT for CCommentaryModelPanel
 D VTT for CCommentaryModelViewer
 D VTT for CDebugOverlay
 D VTT for CDragDropHelperPanel
 D VTT for CFPSPanel
 D VTT for CHUDAutoAim
 D VTT for CHUDQuickInfo
 D VTT for CHudAmmo
 D VTT for CHudAnimationInfo
 D VTT for CHudBattery
 D VTT for CHudChat
 D VTT for CHudChatFilterButton
 D VTT for CHudChatFilterCheckButton
 D VTT for CHudChatFilterPanel
 D VTT for CHudChatHistory
 D VTT for CHudCloseCaption
 D VTT for CHudCommentary
 D VTT for CHudCredits
 D VTT for CHudCrosshair
 D VTT for CHudDamageIndicator
 D VTT for CHudDeathNotice
 D VTT for CHudFilmDemo
 D VTT for CHudGeiger
 D VTT for CHudHDRDemo
 D VTT for CHudHealth
 D VTT for CHudHintDisplay
 D VTT for CHudHintKeyDisplay
 D VTT for CHudHistoryResource
 D VTT for CHudMenu
 D VTT for CHudMessage
 D VTT for CHudNumericDisplay
 D VTT for CHudPoisonDamageIndicator
 D VTT for CHudPosture
 D VTT for CHudSecondaryAmmo
 D VTT for CHudSquadStatus
 D VTT for CHudSuitPower
 D VTT for CHudTrain
 D VTT for CHudVehicle
 D VTT for CHudViewport
 D VTT for CHudWeapon
 D VTT for CHudWeaponSelection
 D VTT for CHudZoom
 D VTT for CIconPanel
 D VTT for CLoadingDiscPanel
 D VTT for CMDLPanel
 D VTT for CMessageCharsPanel
 D VTT for CModelPanel
 D VTT for CNavProgress
 D VTT for CNetGraphPanel
 D VTT for CPDumpPanel
 D VTT for CPotteryWheelPanel
 D VTT for CSchemeVisualizer
 D VTT for CSlideshowDisplayScreen
 D VTT for CSmallTextEntry
 D VTT for CSpecButton
 D VTT for CSpectatorGUI
 D VTT for CSpectatorMenu
 D VTT for CTeamMenu
 D VTT for CTeleportCountdownScreen
 D VTT for CTextWindow
 D VTT for CVGuiScreenPanel
 D VTT for ColumnButton
 D VTT for CommandMenu
 D VTT for Dragger
 D VTT for VideoPanel
 D VTT for vgui::AnimatingImagePanel
 D VTT for vgui::AnimationController
 D VTT for vgui::BuildModeDialog
 D VTT for vgui::Button
 D VTT for vgui::CBitmapImagePanel
 D VTT for vgui::CItemButton
 D VTT for vgui::CTreeViewListControl
 D VTT for vgui::CheckButton
 D VTT for vgui::CircularProgressBar
 D VTT for vgui::ClickPanel
 D VTT for vgui::ComboBox
 D VTT for vgui::ComboBoxButton
 D VTT for vgui::ContinuousProgressBar
 D VTT for vgui::CvarToggleCheckButton<ConVarRef>
 D VTT for vgui::Divider
 D VTT for vgui::EditablePanel
 D VTT for vgui::ExpandButton
 D VTT for vgui::Frame
 D VTT for vgui::FrameButton
 D VTT for vgui::FrameSystemButton
 D VTT for vgui::GraphPanel
 D VTT for vgui::ImagePanel
 D VTT for vgui::Label
 D VTT for vgui::ListPanel
 D VTT for vgui::ListViewItem
 D VTT for vgui::ListViewPanel
 D VTT for vgui::Menu
 D VTT for vgui::MenuBar
 D VTT for vgui::MenuButton
 D VTT for vgui::MenuItem
 D VTT for vgui::MenuSeparator
 D VTT for vgui::MessageBox
 D VTT for vgui::Panel
 D VTT for vgui::PanelListPanel
 D VTT for vgui::ProgressBar
 D VTT for vgui::RadioButton
 D VTT for vgui::RichText
 D VTT for vgui::RichTextInterior
 D VTT for vgui::ScalableImagePanel
 D VTT for vgui::ScrollBar
 D VTT for vgui::ScrollBarSlider
 D VTT for vgui::SectionedListPanel
 D VTT for vgui::SectionedListPanelHeader
 D VTT for vgui::Slider
 D VTT for vgui::TextEntry
 D VTT for vgui::ToggleButton
 D VTT for vgui::TreeNode
 D VTT for vgui::TreeNodeImage
 D VTT for vgui::TreeNodeText
 D VTT for vgui::TreeView
 D VTT for vgui::TreeViewSubPanel
 D VTT for vgui::URLLabel
 D VideoPanel::ChainToAnimationMap()::chained
 D VideoPanel::ChainToMap()::chained
 D VideoPanel::GetKBMap()::s_pMap
 D VideoPanel::GetMessageMap()::s_pMap
 D VideoPanel::KB_ChainToMap()::chained
 D ViewSmoothingData_t::m_DataMap
 D beams
 D bloodCallbacks
 D bool const& CDmxAttribute::GetValue<bool>() const::defaultValue
 D bool const& CDmxElement::GetValue<bool>(char const*) const::defaultValue
 D cl_entitylist
 D cl_interp
 D cl_interp_ratio
 D cl_predict
 D clienteffects
 D clienttools
 D construction vtable for CBaseHudChat-in-CHudChat
 D construction vtable for CBaseViewport-in-CHudViewport
 D construction vtable for CHudNumericDisplay-in-CHudAmmo
 D construction vtable for CHudNumericDisplay-in-CHudBattery
 D construction vtable for CHudNumericDisplay-in-CHudHealth
 D construction vtable for CHudNumericDisplay-in-CHudSecondaryAmmo
 D construction vtable for CMDLPanel-in-CBaseModelPanel
 D construction vtable for CModelPanel-in-CCommentaryModelPanel
 D construction vtable for CPotteryWheelPanel-in-CBaseModelPanel
 D construction vtable for CPotteryWheelPanel-in-CMDLPanel
 D construction vtable for CVGuiScreenPanel-in-CSlideshowDisplayScreen
 D construction vtable for CVGuiScreenPanel-in-CTeleportCountdownScreen
 D construction vtable for vgui::Button-in-CBitmapButton
 D construction vtable for vgui::Button-in-CHudChatFilterButton
 D construction vtable for vgui::Button-in-CHudChatFilterCheckButton
 D construction vtable for vgui::Button-in-CSpecButton
 D construction vtable for vgui::Button-in-ColumnButton
 D construction vtable for vgui::Button-in-vgui::CheckButton
 D construction vtable for vgui::Button-in-vgui::ComboBoxButton
 D construction vtable for vgui::Button-in-vgui::CvarToggleCheckButton<ConVarRef>
 D construction vtable for vgui::Button-in-vgui::ExpandButton
 D construction vtable for vgui::Button-in-vgui::FrameButton
 D construction vtable for vgui::Button-in-vgui::FrameSystemButton
 D construction vtable for vgui::Button-in-vgui::MenuButton
 D construction vtable for vgui::Button-in-vgui::MenuItem
 D construction vtable for vgui::Button-in-vgui::RadioButton
 D construction vtable for vgui::Button-in-vgui::ToggleButton
 D construction vtable for vgui::CheckButton-in-CHudChatFilterCheckButton
 D construction vtable for vgui::CheckButton-in-vgui::CvarToggleCheckButton<ConVarRef>
 D construction vtable for vgui::ComboBox-in-CBuildModeNavCombo
 D construction vtable for vgui::EditablePanel-in-CAchievementNotificationPanel
 D construction vtable for vgui::EditablePanel-in-CBaseHudChat
 D construction vtable for vgui::EditablePanel-in-CBaseModelPanel
 D construction vtable for vgui::EditablePanel-in-CBaseViewport
 D construction vtable for vgui::EditablePanel-in-CBaseViewport::CBackGroundPanel
 D construction vtable for vgui::EditablePanel-in-CClientScoreBoardDialog
 D construction vtable for vgui::EditablePanel-in-CCommentaryModelPanel
 D construction vtable for vgui::EditablePanel-in-CCommentaryModelViewer
 D construction vtable for vgui::EditablePanel-in-CHudChat
 D construction vtable for vgui::EditablePanel-in-CHudChatFilterPanel
 D construction vtable for vgui::EditablePanel-in-CHudViewport
 D construction vtable for vgui::EditablePanel-in-CLoadingDiscPanel
 D construction vtable for vgui::EditablePanel-in-CMDLPanel
 D construction vtable for vgui::EditablePanel-in-CModelPanel
 D construction vtable for vgui::EditablePanel-in-CNavProgress
 D construction vtable for vgui::EditablePanel-in-CPotteryWheelPanel
 D construction vtable for vgui::EditablePanel-in-CSchemeVisualizer
 D construction vtable for vgui::EditablePanel-in-CSlideshowDisplayScreen
 D construction vtable for vgui::EditablePanel-in-CSpectatorGUI
 D construction vtable for vgui::EditablePanel-in-CSpectatorMenu
 D construction vtable for vgui::EditablePanel-in-CTeamMenu
 D construction vtable for vgui::EditablePanel-in-CTeleportCountdownScreen
 D construction vtable for vgui::EditablePanel-in-CTextWindow
 D construction vtable for vgui::EditablePanel-in-CVGuiScreenPanel
 D construction vtable for vgui::EditablePanel-in-VideoPanel
 D construction vtable for vgui::EditablePanel-in-vgui::BuildModeDialog
 D construction vtable for vgui::EditablePanel-in-vgui::Frame
 D construction vtable for vgui::EditablePanel-in-vgui::MessageBox
 D construction vtable for vgui::EditablePanel-in-vgui::PanelListPanel
 D construction vtable for vgui::Frame-in-CBaseViewport::CBackGroundPanel
 D construction vtable for vgui::Frame-in-CCommentaryModelViewer
 D construction vtable for vgui::Frame-in-CNavProgress
 D construction vtable for vgui::Frame-in-CSchemeVisualizer
 D construction vtable for vgui::Frame-in-CSpectatorMenu
 D construction vtable for vgui::Frame-in-CTeamMenu
 D construction vtable for vgui::Frame-in-CTextWindow
 D construction vtable for vgui::Frame-in-vgui::BuildModeDialog
 D construction vtable for vgui::Frame-in-vgui::MessageBox
 D construction vtable for vgui::ImagePanel-in-vgui::TreeNodeImage
 D construction vtable for vgui::Label-in-CBitmapButton
 D construction vtable for vgui::Label-in-CCenterStringLabel
 D construction vtable for vgui::Label-in-CHudChatFilterButton
 D construction vtable for vgui::Label-in-CHudChatFilterCheckButton
 D construction vtable for vgui::Label-in-CSpecButton
 D construction vtable for vgui::Label-in-ColumnButton
 D construction vtable for vgui::Label-in-vgui::Button
 D construction vtable for vgui::Label-in-vgui::CItemButton
 D construction vtable for vgui::Label-in-vgui::CheckButton
 D construction vtable for vgui::Label-in-vgui::ComboBoxButton
 D construction vtable for vgui::Label-in-vgui::CvarToggleCheckButton<ConVarRef>
 D construction vtable for vgui::Label-in-vgui::ExpandButton
 D construction vtable for vgui::Label-in-vgui::FrameButton
 D construction vtable for vgui::Label-in-vgui::FrameSystemButton
 D construction vtable for vgui::Label-in-vgui::ListViewItem
 D construction vtable for vgui::Label-in-vgui::MenuButton
 D construction vtable for vgui::Label-in-vgui::MenuItem
 D construction vtable for vgui::Label-in-vgui::RadioButton
 D construction vtable for vgui::Label-in-vgui::SectionedListPanelHeader
 D construction vtable for vgui::Label-in-vgui::ToggleButton
 D construction vtable for vgui::Label-in-vgui::URLLabel
 D construction vtable for vgui::Menu-in-CommandMenu
 D construction vtable for vgui::MenuButton-in-vgui::FrameSystemButton
 D construction vtable for vgui::Panel-in-CAchievementNotificationPanel
 D construction vtable for vgui::Panel-in-CAvatarImagePanel
 D construction vtable for vgui::Panel-in-CBaseHudChat
 D construction vtable for vgui::Panel-in-CBaseHudChatEntry
 D construction vtable for vgui::Panel-in-CBaseHudChatInputLine
 D construction vtable for vgui::Panel-in-CBaseHudChatLine
 D construction vtable for vgui::Panel-in-CBaseModelPanel
 D construction vtable for vgui::Panel-in-CBaseViewport
 D construction vtable for vgui::Panel-in-CBaseViewport::CBackGroundPanel
 D construction vtable for vgui::Panel-in-CBitmapButton
 D construction vtable for vgui::Panel-in-CBitmapPanel
 D construction vtable for vgui::Panel-in-CBorderVisualizerPanel
 D construction vtable for vgui::Panel-in-CBuildModeNavCombo
 D construction vtable for vgui::Panel-in-CCenterStringLabel
 D construction vtable for vgui::Panel-in-CClientScoreBoardDialog
 D construction vtable for vgui::Panel-in-CColorVisualizerPanel
 D construction vtable for vgui::Panel-in-CCommentaryModelPanel
 D construction vtable for vgui::Panel-in-CCommentaryModelViewer
 D construction vtable for vgui::Panel-in-CDebugOverlay
 D construction vtable for vgui::Panel-in-CDragDropHelperPanel
 D construction vtable for vgui::Panel-in-CFPSPanel
 D construction vtable for vgui::Panel-in-CHUDAutoAim
 D construction vtable for vgui::Panel-in-CHUDQuickInfo
 D construction vtable for vgui::Panel-in-CHudAmmo
 D construction vtable for vgui::Panel-in-CHudAnimationInfo
 D construction vtable for vgui::Panel-in-CHudBattery
 D construction vtable for vgui::Panel-in-CHudChat
 D construction vtable for vgui::Panel-in-CHudChatFilterButton
 D construction vtable for vgui::Panel-in-CHudChatFilterCheckButton
 D construction vtable for vgui::Panel-in-CHudChatFilterPanel
 D construction vtable for vgui::Panel-in-CHudChatHistory
 D construction vtable for vgui::Panel-in-CHudCloseCaption
 D construction vtable for vgui::Panel-in-CHudCommentary
 D construction vtable for vgui::Panel-in-CHudCredits
 D construction vtable for vgui::Panel-in-CHudCrosshair
 D construction vtable for vgui::Panel-in-CHudDamageIndicator
 D construction vtable for vgui::Panel-in-CHudDeathNotice
 D construction vtable for vgui::Panel-in-CHudFilmDemo
 D construction vtable for vgui::Panel-in-CHudGeiger
 D construction vtable for vgui::Panel-in-CHudHDRDemo
 D construction vtable for vgui::Panel-in-CHudHealth
 D construction vtable for vgui::Panel-in-CHudHintDisplay
 D construction vtable for vgui::Panel-in-CHudHintKeyDisplay
 D construction vtable for vgui::Panel-in-CHudHistoryResource
 D construction vtable for vgui::Panel-in-CHudMenu
 D construction vtable for vgui::Panel-in-CHudMessage
 D construction vtable for vgui::Panel-in-CHudNumericDisplay
 D construction vtable for vgui::Panel-in-CHudPoisonDamageIndicator
 D construction vtable for vgui::Panel-in-CHudPosture
 D construction vtable for vgui::Panel-in-CHudSecondaryAmmo
 D construction vtable for vgui::Panel-in-CHudSquadStatus
 D construction vtable for vgui::Panel-in-CHudSuitPower
 D construction vtable for vgui::Panel-in-CHudTrain
 D construction vtable for vgui::Panel-in-CHudVehicle
 D construction vtable for vgui::Panel-in-CHudViewport
 D construction vtable for vgui::Panel-in-CHudWeapon
 D construction vtable for vgui::Panel-in-CHudWeaponSelection
 D construction vtable for vgui::Panel-in-CHudZoom
 D construction vtable for vgui::Panel-in-CIconPanel
 D construction vtable for vgui::Panel-in-CLoadingDiscPanel
 D construction vtable for vgui::Panel-in-CMDLPanel
 D construction vtable for vgui::Panel-in-CMessageCharsPanel
 D construction vtable for vgui::Panel-in-CModelPanel
 D construction vtable for vgui::Panel-in-CNavProgress
 D construction vtable for vgui::Panel-in-CNetGraphPanel
 D construction vtable for vgui::Panel-in-CPDumpPanel
 D construction vtable for vgui::Panel-in-CPotteryWheelPanel
 D construction vtable for vgui::Panel-in-CSchemeVisualizer
 D construction vtable for vgui::Panel-in-CSlideshowDisplayScreen
 D construction vtable for vgui::Panel-in-CSmallTextEntry
 D construction vtable for vgui::Panel-in-CSpecButton
 D construction vtable for vgui::Panel-in-CSpectatorGUI
 D construction vtable for vgui::Panel-in-CSpectatorMenu
 D construction vtable for vgui::Panel-in-CTeamMenu
 D construction vtable for vgui::Panel-in-CTeleportCountdownScreen
 D construction vtable for vgui::Panel-in-CTextWindow
 D construction vtable for vgui::Panel-in-CVGuiScreenPanel
 D construction vtable for vgui::Panel-in-ColumnButton
 D construction vtable for vgui::Panel-in-CommandMenu
 D construction vtable for vgui::Panel-in-Dragger
 D construction vtable for vgui::Panel-in-VideoPanel
 D construction vtable for vgui::Panel-in-vgui::AnimatingImagePanel
 D construction vtable for vgui::Panel-in-vgui::AnimationController
 D construction vtable for vgui::Panel-in-vgui::BuildModeDialog
 D construction vtable for vgui::Panel-in-vgui::Button
 D construction vtable for vgui::Panel-in-vgui::CBitmapImagePanel
 D construction vtable for vgui::Panel-in-vgui::CItemButton
 D construction vtable for vgui::Panel-in-vgui::CTreeViewListControl
 D construction vtable for vgui::Panel-in-vgui::CheckButton
 D construction vtable for vgui::Panel-in-vgui::CircularProgressBar
 D construction vtable for vgui::Panel-in-vgui::ClickPanel
 D construction vtable for vgui::Panel-in-vgui::ComboBox
 D construction vtable for vgui::Panel-in-vgui::ComboBoxButton
 D construction vtable for vgui::Panel-in-vgui::ContinuousProgressBar
 D construction vtable for vgui::Panel-in-vgui::CvarToggleCheckButton<ConVarRef>
 D construction vtable for vgui::Panel-in-vgui::Divider
 D construction vtable for vgui::Panel-in-vgui::EditablePanel
 D construction vtable for vgui::Panel-in-vgui::ExpandButton
 D construction vtable for vgui::Panel-in-vgui::Frame
 D construction vtable for vgui::Panel-in-vgui::FrameButton
 D construction vtable for vgui::Panel-in-vgui::FrameSystemButton
 D construction vtable for vgui::Panel-in-vgui::GraphPanel
 D construction vtable for vgui::Panel-in-vgui::ImagePanel
 D construction vtable for vgui::Panel-in-vgui::Label
 D construction vtable for vgui::Panel-in-vgui::ListPanel
 D construction vtable for vgui::Panel-in-vgui::ListViewItem
 D construction vtable for vgui::Panel-in-vgui::ListViewPanel
 D construction vtable for vgui::Panel-in-vgui::Menu
 D construction vtable for vgui::Panel-in-vgui::MenuBar
 D construction vtable for vgui::Panel-in-vgui::MenuButton
 D construction vtable for vgui::Panel-in-vgui::MenuItem
 D construction vtable for vgui::Panel-in-vgui::MenuSeparator
 D construction vtable for vgui::Panel-in-vgui::MessageBox
 D construction vtable for vgui::Panel-in-vgui::PanelListPanel
 D construction vtable for vgui::Panel-in-vgui::ProgressBar
 D construction vtable for vgui::Panel-in-vgui::RadioButton
 D construction vtable for vgui::Panel-in-vgui::RichText
 D construction vtable for vgui::Panel-in-vgui::RichTextInterior
 D construction vtable for vgui::Panel-in-vgui::ScalableImagePanel
 D construction vtable for vgui::Panel-in-vgui::ScrollBar
 D construction vtable for vgui::Panel-in-vgui::ScrollBarSlider
 D construction vtable for vgui::Panel-in-vgui::SectionedListPanel
 D construction vtable for vgui::Panel-in-vgui::SectionedListPanelHeader
 D construction vtable for vgui::Panel-in-vgui::Slider
 D construction vtable for vgui::Panel-in-vgui::TextEntry
 D construction vtable for vgui::Panel-in-vgui::ToggleButton
 D construction vtable for vgui::Panel-in-vgui::TreeNode
 D construction vtable for vgui::Panel-in-vgui::TreeNodeImage
 D construction vtable for vgui::Panel-in-vgui::TreeNodeText
 D construction vtable for vgui::Panel-in-vgui::TreeView
 D construction vtable for vgui::Panel-in-vgui::TreeViewSubPanel
 D construction vtable for vgui::Panel-in-vgui::URLLabel
 D construction vtable for vgui::ProgressBar-in-vgui::CircularProgressBar
 D construction vtable for vgui::ProgressBar-in-vgui::ContinuousProgressBar
 D construction vtable for vgui::RichText-in-CBaseHudChatLine
 D construction vtable for vgui::RichText-in-CHudChatHistory
 D construction vtable for vgui::TextEntry-in-CBaseHudChatEntry
 D construction vtable for vgui::TextEntry-in-CBuildModeNavCombo
 D construction vtable for vgui::TextEntry-in-CSmallTextEntry
 D construction vtable for vgui::TextEntry-in-vgui::ComboBox
 D construction vtable for vgui::TextEntry-in-vgui::TreeNodeText
 D construction vtable for vgui::ToggleButton-in-CHudChatFilterCheckButton
 D construction vtable for vgui::ToggleButton-in-vgui::CheckButton
 D construction vtable for vgui::ToggleButton-in-vgui::CvarToggleCheckButton<ConVarRef>
 D construction vtable for vgui::ToggleButton-in-vgui::ExpandButton
 D construction vtable for vgui::ToggleButton-in-vgui::RadioButton
 D datamap_t* DataMapInit<CBaseAchievement>(CBaseAchievement*)::dataDesc
 D datamap_t* DataMapInit<CBaseAchievement>(CBaseAchievement*)::nameHolder
 D datamap_t* DataMapInit<CCopyRecipientFilter>(CCopyRecipientFilter*)::dataDesc
 D datamap_t* DataMapInit<CCopyRecipientFilter>(CCopyRecipientFilter*)::nameHolder
 D datamap_t* DataMapInit<CEnvHeadcrabCanisterShared>(CEnvHeadcrabCanisterShared*)::dataDesc
 D datamap_t* DataMapInit<CEnvHeadcrabCanisterShared>(CEnvHeadcrabCanisterShared*)::nameHolder
 D datamap_t* DataMapInit<CFailableAchievement>(CFailableAchievement*)::dataDesc
 D datamap_t* DataMapInit<CFailableAchievement>(CFailableAchievement*)::nameHolder
 D datamap_t* DataMapInit<CMultiDamage>(CMultiDamage*)::dataDesc
 D datamap_t* DataMapInit<CMultiDamage>(CMultiDamage*)::nameHolder
 D datamap_t* DataMapInit<CParticleProperty>(CParticleProperty*)::dataDesc
 D datamap_t* DataMapInit<CParticleProperty>(CParticleProperty*)::nameHolder
 D datamap_t* DataMapInit<CRagdoll>(CRagdoll*)::dataDesc
 D datamap_t* DataMapInit<CRagdoll>(CRagdoll*)::nameHolder
 D datamap_t* DataMapInit<CRandSimTimer>(CRandSimTimer*)::dataDesc
 D datamap_t* DataMapInit<CRandSimTimer>(CRandSimTimer*)::nameHolder
 D datamap_t* DataMapInit<CRandStopwatch>(CRandStopwatch*)::dataDesc
 D datamap_t* DataMapInit<CRandStopwatch>(CRandStopwatch*)::nameHolder
 D datamap_t* DataMapInit<CSimTimer>(CSimTimer*)::dataDesc
 D datamap_t* DataMapInit<CSimTimer>(CSimTimer*)::nameHolder
 D datamap_t* DataMapInit<CSimpleSimTimer>(CSimpleSimTimer*)::dataDesc
 D datamap_t* DataMapInit<CSimpleSimTimer>(CSimpleSimTimer*)::nameHolder
 D datamap_t* DataMapInit<CSoundEnvelope>(CSoundEnvelope*)::dataDesc
 D datamap_t* DataMapInit<CSoundEnvelope>(CSoundEnvelope*)::nameHolder
 D datamap_t* DataMapInit<CSoundPatch>(CSoundPatch*)::dataDesc
 D datamap_t* DataMapInit<CSoundPatch>(CSoundPatch*)::nameHolder
 D datamap_t* DataMapInit<CStopwatch>(CStopwatch*)::dataDesc
 D datamap_t* DataMapInit<CStopwatch>(CStopwatch*)::nameHolder
 D datamap_t* DataMapInit<CStopwatchBase>(CStopwatchBase*)::dataDesc
 D datamap_t* DataMapInit<CStopwatchBase>(CStopwatchBase*)::nameHolder
 D datamap_t* DataMapInit<CTakeDamageInfo>(CTakeDamageInfo*)::dataDesc
 D datamap_t* DataMapInit<CTakeDamageInfo>(CTakeDamageInfo*)::nameHolder
 D datamap_t* DataMapInit<C_BaseEntity>(C_BaseEntity*)::dataDesc
 D datamap_t* DataMapInit<C_BaseEntity>(C_BaseEntity*)::nameHolder
 D datamap_t* DataMapInit<C_BreakableSurface>(C_BreakableSurface*)::dataDesc
 D datamap_t* DataMapInit<C_BreakableSurface>(C_BreakableSurface*)::nameHolder
 D datamap_t* DataMapInit<C_ClientRagdoll>(C_ClientRagdoll*)::dataDesc
 D datamap_t* DataMapInit<C_ClientRagdoll>(C_ClientRagdoll*)::nameHolder
 D datamap_t* DataMapInit<C_FuncLadder>(C_FuncLadder*)::dataDesc
 D datamap_t* DataMapInit<C_FuncLadder>(C_FuncLadder*)::nameHolder
 D datamap_t* DataMapInit<C_NPC_AntlionGuard>(C_NPC_AntlionGuard*)::dataDesc
 D datamap_t* DataMapInit<C_NPC_AntlionGuard>(C_NPC_AntlionGuard*)::nameHolder
 D datamap_t* DataMapInit<C_NPC_Manhack>(C_NPC_Manhack*)::dataDesc
 D datamap_t* DataMapInit<C_NPC_Manhack>(C_NPC_Manhack*)::nameHolder
 D datamap_t* DataMapInit<C_PointCommentaryNode>(C_PointCommentaryNode*)::dataDesc
 D datamap_t* DataMapInit<C_PointCommentaryNode>(C_PointCommentaryNode*)::nameHolder
 D datamap_t* DataMapInit<C_PropAirboat>(C_PropAirboat*)::dataDesc
 D datamap_t* DataMapInit<C_PropAirboat>(C_PropAirboat*)::nameHolder
 D datamap_t* DataMapInit<C_PropCannon>(C_PropCannon*)::dataDesc
 D datamap_t* DataMapInit<C_PropCannon>(C_PropCannon*)::nameHolder
 D datamap_t* DataMapInit<C_PropCrane>(C_PropCrane*)::dataDesc
 D datamap_t* DataMapInit<C_PropCrane>(C_PropCrane*)::nameHolder
 D datamap_t* DataMapInit<C_PropVehicleChoreoGeneric>(C_PropVehicleChoreoGeneric*)::dataDesc
 D datamap_t* DataMapInit<C_PropVehicleChoreoGeneric>(C_PropVehicleChoreoGeneric*)::nameHolder
 D datamap_t* DataMapInit<C_PropVehicleDriveable>(C_PropVehicleDriveable*)::dataDesc
 D datamap_t* DataMapInit<C_PropVehicleDriveable>(C_PropVehicleDriveable*)::nameHolder
 D datamap_t* DataMapInit<C_PropVehiclePrisonerPod>(C_PropVehiclePrisonerPod*)::dataDesc
 D datamap_t* DataMapInit<C_PropVehiclePrisonerPod>(C_PropVehiclePrisonerPod*)::nameHolder
 D datamap_t* DataMapInit<C_SpriteTrail>(C_SpriteTrail*)::dataDesc
 D datamap_t* DataMapInit<C_SpriteTrail>(C_SpriteTrail*)::nameHolder
 D datamap_t* DataMapInit<CaptionLookup_t>(CaptionLookup_t*)::dataDesc
 D datamap_t* DataMapInit<CaptionLookup_t>(CaptionLookup_t*)::nameHolder
 D datamap_t* DataMapInit<CompiledCaptionHeader_t>(CompiledCaptionHeader_t*)::dataDesc
 D datamap_t* DataMapInit<CompiledCaptionHeader_t>(CompiledCaptionHeader_t*)::nameHolder
 D datamap_t* DataMapInit<PhysBlockHeader_t>(PhysBlockHeader_t*)::dataDesc
 D datamap_t* DataMapInit<PhysBlockHeader_t>(PhysBlockHeader_t*)::nameHolder
 D datamap_t* DataMapInit<PhysObjectHeader_t>(PhysObjectHeader_t*)::dataDesc
 D datamap_t* DataMapInit<PhysObjectHeader_t>(PhysObjectHeader_t*)::nameHolder
 D datamap_t* DataMapInit<SaveRestoreBlockHeader_t>(SaveRestoreBlockHeader_t*)::dataDesc
 D datamap_t* DataMapInit<SaveRestoreBlockHeader_t>(SaveRestoreBlockHeader_t*)::nameHolder
 D datamap_t* DataMapInit<SoundCommand_t>(SoundCommand_t*)::dataDesc
 D datamap_t* DataMapInit<SoundCommand_t>(SoundCommand_t*)::nameHolder
 D datamap_t* DataMapInit<TrailPoint_t>(TrailPoint_t*)::dataDesc
 D datamap_t* DataMapInit<TrailPoint_t>(TrailPoint_t*)::nameHolder
 D datamap_t* DataMapInit<VTFFileBaseHeader_t>(VTFFileBaseHeader_t*)::dataDesc
 D datamap_t* DataMapInit<VTFFileBaseHeader_t>(VTFFileBaseHeader_t*)::nameHolder
 D datamap_t* DataMapInit<VTFFileHeaderV7_1_t>(VTFFileHeaderV7_1_t*)::dataDesc
 D datamap_t* DataMapInit<VTFFileHeaderV7_1_t>(VTFFileHeaderV7_1_t*)::nameHolder
 D datamap_t* DataMapInit<VTFFileHeaderV7_2_t>(VTFFileHeaderV7_2_t*)::dataDesc
 D datamap_t* DataMapInit<VTFFileHeaderV7_2_t>(VTFFileHeaderV7_2_t*)::nameHolder
 D datamap_t* DataMapInit<VTFFileHeaderV7_3_t>(VTFFileHeaderV7_3_t*)::dataDesc
 D datamap_t* DataMapInit<VTFFileHeaderV7_3_t>(VTFFileHeaderV7_3_t*)::nameHolder
 D datamap_t* DataMapInit<VTFFileHeaderX360_t>(VTFFileHeaderX360_t*)::dataDesc
 D datamap_t* DataMapInit<VTFFileHeaderX360_t>(VTFFileHeaderX360_t*)::nameHolder
 D datamap_t* DataMapInit<VTFFileHeader_t>(VTFFileHeader_t*)::dataDesc
 D datamap_t* DataMapInit<VTFFileHeader_t>(VTFFileHeader_t*)::nameHolder
 D datamap_t* DataMapInit<ViewSmoothingData_t>(ViewSmoothingData_t*)::dataDesc
 D datamap_t* DataMapInit<ViewSmoothingData_t>(ViewSmoothingData_t*)::nameHolder
 D datamap_t* DataMapInit<entitytable_t>(entitytable_t*)::dataDesc
 D datamap_t* DataMapInit<entitytable_t>(entitytable_t*)::nameHolder
 D datamap_t* DataMapInit<flexsetting_t>(flexsetting_t*)::dataDesc
 D datamap_t* DataMapInit<flexsetting_t>(flexsetting_t*)::nameHolder
 D datamap_t* DataMapInit<flexsettinghdr_t>(flexsettinghdr_t*)::dataDesc
 D datamap_t* DataMapInit<flexsettinghdr_t>(flexsettinghdr_t*)::nameHolder
 D datamap_t* DataMapInit<flexweight_t>(flexweight_t*)::dataDesc
 D datamap_t* DataMapInit<flexweight_t>(flexweight_t*)::nameHolder
 D datamap_t* DataMapInit<player_info_s>(player_info_s*)::dataDesc
 D datamap_t* DataMapInit<player_info_s>(player_info_s*)::nameHolder
 D datamap_t* DataMapInit<screenfade_t>(screenfade_t*)::dataDesc
 D datamap_t* DataMapInit<screenfade_t>(screenfade_t*)::nameHolder
 D datamap_t* DataMapInit<screenshake_t>(screenshake_t*)::dataDesc
 D datamap_t* DataMapInit<screenshake_t>(screenshake_t*)::nameHolder
 D datamap_t* PredMapInit<CCollisionProperty>(CCollisionProperty*)::predDesc
 D datamap_t* PredMapInit<CParticleProperty>(CParticleProperty*)::predDesc
 D datamap_t* PredMapInit<CPlayerLocalData>(CPlayerLocalData*)::predDesc
 D datamap_t* PredMapInit<CPlayerState>(CPlayerState*)::predDesc
 D datamap_t* PredMapInit<C_BaseAnimating>(C_BaseAnimating*)::predDesc
 D datamap_t* PredMapInit<C_BaseAnimatingOverlay>(C_BaseAnimatingOverlay*)::predDesc
 D datamap_t* PredMapInit<C_BaseCombatCharacter>(C_BaseCombatCharacter*)::predDesc
 D datamap_t* PredMapInit<C_BaseCombatWeapon>(C_BaseCombatWeapon*)::predDesc
 D datamap_t* PredMapInit<C_BaseEntity>(C_BaseEntity*)::predDesc
 D datamap_t* PredMapInit<C_BaseFlex>(C_BaseFlex*)::predDesc
 D datamap_t* PredMapInit<C_BaseGrenade>(C_BaseGrenade*)::predDesc
 D datamap_t* PredMapInit<C_BaseHLCombatWeapon>(C_BaseHLCombatWeapon*)::predDesc
 D datamap_t* PredMapInit<C_BaseHLPlayer>(C_BaseHLPlayer*)::predDesc
 D datamap_t* PredMapInit<C_BaseParticleEntity>(C_BaseParticleEntity*)::predDesc
 D datamap_t* PredMapInit<C_BasePlayer>(C_BasePlayer*)::predDesc
 D datamap_t* PredMapInit<C_BaseViewModel>(C_BaseViewModel*)::predDesc
 D datamap_t* PredMapInit<C_Beam>(C_Beam*)::predDesc
 D datamap_t* PredMapInit<C_ColorCorrectionVolume>(C_ColorCorrectionVolume*)::predDesc
 D datamap_t* PredMapInit<C_Flaregun>(C_Flaregun*)::predDesc
 D datamap_t* PredMapInit<C_HL2PlayerLocalData>(C_HL2PlayerLocalData*)::predDesc
 D datamap_t* PredMapInit<C_PlayerResource>(C_PlayerResource*)::predDesc
 D datamap_t* PredMapInit<C_Sprite>(C_Sprite*)::predDesc
 D datamap_t* PredMapInit<C_SpriteTrail>(C_SpriteTrail*)::predDesc
 D datamap_t* PredMapInit<C_Team>(C_Team*)::predDesc
 D datamap_t* PredMapInit<C_Weapon357>(C_Weapon357*)::predDesc
 D datamap_t* PredMapInit<C_WeaponAR2>(C_WeaponAR2*)::predDesc
 D datamap_t* PredMapInit<C_WeaponAlyxGun>(C_WeaponAlyxGun*)::predDesc
 D datamap_t* PredMapInit<C_WeaponAnnabelle>(C_WeaponAnnabelle*)::predDesc
 D datamap_t* PredMapInit<C_WeaponBinoculars>(C_WeaponBinoculars*)::predDesc
 D datamap_t* PredMapInit<C_WeaponBugBait>(C_WeaponBugBait*)::predDesc
 D datamap_t* PredMapInit<C_WeaponCitizenPackage>(C_WeaponCitizenPackage*)::predDesc
 D datamap_t* PredMapInit<C_WeaponCitizenSuitcase>(C_WeaponCitizenSuitcase*)::predDesc
 D datamap_t* PredMapInit<C_WeaponCrossbow>(C_WeaponCrossbow*)::predDesc
 D datamap_t* PredMapInit<C_WeaponCrowbar>(C_WeaponCrowbar*)::predDesc
 D datamap_t* PredMapInit<C_WeaponCubemap>(C_WeaponCubemap*)::predDesc
 D datamap_t* PredMapInit<C_WeaponCycler>(C_WeaponCycler*)::predDesc
 D datamap_t* PredMapInit<C_WeaponFrag>(C_WeaponFrag*)::predDesc
 D datamap_t* PredMapInit<C_WeaponGaussGun>(C_WeaponGaussGun*)::predDesc
 D datamap_t* PredMapInit<C_WeaponPhysCannon>(C_WeaponPhysCannon*)::predDesc
 D datamap_t* PredMapInit<C_WeaponPistol>(C_WeaponPistol*)::predDesc
 D datamap_t* PredMapInit<C_WeaponRPG>(C_WeaponRPG*)::predDesc
 D datamap_t* PredMapInit<C_WeaponSMG1>(C_WeaponSMG1*)::predDesc
 D datamap_t* PredMapInit<C_WeaponShotgun>(C_WeaponShotgun*)::predDesc
 D datamap_t* PredMapInit<C_WeaponStunStick>(C_WeaponStunStick*)::predDesc
 D datamap_t* PredMapInit<C_Weapon_SLAM>(C_Weapon_SLAM*)::predDesc
 D debugoverlaypanel
 D decalsystem
 D entitytable_t::m_DataMap
 D flexsetting_t::m_DataMap
 D flexsettinghdr_t::m_DataMap
 D flexweight_t::m_DataMap
 D fps
 D gSparkRamp
 D g_ChoreoStringPool
 D g_CurFrameStage
 D g_FaceVerts
 D g_ItemFlags
 D g_KeyValuesErrorStack
 D g_OffsetLookup
 D g_PhysDefaultObjectParams
 D g_PhysGameTrace
 D g_ScreenSpaceEffectManager
 D g_SolidSetup
 D g_StandardRecvProxies
 D g_bDoRangeChecks
 D g_bMovementOptimizations
 D g_backFaceVerts
 D g_downFaceVerts
 D g_fMaxViewModelLag
 D g_flHeadIconSize
 D g_flHeadOffset
 D g_flSplashAlpha
 D g_flSplashLifetime
 D g_flSplashScale
 D g_frontFaceVerts
 D g_iAlive
 D g_inputTypeToNameTable
 D g_leftFaceVerts
 D g_nActivityListVersion
 D g_nEventListVersion
 D g_nParticle_Multiplier
 D g_pBanMgrFilename
 D g_pChangeTracker
 D g_pClientLeafSystem
 D g_pClientShadowMgr
 D g_pColorCorrectionMgr
 D g_pEffects
 D g_pEntityList
 D g_pGameMovement
 D g_pGameSaveRestoreBlockSet
 D g_pModelNameLaser
 D g_pMoveData
 D g_pParticleSystemMgr
 D g_pParticleSystemQuery
 D g_pPhysSaveRestoreManager
 D g_pPoseDebugger
 D g_pScreenSpaceEffects
 D g_rightFaceVerts
 D g_skybox_FaceVerts
 D g_skybox_backFaceVerts
 D g_skybox_downFaceVerts
 D g_skybox_frontFaceVerts
 D g_skybox_leftFaceVerts
 D g_skybox_rightFaceVerts
 D g_skybox_upFaceVerts
 D g_upFaceVerts
 D gamestats
 D gpGlobals
 D guard variable for AllocTempVector()::s_nIndex
 D guard variable for AllocTempVector()::s_vecTemp
 D guard variable for CAchievementNotificationPanel::GetKBMap()::s_pMap
 D guard variable for CAchievementNotificationPanel::GetMessageMap()::s_pMap
 D guard variable for CAvatarImagePanel::GetKBMap()::s_pMap
 D guard variable for CAvatarImagePanel::GetMessageMap()::s_pMap
 D guard variable for CBaseHudChat::GetKBMap()::s_pMap
 D guard variable for CBaseHudChat::GetMessageMap()::s_pMap
 D guard variable for CBaseModelPanel::GetKBMap()::s_pMap
 D guard variable for CBaseModelPanel::GetMessageMap()::s_pMap
 D guard variable for CBaseViewport::GetKBMap()::s_pMap
 D guard variable for CBaseViewport::GetMessageMap()::s_pMap
 D guard variable for CBorderVisualizerPanel::GetKBMap()::s_pMap
 D guard variable for CBorderVisualizerPanel::GetMessageMap()::s_pMap
 D guard variable for CBoundedCvar_Interp::GetFloat() const::pMin
 D guard variable for CBoundedCvar_Interp::GetFloat() const::pUpdateRate
 D guard variable for CBoundedCvar_InterpRatio::GetFloat() const::pMax
 D guard variable for CBoundedCvar_InterpRatio::GetFloat() const::pMin
 D guard variable for CBoundedCvar_Predict::GetFloat() const::pClientPredict
 D guard variable for CBuildModeNavCombo::GetKBMap()::s_pMap
 D guard variable for CBuildModeNavCombo::GetMessageMap()::s_pMap
 D guard variable for CCenterStringLabel::GetKBMap()::s_pMap
 D guard variable for CCenterStringLabel::GetMessageMap()::s_pMap
 D guard variable for CClientScoreBoardDialog::GetKBMap()::s_pMap
 D guard variable for CClientScoreBoardDialog::GetMessageMap()::s_pMap
 D guard variable for CColorVisualizerPanel::GetKBMap()::s_pMap
 D guard variable for CColorVisualizerPanel::GetMessageMap()::s_pMap
 D guard variable for CCommentaryModelPanel::GetKBMap()::s_pMap
 D guard variable for CCommentaryModelPanel::GetMessageMap()::s_pMap
 D guard variable for CCommentaryModelViewer::GetKBMap()::s_pMap
 D guard variable for CCommentaryModelViewer::GetMessageMap()::s_pMap
 D guard variable for CDragDropHelperPanel::GetKBMap()::s_pMap
 D guard variable for CDragDropHelperPanel::GetMessageMap()::s_pMap
 D guard variable for CFPSPanel::GetKBMap()::s_pMap
 D guard variable for CFPSPanel::GetMessageMap()::s_pMap
 D guard variable for CHUDAutoAim::GetKBMap()::s_pMap
 D guard variable for CHUDAutoAim::GetMessageMap()::s_pMap
 D guard variable for CHUDQuickInfo::GetKBMap()::s_pMap
 D guard variable for CHUDQuickInfo::GetMessageMap()::s_pMap
 D guard variable for CHudAmmo::GetKBMap()::s_pMap
 D guard variable for CHudAmmo::GetMessageMap()::s_pMap
 D guard variable for CHudAnimationInfo::GetKBMap()::s_pMap
 D guard variable for CHudAnimationInfo::GetMessageMap()::s_pMap
 D guard variable for CHudBattery::GetKBMap()::s_pMap
 D guard variable for CHudBattery::GetMessageMap()::s_pMap
 D guard variable for CHudChat::GetKBMap()::s_pMap
 D guard variable for CHudChat::GetMessageMap()::s_pMap
 D guard variable for CHudChatFilterButton::GetKBMap()::s_pMap
 D guard variable for CHudChatFilterButton::GetMessageMap()::s_pMap
 D guard variable for CHudChatFilterCheckButton::GetKBMap()::s_pMap
 D guard variable for CHudChatFilterCheckButton::GetMessageMap()::s_pMap
 D guard variable for CHudChatFilterPanel::GetKBMap()::s_pMap
 D guard variable for CHudChatFilterPanel::GetMessageMap()::s_pMap
 D guard variable for CHudChatHistory::GetKBMap()::s_pMap
 D guard variable for CHudChatHistory::GetMessageMap()::s_pMap
 D guard variable for CHudCloseCaption::GetKBMap()::s_pMap
 D guard variable for CHudCloseCaption::GetMessageMap()::s_pMap
 D guard variable for CHudCommentary::GetKBMap()::s_pMap
 D guard variable for CHudCommentary::GetMessageMap()::s_pMap
 D guard variable for CHudCredits::GetKBMap()::s_pMap
 D guard variable for CHudCredits::GetMessageMap()::s_pMap
 D guard variable for CHudCrosshair::GetKBMap()::s_pMap
 D guard variable for CHudCrosshair::GetMessageMap()::s_pMap
 D guard variable for CHudDamageIndicator::GetKBMap()::s_pMap
 D guard variable for CHudDamageIndicator::GetMessageMap()::s_pMap
 D guard variable for CHudDeathNotice::GetKBMap()::s_pMap
 D guard variable for CHudDeathNotice::GetMessageMap()::s_pMap
 D guard variable for CHudFilmDemo::GetKBMap()::s_pMap
 D guard variable for CHudFilmDemo::GetMessageMap()::s_pMap
 D guard variable for CHudGeiger::GetKBMap()::s_pMap
 D guard variable for CHudGeiger::GetMessageMap()::s_pMap
 D guard variable for CHudHDRDemo::GetKBMap()::s_pMap
 D guard variable for CHudHDRDemo::GetMessageMap()::s_pMap
 D guard variable for CHudHealth::GetKBMap()::s_pMap
 D guard variable for CHudHealth::GetMessageMap()::s_pMap
 D guard variable for CHudHintDisplay::GetKBMap()::s_pMap
 D guard variable for CHudHintDisplay::GetMessageMap()::s_pMap
 D guard variable for CHudHintKeyDisplay::GetKBMap()::s_pMap
 D guard variable for CHudHintKeyDisplay::GetMessageMap()::s_pMap
 D guard variable for CHudHistoryResource::GetKBMap()::s_pMap
 D guard variable for CHudHistoryResource::GetMessageMap()::s_pMap
 D guard variable for CHudMenu::GetKBMap()::s_pMap
 D guard variable for CHudMenu::GetMessageMap()::s_pMap
 D guard variable for CHudMessage::GetKBMap()::s_pMap
 D guard variable for CHudMessage::GetMessageMap()::s_pMap
 D guard variable for CHudNumericDisplay::GetKBMap()::s_pMap
 D guard variable for CHudNumericDisplay::GetMessageMap()::s_pMap
 D guard variable for CHudPoisonDamageIndicator::GetKBMap()::s_pMap
 D guard variable for CHudPoisonDamageIndicator::GetMessageMap()::s_pMap
 D guard variable for CHudPosture::GetKBMap()::s_pMap
 D guard variable for CHudPosture::GetMessageMap()::s_pMap
 D guard variable for CHudSecondaryAmmo::GetKBMap()::s_pMap
 D guard variable for CHudSecondaryAmmo::GetMessageMap()::s_pMap
 D guard variable for CHudSquadStatus::GetKBMap()::s_pMap
 D guard variable for CHudSquadStatus::GetMessageMap()::s_pMap
 D guard variable for CHudSuitPower::GetKBMap()::s_pMap
 D guard variable for CHudSuitPower::GetMessageMap()::s_pMap
 D guard variable for CHudTrain::GetKBMap()::s_pMap
 D guard variable for CHudTrain::GetMessageMap()::s_pMap
 D guard variable for CHudVehicle::GetKBMap()::s_pMap
 D guard variable for CHudVehicle::GetMessageMap()::s_pMap
 D guard variable for CHudViewport::GetKBMap()::s_pMap
 D guard variable for CHudViewport::GetMessageMap()::s_pMap
 D guard variable for CHudWeapon::GetKBMap()::s_pMap
 D guard variable for CHudWeapon::GetMessageMap()::s_pMap
 D guard variable for CHudWeaponSelection::GetKBMap()::s_pMap
 D guard variable for CHudWeaponSelection::GetMessageMap()::s_pMap
 D guard variable for CHudZoom::GetKBMap()::s_pMap
 D guard variable for CHudZoom::GetMessageMap()::s_pMap
 D guard variable for CIconPanel::GetKBMap()::s_pMap
 D guard variable for CIconPanel::GetMessageMap()::s_pMap
 D guard variable for CMDLPanel::GetKBMap()::s_pMap
 D guard variable for CMDLPanel::GetMessageMap()::s_pMap
 D guard variable for CModelPanel::GetKBMap()::s_pMap
 D guard variable for CModelPanel::GetMessageMap()::s_pMap
 D guard variable for CNavProgress::GetKBMap()::s_pMap
 D guard variable for CNavProgress::GetMessageMap()::s_pMap
 D guard variable for CNewParticleEffect::RenderableToWorldTransform()::mat
 D guard variable for CPDumpPanel::GetKBMap()::s_pMap
 D guard variable for CPDumpPanel::GetMessageMap()::s_pMap
 D guard variable for CPotteryWheelPanel::GetKBMap()::s_pMap
 D guard variable for CPotteryWheelPanel::GetMessageMap()::s_pMap
 D guard variable for CSchemeVisualizer::GetKBMap()::s_pMap
 D guard variable for CSchemeVisualizer::GetMessageMap()::s_pMap
 D guard variable for CSmallTextEntry::GetKBMap()::s_pMap
 D guard variable for CSmallTextEntry::GetMessageMap()::s_pMap
 D guard variable for CSpectatorGUI::GetKBMap()::s_pMap
 D guard variable for CSpectatorGUI::GetMessageMap()::s_pMap
 D guard variable for CSpectatorMenu::GetKBMap()::s_pMap
 D guard variable for CSpectatorMenu::GetMessageMap()::s_pMap
 D guard variable for CTeamMenu::GetKBMap()::s_pMap
 D guard variable for CTeamMenu::GetMessageMap()::s_pMap
 D guard variable for CTextWindow::GetKBMap()::s_pMap
 D guard variable for CTextWindow::GetMessageMap()::s_pMap
 D guard variable for CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CBoneSetupEnt, unsigned short, bool (*)(CBoneSetupEnt const&, CBoneSetupEnt const&), CUtlMemory<UtlRBTreeNode_t<CBoneSetupEnt, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CClientTools::HToolEntry_t, unsigned short, bool (*)(CClientTools::HToolEntry_t const&, CClientTools::HToolEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CClientTools::HToolEntry_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CHudCloseCaption::CaptionRepeat, int, bool (*)(CHudCloseCaption::CaptionRepeat const&, CHudCloseCaption::CaptionRepeat const&), CUtlMemory<UtlRBTreeNode_t<CHudCloseCaption::CaptionRepeat, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CKeyBindingsMgr::KBContext_t, int, bool (*)(CKeyBindingsMgr::KBContext_t const&, CKeyBindingsMgr::KBContext_t const&), CUtlMemory<UtlRBTreeNode_t<CKeyBindingsMgr::KBContext_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CPlayerLogoProxy::PlayerLogo, unsigned short, bool (*)(CPlayerLogoProxy::PlayerLogo const&, CPlayerLogoProxy::PlayerLogo const&), CUtlMemory<UtlRBTreeNode_t<CPlayerLogoProxy::PlayerLogo, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short, CUtlMap<AvatarImagePair_t, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short, CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<IClientUnknown*, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int, CUtlMap<char const*, CActivityRemapCache, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CHudTexture*, int>::Node_t, int, CUtlMap<char const*, CHudTexture*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CHudTexture*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int, CUtlMap<char const*, CLCD::IconInfo_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CParticleSubTexture*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CUtlString, int>::Node_t, int, CUtlMap<char const*, CUtlString, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CUtlString, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IPanelFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, KeyValues*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short, CUtlMap<int, CHudRenderGroup*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<CWorldListCache::Entry_t*, unsigned short, CWorldListCache::CEntryComparator, CUtlMemory<UtlRBTreeNode_t<CWorldListCache::Entry_t*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<FS_LocalToGlobal_t, unsigned short, bool (*)(FS_LocalToGlobal_t const&, FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<FS_LocalToGlobal_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<unsigned short, unsigned short, bool (*)(unsigned short const&, unsigned short const&), CUtlMemory<UtlRBTreeNode_t<unsigned short, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::Links(int) const::s_Sentinel
 D guard variable for CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
 D guard variable for CUtlString const& CDmxAttribute::GetValue<CUtlString>() const::defaultValue
 D guard variable for CUtlString const& CDmxElement::GetValue<CUtlString>(char const*) const::defaultValue
 D guard variable for CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> > const& CDmxAttribute::GetArray<CDmxElement*>() const::defaultArray
 D guard variable for CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> > const& CDmxElement::GetArray<CDmxElement*>(char const*) const::defaultValue
 D guard variable for CommandMenu::GetKBMap()::s_pMap
 D guard variable for CommandMenu::GetMessageMap()::s_pMap
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<CParticleSystemDefinition>(CParticleSystemDefinition*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_AgeNoise>(C_INIT_AgeNoise*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateAlongPath>(C_INIT_CreateAlongPath*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateFromParentParticles>(C_INIT_CreateFromParentParticles*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateFromPlaneCache>(C_INIT_CreateFromPlaneCache*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateInHierarchy>(C_INIT_CreateInHierarchy*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateOnModel>(C_INIT_CreateOnModel*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateSequentialPath>(C_INIT_CreateSequentialPath*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateWithinBox>(C_INIT_CreateWithinBox*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateWithinSphere>(C_INIT_CreateWithinSphere*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreationNoise>(C_INIT_CreationNoise*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_DistanceToCPInit>(C_INIT_DistanceToCPInit*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_InheritVelocity>(C_INIT_InheritVelocity*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_InitialRepulsionVelocity>(C_INIT_InitialRepulsionVelocity*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_InitialVelocityNoise>(C_INIT_InitialVelocityNoise*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_LifespanFromVelocity>(C_INIT_LifespanFromVelocity*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_MoveBetweenPoints>(C_INIT_MoveBetweenPoints*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_PositionOffset>(C_INIT_PositionOffset*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_PositionWarp>(C_INIT_PositionWarp*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomAlpha>(C_INIT_RandomAlpha*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomColor>(C_INIT_RandomColor*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomLifeTime>(C_INIT_RandomLifeTime*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomRadius>(C_INIT_RandomRadius*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomRotation>(C_INIT_RandomRotation*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomRotationSpeed>(C_INIT_RandomRotationSpeed*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomSecondSequence>(C_INIT_RandomSecondSequence*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomSequence>(C_INIT_RandomSequence*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomTrailLength>(C_INIT_RandomTrailLength*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomYaw>(C_INIT_RandomYaw*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomYawFlip>(C_INIT_RandomYawFlip*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RemapCPtoScalar>(C_INIT_RemapCPtoScalar*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RemapCPtoVector>(C_INIT_RemapCPtoVector*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RemapScalar>(C_INIT_RemapScalar*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RemapScalarToVector>(C_INIT_RemapScalarToVector*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_SequenceLifeTime>(C_INIT_SequenceLifeTime*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_VelocityRandom>(C_INIT_VelocityRandom*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_AttractToControlPoint>(C_OP_AttractToControlPoint*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_BasicMovement>(C_OP_BasicMovement*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_ColorInterpolate>(C_OP_ColorInterpolate*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_ConstrainDistance>(C_OP_ConstrainDistance*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_ConstrainDistanceToPath>(C_OP_ConstrainDistanceToPath*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_ContinuousEmitter>(C_OP_ContinuousEmitter*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_ControlpointLight>(C_OP_ControlpointLight*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_Cull>(C_OP_Cull*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_DampenToCP>(C_OP_DampenToCP*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_Decay>(C_OP_Decay*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_DistanceBetweenCPs>(C_OP_DistanceBetweenCPs*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_DistanceToCP>(C_OP_DistanceToCP*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_FadeAndKill>(C_OP_FadeAndKill*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_FadeIn>(C_OP_FadeIn*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_FadeOut>(C_OP_FadeOut*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_InstantaneousEmitter>(C_OP_InstantaneousEmitter*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_InterpolateRadius>(C_OP_InterpolateRadius*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_LockToBone>(C_OP_LockToBone*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_MaintainSequentialPath>(C_OP_MaintainSequentialPath*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_MaxVelocity>(C_OP_MaxVelocity*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_ModelCull>(C_OP_ModelCull*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_MovementRotateParticleAroundAxis>(C_OP_MovementRotateParticleAroundAxis*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_Noise>(C_OP_Noise*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_NoiseEmitter>(C_OP_NoiseEmitter*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_Orient2DRelToCP>(C_OP_Orient2DRelToCP*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_OrientTo2dDirection>(C_OP_OrientTo2dDirection*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_OscillateScalar>(C_OP_OscillateScalar*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_OscillateVector>(C_OP_OscillateVector*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_PerParticleEmitter>(C_OP_PerParticleEmitter*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_PlanarConstraint>(C_OP_PlanarConstraint*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_PlaneCull>(C_OP_PlaneCull*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_PositionLock>(C_OP_PositionLock*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RandomForce>(C_OP_RandomForce*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RemapCPtoScalar>(C_OP_RemapCPtoScalar*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RemapDotProductToScalar>(C_OP_RemapDotProductToScalar*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RemapScalar>(C_OP_RemapScalar*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RemapSpeedtoCP>(C_OP_RemapSpeedtoCP*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RenderPoints>(C_OP_RenderPoints*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RenderRope>(C_OP_RenderRope*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RenderScreenVelocityRotate>(C_OP_RenderScreenVelocityRotate*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RenderSprites>(C_OP_RenderSprites*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RenderSpritesTrail>(C_OP_RenderSpritesTrail*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_SetChildControlPoints>(C_OP_SetChildControlPoints*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_SetControlPointPositions>(C_OP_SetControlPointPositions*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_SetControlPointToCenter>(C_OP_SetControlPointToCenter*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_SetControlPointToPlayer>(C_OP_SetControlPointToPlayer*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_Spin>(C_OP_Spin*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_SpinUpdate>(C_OP_SpinUpdate*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_SpinYaw>(C_OP_SpinYaw*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_TwistAroundAxis>(C_OP_TwistAroundAxis*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_VectorNoise>(C_OP_VectorNoise*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_VelocityDecay>(C_OP_VelocityDecay*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_VelocityMatchingForce>(C_OP_VelocityMatchingForce*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_WorldCollideConstraint>(C_OP_WorldCollideConstraint*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_WorldTraceConstraint>(C_OP_WorldTraceConstraint*)::unpack
 D guard variable for DmxElementUnpackStructure_t* DmxElementUnpackInit<ParticleChildrenInfo_t>(ParticleChildrenInfo_t*)::unpack
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<10>::GetDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> > >(CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >*)::ops
 D guard variable for ISaveRestoreOps* CUtlVectorDataopsInstantiator<5>::GetDataOps<CUtlVector<int, CUtlMemory<int, int> > >(CUtlVector<int, CUtlMemory<int, int> >*)::ops
 D guard variable for VideoPanel::GetKBMap()::s_pMap
 D guard variable for VideoPanel::GetMessageMap()::s_pMap
 D guard variable for datamap_t* DataMapInit<CBaseAchievement>(CBaseAchievement*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CCopyRecipientFilter>(CCopyRecipientFilter*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CCopyRecipientFilter>(CCopyRecipientFilter*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CEnvHeadcrabCanisterShared>(CEnvHeadcrabCanisterShared*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CFailableAchievement>(CFailableAchievement*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CMultiDamage>(CMultiDamage*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CParticleProperty>(CParticleProperty*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRagdoll>(CRagdoll*)::dataDesc
 D guard variable for datamap_t* DataMapInit<CRagdoll>(CRagdoll*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRandSimTimer>(CRandSimTimer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CRandStopwatch>(CRandStopwatch*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSimTimer>(CSimTimer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSimpleSimTimer>(CSimpleSimTimer*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSoundEnvelope>(CSoundEnvelope*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CSoundPatch>(CSoundPatch*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CStopwatch>(CStopwatch*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CStopwatchBase>(CStopwatchBase*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CTakeDamageInfo>(CTakeDamageInfo*)::nameHolder
 D guard variable for datamap_t* DataMapInit<C_BaseEntity>(C_BaseEntity*)::nameHolder
 D guard variable for datamap_t* DataMapInit<C_BreakableSurface>(C_BreakableSurface*)::nameHolder
 D guard variable for datamap_t* DataMapInit<C_ClientRagdoll>(C_ClientRagdoll*)::dataDesc
 D guard variable for datamap_t* DataMapInit<C_ClientRagdoll>(C_ClientRagdoll*)::nameHolder
 D guard variable for datamap_t* DataMapInit<C_FuncLadder>(C_FuncLadder*)::nameHolder
 D guard variable for datamap_t* DataMapInit<C_NPC_AntlionGuard>(C_NPC_AntlionGuard*)::nameHolder
 D guard variable for datamap_t* DataMapInit<C_NPC_Manhack>(C_NPC_Manhack*)::nameHolder
 D guard variable for datamap_t* DataMapInit<C_PointCommentaryNode>(C_PointCommentaryNode*)::dataDesc
 D guard variable for datamap_t* DataMapInit<C_PointCommentaryNode>(C_PointCommentaryNode*)::nameHolder
 D guard variable for datamap_t* DataMapInit<C_PropAirboat>(C_PropAirboat*)::nameHolder
 D guard variable for datamap_t* DataMapInit<C_PropCannon>(C_PropCannon*)::nameHolder
 D guard variable for datamap_t* DataMapInit<C_PropCrane>(C_PropCrane*)::nameHolder
 D guard variable for datamap_t* DataMapInit<C_PropVehicleChoreoGeneric>(C_PropVehicleChoreoGeneric*)::nameHolder
 D guard variable for datamap_t* DataMapInit<C_PropVehicleDriveable>(C_PropVehicleDriveable*)::nameHolder
 D guard variable for datamap_t* DataMapInit<C_PropVehiclePrisonerPod>(C_PropVehiclePrisonerPod*)::nameHolder
 D guard variable for datamap_t* DataMapInit<C_SpriteTrail>(C_SpriteTrail*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CaptionLookup_t>(CaptionLookup_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<CompiledCaptionHeader_t>(CompiledCaptionHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<PhysBlockHeader_t>(PhysBlockHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<PhysObjectHeader_t>(PhysObjectHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<SaveRestoreBlockHeader_t>(SaveRestoreBlockHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<SoundCommand_t>(SoundCommand_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<TrailPoint_t>(TrailPoint_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<VTFFileBaseHeader_t>(VTFFileBaseHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<VTFFileHeaderV7_1_t>(VTFFileHeaderV7_1_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<VTFFileHeaderV7_2_t>(VTFFileHeaderV7_2_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<VTFFileHeaderV7_3_t>(VTFFileHeaderV7_3_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<VTFFileHeaderX360_t>(VTFFileHeaderX360_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<VTFFileHeader_t>(VTFFileHeader_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<ViewSmoothingData_t>(ViewSmoothingData_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<entitytable_t>(entitytable_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<flexsetting_t>(flexsetting_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<flexsettinghdr_t>(flexsettinghdr_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<flexweight_t>(flexweight_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<player_info_s>(player_info_s*)::nameHolder
 D guard variable for datamap_t* DataMapInit<screenfade_t>(screenfade_t*)::nameHolder
 D guard variable for datamap_t* DataMapInit<screenshake_t>(screenshake_t*)::nameHolder
 D guard variable for int ClientClassInit<DT_AI_BaseNPC::ignored>(DT_AI_BaseNPC::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_AR2Explosion::ignored>(DT_AR2Explosion::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_AlyxEmpEffect::ignored>(DT_AlyxEmpEffect::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_AnimTimeMustBeFirst::ignored>(DT_AnimTimeMustBeFirst::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Animationlayer::ignored>(DT_Animationlayer::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BCCLocalPlayerExclusive::ignored>(DT_BCCLocalPlayerExclusive::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Barnacle::ignored>(DT_Barnacle::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BaseAnimating::ignored>(DT_BaseAnimating::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BaseAnimatingOverlay::ignored>(DT_BaseAnimatingOverlay::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BaseBeam::ignored>(DT_BaseBeam::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BaseCombatCharacter::ignored>(DT_BaseCombatCharacter::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BaseCombatWeapon::ignored>(DT_BaseCombatWeapon::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BaseDoor::ignored>(DT_BaseDoor::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BaseEntity::ignored>(DT_BaseEntity::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BaseFlex::ignored>(DT_BaseFlex::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BaseGrenade::ignored>(DT_BaseGrenade::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BaseHLBludgeonWeapon::ignored>(DT_BaseHLBludgeonWeapon::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BaseHLCombatWeapon::ignored>(DT_BaseHLCombatWeapon::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BaseHelicopter::ignored>(DT_BaseHelicopter::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BaseParticleEntity::ignored>(DT_BaseParticleEntity::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BasePlayer::ignored>(DT_BasePlayer::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BaseProjectile::ignored>(DT_BaseProjectile::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BasePropDoor::ignored>(DT_BasePropDoor::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BaseTeamObjectiveResource::ignored>(DT_BaseTeamObjectiveResource::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BaseTempEntity::ignored>(DT_BaseTempEntity::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BaseViewModel::ignored>(DT_BaseViewModel::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Beam::ignored>(DT_Beam::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BeamPredictableId::ignored>(DT_BeamPredictableId::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BoneFollower::ignored>(DT_BoneFollower::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BreakableProp::ignored>(DT_BreakableProp::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_BreakableSurface::ignored>(DT_BreakableSurface::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_CFish::ignored>(DT_CFish::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_CitadelEnergyCore::ignored>(DT_CitadelEnergyCore::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_CollisionProperty::ignored>(DT_CollisionProperty::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_ColorCorrection::ignored>(DT_ColorCorrection::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_ColorCorrectionVolume::ignored>(DT_ColorCorrectionVolume::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_CombineGunship::ignored>(DT_CombineGunship::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Corpse::ignored>(DT_Corpse::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_CrossbowBolt::ignored>(DT_CrossbowBolt::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_DetailController::ignored>(DT_DetailController::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_DustTrail::ignored>(DT_DustTrail::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_DynamicLight::ignored>(DT_DynamicLight::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_DynamicProp::ignored>(DT_DynamicProp::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_EffectData::ignored>(DT_EffectData::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Embers::ignored>(DT_Embers::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_EntityDissolve::ignored>(DT_EntityDissolve::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_EntityFlame::ignored>(DT_EntityFlame::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_EntityParticleTrail::ignored>(DT_EntityParticleTrail::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_EntityParticleTrailInfo::ignored>(DT_EntityParticleTrailInfo::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_EnvHeadcrabCanister::ignored>(DT_EnvHeadcrabCanister::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_EnvHeadcrabCanisterShared::ignored>(DT_EnvHeadcrabCanisterShared::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_EnvParticleScript::ignored>(DT_EnvParticleScript::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_EnvProjectedTexture::ignored>(DT_EnvProjectedTexture::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_EnvScreenEffect::ignored>(DT_EnvScreenEffect::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_EnvScreenOverlay::ignored>(DT_EnvScreenOverlay::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_EnvStarfield::ignored>(DT_EnvStarfield::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_EnvTonemapController::ignored>(DT_EnvTonemapController::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_EnvWind::ignored>(DT_EnvWind::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_EnvWindShared::ignored>(DT_EnvWindShared::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_FireSmoke::ignored>(DT_FireSmoke::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_FireTrail::ignored>(DT_FireTrail::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Flare::ignored>(DT_Flare::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Flaregun::ignored>(DT_Flaregun::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_FogController::ignored>(DT_FogController::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_FuncAreaPortalWindow::ignored>(DT_FuncAreaPortalWindow::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_FuncConveyor::ignored>(DT_FuncConveyor::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_FuncLadder::ignored>(DT_FuncLadder::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_FuncMonitor::ignored>(DT_FuncMonitor::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_FuncOccluder::ignored>(DT_FuncOccluder::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_FuncReflectiveGlass::ignored>(DT_FuncReflectiveGlass::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_FuncRotating::ignored>(DT_FuncRotating::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_FuncSmokeVolume::ignored>(DT_FuncSmokeVolume::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_FuncTrackTrain::ignored>(DT_FuncTrackTrain::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Func_Dust::ignored>(DT_Func_Dust::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Func_LOD::ignored>(DT_Func_LOD::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_GameRulesProxy::ignored>(DT_GameRulesProxy::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_HL2GameRules::ignored>(DT_HL2GameRules::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_HL2Local::ignored>(DT_HL2Local::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_HL2_Player::ignored>(DT_HL2_Player::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_HLMachineGun::ignored>(DT_HLMachineGun::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_HLSelectFireMachineGun::ignored>(DT_HLSelectFireMachineGun::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_HalfLife2Proxy::ignored>(DT_HalfLife2Proxy::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_HandleTest::ignored>(DT_HandleTest::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_InfoLadderDismount::ignored>(DT_InfoLadderDismount::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_InfoLightingRelative::ignored>(DT_InfoLightingRelative::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_InfoOverlayAccessor::ignored>(DT_InfoOverlayAccessor::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_InfoTeleporterCountdown::ignored>(DT_InfoTeleporterCountdown::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_LightGlow::ignored>(DT_LightGlow::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Local::ignored>(DT_Local::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_LocalActiveWeaponData::ignored>(DT_LocalActiveWeaponData::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_LocalPlayerExclusive::ignored>(DT_LocalPlayerExclusive::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_LocalWeaponData::ignored>(DT_LocalWeaponData::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_MaterialModifyControl::ignored>(DT_MaterialModifyControl::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_MortarShell::ignored>(DT_MortarShell::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_MovieExplosion::ignored>(DT_MovieExplosion::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_NPC_AntlionGuard::ignored>(DT_NPC_AntlionGuard::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_NPC_Barney::ignored>(DT_NPC_Barney::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_NPC_Manhack::ignored>(DT_NPC_Manhack::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_NPC_Strider::ignored>(DT_NPC_Strider::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_NPC_Vortigaunt::ignored>(DT_NPC_Vortigaunt::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_OverlayVars::ignored>(DT_OverlayVars::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_ParticleFire::ignored>(DT_ParticleFire::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_ParticlePerformanceMonitor::ignored>(DT_ParticlePerformanceMonitor::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_ParticleProperty::ignored>(DT_ParticleProperty::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_ParticleSmokeGrenade::ignored>(DT_ParticleSmokeGrenade::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_ParticleSystem::ignored>(DT_ParticleSystem::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PhysBox::ignored>(DT_PhysBox::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PhysBoxMultiplayer::ignored>(DT_PhysBoxMultiplayer::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PhysMagnet::ignored>(DT_PhysMagnet::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PhysicsProp::ignored>(DT_PhysicsProp::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PhysicsPropMultiplayer::ignored>(DT_PhysicsPropMultiplayer::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Plasma::ignored>(DT_Plasma::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PlasmaBeamNode::ignored>(DT_PlasmaBeamNode::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PlayerResource::ignored>(DT_PlayerResource::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PlayerState::ignored>(DT_PlayerState::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PointCamera::ignored>(DT_PointCamera::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PointCommentaryNode::ignored>(DT_PointCommentaryNode::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PoseController::ignored>(DT_PoseController::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Precipitation::ignored>(DT_Precipitation::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PredictableId::ignored>(DT_PredictableId::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PropAirboat::ignored>(DT_PropAirboat::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PropCannon::ignored>(DT_PropCannon::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PropCombineBall::ignored>(DT_PropCombineBall::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PropCrane::ignored>(DT_PropCrane::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PropJeep::ignored>(DT_PropJeep::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PropVehicleChoreoGeneric::ignored>(DT_PropVehicleChoreoGeneric::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PropVehicleDriveable::ignored>(DT_PropVehicleDriveable::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_PropVehiclePrisonerPod::ignored>(DT_PropVehiclePrisonerPod::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_ProxyToggle::ignored>(DT_ProxyToggle::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_ProxyToggle_ProxiedData::ignored>(DT_ProxyToggle_ProxiedData::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_QuadraticBeam::ignored>(DT_QuadraticBeam::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Ragdoll::ignored>(DT_Ragdoll::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_RagdollManager::ignored>(DT_RagdollManager::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Ragdoll_Attached::ignored>(DT_Ragdoll_Attached::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_RocketTrail::ignored>(DT_RocketTrail::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_RollerMine::ignored>(DT_RollerMine::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_RopeKeyframe::ignored>(DT_RopeKeyframe::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_RotorWashEmitter::ignored>(DT_RotorWashEmitter::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_SceneEntity::ignored>(DT_SceneEntity::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_ScriptIntro::ignored>(DT_ScriptIntro::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_ServerAnimationData::ignored>(DT_ServerAnimationData::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_ShadowControl::ignored>(DT_ShadowControl::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_SlideshowDisplay::ignored>(DT_SlideshowDisplay::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_SmokeStack::ignored>(DT_SmokeStack::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_SmokeTrail::ignored>(DT_SmokeTrail::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_SporeExplosion::ignored>(DT_SporeExplosion::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_SporeTrail::ignored>(DT_SporeTrail::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_SpotlightEnd::ignored>(DT_SpotlightEnd::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Sprite::ignored>(DT_Sprite::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_SpriteOriented::ignored>(DT_SpriteOriented::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_SpriteTrail::ignored>(DT_SpriteTrail::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_SteamJet::ignored>(DT_SteamJet::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Sun::ignored>(DT_Sun::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEAntlionDust::ignored>(DT_TEAntlionDust::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEArmorRicochet::ignored>(DT_TEArmorRicochet::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEBSPDecal::ignored>(DT_TEBSPDecal::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEBeamEntPoint::ignored>(DT_TEBeamEntPoint::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEBeamEnts::ignored>(DT_TEBeamEnts::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEBeamFollow::ignored>(DT_TEBeamFollow::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEBeamLaser::ignored>(DT_TEBeamLaser::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEBeamPoints::ignored>(DT_TEBeamPoints::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEBeamRing::ignored>(DT_TEBeamRing::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEBeamRingPoint::ignored>(DT_TEBeamRingPoint::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEBeamSpline::ignored>(DT_TEBeamSpline::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEBloodSprite::ignored>(DT_TEBloodSprite::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEBloodStream::ignored>(DT_TEBloodStream::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEBreakModel::ignored>(DT_TEBreakModel::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEBubbleTrail::ignored>(DT_TEBubbleTrail::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEBubbles::ignored>(DT_TEBubbles::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEClientProjectile::ignored>(DT_TEClientProjectile::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEConcussiveExplosion::ignored>(DT_TEConcussiveExplosion::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEDecal::ignored>(DT_TEDecal::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEDust::ignored>(DT_TEDust::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEDynamicLight::ignored>(DT_TEDynamicLight::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEEffectDispatch::ignored>(DT_TEEffectDispatch::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEEnergySplash::ignored>(DT_TEEnergySplash::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEExplosion::ignored>(DT_TEExplosion::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEFizz::ignored>(DT_TEFizz::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEFootprintDecal::ignored>(DT_TEFootprintDecal::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEGaussExplosion::ignored>(DT_TEGaussExplosion::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEGlowSprite::ignored>(DT_TEGlowSprite::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEImpact::ignored>(DT_TEImpact::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEKillPlayerAttachments::ignored>(DT_TEKillPlayerAttachments::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TELargeFunnel::ignored>(DT_TELargeFunnel::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEMetalSparks::ignored>(DT_TEMetalSparks::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEMuzzleFlash::ignored>(DT_TEMuzzleFlash::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEParticleSystem::ignored>(DT_TEParticleSystem::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEPhysicsProp::ignored>(DT_TEPhysicsProp::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEPlayerDecal::ignored>(DT_TEPlayerDecal::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEProjectedDecal::ignored>(DT_TEProjectedDecal::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEShatterSurface::ignored>(DT_TEShatterSurface::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEShowLine::ignored>(DT_TEShowLine::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TESmoke::ignored>(DT_TESmoke::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TESparks::ignored>(DT_TESparks::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TESprite::ignored>(DT_TESprite::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TESpriteSpray::ignored>(DT_TESpriteSpray::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TEWorldDecal::ignored>(DT_TEWorldDecal::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Team::ignored>(DT_Team::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TeamplayRoundBasedRules::ignored>(DT_TeamplayRoundBasedRules::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TeamplayRoundBasedRulesProxy::ignored>(DT_TeamplayRoundBasedRulesProxy::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Tesla::ignored>(DT_Tesla::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_TestTraceline::ignored>(DT_TestTraceline::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_VGuiScreen::ignored>(DT_VGuiScreen::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_VortigauntChargeToken::ignored>(DT_VortigauntChargeToken::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_VortigauntEffectDispel::ignored>(DT_VortigauntEffectDispel::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_VoteController::ignored>(DT_VoteController::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WaterBullet::ignored>(DT_WaterBullet::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WaterLODControl::ignored>(DT_WaterLODControl::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Weapon357::ignored>(DT_Weapon357::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WeaponAR2::ignored>(DT_WeaponAR2::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WeaponAlyxGun::ignored>(DT_WeaponAlyxGun::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WeaponAnnabelle::ignored>(DT_WeaponAnnabelle::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WeaponBinoculars::ignored>(DT_WeaponBinoculars::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WeaponBugBait::ignored>(DT_WeaponBugBait::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WeaponCitizenPackage::ignored>(DT_WeaponCitizenPackage::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WeaponCitizenSuitcase::ignored>(DT_WeaponCitizenSuitcase::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WeaponCrossbow::ignored>(DT_WeaponCrossbow::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WeaponCrowbar::ignored>(DT_WeaponCrowbar::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WeaponCubemap::ignored>(DT_WeaponCubemap::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WeaponCycler::ignored>(DT_WeaponCycler::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WeaponFrag::ignored>(DT_WeaponFrag::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WeaponGaussGun::ignored>(DT_WeaponGaussGun::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WeaponPhysCannon::ignored>(DT_WeaponPhysCannon::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WeaponPistol::ignored>(DT_WeaponPistol::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WeaponRPG::ignored>(DT_WeaponRPG::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WeaponSMG1::ignored>(DT_WeaponSMG1::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WeaponShotgun::ignored>(DT_WeaponShotgun::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_WeaponStunStick::ignored>(DT_WeaponStunStick::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_Weapon_SLAM::ignored>(DT_Weapon_SLAM::ignored*)::RecvProps
 D guard variable for int ClientClassInit<DT_World::ignored>(DT_World::ignored*)::RecvProps
 D guard variable for vgui::AnimatingImagePanel::GetKBMap()::s_pMap
 D guard variable for vgui::AnimatingImagePanel::GetMessageMap()::s_pMap
 D guard variable for vgui::AnimationController::GetKBMap()::s_pMap
 D guard variable for vgui::AnimationController::GetMessageMap()::s_pMap
 D guard variable for vgui::BuildModeDialog::GetKBMap()::s_pMap
 D guard variable for vgui::BuildModeDialog::GetMessageMap()::s_pMap
 D guard variable for vgui::Button::GetKBMap()::s_pMap
 D guard variable for vgui::Button::GetMessageMap()::s_pMap
 D guard variable for vgui::CItemButton::GetKBMap()::s_pMap
 D guard variable for vgui::CItemButton::GetMessageMap()::s_pMap
 D guard variable for vgui::CTreeViewListControl::GetKBMap()::s_pMap
 D guard variable for vgui::CTreeViewListControl::GetMessageMap()::s_pMap
 D guard variable for vgui::CheckButton::GetKBMap()::s_pMap
 D guard variable for vgui::CheckButton::GetMessageMap()::s_pMap
 D guard variable for vgui::CircularProgressBar::GetKBMap()::s_pMap
 D guard variable for vgui::CircularProgressBar::GetMessageMap()::s_pMap
 D guard variable for vgui::ClickPanel::GetKBMap()::s_pMap
 D guard variable for vgui::ClickPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ComboBox::GetKBMap()::s_pMap
 D guard variable for vgui::ComboBox::GetMessageMap()::s_pMap
 D guard variable for vgui::ContinuousProgressBar::GetKBMap()::s_pMap
 D guard variable for vgui::ContinuousProgressBar::GetMessageMap()::s_pMap
 D guard variable for vgui::CvarToggleCheckButton<ConVarRef>::GetKBMap()::s_pMap
 D guard variable for vgui::CvarToggleCheckButton<ConVarRef>::GetMessageMap()::s_pMap
 D guard variable for vgui::Divider::GetKBMap()::s_pMap
 D guard variable for vgui::Divider::GetMessageMap()::s_pMap
 D guard variable for vgui::EditablePanel::GetKBMap()::s_pMap
 D guard variable for vgui::EditablePanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ExpandButton::GetKBMap()::s_pMap
 D guard variable for vgui::ExpandButton::GetMessageMap()::s_pMap
 D guard variable for vgui::Frame::GetKBMap()::s_pMap
 D guard variable for vgui::Frame::GetMessageMap()::s_pMap
 D guard variable for vgui::FrameSystemButton::GetKBMap()::s_pMap
 D guard variable for vgui::FrameSystemButton::GetMessageMap()::s_pMap
 D guard variable for vgui::GraphPanel::GetKBMap()::s_pMap
 D guard variable for vgui::GraphPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ImagePanel::GetKBMap()::s_pMap
 D guard variable for vgui::ImagePanel::GetMessageMap()::s_pMap
 D guard variable for vgui::Label::GetKBMap()::s_pMap
 D guard variable for vgui::Label::GetMessageMap()::s_pMap
 D guard variable for vgui::ListPanel::GetKBMap()::s_pMap
 D guard variable for vgui::ListPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ListViewItem::GetKBMap()::s_pMap
 D guard variable for vgui::ListViewItem::GetMessageMap()::s_pMap
 D guard variable for vgui::ListViewPanel::GetKBMap()::s_pMap
 D guard variable for vgui::ListViewPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::Menu::GetKBMap()::s_pMap
 D guard variable for vgui::Menu::GetMessageMap()::s_pMap
 D guard variable for vgui::MenuBar::GetKBMap()::s_pMap
 D guard variable for vgui::MenuBar::GetMessageMap()::s_pMap
 D guard variable for vgui::MenuButton::GetKBMap()::s_pMap
 D guard variable for vgui::MenuButton::GetMessageMap()::s_pMap
 D guard variable for vgui::MenuItem::GetKBMap()::s_pMap
 D guard variable for vgui::MenuItem::GetMessageMap()::s_pMap
 D guard variable for vgui::MenuSeparator::GetKBMap()::s_pMap
 D guard variable for vgui::MenuSeparator::GetMessageMap()::s_pMap
 D guard variable for vgui::MessageBox::GetKBMap()::s_pMap
 D guard variable for vgui::MessageBox::GetMessageMap()::s_pMap
 D guard variable for vgui::Panel::GetKBMap()::s_pMap
 D guard variable for vgui::Panel::GetMessageMap()::s_pMap
 D guard variable for vgui::PanelListPanel::GetKBMap()::s_pMap
 D guard variable for vgui::PanelListPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ProgressBar::GetKBMap()::s_pMap
 D guard variable for vgui::ProgressBar::GetMessageMap()::s_pMap
 D guard variable for vgui::RadioButton::GetKBMap()::s_pMap
 D guard variable for vgui::RadioButton::GetMessageMap()::s_pMap
 D guard variable for vgui::RichText::GetKBMap()::s_pMap
 D guard variable for vgui::RichText::GetMessageMap()::s_pMap
 D guard variable for vgui::RichTextInterior::GetKBMap()::s_pMap
 D guard variable for vgui::RichTextInterior::GetMessageMap()::s_pMap
 D guard variable for vgui::ScalableImagePanel::GetKBMap()::s_pMap
 D guard variable for vgui::ScalableImagePanel::GetMessageMap()::s_pMap
 D guard variable for vgui::ScrollBar::GetKBMap()::s_pMap
 D guard variable for vgui::ScrollBar::GetMessageMap()::s_pMap
 D guard variable for vgui::ScrollBarSlider::GetKBMap()::s_pMap
 D guard variable for vgui::ScrollBarSlider::GetMessageMap()::s_pMap
 D guard variable for vgui::SectionedListPanel::GetKBMap()::s_pMap
 D guard variable for vgui::SectionedListPanel::GetMessageMap()::s_pMap
 D guard variable for vgui::SectionedListPanelHeader::GetKBMap()::s_pMap
 D guard variable for vgui::SectionedListPanelHeader::GetMessageMap()::s_pMap
 D guard variable for vgui::Slider::GetKBMap()::s_pMap
 D guard variable for vgui::Slider::GetMessageMap()::s_pMap
 D guard variable for vgui::TextEntry::GetKBMap()::s_pMap
 D guard variable for vgui::TextEntry::GetMessageMap()::s_pMap
 D guard variable for vgui::ToggleButton::GetKBMap()::s_pMap
 D guard variable for vgui::ToggleButton::GetMessageMap()::s_pMap
 D guard variable for vgui::TreeNode::GetKBMap()::s_pMap
 D guard variable for vgui::TreeNode::GetMessageMap()::s_pMap
 D guard variable for vgui::TreeNodeText::GetKBMap()::s_pMap
 D guard variable for vgui::TreeNodeText::GetMessageMap()::s_pMap
 D guard variable for vgui::TreeView::GetKBMap()::s_pMap
 D guard variable for vgui::TreeView::GetMessageMap()::s_pMap
 D guard variable for vgui::URLLabel::GetKBMap()::s_pMap
 D guard variable for vgui::URLLabel::GetMessageMap()::s_pMap
 D hudlcd
 D hudtextmessage
 D input
 D int ClientClassInit<DT_AI_BaseNPC::ignored>(DT_AI_BaseNPC::ignored*)::RecvProps
 D int ClientClassInit<DT_AR2Explosion::ignored>(DT_AR2Explosion::ignored*)::RecvProps
 D int ClientClassInit<DT_AlyxEmpEffect::ignored>(DT_AlyxEmpEffect::ignored*)::RecvProps
 D int ClientClassInit<DT_AnimTimeMustBeFirst::ignored>(DT_AnimTimeMustBeFirst::ignored*)::RecvProps
 D int ClientClassInit<DT_Animationlayer::ignored>(DT_Animationlayer::ignored*)::RecvProps
 D int ClientClassInit<DT_BCCLocalPlayerExclusive::ignored>(DT_BCCLocalPlayerExclusive::ignored*)::RecvProps
 D int ClientClassInit<DT_Barnacle::ignored>(DT_Barnacle::ignored*)::RecvProps
 D int ClientClassInit<DT_BaseAnimating::ignored>(DT_BaseAnimating::ignored*)::RecvProps
 D int ClientClassInit<DT_BaseAnimatingOverlay::ignored>(DT_BaseAnimatingOverlay::ignored*)::RecvProps
 D int ClientClassInit<DT_BaseBeam::ignored>(DT_BaseBeam::ignored*)::RecvProps
 D int ClientClassInit<DT_BaseCombatCharacter::ignored>(DT_BaseCombatCharacter::ignored*)::RecvProps
 D int ClientClassInit<DT_BaseCombatWeapon::ignored>(DT_BaseCombatWeapon::ignored*)::RecvProps
 D int ClientClassInit<DT_BaseDoor::ignored>(DT_BaseDoor::ignored*)::RecvProps
 D int ClientClassInit<DT_BaseEntity::ignored>(DT_BaseEntity::ignored*)::RecvProps
 D int ClientClassInit<DT_BaseFlex::ignored>(DT_BaseFlex::ignored*)::RecvProps
 D int ClientClassInit<DT_BaseGrenade::ignored>(DT_BaseGrenade::ignored*)::RecvProps
 D int ClientClassInit<DT_BaseHLBludgeonWeapon::ignored>(DT_BaseHLBludgeonWeapon::ignored*)::RecvProps
 D int ClientClassInit<DT_BaseHLCombatWeapon::ignored>(DT_BaseHLCombatWeapon::ignored*)::RecvProps
 D int ClientClassInit<DT_BaseHelicopter::ignored>(DT_BaseHelicopter::ignored*)::RecvProps
 D int ClientClassInit<DT_BaseParticleEntity::ignored>(DT_BaseParticleEntity::ignored*)::RecvProps
 D int ClientClassInit<DT_BasePlayer::ignored>(DT_BasePlayer::ignored*)::RecvProps
 D int ClientClassInit<DT_BaseProjectile::ignored>(DT_BaseProjectile::ignored*)::RecvProps
 D int ClientClassInit<DT_BasePropDoor::ignored>(DT_BasePropDoor::ignored*)::RecvProps
 D int ClientClassInit<DT_BaseTeamObjectiveResource::ignored>(DT_BaseTeamObjectiveResource::ignored*)::RecvProps
 D int ClientClassInit<DT_BaseTempEntity::ignored>(DT_BaseTempEntity::ignored*)::RecvProps
 D int ClientClassInit<DT_BaseViewModel::ignored>(DT_BaseViewModel::ignored*)::RecvProps
 D int ClientClassInit<DT_Beam::ignored>(DT_Beam::ignored*)::RecvProps
 D int ClientClassInit<DT_BeamPredictableId::ignored>(DT_BeamPredictableId::ignored*)::RecvProps
 D int ClientClassInit<DT_BoneFollower::ignored>(DT_BoneFollower::ignored*)::RecvProps
 D int ClientClassInit<DT_BreakableProp::ignored>(DT_BreakableProp::ignored*)::RecvProps
 D int ClientClassInit<DT_BreakableSurface::ignored>(DT_BreakableSurface::ignored*)::RecvProps
 D int ClientClassInit<DT_CFish::ignored>(DT_CFish::ignored*)::RecvProps
 D int ClientClassInit<DT_CitadelEnergyCore::ignored>(DT_CitadelEnergyCore::ignored*)::RecvProps
 D int ClientClassInit<DT_CollisionProperty::ignored>(DT_CollisionProperty::ignored*)::RecvProps
 D int ClientClassInit<DT_ColorCorrection::ignored>(DT_ColorCorrection::ignored*)::RecvProps
 D int ClientClassInit<DT_ColorCorrectionVolume::ignored>(DT_ColorCorrectionVolume::ignored*)::RecvProps
 D int ClientClassInit<DT_CombineGunship::ignored>(DT_CombineGunship::ignored*)::RecvProps
 D int ClientClassInit<DT_Corpse::ignored>(DT_Corpse::ignored*)::RecvProps
 D int ClientClassInit<DT_CrossbowBolt::ignored>(DT_CrossbowBolt::ignored*)::RecvProps
 D int ClientClassInit<DT_DetailController::ignored>(DT_DetailController::ignored*)::RecvProps
 D int ClientClassInit<DT_DustTrail::ignored>(DT_DustTrail::ignored*)::RecvProps
 D int ClientClassInit<DT_DynamicLight::ignored>(DT_DynamicLight::ignored*)::RecvProps
 D int ClientClassInit<DT_DynamicProp::ignored>(DT_DynamicProp::ignored*)::RecvProps
 D int ClientClassInit<DT_EffectData::ignored>(DT_EffectData::ignored*)::RecvProps
 D int ClientClassInit<DT_Embers::ignored>(DT_Embers::ignored*)::RecvProps
 D int ClientClassInit<DT_EntityDissolve::ignored>(DT_EntityDissolve::ignored*)::RecvProps
 D int ClientClassInit<DT_EntityFlame::ignored>(DT_EntityFlame::ignored*)::RecvProps
 D int ClientClassInit<DT_EntityParticleTrail::ignored>(DT_EntityParticleTrail::ignored*)::RecvProps
 D int ClientClassInit<DT_EntityParticleTrailInfo::ignored>(DT_EntityParticleTrailInfo::ignored*)::RecvProps
 D int ClientClassInit<DT_EnvHeadcrabCanister::ignored>(DT_EnvHeadcrabCanister::ignored*)::RecvProps
 D int ClientClassInit<DT_EnvHeadcrabCanisterShared::ignored>(DT_EnvHeadcrabCanisterShared::ignored*)::RecvProps
 D int ClientClassInit<DT_EnvParticleScript::ignored>(DT_EnvParticleScript::ignored*)::RecvProps
 D int ClientClassInit<DT_EnvProjectedTexture::ignored>(DT_EnvProjectedTexture::ignored*)::RecvProps
 D int ClientClassInit<DT_EnvScreenEffect::ignored>(DT_EnvScreenEffect::ignored*)::RecvProps
 D int ClientClassInit<DT_EnvScreenOverlay::ignored>(DT_EnvScreenOverlay::ignored*)::RecvProps
 D int ClientClassInit<DT_EnvStarfield::ignored>(DT_EnvStarfield::ignored*)::RecvProps
 D int ClientClassInit<DT_EnvTonemapController::ignored>(DT_EnvTonemapController::ignored*)::RecvProps
 D int ClientClassInit<DT_EnvWind::ignored>(DT_EnvWind::ignored*)::RecvProps
 D int ClientClassInit<DT_EnvWindShared::ignored>(DT_EnvWindShared::ignored*)::RecvProps
 D int ClientClassInit<DT_FireSmoke::ignored>(DT_FireSmoke::ignored*)::RecvProps
 D int ClientClassInit<DT_FireTrail::ignored>(DT_FireTrail::ignored*)::RecvProps
 D int ClientClassInit<DT_Flare::ignored>(DT_Flare::ignored*)::RecvProps
 D int ClientClassInit<DT_Flaregun::ignored>(DT_Flaregun::ignored*)::RecvProps
 D int ClientClassInit<DT_FogController::ignored>(DT_FogController::ignored*)::RecvProps
 D int ClientClassInit<DT_FuncAreaPortalWindow::ignored>(DT_FuncAreaPortalWindow::ignored*)::RecvProps
 D int ClientClassInit<DT_FuncConveyor::ignored>(DT_FuncConveyor::ignored*)::RecvProps
 D int ClientClassInit<DT_FuncLadder::ignored>(DT_FuncLadder::ignored*)::RecvProps
 D int ClientClassInit<DT_FuncMonitor::ignored>(DT_FuncMonitor::ignored*)::RecvProps
 D int ClientClassInit<DT_FuncOccluder::ignored>(DT_FuncOccluder::ignored*)::RecvProps
 D int ClientClassInit<DT_FuncReflectiveGlass::ignored>(DT_FuncReflectiveGlass::ignored*)::RecvProps
 D int ClientClassInit<DT_FuncRotating::ignored>(DT_FuncRotating::ignored*)::RecvProps
 D int ClientClassInit<DT_FuncSmokeVolume::ignored>(DT_FuncSmokeVolume::ignored*)::RecvProps
 D int ClientClassInit<DT_FuncTrackTrain::ignored>(DT_FuncTrackTrain::ignored*)::RecvProps
 D int ClientClassInit<DT_Func_Dust::ignored>(DT_Func_Dust::ignored*)::RecvProps
 D int ClientClassInit<DT_Func_LOD::ignored>(DT_Func_LOD::ignored*)::RecvProps
 D int ClientClassInit<DT_GameRulesProxy::ignored>(DT_GameRulesProxy::ignored*)::RecvProps
 D int ClientClassInit<DT_HL2GameRules::ignored>(DT_HL2GameRules::ignored*)::RecvProps
 D int ClientClassInit<DT_HL2Local::ignored>(DT_HL2Local::ignored*)::RecvProps
 D int ClientClassInit<DT_HL2_Player::ignored>(DT_HL2_Player::ignored*)::RecvProps
 D int ClientClassInit<DT_HLMachineGun::ignored>(DT_HLMachineGun::ignored*)::RecvProps
 D int ClientClassInit<DT_HLSelectFireMachineGun::ignored>(DT_HLSelectFireMachineGun::ignored*)::RecvProps
 D int ClientClassInit<DT_HalfLife2Proxy::ignored>(DT_HalfLife2Proxy::ignored*)::RecvProps
 D int ClientClassInit<DT_HandleTest::ignored>(DT_HandleTest::ignored*)::RecvProps
 D int ClientClassInit<DT_InfoLadderDismount::ignored>(DT_InfoLadderDismount::ignored*)::RecvProps
 D int ClientClassInit<DT_InfoLightingRelative::ignored>(DT_InfoLightingRelative::ignored*)::RecvProps
 D int ClientClassInit<DT_InfoOverlayAccessor::ignored>(DT_InfoOverlayAccessor::ignored*)::RecvProps
 D int ClientClassInit<DT_InfoTeleporterCountdown::ignored>(DT_InfoTeleporterCountdown::ignored*)::RecvProps
 D int ClientClassInit<DT_LightGlow::ignored>(DT_LightGlow::ignored*)::RecvProps
 D int ClientClassInit<DT_Local::ignored>(DT_Local::ignored*)::RecvProps
 D int ClientClassInit<DT_LocalActiveWeaponData::ignored>(DT_LocalActiveWeaponData::ignored*)::RecvProps
 D int ClientClassInit<DT_LocalPlayerExclusive::ignored>(DT_LocalPlayerExclusive::ignored*)::RecvProps
 D int ClientClassInit<DT_LocalWeaponData::ignored>(DT_LocalWeaponData::ignored*)::RecvProps
 D int ClientClassInit<DT_MaterialModifyControl::ignored>(DT_MaterialModifyControl::ignored*)::RecvProps
 D int ClientClassInit<DT_MortarShell::ignored>(DT_MortarShell::ignored*)::RecvProps
 D int ClientClassInit<DT_MovieExplosion::ignored>(DT_MovieExplosion::ignored*)::RecvProps
 D int ClientClassInit<DT_NPC_AntlionGuard::ignored>(DT_NPC_AntlionGuard::ignored*)::RecvProps
 D int ClientClassInit<DT_NPC_Barney::ignored>(DT_NPC_Barney::ignored*)::RecvProps
 D int ClientClassInit<DT_NPC_Manhack::ignored>(DT_NPC_Manhack::ignored*)::RecvProps
 D int ClientClassInit<DT_NPC_Strider::ignored>(DT_NPC_Strider::ignored*)::RecvProps
 D int ClientClassInit<DT_NPC_Vortigaunt::ignored>(DT_NPC_Vortigaunt::ignored*)::RecvProps
 D int ClientClassInit<DT_OverlayVars::ignored>(DT_OverlayVars::ignored*)::RecvProps
 D int ClientClassInit<DT_ParticleFire::ignored>(DT_ParticleFire::ignored*)::RecvProps
 D int ClientClassInit<DT_ParticlePerformanceMonitor::ignored>(DT_ParticlePerformanceMonitor::ignored*)::RecvProps
 D int ClientClassInit<DT_ParticleProperty::ignored>(DT_ParticleProperty::ignored*)::RecvProps
 D int ClientClassInit<DT_ParticleSmokeGrenade::ignored>(DT_ParticleSmokeGrenade::ignored*)::RecvProps
 D int ClientClassInit<DT_ParticleSystem::ignored>(DT_ParticleSystem::ignored*)::RecvProps
 D int ClientClassInit<DT_PhysBox::ignored>(DT_PhysBox::ignored*)::RecvProps
 D int ClientClassInit<DT_PhysBoxMultiplayer::ignored>(DT_PhysBoxMultiplayer::ignored*)::RecvProps
 D int ClientClassInit<DT_PhysMagnet::ignored>(DT_PhysMagnet::ignored*)::RecvProps
 D int ClientClassInit<DT_PhysicsProp::ignored>(DT_PhysicsProp::ignored*)::RecvProps
 D int ClientClassInit<DT_PhysicsPropMultiplayer::ignored>(DT_PhysicsPropMultiplayer::ignored*)::RecvProps
 D int ClientClassInit<DT_Plasma::ignored>(DT_Plasma::ignored*)::RecvProps
 D int ClientClassInit<DT_PlasmaBeamNode::ignored>(DT_PlasmaBeamNode::ignored*)::RecvProps
 D int ClientClassInit<DT_PlayerResource::ignored>(DT_PlayerResource::ignored*)::RecvProps
 D int ClientClassInit<DT_PlayerState::ignored>(DT_PlayerState::ignored*)::RecvProps
 D int ClientClassInit<DT_PointCamera::ignored>(DT_PointCamera::ignored*)::RecvProps
 D int ClientClassInit<DT_PointCommentaryNode::ignored>(DT_PointCommentaryNode::ignored*)::RecvProps
 D int ClientClassInit<DT_PoseController::ignored>(DT_PoseController::ignored*)::RecvProps
 D int ClientClassInit<DT_Precipitation::ignored>(DT_Precipitation::ignored*)::RecvProps
 D int ClientClassInit<DT_PredictableId::ignored>(DT_PredictableId::ignored*)::RecvProps
 D int ClientClassInit<DT_PropAirboat::ignored>(DT_PropAirboat::ignored*)::RecvProps
 D int ClientClassInit<DT_PropCannon::ignored>(DT_PropCannon::ignored*)::RecvProps
 D int ClientClassInit<DT_PropCombineBall::ignored>(DT_PropCombineBall::ignored*)::RecvProps
 D int ClientClassInit<DT_PropCrane::ignored>(DT_PropCrane::ignored*)::RecvProps
 D int ClientClassInit<DT_PropJeep::ignored>(DT_PropJeep::ignored*)::RecvProps
 D int ClientClassInit<DT_PropVehicleChoreoGeneric::ignored>(DT_PropVehicleChoreoGeneric::ignored*)::RecvProps
 D int ClientClassInit<DT_PropVehicleDriveable::ignored>(DT_PropVehicleDriveable::ignored*)::RecvProps
 D int ClientClassInit<DT_PropVehiclePrisonerPod::ignored>(DT_PropVehiclePrisonerPod::ignored*)::RecvProps
 D int ClientClassInit<DT_ProxyToggle::ignored>(DT_ProxyToggle::ignored*)::RecvProps
 D int ClientClassInit<DT_ProxyToggle_ProxiedData::ignored>(DT_ProxyToggle_ProxiedData::ignored*)::RecvProps
 D int ClientClassInit<DT_QuadraticBeam::ignored>(DT_QuadraticBeam::ignored*)::RecvProps
 D int ClientClassInit<DT_Ragdoll::ignored>(DT_Ragdoll::ignored*)::RecvProps
 D int ClientClassInit<DT_RagdollManager::ignored>(DT_RagdollManager::ignored*)::RecvProps
 D int ClientClassInit<DT_Ragdoll_Attached::ignored>(DT_Ragdoll_Attached::ignored*)::RecvProps
 D int ClientClassInit<DT_RocketTrail::ignored>(DT_RocketTrail::ignored*)::RecvProps
 D int ClientClassInit<DT_RollerMine::ignored>(DT_RollerMine::ignored*)::RecvProps
 D int ClientClassInit<DT_RopeKeyframe::ignored>(DT_RopeKeyframe::ignored*)::RecvProps
 D int ClientClassInit<DT_RotorWashEmitter::ignored>(DT_RotorWashEmitter::ignored*)::RecvProps
 D int ClientClassInit<DT_SceneEntity::ignored>(DT_SceneEntity::ignored*)::RecvProps
 D int ClientClassInit<DT_ScriptIntro::ignored>(DT_ScriptIntro::ignored*)::RecvProps
 D int ClientClassInit<DT_ServerAnimationData::ignored>(DT_ServerAnimationData::ignored*)::RecvProps
 D int ClientClassInit<DT_ShadowControl::ignored>(DT_ShadowControl::ignored*)::RecvProps
 D int ClientClassInit<DT_SlideshowDisplay::ignored>(DT_SlideshowDisplay::ignored*)::RecvProps
 D int ClientClassInit<DT_SmokeStack::ignored>(DT_SmokeStack::ignored*)::RecvProps
 D int ClientClassInit<DT_SmokeTrail::ignored>(DT_SmokeTrail::ignored*)::RecvProps
 D int ClientClassInit<DT_SporeExplosion::ignored>(DT_SporeExplosion::ignored*)::RecvProps
 D int ClientClassInit<DT_SporeTrail::ignored>(DT_SporeTrail::ignored*)::RecvProps
 D int ClientClassInit<DT_SpotlightEnd::ignored>(DT_SpotlightEnd::ignored*)::RecvProps
 D int ClientClassInit<DT_Sprite::ignored>(DT_Sprite::ignored*)::RecvProps
 D int ClientClassInit<DT_SpriteOriented::ignored>(DT_SpriteOriented::ignored*)::RecvProps
 D int ClientClassInit<DT_SpriteTrail::ignored>(DT_SpriteTrail::ignored*)::RecvProps
 D int ClientClassInit<DT_SteamJet::ignored>(DT_SteamJet::ignored*)::RecvProps
 D int ClientClassInit<DT_Sun::ignored>(DT_Sun::ignored*)::RecvProps
 D int ClientClassInit<DT_TEAntlionDust::ignored>(DT_TEAntlionDust::ignored*)::RecvProps
 D int ClientClassInit<DT_TEArmorRicochet::ignored>(DT_TEArmorRicochet::ignored*)::RecvProps
 D int ClientClassInit<DT_TEBSPDecal::ignored>(DT_TEBSPDecal::ignored*)::RecvProps
 D int ClientClassInit<DT_TEBeamEntPoint::ignored>(DT_TEBeamEntPoint::ignored*)::RecvProps
 D int ClientClassInit<DT_TEBeamEnts::ignored>(DT_TEBeamEnts::ignored*)::RecvProps
 D int ClientClassInit<DT_TEBeamFollow::ignored>(DT_TEBeamFollow::ignored*)::RecvProps
 D int ClientClassInit<DT_TEBeamLaser::ignored>(DT_TEBeamLaser::ignored*)::RecvProps
 D int ClientClassInit<DT_TEBeamPoints::ignored>(DT_TEBeamPoints::ignored*)::RecvProps
 D int ClientClassInit<DT_TEBeamRing::ignored>(DT_TEBeamRing::ignored*)::RecvProps
 D int ClientClassInit<DT_TEBeamRingPoint::ignored>(DT_TEBeamRingPoint::ignored*)::RecvProps
 D int ClientClassInit<DT_TEBeamSpline::ignored>(DT_TEBeamSpline::ignored*)::RecvProps
 D int ClientClassInit<DT_TEBloodSprite::ignored>(DT_TEBloodSprite::ignored*)::RecvProps
 D int ClientClassInit<DT_TEBloodStream::ignored>(DT_TEBloodStream::ignored*)::RecvProps
 D int ClientClassInit<DT_TEBreakModel::ignored>(DT_TEBreakModel::ignored*)::RecvProps
 D int ClientClassInit<DT_TEBubbleTrail::ignored>(DT_TEBubbleTrail::ignored*)::RecvProps
 D int ClientClassInit<DT_TEBubbles::ignored>(DT_TEBubbles::ignored*)::RecvProps
 D int ClientClassInit<DT_TEClientProjectile::ignored>(DT_TEClientProjectile::ignored*)::RecvProps
 D int ClientClassInit<DT_TEConcussiveExplosion::ignored>(DT_TEConcussiveExplosion::ignored*)::RecvProps
 D int ClientClassInit<DT_TEDecal::ignored>(DT_TEDecal::ignored*)::RecvProps
 D int ClientClassInit<DT_TEDust::ignored>(DT_TEDust::ignored*)::RecvProps
 D int ClientClassInit<DT_TEDynamicLight::ignored>(DT_TEDynamicLight::ignored*)::RecvProps
 D int ClientClassInit<DT_TEEffectDispatch::ignored>(DT_TEEffectDispatch::ignored*)::RecvProps
 D int ClientClassInit<DT_TEEnergySplash::ignored>(DT_TEEnergySplash::ignored*)::RecvProps
 D int ClientClassInit<DT_TEExplosion::ignored>(DT_TEExplosion::ignored*)::RecvProps
 D int ClientClassInit<DT_TEFizz::ignored>(DT_TEFizz::ignored*)::RecvProps
 D int ClientClassInit<DT_TEFootprintDecal::ignored>(DT_TEFootprintDecal::ignored*)::RecvProps
 D int ClientClassInit<DT_TEGaussExplosion::ignored>(DT_TEGaussExplosion::ignored*)::RecvProps
 D int ClientClassInit<DT_TEGlowSprite::ignored>(DT_TEGlowSprite::ignored*)::RecvProps
 D int ClientClassInit<DT_TEImpact::ignored>(DT_TEImpact::ignored*)::RecvProps
 D int ClientClassInit<DT_TEKillPlayerAttachments::ignored>(DT_TEKillPlayerAttachments::ignored*)::RecvProps
 D int ClientClassInit<DT_TELargeFunnel::ignored>(DT_TELargeFunnel::ignored*)::RecvProps
 D int ClientClassInit<DT_TEMetalSparks::ignored>(DT_TEMetalSparks::ignored*)::RecvProps
 D int ClientClassInit<DT_TEMuzzleFlash::ignored>(DT_TEMuzzleFlash::ignored*)::RecvProps
 D int ClientClassInit<DT_TEParticleSystem::ignored>(DT_TEParticleSystem::ignored*)::RecvProps
 D int ClientClassInit<DT_TEPhysicsProp::ignored>(DT_TEPhysicsProp::ignored*)::RecvProps
 D int ClientClassInit<DT_TEPlayerDecal::ignored>(DT_TEPlayerDecal::ignored*)::RecvProps
 D int ClientClassInit<DT_TEProjectedDecal::ignored>(DT_TEProjectedDecal::ignored*)::RecvProps
 D int ClientClassInit<DT_TEShatterSurface::ignored>(DT_TEShatterSurface::ignored*)::RecvProps
 D int ClientClassInit<DT_TEShowLine::ignored>(DT_TEShowLine::ignored*)::RecvProps
 D int ClientClassInit<DT_TESmoke::ignored>(DT_TESmoke::ignored*)::RecvProps
 D int ClientClassInit<DT_TESparks::ignored>(DT_TESparks::ignored*)::RecvProps
 D int ClientClassInit<DT_TESprite::ignored>(DT_TESprite::ignored*)::RecvProps
 D int ClientClassInit<DT_TESpriteSpray::ignored>(DT_TESpriteSpray::ignored*)::RecvProps
 D int ClientClassInit<DT_TEWorldDecal::ignored>(DT_TEWorldDecal::ignored*)::RecvProps
 D int ClientClassInit<DT_Team::ignored>(DT_Team::ignored*)::RecvProps
 D int ClientClassInit<DT_TeamplayRoundBasedRules::ignored>(DT_TeamplayRoundBasedRules::ignored*)::RecvProps
 D int ClientClassInit<DT_TeamplayRoundBasedRulesProxy::ignored>(DT_TeamplayRoundBasedRulesProxy::ignored*)::RecvProps
 D int ClientClassInit<DT_Tesla::ignored>(DT_Tesla::ignored*)::RecvProps
 D int ClientClassInit<DT_TestTraceline::ignored>(DT_TestTraceline::ignored*)::RecvProps
 D int ClientClassInit<DT_VGuiScreen::ignored>(DT_VGuiScreen::ignored*)::RecvProps
 D int ClientClassInit<DT_VortigauntChargeToken::ignored>(DT_VortigauntChargeToken::ignored*)::RecvProps
 D int ClientClassInit<DT_VortigauntEffectDispel::ignored>(DT_VortigauntEffectDispel::ignored*)::RecvProps
 D int ClientClassInit<DT_VoteController::ignored>(DT_VoteController::ignored*)::RecvProps
 D int ClientClassInit<DT_WaterBullet::ignored>(DT_WaterBullet::ignored*)::RecvProps
 D int ClientClassInit<DT_WaterLODControl::ignored>(DT_WaterLODControl::ignored*)::RecvProps
 D int ClientClassInit<DT_Weapon357::ignored>(DT_Weapon357::ignored*)::RecvProps
 D int ClientClassInit<DT_WeaponAR2::ignored>(DT_WeaponAR2::ignored*)::RecvProps
 D int ClientClassInit<DT_WeaponAlyxGun::ignored>(DT_WeaponAlyxGun::ignored*)::RecvProps
 D int ClientClassInit<DT_WeaponAnnabelle::ignored>(DT_WeaponAnnabelle::ignored*)::RecvProps
 D int ClientClassInit<DT_WeaponBinoculars::ignored>(DT_WeaponBinoculars::ignored*)::RecvProps
 D int ClientClassInit<DT_WeaponBugBait::ignored>(DT_WeaponBugBait::ignored*)::RecvProps
 D int ClientClassInit<DT_WeaponCitizenPackage::ignored>(DT_WeaponCitizenPackage::ignored*)::RecvProps
 D int ClientClassInit<DT_WeaponCitizenSuitcase::ignored>(DT_WeaponCitizenSuitcase::ignored*)::RecvProps
 D int ClientClassInit<DT_WeaponCrossbow::ignored>(DT_WeaponCrossbow::ignored*)::RecvProps
 D int ClientClassInit<DT_WeaponCrowbar::ignored>(DT_WeaponCrowbar::ignored*)::RecvProps
 D int ClientClassInit<DT_WeaponCubemap::ignored>(DT_WeaponCubemap::ignored*)::RecvProps
 D int ClientClassInit<DT_WeaponCycler::ignored>(DT_WeaponCycler::ignored*)::RecvProps
 D int ClientClassInit<DT_WeaponFrag::ignored>(DT_WeaponFrag::ignored*)::RecvProps
 D int ClientClassInit<DT_WeaponGaussGun::ignored>(DT_WeaponGaussGun::ignored*)::RecvProps
 D int ClientClassInit<DT_WeaponPhysCannon::ignored>(DT_WeaponPhysCannon::ignored*)::RecvProps
 D int ClientClassInit<DT_WeaponPistol::ignored>(DT_WeaponPistol::ignored*)::RecvProps
 D int ClientClassInit<DT_WeaponRPG::ignored>(DT_WeaponRPG::ignored*)::RecvProps
 D int ClientClassInit<DT_WeaponSMG1::ignored>(DT_WeaponSMG1::ignored*)::RecvProps
 D int ClientClassInit<DT_WeaponShotgun::ignored>(DT_WeaponShotgun::ignored*)::RecvProps
 D int ClientClassInit<DT_WeaponStunStick::ignored>(DT_WeaponStunStick::ignored*)::RecvProps
 D int ClientClassInit<DT_Weapon_SLAM::ignored>(DT_Weapon_SLAM::ignored*)::RecvProps
 D int ClientClassInit<DT_World::ignored>(DT_World::ignored*)::RecvProps
 D internalCenterPrint
 D k_flMaxEntityEulerAngle
 D k_flMaxEntityPosCoord
 D k_flMaxEntitySpeed
 D loadingdisc
 D m_pitch
 D messagechars
 D modemanager
 D netgraphpanel
 D pWeaponSoundCategories
 D pfFastCos
 D pfFastSinCos
 D pfInvRSquared
 D pfRSqrt
 D pfRSqrtFast
 D pfSqrt
 D pfVectorNormalize
 D pfVectorNormalizeFast
 D physgametrace
 D player_info_s::m_DataMap
 D power2_n
 D predictables
 D prediction
 D pszAntlionGibs_Medium
 D pszAntlionGibs_Small
 D pszAntlionGibs_Unique
 D ramp1
 D ramp2
 D ramp3
 D randomgaussian
 D recordinglist
 D sPropdataInteractionSections
 D s_ClientElementNames
 D s_m_iv_AnimOverlayNames
 D s_pRandomFloats
 D screenfade_t::m_DataMap
 D screenshake_t::m_DataMap
 D steamapicontext
 D te
 D tempents
 D typeinfo for AshDebrisEffect
 D typeinfo for Beam_t
 D typeinfo for BitmapImage
 D typeinfo for BlankImage
 D typeinfo for CAboveWaterView
 D typeinfo for CAboveWaterView::CIntersectionView
 D typeinfo for CAboveWaterView::CReflectionView
 D typeinfo for CAboveWaterView::CRefractionView
 D typeinfo for CAbsProxy
 D typeinfo for CAchievementMgr
 D typeinfo for CAchievementNotificationPanel
 D typeinfo for CAchievementSaveThread
 D typeinfo for CAddGeneralRandomRotation
 D typeinfo for CAddProxy
 D typeinfo for CAlphaMaterialProxy
 D typeinfo for CAmmoDef
 D typeinfo for CAnimateSpecificTexture
 D typeinfo for CAnimatedEntityTextureProxy
 D typeinfo for CAnimatedOffsetTextureProxy
 D typeinfo for CAnimatedTextureProxy
 D typeinfo for CAntlionGibManager
 D typeinfo for CAsyncCaptionResourceManager
 D typeinfo for CAutoGameSystem
 D typeinfo for CAutoGameSystemPerFrame
 D typeinfo for CAvatarImage
 D typeinfo for CAvatarImagePanel
 D typeinfo for CBase3dView
 D typeinfo for CBaseAnimatedTextureProxy
 D typeinfo for CBaseAppSystem<IClientVirtualReality>
 D typeinfo for CBaseAppSystem<IParticleSystemQuery>
 D typeinfo for CBaseEntityList
 D typeinfo for CBaseGameStats
 D typeinfo for CBaseGameStats_Driver
 D typeinfo for CBaseGameSystem
 D typeinfo for CBaseGameSystemPerFrame
 D typeinfo for CBaseHudChat
 D typeinfo for CBaseHudChatEntry
 D typeinfo for CBaseHudChatInputLine
 D typeinfo for CBaseHudChatLine
 D typeinfo for CBaseHudWeaponSelection
 D typeinfo for CBaseManipulator
 D typeinfo for CBaseModelPanel
 D typeinfo for CBasePresence
 D typeinfo for CBaseRopePhysics
 D typeinfo for CBaseSimpleCollision
 D typeinfo for CBaseToggleTextureProxy
 D typeinfo for CBaseViewport
 D typeinfo for CBaseViewport::CBackGroundPanel
 D typeinfo for CBaseWaterView
 D typeinfo for CBaseWaterView::CSoftwareIntersectionView
 D typeinfo for CBaseWorldView
 D typeinfo for CBeamSegDraw
 D typeinfo for CBitmapButton
 D typeinfo for CBitmapPanel
 D typeinfo for CBloodSprayEmitter
 D typeinfo for CBoolProperty
 D typeinfo for CBorderVisualizerPanel
 D typeinfo for CBoundedCvar_Interp
 D typeinfo for CBoundedCvar_InterpRatio
 D typeinfo for CBoundedCvar_Predict
 D typeinfo for CBreakParser
 D typeinfo for CBreakableSurfaceProxy
 D typeinfo for CBroadcastRecipientFilter
 D typeinfo for CBuildModeNavCombo
 D typeinfo for CBulletWhizTimer
 D typeinfo for CCallback<CAvatarImage, PersonaStateChange_t, false>
 D typeinfo for CCallback<CClientSteamContext, SteamServerConnectFailure_t, false>
 D typeinfo for CCallback<CClientSteamContext, SteamServersConnected_t, false>
 D typeinfo for CCallback<CClientSteamContext, SteamServersDisconnected_t, false>
 D typeinfo for CCallbackBase
 D typeinfo for CCallbackImpl<12>
 D typeinfo for CCallbackImpl<1>
 D typeinfo for CCallbackImpl<4>
 D typeinfo for CCallbackImpl<8>
 D typeinfo for CCamoMaterialProxy
 D typeinfo for CCamoTextureRegen
 D typeinfo for CCenterPrint
 D typeinfo for CCenterStringLabel
 D typeinfo for CChildOperatorDefinition
 D typeinfo for CChoreoEvent
 D typeinfo for CChoreoScene
 D typeinfo for CChoreoStringPool
 D typeinfo for CClampProxy
 D typeinfo for CClassMap
 D typeinfo for CClassPtrSaveRestoreOps
 D typeinfo for CClientDLLSharedAppSystems
 D typeinfo for CClientEffect
 D typeinfo for CClientEffectPrecacheSystem
 D typeinfo for CClientEntityList
 D typeinfo for CClientLeafSubSystemData
 D typeinfo for CClientLeafSystem
 D typeinfo for CClientRenderablesList
 D typeinfo for CClientScoreBoardDialog
 D typeinfo for CClientShadowMgr
 D typeinfo for CClientSideEffect
 D typeinfo for CClientThinkList
 D typeinfo for CClientTools
 D typeinfo for CClientVirtualReality
 D typeinfo for CClient_Precipitation
 D typeinfo for CCollisionEvent
 D typeinfo for CCollisionProperty
 D typeinfo for CColorCorrectionMgr
 D typeinfo for CColorProperty
 D typeinfo for CColorVisualizerPanel
 D typeinfo for CCombatCharVisCache
 D typeinfo for CCommentaryModelPanel
 D typeinfo for CCommentaryModelViewer
 D typeinfo for CConCommandMemberAccessor<CBasePresence>
 D typeinfo for CConveyorMaterialProxy
 D typeinfo for CCopyRecipientFilter
 D typeinfo for CCopyableUtlVector<ModelPoseDebugInfo::InfoText, CUtlMemory<ModelPoseDebugInfo::InfoText, int> >
 D typeinfo for CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>
 D typeinfo for CDataManagerBase
 D typeinfo for CDataObjectAccessSystem
 D typeinfo for CDebugOverlay
 D typeinfo for CDebugOverlayPanel
 D typeinfo for CDecalEmitterSystem
 D typeinfo for CDefSaveRestoreBlockHandler
 D typeinfo for CDefSaveRestoreOps
 D typeinfo for CDefaultAccessor
 D typeinfo for CDefaultClientRenderable
 D typeinfo for CDefaultDataCacheClient
 D typeinfo for CDefaultParticleSystemQuery
 D typeinfo for CDetailModel
 D typeinfo for CDetailObjectSystem
 D typeinfo for CDirtySpatialPartitionEntityList
 D typeinfo for CDivideProxy
 D typeinfo for CDllDemandLoader
 D typeinfo for CDragDropHelperPanel
 D typeinfo for CDummyMaterialProxy
 D typeinfo for CDustEffect
 D typeinfo for CDustFollower
 D typeinfo for CDustParticle
 D typeinfo for CEZParticleInit
 D typeinfo for CEffectsClient
 D typeinfo for CEffectsList
 D typeinfo for CEmberEffect
 D typeinfo for CEmberEmitter
 D typeinfo for CEmptyConVar
 D typeinfo for CEmptyProxy
 D typeinfo for CEnginePostMaterialProxy
 D typeinfo for CEntityDataInstantiator<CWatcherList>
 D typeinfo for CEntityDataInstantiator<ModelScale>
 D typeinfo for CEntityDataInstantiator<StepSimulationData>
 D typeinfo for CEntityDataInstantiator<groundlink_t>
 D typeinfo for CEntityDataInstantiator<physicspushlist_t>
 D typeinfo for CEntityDataInstantiator<touchlink_t>
 D typeinfo for CEntityDataInstantiator<vphysicsupdateai_t>
 D typeinfo for CEntityMaterialProxy
 D typeinfo for CEntityOriginAlyxMaterialProxy
 D typeinfo for CEntityOriginMaterialProxy
 D typeinfo for CEntityRandomProxy
 D typeinfo for CEntitySaveRestoreBlockHandler
 D typeinfo for CEntitySaveUtils
 D typeinfo for CEntitySpeedProxy
 D typeinfo for CEnvHeadcrabCanisterShared
 D typeinfo for CEnvWindShared
 D typeinfo for CEp1IntroVortRefractMaterialProxy
 D typeinfo for CEqualsProxy
 D typeinfo for CExampleEffect
 D typeinfo for CExplosionOverlay
 D typeinfo for CExplosionParticle
 D typeinfo for CExponentialProxy
 D typeinfo for CFPS
 D typeinfo for CFPSPanel
 D typeinfo for CFXDiscreetLine
 D typeinfo for CFXLine
 D typeinfo for CFXQuad
 D typeinfo for CFXStaticLine
 D typeinfo for CFastDetailLeafSpriteList
 D typeinfo for CFireParticle
 D typeinfo for CFireSmokeEffect
 D typeinfo for CFlaggedEntitiesEnum
 D typeinfo for CFlashlightEffect
 D typeinfo for CFleckParticles
 D typeinfo for CFlexAnimationTrack
 D typeinfo for CFlexSceneFileManager
 D typeinfo for CFloatProperty
 D typeinfo for CFmtStrN<256, false>
 D typeinfo for CFracProxy
 D typeinfo for CFreezeFrameView
 D typeinfo for CFunctionProxy
 D typeinfo for CFunctor
 D typeinfo for CFunctor6<void (*)(int, int, int, int, bool, bool), int, int, int, int, bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D typeinfo for CGameClientExports
 D typeinfo for CGameEventListener
 D typeinfo for CGameMovement
 D typeinfo for CGameStringPool
 D typeinfo for CGaussianNoiseProxy
 D typeinfo for CGeneralRandomRotation
 D typeinfo for CGeneralSpin
 D typeinfo for CGlowOverlay
 D typeinfo for CGlowOverlaySystem
 D typeinfo for CHFontProperty
 D typeinfo for CHL2GameMovement
 D typeinfo for CHLClient
 D typeinfo for CHLInput
 D typeinfo for CHLModeManager
 D typeinfo for CHLVoiceStatusHelper
 D typeinfo for CHUDAutoAim
 D typeinfo for CHUDQuickInfo
 D typeinfo for CHeadlightEffect
 D typeinfo for CHeliBladeMaterialProxy
 D typeinfo for CHudAmmo
 D typeinfo for CHudAnimationInfo
 D typeinfo for CHudBattery
 D typeinfo for CHudChat
 D typeinfo for CHudChatFilterButton
 D typeinfo for CHudChatFilterCheckButton
 D typeinfo for CHudChatFilterPanel
 D typeinfo for CHudChatHistory
 D typeinfo for CHudCloseCaption
 D typeinfo for CHudCommentary
 D typeinfo for CHudCredits
 D typeinfo for CHudCrosshair
 D typeinfo for CHudDamageIndicator
 D typeinfo for CHudDeathNotice
 D typeinfo for CHudElement
 D typeinfo for CHudFilmDemo
 D typeinfo for CHudGeiger
 D typeinfo for CHudHDRDemo
 D typeinfo for CHudHealth
 D typeinfo for CHudHintDisplay
 D typeinfo for CHudHintKeyDisplay
 D typeinfo for CHudHistoryResource
 D typeinfo for CHudMenu
 D typeinfo for CHudMessage
 D typeinfo for CHudNumericDisplay
 D typeinfo for CHudPoisonDamageIndicator
 D typeinfo for CHudPosture
 D typeinfo for CHudSecondaryAmmo
 D typeinfo for CHudSquadStatus
 D typeinfo for CHudSuitPower
 D typeinfo for CHudTextMessage
 D typeinfo for CHudTexture
 D typeinfo for CHudTextureHandleProperty
 D typeinfo for CHudTrain
 D typeinfo for CHudVehicle
 D typeinfo for CHudViewport
 D typeinfo for CHudWeapon
 D typeinfo for CHudWeaponSelection
 D typeinfo for CHudZoom
 D typeinfo for CIconPanel
 D typeinfo for CImpactOverlay
 D typeinfo for CInput
 D typeinfo for CIntProperty
 D typeinfo for CIntProxy
 D typeinfo for CInterpolatedVar<C_AnimationLayer>
 D typeinfo for CInterpolatedVar<QAngle>
 D typeinfo for CInterpolatedVar<Vector>
 D typeinfo for CInterpolatedVar<float>
 D typeinfo for CInterpolatedVarArray<QAngle, 24>
 D typeinfo for CInterpolatedVarArray<Vector, 24>
 D typeinfo for CInterpolatedVarArray<Vector, 6>
 D typeinfo for CInterpolatedVarArray<float, 24>
 D typeinfo for CInterpolatedVarArray<float, 4>
 D typeinfo for CInterpolatedVarArray<float, 96>
 D typeinfo for CInterpolatedVarArrayBase<C_AnimationLayer, false>
 D typeinfo for CInterpolatedVarArrayBase<QAngle, false>
 D typeinfo for CInterpolatedVarArrayBase<QAngle, true>
 D typeinfo for CInterpolatedVarArrayBase<Vector, false>
 D typeinfo for CInterpolatedVarArrayBase<Vector, true>
 D typeinfo for CInterpolatedVarArrayBase<float, false>
 D typeinfo for CInterpolatedVarArrayBase<float, true>
 D typeinfo for CLCD
 D typeinfo for CLCDItem
 D typeinfo for CLCDItemAggregate
 D typeinfo for CLCDItemIcon
 D typeinfo for CLCDItemText
 D typeinfo for CLCDPage
 D typeinfo for CLampBeamProxy
 D typeinfo for CLampHaloProxy
 D typeinfo for CLessOrEqualProxy
 D typeinfo for CLightmapDebugView
 D typeinfo for CLinearRampProxy
 D typeinfo for CLoadingDisc
 D typeinfo for CLoadingDiscPanel
 D typeinfo for CLocalPlayerFilter
 D typeinfo for CLocalSpaceEmitter
 D typeinfo for CMDLPanel
 D typeinfo for CManagedDataCacheClient<AsyncCaptionData_t, asynccaptionparams_t, AsyncCaptionData_t*>
 D typeinfo for CMaterialModifyAnimatedProxy
 D typeinfo for CMaterialModifyProxy
 D typeinfo for CMatrixRotateProxy
 D typeinfo for CMemberFunctor0<CParallelProcessor<CNewParticleEffect*, CFuncJobItemProcessor<CNewParticleEffect*> >*, void (CParallelProcessor<CNewParticleEffect*, CFuncJobItemProcessor<CNewParticleEffect*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor0<CParallelProcessor<C_BaseAnimating*, CFuncJobItemProcessor<C_BaseAnimating*> >*, void (CParallelProcessor<C_BaseAnimating*, CFuncJobItemProcessor<C_BaseAnimating*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMemberFunctor6<CRopeManager*, void (CRopeManager::*)(bool, CRopeManager::RopeRenderData_t*, int, Vector const&, Vector const&, C_RopeKeyframe::BuildRopeQueuedData_t*), bool, CRopeManager::RopeRenderData_t*, int, Vector, Vector, C_RopeKeyframe::BuildRopeQueuedData_t*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D typeinfo for CMessageChars
 D typeinfo for CMessageCharsPanel
 D typeinfo for CModelPanel
 D typeinfo for CModelPanelModel
 D typeinfo for CMotionBlurMaterialProxy
 D typeinfo for CMouthInfo
 D typeinfo for CMoveHelperClient
 D typeinfo for CMultiplyProxy
 D typeinfo for CMumbleSystem
 D typeinfo for CNavProgress
 D typeinfo for CNetGraphPanel
 D typeinfo for CNetGraphPanelInterface
 D typeinfo for CNewParticleEffect
 D typeinfo for CPASAttenuationFilter
 D typeinfo for CPASFilter
 D typeinfo for CPDumpPanel
 D typeinfo for CPVSFilter
 D typeinfo for CPanelFactory<CSlideshowDisplayScreen, VGuiScreenInitData_t>
 D typeinfo for CPanelFactory<CTeleportCountdownScreen, VGuiScreenInitData_t>
 D typeinfo for CPanelFactory<CVGuiScreenPanel, VGuiScreenInitData_t>
 D typeinfo for CPanelMetaClassMgrImp
 D typeinfo for CParticleAttractor
 D typeinfo for CParticleCollection
 D typeinfo for CParticleCollision
 D typeinfo for CParticleEffect
 D typeinfo for CParticleEffectBinding
 D typeinfo for CParticleMgr
 D typeinfo for CParticleOperatorDefinition<C_INIT_AgeNoise>
 D typeinfo for CParticleOperatorDefinition<C_INIT_CreateAlongPath>
 D typeinfo for CParticleOperatorDefinition<C_INIT_CreateFromParentParticles>
 D typeinfo for CParticleOperatorDefinition<C_INIT_CreateFromPlaneCache>
 D typeinfo for CParticleOperatorDefinition<C_INIT_CreateInHierarchy>
 D typeinfo for CParticleOperatorDefinition<C_INIT_CreateOnModel>
 D typeinfo for CParticleOperatorDefinition<C_INIT_CreateSequentialPath>
 D typeinfo for CParticleOperatorDefinition<C_INIT_CreateWithinBox>
 D typeinfo for CParticleOperatorDefinition<C_INIT_CreateWithinSphere>
 D typeinfo for CParticleOperatorDefinition<C_INIT_CreationNoise>
 D typeinfo for CParticleOperatorDefinition<C_INIT_DistanceToCPInit>
 D typeinfo for CParticleOperatorDefinition<C_INIT_InheritVelocity>
 D typeinfo for CParticleOperatorDefinition<C_INIT_InitialRepulsionVelocity>
 D typeinfo for CParticleOperatorDefinition<C_INIT_InitialVelocityNoise>
 D typeinfo for CParticleOperatorDefinition<C_INIT_LifespanFromVelocity>
 D typeinfo for CParticleOperatorDefinition<C_INIT_MoveBetweenPoints>
 D typeinfo for CParticleOperatorDefinition<C_INIT_PositionOffset>
 D typeinfo for CParticleOperatorDefinition<C_INIT_PositionWarp>
 D typeinfo for CParticleOperatorDefinition<C_INIT_RandomAlpha>
 D typeinfo for CParticleOperatorDefinition<C_INIT_RandomColor>
 D typeinfo for CParticleOperatorDefinition<C_INIT_RandomLifeTime>
 D typeinfo for CParticleOperatorDefinition<C_INIT_RandomRadius>
 D typeinfo for CParticleOperatorDefinition<C_INIT_RandomRotation>
 D typeinfo for CParticleOperatorDefinition<C_INIT_RandomRotationSpeed>
 D typeinfo for CParticleOperatorDefinition<C_INIT_RandomSecondSequence>
 D typeinfo for CParticleOperatorDefinition<C_INIT_RandomSequence>
 D typeinfo for CParticleOperatorDefinition<C_INIT_RandomTrailLength>
 D typeinfo for CParticleOperatorDefinition<C_INIT_RandomYaw>
 D typeinfo for CParticleOperatorDefinition<C_INIT_RandomYawFlip>
 D typeinfo for CParticleOperatorDefinition<C_INIT_RemapCPtoScalar>
 D typeinfo for CParticleOperatorDefinition<C_INIT_RemapCPtoVector>
 D typeinfo for CParticleOperatorDefinition<C_INIT_RemapScalar>
 D typeinfo for CParticleOperatorDefinition<C_INIT_RemapScalarToVector>
 D typeinfo for CParticleOperatorDefinition<C_INIT_SequenceLifeTime>
 D typeinfo for CParticleOperatorDefinition<C_INIT_VelocityRandom>
 D typeinfo for CParticleOperatorDefinition<C_OP_AttractToControlPoint>
 D typeinfo for CParticleOperatorDefinition<C_OP_BasicMovement>
 D typeinfo for CParticleOperatorDefinition<C_OP_ColorInterpolate>
 D typeinfo for CParticleOperatorDefinition<C_OP_ConstrainDistance>
 D typeinfo for CParticleOperatorDefinition<C_OP_ConstrainDistanceToPath>
 D typeinfo for CParticleOperatorDefinition<C_OP_ContinuousEmitter>
 D typeinfo for CParticleOperatorDefinition<C_OP_ControlpointLight>
 D typeinfo for CParticleOperatorDefinition<C_OP_Cull>
 D typeinfo for CParticleOperatorDefinition<C_OP_DampenToCP>
 D typeinfo for CParticleOperatorDefinition<C_OP_Decay>
 D typeinfo for CParticleOperatorDefinition<C_OP_DistanceBetweenCPs>
 D typeinfo for CParticleOperatorDefinition<C_OP_DistanceToCP>
 D typeinfo for CParticleOperatorDefinition<C_OP_FadeAndKill>
 D typeinfo for CParticleOperatorDefinition<C_OP_FadeIn>
 D typeinfo for CParticleOperatorDefinition<C_OP_FadeOut>
 D typeinfo for CParticleOperatorDefinition<C_OP_InstantaneousEmitter>
 D typeinfo for CParticleOperatorDefinition<C_OP_InterpolateRadius>
 D typeinfo for CParticleOperatorDefinition<C_OP_LockToBone>
 D typeinfo for CParticleOperatorDefinition<C_OP_MaintainSequentialPath>
 D typeinfo for CParticleOperatorDefinition<C_OP_MaxVelocity>
 D typeinfo for CParticleOperatorDefinition<C_OP_ModelCull>
 D typeinfo for CParticleOperatorDefinition<C_OP_MovementRotateParticleAroundAxis>
 D typeinfo for CParticleOperatorDefinition<C_OP_Noise>
 D typeinfo for CParticleOperatorDefinition<C_OP_NoiseEmitter>
 D typeinfo for CParticleOperatorDefinition<C_OP_Orient2DRelToCP>
 D typeinfo for CParticleOperatorDefinition<C_OP_OrientTo2dDirection>
 D typeinfo for CParticleOperatorDefinition<C_OP_OscillateScalar>
 D typeinfo for CParticleOperatorDefinition<C_OP_OscillateVector>
 D typeinfo for CParticleOperatorDefinition<C_OP_PerParticleEmitter>
 D typeinfo for CParticleOperatorDefinition<C_OP_PlanarConstraint>
 D typeinfo for CParticleOperatorDefinition<C_OP_PlaneCull>
 D typeinfo for CParticleOperatorDefinition<C_OP_PositionLock>
 D typeinfo for CParticleOperatorDefinition<C_OP_RandomForce>
 D typeinfo for CParticleOperatorDefinition<C_OP_RemapCPtoScalar>
 D typeinfo for CParticleOperatorDefinition<C_OP_RemapDotProductToScalar>
 D typeinfo for CParticleOperatorDefinition<C_OP_RemapScalar>
 D typeinfo for CParticleOperatorDefinition<C_OP_RemapSpeedtoCP>
 D typeinfo for CParticleOperatorDefinition<C_OP_RenderPoints>
 D typeinfo for CParticleOperatorDefinition<C_OP_RenderRope>
 D typeinfo for CParticleOperatorDefinition<C_OP_RenderScreenVelocityRotate>
 D typeinfo for CParticleOperatorDefinition<C_OP_RenderSprites>
 D typeinfo for CParticleOperatorDefinition<C_OP_RenderSpritesTrail>
 D typeinfo for CParticleOperatorDefinition<C_OP_SetChildControlPoints>
 D typeinfo for CParticleOperatorDefinition<C_OP_SetControlPointPositions>
 D typeinfo for CParticleOperatorDefinition<C_OP_SetControlPointToCenter>
 D typeinfo for CParticleOperatorDefinition<C_OP_SetControlPointToPlayer>
 D typeinfo for CParticleOperatorDefinition<C_OP_Spin>
 D typeinfo for CParticleOperatorDefinition<C_OP_SpinUpdate>
 D typeinfo for CParticleOperatorDefinition<C_OP_SpinYaw>
 D typeinfo for CParticleOperatorDefinition<C_OP_TwistAroundAxis>
 D typeinfo for CParticleOperatorDefinition<C_OP_VectorNoise>
 D typeinfo for CParticleOperatorDefinition<C_OP_VelocityDecay>
 D typeinfo for CParticleOperatorDefinition<C_OP_VelocityMatchingForce>
 D typeinfo for CParticleOperatorDefinition<C_OP_WorldCollideConstraint>
 D typeinfo for CParticleOperatorDefinition<C_OP_WorldTraceConstraint>
 D typeinfo for CParticleOperatorInstance
 D typeinfo for CParticleProperty
 D typeinfo for CParticleRenderOperatorInstance
 D typeinfo for CParticleSystemQuery
 D typeinfo for CPerfVisualBenchmark
 D typeinfo for CPhysBoxMultiplayer
 D typeinfo for CPhysObjSaveRestoreOps
 D typeinfo for CPhysSaveRestoreBlockHandler
 D typeinfo for CPhysicsGameTrace
 D typeinfo for CPhysicsPropMultiplayer
 D typeinfo for CPhysicsSystem
 D typeinfo for CPixelVisibilitySystem
 D typeinfo for CPlasmaSpray
 D typeinfo for CPlayerAndObjectEnumerator
 D typeinfo for CPlayerLocalData
 D typeinfo for CPlayerLogoProxy
 D typeinfo for CPlayerPositionProxy
 D typeinfo for CPlayerProximityProxy
 D typeinfo for CPlayerSpeedProxy
 D typeinfo for CPlayerState
 D typeinfo for CPlayerTeamMatchProxy
 D typeinfo for CPlayerViewProxy
 D typeinfo for CPoseDebuggerImpl
 D typeinfo for CPoseDebuggerStub
 D typeinfo for CPotteryWheelManip
 D typeinfo for CPotteryWheelPanel
 D typeinfo for CPrecipHack
 D typeinfo for CPredictableList
 D typeinfo for CPrediction
 D typeinfo for CPropData
 D typeinfo for CProportionalFloatProperty
 D typeinfo for CProportionalIntProperty
 D typeinfo for CProportionalIntWithScreenspacePropertyX
 D typeinfo for CProportionalIntWithScreenspacePropertyY
 D typeinfo for CProxyHealth
 D typeinfo for CProxyIsNPC
 D typeinfo for CPupilProxy
 D typeinfo for CPushAwayEnumerator
 D typeinfo for CRagdoll
 D typeinfo for CRagdollAnimatedFriction
 D typeinfo for CRagdollBoltEnumerator
 D typeinfo for CRagdollCollisionRules
 D typeinfo for CRagdollEnumerator
 D typeinfo for CRagdollExplosionEnumerator
 D typeinfo for CRagdollLRURetirement
 D typeinfo for CRecordingList
 D typeinfo for CRefCountServiceBase<true, CRefMT>
 D typeinfo for CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >
 D typeinfo for CRefCounted1<WorldListInfo_t, CRefCountServiceBase<true, CRefMT> >
 D typeinfo for CRefCounted<CRefCountServiceBase<true, CRefMT> >
 D typeinfo for CReflectiveGlassView
 D typeinfo for CRefractiveGlassView
 D typeinfo for CRenderExecutor
 D typeinfo for CRendering3dView
 D typeinfo for CRestore
 D typeinfo for CResultProxy
 D typeinfo for CRocketTrailParticle
 D typeinfo for CRopeManager
 D typeinfo for CRopePhysics<10>
 D typeinfo for CRopePhysics<7>
 D typeinfo for CRotationManipulator
 D typeinfo for CSave
 D typeinfo for CSaveRestoreBlockSet
 D typeinfo for CSceneTokenProcessor
 D typeinfo for CSchemeVisualizer
 D typeinfo for CScreenSpaceEffectManager
 D typeinfo for CSelectFirstIfNonZeroProxy
 D typeinfo for CShadowDepthView
 D typeinfo for CShadowLeafEnum
 D typeinfo for CShadowModelProxy
 D typeinfo for CShadowProxy
 D typeinfo for CShieldProxy
 D typeinfo for CSimple3DEmitter
 D typeinfo for CSimpleEmitter
 D typeinfo for CSimpleGlowEmitter
 D typeinfo for CSimplePhysics::IHelper
 D typeinfo for CSimpleRenderExecutor
 D typeinfo for CSimpleWorldView
 D typeinfo for CSineProxy
 D typeinfo for CSingleUserRecipientFilter
 D typeinfo for CSkyboxView
 D typeinfo for CSlideshowDisplayScreen
 D typeinfo for CSmallTextEntry
 D typeinfo for CSmokeEmitter
 D typeinfo for CSmokeParticle
 D typeinfo for CSnowFallManager
 D typeinfo for CSolidSetDefaults
 D typeinfo for CSoundControllerImp
 D typeinfo for CSoundEmitterSystem
 D typeinfo for CSoundEnvelopeController
 D typeinfo for CSoundPatchSaveRestoreOps
 D typeinfo for CSpecButton
 D typeinfo for CSpectatorGUI
 D typeinfo for CSpectatorMenu
 D typeinfo for CSpinUpdateBase
 D typeinfo for CSplashParticle
 D typeinfo for CStringProperty
 D typeinfo for CStudioStatsEnumerator
 D typeinfo for CSubtractProxy
 D typeinfo for CTEParticleRenderer
 D typeinfo for CTeamMenu
 D typeinfo for CTeleportCountdownScreen
 D typeinfo for CTempEnts
 D typeinfo for CTextWindow
 D typeinfo for CTextureIdProperty
 D typeinfo for CTextureScrollMaterialProxy
 D typeinfo for CTextureTransformProxy
 D typeinfo for CTier0AppSystem<IClientVirtualReality>
 D typeinfo for CTier1AppSystem<IClientVirtualReality, 0>
 D typeinfo for CTier2AppSystem<IClientVirtualReality, 0>
 D typeinfo for CTier3AppSystem<IClientVirtualReality, 0>
 D typeinfo for CTimeMaterialProxy
 D typeinfo for CToolFrameworkClient
 D typeinfo for CTraceFilter
 D typeinfo for CTraceFilterGlow
 D typeinfo for CTraceFilterHitAll
 D typeinfo for CTraceFilterNoCombatCharacters
 D typeinfo for CTraceFilterNoNPCsOrPlayer
 D typeinfo for CTraceFilterSimple
 D typeinfo for CTraceFilterSimpleList
 D typeinfo for CTraceFilterSkipNPCsAndPlayers
 D typeinfo for CTraceFilterSkipPlayerAndViewModel
 D typeinfo for CTraceFilterSkipTwoEntities
 D typeinfo for CTraceFilterWorldOnly
 D typeinfo for CTrailParticles
 D typeinfo for CTransformManipulator
 D typeinfo for CTranslationManipulator
 D typeinfo for CUnderWaterView
 D typeinfo for CUnderWaterView::CRefractionView
 D typeinfo for CUniformNoiseProxy
 D typeinfo for CUserCmd
 D typeinfo for CUtlCStringConversion
 D typeinfo for CUtlCharConversion
 D typeinfo for CUtlNoEscConversion
 D typeinfo for CUtlVector<ModelPoseDebugInfo::InfoText, CUtlMemory<ModelPoseDebugInfo::InfoText, int> >
 D typeinfo for CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>
 D typeinfo for CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>
 D typeinfo for CVGuiScreenEnumerator
 D typeinfo for CVGuiScreenPanel
 D typeinfo for CVTFTexture
 D typeinfo for CViewAngleAnimation
 D typeinfo for CViewEffects
 D typeinfo for CViewEffectsSaveRestoreBlockHandler
 D typeinfo for CViewRender
 D typeinfo for CViewRenderBeams
 D typeinfo for CViewSetup
 D typeinfo for CViewportClientSystem
 D typeinfo for CVisibleShadowList
 D typeinfo for CVoiceStatus
 D typeinfo for CVortEmissiveProxy
 D typeinfo for CWarpOverlay
 D typeinfo for CWaterExplosionParticle
 D typeinfo for CWaterLODMaterialProxy
 D typeinfo for CWorkerThread
 D typeinfo for CWorldDimsProxy
 D typeinfo for CWrapMinMaxProxy
 D typeinfo for CZoomManipulator
 D typeinfo for C_AI_BaseNPC
 D typeinfo for C_AR2Explosion
 D typeinfo for C_AlyxEmpEffect
 D typeinfo for C_AntlionGib
 D typeinfo for C_Barney
 D typeinfo for C_BaseAnimating
 D typeinfo for C_BaseAnimatingGameSystem
 D typeinfo for C_BaseAnimatingOverlay
 D typeinfo for C_BaseCombatCharacter
 D typeinfo for C_BaseCombatWeapon
 D typeinfo for C_BaseDoor
 D typeinfo for C_BaseEntity
 D typeinfo for C_BaseEntity::NetworkVar_m_Collision
 D typeinfo for C_BaseEntity::NetworkVar_m_Particles
 D typeinfo for C_BaseEntityClassList
 D typeinfo for C_BaseExplosionEffect
 D typeinfo for C_BaseFlex
 D typeinfo for C_BaseGrenade
 D typeinfo for C_BaseHLBludgeonWeapon
 D typeinfo for C_BaseHLCombatWeapon
 D typeinfo for C_BaseHLPlayer
 D typeinfo for C_BaseHelicopter
 D typeinfo for C_BaseParticleEntity
 D typeinfo for C_BasePlayer
 D typeinfo for C_BasePlayer::NetworkVar_m_Local
 D typeinfo for C_BaseProjectile
 D typeinfo for C_BasePropDoor
 D typeinfo for C_BaseTeamObjectiveResource
 D typeinfo for C_BaseTempEntity
 D typeinfo for C_BaseViewModel
 D typeinfo for C_Beam
 D typeinfo for C_BoneFollower
 D typeinfo for C_BreakableProp
 D typeinfo for C_BreakableSurface
 D typeinfo for C_CitadelEnergyCore
 D typeinfo for C_ClientRagdoll
 D typeinfo for C_ColorCorrection
 D typeinfo for C_ColorCorrectionVolume
 D typeinfo for C_CombineGunship
 D typeinfo for C_Corpse
 D typeinfo for C_CrossbowBolt
 D typeinfo for C_DustTrail
 D typeinfo for C_DynamicLight
 D typeinfo for C_DynamicProp
 D typeinfo for C_Embers
 D typeinfo for C_EntityClassList<C_FuncReflectiveGlass>
 D typeinfo for C_EntityClassList<C_PointCamera>
 D typeinfo for C_EntityDissolve
 D typeinfo for C_EntityFlame
 D typeinfo for C_EntityParticleTrail
 D typeinfo for C_EnvDetailController
 D typeinfo for C_EnvHeadcrabCanister
 D typeinfo for C_EnvParticleScript
 D typeinfo for C_EnvProjectedTexture
 D typeinfo for C_EnvScreenEffect
 D typeinfo for C_EnvScreenOverlay
 D typeinfo for C_EnvStarfield
 D typeinfo for C_EnvTonemapController
 D typeinfo for C_EnvWind
 D typeinfo for C_EnvelopeFX
 D typeinfo for C_FireFromAboveSprite
 D typeinfo for C_FireSmoke
 D typeinfo for C_FireSprite
 D typeinfo for C_FireTrail
 D typeinfo for C_Fish
 D typeinfo for C_Flare
 D typeinfo for C_Flaregun
 D typeinfo for C_FogController
 D typeinfo for C_FuncAreaPortalWindow
 D typeinfo for C_FuncConveyor
 D typeinfo for C_FuncLadder
 D typeinfo for C_FuncMonitor
 D typeinfo for C_FuncOccluder
 D typeinfo for C_FuncPhysicsRespawnZone
 D typeinfo for C_FuncReflectiveGlass
 D typeinfo for C_FuncRotating
 D typeinfo for C_FuncSmokeVolume
 D typeinfo for C_FuncTrackTrain
 D typeinfo for C_Func_Dust
 D typeinfo for C_Func_LOD
 D typeinfo for C_GameRules
 D typeinfo for C_GameRulesProxy
 D typeinfo for C_Gib
 D typeinfo for C_GunshipFX
 D typeinfo for C_HL2PlayerLocalData
 D typeinfo for C_HLMachineGun
 D typeinfo for C_HLSelectFireMachineGun
 D typeinfo for C_HLTVCamera
 D typeinfo for C_Hairball
 D typeinfo for C_Hairball::CHairballDelegate
 D typeinfo for C_HalfLife2
 D typeinfo for C_HalfLife2Proxy
 D typeinfo for C_HandleTest
 D typeinfo for C_INIT_AgeNoise
 D typeinfo for C_INIT_CreateAlongPath
 D typeinfo for C_INIT_CreateFromParentParticles
 D typeinfo for C_INIT_CreateFromPlaneCache
 D typeinfo for C_INIT_CreateInHierarchy
 D typeinfo for C_INIT_CreateOnModel
 D typeinfo for C_INIT_CreateSequentialPath
 D typeinfo for C_INIT_CreateWithinBox
 D typeinfo for C_INIT_CreateWithinSphere
 D typeinfo for C_INIT_CreationNoise
 D typeinfo for C_INIT_DistanceToCPInit
 D typeinfo for C_INIT_InheritVelocity
 D typeinfo for C_INIT_InitialRepulsionVelocity
 D typeinfo for C_INIT_InitialVelocityNoise
 D typeinfo for C_INIT_LifespanFromVelocity
 D typeinfo for C_INIT_MoveBetweenPoints
 D typeinfo for C_INIT_PositionOffset
 D typeinfo for C_INIT_PositionWarp
 D typeinfo for C_INIT_RandomAlpha
 D typeinfo for C_INIT_RandomColor
 D typeinfo for C_INIT_RandomLifeTime
 D typeinfo for C_INIT_RandomRadius
 D typeinfo for C_INIT_RandomRotation
 D typeinfo for C_INIT_RandomRotationSpeed
 D typeinfo for C_INIT_RandomSecondSequence
 D typeinfo for C_INIT_RandomSequence
 D typeinfo for C_INIT_RandomTrailLength
 D typeinfo for C_INIT_RandomYaw
 D typeinfo for C_INIT_RandomYawFlip
 D typeinfo for C_INIT_RemapCPtoScalar
 D typeinfo for C_INIT_RemapCPtoVector
 D typeinfo for C_INIT_RemapScalar
 D typeinfo for C_INIT_RemapScalarToVector
 D typeinfo for C_INIT_SequenceLifeTime
 D typeinfo for C_INIT_VelocityRandom
 D typeinfo for C_InfoLadderDismount
 D typeinfo for C_InfoLightingRelative
 D typeinfo for C_InfoOverlayAccessor
 D typeinfo for C_InfoTeleporterCountdown
 D typeinfo for C_LightGlow
 D typeinfo for C_LightGlowOverlay
 D typeinfo for C_LocalTempEntity
 D typeinfo for C_MaterialModifyControl
 D typeinfo for C_MegaBombExplosionEffect
 D typeinfo for C_MortarShell
 D typeinfo for C_MovieExplosion
 D typeinfo for C_MultiplayRules
 D typeinfo for C_NPC_AntlionGuard
 D typeinfo for C_NPC_Barnacle
 D typeinfo for C_NPC_Barnacle::CBarnaclePhysicsDelegate
 D typeinfo for C_NPC_Manhack
 D typeinfo for C_NPC_Vortigaunt
 D typeinfo for C_OP_AttractToControlPoint
 D typeinfo for C_OP_BasicMovement
 D typeinfo for C_OP_ColorInterpolate
 D typeinfo for C_OP_ConstrainDistance
 D typeinfo for C_OP_ConstrainDistanceToPath
 D typeinfo for C_OP_ContinuousEmitter
 D typeinfo for C_OP_ControlpointLight
 D typeinfo for C_OP_Cull
 D typeinfo for C_OP_DampenToCP
 D typeinfo for C_OP_Decay
 D typeinfo for C_OP_DistanceBetweenCPs
 D typeinfo for C_OP_DistanceToCP
 D typeinfo for C_OP_FadeAndKill
 D typeinfo for C_OP_FadeIn
 D typeinfo for C_OP_FadeOut
 D typeinfo for C_OP_InstantaneousEmitter
 D typeinfo for C_OP_InterpolateRadius
 D typeinfo for C_OP_LockToBone
 D typeinfo for C_OP_MaintainSequentialPath
 D typeinfo for C_OP_MaxVelocity
 D typeinfo for C_OP_ModelCull
 D typeinfo for C_OP_MovementRotateParticleAroundAxis
 D typeinfo for C_OP_Noise
 D typeinfo for C_OP_NoiseEmitter
 D typeinfo for C_OP_Orient2DRelToCP
 D typeinfo for C_OP_OrientTo2dDirection
 D typeinfo for C_OP_OscillateScalar
 D typeinfo for C_OP_OscillateVector
 D typeinfo for C_OP_PerParticleEmitter
 D typeinfo for C_OP_PlanarConstraint
 D typeinfo for C_OP_PlaneCull
 D typeinfo for C_OP_PositionLock
 D typeinfo for C_OP_RandomForce
 D typeinfo for C_OP_RemapCPtoScalar
 D typeinfo for C_OP_RemapDotProductToScalar
 D typeinfo for C_OP_RemapScalar
 D typeinfo for C_OP_RemapSpeedtoCP
 D typeinfo for C_OP_RenderPoints
 D typeinfo for C_OP_RenderRope
 D typeinfo for C_OP_RenderScreenVelocityRotate
 D typeinfo for C_OP_RenderSprites
 D typeinfo for C_OP_RenderSpritesTrail
 D typeinfo for C_OP_SetChildControlPoints
 D typeinfo for C_OP_SetControlPointPositions
 D typeinfo for C_OP_SetControlPointToCenter
 D typeinfo for C_OP_SetControlPointToPlayer
 D typeinfo for C_OP_Spin
 D typeinfo for C_OP_SpinUpdate
 D typeinfo for C_OP_SpinYaw
 D typeinfo for C_OP_TwistAroundAxis
 D typeinfo for C_OP_VectorNoise
 D typeinfo for C_OP_VelocityDecay
 D typeinfo for C_OP_VelocityMatchingForce
 D typeinfo for C_OP_WorldCollideConstraint
 D typeinfo for C_OP_WorldTraceConstraint
 D typeinfo for C_ParticleFire
 D typeinfo for C_ParticlePerformanceMonitor
 D typeinfo for C_ParticleSmokeGrenade
 D typeinfo for C_ParticleSystem
 D typeinfo for C_ParticleTrail
 D typeinfo for C_PhysBox
 D typeinfo for C_PhysMagnet
 D typeinfo for C_PhysPropClientside
 D typeinfo for C_PhysicsProp
 D typeinfo for C_Plasma
 D typeinfo for C_PlasmaBeamNode
 D typeinfo for C_PlasmaSprite
 D typeinfo for C_PlayerResource
 D typeinfo for C_PointCamera
 D typeinfo for C_PointCommentaryNode
 D typeinfo for C_PoseController
 D typeinfo for C_PropAirboat
 D typeinfo for C_PropCannon
 D typeinfo for C_PropCombineBall
 D typeinfo for C_PropCrane
 D typeinfo for C_PropJeep
 D typeinfo for C_PropVehicleChoreoGeneric
 D typeinfo for C_PropVehicleDriveable
 D typeinfo for C_PropVehiclePrisonerPod
 D typeinfo for C_QuadraticBeam
 D typeinfo for C_RagdollManager
 D typeinfo for C_RecipientFilter
 D typeinfo for C_RocketTrail
 D typeinfo for C_RollerMine
 D typeinfo for C_RopeKeyframe
 D typeinfo for C_RopeKeyframe::CPhysicsDelegate
 D typeinfo for C_RotorWashEmitter
 D typeinfo for C_SceneEntity
 D typeinfo for C_ScriptIntro
 D typeinfo for C_ServerRagdoll
 D typeinfo for C_ServerRagdollAttached
 D typeinfo for C_ShadowControl
 D typeinfo for C_SingleplayRules
 D typeinfo for C_SlideshowDisplay
 D typeinfo for C_SmokeStack
 D typeinfo for C_SmokeTrail
 D typeinfo for C_SoundscapeSystem
 D typeinfo for C_SporeExplosion
 D typeinfo for C_SporeTrail
 D typeinfo for C_SpotlightEnd
 D typeinfo for C_Sprite
 D typeinfo for C_SpriteOriented
 D typeinfo for C_SpriteRenderer
 D typeinfo for C_SpriteTrail
 D typeinfo for C_SteamJet
 D typeinfo for C_Strider
 D typeinfo for C_StriderFX
 D typeinfo for C_Sun
 D typeinfo for C_SunGlowOverlay
 D typeinfo for C_TEAntlionDust
 D typeinfo for C_TEArmorRicochet
 D typeinfo for C_TEBSPDecal
 D typeinfo for C_TEBaseBeam
 D typeinfo for C_TEBeamEntPoint
 D typeinfo for C_TEBeamEnts
 D typeinfo for C_TEBeamFollow
 D typeinfo for C_TEBeamLaser
 D typeinfo for C_TEBeamPoints
 D typeinfo for C_TEBeamRing
 D typeinfo for C_TEBeamRingPoint
 D typeinfo for C_TEBeamSpline
 D typeinfo for C_TEBloodSprite
 D typeinfo for C_TEBloodStream
 D typeinfo for C_TEBreakModel
 D typeinfo for C_TEBubbleTrail
 D typeinfo for C_TEBubbles
 D typeinfo for C_TEClientProjectile
 D typeinfo for C_TEConcussiveExplosion
 D typeinfo for C_TEDecal
 D typeinfo for C_TEDust
 D typeinfo for C_TEDynamicLight
 D typeinfo for C_TEEffectDispatch
 D typeinfo for C_TEEnergySplash
 D typeinfo for C_TEExplosion
 D typeinfo for C_TEFizz
 D typeinfo for C_TEFootprintDecal
 D typeinfo for C_TEGaussExplosion
 D typeinfo for C_TEGlowSprite
 D typeinfo for C_TEImpact
 D typeinfo for C_TEKillPlayerAttachments
 D typeinfo for C_TELargeFunnel
 D typeinfo for C_TEMetalSparks
 D typeinfo for C_TEMuzzleFlash
 D typeinfo for C_TEParticleSystem
 D typeinfo for C_TEPhysicsProp
 D typeinfo for C_TEPlayerDecal
 D typeinfo for C_TEProjectedDecal
 D typeinfo for C_TEShatterSurface
 D typeinfo for C_TEShowLine
 D typeinfo for C_TESmoke
 D typeinfo for C_TESparks
 D typeinfo for C_TESprite
 D typeinfo for C_TESpriteSpray
 D typeinfo for C_TEWorldDecal
 D typeinfo for C_Team
 D typeinfo for C_TeamplayRoundBasedRules
 D typeinfo for C_TeamplayRoundBasedRulesProxy
 D typeinfo for C_TeamplayRules
 D typeinfo for C_TempEntsSystem
 D typeinfo for C_Tesla
 D typeinfo for C_TestTraceline
 D typeinfo for C_Test_ProxyToggle_Networkable
 D typeinfo for C_VGuiScreen
 D typeinfo for C_VortigauntChargeToken
 D typeinfo for C_VortigauntEffectDispel
 D typeinfo for C_VoteController
 D typeinfo for C_WaterBullet
 D typeinfo for C_WaterExplosionEffect
 D typeinfo for C_WaterLODControl
 D typeinfo for C_Weapon357
 D typeinfo for C_WeaponAR2
 D typeinfo for C_WeaponAlyxGun
 D typeinfo for C_WeaponAnnabelle
 D typeinfo for C_WeaponBinoculars
 D typeinfo for C_WeaponBugBait
 D typeinfo for C_WeaponCitizenPackage
 D typeinfo for C_WeaponCitizenSuitcase
 D typeinfo for C_WeaponCrossbow
 D typeinfo for C_WeaponCrowbar
 D typeinfo for C_WeaponCubemap
 D typeinfo for C_WeaponCycler
 D typeinfo for C_WeaponFrag
 D typeinfo for C_WeaponGaussGun
 D typeinfo for C_WeaponPhysCannon
 D typeinfo for C_WeaponPistol
 D typeinfo for C_WeaponRPG
 D typeinfo for C_WeaponSMG1
 D typeinfo for C_WeaponShotgun
 D typeinfo for C_WeaponStunStick
 D typeinfo for C_Weapon_SLAM
 D typeinfo for C_World
 D typeinfo for ClientModeHLNormal
 D typeinfo for ClientModeShared
 D typeinfo for ClientWorldListInfo_t
 D typeinfo for ColumnButton
 D typeinfo for CommandMenu
 D typeinfo for ConCommand
 D typeinfo for ConCommandBase
 D typeinfo for ConVar
 D typeinfo for ConVar_ServerBounded
 D typeinfo for ConVar_m_pitch
 D typeinfo for Dragger
 D typeinfo for EntityParticleTrailInfo_t
 D typeinfo for FileWeaponInfo_t
 D typeinfo for IAchievementMgr
 D typeinfo for IAppSystem
 D typeinfo for IBaseClientDLL
 D typeinfo for IBaseInterface
 D typeinfo for IBreakableWithPropData
 D typeinfo for IBrushRenderer
 D typeinfo for ICenterPrint
 D typeinfo for IChoreoEventCallback
 D typeinfo for IChoreoStringPool
 D typeinfo for IClassMap
 D typeinfo for IClientDLLSharedAppSystems
 D typeinfo for IClientEffect
 D typeinfo for IClientEntity
 D typeinfo for IClientEntityList
 D typeinfo for IClientEntityListener
 D typeinfo for IClientLeafShadowEnum
 D typeinfo for IClientLeafSystem
 D typeinfo for IClientLeafSystemEngine
 D typeinfo for IClientMode
 D typeinfo for IClientNetworkable
 D typeinfo for IClientRenderable
 D typeinfo for IClientShadowMgr
 D typeinfo for IClientThinkable
 D typeinfo for IClientTools
 D typeinfo for IClientUnknown
 D typeinfo for IClientVehicle
 D typeinfo for IClientVirtualReality
 D typeinfo for ICollideable
 D typeinfo for ICommandCallback
 D typeinfo for ICommandCompletionCallback
 D typeinfo for IConCommandBaseAccessor
 D typeinfo for IConVar
 D typeinfo for ICurveDataAccessor
 D typeinfo for IDataCacheClient
 D typeinfo for IDebugOverlayPanel
 D typeinfo for IDecalEmitterSystem
 D typeinfo for IDetailObjectSystem
 D typeinfo for IEffects
 D typeinfo for IEffectsList
 D typeinfo for IEntityDataInstantiator
 D typeinfo for IEntitySaveUtils
 D typeinfo for IFPSPanel
 D typeinfo for IGameClientExports
 D typeinfo for IGameEventListener2
 D typeinfo for IGameMovement
 D typeinfo for IGameResources
 D typeinfo for IGameSystem
 D typeinfo for IGameSystemPerFrame
 D typeinfo for IHandleEntity
 D typeinfo for IHasLocalToGlobalFlexSettings
 D typeinfo for IHasOwner
 D typeinfo for IHudLCD
 D typeinfo for IHudTextMessage
 D typeinfo for IInput
 D typeinfo for IInterpolatedVar
 D typeinfo for ILoadingDisc
 D typeinfo for IManipulator
 D typeinfo for IMaterialProxy
 D typeinfo for IMessageChars
 D typeinfo for IModelLoadCallback
 D typeinfo for IMotionEvent
 D typeinfo for IMoveHelper
 D typeinfo for IMultiplayerPhysics
 D typeinfo for INetGraphPanel
 D typeinfo for IPVSNotify
 D typeinfo for IPanelFactory
 D typeinfo for IPanelMetaClassMgr
 D typeinfo for IParticleEffect
 D typeinfo for IParticleOperatorDefinition
 D typeinfo for IParticleSystemQuery
 D typeinfo for IPartitionEnumerator
 D typeinfo for IPartitionQueryCallback
 D typeinfo for IPhysSaveRestoreManager
 D typeinfo for IPhysicsCollisionEvent
 D typeinfo for IPhysicsCollisionSolver
 D typeinfo for IPhysicsGameTrace
 D typeinfo for IPhysicsObjectEvent
 D typeinfo for IPoseDebugger
 D typeinfo for IPredictableList
 D typeinfo for IPrediction
 D typeinfo for IPredictionSystem
 D typeinfo for IPresence
 D typeinfo for IPrototypeAppEffect
 D typeinfo for IRagdoll
 D typeinfo for IRecipientFilter
 D typeinfo for IRecordingList
 D typeinfo for IRefCounted
 D typeinfo for IReplayScreenshotSystem
 D typeinfo for IRestore
 D typeinfo for IRopeManager
 D typeinfo for ISave
 D typeinfo for ISaveRestoreBlockHandler
 D typeinfo for ISaveRestoreBlockSet
 D typeinfo for ISaveRestoreOps
 D typeinfo for ISceneTokenProcessor
 D typeinfo for IScreenSpaceEffect
 D typeinfo for IScreenSpaceEffectManager
 D typeinfo for ISpatialLeafEnumerator
 D typeinfo for ITempEnts
 D typeinfo for ITempEntsSystem
 D typeinfo for ITextMessage
 D typeinfo for ITextureRegenerator
 D typeinfo for ITraceFilter
 D typeinfo for IVModeManager
 D typeinfo for IVPhysicsKeyHandler
 D typeinfo for IVTFTexture
 D typeinfo for IVehicle
 D typeinfo for IViewEffects
 D typeinfo for IViewPort
 D typeinfo for IViewPortPanel
 D typeinfo for IViewRender
 D typeinfo for IViewRenderBeams
 D typeinfo for IVoiceStatusHelper
 D typeinfo for MenuItemCheckImage
 D typeinfo for ParticleSphereProxy
 D typeinfo for PrecacheEffectBloodSpray::ClientEffectRegister
 D typeinfo for PrecacheEffectBuild::ClientEffectRegister
 D typeinfo for PrecacheEffectCombineBall::ClientEffectRegister
 D typeinfo for PrecacheEffectCrossbow::ClientEffectRegister
 D typeinfo for PrecacheEffectDusttrail::ClientEffectRegister
 D typeinfo for PrecacheEffectExplosion::ClientEffectRegister
 D typeinfo for PrecacheEffectFlares::ClientEffectRegister
 D typeinfo for PrecacheEffectGlassShatter::ClientEffectRegister
 D typeinfo for PrecacheEffectGlow::ClientEffectRegister
 D typeinfo for PrecacheEffectImpacts::ClientEffectRegister
 D typeinfo for PrecacheEffectMuzzleFlash::ClientEffectRegister
 D typeinfo for PrecacheEffectPlasmaBeam::ClientEffectRegister
 D typeinfo for PrecacheEffectSparks::ClientEffectRegister
 D typeinfo for PrecacheEffectSplash::ClientEffectRegister
 D typeinfo for PrecacheEffectStunstick::ClientEffectRegister
 D typeinfo for PrecacheEffectVGuiScreen::ClientEffectRegister
 D typeinfo for PrecacheEffectWarp::ClientEffectRegister
 D typeinfo for PrecacheEffectsTest::ClientEffectRegister
 D typeinfo for PrecacheGunshipFX::ClientEffectRegister
 D typeinfo for PrecacheMuzzleFlash::ClientEffectRegister
 D typeinfo for PrecacheOcclusionProxy::ClientEffectRegister
 D typeinfo for PrecachePlayerDecal::ClientEffectRegister
 D typeinfo for PrecachePostProcessingEffects::ClientEffectRegister
 D typeinfo for PrecachePrecipitation::ClientEffectRegister
 D typeinfo for PrecacheSmokeFogOverlay::ClientEffectRegister
 D typeinfo for PrecacheTracers::ClientEffectRegister
 D typeinfo for PrecacheViewRender::ClientEffectRegister
 D typeinfo for SmokeStackMaterials::ClientEffectRegister
 D typeinfo for SnowFallEffect
 D typeinfo for SporeEffect
 D typeinfo for ThumperDustEmitter
 D typeinfo for VideoPanel
 D typeinfo for WashEmitter
 D typeinfo for WaterDebrisEffect
 D typeinfo for WorldListInfo_t
 D typeinfo for audioparams_t
 D typeinfo for fogparams_t
 D typeinfo for fogplayerparams_t
 D typeinfo for sky3dparams_t
 D typeinfo for sky3dparams_t::NetworkVar_fog
 D typeinfo for vehicleview_t
 D typeinfo for vgui::AnimatingImagePanel
 D typeinfo for vgui::AnimationController
 D typeinfo for vgui::BaseTooltip
 D typeinfo for vgui::BuildGroup
 D typeinfo for vgui::BuildModeDialog
 D typeinfo for vgui::Button
 D typeinfo for vgui::CBitmapImagePanel
 D typeinfo for vgui::CItemButton
 D typeinfo for vgui::CTreeViewListControl
 D typeinfo for vgui::CheckButton
 D typeinfo for vgui::CheckImage
 D typeinfo for vgui::CircularProgressBar
 D typeinfo for vgui::ClickPanel
 D typeinfo for vgui::ComboBox
 D typeinfo for vgui::ComboBoxButton
 D typeinfo for vgui::ContinuousProgressBar
 D typeinfo for vgui::CvarToggleCheckButton<ConVarRef>
 D typeinfo for vgui::Divider
 D typeinfo for vgui::EditablePanel
 D typeinfo for vgui::ExpandButton
 D typeinfo for vgui::FocusNavGroup
 D typeinfo for vgui::Frame
 D typeinfo for vgui::FrameButton
 D typeinfo for vgui::FrameSystemButton
 D typeinfo for vgui::GraphPanel
 D typeinfo for vgui::IClientPanel
 D typeinfo for vgui::IForceVirtualInheritancePanel
 D typeinfo for vgui::IImage
 D typeinfo for vgui::IPanelAnimationPropertyConverter
 D typeinfo for vgui::Image
 D typeinfo for vgui::ImagePanel
 D typeinfo for vgui::Label
 D typeinfo for vgui::ListPanel
 D typeinfo for vgui::ListViewItem
 D typeinfo for vgui::ListViewPanel
 D typeinfo for vgui::Menu
 D typeinfo for vgui::MenuBar
 D typeinfo for vgui::MenuButton
 D typeinfo for vgui::MenuItem
 D typeinfo for vgui::MenuSeparator
 D typeinfo for vgui::MessageBox
 D typeinfo for vgui::Panel
 D typeinfo for vgui::PanelListPanel
 D typeinfo for vgui::ProgressBar
 D typeinfo for vgui::RadioButton
 D typeinfo for vgui::RadioImage
 D typeinfo for vgui::RichText
 D typeinfo for vgui::RichTextInterior
 D typeinfo for vgui::ScalableImagePanel
 D typeinfo for vgui::ScrollBar
 D typeinfo for vgui::ScrollBarSlider
 D typeinfo for vgui::SectionedListPanel
 D typeinfo for vgui::SectionedListPanelHeader
 D typeinfo for vgui::Slider
 D typeinfo for vgui::TextEntry
 D typeinfo for vgui::TextImage
 D typeinfo for vgui::TextTooltip
 D typeinfo for vgui::ToggleButton
 D typeinfo for vgui::TreeNode
 D typeinfo for vgui::TreeNodeImage
 D typeinfo for vgui::TreeNodeText
 D typeinfo for vgui::TreeView
 D typeinfo for vgui::TreeViewSubPanel
 D typeinfo for vgui::URLLabel
 D usermessages
 D vgui::AnimatingImagePanel::ChainToAnimationMap()::chained
 D vgui::AnimatingImagePanel::ChainToMap()::chained
 D vgui::AnimatingImagePanel::GetKBMap()::s_pMap
 D vgui::AnimatingImagePanel::GetMessageMap()::s_pMap
 D vgui::AnimatingImagePanel::KB_ChainToMap()::chained
 D vgui::AnimationController::ChainToAnimationMap()::chained
 D vgui::AnimationController::ChainToMap()::chained
 D vgui::AnimationController::GetKBMap()::s_pMap
 D vgui::AnimationController::GetMessageMap()::s_pMap
 D vgui::AnimationController::KB_ChainToMap()::chained
 D vgui::AnimationController::g_AlignmentLookup
 D vgui::BuildModeDialog::ChainToAnimationMap()::chained
 D vgui::BuildModeDialog::ChainToMap()::chained
 D vgui::BuildModeDialog::GetKBMap()::s_pMap
 D vgui::BuildModeDialog::GetMessageMap()::s_pMap
 D vgui::BuildModeDialog::KB_ChainToMap()::chained
 D vgui::BuildModeDialog::PanelMessageFunc_ApplyDataToControls::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_DoCopy::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_DoPaste::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_DoUndo::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_EnableSaveButton::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnChangeChild::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnCreateNewControl::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnDeletePanel::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnPanelMoved::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnReloadLocalization::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnSetClipboardText::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnShowNewControlMenu::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_OnTextKillFocus::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_SetActiveControl::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_ShutdownBuildMode::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_StoreUndoSettings::InitVar()::bAdded
 D vgui::BuildModeDialog::PanelMessageFunc_UpdateControlData::InitVar()::bAdded
 D vgui::Button::ChainToAnimationMap()::chained
 D vgui::Button::ChainToMap()::chained
 D vgui::Button::GetKBMap()::s_pMap
 D vgui::Button::GetMessageMap()::s_pMap
 D vgui::Button::KB_ChainToMap()::chained
 D vgui::Button::PanelMessageFunc_DoClick::InitVar()::bAdded
 D vgui::Button::PanelMessageFunc_OnHotkey::InitVar()::bAdded
 D vgui::Button::PanelMessageFunc_OnSetState::InitVar()::bAdded
 D vgui::Button::PanelMessageFunc_SetAsCurrentDefaultButton::InitVar()::bAdded
 D vgui::Button::PanelMessageFunc_SetAsDefaultButton::InitVar()::bAdded
 D vgui::CItemButton::ChainToAnimationMap()::chained
 D vgui::CItemButton::ChainToMap()::chained
 D vgui::CItemButton::GetKBMap()::s_pMap
 D vgui::CItemButton::GetMessageMap()::s_pMap
 D vgui::CItemButton::KB_ChainToMap()::chained
 D vgui::CTreeViewListControl::ChainToAnimationMap()::chained
 D vgui::CTreeViewListControl::ChainToMap()::chained
 D vgui::CTreeViewListControl::GetKBMap()::s_pMap
 D vgui::CTreeViewListControl::GetMessageMap()::s_pMap
 D vgui::CTreeViewListControl::KB_ChainToMap()::chained
 D vgui::CheckButton::ChainToAnimationMap()::chained
 D vgui::CheckButton::ChainToMap()::chained
 D vgui::CheckButton::GetKBMap()::s_pMap
 D vgui::CheckButton::GetMessageMap()::s_pMap
 D vgui::CheckButton::KB_ChainToMap()::chained
 D vgui::CheckButton::PanelMessageFunc_OnCheckButtonChecked::InitVar()::bAdded
 D vgui::CircularProgressBar::ChainToAnimationMap()::chained
 D vgui::CircularProgressBar::ChainToMap()::chained
 D vgui::CircularProgressBar::GetKBMap()::s_pMap
 D vgui::CircularProgressBar::GetMessageMap()::s_pMap
 D vgui::CircularProgressBar::KB_ChainToMap()::chained
 D vgui::ClickPanel::ChainToAnimationMap()::chained
 D vgui::ClickPanel::ChainToMap()::chained
 D vgui::ClickPanel::GetKBMap()::s_pMap
 D vgui::ClickPanel::GetMessageMap()::s_pMap
 D vgui::ClickPanel::KB_ChainToMap()::chained
 D vgui::ComboBox::ChainToAnimationMap()::chained
 D vgui::ComboBox::ChainToMap()::chained
 D vgui::ComboBox::GetKBMap()::s_pMap
 D vgui::ComboBox::GetMessageMap()::s_pMap
 D vgui::ComboBox::KB_ChainToMap()::chained
 D vgui::ComboBox::PanelMessageFunc_ActivateItem::InitVar()::bAdded
 D vgui::ComboBox::PanelMessageFunc_OnMenuClose::InitVar()::bAdded
 D vgui::ComboBox::PanelMessageFunc_OnMenuItemSelected::InitVar()::bAdded
 D vgui::ComboBox::PanelMessageFunc_OnSetText::InitVar()::bAdded
 D vgui::ContinuousProgressBar::ChainToAnimationMap()::chained
 D vgui::ContinuousProgressBar::ChainToMap()::chained
 D vgui::ContinuousProgressBar::GetKBMap()::s_pMap
 D vgui::ContinuousProgressBar::GetMessageMap()::s_pMap
 D vgui::ContinuousProgressBar::KB_ChainToMap()::chained
 D vgui::CvarToggleCheckButton<ConVarRef>::ChainToAnimationMap()::chained
 D vgui::CvarToggleCheckButton<ConVarRef>::ChainToMap()::chained
 D vgui::CvarToggleCheckButton<ConVarRef>::GetKBMap()::s_pMap
 D vgui::CvarToggleCheckButton<ConVarRef>::GetMessageMap()::s_pMap
 D vgui::CvarToggleCheckButton<ConVarRef>::KB_ChainToMap()::chained
 D vgui::CvarToggleCheckButton<ConVarRef>::PanelMessageFunc_OnApplyChanges::InitVar()::bAdded
 D vgui::CvarToggleCheckButton<ConVarRef>::PanelMessageFunc_OnButtonChecked::InitVar()::bAdded
 D vgui::Divider::ChainToAnimationMap()::chained
 D vgui::Divider::ChainToMap()::chained
 D vgui::Divider::GetKBMap()::s_pMap
 D vgui::Divider::GetMessageMap()::s_pMap
 D vgui::Divider::KB_ChainToMap()::chained
 D vgui::EditablePanel::ChainToAnimationMap()::chained
 D vgui::EditablePanel::ChainToMap()::chained
 D vgui::EditablePanel::GetKBMap()::s_pMap
 D vgui::EditablePanel::GetMessageMap()::s_pMap
 D vgui::EditablePanel::KB_ChainToMap()::chained
 D vgui::EditablePanel::PanelMessageFunc_OnCurrentDefaultButtonSet::InitVar()::bAdded
 D vgui::EditablePanel::PanelMessageFunc_OnDefaultButtonSet::InitVar()::bAdded
 D vgui::EditablePanel::PanelMessageFunc_OnFindDefaultButton::InitVar()::bAdded
 D vgui::ExpandButton::ChainToAnimationMap()::chained
 D vgui::ExpandButton::ChainToMap()::chained
 D vgui::ExpandButton::GetKBMap()::s_pMap
 D vgui::ExpandButton::GetMessageMap()::s_pMap
 D vgui::ExpandButton::KB_ChainToMap()::chained
 D vgui::ExpandButton::PanelMessageFunc_OnExpanded::InitVar()::bAdded
 D vgui::Frame::ChainToAnimationMap()::chained
 D vgui::Frame::ChainToMap()::chained
 D vgui::Frame::GetKBMap()::s_pMap
 D vgui::Frame::GetMessageMap()::s_pMap
 D vgui::Frame::KB_ChainToMap()::chained
 D vgui::Frame::PanelAnimationVar_m_iTitleTextInsetXOverride::InitVar()::bAdded
 D vgui::Frame::PanelAnimationVar_m_iTitleTextInsetYOverride::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_Close::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_CloseModal::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_InternalFlashWindow::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_InternalSetTitle::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_OnCloseFrameButtonPressed::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_OnDialogVariablesChanged::InitVar()::bAdded
 D vgui::Frame::PanelMessageFunc_OnMinimize::InitVar()::bAdded
 D vgui::FrameSystemButton::ChainToAnimationMap()::chained
 D vgui::FrameSystemButton::ChainToMap()::chained
 D vgui::FrameSystemButton::GetKBMap()::s_pMap
 D vgui::FrameSystemButton::GetMessageMap()::s_pMap
 D vgui::FrameSystemButton::KB_ChainToMap()::chained
 D vgui::GraphPanel::ChainToAnimationMap()::chained
 D vgui::GraphPanel::ChainToMap()::chained
 D vgui::GraphPanel::GetKBMap()::s_pMap
 D vgui::GraphPanel::GetMessageMap()::s_pMap
 D vgui::GraphPanel::KB_ChainToMap()::chained
 D vgui::ImagePanel::ChainToAnimationMap()::chained
 D vgui::ImagePanel::ChainToMap()::chained
 D vgui::ImagePanel::GetKBMap()::s_pMap
 D vgui::ImagePanel::GetMessageMap()::s_pMap
 D vgui::ImagePanel::KB_ChainToMap()::chained
 D vgui::Label::ChainToAnimationMap()::chained
 D vgui::Label::ChainToMap()::chained
 D vgui::Label::GetKBMap()::s_pMap
 D vgui::Label::GetMessageMap()::s_pMap
 D vgui::Label::KB_ChainToMap()::chained
 D vgui::Label::PanelMessageFunc_OnDialogVariablesChanged::InitVar()::bAdded
 D vgui::Label::PanelMessageFunc_OnHotkeyPressed::InitVar()::bAdded
 D vgui::Label::PanelMessageFunc_OnSetText::InitVar()::bAdded
 D vgui::ListPanel::ChainToAnimationMap()::chained
 D vgui::ListPanel::ChainToMap()::chained
 D vgui::ListPanel::GetKBMap()::s_pMap
 D vgui::ListPanel::GetMessageMap()::s_pMap
 D vgui::ListPanel::KB_ChainToMap()::chained
 D vgui::ListPanel::PanelMessageFunc_OnColumnResized::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_OnSetSortColumn::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_OnToggleColumnVisible::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_OpenColumnChoiceMenu::InitVar()::bAdded
 D vgui::ListPanel::PanelMessageFunc_ResizeColumnToContents::InitVar()::bAdded
 D vgui::ListViewItem::ChainToAnimationMap()::chained
 D vgui::ListViewItem::ChainToMap()::chained
 D vgui::ListViewItem::GetKBMap()::s_pMap
 D vgui::ListViewItem::GetMessageMap()::s_pMap
 D vgui::ListViewItem::KB_ChainToMap()::chained
 D vgui::ListViewPanel::ChainToAnimationMap()::chained
 D vgui::ListViewPanel::ChainToMap()::chained
 D vgui::ListViewPanel::GetKBMap()::s_pMap
 D vgui::ListViewPanel::GetMessageMap()::s_pMap
 D vgui::ListViewPanel::KB_ChainToMap()::chained
 D vgui::ListViewPanel::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::Menu::ChainToAnimationMap()::chained
 D vgui::Menu::ChainToMap()::chained
 D vgui::Menu::GetKBMap()::s_pMap
 D vgui::Menu::GetMessageMap()::s_pMap
 D vgui::Menu::KB_ChainToMap()::chained
 D vgui::Menu::PanelMessageFunc_OnCursorEnteredMenuItem::InitVar()::bAdded
 D vgui::Menu::PanelMessageFunc_OnCursorExitedMenuItem::InitVar()::bAdded
 D vgui::Menu::PanelMessageFunc_OnKeyModeSet::InitVar()::bAdded
 D vgui::Menu::PanelMessageFunc_OnMenuItemSelected::InitVar()::bAdded
 D vgui::Menu::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::MenuBar::ChainToAnimationMap()::chained
 D vgui::MenuBar::ChainToMap()::chained
 D vgui::MenuBar::GetKBMap()::s_pMap
 D vgui::MenuBar::GetMessageMap()::s_pMap
 D vgui::MenuBar::KB_ChainToMap()::chained
 D vgui::MenuBar::PanelMessageFunc_OnCursorEnteredMenuButton::InitVar()::bAdded
 D vgui::MenuBar::PanelMessageFunc_OnMenuClose::InitVar()::bAdded
 D vgui::MenuButton::ChainToAnimationMap()::chained
 D vgui::MenuButton::ChainToMap()::chained
 D vgui::MenuButton::GetKBMap()::s_pMap
 D vgui::MenuButton::GetMessageMap()::s_pMap
 D vgui::MenuButton::KB_ChainToMap()::chained
 D vgui::MenuButton::PanelMessageFunc_OnKillFocus::InitVar()::bAdded
 D vgui::MenuButton::PanelMessageFunc_OnMenuClose::InitVar()::bAdded
 D vgui::MenuItem::ChainToAnimationMap()::chained
 D vgui::MenuItem::ChainToMap()::chained
 D vgui::MenuItem::GetKBMap()::s_pMap
 D vgui::MenuItem::GetMessageMap()::s_pMap
 D vgui::MenuItem::KB_ChainToMap()::chained
 D vgui::MenuItem::PanelMessageFunc_ArmItem::InitVar()::bAdded
 D vgui::MenuItem::PanelMessageFunc_DisarmItem::InitVar()::bAdded
 D vgui::MenuItem::PanelMessageFunc_OnKeyModeSet::InitVar()::bAdded
 D vgui::MenuItem::PanelMessageFunc_OnKillFocus::InitVar()::bAdded
 D vgui::MenuSeparator::ChainToAnimationMap()::chained
 D vgui::MenuSeparator::ChainToMap()::chained
 D vgui::MenuSeparator::GetKBMap()::s_pMap
 D vgui::MenuSeparator::GetMessageMap()::s_pMap
 D vgui::MenuSeparator::KB_ChainToMap()::chained
 D vgui::MessageBox::ChainToAnimationMap()::chained
 D vgui::MessageBox::ChainToMap()::chained
 D vgui::MessageBox::GetKBMap()::s_pMap
 D vgui::MessageBox::GetMessageMap()::s_pMap
 D vgui::MessageBox::KB_ChainToMap()::chained
 D vgui::MessageBox::PanelMessageFunc_OnShutdownRequest::InitVar()::bAdded
 D vgui::Panel::ChainToAnimationMap()::chained
 D vgui::Panel::ChainToMap()::chained
 D vgui::Panel::GetKBMap()::s_pMap
 D vgui::Panel::GetMessageMap()::s_pMap
 D vgui::Panel::KB_ChainToMap()::chained
 D vgui::Panel::PanelAnimationVar_m_flAlpha::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nBgTextureId1::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nBgTextureId2::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nBgTextureId3::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nBgTextureId4::InitVar()::bAdded
 D vgui::Panel::PanelAnimationVar_m_nPaintBackgroundType::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalCursorEntered::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalCursorExited::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalCursorMoved::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalInvalidateLayout::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyCodePressed::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyCodeReleased::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyCodeTyped::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyFocusTicked::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalKeyTyped::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseDoublePressed::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseFocusTicked::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMousePressed::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseReleased::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseTriplePressed::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMouseWheeled::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_InternalMove::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnCommand::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnCursorMoved::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnDelete::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnKillFocus::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnMouseCaptureLost::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnMouseFocusTicked::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnNavigateFrom::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnNavigateTo::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnRequestFocus::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnScreenSizeChanged::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_OnSetFocus::InitVar()::bAdded
 D vgui::Panel::PanelMessageFunc_Repaint::InitVar()::bAdded
 D vgui::Panel::m_MessageMap
 D vgui::Panel::m_PanelMap
 D vgui::PanelListPanel::ChainToAnimationMap()::chained
 D vgui::PanelListPanel::ChainToMap()::chained
 D vgui::PanelListPanel::GetKBMap()::s_pMap
 D vgui::PanelListPanel::GetMessageMap()::s_pMap
 D vgui::PanelListPanel::KB_ChainToMap()::chained
 D vgui::PanelListPanel::PanelAnimationVar_m_bAutoHideScrollbar::InitVar()::bAdded
 D vgui::PanelListPanel::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::ProgressBar::ChainToAnimationMap()::chained
 D vgui::ProgressBar::ChainToMap()::chained
 D vgui::ProgressBar::GetKBMap()::s_pMap
 D vgui::ProgressBar::GetMessageMap()::s_pMap
 D vgui::ProgressBar::KB_ChainToMap()::chained
 D vgui::ProgressBar::PanelMessageFunc_OnDialogVariablesChanged::InitVar()::bAdded
 D vgui::ProgressBar::PanelMessageFunc_SetProgress::InitVar()::bAdded
 D vgui::RadioButton::ChainToAnimationMap()::chained
 D vgui::RadioButton::ChainToMap()::chained
 D vgui::RadioButton::GetKBMap()::s_pMap
 D vgui::RadioButton::GetMessageMap()::s_pMap
 D vgui::RadioButton::KB_ChainToMap()::chained
 D vgui::RadioButton::PanelMessageFunc_OnRadioButtonChecked::InitVar()::bAdded
 D vgui::RichText::ChainToAnimationMap()::chained
 D vgui::RichText::ChainToMap()::chained
 D vgui::RichText::GetKBMap()::s_pMap
 D vgui::RichText::GetMessageMap()::s_pMap
 D vgui::RichText::KB_ChainToMap()::chained
 D vgui::RichText::PanelMessageFunc_CopySelected::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_CutSelected::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_MoveScrollBar::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_MoveScrollBarDirect::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_OnClickPanel::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_OnSetText::InitVar()::bAdded
 D vgui::RichText::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::RichTextInterior::ChainToAnimationMap()::chained
 D vgui::RichTextInterior::ChainToMap()::chained
 D vgui::RichTextInterior::GetKBMap()::s_pMap
 D vgui::RichTextInterior::GetMessageMap()::s_pMap
 D vgui::RichTextInterior::KB_ChainToMap()::chained
 D vgui::ScalableImagePanel::ChainToAnimationMap()::chained
 D vgui::ScalableImagePanel::ChainToMap()::chained
 D vgui::ScalableImagePanel::GetKBMap()::s_pMap
 D vgui::ScalableImagePanel::GetMessageMap()::s_pMap
 D vgui::ScalableImagePanel::KB_ChainToMap()::chained
 D vgui::ScrollBar::ChainToAnimationMap()::chained
 D vgui::ScrollBar::ChainToMap()::chained
 D vgui::ScrollBar::GetKBMap()::s_pMap
 D vgui::ScrollBar::GetMessageMap()::s_pMap
 D vgui::ScrollBar::KB_ChainToMap()::chained
 D vgui::ScrollBar::PanelAnimationVar_m_bAutoHideButtons::InitVar()::bAdded
 D vgui::ScrollBar::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::ScrollBarSlider::ChainToAnimationMap()::chained
 D vgui::ScrollBarSlider::ChainToMap()::chained
 D vgui::ScrollBarSlider::GetKBMap()::s_pMap
 D vgui::ScrollBarSlider::GetMessageMap()::s_pMap
 D vgui::ScrollBarSlider::KB_ChainToMap()::chained
 D vgui::SectionedListPanel::ChainToAnimationMap()::chained
 D vgui::SectionedListPanel::ChainToMap()::chained
 D vgui::SectionedListPanel::GetKBMap()::s_pMap
 D vgui::SectionedListPanel::GetMessageMap()::s_pMap
 D vgui::SectionedListPanel::KB_ChainToMap()::chained
 D vgui::SectionedListPanel::PanelAnimationVar_m_bShowColumns::InitVar()::bAdded
 D vgui::SectionedListPanel::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::SectionedListPanelHeader::ChainToAnimationMap()::chained
 D vgui::SectionedListPanelHeader::ChainToMap()::chained
 D vgui::SectionedListPanelHeader::GetKBMap()::s_pMap
 D vgui::SectionedListPanelHeader::GetMessageMap()::s_pMap
 D vgui::SectionedListPanelHeader::KB_ChainToMap()::chained
 D vgui::Segments
 D vgui::Slider::ChainToAnimationMap()::chained
 D vgui::Slider::ChainToMap()::chained
 D vgui::Slider::GetKBMap()::s_pMap
 D vgui::Slider::GetMessageMap()::s_pMap
 D vgui::Slider::KB_ChainToMap()::chained
 D vgui::TextEntry::ChainToAnimationMap()::chained
 D vgui::TextEntry::ChainToMap()::chained
 D vgui::TextEntry::GetKBMap()::s_pMap
 D vgui::TextEntry::GetMessageMap()::s_pMap
 D vgui::TextEntry::KB_ChainToMap()::chained
 D vgui::TextEntry::PanelMessageFunc_CompositionString::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_ConversionModeChanged::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_CopySelected::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_CutSelected::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_HideIMECandidates::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_LanguageChanged::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_OnSetState::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_OnSetText::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_Paste::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_SentenceModeChanged::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_ShowIMECandidates::InitVar()::bAdded
 D vgui::TextEntry::PanelMessageFunc_UpdateIMECandidates::InitVar()::bAdded
 D vgui::ToggleButton::ChainToAnimationMap()::chained
 D vgui::ToggleButton::ChainToMap()::chained
 D vgui::ToggleButton::GetKBMap()::s_pMap
 D vgui::ToggleButton::GetMessageMap()::s_pMap
 D vgui::ToggleButton::KB_ChainToMap()::chained
 D vgui::TreeNode::ChainToAnimationMap()::chained
 D vgui::TreeNode::ChainToMap()::chained
 D vgui::TreeNode::GetKBMap()::s_pMap
 D vgui::TreeNode::GetMessageMap()::s_pMap
 D vgui::TreeNode::KB_ChainToMap()::chained
 D vgui::TreeNode::PanelMessageFunc_OnLabelChanged::InitVar()::bAdded
 D vgui::TreeNodeText::ChainToAnimationMap()::chained
 D vgui::TreeNodeText::ChainToMap()::chained
 D vgui::TreeNodeText::GetKBMap()::s_pMap
 D vgui::TreeNodeText::GetMessageMap()::s_pMap
 D vgui::TreeNodeText::KB_ChainToMap()::chained
 D vgui::TreeNodeText::PanelMessageFunc_OnTextChanged::InitVar()::bAdded
 D vgui::TreeView::ChainToAnimationMap()::chained
 D vgui::TreeView::ChainToMap()::chained
 D vgui::TreeView::GetKBMap()::s_pMap
 D vgui::TreeView::GetMessageMap()::s_pMap
 D vgui::TreeView::KB_ChainToMap()::chained
 D vgui::TreeView::PanelMessageFunc_OnSliderMoved::InitVar()::bAdded
 D vgui::URLLabel::ChainToAnimationMap()::chained
 D vgui::URLLabel::ChainToMap()::chained
 D vgui::URLLabel::GetKBMap()::s_pMap
 D vgui::URLLabel::GetMessageMap()::s_pMap
 D vgui::URLLabel::KB_ChainToMap()::chained
 D vieweffects
 D vtable for AshDebrisEffect
 D vtable for Beam_t
 D vtable for BitmapImage
 D vtable for BlankImage
 D vtable for CAboveWaterView
 D vtable for CAboveWaterView::CIntersectionView
 D vtable for CAboveWaterView::CReflectionView
 D vtable for CAboveWaterView::CRefractionView
 D vtable for CAbsProxy
 D vtable for CAchievementNotificationPanel
 D vtable for CAchievementSaveThread
 D vtable for CAddProxy
 D vtable for CAlphaMaterialProxy
 D vtable for CAmmoDef
 D vtable for CAnimateSpecificTexture
 D vtable for CAnimatedEntityTextureProxy
 D vtable for CAnimatedOffsetTextureProxy
 D vtable for CAnimatedTextureProxy
 D vtable for CAntlionGibManager
 D vtable for CAsyncCaptionResourceManager
 D vtable for CAutoGameSystem
 D vtable for CAutoGameSystemPerFrame
 D vtable for CAvatarImage
 D vtable for CAvatarImagePanel
 D vtable for CBaseAnimatedTextureProxy
 D vtable for CBaseEntityList
 D vtable for CBaseGameStats
 D vtable for CBaseGameStats_Driver
 D vtable for CBaseHudChat
 D vtable for CBaseHudChatEntry
 D vtable for CBaseHudChatInputLine
 D vtable for CBaseHudChatLine
 D vtable for CBaseHudWeaponSelection
 D vtable for CBaseModelPanel
 D vtable for CBasePresence
 D vtable for CBaseRopePhysics
 D vtable for CBaseToggleTextureProxy
 D vtable for CBaseViewport
 D vtable for CBaseViewport::CBackGroundPanel
 D vtable for CBaseWaterView
 D vtable for CBaseWaterView::CSoftwareIntersectionView
 D vtable for CBeamSegDraw
 D vtable for CBitmapButton
 D vtable for CBitmapPanel
 D vtable for CBloodSprayEmitter
 D vtable for CBoolProperty
 D vtable for CBorderVisualizerPanel
 D vtable for CBoundedCvar_Interp
 D vtable for CBoundedCvar_InterpRatio
 D vtable for CBoundedCvar_Predict
 D vtable for CBreakParser
 D vtable for CBreakableSurfaceProxy
 D vtable for CBroadcastRecipientFilter
 D vtable for CBuildModeNavCombo
 D vtable for CBulletWhizTimer
 D vtable for CCallback<CAvatarImage, PersonaStateChange_t, false>
 D vtable for CCallback<CClientSteamContext, SteamServerConnectFailure_t, false>
 D vtable for CCallback<CClientSteamContext, SteamServersConnected_t, false>
 D vtable for CCallback<CClientSteamContext, SteamServersDisconnected_t, false>
 D vtable for CCallbackImpl<12>
 D vtable for CCallbackImpl<1>
 D vtable for CCallbackImpl<4>
 D vtable for CCallbackImpl<8>
 D vtable for CCamoMaterialProxy
 D vtable for CCamoTextureRegen
 D vtable for CCenterPrint
 D vtable for CCenterStringLabel
 D vtable for CChildOperatorDefinition
 D vtable for CChoreoEvent
 D vtable for CChoreoScene
 D vtable for CChoreoStringPool
 D vtable for CClampProxy
 D vtable for CClassMap
 D vtable for CClientDLLSharedAppSystems
 D vtable for CClientEffect
 D vtable for CClientEffectPrecacheSystem
 D vtable for CClientEntityList
 D vtable for CClientLeafSystem
 D vtable for CClientRenderablesList
 D vtable for CClientScoreBoardDialog
 D vtable for CClientShadowMgr
 D vtable for CClientSideEffect
 D vtable for CClientThinkList
 D vtable for CClientTools
 D vtable for CClientVirtualReality
 D vtable for CClient_Precipitation
 D vtable for CCollisionEvent
 D vtable for CCollisionProperty
 D vtable for CColorCorrectionMgr
 D vtable for CColorProperty
 D vtable for CColorVisualizerPanel
 D vtable for CCombatCharVisCache
 D vtable for CCommentaryModelPanel
 D vtable for CCommentaryModelViewer
 D vtable for CConCommandMemberAccessor<CBasePresence>
 D vtable for CConveyorMaterialProxy
 D vtable for CCopyRecipientFilter
 D vtable for CCopyableUtlVector<ModelPoseDebugInfo::InfoText, CUtlMemory<ModelPoseDebugInfo::InfoText, int> >
 D vtable for CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>
 D vtable for CDataManagerBase
 D vtable for CDataObjectAccessSystem
 D vtable for CDebugOverlay
 D vtable for CDebugOverlayPanel
 D vtable for CDecalEmitterSystem
 D vtable for CDefaultAccessor
 D vtable for CDefaultParticleSystemQuery
 D vtable for CDetailModel
 D vtable for CDetailObjectSystem
 D vtable for CDirtySpatialPartitionEntityList
 D vtable for CDivideProxy
 D vtable for CDllDemandLoader
 D vtable for CDragDropHelperPanel
 D vtable for CDummyMaterialProxy
 D vtable for CDustEffect
 D vtable for CDustFollower
 D vtable for CDustParticle
 D vtable for CEZParticleInit
 D vtable for CEffectsClient
 D vtable for CEffectsList
 D vtable for CEmberEffect
 D vtable for CEmberEmitter
 D vtable for CEmptyConVar
 D vtable for CEmptyProxy
 D vtable for CEnginePostMaterialProxy
 D vtable for CEntityDataInstantiator<CWatcherList>
 D vtable for CEntityDataInstantiator<ModelScale>
 D vtable for CEntityDataInstantiator<StepSimulationData>
 D vtable for CEntityDataInstantiator<groundlink_t>
 D vtable for CEntityDataInstantiator<physicspushlist_t>
 D vtable for CEntityDataInstantiator<touchlink_t>
 D vtable for CEntityDataInstantiator<vphysicsupdateai_t>
 D vtable for CEntityOriginAlyxMaterialProxy
 D vtable for CEntityOriginMaterialProxy
 D vtable for CEntityRandomProxy
 D vtable for CEntitySaveRestoreBlockHandler
 D vtable for CEntitySaveUtils
 D vtable for CEntitySpeedProxy
 D vtable for CEnvHeadcrabCanisterShared
 D vtable for CEnvWindShared
 D vtable for CEp1IntroVortRefractMaterialProxy
 D vtable for CEqualsProxy
 D vtable for CExampleEffect
 D vtable for CExplosionOverlay
 D vtable for CExplosionParticle
 D vtable for CExponentialProxy
 D vtable for CFPS
 D vtable for CFPSPanel
 D vtable for CFXDiscreetLine
 D vtable for CFXLine
 D vtable for CFXQuad
 D vtable for CFXStaticLine
 D vtable for CFastDetailLeafSpriteList
 D vtable for CFireParticle
 D vtable for CFireSmokeEffect
 D vtable for CFlaggedEntitiesEnum
 D vtable for CFlashlightEffect
 D vtable for CFleckParticles
 D vtable for CFlexAnimationTrack
 D vtable for CFlexSceneFileManager
 D vtable for CFloatProperty
 D vtable for CFmtStrN<256, false>
 D vtable for CFracProxy
 D vtable for CFreezeFrameView
 D vtable for CFunctionProxy
 D vtable for CFunctor6<void (*)(int, int, int, int, bool, bool), int, int, int, int, bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 D vtable for CGameClientExports
 D vtable for CGameEventListener
 D vtable for CGameMovement
 D vtable for CGameStringPool
 D vtable for CGaussianNoiseProxy
 D vtable for CGlowOverlay
 D vtable for CGlowOverlaySystem
 D vtable for CHFontProperty
 D vtable for CHL2GameMovement
 D vtable for CHLClient
 D vtable for CHLInput
 D vtable for CHLModeManager
 D vtable for CHLVoiceStatusHelper
 D vtable for CHUDAutoAim
 D vtable for CHUDQuickInfo
 D vtable for CHeadlightEffect
 D vtable for CHeliBladeMaterialProxy
 D vtable for CHudAmmo
 D vtable for CHudAnimationInfo
 D vtable for CHudBattery
 D vtable for CHudChat
 D vtable for CHudChatFilterButton
 D vtable for CHudChatFilterCheckButton
 D vtable for CHudChatFilterPanel
 D vtable for CHudChatHistory
 D vtable for CHudCloseCaption
 D vtable for CHudCommentary
 D vtable for CHudCredits
 D vtable for CHudCrosshair
 D vtable for CHudDamageIndicator
 D vtable for CHudDeathNotice
 D vtable for CHudElement
 D vtable for CHudFilmDemo
 D vtable for CHudGeiger
 D vtable for CHudHDRDemo
 D vtable for CHudHealth
 D vtable for CHudHintDisplay
 D vtable for CHudHintKeyDisplay
 D vtable for CHudHistoryResource
 D vtable for CHudMenu
 D vtable for CHudMessage
 D vtable for CHudNumericDisplay
 D vtable for CHudPoisonDamageIndicator
 D vtable for CHudPosture
 D vtable for CHudSecondaryAmmo
 D vtable for CHudSquadStatus
 D vtable for CHudSuitPower
 D vtable for CHudTextMessage
 D vtable for CHudTexture
 D vtable for CHudTextureHandleProperty
 D vtable for CHudTrain
 D vtable for CHudVehicle
 D vtable for CHudViewport
 D vtable for CHudWeapon
 D vtable for CHudWeaponSelection
 D vtable for CHudZoom
 D vtable for CIconPanel
 D vtable for CImpactOverlay
 D vtable for CInput
 D vtable for CIntProperty
 D vtable for CIntProxy
 D vtable for CInterpolatedVar<C_AnimationLayer>
 D vtable for CInterpolatedVar<QAngle>
 D vtable for CInterpolatedVar<Vector>
 D vtable for CInterpolatedVar<float>
 D vtable for CInterpolatedVarArray<QAngle, 24>
 D vtable for CInterpolatedVarArray<Vector, 24>
 D vtable for CInterpolatedVarArray<Vector, 6>
 D vtable for CInterpolatedVarArray<float, 24>
 D vtable for CInterpolatedVarArray<float, 4>
 D vtable for CInterpolatedVarArray<float, 96>
 D vtable for CInterpolatedVarArrayBase<C_AnimationLayer, false>
 D vtable for CInterpolatedVarArrayBase<QAngle, false>
 D vtable for CInterpolatedVarArrayBase<QAngle, true>
 D vtable for CInterpolatedVarArrayBase<Vector, false>
 D vtable for CInterpolatedVarArrayBase<Vector, true>
 D vtable for CInterpolatedVarArrayBase<float, false>
 D vtable for CInterpolatedVarArrayBase<float, true>
 D vtable for CLCD
 D vtable for CLCDItem
 D vtable for CLCDItemAggregate
 D vtable for CLCDItemIcon
 D vtable for CLCDItemText
 D vtable for CLCDPage
 D vtable for CLampBeamProxy
 D vtable for CLampHaloProxy
 D vtable for CLessOrEqualProxy
 D vtable for CLightmapDebugView
 D vtable for CLinearRampProxy
 D vtable for CLoadingDisc
 D vtable for CLoadingDiscPanel
 D vtable for CLocalPlayerFilter
 D vtable for CLocalSpaceEmitter
 D vtable for CMDLPanel
 D vtable for CManagedDataCacheClient<AsyncCaptionData_t, asynccaptionparams_t, AsyncCaptionData_t*>
 D vtable for CMaterialModifyAnimatedProxy
 D vtable for CMaterialModifyProxy
 D vtable for CMatrixRotateProxy
 D vtable for CMemberFunctor0<CParallelProcessor<CNewParticleEffect*, CFuncJobItemProcessor<CNewParticleEffect*> >*, void (CParallelProcessor<CNewParticleEffect*, CFuncJobItemProcessor<CNewParticleEffect*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor0<CParallelProcessor<C_BaseAnimating*, CFuncJobItemProcessor<C_BaseAnimating*> >*, void (CParallelProcessor<C_BaseAnimating*, CFuncJobItemProcessor<C_BaseAnimating*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMemberFunctor6<CRopeManager*, void (CRopeManager::*)(bool, CRopeManager::RopeRenderData_t*, int, Vector const&, Vector const&, C_RopeKeyframe::BuildRopeQueuedData_t*), bool, CRopeManager::RopeRenderData_t*, int, Vector, Vector, C_RopeKeyframe::BuildRopeQueuedData_t*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 D vtable for CMessageChars
 D vtable for CMessageCharsPanel
 D vtable for CModelPanel
 D vtable for CModelPanelModel
 D vtable for CMotionBlurMaterialProxy
 D vtable for CMouthInfo
 D vtable for CMoveHelperClient
 D vtable for CMultiplyProxy
 D vtable for CMumbleSystem
 D vtable for CNavProgress
 D vtable for CNetGraphPanel
 D vtable for CNetGraphPanelInterface
 D vtable for CNewParticleEffect
 D vtable for CPASAttenuationFilter
 D vtable for CPASFilter
 D vtable for CPDumpPanel
 D vtable for CPVSFilter
 D vtable for CPanelFactory<CSlideshowDisplayScreen, VGuiScreenInitData_t>
 D vtable for CPanelFactory<CTeleportCountdownScreen, VGuiScreenInitData_t>
 D vtable for CPanelFactory<CVGuiScreenPanel, VGuiScreenInitData_t>
 D vtable for CPanelMetaClassMgrImp
 D vtable for CParticleAttractor
 D vtable for CParticleCollision
 D vtable for CParticleEffect
 D vtable for CParticleEffectBinding
 D vtable for CParticleMgr
 D vtable for CParticleOperatorDefinition<C_INIT_AgeNoise>
 D vtable for CParticleOperatorDefinition<C_INIT_CreateAlongPath>
 D vtable for CParticleOperatorDefinition<C_INIT_CreateFromParentParticles>
 D vtable for CParticleOperatorDefinition<C_INIT_CreateFromPlaneCache>
 D vtable for CParticleOperatorDefinition<C_INIT_CreateInHierarchy>
 D vtable for CParticleOperatorDefinition<C_INIT_CreateOnModel>
 D vtable for CParticleOperatorDefinition<C_INIT_CreateSequentialPath>
 D vtable for CParticleOperatorDefinition<C_INIT_CreateWithinBox>
 D vtable for CParticleOperatorDefinition<C_INIT_CreateWithinSphere>
 D vtable for CParticleOperatorDefinition<C_INIT_CreationNoise>
 D vtable for CParticleOperatorDefinition<C_INIT_DistanceToCPInit>
 D vtable for CParticleOperatorDefinition<C_INIT_InheritVelocity>
 D vtable for CParticleOperatorDefinition<C_INIT_InitialRepulsionVelocity>
 D vtable for CParticleOperatorDefinition<C_INIT_InitialVelocityNoise>
 D vtable for CParticleOperatorDefinition<C_INIT_LifespanFromVelocity>
 D vtable for CParticleOperatorDefinition<C_INIT_MoveBetweenPoints>
 D vtable for CParticleOperatorDefinition<C_INIT_PositionOffset>
 D vtable for CParticleOperatorDefinition<C_INIT_PositionWarp>
 D vtable for CParticleOperatorDefinition<C_INIT_RandomAlpha>
 D vtable for CParticleOperatorDefinition<C_INIT_RandomColor>
 D vtable for CParticleOperatorDefinition<C_INIT_RandomLifeTime>
 D vtable for CParticleOperatorDefinition<C_INIT_RandomRadius>
 D vtable for CParticleOperatorDefinition<C_INIT_RandomRotation>
 D vtable for CParticleOperatorDefinition<C_INIT_RandomRotationSpeed>
 D vtable for CParticleOperatorDefinition<C_INIT_RandomSecondSequence>
 D vtable for CParticleOperatorDefinition<C_INIT_RandomSequence>
 D vtable for CParticleOperatorDefinition<C_INIT_RandomTrailLength>
 D vtable for CParticleOperatorDefinition<C_INIT_RandomYaw>
 D vtable for CParticleOperatorDefinition<C_INIT_RandomYawFlip>
 D vtable for CParticleOperatorDefinition<C_INIT_RemapCPtoScalar>
 D vtable for CParticleOperatorDefinition<C_INIT_RemapCPtoVector>
 D vtable for CParticleOperatorDefinition<C_INIT_RemapScalar>
 D vtable for CParticleOperatorDefinition<C_INIT_RemapScalarToVector>
 D vtable for CParticleOperatorDefinition<C_INIT_SequenceLifeTime>
 D vtable for CParticleOperatorDefinition<C_INIT_VelocityRandom>
 D vtable for CParticleOperatorDefinition<C_OP_AttractToControlPoint>
 D vtable for CParticleOperatorDefinition<C_OP_BasicMovement>
 D vtable for CParticleOperatorDefinition<C_OP_ColorInterpolate>
 D vtable for CParticleOperatorDefinition<C_OP_ConstrainDistance>
 D vtable for CParticleOperatorDefinition<C_OP_ConstrainDistanceToPath>
 D vtable for CParticleOperatorDefinition<C_OP_ContinuousEmitter>
 D vtable for CParticleOperatorDefinition<C_OP_ControlpointLight>
 D vtable for CParticleOperatorDefinition<C_OP_Cull>
 D vtable for CParticleOperatorDefinition<C_OP_DampenToCP>
 D vtable for CParticleOperatorDefinition<C_OP_Decay>
 D vtable for CParticleOperatorDefinition<C_OP_DistanceBetweenCPs>
 D vtable for CParticleOperatorDefinition<C_OP_DistanceToCP>
 D vtable for CParticleOperatorDefinition<C_OP_FadeAndKill>
 D vtable for CParticleOperatorDefinition<C_OP_FadeIn>
 D vtable for CParticleOperatorDefinition<C_OP_FadeOut>
 D vtable for CParticleOperatorDefinition<C_OP_InstantaneousEmitter>
 D vtable for CParticleOperatorDefinition<C_OP_InterpolateRadius>
 D vtable for CParticleOperatorDefinition<C_OP_LockToBone>
 D vtable for CParticleOperatorDefinition<C_OP_MaintainSequentialPath>
 D vtable for CParticleOperatorDefinition<C_OP_MaxVelocity>
 D vtable for CParticleOperatorDefinition<C_OP_ModelCull>
 D vtable for CParticleOperatorDefinition<C_OP_MovementRotateParticleAroundAxis>
 D vtable for CParticleOperatorDefinition<C_OP_Noise>
 D vtable for CParticleOperatorDefinition<C_OP_NoiseEmitter>
 D vtable for CParticleOperatorDefinition<C_OP_Orient2DRelToCP>
 D vtable for CParticleOperatorDefinition<C_OP_OrientTo2dDirection>
 D vtable for CParticleOperatorDefinition<C_OP_OscillateScalar>
 D vtable for CParticleOperatorDefinition<C_OP_OscillateVector>
 D vtable for CParticleOperatorDefinition<C_OP_PerParticleEmitter>
 D vtable for CParticleOperatorDefinition<C_OP_PlanarConstraint>
 D vtable for CParticleOperatorDefinition<C_OP_PlaneCull>
 D vtable for CParticleOperatorDefinition<C_OP_PositionLock>
 D vtable for CParticleOperatorDefinition<C_OP_RandomForce>
 D vtable for CParticleOperatorDefinition<C_OP_RemapCPtoScalar>
 D vtable for CParticleOperatorDefinition<C_OP_RemapDotProductToScalar>
 D vtable for CParticleOperatorDefinition<C_OP_RemapScalar>
 D vtable for CParticleOperatorDefinition<C_OP_RemapSpeedtoCP>
 D vtable for CParticleOperatorDefinition<C_OP_RenderPoints>
 D vtable for CParticleOperatorDefinition<C_OP_RenderRope>
 D vtable for CParticleOperatorDefinition<C_OP_RenderScreenVelocityRotate>
 D vtable for CParticleOperatorDefinition<C_OP_RenderSprites>
 D vtable for CParticleOperatorDefinition<C_OP_RenderSpritesTrail>
 D vtable for CParticleOperatorDefinition<C_OP_SetChildControlPoints>
 D vtable for CParticleOperatorDefinition<C_OP_SetControlPointPositions>
 D vtable for CParticleOperatorDefinition<C_OP_SetControlPointToCenter>
 D vtable for CParticleOperatorDefinition<C_OP_SetControlPointToPlayer>
 D vtable for CParticleOperatorDefinition<C_OP_Spin>
 D vtable for CParticleOperatorDefinition<C_OP_SpinUpdate>
 D vtable for CParticleOperatorDefinition<C_OP_SpinYaw>
 D vtable for CParticleOperatorDefinition<C_OP_TwistAroundAxis>
 D vtable for CParticleOperatorDefinition<C_OP_VectorNoise>
 D vtable for CParticleOperatorDefinition<C_OP_VelocityDecay>
 D vtable for CParticleOperatorDefinition<C_OP_VelocityMatchingForce>
 D vtable for CParticleOperatorDefinition<C_OP_WorldCollideConstraint>
 D vtable for CParticleOperatorDefinition<C_OP_WorldTraceConstraint>
 D vtable for CParticleProperty
 D vtable for CParticleSystemQuery
 D vtable for CPerfVisualBenchmark
 D vtable for CPhysBoxMultiplayer
 D vtable for CPhysObjSaveRestoreOps
 D vtable for CPhysSaveRestoreBlockHandler
 D vtable for CPhysicsGameTrace
 D vtable for CPhysicsPropMultiplayer
 D vtable for CPhysicsSystem
 D vtable for CPixelVisibilitySystem
 D vtable for CPlasmaSpray
 D vtable for CPlayerAndObjectEnumerator
 D vtable for CPlayerLocalData
 D vtable for CPlayerLogoProxy
 D vtable for CPlayerPositionProxy
 D vtable for CPlayerProximityProxy
 D vtable for CPlayerSpeedProxy
 D vtable for CPlayerState
 D vtable for CPlayerTeamMatchProxy
 D vtable for CPlayerViewProxy
 D vtable for CPoseDebuggerImpl
 D vtable for CPoseDebuggerStub
 D vtable for CPotteryWheelManip
 D vtable for CPotteryWheelPanel
 D vtable for CPrecipHack
 D vtable for CPredictableList
 D vtable for CPrediction
 D vtable for CPropData
 D vtable for CProportionalFloatProperty
 D vtable for CProportionalIntProperty
 D vtable for CProportionalIntWithScreenspacePropertyX
 D vtable for CProportionalIntWithScreenspacePropertyY
 D vtable for CProxyHealth
 D vtable for CProxyIsNPC
 D vtable for CPupilProxy
 D vtable for CPushAwayEnumerator
 D vtable for CRagdoll
 D vtable for CRagdollAnimatedFriction
 D vtable for CRagdollBoltEnumerator
 D vtable for CRagdollCollisionRules
 D vtable for CRagdollEnumerator
 D vtable for CRagdollExplosionEnumerator
 D vtable for CRagdollLRURetirement
 D vtable for CRecordingList
 D vtable for CReflectiveGlassView
 D vtable for CRefractiveGlassView
 D vtable for CRendering3dView
 D vtable for CRestore
 D vtable for CResultProxy
 D vtable for CRocketTrailParticle
 D vtable for CRopeManager
 D vtable for CRopePhysics<10>
 D vtable for CRopePhysics<7>
 D vtable for CRotationManipulator
 D vtable for CSave
 D vtable for CSaveRestoreBlockSet
 D vtable for CSceneTokenProcessor
 D vtable for CSchemeVisualizer
 D vtable for CScreenSpaceEffectManager
 D vtable for CSelectFirstIfNonZeroProxy
 D vtable for CShadowDepthView
 D vtable for CShadowLeafEnum
 D vtable for CShadowModelProxy
 D vtable for CShadowProxy
 D vtable for CShieldProxy
 D vtable for CSimple3DEmitter
 D vtable for CSimpleEmitter
 D vtable for CSimpleGlowEmitter
 D vtable for CSimpleRenderExecutor
 D vtable for CSimpleWorldView
 D vtable for CSineProxy
 D vtable for CSingleUserRecipientFilter
 D vtable for CSkyboxView
 D vtable for CSlideshowDisplayScreen
 D vtable for CSmallTextEntry
 D vtable for CSmokeEmitter
 D vtable for CSmokeParticle
 D vtable for CSnowFallManager
 D vtable for CSolidSetDefaults
 D vtable for CSoundControllerImp
 D vtable for CSoundEmitterSystem
 D vtable for CSoundEnvelopeController
 D vtable for CSoundPatchSaveRestoreOps
 D vtable for CSpecButton
 D vtable for CSpectatorGUI
 D vtable for CSpectatorMenu
 D vtable for CSplashParticle
 D vtable for CStringProperty
 D vtable for CStudioStatsEnumerator
 D vtable for CSubtractProxy
 D vtable for CTEParticleRenderer
 D vtable for CTeamMenu
 D vtable for CTeleportCountdownScreen
 D vtable for CTempEnts
 D vtable for CTextWindow
 D vtable for CTextureIdProperty
 D vtable for CTextureScrollMaterialProxy
 D vtable for CTextureTransformProxy
 D vtable for CTimeMaterialProxy
 D vtable for CToolFrameworkClient
 D vtable for CTraceFilterGlow
 D vtable for CTraceFilterHitAll
 D vtable for CTraceFilterNoCombatCharacters
 D vtable for CTraceFilterNoNPCsOrPlayer
 D vtable for CTraceFilterSimple
 D vtable for CTraceFilterSimpleList
 D vtable for CTraceFilterSkipNPCsAndPlayers
 D vtable for CTraceFilterSkipPlayerAndViewModel
 D vtable for CTraceFilterSkipTwoEntities
 D vtable for CTraceFilterWorldOnly
 D vtable for CTrailParticles
 D vtable for CTransformManipulator
 D vtable for CTranslationManipulator
 D vtable for CUnderWaterView
 D vtable for CUnderWaterView::CRefractionView
 D vtable for CUniformNoiseProxy
 D vtable for CUserCmd
 D vtable for CUtlCStringConversion
 D vtable for CUtlCharConversion
 D vtable for CUtlNoEscConversion
 D vtable for CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>
 D vtable for CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>
 D vtable for CVGuiScreenEnumerator
 D vtable for CVGuiScreenPanel
 D vtable for CVTFTexture
 D vtable for CViewAngleAnimation
 D vtable for CViewEffects
 D vtable for CViewEffectsSaveRestoreBlockHandler
 D vtable for CViewRender
 D vtable for CViewRenderBeams
 D vtable for CViewportClientSystem
 D vtable for CVisibleShadowList
 D vtable for CVoiceStatus
 D vtable for CVortEmissiveProxy
 D vtable for CWaterExplosionParticle
 D vtable for CWaterLODMaterialProxy
 D vtable for CWorkerThread
 D vtable for CWorldDimsProxy
 D vtable for CWrapMinMaxProxy
 D vtable for CZoomManipulator
 D vtable for C_AI_BaseNPC
 D vtable for C_AR2Explosion
 D vtable for C_AlyxEmpEffect
 D vtable for C_AntlionGib
 D vtable for C_Barney
 D vtable for C_BaseAnimating
 D vtable for C_BaseAnimatingGameSystem
 D vtable for C_BaseAnimatingOverlay
 D vtable for C_BaseCombatCharacter
 D vtable for C_BaseCombatWeapon
 D vtable for C_BaseDoor
 D vtable for C_BaseEntity
 D vtable for C_BaseEntity::NetworkVar_m_Collision
 D vtable for C_BaseEntity::NetworkVar_m_Particles
 D vtable for C_BaseEntityClassList
 D vtable for C_BaseExplosionEffect
 D vtable for C_BaseFlex
 D vtable for C_BaseGrenade
 D vtable for C_BaseHLBludgeonWeapon
 D vtable for C_BaseHLCombatWeapon
 D vtable for C_BaseHLPlayer
 D vtable for C_BaseHelicopter
 D vtable for C_BaseParticleEntity
 D vtable for C_BasePlayer
 D vtable for C_BasePlayer::NetworkVar_m_Local
 D vtable for C_BaseProjectile
 D vtable for C_BasePropDoor
 D vtable for C_BaseTeamObjectiveResource
 D vtable for C_BaseTempEntity
 D vtable for C_BaseViewModel
 D vtable for C_Beam
 D vtable for C_BoneFollower
 D vtable for C_BreakableProp
 D vtable for C_BreakableSurface
 D vtable for C_CitadelEnergyCore
 D vtable for C_ClientRagdoll
 D vtable for C_ColorCorrection
 D vtable for C_ColorCorrectionVolume
 D vtable for C_CombineGunship
 D vtable for C_Corpse
 D vtable for C_CrossbowBolt
 D vtable for C_DustTrail
 D vtable for C_DynamicLight
 D vtable for C_DynamicProp
 D vtable for C_Embers
 D vtable for C_EntityClassList<C_FuncReflectiveGlass>
 D vtable for C_EntityClassList<C_PointCamera>
 D vtable for C_EntityDissolve
 D vtable for C_EntityFlame
 D vtable for C_EntityParticleTrail
 D vtable for C_EnvDetailController
 D vtable for C_EnvHeadcrabCanister
 D vtable for C_EnvParticleScript
 D vtable for C_EnvProjectedTexture
 D vtable for C_EnvScreenEffect
 D vtable for C_EnvScreenOverlay
 D vtable for C_EnvStarfield
 D vtable for C_EnvTonemapController
 D vtable for C_EnvWind
 D vtable for C_EnvelopeFX
 D vtable for C_FireFromAboveSprite
 D vtable for C_FireSmoke
 D vtable for C_FireSprite
 D vtable for C_FireTrail
 D vtable for C_Fish
 D vtable for C_Flare
 D vtable for C_Flaregun
 D vtable for C_FogController
 D vtable for C_FuncAreaPortalWindow
 D vtable for C_FuncConveyor
 D vtable for C_FuncLadder
 D vtable for C_FuncMonitor
 D vtable for C_FuncOccluder
 D vtable for C_FuncPhysicsRespawnZone
 D vtable for C_FuncReflectiveGlass
 D vtable for C_FuncRotating
 D vtable for C_FuncSmokeVolume
 D vtable for C_FuncTrackTrain
 D vtable for C_Func_Dust
 D vtable for C_Func_LOD
 D vtable for C_GameRules
 D vtable for C_GameRulesProxy
 D vtable for C_Gib
 D vtable for C_GunshipFX
 D vtable for C_HL2PlayerLocalData
 D vtable for C_HLMachineGun
 D vtable for C_HLSelectFireMachineGun
 D vtable for C_HLTVCamera
 D vtable for C_Hairball
 D vtable for C_Hairball::CHairballDelegate
 D vtable for C_HalfLife2
 D vtable for C_HalfLife2Proxy
 D vtable for C_HandleTest
 D vtable for C_INIT_AgeNoise
 D vtable for C_INIT_CreateAlongPath
 D vtable for C_INIT_CreateFromParentParticles
 D vtable for C_INIT_CreateFromPlaneCache
 D vtable for C_INIT_CreateInHierarchy
 D vtable for C_INIT_CreateOnModel
 D vtable for C_INIT_CreateSequentialPath
 D vtable for C_INIT_CreateWithinBox
 D vtable for C_INIT_CreateWithinSphere
 D vtable for C_INIT_CreationNoise
 D vtable for C_INIT_DistanceToCPInit
 D vtable for C_INIT_InheritVelocity
 D vtable for C_INIT_InitialRepulsionVelocity
 D vtable for C_INIT_InitialVelocityNoise
 D vtable for C_INIT_LifespanFromVelocity
 D vtable for C_INIT_MoveBetweenPoints
 D vtable for C_INIT_PositionOffset
 D vtable for C_INIT_PositionWarp
 D vtable for C_INIT_RandomAlpha
 D vtable for C_INIT_RandomColor
 D vtable for C_INIT_RandomLifeTime
 D vtable for C_INIT_RandomRadius
 D vtable for C_INIT_RandomRotation
 D vtable for C_INIT_RandomRotationSpeed
 D vtable for C_INIT_RandomSecondSequence
 D vtable for C_INIT_RandomSequence
 D vtable for C_INIT_RandomTrailLength
 D vtable for C_INIT_RandomYaw
 D vtable for C_INIT_RandomYawFlip
 D vtable for C_INIT_RemapCPtoScalar
 D vtable for C_INIT_RemapCPtoVector
 D vtable for C_INIT_RemapScalar
 D vtable for C_INIT_RemapScalarToVector
 D vtable for C_INIT_SequenceLifeTime
 D vtable for C_INIT_VelocityRandom
 D vtable for C_InfoLadderDismount
 D vtable for C_InfoLightingRelative
 D vtable for C_InfoOverlayAccessor
 D vtable for C_InfoTeleporterCountdown
 D vtable for C_LightGlow
 D vtable for C_LightGlowOverlay
 D vtable for C_LocalTempEntity
 D vtable for C_MaterialModifyControl
 D vtable for C_MegaBombExplosionEffect
 D vtable for C_MortarShell
 D vtable for C_MovieExplosion
 D vtable for C_MultiplayRules
 D vtable for C_NPC_AntlionGuard
 D vtable for C_NPC_Barnacle
 D vtable for C_NPC_Barnacle::CBarnaclePhysicsDelegate
 D vtable for C_NPC_Manhack
 D vtable for C_NPC_Vortigaunt
 D vtable for C_OP_AttractToControlPoint
 D vtable for C_OP_BasicMovement
 D vtable for C_OP_ColorInterpolate
 D vtable for C_OP_ConstrainDistance
 D vtable for C_OP_ConstrainDistanceToPath
 D vtable for C_OP_ContinuousEmitter
 D vtable for C_OP_ControlpointLight
 D vtable for C_OP_Cull
 D vtable for C_OP_DampenToCP
 D vtable for C_OP_Decay
 D vtable for C_OP_DistanceBetweenCPs
 D vtable for C_OP_DistanceToCP
 D vtable for C_OP_FadeAndKill
 D vtable for C_OP_FadeIn
 D vtable for C_OP_FadeOut
 D vtable for C_OP_InstantaneousEmitter
 D vtable for C_OP_InterpolateRadius
 D vtable for C_OP_LockToBone
 D vtable for C_OP_MaintainSequentialPath
 D vtable for C_OP_MaxVelocity
 D vtable for C_OP_ModelCull
 D vtable for C_OP_MovementRotateParticleAroundAxis
 D vtable for C_OP_Noise
 D vtable for C_OP_NoiseEmitter
 D vtable for C_OP_Orient2DRelToCP
 D vtable for C_OP_OrientTo2dDirection
 D vtable for C_OP_OscillateScalar
 D vtable for C_OP_OscillateVector
 D vtable for C_OP_PerParticleEmitter
 D vtable for C_OP_PlanarConstraint
 D vtable for C_OP_PlaneCull
 D vtable for C_OP_PositionLock
 D vtable for C_OP_RandomForce
 D vtable for C_OP_RemapCPtoScalar
 D vtable for C_OP_RemapDotProductToScalar
 D vtable for C_OP_RemapScalar
 D vtable for C_OP_RemapSpeedtoCP
 D vtable for C_OP_RenderPoints
 D vtable for C_OP_RenderRope
 D vtable for C_OP_RenderScreenVelocityRotate
 D vtable for C_OP_RenderSprites
 D vtable for C_OP_RenderSpritesTrail
 D vtable for C_OP_SetChildControlPoints
 D vtable for C_OP_SetControlPointPositions
 D vtable for C_OP_SetControlPointToCenter
 D vtable for C_OP_SetControlPointToPlayer
 D vtable for C_OP_Spin
 D vtable for C_OP_SpinUpdate
 D vtable for C_OP_SpinYaw
 D vtable for C_OP_TwistAroundAxis
 D vtable for C_OP_VectorNoise
 D vtable for C_OP_VelocityDecay
 D vtable for C_OP_VelocityMatchingForce
 D vtable for C_OP_WorldCollideConstraint
 D vtable for C_OP_WorldTraceConstraint
 D vtable for C_ParticleFire
 D vtable for C_ParticlePerformanceMonitor
 D vtable for C_ParticleSmokeGrenade
 D vtable for C_ParticleSystem
 D vtable for C_ParticleTrail
 D vtable for C_PhysBox
 D vtable for C_PhysMagnet
 D vtable for C_PhysPropClientside
 D vtable for C_PhysicsProp
 D vtable for C_Plasma
 D vtable for C_PlasmaBeamNode
 D vtable for C_PlasmaSprite
 D vtable for C_PlayerResource
 D vtable for C_PointCamera
 D vtable for C_PointCommentaryNode
 D vtable for C_PoseController
 D vtable for C_PropAirboat
 D vtable for C_PropCannon
 D vtable for C_PropCombineBall
 D vtable for C_PropCrane
 D vtable for C_PropJeep
 D vtable for C_PropVehicleChoreoGeneric
 D vtable for C_PropVehicleDriveable
 D vtable for C_PropVehiclePrisonerPod
 D vtable for C_QuadraticBeam
 D vtable for C_RagdollManager
 D vtable for C_RecipientFilter
 D vtable for C_RocketTrail
 D vtable for C_RollerMine
 D vtable for C_RopeKeyframe
 D vtable for C_RopeKeyframe::CPhysicsDelegate
 D vtable for C_RotorWashEmitter
 D vtable for C_SceneEntity
 D vtable for C_ScriptIntro
 D vtable for C_ServerRagdoll
 D vtable for C_ServerRagdollAttached
 D vtable for C_ShadowControl
 D vtable for C_SlideshowDisplay
 D vtable for C_SmokeStack
 D vtable for C_SmokeTrail
 D vtable for C_SoundscapeSystem
 D vtable for C_SporeExplosion
 D vtable for C_SporeTrail
 D vtable for C_SpotlightEnd
 D vtable for C_Sprite
 D vtable for C_SpriteOriented
 D vtable for C_SpriteTrail
 D vtable for C_SteamJet
 D vtable for C_Strider
 D vtable for C_StriderFX
 D vtable for C_Sun
 D vtable for C_SunGlowOverlay
 D vtable for C_TEAntlionDust
 D vtable for C_TEArmorRicochet
 D vtable for C_TEBSPDecal
 D vtable for C_TEBaseBeam
 D vtable for C_TEBeamEntPoint
 D vtable for C_TEBeamEnts
 D vtable for C_TEBeamFollow
 D vtable for C_TEBeamLaser
 D vtable for C_TEBeamPoints
 D vtable for C_TEBeamRing
 D vtable for C_TEBeamRingPoint
 D vtable for C_TEBeamSpline
 D vtable for C_TEBloodSprite
 D vtable for C_TEBloodStream
 D vtable for C_TEBreakModel
 D vtable for C_TEBubbleTrail
 D vtable for C_TEBubbles
 D vtable for C_TEClientProjectile
 D vtable for C_TEConcussiveExplosion
 D vtable for C_TEDecal
 D vtable for C_TEDust
 D vtable for C_TEDynamicLight
 D vtable for C_TEEffectDispatch
 D vtable for C_TEEnergySplash
 D vtable for C_TEExplosion
 D vtable for C_TEFizz
 D vtable for C_TEFootprintDecal
 D vtable for C_TEGaussExplosion
 D vtable for C_TEGlowSprite
 D vtable for C_TEImpact
 D vtable for C_TEKillPlayerAttachments
 D vtable for C_TELargeFunnel
 D vtable for C_TEMetalSparks
 D vtable for C_TEMuzzleFlash
 D vtable for C_TEParticleSystem
 D vtable for C_TEPhysicsProp
 D vtable for C_TEPlayerDecal
 D vtable for C_TEProjectedDecal
 D vtable for C_TEShatterSurface
 D vtable for C_TEShowLine
 D vtable for C_TESmoke
 D vtable for C_TESparks
 D vtable for C_TESprite
 D vtable for C_TESpriteSpray
 D vtable for C_TEWorldDecal
 D vtable for C_Team
 D vtable for C_TeamplayRoundBasedRulesProxy
 D vtable for C_TempEntsSystem
 D vtable for C_Tesla
 D vtable for C_TestTraceline
 D vtable for C_Test_ProxyToggle_Networkable
 D vtable for C_VGuiScreen
 D vtable for C_VortigauntChargeToken
 D vtable for C_VortigauntEffectDispel
 D vtable for C_VoteController
 D vtable for C_WaterBullet
 D vtable for C_WaterExplosionEffect
 D vtable for C_WaterLODControl
 D vtable for C_Weapon357
 D vtable for C_WeaponAR2
 D vtable for C_WeaponAlyxGun
 D vtable for C_WeaponAnnabelle
 D vtable for C_WeaponBinoculars
 D vtable for C_WeaponBugBait
 D vtable for C_WeaponCitizenPackage
 D vtable for C_WeaponCitizenSuitcase
 D vtable for C_WeaponCrossbow
 D vtable for C_WeaponCrowbar
 D vtable for C_WeaponCubemap
 D vtable for C_WeaponCycler
 D vtable for C_WeaponFrag
 D vtable for C_WeaponGaussGun
 D vtable for C_WeaponPhysCannon
 D vtable for C_WeaponPistol
 D vtable for C_WeaponRPG
 D vtable for C_WeaponSMG1
 D vtable for C_WeaponShotgun
 D vtable for C_WeaponStunStick
 D vtable for C_Weapon_SLAM
 D vtable for C_World
 D vtable for ClientModeHLNormal
 D vtable for ClientModeShared
 D vtable for ClientWorldListInfo_t
 D vtable for ColumnButton
 D vtable for CommandMenu
 D vtable for ConCommand
 D vtable for ConVar
 D vtable for ConVar_m_pitch
 D vtable for Dragger
 D vtable for EntityParticleTrailInfo_t
 D vtable for FileWeaponInfo_t
 D vtable for IDecalEmitterSystem
 D vtable for IGameEventListener2
 D vtable for IGameSystem
 D vtable for IGameSystemPerFrame
 D vtable for IModelLoadCallback
 D vtable for IParticleEffect
 D vtable for IPredictionSystem
 D vtable for IPresence
 D vtable for IViewPort
 D vtable for MenuItemCheckImage
 D vtable for ParticleSphereProxy
 D vtable for PrecacheEffectBloodSpray::ClientEffectRegister
 D vtable for PrecacheEffectBuild::ClientEffectRegister
 D vtable for PrecacheEffectCombineBall::ClientEffectRegister
 D vtable for PrecacheEffectCrossbow::ClientEffectRegister
 D vtable for PrecacheEffectDusttrail::ClientEffectRegister
 D vtable for PrecacheEffectExplosion::ClientEffectRegister
 D vtable for PrecacheEffectFlares::ClientEffectRegister
 D vtable for PrecacheEffectGlassShatter::ClientEffectRegister
 D vtable for PrecacheEffectGlow::ClientEffectRegister
 D vtable for PrecacheEffectImpacts::ClientEffectRegister
 D vtable for PrecacheEffectMuzzleFlash::ClientEffectRegister
 D vtable for PrecacheEffectPlasmaBeam::ClientEffectRegister
 D vtable for PrecacheEffectSparks::ClientEffectRegister
 D vtable for PrecacheEffectSplash::ClientEffectRegister
 D vtable for PrecacheEffectStunstick::ClientEffectRegister
 D vtable for PrecacheEffectVGuiScreen::ClientEffectRegister
 D vtable for PrecacheEffectWarp::ClientEffectRegister
 D vtable for PrecacheEffectsTest::ClientEffectRegister
 D vtable for PrecacheGunshipFX::ClientEffectRegister
 D vtable for PrecacheMuzzleFlash::ClientEffectRegister
 D vtable for PrecacheOcclusionProxy::ClientEffectRegister
 D vtable for PrecachePlayerDecal::ClientEffectRegister
 D vtable for PrecachePostProcessingEffects::ClientEffectRegister
 D vtable for PrecachePrecipitation::ClientEffectRegister
 D vtable for PrecacheSmokeFogOverlay::ClientEffectRegister
 D vtable for PrecacheTracers::ClientEffectRegister
 D vtable for PrecacheViewRender::ClientEffectRegister
 D vtable for SmokeStackMaterials::ClientEffectRegister
 D vtable for SnowFallEffect
 D vtable for SporeEffect
 D vtable for ThumperDustEmitter
 D vtable for VideoPanel
 D vtable for WashEmitter
 D vtable for WaterDebrisEffect
 D vtable for audioparams_t
 D vtable for fogparams_t
 D vtable for fogplayerparams_t
 D vtable for sky3dparams_t
 D vtable for sky3dparams_t::NetworkVar_fog
 D vtable for vehicleview_t
 D vtable for vgui::AnimatingImagePanel
 D vtable for vgui::AnimationController
 D vtable for vgui::BaseTooltip
 D vtable for vgui::BuildGroup
 D vtable for vgui::BuildModeDialog
 D vtable for vgui::Button
 D vtable for vgui::CBitmapImagePanel
 D vtable for vgui::CItemButton
 D vtable for vgui::CTreeViewListControl
 D vtable for vgui::CheckButton
 D vtable for vgui::CheckImage
 D vtable for vgui::CircularProgressBar
 D vtable for vgui::ClickPanel
 D vtable for vgui::ComboBox
 D vtable for vgui::ComboBoxButton
 D vtable for vgui::ContinuousProgressBar
 D vtable for vgui::CvarToggleCheckButton<ConVarRef>
 D vtable for vgui::Divider
 D vtable for vgui::EditablePanel
 D vtable for vgui::ExpandButton
 D vtable for vgui::FocusNavGroup
 D vtable for vgui::Frame
 D vtable for vgui::FrameButton
 D vtable for vgui::FrameSystemButton
 D vtable for vgui::GraphPanel
 D vtable for vgui::IClientPanel
 D vtable for vgui::Image
 D vtable for vgui::ImagePanel
 D vtable for vgui::Label
 D vtable for vgui::ListPanel
 D vtable for vgui::ListViewItem
 D vtable for vgui::ListViewPanel
 D vtable for vgui::Menu
 D vtable for vgui::MenuBar
 D vtable for vgui::MenuButton
 D vtable for vgui::MenuItem
 D vtable for vgui::MenuSeparator
 D vtable for vgui::MessageBox
 D vtable for vgui::Panel
 D vtable for vgui::PanelListPanel
 D vtable for vgui::ProgressBar
 D vtable for vgui::RadioButton
 D vtable for vgui::RadioImage
 D vtable for vgui::RichText
 D vtable for vgui::RichTextInterior
 D vtable for vgui::ScalableImagePanel
 D vtable for vgui::ScrollBar
 D vtable for vgui::ScrollBarSlider
 D vtable for vgui::SectionedListPanel
 D vtable for vgui::SectionedListPanelHeader
 D vtable for vgui::Slider
 D vtable for vgui::TextEntry
 D vtable for vgui::TextImage
 D vtable for vgui::TextTooltip
 D vtable for vgui::ToggleButton
 D vtable for vgui::TreeNode
 D vtable for vgui::TreeNodeImage
 D vtable for vgui::TreeNodeText
 D vtable for vgui::TreeView
 D vtable for vgui::TreeViewSubPanel
 D vtable for vgui::URLLabel
 DestroyThreadPool
 DevMsg
 DevMsg(char const*, ...)
 DevWarning
 DevWarning(char const*, ...)
 DoNewAssertDialog
 Error
 GetCPUInformation
 KeyValuesSystem
 MemAllocScratch
 MemFreeScratch
 Msg
 Plat_FloatTime
 Plat_IsInDebugSession
 Plat_MSTime
 R CHud::HUDPB_VERTICAL
 R Four_2ToThe23s
 R Four_Epsilons
 R Four_FLT_MAX
 R Four_Fours
 R Four_Ones
 R Four_PointFives
 R Four_Threes
 R Four_Twos
 R Four_Zeros
 R g_SIMD_0123
 R g_SIMD_AllOnesMask
 R g_SIMD_ComponentMask
 R g_SIMD_Low16BitsMask
 R g_SIMD_SkipTailMask
 R g_SIMD_clear_signmask
 R g_SIMD_lsbmask
 R g_SIMD_signmask
 R jpeg_aritab
 R jpeg_natural_order
 R jpeg_natural_order2
 R jpeg_natural_order3
 R jpeg_natural_order4
 R jpeg_natural_order5
 R jpeg_natural_order6
 R jpeg_natural_order7
 R nanmask
 R typeinfo name for AshDebrisEffect
 R typeinfo name for Beam_t
 R typeinfo name for BitmapImage
 R typeinfo name for BlankImage
 R typeinfo name for CAboveWaterView
 R typeinfo name for CAboveWaterView::CIntersectionView
 R typeinfo name for CAboveWaterView::CReflectionView
 R typeinfo name for CAboveWaterView::CRefractionView
 R typeinfo name for CAbsProxy
 R typeinfo name for CAchievementMgr
 R typeinfo name for CAchievementNotificationPanel
 R typeinfo name for CAchievementSaveThread
 R typeinfo name for CAddGeneralRandomRotation
 R typeinfo name for CAddProxy
 R typeinfo name for CAlphaMaterialProxy
 R typeinfo name for CAmmoDef
 R typeinfo name for CAnimateSpecificTexture
 R typeinfo name for CAnimatedEntityTextureProxy
 R typeinfo name for CAnimatedOffsetTextureProxy
 R typeinfo name for CAnimatedTextureProxy
 R typeinfo name for CAntlionGibManager
 R typeinfo name for CAsyncCaptionResourceManager
 R typeinfo name for CAutoGameSystem
 R typeinfo name for CAutoGameSystemPerFrame
 R typeinfo name for CAvatarImage
 R typeinfo name for CAvatarImagePanel
 R typeinfo name for CBase3dView
 R typeinfo name for CBaseAnimatedTextureProxy
 R typeinfo name for CBaseAppSystem<IClientVirtualReality>
 R typeinfo name for CBaseAppSystem<IParticleSystemQuery>
 R typeinfo name for CBaseEntityList
 R typeinfo name for CBaseGameStats
 R typeinfo name for CBaseGameStats_Driver
 R typeinfo name for CBaseGameSystem
 R typeinfo name for CBaseGameSystemPerFrame
 R typeinfo name for CBaseHudChat
 R typeinfo name for CBaseHudChatEntry
 R typeinfo name for CBaseHudChatInputLine
 R typeinfo name for CBaseHudChatLine
 R typeinfo name for CBaseHudWeaponSelection
 R typeinfo name for CBaseManipulator
 R typeinfo name for CBaseModelPanel
 R typeinfo name for CBasePresence
 R typeinfo name for CBaseRopePhysics
 R typeinfo name for CBaseSimpleCollision
 R typeinfo name for CBaseToggleTextureProxy
 R typeinfo name for CBaseViewport
 R typeinfo name for CBaseViewport::CBackGroundPanel
 R typeinfo name for CBaseWaterView
 R typeinfo name for CBaseWaterView::CSoftwareIntersectionView
 R typeinfo name for CBaseWorldView
 R typeinfo name for CBeamSegDraw
 R typeinfo name for CBitmapButton
 R typeinfo name for CBitmapPanel
 R typeinfo name for CBloodSprayEmitter
 R typeinfo name for CBoolProperty
 R typeinfo name for CBorderVisualizerPanel
 R typeinfo name for CBoundedCvar_Interp
 R typeinfo name for CBoundedCvar_InterpRatio
 R typeinfo name for CBoundedCvar_Predict
 R typeinfo name for CBreakParser
 R typeinfo name for CBreakableSurfaceProxy
 R typeinfo name for CBroadcastRecipientFilter
 R typeinfo name for CBuildModeNavCombo
 R typeinfo name for CBulletWhizTimer
 R typeinfo name for CCallback<CAvatarImage, PersonaStateChange_t, false>
 R typeinfo name for CCallback<CClientSteamContext, SteamServerConnectFailure_t, false>
 R typeinfo name for CCallback<CClientSteamContext, SteamServersConnected_t, false>
 R typeinfo name for CCallback<CClientSteamContext, SteamServersDisconnected_t, false>
 R typeinfo name for CCallbackBase
 R typeinfo name for CCallbackImpl<12>
 R typeinfo name for CCallbackImpl<1>
 R typeinfo name for CCallbackImpl<4>
 R typeinfo name for CCallbackImpl<8>
 R typeinfo name for CCamoMaterialProxy
 R typeinfo name for CCamoTextureRegen
 R typeinfo name for CCenterPrint
 R typeinfo name for CCenterStringLabel
 R typeinfo name for CChildOperatorDefinition
 R typeinfo name for CChoreoEvent
 R typeinfo name for CChoreoScene
 R typeinfo name for CChoreoStringPool
 R typeinfo name for CClampProxy
 R typeinfo name for CClassMap
 R typeinfo name for CClassPtrSaveRestoreOps
 R typeinfo name for CClientDLLSharedAppSystems
 R typeinfo name for CClientEffect
 R typeinfo name for CClientEffectPrecacheSystem
 R typeinfo name for CClientEntityList
 R typeinfo name for CClientLeafSubSystemData
 R typeinfo name for CClientLeafSystem
 R typeinfo name for CClientRenderablesList
 R typeinfo name for CClientScoreBoardDialog
 R typeinfo name for CClientShadowMgr
 R typeinfo name for CClientSideEffect
 R typeinfo name for CClientThinkList
 R typeinfo name for CClientTools
 R typeinfo name for CClientVirtualReality
 R typeinfo name for CClient_Precipitation
 R typeinfo name for CCollisionEvent
 R typeinfo name for CCollisionProperty
 R typeinfo name for CColorCorrectionMgr
 R typeinfo name for CColorProperty
 R typeinfo name for CColorVisualizerPanel
 R typeinfo name for CCombatCharVisCache
 R typeinfo name for CCommentaryModelPanel
 R typeinfo name for CCommentaryModelViewer
 R typeinfo name for CConCommandMemberAccessor<CBasePresence>
 R typeinfo name for CConveyorMaterialProxy
 R typeinfo name for CCopyRecipientFilter
 R typeinfo name for CCopyableUtlVector<ModelPoseDebugInfo::InfoText, CUtlMemory<ModelPoseDebugInfo::InfoText, int> >
 R typeinfo name for CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>
 R typeinfo name for CDataManagerBase
 R typeinfo name for CDataObjectAccessSystem
 R typeinfo name for CDebugOverlay
 R typeinfo name for CDebugOverlayPanel
 R typeinfo name for CDecalEmitterSystem
 R typeinfo name for CDefSaveRestoreBlockHandler
 R typeinfo name for CDefSaveRestoreOps
 R typeinfo name for CDefaultAccessor
 R typeinfo name for CDefaultClientRenderable
 R typeinfo name for CDefaultDataCacheClient
 R typeinfo name for CDefaultParticleSystemQuery
 R typeinfo name for CDetailModel
 R typeinfo name for CDetailObjectSystem
 R typeinfo name for CDirtySpatialPartitionEntityList
 R typeinfo name for CDivideProxy
 R typeinfo name for CDllDemandLoader
 R typeinfo name for CDragDropHelperPanel
 R typeinfo name for CDummyMaterialProxy
 R typeinfo name for CDustEffect
 R typeinfo name for CDustFollower
 R typeinfo name for CDustParticle
 R typeinfo name for CEZParticleInit
 R typeinfo name for CEffectsClient
 R typeinfo name for CEffectsList
 R typeinfo name for CEmberEffect
 R typeinfo name for CEmberEmitter
 R typeinfo name for CEmptyConVar
 R typeinfo name for CEmptyProxy
 R typeinfo name for CEnginePostMaterialProxy
 R typeinfo name for CEntityDataInstantiator<CWatcherList>
 R typeinfo name for CEntityDataInstantiator<ModelScale>
 R typeinfo name for CEntityDataInstantiator<StepSimulationData>
 R typeinfo name for CEntityDataInstantiator<groundlink_t>
 R typeinfo name for CEntityDataInstantiator<physicspushlist_t>
 R typeinfo name for CEntityDataInstantiator<touchlink_t>
 R typeinfo name for CEntityDataInstantiator<vphysicsupdateai_t>
 R typeinfo name for CEntityMaterialProxy
 R typeinfo name for CEntityOriginAlyxMaterialProxy
 R typeinfo name for CEntityOriginMaterialProxy
 R typeinfo name for CEntityRandomProxy
 R typeinfo name for CEntitySaveRestoreBlockHandler
 R typeinfo name for CEntitySaveUtils
 R typeinfo name for CEntitySpeedProxy
 R typeinfo name for CEnvHeadcrabCanisterShared
 R typeinfo name for CEnvWindShared
 R typeinfo name for CEp1IntroVortRefractMaterialProxy
 R typeinfo name for CEqualsProxy
 R typeinfo name for CExampleEffect
 R typeinfo name for CExplosionOverlay
 R typeinfo name for CExplosionParticle
 R typeinfo name for CExponentialProxy
 R typeinfo name for CFPS
 R typeinfo name for CFPSPanel
 R typeinfo name for CFXDiscreetLine
 R typeinfo name for CFXLine
 R typeinfo name for CFXQuad
 R typeinfo name for CFXStaticLine
 R typeinfo name for CFastDetailLeafSpriteList
 R typeinfo name for CFireParticle
 R typeinfo name for CFireSmokeEffect
 R typeinfo name for CFlaggedEntitiesEnum
 R typeinfo name for CFlashlightEffect
 R typeinfo name for CFleckParticles
 R typeinfo name for CFlexAnimationTrack
 R typeinfo name for CFlexSceneFileManager
 R typeinfo name for CFloatProperty
 R typeinfo name for CFmtStrN<256, false>
 R typeinfo name for CFracProxy
 R typeinfo name for CFreezeFrameView
 R typeinfo name for CFunctionProxy
 R typeinfo name for CFunctor
 R typeinfo name for CFunctor6<void (*)(int, int, int, int, bool, bool), int, int, int, int, bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
 R typeinfo name for CGameClientExports
 R typeinfo name for CGameEventListener
 R typeinfo name for CGameMovement
 R typeinfo name for CGameStringPool
 R typeinfo name for CGaussianNoiseProxy
 R typeinfo name for CGeneralRandomRotation
 R typeinfo name for CGeneralSpin
 R typeinfo name for CGlowOverlay
 R typeinfo name for CGlowOverlaySystem
 R typeinfo name for CHFontProperty
 R typeinfo name for CHL2GameMovement
 R typeinfo name for CHLClient
 R typeinfo name for CHLInput
 R typeinfo name for CHLModeManager
 R typeinfo name for CHLVoiceStatusHelper
 R typeinfo name for CHUDAutoAim
 R typeinfo name for CHUDQuickInfo
 R typeinfo name for CHeadlightEffect
 R typeinfo name for CHeliBladeMaterialProxy
 R typeinfo name for CHudAmmo
 R typeinfo name for CHudAnimationInfo
 R typeinfo name for CHudBattery
 R typeinfo name for CHudChat
 R typeinfo name for CHudChatFilterButton
 R typeinfo name for CHudChatFilterCheckButton
 R typeinfo name for CHudChatFilterPanel
 R typeinfo name for CHudChatHistory
 R typeinfo name for CHudCloseCaption
 R typeinfo name for CHudCommentary
 R typeinfo name for CHudCredits
 R typeinfo name for CHudCrosshair
 R typeinfo name for CHudDamageIndicator
 R typeinfo name for CHudDeathNotice
 R typeinfo name for CHudElement
 R typeinfo name for CHudFilmDemo
 R typeinfo name for CHudGeiger
 R typeinfo name for CHudHDRDemo
 R typeinfo name for CHudHealth
 R typeinfo name for CHudHintDisplay
 R typeinfo name for CHudHintKeyDisplay
 R typeinfo name for CHudHistoryResource
 R typeinfo name for CHudMenu
 R typeinfo name for CHudMessage
 R typeinfo name for CHudNumericDisplay
 R typeinfo name for CHudPoisonDamageIndicator
 R typeinfo name for CHudPosture
 R typeinfo name for CHudSecondaryAmmo
 R typeinfo name for CHudSquadStatus
 R typeinfo name for CHudSuitPower
 R typeinfo name for CHudTextMessage
 R typeinfo name for CHudTexture
 R typeinfo name for CHudTextureHandleProperty
 R typeinfo name for CHudTrain
 R typeinfo name for CHudVehicle
 R typeinfo name for CHudViewport
 R typeinfo name for CHudWeapon
 R typeinfo name for CHudWeaponSelection
 R typeinfo name for CHudZoom
 R typeinfo name for CIconPanel
 R typeinfo name for CImpactOverlay
 R typeinfo name for CInput
 R typeinfo name for CIntProperty
 R typeinfo name for CIntProxy
 R typeinfo name for CInterpolatedVar<C_AnimationLayer>
 R typeinfo name for CInterpolatedVar<QAngle>
 R typeinfo name for CInterpolatedVar<Vector>
 R typeinfo name for CInterpolatedVar<float>
 R typeinfo name for CInterpolatedVarArray<QAngle, 24>
 R typeinfo name for CInterpolatedVarArray<Vector, 24>
 R typeinfo name for CInterpolatedVarArray<Vector, 6>
 R typeinfo name for CInterpolatedVarArray<float, 24>
 R typeinfo name for CInterpolatedVarArray<float, 4>
 R typeinfo name for CInterpolatedVarArray<float, 96>
 R typeinfo name for CInterpolatedVarArrayBase<C_AnimationLayer, false>
 R typeinfo name for CInterpolatedVarArrayBase<QAngle, false>
 R typeinfo name for CInterpolatedVarArrayBase<QAngle, true>
 R typeinfo name for CInterpolatedVarArrayBase<Vector, false>
 R typeinfo name for CInterpolatedVarArrayBase<Vector, true>
 R typeinfo name for CInterpolatedVarArrayBase<float, false>
 R typeinfo name for CInterpolatedVarArrayBase<float, true>
 R typeinfo name for CLCD
 R typeinfo name for CLCDItem
 R typeinfo name for CLCDItemAggregate
 R typeinfo name for CLCDItemIcon
 R typeinfo name for CLCDItemText
 R typeinfo name for CLCDPage
 R typeinfo name for CLampBeamProxy
 R typeinfo name for CLampHaloProxy
 R typeinfo name for CLessOrEqualProxy
 R typeinfo name for CLightmapDebugView
 R typeinfo name for CLinearRampProxy
 R typeinfo name for CLoadingDisc
 R typeinfo name for CLoadingDiscPanel
 R typeinfo name for CLocalPlayerFilter
 R typeinfo name for CLocalSpaceEmitter
 R typeinfo name for CMDLPanel
 R typeinfo name for CManagedDataCacheClient<AsyncCaptionData_t, asynccaptionparams_t, AsyncCaptionData_t*>
 R typeinfo name for CMaterialModifyAnimatedProxy
 R typeinfo name for CMaterialModifyProxy
 R typeinfo name for CMatrixRotateProxy
 R typeinfo name for CMemberFunctor0<CParallelProcessor<CNewParticleEffect*, CFuncJobItemProcessor<CNewParticleEffect*> >*, void (CParallelProcessor<CNewParticleEffect*, CFuncJobItemProcessor<CNewParticleEffect*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor0<CParallelProcessor<C_BaseAnimating*, CFuncJobItemProcessor<C_BaseAnimating*> >*, void (CParallelProcessor<C_BaseAnimating*, CFuncJobItemProcessor<C_BaseAnimating*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMemberFunctor6<CRopeManager*, void (CRopeManager::*)(bool, CRopeManager::RopeRenderData_t*, int, Vector const&, Vector const&, C_RopeKeyframe::BuildRopeQueuedData_t*), bool, CRopeManager::RopeRenderData_t*, int, Vector, Vector, C_RopeKeyframe::BuildRopeQueuedData_t*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>
 R typeinfo name for CMessageChars
 R typeinfo name for CMessageCharsPanel
 R typeinfo name for CModelPanel
 R typeinfo name for CModelPanelModel
 R typeinfo name for CMotionBlurMaterialProxy
 R typeinfo name for CMouthInfo
 R typeinfo name for CMoveHelperClient
 R typeinfo name for CMultiplyProxy
 R typeinfo name for CMumbleSystem
 R typeinfo name for CNavProgress
 R typeinfo name for CNetGraphPanel
 R typeinfo name for CNetGraphPanelInterface
 R typeinfo name for CNewParticleEffect
 R typeinfo name for CPASAttenuationFilter
 R typeinfo name for CPASFilter
 R typeinfo name for CPDumpPanel
 R typeinfo name for CPVSFilter
 R typeinfo name for CPanelFactory<CSlideshowDisplayScreen, VGuiScreenInitData_t>
 R typeinfo name for CPanelFactory<CTeleportCountdownScreen, VGuiScreenInitData_t>
 R typeinfo name for CPanelFactory<CVGuiScreenPanel, VGuiScreenInitData_t>
 R typeinfo name for CPanelMetaClassMgrImp
 R typeinfo name for CParticleAttractor
 R typeinfo name for CParticleCollection
 R typeinfo name for CParticleCollision
 R typeinfo name for CParticleEffect
 R typeinfo name for CParticleEffectBinding
 R typeinfo name for CParticleMgr
 R typeinfo name for CParticleOperatorDefinition<C_INIT_AgeNoise>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_CreateAlongPath>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_CreateFromParentParticles>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_CreateFromPlaneCache>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_CreateInHierarchy>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_CreateOnModel>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_CreateSequentialPath>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_CreateWithinBox>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_CreateWithinSphere>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_CreationNoise>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_DistanceToCPInit>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_InheritVelocity>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_InitialRepulsionVelocity>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_InitialVelocityNoise>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_LifespanFromVelocity>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_MoveBetweenPoints>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_PositionOffset>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_PositionWarp>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_RandomAlpha>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_RandomColor>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_RandomLifeTime>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_RandomRadius>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_RandomRotation>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_RandomRotationSpeed>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_RandomSecondSequence>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_RandomSequence>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_RandomTrailLength>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_RandomYaw>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_RandomYawFlip>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_RemapCPtoScalar>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_RemapCPtoVector>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_RemapScalar>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_RemapScalarToVector>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_SequenceLifeTime>
 R typeinfo name for CParticleOperatorDefinition<C_INIT_VelocityRandom>
 R typeinfo name for CParticleOperatorDefinition<C_OP_AttractToControlPoint>
 R typeinfo name for CParticleOperatorDefinition<C_OP_BasicMovement>
 R typeinfo name for CParticleOperatorDefinition<C_OP_ColorInterpolate>
 R typeinfo name for CParticleOperatorDefinition<C_OP_ConstrainDistance>
 R typeinfo name for CParticleOperatorDefinition<C_OP_ConstrainDistanceToPath>
 R typeinfo name for CParticleOperatorDefinition<C_OP_ContinuousEmitter>
 R typeinfo name for CParticleOperatorDefinition<C_OP_ControlpointLight>
 R typeinfo name for CParticleOperatorDefinition<C_OP_Cull>
 R typeinfo name for CParticleOperatorDefinition<C_OP_DampenToCP>
 R typeinfo name for CParticleOperatorDefinition<C_OP_Decay>
 R typeinfo name for CParticleOperatorDefinition<C_OP_DistanceBetweenCPs>
 R typeinfo name for CParticleOperatorDefinition<C_OP_DistanceToCP>
 R typeinfo name for CParticleOperatorDefinition<C_OP_FadeAndKill>
 R typeinfo name for CParticleOperatorDefinition<C_OP_FadeIn>
 R typeinfo name for CParticleOperatorDefinition<C_OP_FadeOut>
 R typeinfo name for CParticleOperatorDefinition<C_OP_InstantaneousEmitter>
 R typeinfo name for CParticleOperatorDefinition<C_OP_InterpolateRadius>
 R typeinfo name for CParticleOperatorDefinition<C_OP_LockToBone>
 R typeinfo name for CParticleOperatorDefinition<C_OP_MaintainSequentialPath>
 R typeinfo name for CParticleOperatorDefinition<C_OP_MaxVelocity>
 R typeinfo name for CParticleOperatorDefinition<C_OP_ModelCull>
 R typeinfo name for CParticleOperatorDefinition<C_OP_MovementRotateParticleAroundAxis>
 R typeinfo name for CParticleOperatorDefinition<C_OP_Noise>
 R typeinfo name for CParticleOperatorDefinition<C_OP_NoiseEmitter>
 R typeinfo name for CParticleOperatorDefinition<C_OP_Orient2DRelToCP>
 R typeinfo name for CParticleOperatorDefinition<C_OP_OrientTo2dDirection>
 R typeinfo name for CParticleOperatorDefinition<C_OP_OscillateScalar>
 R typeinfo name for CParticleOperatorDefinition<C_OP_OscillateVector>
 R typeinfo name for CParticleOperatorDefinition<C_OP_PerParticleEmitter>
 R typeinfo name for CParticleOperatorDefinition<C_OP_PlanarConstraint>
 R typeinfo name for CParticleOperatorDefinition<C_OP_PlaneCull>
 R typeinfo name for CParticleOperatorDefinition<C_OP_PositionLock>
 R typeinfo name for CParticleOperatorDefinition<C_OP_RandomForce>
 R typeinfo name for CParticleOperatorDefinition<C_OP_RemapCPtoScalar>
 R typeinfo name for CParticleOperatorDefinition<C_OP_RemapDotProductToScalar>
 R typeinfo name for CParticleOperatorDefinition<C_OP_RemapScalar>
 R typeinfo name for CParticleOperatorDefinition<C_OP_RemapSpeedtoCP>
 R typeinfo name for CParticleOperatorDefinition<C_OP_RenderPoints>
 R typeinfo name for CParticleOperatorDefinition<C_OP_RenderRope>
 R typeinfo name for CParticleOperatorDefinition<C_OP_RenderScreenVelocityRotate>
 R typeinfo name for CParticleOperatorDefinition<C_OP_RenderSprites>
 R typeinfo name for CParticleOperatorDefinition<C_OP_RenderSpritesTrail>
 R typeinfo name for CParticleOperatorDefinition<C_OP_SetChildControlPoints>
 R typeinfo name for CParticleOperatorDefinition<C_OP_SetControlPointPositions>
 R typeinfo name for CParticleOperatorDefinition<C_OP_SetControlPointToCenter>
 R typeinfo name for CParticleOperatorDefinition<C_OP_SetControlPointToPlayer>
 R typeinfo name for CParticleOperatorDefinition<C_OP_Spin>
 R typeinfo name for CParticleOperatorDefinition<C_OP_SpinUpdate>
 R typeinfo name for CParticleOperatorDefinition<C_OP_SpinYaw>
 R typeinfo name for CParticleOperatorDefinition<C_OP_TwistAroundAxis>
 R typeinfo name for CParticleOperatorDefinition<C_OP_VectorNoise>
 R typeinfo name for CParticleOperatorDefinition<C_OP_VelocityDecay>
 R typeinfo name for CParticleOperatorDefinition<C_OP_VelocityMatchingForce>
 R typeinfo name for CParticleOperatorDefinition<C_OP_WorldCollideConstraint>
 R typeinfo name for CParticleOperatorDefinition<C_OP_WorldTraceConstraint>
 R typeinfo name for CParticleOperatorInstance
 R typeinfo name for CParticleProperty
 R typeinfo name for CParticleRenderOperatorInstance
 R typeinfo name for CParticleSystemQuery
 R typeinfo name for CPerfVisualBenchmark
 R typeinfo name for CPhysBoxMultiplayer
 R typeinfo name for CPhysObjSaveRestoreOps
 R typeinfo name for CPhysSaveRestoreBlockHandler
 R typeinfo name for CPhysicsGameTrace
 R typeinfo name for CPhysicsPropMultiplayer
 R typeinfo name for CPhysicsSystem
 R typeinfo name for CPixelVisibilitySystem
 R typeinfo name for CPlasmaSpray
 R typeinfo name for CPlayerAndObjectEnumerator
 R typeinfo name for CPlayerLocalData
 R typeinfo name for CPlayerLogoProxy
 R typeinfo name for CPlayerPositionProxy
 R typeinfo name for CPlayerProximityProxy
 R typeinfo name for CPlayerSpeedProxy
 R typeinfo name for CPlayerState
 R typeinfo name for CPlayerTeamMatchProxy
 R typeinfo name for CPlayerViewProxy
 R typeinfo name for CPoseDebuggerImpl
 R typeinfo name for CPoseDebuggerStub
 R typeinfo name for CPotteryWheelManip
 R typeinfo name for CPotteryWheelPanel
 R typeinfo name for CPrecipHack
 R typeinfo name for CPredictableList
 R typeinfo name for CPrediction
 R typeinfo name for CPropData
 R typeinfo name for CProportionalFloatProperty
 R typeinfo name for CProportionalIntProperty
 R typeinfo name for CProportionalIntWithScreenspacePropertyX
 R typeinfo name for CProportionalIntWithScreenspacePropertyY
 R typeinfo name for CProxyHealth
 R typeinfo name for CProxyIsNPC
 R typeinfo name for CPupilProxy
 R typeinfo name for CPushAwayEnumerator
 R typeinfo name for CRagdoll
 R typeinfo name for CRagdollAnimatedFriction
 R typeinfo name for CRagdollBoltEnumerator
 R typeinfo name for CRagdollCollisionRules
 R typeinfo name for CRagdollEnumerator
 R typeinfo name for CRagdollExplosionEnumerator
 R typeinfo name for CRagdollLRURetirement
 R typeinfo name for CRecordingList
 R typeinfo name for CRefCountServiceBase<true, CRefMT>
 R typeinfo name for CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >
 R typeinfo name for CRefCounted1<WorldListInfo_t, CRefCountServiceBase<true, CRefMT> >
 R typeinfo name for CRefCounted<CRefCountServiceBase<true, CRefMT> >
 R typeinfo name for CReflectiveGlassView
 R typeinfo name for CRefractiveGlassView
 R typeinfo name for CRenderExecutor
 R typeinfo name for CRendering3dView
 R typeinfo name for CRestore
 R typeinfo name for CResultProxy
 R typeinfo name for CRocketTrailParticle
 R typeinfo name for CRopeManager
 R typeinfo name for CRopePhysics<10>
 R typeinfo name for CRopePhysics<7>
 R typeinfo name for CRotationManipulator
 R typeinfo name for CSave
 R typeinfo name for CSaveRestoreBlockSet
 R typeinfo name for CSceneTokenProcessor
 R typeinfo name for CSchemeVisualizer
 R typeinfo name for CScreenSpaceEffectManager
 R typeinfo name for CSelectFirstIfNonZeroProxy
 R typeinfo name for CShadowDepthView
 R typeinfo name for CShadowLeafEnum
 R typeinfo name for CShadowModelProxy
 R typeinfo name for CShadowProxy
 R typeinfo name for CShieldProxy
 R typeinfo name for CSimple3DEmitter
 R typeinfo name for CSimpleEmitter
 R typeinfo name for CSimpleGlowEmitter
 R typeinfo name for CSimplePhysics::IHelper
 R typeinfo name for CSimpleRenderExecutor
 R typeinfo name for CSimpleWorldView
 R typeinfo name for CSineProxy
 R typeinfo name for CSingleUserRecipientFilter
 R typeinfo name for CSkyboxView
 R typeinfo name for CSlideshowDisplayScreen
 R typeinfo name for CSmallTextEntry
 R typeinfo name for CSmokeEmitter
 R typeinfo name for CSmokeParticle
 R typeinfo name for CSnowFallManager
 R typeinfo name for CSolidSetDefaults
 R typeinfo name for CSoundControllerImp
 R typeinfo name for CSoundEmitterSystem
 R typeinfo name for CSoundEnvelopeController
 R typeinfo name for CSoundPatchSaveRestoreOps
 R typeinfo name for CSpecButton
 R typeinfo name for CSpectatorGUI
 R typeinfo name for CSpectatorMenu
 R typeinfo name for CSpinUpdateBase
 R typeinfo name for CSplashParticle
 R typeinfo name for CStringProperty
 R typeinfo name for CStudioStatsEnumerator
 R typeinfo name for CSubtractProxy
 R typeinfo name for CTEParticleRenderer
 R typeinfo name for CTeamMenu
 R typeinfo name for CTeleportCountdownScreen
 R typeinfo name for CTempEnts
 R typeinfo name for CTextWindow
 R typeinfo name for CTextureIdProperty
 R typeinfo name for CTextureScrollMaterialProxy
 R typeinfo name for CTextureTransformProxy
 R typeinfo name for CTier0AppSystem<IClientVirtualReality>
 R typeinfo name for CTier1AppSystem<IClientVirtualReality, 0>
 R typeinfo name for CTier2AppSystem<IClientVirtualReality, 0>
 R typeinfo name for CTier3AppSystem<IClientVirtualReality, 0>
 R typeinfo name for CTimeMaterialProxy
 R typeinfo name for CToolFrameworkClient
 R typeinfo name for CTraceFilter
 R typeinfo name for CTraceFilterGlow
 R typeinfo name for CTraceFilterHitAll
 R typeinfo name for CTraceFilterNoCombatCharacters
 R typeinfo name for CTraceFilterNoNPCsOrPlayer
 R typeinfo name for CTraceFilterSimple
 R typeinfo name for CTraceFilterSimpleList
 R typeinfo name for CTraceFilterSkipNPCsAndPlayers
 R typeinfo name for CTraceFilterSkipPlayerAndViewModel
 R typeinfo name for CTraceFilterSkipTwoEntities
 R typeinfo name for CTraceFilterWorldOnly
 R typeinfo name for CTrailParticles
 R typeinfo name for CTransformManipulator
 R typeinfo name for CTranslationManipulator
 R typeinfo name for CUnderWaterView
 R typeinfo name for CUnderWaterView::CRefractionView
 R typeinfo name for CUniformNoiseProxy
 R typeinfo name for CUserCmd
 R typeinfo name for CUtlCStringConversion
 R typeinfo name for CUtlCharConversion
 R typeinfo name for CUtlNoEscConversion
 R typeinfo name for CUtlVector<ModelPoseDebugInfo::InfoText, CUtlMemory<ModelPoseDebugInfo::InfoText, int> >
 R typeinfo name for CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>
 R typeinfo name for CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>
 R typeinfo name for CVGuiScreenEnumerator
 R typeinfo name for CVGuiScreenPanel
 R typeinfo name for CVTFTexture
 R typeinfo name for CViewAngleAnimation
 R typeinfo name for CViewEffects
 R typeinfo name for CViewEffectsSaveRestoreBlockHandler
 R typeinfo name for CViewRender
 R typeinfo name for CViewRenderBeams
 R typeinfo name for CViewSetup
 R typeinfo name for CViewportClientSystem
 R typeinfo name for CVisibleShadowList
 R typeinfo name for CVoiceStatus
 R typeinfo name for CVortEmissiveProxy
 R typeinfo name for CWarpOverlay
 R typeinfo name for CWaterExplosionParticle
 R typeinfo name for CWaterLODMaterialProxy
 R typeinfo name for CWorkerThread
 R typeinfo name for CWorldDimsProxy
 R typeinfo name for CWrapMinMaxProxy
 R typeinfo name for CZoomManipulator
 R typeinfo name for C_AI_BaseNPC
 R typeinfo name for C_AR2Explosion
 R typeinfo name for C_AlyxEmpEffect
 R typeinfo name for C_AntlionGib
 R typeinfo name for C_Barney
 R typeinfo name for C_BaseAnimating
 R typeinfo name for C_BaseAnimatingGameSystem
 R typeinfo name for C_BaseAnimatingOverlay
 R typeinfo name for C_BaseCombatCharacter
 R typeinfo name for C_BaseCombatWeapon
 R typeinfo name for C_BaseDoor
 R typeinfo name for C_BaseEntity
 R typeinfo name for C_BaseEntity*
 R typeinfo name for C_BaseEntity::NetworkVar_m_Collision
 R typeinfo name for C_BaseEntity::NetworkVar_m_Particles
 R typeinfo name for C_BaseEntityClassList
 R typeinfo name for C_BaseExplosionEffect
 R typeinfo name for C_BaseFlex
 R typeinfo name for C_BaseGrenade
 R typeinfo name for C_BaseHLBludgeonWeapon
 R typeinfo name for C_BaseHLCombatWeapon
 R typeinfo name for C_BaseHLPlayer
 R typeinfo name for C_BaseHelicopter
 R typeinfo name for C_BaseParticleEntity
 R typeinfo name for C_BasePlayer
 R typeinfo name for C_BasePlayer::NetworkVar_m_Local
 R typeinfo name for C_BaseProjectile
 R typeinfo name for C_BasePropDoor
 R typeinfo name for C_BaseTeamObjectiveResource
 R typeinfo name for C_BaseTempEntity
 R typeinfo name for C_BaseViewModel
 R typeinfo name for C_Beam
 R typeinfo name for C_BoneFollower
 R typeinfo name for C_BreakableProp
 R typeinfo name for C_BreakableSurface
 R typeinfo name for C_CitadelEnergyCore
 R typeinfo name for C_ClientRagdoll
 R typeinfo name for C_ColorCorrection
 R typeinfo name for C_ColorCorrectionVolume
 R typeinfo name for C_CombineGunship
 R typeinfo name for C_Corpse
 R typeinfo name for C_CrossbowBolt
 R typeinfo name for C_DustTrail
 R typeinfo name for C_DynamicLight
 R typeinfo name for C_DynamicProp
 R typeinfo name for C_Embers
 R typeinfo name for C_EntityClassList<C_FuncReflectiveGlass>
 R typeinfo name for C_EntityClassList<C_PointCamera>
 R typeinfo name for C_EntityDissolve
 R typeinfo name for C_EntityFlame
 R typeinfo name for C_EntityParticleTrail
 R typeinfo name for C_EnvDetailController
 R typeinfo name for C_EnvHeadcrabCanister
 R typeinfo name for C_EnvParticleScript
 R typeinfo name for C_EnvProjectedTexture
 R typeinfo name for C_EnvScreenEffect
 R typeinfo name for C_EnvScreenOverlay
 R typeinfo name for C_EnvStarfield
 R typeinfo name for C_EnvTonemapController
 R typeinfo name for C_EnvWind
 R typeinfo name for C_EnvelopeFX
 R typeinfo name for C_FireFromAboveSprite
 R typeinfo name for C_FireSmoke
 R typeinfo name for C_FireSprite
 R typeinfo name for C_FireTrail
 R typeinfo name for C_Fish
 R typeinfo name for C_Flare
 R typeinfo name for C_Flaregun
 R typeinfo name for C_FogController
 R typeinfo name for C_FuncAreaPortalWindow
 R typeinfo name for C_FuncConveyor
 R typeinfo name for C_FuncLadder
 R typeinfo name for C_FuncMonitor
 R typeinfo name for C_FuncOccluder
 R typeinfo name for C_FuncPhysicsRespawnZone
 R typeinfo name for C_FuncReflectiveGlass
 R typeinfo name for C_FuncRotating
 R typeinfo name for C_FuncSmokeVolume
 R typeinfo name for C_FuncTrackTrain
 R typeinfo name for C_Func_Dust
 R typeinfo name for C_Func_LOD
 R typeinfo name for C_GameRules
 R typeinfo name for C_GameRulesProxy
 R typeinfo name for C_Gib
 R typeinfo name for C_GunshipFX
 R typeinfo name for C_HL2PlayerLocalData
 R typeinfo name for C_HLMachineGun
 R typeinfo name for C_HLSelectFireMachineGun
 R typeinfo name for C_HLTVCamera
 R typeinfo name for C_Hairball
 R typeinfo name for C_Hairball::CHairballDelegate
 R typeinfo name for C_HalfLife2
 R typeinfo name for C_HalfLife2Proxy
 R typeinfo name for C_HandleTest
 R typeinfo name for C_INIT_AgeNoise
 R typeinfo name for C_INIT_CreateAlongPath
 R typeinfo name for C_INIT_CreateFromParentParticles
 R typeinfo name for C_INIT_CreateFromPlaneCache
 R typeinfo name for C_INIT_CreateInHierarchy
 R typeinfo name for C_INIT_CreateOnModel
 R typeinfo name for C_INIT_CreateSequentialPath
 R typeinfo name for C_INIT_CreateWithinBox
 R typeinfo name for C_INIT_CreateWithinSphere
 R typeinfo name for C_INIT_CreationNoise
 R typeinfo name for C_INIT_DistanceToCPInit
 R typeinfo name for C_INIT_InheritVelocity
 R typeinfo name for C_INIT_InitialRepulsionVelocity
 R typeinfo name for C_INIT_InitialVelocityNoise
 R typeinfo name for C_INIT_LifespanFromVelocity
 R typeinfo name for C_INIT_MoveBetweenPoints
 R typeinfo name for C_INIT_PositionOffset
 R typeinfo name for C_INIT_PositionWarp
 R typeinfo name for C_INIT_RandomAlpha
 R typeinfo name for C_INIT_RandomColor
 R typeinfo name for C_INIT_RandomLifeTime
 R typeinfo name for C_INIT_RandomRadius
 R typeinfo name for C_INIT_RandomRotation
 R typeinfo name for C_INIT_RandomRotationSpeed
 R typeinfo name for C_INIT_RandomSecondSequence
 R typeinfo name for C_INIT_RandomSequence
 R typeinfo name for C_INIT_RandomTrailLength
 R typeinfo name for C_INIT_RandomYaw
 R typeinfo name for C_INIT_RandomYawFlip
 R typeinfo name for C_INIT_RemapCPtoScalar
 R typeinfo name for C_INIT_RemapCPtoVector
 R typeinfo name for C_INIT_RemapScalar
 R typeinfo name for C_INIT_RemapScalarToVector
 R typeinfo name for C_INIT_SequenceLifeTime
 R typeinfo name for C_INIT_VelocityRandom
 R typeinfo name for C_InfoLadderDismount
 R typeinfo name for C_InfoLightingRelative
 R typeinfo name for C_InfoOverlayAccessor
 R typeinfo name for C_InfoTeleporterCountdown
 R typeinfo name for C_LightGlow
 R typeinfo name for C_LightGlowOverlay
 R typeinfo name for C_LocalTempEntity
 R typeinfo name for C_MaterialModifyControl
 R typeinfo name for C_MegaBombExplosionEffect
 R typeinfo name for C_MortarShell
 R typeinfo name for C_MovieExplosion
 R typeinfo name for C_MultiplayRules
 R typeinfo name for C_NPC_AntlionGuard
 R typeinfo name for C_NPC_Barnacle
 R typeinfo name for C_NPC_Barnacle::CBarnaclePhysicsDelegate
 R typeinfo name for C_NPC_Manhack
 R typeinfo name for C_NPC_Vortigaunt
 R typeinfo name for C_OP_AttractToControlPoint
 R typeinfo name for C_OP_BasicMovement
 R typeinfo name for C_OP_ColorInterpolate
 R typeinfo name for C_OP_ConstrainDistance
 R typeinfo name for C_OP_ConstrainDistanceToPath
 R typeinfo name for C_OP_ContinuousEmitter
 R typeinfo name for C_OP_ControlpointLight
 R typeinfo name for C_OP_Cull
 R typeinfo name for C_OP_DampenToCP
 R typeinfo name for C_OP_Decay
 R typeinfo name for C_OP_DistanceBetweenCPs
 R typeinfo name for C_OP_DistanceToCP
 R typeinfo name for C_OP_FadeAndKill
 R typeinfo name for C_OP_FadeIn
 R typeinfo name for C_OP_FadeOut
 R typeinfo name for C_OP_InstantaneousEmitter
 R typeinfo name for C_OP_InterpolateRadius
 R typeinfo name for C_OP_LockToBone
 R typeinfo name for C_OP_MaintainSequentialPath
 R typeinfo name for C_OP_MaxVelocity
 R typeinfo name for C_OP_ModelCull
 R typeinfo name for C_OP_MovementRotateParticleAroundAxis
 R typeinfo name for C_OP_Noise
 R typeinfo name for C_OP_NoiseEmitter
 R typeinfo name for C_OP_Orient2DRelToCP
 R typeinfo name for C_OP_OrientTo2dDirection
 R typeinfo name for C_OP_OscillateScalar
 R typeinfo name for C_OP_OscillateVector
 R typeinfo name for C_OP_PerParticleEmitter
 R typeinfo name for C_OP_PlanarConstraint
 R typeinfo name for C_OP_PlaneCull
 R typeinfo name for C_OP_PositionLock
 R typeinfo name for C_OP_RandomForce
 R typeinfo name for C_OP_RemapCPtoScalar
 R typeinfo name for C_OP_RemapDotProductToScalar
 R typeinfo name for C_OP_RemapScalar
 R typeinfo name for C_OP_RemapSpeedtoCP
 R typeinfo name for C_OP_RenderPoints
 R typeinfo name for C_OP_RenderRope
 R typeinfo name for C_OP_RenderScreenVelocityRotate
 R typeinfo name for C_OP_RenderSprites
 R typeinfo name for C_OP_RenderSpritesTrail
 R typeinfo name for C_OP_SetChildControlPoints
 R typeinfo name for C_OP_SetControlPointPositions
 R typeinfo name for C_OP_SetControlPointToCenter
 R typeinfo name for C_OP_SetControlPointToPlayer
 R typeinfo name for C_OP_Spin
 R typeinfo name for C_OP_SpinUpdate
 R typeinfo name for C_OP_SpinYaw
 R typeinfo name for C_OP_TwistAroundAxis
 R typeinfo name for C_OP_VectorNoise
 R typeinfo name for C_OP_VelocityDecay
 R typeinfo name for C_OP_VelocityMatchingForce
 R typeinfo name for C_OP_WorldCollideConstraint
 R typeinfo name for C_OP_WorldTraceConstraint
 R typeinfo name for C_ParticleFire
 R typeinfo name for C_ParticlePerformanceMonitor
 R typeinfo name for C_ParticleSmokeGrenade
 R typeinfo name for C_ParticleSystem
 R typeinfo name for C_ParticleTrail
 R typeinfo name for C_PhysBox
 R typeinfo name for C_PhysMagnet
 R typeinfo name for C_PhysPropClientside
 R typeinfo name for C_PhysicsProp
 R typeinfo name for C_Plasma
 R typeinfo name for C_PlasmaBeamNode
 R typeinfo name for C_PlasmaSprite
 R typeinfo name for C_PlayerResource
 R typeinfo name for C_PointCamera
 R typeinfo name for C_PointCommentaryNode
 R typeinfo name for C_PoseController
 R typeinfo name for C_PropAirboat
 R typeinfo name for C_PropCannon
 R typeinfo name for C_PropCombineBall
 R typeinfo name for C_PropCrane
 R typeinfo name for C_PropJeep
 R typeinfo name for C_PropVehicleChoreoGeneric
 R typeinfo name for C_PropVehicleDriveable
 R typeinfo name for C_PropVehiclePrisonerPod
 R typeinfo name for C_QuadraticBeam
 R typeinfo name for C_RagdollManager
 R typeinfo name for C_RecipientFilter
 R typeinfo name for C_RocketTrail
 R typeinfo name for C_RollerMine
 R typeinfo name for C_RopeKeyframe
 R typeinfo name for C_RopeKeyframe::CPhysicsDelegate
 R typeinfo name for C_RotorWashEmitter
 R typeinfo name for C_SceneEntity
 R typeinfo name for C_ScriptIntro
 R typeinfo name for C_ServerRagdoll
 R typeinfo name for C_ServerRagdollAttached
 R typeinfo name for C_ShadowControl
 R typeinfo name for C_SingleplayRules
 R typeinfo name for C_SlideshowDisplay
 R typeinfo name for C_SmokeStack
 R typeinfo name for C_SmokeTrail
 R typeinfo name for C_SoundscapeSystem
 R typeinfo name for C_SporeExplosion
 R typeinfo name for C_SporeTrail
 R typeinfo name for C_SpotlightEnd
 R typeinfo name for C_Sprite
 R typeinfo name for C_SpriteOriented
 R typeinfo name for C_SpriteRenderer
 R typeinfo name for C_SpriteTrail
 R typeinfo name for C_SteamJet
 R typeinfo name for C_Strider
 R typeinfo name for C_StriderFX
 R typeinfo name for C_Sun
 R typeinfo name for C_SunGlowOverlay
 R typeinfo name for C_TEAntlionDust
 R typeinfo name for C_TEArmorRicochet
 R typeinfo name for C_TEBSPDecal
 R typeinfo name for C_TEBaseBeam
 R typeinfo name for C_TEBeamEntPoint
 R typeinfo name for C_TEBeamEnts
 R typeinfo name for C_TEBeamFollow
 R typeinfo name for C_TEBeamLaser
 R typeinfo name for C_TEBeamPoints
 R typeinfo name for C_TEBeamRing
 R typeinfo name for C_TEBeamRingPoint
 R typeinfo name for C_TEBeamSpline
 R typeinfo name for C_TEBloodSprite
 R typeinfo name for C_TEBloodStream
 R typeinfo name for C_TEBreakModel
 R typeinfo name for C_TEBubbleTrail
 R typeinfo name for C_TEBubbles
 R typeinfo name for C_TEClientProjectile
 R typeinfo name for C_TEConcussiveExplosion
 R typeinfo name for C_TEDecal
 R typeinfo name for C_TEDust
 R typeinfo name for C_TEDynamicLight
 R typeinfo name for C_TEEffectDispatch
 R typeinfo name for C_TEEnergySplash
 R typeinfo name for C_TEExplosion
 R typeinfo name for C_TEFizz
 R typeinfo name for C_TEFootprintDecal
 R typeinfo name for C_TEGaussExplosion
 R typeinfo name for C_TEGlowSprite
 R typeinfo name for C_TEImpact
 R typeinfo name for C_TEKillPlayerAttachments
 R typeinfo name for C_TELargeFunnel
 R typeinfo name for C_TEMetalSparks
 R typeinfo name for C_TEMuzzleFlash
 R typeinfo name for C_TEParticleSystem
 R typeinfo name for C_TEPhysicsProp
 R typeinfo name for C_TEPlayerDecal
 R typeinfo name for C_TEProjectedDecal
 R typeinfo name for C_TEShatterSurface
 R typeinfo name for C_TEShowLine
 R typeinfo name for C_TESmoke
 R typeinfo name for C_TESparks
 R typeinfo name for C_TESprite
 R typeinfo name for C_TESpriteSpray
 R typeinfo name for C_TEWorldDecal
 R typeinfo name for C_Team
 R typeinfo name for C_TeamplayRoundBasedRules
 R typeinfo name for C_TeamplayRoundBasedRulesProxy
 R typeinfo name for C_TeamplayRules
 R typeinfo name for C_TempEntsSystem
 R typeinfo name for C_Tesla
 R typeinfo name for C_TestTraceline
 R typeinfo name for C_Test_ProxyToggle_Networkable
 R typeinfo name for C_VGuiScreen
 R typeinfo name for C_VortigauntChargeToken
 R typeinfo name for C_VortigauntEffectDispel
 R typeinfo name for C_VoteController
 R typeinfo name for C_WaterBullet
 R typeinfo name for C_WaterExplosionEffect
 R typeinfo name for C_WaterLODControl
 R typeinfo name for C_Weapon357
 R typeinfo name for C_WeaponAR2
 R typeinfo name for C_WeaponAlyxGun
 R typeinfo name for C_WeaponAnnabelle
 R typeinfo name for C_WeaponBinoculars
 R typeinfo name for C_WeaponBugBait
 R typeinfo name for C_WeaponCitizenPackage
 R typeinfo name for C_WeaponCitizenSuitcase
 R typeinfo name for C_WeaponCrossbow
 R typeinfo name for C_WeaponCrowbar
 R typeinfo name for C_WeaponCubemap
 R typeinfo name for C_WeaponCycler
 R typeinfo name for C_WeaponFrag
 R typeinfo name for C_WeaponGaussGun
 R typeinfo name for C_WeaponPhysCannon
 R typeinfo name for C_WeaponPistol
 R typeinfo name for C_WeaponRPG
 R typeinfo name for C_WeaponSMG1
 R typeinfo name for C_WeaponShotgun
 R typeinfo name for C_WeaponStunStick
 R typeinfo name for C_Weapon_SLAM
 R typeinfo name for C_World
 R typeinfo name for ClientModeHLNormal
 R typeinfo name for ClientModeShared
 R typeinfo name for ClientWorldListInfo_t
 R typeinfo name for ColumnButton
 R typeinfo name for CommandMenu
 R typeinfo name for ConCommand
 R typeinfo name for ConCommandBase
 R typeinfo name for ConVar
 R typeinfo name for ConVar_ServerBounded
 R typeinfo name for ConVar_m_pitch
 R typeinfo name for Dragger
 R typeinfo name for EntityParticleTrailInfo_t
 R typeinfo name for FileWeaponInfo_t
 R typeinfo name for IAchievementMgr
 R typeinfo name for IAppSystem
 R typeinfo name for IBaseClientDLL
 R typeinfo name for IBaseInterface
 R typeinfo name for IBreakableWithPropData
 R typeinfo name for IBrushRenderer
 R typeinfo name for ICenterPrint
 R typeinfo name for IChoreoEventCallback
 R typeinfo name for IChoreoStringPool
 R typeinfo name for IClassMap
 R typeinfo name for IClientDLLSharedAppSystems
 R typeinfo name for IClientEffect
 R typeinfo name for IClientEntity
 R typeinfo name for IClientEntityList
 R typeinfo name for IClientEntityListener
 R typeinfo name for IClientLeafShadowEnum
 R typeinfo name for IClientLeafSystem
 R typeinfo name for IClientLeafSystemEngine
 R typeinfo name for IClientMode
 R typeinfo name for IClientNetworkable
 R typeinfo name for IClientRenderable
 R typeinfo name for IClientShadowMgr
 R typeinfo name for IClientThinkable
 R typeinfo name for IClientTools
 R typeinfo name for IClientUnknown
 R typeinfo name for IClientVehicle
 R typeinfo name for IClientVirtualReality
 R typeinfo name for ICollideable
 R typeinfo name for ICommandCallback
 R typeinfo name for ICommandCompletionCallback
 R typeinfo name for IConCommandBaseAccessor
 R typeinfo name for IConVar
 R typeinfo name for ICurveDataAccessor
 R typeinfo name for IDataCacheClient
 R typeinfo name for IDebugOverlayPanel
 R typeinfo name for IDecalEmitterSystem
 R typeinfo name for IDetailObjectSystem
 R typeinfo name for IEffects
 R typeinfo name for IEffectsList
 R typeinfo name for IEntityDataInstantiator
 R typeinfo name for IEntitySaveUtils
 R typeinfo name for IFPSPanel
 R typeinfo name for IGameClientExports
 R typeinfo name for IGameEventListener2
 R typeinfo name for IGameMovement
 R typeinfo name for IGameResources
 R typeinfo name for IGameSystem
 R typeinfo name for IGameSystemPerFrame
 R typeinfo name for IHandleEntity
 R typeinfo name for IHasLocalToGlobalFlexSettings
 R typeinfo name for IHasOwner
 R typeinfo name for IHudLCD
 R typeinfo name for IHudTextMessage
 R typeinfo name for IInput
 R typeinfo name for IInterpolatedVar
 R typeinfo name for ILoadingDisc
 R typeinfo name for IManipulator
 R typeinfo name for IMaterialProxy
 R typeinfo name for IMessageChars
 R typeinfo name for IModelLoadCallback
 R typeinfo name for IMotionEvent
 R typeinfo name for IMoveHelper
 R typeinfo name for IMultiplayerPhysics
 R typeinfo name for INetGraphPanel
 R typeinfo name for IPVSNotify
 R typeinfo name for IPanelFactory
 R typeinfo name for IPanelMetaClassMgr
 R typeinfo name for IParticleEffect
 R typeinfo name for IParticleOperatorDefinition
 R typeinfo name for IParticleSystemQuery
 R typeinfo name for IPartitionEnumerator
 R typeinfo name for IPartitionQueryCallback
 R typeinfo name for IPhysSaveRestoreManager
 R typeinfo name for IPhysicsCollisionEvent
 R typeinfo name for IPhysicsCollisionSolver
 R typeinfo name for IPhysicsGameTrace
 R typeinfo name for IPhysicsObjectEvent
 R typeinfo name for IPoseDebugger
 R typeinfo name for IPredictableList
 R typeinfo name for IPrediction
 R typeinfo name for IPredictionSystem
 R typeinfo name for IPresence
 R typeinfo name for IPrototypeAppEffect
 R typeinfo name for IRagdoll
 R typeinfo name for IRecipientFilter
 R typeinfo name for IRecordingList
 R typeinfo name for IRefCounted
 R typeinfo name for IReplayScreenshotSystem
 R typeinfo name for IRestore
 R typeinfo name for IRopeManager
 R typeinfo name for ISave
 R typeinfo name for ISaveRestoreBlockHandler
 R typeinfo name for ISaveRestoreBlockSet
 R typeinfo name for ISaveRestoreOps
 R typeinfo name for ISceneTokenProcessor
 R typeinfo name for IScreenSpaceEffect
 R typeinfo name for IScreenSpaceEffectManager
 R typeinfo name for ISpatialLeafEnumerator
 R typeinfo name for ITempEnts
 R typeinfo name for ITempEntsSystem
 R typeinfo name for ITextMessage
 R typeinfo name for ITextureRegenerator
 R typeinfo name for ITraceFilter
 R typeinfo name for IVModeManager
 R typeinfo name for IVPhysicsKeyHandler
 R typeinfo name for IVTFTexture
 R typeinfo name for IVehicle
 R typeinfo name for IViewEffects
 R typeinfo name for IViewPort
 R typeinfo name for IViewPortPanel
 R typeinfo name for IViewRender
 R typeinfo name for IViewRenderBeams
 R typeinfo name for IVoiceStatusHelper
 R typeinfo name for MenuItemCheckImage
 R typeinfo name for ParticleSphereProxy
 R typeinfo name for PrecacheEffectBloodSpray::ClientEffectRegister
 R typeinfo name for PrecacheEffectBuild::ClientEffectRegister
 R typeinfo name for PrecacheEffectCombineBall::ClientEffectRegister
 R typeinfo name for PrecacheEffectCrossbow::ClientEffectRegister
 R typeinfo name for PrecacheEffectDusttrail::ClientEffectRegister
 R typeinfo name for PrecacheEffectExplosion::ClientEffectRegister
 R typeinfo name for PrecacheEffectFlares::ClientEffectRegister
 R typeinfo name for PrecacheEffectGlassShatter::ClientEffectRegister
 R typeinfo name for PrecacheEffectGlow::ClientEffectRegister
 R typeinfo name for PrecacheEffectImpacts::ClientEffectRegister
 R typeinfo name for PrecacheEffectMuzzleFlash::ClientEffectRegister
 R typeinfo name for PrecacheEffectPlasmaBeam::ClientEffectRegister
 R typeinfo name for PrecacheEffectSparks::ClientEffectRegister
 R typeinfo name for PrecacheEffectSplash::ClientEffectRegister
 R typeinfo name for PrecacheEffectStunstick::ClientEffectRegister
 R typeinfo name for PrecacheEffectVGuiScreen::ClientEffectRegister
 R typeinfo name for PrecacheEffectWarp::ClientEffectRegister
 R typeinfo name for PrecacheEffectsTest::ClientEffectRegister
 R typeinfo name for PrecacheGunshipFX::ClientEffectRegister
 R typeinfo name for PrecacheMuzzleFlash::ClientEffectRegister
 R typeinfo name for PrecacheOcclusionProxy::ClientEffectRegister
 R typeinfo name for PrecachePlayerDecal::ClientEffectRegister
 R typeinfo name for PrecachePostProcessingEffects::ClientEffectRegister
 R typeinfo name for PrecachePrecipitation::ClientEffectRegister
 R typeinfo name for PrecacheSmokeFogOverlay::ClientEffectRegister
 R typeinfo name for PrecacheTracers::ClientEffectRegister
 R typeinfo name for PrecacheViewRender::ClientEffectRegister
 R typeinfo name for SmokeStackMaterials::ClientEffectRegister
 R typeinfo name for SnowFallEffect
 R typeinfo name for SporeEffect
 R typeinfo name for ThumperDustEmitter
 R typeinfo name for VideoPanel
 R typeinfo name for WashEmitter
 R typeinfo name for WaterDebrisEffect
 R typeinfo name for WorldListInfo_t
 R typeinfo name for audioparams_t
 R typeinfo name for fogparams_t
 R typeinfo name for fogplayerparams_t
 R typeinfo name for sky3dparams_t
 R typeinfo name for sky3dparams_t::NetworkVar_fog
 R typeinfo name for vehicleview_t
 R typeinfo name for vgui::AnimatingImagePanel
 R typeinfo name for vgui::AnimationController
 R typeinfo name for vgui::BaseTooltip
 R typeinfo name for vgui::BuildGroup
 R typeinfo name for vgui::BuildModeDialog
 R typeinfo name for vgui::Button
 R typeinfo name for vgui::CBitmapImagePanel
 R typeinfo name for vgui::CItemButton
 R typeinfo name for vgui::CTreeViewListControl
 R typeinfo name for vgui::CheckButton
 R typeinfo name for vgui::CheckImage
 R typeinfo name for vgui::CircularProgressBar
 R typeinfo name for vgui::ClickPanel
 R typeinfo name for vgui::ComboBox
 R typeinfo name for vgui::ComboBoxButton
 R typeinfo name for vgui::ContinuousProgressBar
 R typeinfo name for vgui::CvarToggleCheckButton<ConVarRef>
 R typeinfo name for vgui::Divider
 R typeinfo name for vgui::EditablePanel
 R typeinfo name for vgui::ExpandButton
 R typeinfo name for vgui::FocusNavGroup
 R typeinfo name for vgui::Frame
 R typeinfo name for vgui::FrameButton
 R typeinfo name for vgui::FrameSystemButton
 R typeinfo name for vgui::GraphPanel
 R typeinfo name for vgui::IClientPanel
 R typeinfo name for vgui::IForceVirtualInheritancePanel
 R typeinfo name for vgui::IImage
 R typeinfo name for vgui::IPanelAnimationPropertyConverter
 R typeinfo name for vgui::Image
 R typeinfo name for vgui::ImagePanel
 R typeinfo name for vgui::Label
 R typeinfo name for vgui::ListPanel
 R typeinfo name for vgui::ListViewItem
 R typeinfo name for vgui::ListViewPanel
 R typeinfo name for vgui::Menu
 R typeinfo name for vgui::MenuBar
 R typeinfo name for vgui::MenuButton
 R typeinfo name for vgui::MenuItem
 R typeinfo name for vgui::MenuSeparator
 R typeinfo name for vgui::MessageBox
 R typeinfo name for vgui::Panel
 R typeinfo name for vgui::PanelListPanel
 R typeinfo name for vgui::ProgressBar
 R typeinfo name for vgui::RadioButton
 R typeinfo name for vgui::RadioImage
 R typeinfo name for vgui::RichText
 R typeinfo name for vgui::RichTextInterior
 R typeinfo name for vgui::ScalableImagePanel
 R typeinfo name for vgui::ScrollBar
 R typeinfo name for vgui::ScrollBarSlider
 R typeinfo name for vgui::SectionedListPanel
 R typeinfo name for vgui::SectionedListPanelHeader
 R typeinfo name for vgui::Slider
 R typeinfo name for vgui::TextEntry
 R typeinfo name for vgui::TextImage
 R typeinfo name for vgui::TextTooltip
 R typeinfo name for vgui::ToggleButton
 R typeinfo name for vgui::TreeNode
 R typeinfo name for vgui::TreeNodeImage
 R typeinfo name for vgui::TreeNodeText
 R typeinfo name for vgui::TreeView
 R typeinfo name for vgui::TreeViewSubPanel
 R typeinfo name for vgui::URLLabel
 R vec3_angle
 R vec3_invalid
 R vec3_origin
 RandomFloat
 RandomInt
 RandomSeed
 ShouldUseNewAssertDialog
 SteamAPI_GetHSteamPipe
 SteamAPI_GetHSteamUser
 SteamAPI_InitSafe
 SteamAPI_RegisterCallback
 SteamAPI_SetTryCatchCallbacks
 SteamAPI_UnregisterCallback
 SteamInternal_ContextInit
 SteamInternal_CreateInterface
 SteamInternal_FindOrCreateUserInterface
 T AR2ExplosionCallback(CEffectData const&)
 T AR2ImpactCallback(CEffectData const&)
 T AR2TracerCallback(CEffectData const&)
 T ActivateVguiScreen(C_BaseEntity*)
 T ActivityList_AddActivityEntry(char const*, int, bool)
 T ActivityList_Free()
 T ActivityList_IndexForName(char const*)
 T ActivityList_Init()
 T ActivityList_RegisterSharedActivities()
 T ActivityList_RegisterSharedActivity(char const*, int)
 T AddBuiltInParticleConstraints()
 T AddBuiltInParticleEmitters()
 T AddBuiltInParticleForceGenerators()
 T AddBuiltInParticleInitializers()
 T AddBuiltInParticleOperators()
 T AddBuiltInParticleRenderers()
 T AddDataChangeEvent(IClientNetworkable*, DataUpdateType_t, int*)
 T AddMultiDamage(CTakeDamageInfo const&, C_BaseEntity*)
 T AddPointToBounds(Vector const&, Vector&, Vector&)
 T AddRestoredEntity(C_BaseEntity*)
 T AddSimpleParticle(SimpleParticle const*, CParticleSubTexture*, bool)
 T AddSurfacepropFile(char const*, IPhysicsSurfaceProps*, IFileSystem*)
 T AirboatGunHeavyTracerCallback(CEffectData const&)
 T AirboatGunTracerCallback(CEffectData const&)
 T AirboatMuzzleFlashCallback(CEffectData const&)
 T AllocPooledString(char const*)
 T AllocateStringHelper(char const*, ...)
 T AllocateUniqueDataTableName(bool, char const*, ...)
 T AngleDiff(float, float)
 T AngleIMatrix(QAngle const&, Vector const&, matrix3x4_t&)
 T AngleIMatrix(QAngle const&, matrix3x4_t&)
 T AngleMatrix(QAngle const&, Vector const&, matrix3x4_t&)
 T AngleMatrix(QAngle const&, matrix3x4_t&)
 T AngleMatrix(RadianEuler const&, Vector const&, matrix3x4_t&)
 T AngleNormalize(float)
 T AngleQuaternion(QAngle const&, Quaternion&)
 T AngleQuaternion(RadianEuler const&, Quaternion&)
 T AngleVectors(QAngle const&, Vector*)
 T AngleVectors(QAngle const&, Vector*, Vector*, Vector*)
 T AntlionGibCallback(CEffectData const&)
 T ApplyMultiDamage()
 T ApplyPostProcessingPasses(PostProcessingPass*, ClipBox const*, ClipBox*)
 T ApplyViewLocking(float, float, ViewLockData_t&, RemapAngleRange_CurvePart_t)
 T Approach(float, float, float)
 T ApproachAngle(float, float, float)
 T AshDebrisEffect::UpdateAlpha(SimpleParticle const*)
 T AshDebrisEffect::UpdateRoll(SimpleParticle*, float)
 T AshDebrisEffect::~AshDebrisEffect()
 T AsyncCaption_t::BlockInfo_t::Less(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&)
 T AsyncCaption_t::operator=(AsyncCaption_t const&)
 T AvoidPushawayProps(C_BaseCombatCharacter*, CUserCmd*)
 T AxisAngleQuaternion(Vector const&, float, Quaternion&)
 T BMPResAnimData_t::~BMPResAnimData_t()
 T BMPResData_t::~BMPResData_t()
 T BSpline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T BaseExplosionEffect()
 T BasisToQuaternion(Vector const&, Vector const&, Vector const&, Quaternion&)
 T BeamDrawHalo(model_t const*, float, int, Vector const&, float, float*, float)
 T Beam_t::ComputeBounds()
 T Beam_t::ComputeFxBlend()
 T Beam_t::DrawModel(int)
 T Beam_t::GetFxBlend()
 T Beam_t::GetRenderAngles()
 T Beam_t::GetRenderBounds(Vector&, Vector&)
 T Beam_t::GetRenderOrigin()
 T Beam_t::IsTransparent()
 T Beam_t::RenderableToWorldTransform()
 T Beam_t::ShouldDraw()
 T Beam_t::~Beam_t()
 T BeginDMXContext()
 T Bias(float, float)
 T BitmapImage::BitmapImage()
 T BitmapImage::BitmapImage(unsigned int, char const*)
 T BitmapImage::DoPaint(int, int, int, int, float, float)
 T BitmapImage::DoPaint(unsigned int, float, float)
 T BitmapImage::GetColor()
 T BitmapImage::GetColor(int&, int&, int&, int&)
 T BitmapImage::GetSize(int&, int&)
 T BitmapImage::Init(unsigned int, KeyValues*)
 T BitmapImage::Paint()
 T BitmapImage::SetBitmap(Bitmap_t const&)
 T BitmapImage::SetColor(Color const&)
 T BitmapImage::SetPos(int, int)
 T BitmapImage::~BitmapImage()
 T Bitmap_t::Clear()
 T Bitmap_t::GetColor(int, int) const
 T Bitmap_t::Init(int, int, ImageFormat, int)
 T Bitmap_t::IsValid() const
 T Bitmap_t::MakeLogicalCopyOf(Bitmap_t&, bool)
 T Bitmap_t::SetBuffer(int, int, ImageFormat, unsigned char*, bool, int)
 T Bitmap_t::SetColor(int, int, Color)
 T BlankImage::Evict()
 T BlankImage::GetContentSize(int&, int&)
 T BlankImage::GetID()
 T BlankImage::GetNumFrames()
 T BlankImage::GetSize(int&, int&)
 T BlankImage::Paint()
 T BlankImage::SetColor(Color)
 T BlankImage::SetFrame(int)
 T BlankImage::SetPos(int, int)
 T BlankImage::SetRotation(int)
 T BlankImage::SetSize(int, int)
 T BlankImage::~BlankImage()
 T BlendBones(CStudioHdr const*, Quaternion*, Vector*, mstudioseqdesc_t&, int, Quaternion const*, Vector const*, float, int)
 T BloodImpactCallback(CEffectData const&)
 T BloodSplatCallback(CEffectData const&)
 T BloodSprayCallback(CEffectData const&)
 T BoneSetupCompare(CBoneSetupEnt const&, CBoneSetupEnt const&)
 T BoxOnPlaneSide(float const*, float const*, cplane_t const*)
 T BreakModelCreateSingle(C_BaseEntity*, breakmodel_t*, Vector const&, QAngle const&, Vector const&, Vector const&, int, breakablepropparams_t const&)
 T BreakModelDrawHelper(C_LocalTempEntity*, int)
 T BreakModelList(CUtlVector<breakmodel_t, CUtlMemory<breakmodel_t, int> >&, int, float, int)
 T BuildBoneChain(CStudioHdr const*, matrix3x4_t const&, Vector const*, Quaternion const*, int, matrix3x4_t*, CBoneBitList&)
 T BuildGammaTable(float, float, float, int)
 T CAM_EndDistance()
 T CAM_EndMouseMove()
 T CAM_InDown(CCommand const&)
 T CAM_InUp(CCommand const&)
 T CAM_OutDown(CCommand const&)
 T CAM_OutUp(CCommand const&)
 T CAM_PitchDownDown(CCommand const&)
 T CAM_PitchDownUp(CCommand const&)
 T CAM_PitchUpDown(CCommand const&)
 T CAM_PitchUpUp(CCommand const&)
 T CAM_StartDistance()
 T CAM_StartMouseMove()
 T CAM_ToFirstPerson()
 T CAM_ToOrthographic()
 T CAM_ToThirdPerson()
 T CAM_ToThirdPerson_MayaMode()
 T CAM_ToggleSnapto()
 T CAM_YawLeftDown(CCommand const&)
 T CAM_YawLeftUp(CCommand const&)
 T CAM_YawRightDown(CCommand const&)
 T CAM_YawRightUp(CCommand const&)
 T CAboveWaterView::CIntersectionView::Draw()
 T CAboveWaterView::CIntersectionView::~CIntersectionView()
 T CAboveWaterView::CReflectionView::Draw()
 T CAboveWaterView::CReflectionView::~CReflectionView()
 T CAboveWaterView::CRefractionView::Draw()
 T CAboveWaterView::CRefractionView::~CRefractionView()
 T CAboveWaterView::Draw()
 T CAboveWaterView::Setup(CViewSetup const&, bool, VisibleFogVolumeInfo_t const&, WaterRenderInfo_t const&)
 T CAboveWaterView::~CAboveWaterView()
 T CAbsProxy::OnBind(void*)
 T CAbsProxy::~CAbsProxy()
 T CAchievementNotificationPanel::AddNotification(char const*, wchar_t const*, wchar_t const*)
 T CAchievementNotificationPanel::ApplySchemeSettings(vgui::IScheme*)
 T CAchievementNotificationPanel::CAchievementNotificationPanel(char const*)
 T CAchievementNotificationPanel::FireGameEvent(IGameEvent*)
 T CAchievementNotificationPanel::GetAnimMap()
 T CAchievementNotificationPanel::GetKBMap()
 T CAchievementNotificationPanel::GetMessageMap()
 T CAchievementNotificationPanel::GetPanelClassName()
 T CAchievementNotificationPanel::Init()
 T CAchievementNotificationPanel::LevelInit()
 T CAchievementNotificationPanel::OnTick()
 T CAchievementNotificationPanel::PerformLayout()
 T CAchievementNotificationPanel::ShouldDraw()
 T CAchievementNotificationPanel::ShowNextNotification()
 T CAchievementNotificationPanel::~CAchievementNotificationPanel()
 T CAchievementSaveThread::Run()
 T CAchievementSaveThread::~CAchievementSaveThread()
 T CAddGeneralRandomRotation::GetReadAttributes() const
 T CAddGeneralRandomRotation::GetWrittenAttributes() const
 T CAddGeneralRandomRotation::InitMultipleOverride()
 T CAddGeneralRandomRotation::InitNewParticlesBlock(CParticleCollection*, int, int, int, void*) const
 T CAddGeneralRandomRotation::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T CAddGeneralRandomRotation::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T CAddProxy::Init(IMaterial*, KeyValues*)
 T CAddProxy::OnBind(void*)
 T CAddProxy::~CAddProxy()
 T CAlphaMaterialProxy::GetMaterial()
 T CAlphaMaterialProxy::Init(IMaterial*, KeyValues*)
 T CAlphaMaterialProxy::OnBind(C_BaseEntity*)
 T CAlphaMaterialProxy::~CAlphaMaterialProxy()
 T CAmmoDef::AddAmmoType(char const*, int, int, char const*, char const*, char const*, float, int, int, int)
 T CAmmoDef::AddAmmoType(char const*, int, int, int, int, int, float, int, int, int)
 T CAmmoDef::CAmmoDef()
 T CAmmoDef::DamageForce(int)
 T CAmmoDef::DamageType(int)
 T CAmmoDef::Flags(int)
 T CAmmoDef::Index(char const*)
 T CAmmoDef::MaxCarry(int)
 T CAmmoDef::MaxSplashSize(int)
 T CAmmoDef::MinSplashSize(int)
 T CAmmoDef::NPCDamage(int)
 T CAmmoDef::PlrDamage(int)
 T CAmmoDef::TracerType(int)
 T CAmmoDef::~CAmmoDef()
 T CAnimateSpecificTexture::GetAnimationStartTime(void*)
 T CAnimateSpecificTexture::Init(IMaterial*, KeyValues*)
 T CAnimateSpecificTexture::OnBind(void*)
 T CAnimateSpecificTexture::Release()
 T CAnimateSpecificTexture::~CAnimateSpecificTexture()
 T CAnimatedEntityTextureProxy::AnimationWrapped(void*)
 T CAnimatedEntityTextureProxy::GetAnimationStartTime(void*)
 T CAnimatedEntityTextureProxy::~CAnimatedEntityTextureProxy()
 T CAnimatedOffsetTextureProxy::GetAnimationStartTime(void*)
 T CAnimatedOffsetTextureProxy::OnBind(void*)
 T CAnimatedOffsetTextureProxy::~CAnimatedOffsetTextureProxy()
 T CAnimatedTextureProxy::GetAnimationStartTime(void*)
 T CAnimatedTextureProxy::~CAnimatedTextureProxy()
 T CAntlionGibManager::LevelInitPreEntity()
 T CAntlionGibManager::RemoveGib(C_BaseEntity*)
 T CAntlionGibManager::Update(float)
 T CAntlionGibManager::~CAntlionGibManager()
 T CAsyncCaption::AddRandomToken(CUtlVector<AsyncCaption_t, CUtlMemory<AsyncCaption_t, int> >&)
 T CAsyncCaption::AddToken(CUtlVector<AsyncCaption_t, CUtlMemory<AsyncCaption_t, int> >&, char const*)
 T CAsyncCaption::GetStream(wchar_t*, int)
 T CAsyncCaption::~CAsyncCaption()
 T CAsyncCaptionResourceManager::FindOrAddBlock(int, int)
 T CAsyncCaptionResourceManager::Init()
 T CAsyncCaptionResourceManager::LevelInitPostEntity()
 T CAsyncCaptionResourceManager::PollForAsyncLoading(CHudCloseCaption*, int, int)
 T CAsyncCaptionResourceManager::Shutdown()
 T CAsyncCaptionResourceManager::~CAsyncCaptionResourceManager()
 T CAutoGameSystem::CAutoGameSystem(char const*)
 T CAutoGameSystem::Name()
 T CAutoGameSystem::~CAutoGameSystem()
 T CAutoGameSystemPerFrame::CAutoGameSystemPerFrame(char const*)
 T CAutoGameSystemPerFrame::Name()
 T CAutoGameSystemPerFrame::~CAutoGameSystemPerFrame()
 T CAvatarImage::CAvatarImage()
 T CAvatarImage::Evict()
 T CAvatarImage::GetContentSize(int&, int&)
 T CAvatarImage::GetID()
 T CAvatarImage::GetNumFrames()
 T CAvatarImage::GetSize(int&, int&)
 T CAvatarImage::InitFromRGBA(int, unsigned char const*, int, int)
 T CAvatarImage::LoadAvatarImage()
 T CAvatarImage::OnPersonaStateChanged(PersonaStateChange_t*)
 T CAvatarImage::Paint()
 T CAvatarImage::SetAvatarSize(int, int)
 T CAvatarImage::SetAvatarSteamID(CSteamID, EAvatarSize)
 T CAvatarImage::SetColor(Color)
 T CAvatarImage::SetFrame(int)
 T CAvatarImage::SetPos(int, int)
 T CAvatarImage::SetRotation(int)
 T CAvatarImage::SetSize(int, int)
 T CAvatarImage::UpdateFriendStatus()
 T CAvatarImage::~CAvatarImage()
 T CAvatarImagePanel::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CAvatarImagePanel::ApplySettings(KeyValues*)
 T CAvatarImagePanel::CAvatarImagePanel(vgui::Panel*, char const*)
 T CAvatarImagePanel::GetAnimMap()
 T CAvatarImagePanel::GetKBMap()
 T CAvatarImagePanel::GetMessageMap()
 T CAvatarImagePanel::GetPanelClassName()
 T CAvatarImagePanel::GetVar_m_clrOutline(vgui::Panel*)
 T CAvatarImagePanel::OnMousePressed(ButtonCode_t)
 T CAvatarImagePanel::OnSizeChanged(int, int)
 T CAvatarImagePanel::PaintBackground()
 T CAvatarImagePanel::~CAvatarImagePanel()
 T CBase3dView::GetFrustum()
 T CBaseAnimatedTextureProxy::AnimationWrapped(void*)
 T CBaseAnimatedTextureProxy::CBaseAnimatedTextureProxy()
 T CBaseAnimatedTextureProxy::GetMaterial()
 T CBaseAnimatedTextureProxy::Init(IMaterial*, KeyValues*)
 T CBaseAnimatedTextureProxy::OnBind(void*)
 T CBaseAnimatedTextureProxy::Release()
 T CBaseAnimatedTextureProxy::~CBaseAnimatedTextureProxy()
 T CBaseAppSystem<IParticleSystemQuery>::Connect(void* (*)(char const*, int*))
 T CBaseAppSystem<IParticleSystemQuery>::Disconnect()
 T CBaseAppSystem<IParticleSystemQuery>::Init()
 T CBaseAppSystem<IParticleSystemQuery>::QueryInterface(char const*)
 T CBaseAppSystem<IParticleSystemQuery>::Shutdown()
 T CBaseEntityList::AddEntityAtSlot(IHandleEntity*, int, int)
 T CBaseEntityList::AddNetworkableEntity(IHandleEntity*, int, int)
 T CBaseEntityList::AddNonNetworkableEntity(IHandleEntity*)
 T CBaseEntityList::CBaseEntityList()
 T CBaseEntityList::OnAddEntity(IHandleEntity*, CBaseHandle)
 T CBaseEntityList::OnRemoveEntity(IHandleEntity*, CBaseHandle)
 T CBaseEntityList::RemoveEntity(CBaseHandle)
 T CBaseEntityList::RemoveEntityAtSlot(int)
 T CBaseEntityList::~CBaseEntityList()
 T CBaseGameStats::AddDataForSend(KeyValues*, StatSendType_t)
 T CBaseGameStats::Clear()
 T CBaseGameStats::Event_AchievementProgress(int, char const*)
 T CBaseGameStats::Event_Init()
 T CBaseGameStats::Event_LevelInit()
 T CBaseGameStats::Event_LevelShutdown(float)
 T CBaseGameStats::Event_LoadGame()
 T CBaseGameStats::Event_MapChange(char const*, char const*)
 T CBaseGameStats::Event_SaveGame()
 T CBaseGameStats::Event_Shutdown()
 T CBaseGameStats::GetStatSaveFileName()
 T CBaseGameStats::GetStatUploadRegistryKeyName()
 T CBaseGameStats::HaveValidData()
 T CBaseGameStats::OnInit(CBaseGameStats*, char const*)
 T CBaseGameStats::ShouldSendDataOnAppShutdown()
 T CBaseGameStats::ShouldSendDataOnLevelShutdown()
 T CBaseGameStats::ShouldTrackStandardStats()
 T CBaseGameStats::StatTrackingEnabledForMod()
 T CBaseGameStats::StatsLog(char const*, ...)
 T CBaseGameStats::UseOldFormat()
 T CBaseGameStats::UserPlayedAllTheMaps()
 T CBaseGameStats_Driver::AddBaseDataForSend(KeyValues*, StatSendType_t)
 T CBaseGameStats_Driver::CBaseGameStats_Driver()
 T CBaseGameStats_Driver::CollectData(StatSendType_t)
 T CBaseGameStats_Driver::FrameUpdatePostEntityThink()
 T CBaseGameStats_Driver::Init()
 T CBaseGameStats_Driver::LevelInitPreEntity()
 T CBaseGameStats_Driver::LevelShutdown()
 T CBaseGameStats_Driver::LevelShutdownPreClearSteamAPIContext()
 T CBaseGameStats_Driver::LevelShutdownPreEntity()
 T CBaseGameStats_Driver::OnRestore()
 T CBaseGameStats_Driver::OnSave()
 T CBaseGameStats_Driver::ResetData()
 T CBaseGameStats_Driver::SendData()
 T CBaseGameStats_Driver::Shutdown()
 T CBaseGameStats_Driver::UpdatePerfStats()
 T CBaseGameStats_Driver::~CBaseGameStats_Driver()
 T CBaseGameSystem::Init()
 T CBaseGameSystem::IsPerFrame()
 T CBaseGameSystem::LevelInitPostEntity()
 T CBaseGameSystem::LevelInitPreEntity()
 T CBaseGameSystem::LevelShutdownPostEntity()
 T CBaseGameSystem::LevelShutdownPreClearSteamAPIContext()
 T CBaseGameSystem::LevelShutdownPreEntity()
 T CBaseGameSystem::OnRestore()
 T CBaseGameSystem::OnSave()
 T CBaseGameSystem::PostInit()
 T CBaseGameSystem::PostRender()
 T CBaseGameSystem::PreRender()
 T CBaseGameSystem::SafeRemoveIfDesired()
 T CBaseGameSystem::Shutdown()
 T CBaseGameSystem::Update(float)
 T CBaseGameSystemPerFrame::Init()
 T CBaseGameSystemPerFrame::IsPerFrame()
 T CBaseGameSystemPerFrame::LevelInitPostEntity()
 T CBaseGameSystemPerFrame::LevelInitPreEntity()
 T CBaseGameSystemPerFrame::LevelShutdownPostEntity()
 T CBaseGameSystemPerFrame::LevelShutdownPreClearSteamAPIContext()
 T CBaseGameSystemPerFrame::LevelShutdownPreEntity()
 T CBaseGameSystemPerFrame::Name()
 T CBaseGameSystemPerFrame::OnRestore()
 T CBaseGameSystemPerFrame::OnSave()
 T CBaseGameSystemPerFrame::PostInit()
 T CBaseGameSystemPerFrame::PostRender()
 T CBaseGameSystemPerFrame::PreRender()
 T CBaseGameSystemPerFrame::SafeRemoveIfDesired()
 T CBaseGameSystemPerFrame::Shutdown()
 T CBaseGameSystemPerFrame::Update(float)
 T CBaseHudChat::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CBaseHudChat::ApplySchemeSettings(vgui::IScheme*)
 T CBaseHudChat::CBaseHudChat(char const*)
 T CBaseHudChat::ChatPrintf(int, int, char const*, ...)
 T CBaseHudChat::CreateChatInputLine()
 T CBaseHudChat::CreateChatLines()
 T CBaseHudChat::FadeChatHistory()
 T CBaseHudChat::FireGameEvent(IGameEvent*)
 T CBaseHudChat::GetAnimMap()
 T CBaseHudChat::GetChatFilterPanel()
 T CBaseHudChat::GetChatInputOffset()
 T CBaseHudChat::GetClientColor(int)
 T CBaseHudChat::GetDefaultTextColor()
 T CBaseHudChat::GetDisplayedSubtitlePlayerName(int)
 T CBaseHudChat::GetFilterFlags()
 T CBaseHudChat::GetFilterForString(char const*)
 T CBaseHudChat::GetInputPanel()
 T CBaseHudChat::GetKBMap()
 T CBaseHudChat::GetMessageMap()
 T CBaseHudChat::GetPanelClassName()
 T CBaseHudChat::GetTextColorForClient(TextColor, int)
 T CBaseHudChat::Init()
 T CBaseHudChat::LevelInit(char const*)
 T CBaseHudChat::LevelShutdown()
 T CBaseHudChat::MsgFunc_SayText(bf_read&)
 T CBaseHudChat::MsgFunc_SayText2(bf_read&)
 T CBaseHudChat::MsgFunc_TextMsg(bf_read&)
 T CBaseHudChat::MsgFunc_VoiceSubtitle(bf_read&)
 T CBaseHudChat::OnChatEntrySend()
 T CBaseHudChat::OnChatEntryStopMessageMode()
 T CBaseHudChat::OnTick()
 T CBaseHudChat::Paint()
 T CBaseHudChat::Printf(int, char const*, ...)
 T CBaseHudChat::Reset()
 T CBaseHudChat::Send()
 T CBaseHudChat::StartMessageMode(int)
 T CBaseHudChat::StopMessageMode()
 T CBaseHudChat::~CBaseHudChat()
 T CBaseHudChatEntry::ApplySchemeSettings(vgui::IScheme*)
 T CBaseHudChatEntry::OnKeyCodeTyped(ButtonCode_t)
 T CBaseHudChatEntry::~CBaseHudChatEntry()
 T CBaseHudChatInputLine::ApplySchemeSettings(vgui::IScheme*)
 T CBaseHudChatInputLine::CBaseHudChatInputLine(vgui::Panel*, char const*)
 T CBaseHudChatInputLine::GetCurrentKeyFocus()
 T CBaseHudChatInputLine::Paint()
 T CBaseHudChatInputLine::PerformLayout()
 T CBaseHudChatInputLine::~CBaseHudChatInputLine()
 T CBaseHudChatLine::ApplySchemeSettings(vgui::IScheme*)
 T CBaseHudChatLine::CBaseHudChatLine(vgui::Panel*, char const*)
 T CBaseHudChatLine::Colorize(int)
 T CBaseHudChatLine::InsertAndColorizeText(wchar_t*, int)
 T CBaseHudChatLine::PerformFadeout()
 T CBaseHudChatLine::~CBaseHudChatLine()
 T CBaseHudWeaponSelection::CBaseHudWeaponSelection(char const*)
 T CBaseHudWeaponSelection::CanBeSelectedInHUD(C_BaseCombatWeapon*)
 T CBaseHudWeaponSelection::CancelWeaponSelection()
 T CBaseHudWeaponSelection::ComputeRect(C_BasePlayer*, C_BaseCombatWeapon*, wrect_s*)
 T CBaseHudWeaponSelection::DrawWList(C_BasePlayer*, C_BaseCombatWeapon*, bool, int, int, int, int)
 T CBaseHudWeaponSelection::GetFirstPos(int)
 T CBaseHudWeaponSelection::GetNextActivePos(int, int)
 T CBaseHudWeaponSelection::HideSelection()
 T CBaseHudWeaponSelection::Init()
 T CBaseHudWeaponSelection::IsHudMenuPreventingWeaponSelection()
 T CBaseHudWeaponSelection::IsHudMenuTakingInput()
 T CBaseHudWeaponSelection::IsInSelectionMode()
 T CBaseHudWeaponSelection::IsWeaponSelectable()
 T CBaseHudWeaponSelection::KeyInput(int, ButtonCode_t, char const*)
 T CBaseHudWeaponSelection::OnThink()
 T CBaseHudWeaponSelection::OnWeaponPickup(C_BaseCombatWeapon*)
 T CBaseHudWeaponSelection::OpenSelection()
 T CBaseHudWeaponSelection::ProcessInput()
 T CBaseHudWeaponSelection::Reset()
 T CBaseHudWeaponSelection::SelectSlot(int)
 T CBaseHudWeaponSelection::SelectWeapon()
 T CBaseHudWeaponSelection::SetWeaponSelected()
 T CBaseHudWeaponSelection::SwitchToLastWeapon()
 T CBaseHudWeaponSelection::UserCmd_Slot2()
 T CBaseHudWeaponSelection::UserCmd_Slot4()
 T CBaseHudWeaponSelection::VidInit()
 T CBaseHudWeaponSelection::~CBaseHudWeaponSelection()
 T CBaseManipulator::OnAcceptManipulation()
 T CBaseManipulator::OnBeginManipulation()
 T CBaseManipulator::OnCancelManipulation()
 T CBaseManipulator::OnCursorMoved(int, int)
 T CBaseManipulator::OnMousePressed(ButtonCode_t, int, int)
 T CBaseManipulator::OnMouseReleased(ButtonCode_t, int, int)
 T CBaseManipulator::OnMouseWheeled(int)
 T CBaseManipulator::OnTick()
 T CBaseManipulator::SetViewportSize(int, int)
 T CBaseModelPanel::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CBaseModelPanel::ApplySettings(KeyValues*)
 T CBaseModelPanel::CBaseModelPanel(vgui::Panel*, char const*)
 T CBaseModelPanel::GetAnimMap()
 T CBaseModelPanel::GetKBMap()
 T CBaseModelPanel::GetMessageMap()
 T CBaseModelPanel::GetPanelClassName()
 T CBaseModelPanel::GetVar_m_bDisableManipulation(vgui::Panel*)
 T CBaseModelPanel::GetVar_m_bStartFramed(vgui::Panel*)
 T CBaseModelPanel::LookAtBounds(Vector const&, Vector const&)
 T CBaseModelPanel::OnCursorMoved(int, int)
 T CBaseModelPanel::OnKeyCodePressed(ButtonCode_t)
 T CBaseModelPanel::OnKeyCodeReleased(ButtonCode_t)
 T CBaseModelPanel::OnMousePressed(ButtonCode_t)
 T CBaseModelPanel::OnMouseReleased(ButtonCode_t)
 T CBaseModelPanel::OnMouseWheeled(int)
 T CBaseModelPanel::ParseModelAnimInfo(KeyValues*)
 T CBaseModelPanel::ParseModelAttachInfo(KeyValues*)
 T CBaseModelPanel::ParseModelResInfo(KeyValues*)
 T CBaseModelPanel::PerformLayout()
 T CBaseModelPanel::SetMDL(char const*, void*)
 T CBaseModelPanel::SetMDL(unsigned short, void*)
 T CBaseModelPanel::SetModelAnglesAndPosition(QAngle const&, Vector const&)
 T CBaseModelPanel::SetModelAnim(int)
 T CBaseModelPanel::~CBaseModelPanel()
 T CBaseParticleEntity_Factory()
 T CBasePresence::CBasePresence()
 T CBasePresence::DebugUserSetContext(CCommand const&)
 T CBasePresence::DebugUserSetProperty(CCommand const&)
 T CBasePresence::GetPresenceID(char const*)
 T CBasePresence::GetPropertyDisplayString(unsigned int, unsigned int, char*, int)
 T CBasePresence::GetPropertyIdString(unsigned int)
 T CBasePresence::Init()
 T CBasePresence::Name()
 T CBasePresence::SetStat(unsigned int, int, int)
 T CBasePresence::SetupGameProperties(CUtlVector<_XUSER_CONTEXT, CUtlMemory<_XUSER_CONTEXT, int> >&, CUtlVector<_XUSER_PROPERTY, CUtlMemory<_XUSER_PROPERTY, int> >&)
 T CBasePresence::Shutdown()
 T CBasePresence::StartStatsReporting(void*, bool)
 T CBasePresence::Update(float)
 T CBasePresence::UploadStats()
 T CBasePresence::UserSetContext(unsigned int, unsigned int, unsigned int, bool)
 T CBasePresence::UserSetProperty(unsigned int, unsigned int, unsigned int, void const*, bool)
 T CBasePresence::~CBasePresence()
 T CBaseRopePhysics::ApplyConstraints(CSimplePhysics::CNode*, int)
 T CBaseRopePhysics::CBaseRopePhysics(CSimplePhysics::CNode*, int, CRopeSpring*, float*)
 T CBaseRopePhysics::GetNodeForces(CSimplePhysics::CNode*, int, Vector*)
 T CBaseRopePhysics::ResetSpringLength(float)
 T CBaseRopePhysics::Restart()
 T CBaseRopePhysics::SetNumNodes(int)
 T CBaseRopePhysics::SetupSimulation(float, CSimplePhysics::IHelper*)
 T CBaseRopePhysics::Simulate(float)
 T CBaseSimpleCollision::ClearActivePlanes()
 T CBaseSimpleCollision::ConsiderPlane(cplane_t*)
 T CBaseSimpleCollision::Setup(Vector const&, float, float)
 T CBaseSimpleCollision::TestForPlane(Vector const&, Vector const&, float, float)
 T CBaseSimpleCollision::TraceLine(Vector const&, Vector const&, CGameTrace*, bool)
 T CBaseToggleTextureProxy::GetMaterial()
 T CBaseToggleTextureProxy::Init(IMaterial*, KeyValues*)
 T CBaseToggleTextureProxy::OnBind(void*)
 T CBaseToggleTextureProxy::Release()
 T CBaseToggleTextureProxy::~CBaseToggleTextureProxy()
 T CBaseViewport::ActivateClientUI()
 T CBaseViewport::AddNewPanel(IViewPortPanel*, char const*)
 T CBaseViewport::AllowedToPrintText()
 T CBaseViewport::CBackGroundPanel::ApplySchemeSettings(vgui::IScheme*)
 T CBaseViewport::CBackGroundPanel::CBackGroundPanel(vgui::Panel*)
 T CBaseViewport::CBackGroundPanel::IsWithinTraverse(int, int, bool)
 T CBaseViewport::CBackGroundPanel::OnMousePressed(ButtonCode_t)
 T CBaseViewport::CBackGroundPanel::PerformLayout()
 T CBaseViewport::CBackGroundPanel::~CBackGroundPanel()
 T CBaseViewport::CBaseViewport()
 T CBaseViewport::CreateDefaultPanels()
 T CBaseViewport::CreatePanelByName(char const*)
 T CBaseViewport::FindPanelByName(char const*)
 T CBaseViewport::FireGameEvent(IGameEvent*)
 T CBaseViewport::GetActivePanel()
 T CBaseViewport::GetAnimMap()
 T CBaseViewport::GetAnimationController()
 T CBaseViewport::GetDeathMessageStartHeight()
 T CBaseViewport::GetKBMap()
 T CBaseViewport::GetMessageMap()
 T CBaseViewport::GetPanelClassName()
 T CBaseViewport::GetViewPortPanel()
 T CBaseViewport::GetViewPortScheme()
 T CBaseViewport::HideClientUI()
 T CBaseViewport::LoadHudAnimations()
 T CBaseViewport::OnScreenSizeChanged(int, int)
 T CBaseViewport::OnThink()
 T CBaseViewport::Paint()
 T CBaseViewport::PostMessageToPanel(char const*, KeyValues*)
 T CBaseViewport::ReloadScheme(char const*)
 T CBaseViewport::RemoveAllPanels()
 T CBaseViewport::SetParent(unsigned int)
 T CBaseViewport::ShowBackGround(bool)
 T CBaseViewport::ShowPanel(IViewPortPanel*, bool)
 T CBaseViewport::ShowPanel(char const*, bool)
 T CBaseViewport::Start(IGameUIFuncs*, IGameEventManager2*)
 T CBaseViewport::UpdateAllPanels()
 T CBaseViewport::~CBaseViewport()
 T CBaseWaterView::CSoftwareIntersectionView::Draw()
 T CBaseWaterView::CSoftwareIntersectionView::~CSoftwareIntersectionView()
 T CBaseWaterView::~CBaseWaterView()
 T CBaseWorldView::AdjustView(float)
 T CBaseWorldView::DrawExecute(float, view_id_t, float)
 T CBaseWorldView::DrawSetup(float, int, float, int)
 T CBaseWorldView::PopView()
 T CBaseWorldView::PushView(float)
 T CBeamSegDraw::End()
 T CBeamSegDraw::NextSeg(BeamSeg_t*)
 T CBeamSegDraw::SpecifySeg(Vector const&, Vector const&)
 T CBeamSegDraw::Start(IMatRenderContext*, int, IMaterial*, CMeshBuilder*, int)
 T CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::AddElementToBucket(int, unsigned short)
 T CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::EnsureCapacity(int)
 T CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::RemoveElement(unsigned short)
 T CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::AddElementToBucket(unsigned short, unsigned short)
 T CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::EnsureCapacity(int)
 T CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::RemoveBucket(unsigned short)
 T CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::RemoveElement(unsigned short)
 T CBitmapButton::ApplySettings(KeyValues*)
 T CBitmapButton::CBitmapButton(vgui::Panel*, char const*, char const*)
 T CBitmapButton::Paint()
 T CBitmapButton::PaintBackground()
 T CBitmapButton::~CBitmapButton()
 T CBitmapPanel::ApplySettings(KeyValues*)
 T CBitmapPanel::CBitmapPanel(vgui::Panel*, char const*)
 T CBitmapPanel::OnCursorEntered()
 T CBitmapPanel::OnCursorExited()
 T CBitmapPanel::Paint()
 T CBitmapPanel::PaintBackground()
 T CBitmapPanel::SetBitmap(Bitmap_t const&)
 T CBitmapPanel::SetImage(BitmapImage*)
 T CBitmapPanel::~CBitmapPanel()
 T CBloodSprayEmitter::UpdateRoll(SimpleParticle*, float)
 T CBloodSprayEmitter::UpdateVelocity(SimpleParticle*, float)
 T CBloodSprayEmitter::~CBloodSprayEmitter()
 T CBoneCache::CreateResource(bonecacheparams_t const&)
 T CBoneCache::GetCachedBone(int)
 T CBoneCache::IsValid(float, float)
 T CBoneCache::ReadCachedBonePointers(matrix3x4_t**, int)
 T CBoneCache::UpdateBones(matrix3x4_t const*, int, float)
 T CBoneList::Alloc()
 T CBoneList::Release()
 T CBoneMergeCache::CBoneMergeCache()
 T CBoneMergeCache::GetAimEntOrigin(Vector*, QAngle*)
 T CBoneMergeCache::GetRootBone(matrix3x4_t&)
 T CBoneMergeCache::Init(C_BaseAnimating*)
 T CBoneMergeCache::MergeMatchingBones(int)
 T CBoneMergeCache::UpdateCache()
 T CBoneSetup::AccumulatePose(Vector*, Quaternion*, int, float, float, float, CIKContext*)
 T CBoneSetup::AddLocalLayers(Vector*, Quaternion*, mstudioseqdesc_t&, int, float, float, float, CIKContext*)
 T CBoneSetup::AddSequenceLayers(Vector*, Quaternion*, mstudioseqdesc_t&, int, float, float, float, CIKContext*)
 T CBoneSetup::CalcAutoplaySequences(Vector*, Quaternion*, float, CIKContext*)
 T CBoneSetupMemoryPool<Quaternion>::Alloc()
 T CBoneSetupMemoryPool<Quaternion>::~CBoneSetupMemoryPool()
 T CBoneSetupMemoryPool<Vector>::Alloc()
 T CBoneSetupMemoryPool<Vector>::~CBoneSetupMemoryPool()
 T CBoneSetupMemoryPool<matrix3x4_t>::Alloc()
 T CBoneSetupMemoryPool<matrix3x4_t>::~CBoneSetupMemoryPool()
 T CBoolProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CBoolProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CBoolProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CBorderVisualizerPanel::CBorderVisualizerPanel(vgui::Panel*, char const*, vgui::IBorder*)
 T CBorderVisualizerPanel::GetAnimMap()
 T CBorderVisualizerPanel::GetKBMap()
 T CBorderVisualizerPanel::GetMessageMap()
 T CBorderVisualizerPanel::GetPanelClassName()
 T CBorderVisualizerPanel::Paint()
 T CBorderVisualizerPanel::~CBorderVisualizerPanel()
 T CBoundedCvar_Interp::GetFloat() const
 T CBoundedCvar_Interp::~CBoundedCvar_Interp()
 T CBoundedCvar_InterpRatio::GetFloat() const
 T CBoundedCvar_InterpRatio::~CBoundedCvar_InterpRatio()
 T CBoundedCvar_Predict::GetFloat() const
 T CBoundedCvar_Predict::~CBoundedCvar_Predict()
 T CBreakParser::ParseKeyValue(void*, char const*, char const*)
 T CBreakParser::ParseModelName(breakmodel_t*, char const*)
 T CBreakParser::SetDefaults(void*)
 T CBreakableHelper::~CBreakableHelper()
 T CBreakableSurfaceProxy::GetMaterial()
 T CBreakableSurfaceProxy::Init(IMaterial*, KeyValues*)
 T CBreakableSurfaceProxy::OnBind(C_BaseEntity*)
 T CBreakableSurfaceProxy::~CBreakableSurfaceProxy()
 T CBroadcastRecipientFilter::~CBroadcastRecipientFilter()
 T CBuildModeDialogMgr::~CBuildModeDialogMgr()
 T CBuildModeNavCombo::CBuildModeNavCombo(vgui::Panel*, char const*, int, bool, bool, vgui::Panel*)
 T CBuildModeNavCombo::GetAnimMap()
 T CBuildModeNavCombo::GetKBMap()
 T CBuildModeNavCombo::GetMessageMap()
 T CBuildModeNavCombo::GetPanelClassName()
 T CBuildModeNavCombo::OnShowMenu(vgui::Menu*)
 T CBuildModeNavCombo::~CBuildModeNavCombo()
 T CBulletWhizTimer::LevelInitPreEntity()
 T CBulletWhizTimer::~CBulletWhizTimer()
 T CC_CL_Find_Ent(CCommand const&)
 T CC_CL_Find_Ent_Index(CCommand const&)
 T CC_DropPrimary()
 T CC_DumpClientSoundscapeData(CCommand const&)
 T CC_Shake_Stop()
 T CC_VR_Cycle_Aim_Move_Mode(CCommand const&)
 T CCallQueue::~CCallQueue()
 T CCallback<CAvatarImage, PersonaStateChange_t, false>::Run(void*)
 T CCallback<CAvatarImage, PersonaStateChange_t, false>::~CCallback()
 T CCallback<CClientSteamContext, SteamServerConnectFailure_t, false>::Run(void*)
 T CCallback<CClientSteamContext, SteamServerConnectFailure_t, false>::~CCallback()
 T CCallback<CClientSteamContext, SteamServersConnected_t, false>::Run(void*)
 T CCallback<CClientSteamContext, SteamServersConnected_t, false>::~CCallback()
 T CCallback<CClientSteamContext, SteamServersDisconnected_t, false>::Run(void*)
 T CCallback<CClientSteamContext, SteamServersDisconnected_t, false>::~CCallback()
 T CCallbackImpl<12>::GetCallbackSizeBytes()
 T CCallbackImpl<12>::Run(void*, bool, unsigned long long)
 T CCallbackImpl<12>::~CCallbackImpl()
 T CCallbackImpl<1>::GetCallbackSizeBytes()
 T CCallbackImpl<1>::Run(void*, bool, unsigned long long)
 T CCallbackImpl<1>::~CCallbackImpl()
 T CCallbackImpl<4>::GetCallbackSizeBytes()
 T CCallbackImpl<4>::Run(void*, bool, unsigned long long)
 T CCallbackImpl<4>::~CCallbackImpl()
 T CCallbackImpl<8>::GetCallbackSizeBytes()
 T CCallbackImpl<8>::Run(void*, bool, unsigned long long)
 T CCallbackImpl<8>::~CCallbackImpl()
 T CCamoMaterialProxy::GenerateCamoTexture(ITexture*, IVTFTexture*)
 T CCamoMaterialProxy::GetColors(Vector&, Vector&, int, Vector const&, Vector const&, Vector const&, Vector const&, Vector const&, Vector const&)
 T CCamoMaterialProxy::GetMaterial()
 T CCamoMaterialProxy::Init(IMaterial*, KeyValues*)
 T CCamoMaterialProxy::OnBind(C_BaseEntity*)
 T CCamoMaterialProxy::~CCamoMaterialProxy()
 T CCamoTextureRegen::RegenerateTextureBits(ITexture*, IVTFTexture*, Rect_t*)
 T CCamoTextureRegen::Release()
 T CCenterPrint::Clear()
 T CCenterPrint::ColorPrint(int, int, int, int, char*)
 T CCenterPrint::ColorPrint(int, int, int, int, wchar_t*)
 T CCenterPrint::Create(unsigned int)
 T CCenterPrint::Destroy()
 T CCenterPrint::Print(char*)
 T CCenterPrint::Print(wchar_t*)
 T CCenterPrint::SetTextColor(int, int, int, int)
 T CCenterStringLabel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CCenterStringLabel::ApplySchemeSettings(vgui::IScheme*)
 T CCenterStringLabel::CCenterStringLabel(unsigned int)
 T CCenterStringLabel::Clear()
 T CCenterStringLabel::ColorPrint(int, int, int, int, char*)
 T CCenterStringLabel::ColorPrint(int, int, int, int, wchar_t*)
 T CCenterStringLabel::GetAnimMap()
 T CCenterStringLabel::GetKBMap()
 T CCenterStringLabel::GetMessageMap()
 T CCenterStringLabel::GetPanelClassName()
 T CCenterStringLabel::OnScreenSizeChanged(int, int)
 T CCenterStringLabel::OnTick()
 T CCenterStringLabel::Print(char*)
 T CCenterStringLabel::Print(wchar_t*)
 T CCenterStringLabel::SetTextColor(int, int, int, int)
 T CCenterStringLabel::ShouldDraw()
 T CCenterStringLabel::~CCenterStringLabel()
 T CChildOperatorDefinition::CreateInstance(UniqueId_t const&) const
 T CChildOperatorDefinition::GetClassSize() const
 T CChildOperatorDefinition::GetId() const
 T CChildOperatorDefinition::GetName() const
 T CChildOperatorDefinition::GetUnpackStructure() const
 T CChildOperatorDefinition::IsObsolete() const
 T CChoreoActor::AddChannel(CChoreoChannel*)
 T CChoreoActor::CChoreoActor()
 T CChoreoActor::FindChannelIndex(CChoreoChannel*)
 T CChoreoActor::GetChannel(int)
 T CChoreoActor::GetName()
 T CChoreoActor::GetNumChannels()
 T CChoreoActor::RestoreFromBuffer(CUtlBuffer&, CChoreoScene*, IChoreoStringPool*)
 T CChoreoActor::SetActive(bool)
 T CChoreoActor::SetFacePoserModelName(char const*)
 T CChoreoActor::SetName(char const*)
 T CChoreoChannel::AddEvent(CChoreoEvent*)
 T CChoreoChannel::CChoreoChannel()
 T CChoreoChannel::GetEvent(int)
 T CChoreoChannel::GetName()
 T CChoreoChannel::GetNumEvents()
 T CChoreoChannel::ReconcileCloseCaption()
 T CChoreoChannel::ReconcileGestureTimes()
 T CChoreoChannel::RemoveEvent(CChoreoEvent*)
 T CChoreoChannel::RestoreFromBuffer(CUtlBuffer&, CChoreoScene*, CChoreoActor*, IChoreoStringPool*)
 T CChoreoChannel::SetActive(bool)
 T CChoreoChannel::SetActor(CChoreoActor*)
 T CChoreoChannel::SetName(char const*)
 T CChoreoEvent::AddAbsoluteTag(CChoreoEvent::AbsTagType, char const*, float)
 T CChoreoEvent::AddEventDependency(CChoreoEvent*)
 T CChoreoEvent::AddRelativeTag(char const*, float)
 T CChoreoEvent::AddTimingTag(char const*, float, bool)
 T CChoreoEvent::AddTrack(char const*)
 T CChoreoEvent::CCTypeForName(char const*)
 T CChoreoEvent::CChoreoEvent(CChoreoScene*)
 T CChoreoEvent::ClearEventDependencies()
 T CChoreoEvent::ContinueProcessing(IChoreoEventCallback*, CChoreoScene*, float)
 T CChoreoEvent::CurveHasEndTime()
 T CChoreoEvent::FindEntryTag(CChoreoEvent::AbsTagType)
 T CChoreoEvent::FindExitTag(CChoreoEvent::AbsTagType)
 T CChoreoEvent::FindRelativeTag(char const*)
 T CChoreoEvent::GetActor()
 T CChoreoEvent::GetChannel()
 T CChoreoEvent::GetCloseCaptionToken() const
 T CChoreoEvent::GetCloseCaptionType() const
 T CChoreoEvent::GetDefaultCurveType()
 T CChoreoEvent::GetDescription()
 T CChoreoEvent::GetDuration()
 T CChoreoEvent::GetEndTime()
 T CChoreoEvent::GetFlexAnimationTrack(int)
 T CChoreoEvent::GetIntensity(float)
 T CChoreoEvent::GetLastSlaveEndTime() const
 T CChoreoEvent::GetLoopCount()
 T CChoreoEvent::GetName()
 T CChoreoEvent::GetNumFlexAnimationTracks()
 T CChoreoEvent::GetNumLoopsRemaining()
 T CChoreoEvent::GetParameters()
 T CChoreoEvent::GetParameters2()
 T CChoreoEvent::GetPlaybackCloseCaptionToken(char*, int)
 T CChoreoEvent::GetRelativeTagName()
 T CChoreoEvent::GetRelativeWavName()
 T CChoreoEvent::GetScene()
 T CChoreoEvent::GetStartTime()
 T CChoreoEvent::GetSyncToFollowingGesture()
 T CChoreoEvent::GetTrackLookupSet()
 T CChoreoEvent::GetType()
 T CChoreoEvent::HasEndTime()
 T CChoreoEvent::Init(CChoreoScene*)
 T CChoreoEvent::IsProcessing() const
 T CChoreoEvent::IsResumeCondition()
 T CChoreoEvent::IsUsingCombinedFile() const
 T CChoreoEvent::IsUsingRelativeTag()
 T CChoreoEvent::OffsetTime(float)
 T CChoreoEvent::PreventTagOverlap()
 T CChoreoEvent::RemoveAllTracks()
 T CChoreoEvent::RescaleGestureTimes(float, float, bool)
 T CChoreoEvent::ResetProcessing()
 T CChoreoEvent::RestoreFlexAnimationsFromBuffer(CUtlBuffer&, IChoreoStringPool*)
 T CChoreoEvent::RestoreFromBuffer(CUtlBuffer&, CChoreoScene*, IChoreoStringPool*)
 T CChoreoEvent::SetActive(bool)
 T CChoreoEvent::SetActor(CChoreoActor*)
 T CChoreoEvent::SetChannel(CChoreoChannel*)
 T CChoreoEvent::SetCloseCaptionToken(char const*)
 T CChoreoEvent::SetCloseCaptionType(CChoreoEvent::CLOSECAPTION)
 T CChoreoEvent::SetCombinedUsingGenderToken(bool)
 T CChoreoEvent::SetDefaultCurveType(int)
 T CChoreoEvent::SetDistanceToTarget(float)
 T CChoreoEvent::SetEndTime(float)
 T CChoreoEvent::SetFixedLength(bool)
 T CChoreoEvent::SetForceShortMovement(bool)
 T CChoreoEvent::SetGestureSequenceDuration(float)
 T CChoreoEvent::SetLastSlaveEndTime(float)
 T CChoreoEvent::SetLockBodyFacing(bool)
 T CChoreoEvent::SetLoopCount(int)
 T CChoreoEvent::SetName(char const*)
 T CChoreoEvent::SetNumLoopsRemaining(int)
 T CChoreoEvent::SetNumSlaves(int)
 T CChoreoEvent::SetParameters(char const*)
 T CChoreoEvent::SetParameters2(char const*)
 T CChoreoEvent::SetParameters3(char const*)
 T CChoreoEvent::SetPitch(int)
 T CChoreoEvent::SetPlayOverScript(bool)
 T CChoreoEvent::SetRequiredCombinedChecksum(unsigned int)
 T CChoreoEvent::SetResumeCondition(bool)
 T CChoreoEvent::SetStartTime(float)
 T CChoreoEvent::SetSuppressingCaptionAttenuation(bool)
 T CChoreoEvent::SetSyncToFollowingGesture(bool)
 T CChoreoEvent::SetTrackLookupSet(bool)
 T CChoreoEvent::SetType(CChoreoEvent::EVENTTYPE)
 T CChoreoEvent::SetUsingCombinedFile(bool)
 T CChoreoEvent::SetUsingRelativeTag(bool, char const*, char const*)
 T CChoreoEvent::SetYaw(int)
 T CChoreoEvent::StartProcessing(IChoreoEventCallback*, CChoreoScene*, float)
 T CChoreoEvent::StopProcessing(IChoreoEventCallback*, CChoreoScene*, float)
 T CChoreoEvent::TypeForAbsoluteTagName(char const*)
 T CChoreoEvent::TypeForName(char const*)
 T CChoreoEvent::~CChoreoEvent()
 T CChoreoScene::AllocActor()
 T CChoreoScene::AllocChannel()
 T CChoreoScene::AllocEvent()
 T CChoreoScene::CChoreoScene(IChoreoEventCallback*)
 T CChoreoScene::CurveHasEndTime()
 T CChoreoScene::DeleteReferencedObjects(CChoreoEvent*)
 T CChoreoScene::EventLess(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&)
 T CChoreoScene::EventThink(CChoreoEvent*, float, float, bool, CChoreoScene::PROCESSING_TYPE&)
 T CChoreoScene::FindActorIndex(CChoreoActor*)
 T CChoreoScene::FindTagByName(char const*, char const*)
 T CChoreoScene::GetActor(int)
 T CChoreoScene::GetDefaultCurveType()
 T CChoreoScene::GetDuration()
 T CChoreoScene::GetEvent(int)
 T CChoreoScene::GetNumActors()
 T CChoreoScene::GetNumEvents()
 T CChoreoScene::GetTime()
 T CChoreoScene::InternalDetermineEventTypes()
 T CChoreoScene::LoopThink(float)
 T CChoreoScene::LoopToTime(float)
 T CChoreoScene::ParseActor()
 T CChoreoScene::ParseChannel(CChoreoActor*)
 T CChoreoScene::ParseEvent(CChoreoActor*, CChoreoChannel*)
 T CChoreoScene::ParseFlexAnimations(ISceneTokenProcessor*, CChoreoEvent*, bool)
 T CChoreoScene::ParseFromBuffer(char const*, ISceneTokenProcessor*)
 T CChoreoScene::ParseScaleSettings(ISceneTokenProcessor*, CChoreoScene*)
 T CChoreoScene::ProcessActiveListEntry(CChoreoScene::ActiveList*)
 T CChoreoScene::ReconcileCloseCaption()
 T CChoreoScene::ReconcileGestureTimes()
 T CChoreoScene::ReconcileTags()
 T CChoreoScene::RemoveEventsExceptTypes(int*, int)
 T CChoreoScene::ResetSimulation(bool, float, float)
 T CChoreoScene::RestoreFromBinaryBuffer(CUtlBuffer&, char const*, IChoreoStringPool*)
 T CChoreoScene::SceneMsg(char const*, ...)
 T CChoreoScene::SetEventCallbackInterface(IChoreoEventCallback*)
 T CChoreoScene::SetPrintFunc(void (*)(char const*, ...))
 T CChoreoScene::SetTimeZoom(char const*, int)
 T CChoreoScene::Think(float)
 T CChoreoScene::choreoprintf(int, char const*, ...)
 T CChoreoScene::~CChoreoScene()
 T CChoreoStringPool::FindOrAddString(char const*)
 T CChoreoStringPool::GetString(short, char*, int)
 T CClampProxy::Init(IMaterial*, KeyValues*)
 T CClampProxy::OnBind(void*)
 T CClampProxy::~CClampProxy()
 T CClassMap::Add(char const*, char const*, int, C_BaseEntity* (*)())
 T CClassMap::CreateEntity(char const*)
 T CClassMap::GetClassSize(char const*)
 T CClassMap::Lookup(char const*)
 T CClassMap::~CClassMap()
 T CClassMemoryPool<CHudTexture>::~CClassMemoryPool()
 T CClassMemoryPool<C_LocalTempEntity>::Clear()
 T CClassMemoryPool<PanelAnimationMap>::Clear()
 T CClassPtrSaveRestoreOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CClassPtrSaveRestoreOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
 T CClientDLLSharedAppSystems::CClientDLLSharedAppSystems()
 T CClientDLLSharedAppSystems::Count()
 T CClientDLLSharedAppSystems::GetDllName(int)
 T CClientDLLSharedAppSystems::GetInterfaceName(int)
 T CClientDLLSharedAppSystems::~CClientDLLSharedAppSystems()
 T CClientEffectPrecacheSystem::Init()
 T CClientEffectPrecacheSystem::IsPerFrame()
 T CClientEffectPrecacheSystem::LevelInitPostEntity()
 T CClientEffectPrecacheSystem::LevelInitPreEntity()
 T CClientEffectPrecacheSystem::LevelShutdownPostEntity()
 T CClientEffectPrecacheSystem::LevelShutdownPreEntity()
 T CClientEffectPrecacheSystem::Name()
 T CClientEffectPrecacheSystem::OnRestore()
 T CClientEffectPrecacheSystem::OnSave()
 T CClientEffectPrecacheSystem::PostInit()
 T CClientEffectPrecacheSystem::Register(IClientEffect*)
 T CClientEffectPrecacheSystem::SafeRemoveIfDesired()
 T CClientEffectPrecacheSystem::Shutdown()
 T CClientEffectPrecacheSystem::~CClientEffectPrecacheSystem()
 T CClientEffectRegistration::CClientEffectRegistration(char const*, void (*)(CEffectData const&))
 T CClientEntityList::AddListenerEntity(IClientEntityListener*)
 T CClientEntityList::AddPVSNotifier(IClientUnknown*)
 T CClientEntityList::CClientEntityList()
 T CClientEntityList::FirstBaseEntity() const
 T CClientEntityList::GetBaseEntity(int)
 T CClientEntityList::GetBaseEntityFromHandle(CBaseHandle)
 T CClientEntityList::GetClientEntity(int)
 T CClientEntityList::GetClientEntityFromHandle(CBaseHandle)
 T CClientEntityList::GetClientNetworkable(int)
 T CClientEntityList::GetClientNetworkableFromHandle(CBaseHandle)
 T CClientEntityList::GetClientRenderableFromHandle(CBaseHandle)
 T CClientEntityList::GetClientThinkableFromHandle(CBaseHandle)
 T CClientEntityList::GetClientUnknownFromHandle(CBaseHandle)
 T CClientEntityList::GetHighestEntityIndex()
 T CClientEntityList::GetMaxEntities()
 T CClientEntityList::HandleToEntIndex(CBaseHandle)
 T CClientEntityList::NextBaseEntity(C_BaseEntity*) const
 T CClientEntityList::NumberOfEntities(bool)
 T CClientEntityList::OnAddEntity(IHandleEntity*, CBaseHandle)
 T CClientEntityList::OnRemoveEntity(IHandleEntity*, CBaseHandle)
 T CClientEntityList::Release()
 T CClientEntityList::RemovePVSNotifier(IClientUnknown*)
 T CClientEntityList::SetMaxEntities(int)
 T CClientEntityList::~CClientEntityList()
 T CClientLeafSystem::AddRenderable(IClientRenderable*, RenderGroup_t)
 T CClientLeafSystem::AddRenderableToLeaf(int, unsigned short)
 T CClientLeafSystem::AddRenderableToLeaves(unsigned short, int, unsigned short*)
 T CClientLeafSystem::AddShadow(unsigned short, unsigned short)
 T CClientLeafSystem::AddShadowToRenderable(unsigned short, unsigned short)
 T CClientLeafSystem::BuildRenderablesList(SetupRenderInfo_t const&)
 T CClientLeafSystem::CClientLeafSystem()
 T CClientLeafSystem::ChangeRenderableRenderGroup(unsigned short, RenderGroup_t)
 T CClientLeafSystem::CollateRenderablesInLeaf(int, int, SetupRenderInfo_t const&)
 T CClientLeafSystem::CollateViewModelRenderables(CUtlVector<IClientRenderable*, CUtlMemory<IClientRenderable*, int> >&, CUtlVector<IClientRenderable*, CUtlMemory<IClientRenderable*, int> >&)
 T CClientLeafSystem::ComputeTranslucentRenderLeaf(int, unsigned short const*, short const*, int, int)
 T CClientLeafSystem::CreateRenderableHandle(IClientRenderable*, bool)
 T CClientLeafSystem::DrawDetailObjectsInLeaf(int, int, int&, int&)
 T CClientLeafSystem::DrawSmallEntities(bool)
 T CClientLeafSystem::DrawStaticProps(bool)
 T CClientLeafSystem::EnableAlternateSorting(unsigned short, bool)
 T CClientLeafSystem::EnumerateLeaf(int, int)
 T CClientLeafSystem::EnumerateShadowsInLeaves(int, unsigned short*, IClientLeafShadowEnum*)
 T CClientLeafSystem::FirstLeafInRenderable(unsigned short)
 T CClientLeafSystem::FirstLeafInShadow(unsigned short)
 T CClientLeafSystem::FirstRenderableInLeaf(int)
 T CClientLeafSystem::FirstRenderableInShadow(unsigned short)
 T CClientLeafSystem::FirstShadowInLeaf(int)
 T CClientLeafSystem::FirstShadowOnRenderable(unsigned short)
 T CClientLeafSystem::GetDetailObjectsInLeaf(int, int&, int&)
 T CClientLeafSystem::GetRenderableLeaf(unsigned short, int*, int const*, int*)
 T CClientLeafSystem::GetRenderableLeaves(unsigned short, int*)
 T CClientLeafSystem::GetSubSystemDataInLeaf(int, int)
 T CClientLeafSystem::Init()
 T CClientLeafSystem::InsertIntoTree(unsigned short&)
 T CClientLeafSystem::IsPerFrame()
 T CClientLeafSystem::IsRenderableInPVS(IClientRenderable*)
 T CClientLeafSystem::LevelInitPostEntity()
 T CClientLeafSystem::LevelInitPreEntity()
 T CClientLeafSystem::LevelShutdownPostEntity()
 T CClientLeafSystem::LevelShutdownPreEntity()
 T CClientLeafSystem::Name()
 T CClientLeafSystem::NewRenderable(IClientRenderable*, RenderGroup_t, int)
 T CClientLeafSystem::OnRestore()
 T CClientLeafSystem::OnSave()
 T CClientLeafSystem::PostInit()
 T CClientLeafSystem::PostRender()
 T CClientLeafSystem::PreRender()
 T CClientLeafSystem::ProjectFlashlight(unsigned short, int, int const*)
 T CClientLeafSystem::ProjectShadow(unsigned short, int, int const*)
 T CClientLeafSystem::RemoveRenderable(unsigned short)
 T CClientLeafSystem::RemoveShadow(unsigned short)
 T CClientLeafSystem::RenderableChanged(unsigned short)
 T CClientLeafSystem::SafeRemoveIfDesired()
 T CClientLeafSystem::SetDetailObjectsInLeaf(int, int, int)
 T CClientLeafSystem::SetRenderGroup(unsigned short, RenderGroup_t)
 T CClientLeafSystem::SetSubSystemDataInLeaf(int, int, CClientLeafSubSystemData*)
 T CClientLeafSystem::ShouldDrawDetailObjectsInLeaf(int, int)
 T CClientLeafSystem::Shutdown()
 T CClientLeafSystem::SortEntities(Vector const&, Vector const&, CClientRenderablesList::CEntry*, int)
 T CClientLeafSystem::Update(float)
 T CClientLeafSystem::~CClientLeafSystem()
 T CClientRenderablesList::~CClientRenderablesList()
 T CClientScoreBoardDialog::AddHeader()
 T CClientScoreBoardDialog::AddSection(int, int)
 T CClientScoreBoardDialog::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CClientScoreBoardDialog::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CClientScoreBoardDialog::ApplySchemeSettings(vgui::IScheme*)
 T CClientScoreBoardDialog::CClientScoreBoardDialog(IViewPort*)
 T CClientScoreBoardDialog::FindItemIDForPlayerIndex(int)
 T CClientScoreBoardDialog::FireGameEvent(IGameEvent*)
 T CClientScoreBoardDialog::GetAdditionalHeight()
 T CClientScoreBoardDialog::GetAnimMap()
 T CClientScoreBoardDialog::GetKBMap()
 T CClientScoreBoardDialog::GetMessageMap()
 T CClientScoreBoardDialog::GetName()
 T CClientScoreBoardDialog::GetPanelClassName()
 T CClientScoreBoardDialog::GetPlayerScoreInfo(int, KeyValues*)
 T CClientScoreBoardDialog::GetVPanel()
 T CClientScoreBoardDialog::GetVar_m_iAvatarWidth(vgui::Panel*)
 T CClientScoreBoardDialog::GetVar_m_iClassWidth(vgui::Panel*)
 T CClientScoreBoardDialog::GetVar_m_iDeathWidth(vgui::Panel*)
 T CClientScoreBoardDialog::GetVar_m_iNameWidth(vgui::Panel*)
 T CClientScoreBoardDialog::GetVar_m_iPingWidth(vgui::Panel*)
 T CClientScoreBoardDialog::GetVar_m_iScoreWidth(vgui::Panel*)
 T CClientScoreBoardDialog::HasInputElements()
 T CClientScoreBoardDialog::InitScoreboardSections()
 T CClientScoreBoardDialog::IsVisible()
 T CClientScoreBoardDialog::NeedsUpdate()
 T CClientScoreBoardDialog::OnPollHideCode(int)
 T CClientScoreBoardDialog::OnThink()
 T CClientScoreBoardDialog::PostApplySchemeSettings(vgui::IScheme*)
 T CClientScoreBoardDialog::Reset()
 T CClientScoreBoardDialog::SetData(KeyValues*)
 T CClientScoreBoardDialog::SetParent(unsigned int)
 T CClientScoreBoardDialog::ShowAvatars()
 T CClientScoreBoardDialog::ShowPanel(bool)
 T CClientScoreBoardDialog::StaticPlayerSortFunc(vgui::SectionedListPanel*, int, int)
 T CClientScoreBoardDialog::Update()
 T CClientScoreBoardDialog::UpdatePlayerAvatar(int, KeyValues*)
 T CClientScoreBoardDialog::UpdatePlayerInfo()
 T CClientScoreBoardDialog::UpdateTeamInfo()
 T CClientScoreBoardDialog::~CClientScoreBoardDialog()
 T CClientShadowMgr::AddChildBounds(matrix3x4_t&, IClientRenderable*, Vector&, Vector&)
 T CClientShadowMgr::AddShadowToReceiver(unsigned short, IClientRenderable*, ShadowReceiver_t)
 T CClientShadowMgr::AddToDirtyShadowList(IClientRenderable*, bool)
 T CClientShadowMgr::AddToDirtyShadowList(unsigned short, bool)
 T CClientShadowMgr::AdvanceFrame()
 T CClientShadowMgr::BuildActiveShadowDepthList(CViewSetup const&, int, unsigned short*)
 T CClientShadowMgr::BuildFlashlight(unsigned short)
 T CClientShadowMgr::BuildOrthoShadow(IClientRenderable*, unsigned short, Vector const&, Vector const&)
 T CClientShadowMgr::BuildPerspectiveWorldToFlashlightMatrix(VMatrix&, FlashlightState_t const&)
 T CClientShadowMgr::BuildRenderToTextureShadow(IClientRenderable*, unsigned short, Vector const&, Vector const&)
 T CClientShadowMgr::BuildSetupListForRenderToTextureShadow(unsigned short, float)
 T CClientShadowMgr::BuildSetupShadowHierarchy(IClientRenderable*, CClientShadowMgr::ClientShadow_t const&, bool)
 T CClientShadowMgr::BuildWorldToShadowMatrix(VMatrix&, Vector const&, Quaternion const&)
 T CClientShadowMgr::CClientShadowMgr()
 T CClientShadowMgr::ComputeBoundingSphere(IClientRenderable*, Vector&, float&)
 T CClientShadowMgr::ComputeExtraClipPlanes(IClientRenderable*, unsigned short, Vector const*, Vector const&, Vector const&, Vector const&)
 T CClientShadowMgr::ComputeHierarchicalBounds(IClientRenderable*, Vector&, Vector&)
 T CClientShadowMgr::ComputeSeparatingPlane(IClientRenderable*, IClientRenderable*, cplane_t*)
 T CClientShadowMgr::ComputeShadowBBox(IClientRenderable*, Vector const&, float, Vector*, Vector*)
 T CClientShadowMgr::ComputeShadowDepthTextures(CViewSetup const&)
 T CClientShadowMgr::ComputeShadowTextures(CViewSetup const&, int, unsigned short*)
 T CClientShadowMgr::CreateFlashlight(FlashlightState_t const&)
 T CClientShadowMgr::CreateProjectedTexture(CBaseHandle, int)
 T CClientShadowMgr::CreateShadow(CBaseHandle, int)
 T CClientShadowMgr::CullReceiver(unsigned short, IClientRenderable*, IClientRenderable*)
 T CClientShadowMgr::DestroyFlashlight(unsigned short)
 T CClientShadowMgr::DestroyShadow(unsigned short)
 T CClientShadowMgr::DrawRenderToTextureDebugInfo(IClientRenderable*, Vector const&, Vector const&)
 T CClientShadowMgr::DrawRenderToTextureShadow(unsigned short, float)
 T CClientShadowMgr::DrawShadowHierarchy(IClientRenderable*, CClientShadowMgr::ClientShadow_t const&, bool)
 T CClientShadowMgr::GetParentShadowEntity(unsigned short)
 T CClientShadowMgr::GetShadowDirection() const
 T CClientShadowMgr::GetShadowDirection(IClientRenderable*) const
 T CClientShadowMgr::Init()
 T CClientShadowMgr::InitDepthTextureShadows()
 T CClientShadowMgr::InitRenderToTextureShadows()
 T CClientShadowMgr::IsFlashlightTarget(unsigned short, IClientRenderable*)
 T CClientShadowMgr::IsPerFrame()
 T CClientShadowMgr::LevelInitPostEntity()
 T CClientShadowMgr::LevelInitPreEntity()
 T CClientShadowMgr::LevelShutdownPostEntity()
 T CClientShadowMgr::LevelShutdownPreEntity()
 T CClientShadowMgr::MarkRenderToTextureShadowDirty(unsigned short)
 T CClientShadowMgr::Name()
 T CClientShadowMgr::OnRestore()
 T CClientShadowMgr::OnSave()
 T CClientShadowMgr::PostInit()
 T CClientShadowMgr::PostRender()
 T CClientShadowMgr::PreRender()
 T CClientShadowMgr::RemoveAllShadowsFromReceiver(IClientRenderable*, ShadowReceiver_t)
 T CClientShadowMgr::RemoveShadowFromDirtyList(unsigned short)
 T CClientShadowMgr::RenderShadowTexture(int, int)
 T CClientShadowMgr::SafeRemoveIfDesired()
 T CClientShadowMgr::SetFalloffBias(unsigned short, unsigned char)
 T CClientShadowMgr::SetFlashlightLightWorld(unsigned short, bool)
 T CClientShadowMgr::SetFlashlightTarget(unsigned short, CHandle<C_BaseEntity>)
 T CClientShadowMgr::SetShadowBlobbyCutoffArea(float)
 T CClientShadowMgr::SetShadowColor(unsigned char, unsigned char, unsigned char)
 T CClientShadowMgr::SetShadowDirection(Vector const&)
 T CClientShadowMgr::SetShadowDistance(float)
 T CClientShadowMgr::SetShadowsDisabled(bool)
 T CClientShadowMgr::SetupRenderToTextureShadow(unsigned short)
 T CClientShadowMgr::ShadowHandleCompareFunc(unsigned short const&, unsigned short const&)
 T CClientShadowMgr::Shutdown()
 T CClientShadowMgr::ShutdownDepthTextureShadows()
 T CClientShadowMgr::ShutdownRenderToTextureShadows()
 T CClientShadowMgr::UnlockAllShadowDepthTextures()
 T CClientShadowMgr::Update(float)
 T CClientShadowMgr::UpdateBrushShadow(IClientRenderable*, unsigned short)
 T CClientShadowMgr::UpdateFlashlightState(unsigned short, FlashlightState_t const&)
 T CClientShadowMgr::UpdateProjectedTexture(unsigned short, bool)
 T CClientShadowMgr::UpdateProjectedTextureInternal(unsigned short, bool)
 T CClientShadowMgr::UpdateShadow(unsigned short, bool)
 T CClientShadowMgr::UpdateStudioShadow(IClientRenderable*, unsigned short)
 T CClientShadowMgr::~CClientShadowMgr()
 T CClientSideEffect::CClientSideEffect(char const*)
 T CClientSideEffect::Destroy()
 T CClientSideEffect::GetName()
 T CClientSideEffect::IsActive()
 T CClientSideEffect::~CClientSideEffect()
 T CClientSteamContext::Activate()
 T CClientSteamContext::CClientSteamContext()
 T CClientSteamContext::OnSteamServerConnectFailure(SteamServerConnectFailure_t*)
 T CClientSteamContext::OnSteamServersConnected(SteamServersConnected_t*)
 T CClientSteamContext::OnSteamServersDisconnected(SteamServersDisconnected_t*)
 T CClientSteamContext::Shutdown()
 T CClientSteamContext::UpdateLoggedOnState()
 T CClientSteamContext::~CClientSteamContext()
 T CClientThinkList::AddEntityToFrameThinkList(CClientThinkList::ThinkEntry_t*, bool, int&, CClientThinkList::ThinkEntry_t**)
 T CClientThinkList::CleanUpDeleteList()
 T CClientThinkList::Init()
 T CClientThinkList::IsPerFrame()
 T CClientThinkList::LevelInitPostEntity()
 T CClientThinkList::LevelInitPreEntity()
 T CClientThinkList::LevelShutdownPostEntity()
 T CClientThinkList::LevelShutdownPreEntity()
 T CClientThinkList::Name()
 T CClientThinkList::OnRestore()
 T CClientThinkList::OnSave()
 T CClientThinkList::PerformThinkFunction(CClientThinkList::ThinkEntry_t*, float)
 T CClientThinkList::PerformThinkFunctions()
 T CClientThinkList::PostInit()
 T CClientThinkList::PostRender()
 T CClientThinkList::PreRender()
 T CClientThinkList::RemoveThinkable(CBaseHandle)
 T CClientThinkList::RemoveThinkable(CClientThinkHandlePtr*)
 T CClientThinkList::SafeRemoveIfDesired()
 T CClientThinkList::SetNextClientThink(CBaseHandle, float)
 T CClientThinkList::SetNextClientThink(CClientThinkHandlePtr*, float)
 T CClientThinkList::Shutdown()
 T CClientThinkList::Update(float)
 T CClientThinkList::~CClientThinkList()
 T CClientTools::AddClientRenderable(IClientRenderable*, int)
 T CClientTools::AddToDirtyShadowList(unsigned short, bool)
 T CClientTools::AttachToEntity(void*)
 T CClientTools::CClientTools()
 T CClientTools::CreateFlashlight(FlashlightState_t const&)
 T CClientTools::CreateShadow(CBaseHandle, int)
 T CClientTools::DestroyFlashlight(unsigned short)
 T CClientTools::DestroyShadow(unsigned short)
 T CClientTools::DetachFromEntity(void*)
 T CClientTools::DrawSprite(IClientRenderable*, float, float, int, int, Color const&, float, int*)
 T CClientTools::EnableParticleSystems(bool)
 T CClientTools::EnableRecordingMode(bool)
 T CClientTools::FindGlobalFlexcontroller(char const*)
 T CClientTools::GetAbsAngles(unsigned int)
 T CClientTools::GetAbsOrigin(unsigned int)
 T CClientTools::GetClassname(unsigned int)
 T CClientTools::GetEntIndex(void*)
 T CClientTools::GetGlobalFlexControllerName(int)
 T CClientTools::GetLocalPlayer()
 T CClientTools::GetLocalPlayerEyePosition(Vector&, QAngle&, float&)
 T CClientTools::GetModelIndex(unsigned int)
 T CClientTools::GetModelName(unsigned int)
 T CClientTools::GetNumRecordables()
 T CClientTools::GetOwnerEntity(void*)
 T CClientTools::GetOwningWeaponEntIndex(int)
 T CClientTools::GetRecordable(int)
 T CClientTools::GetToolHandleForEntityByIndex(int)
 T CClientTools::HandleLessFunc(CClientTools::HToolEntry_t const&, CClientTools::HToolEntry_t const&)
 T CClientTools::IsBaseCombatCharacter(void*)
 T CClientTools::IsInRecordingMode() const
 T CClientTools::IsNPC(void*)
 T CClientTools::IsPlayer(void*)
 T CClientTools::IsRenderingThirdPerson() const
 T CClientTools::IsValidHandle(unsigned int)
 T CClientTools::MarkClientRenderableDirty(IClientRenderable*)
 T CClientTools::MarkRenderToTextureShadowDirty(unsigned short)
 T CClientTools::NextEntity(void*)
 T CClientTools::OnEntityCreated(C_BaseEntity*)
 T CClientTools::OnEntityDeleted(C_BaseEntity*)
 T CClientTools::PostToolMessage(KeyValues*)
 T CClientTools::ReloadParticleDefintions(char const*, void const*, int)
 T CClientTools::RemoveClientRenderable(IClientRenderable*)
 T CClientTools::SetEnabled(unsigned int, bool)
 T CClientTools::SetRecording(unsigned int, bool)
 T CClientTools::SetRenderGroup(IClientRenderable*, int)
 T CClientTools::ShouldRecord(unsigned int)
 T CClientTools::TriggerTempEntity(KeyValues*)
 T CClientTools::UpdateFlashlightState(unsigned short, FlashlightState_t const&)
 T CClientTools::UpdateProjectedTexture(unsigned short, bool)
 T CClientTools::~CClientTools()
 T CClientVirtualReality::Activate()
 T CClientVirtualReality::AlignTorsoAndViewToWeapon()
 T CClientVirtualReality::CancelTorsoTransformOverride()
 T CClientVirtualReality::Connect(void* (*)(char const*, int*))
 T CClientVirtualReality::Deactivate()
 T CClientVirtualReality::Disconnect()
 T CClientVirtualReality::DrawMainMenu()
 T CClientVirtualReality::GetTorsoRelativeAim(Vector*, QAngle*)
 T CClientVirtualReality::Init()
 T CClientVirtualReality::OverlayHUDQuadWithUndistort(CViewSetup const&, bool, bool, bool)
 T CClientVirtualReality::OverridePlayerMotion(float, QAngle const&, QAngle const&, Vector const&, QAngle*, Vector*)
 T CClientVirtualReality::OverrideStereoView(CViewSetup*, CViewSetup*, CViewSetup*)
 T CClientVirtualReality::OverrideTorsoTransform(Vector const&, QAngle const&)
 T CClientVirtualReality::OverrideView(CViewSetup*, Vector*, QAngle*, HeadtrackMovementMode_t)
 T CClientVirtualReality::OverrideViewModelTransform(Vector&, QAngle&, bool)
 T CClientVirtualReality::OverrideWeaponHudAimVectors(Vector*, Vector*)
 T CClientVirtualReality::PostProcessFrame(StereoEye_t)
 T CClientVirtualReality::ProcessCurrentTrackingState(float)
 T CClientVirtualReality::QueryInterface(char const*)
 T CClientVirtualReality::RenderHUDQuad(bool, bool)
 T CClientVirtualReality::ShouldRenderHUDInWorld()
 T CClientVirtualReality::Shutdown()
 T CClientVirtualReality::StartupComplete()
 T CClientVirtualReality::~CClientVirtualReality()
 T CClient_Precipitation::CClient_Precipitation()
 T CClient_Precipitation::ClientThink()
 T CClient_Precipitation::ComputeEmissionArea(Vector&, Vector2D&)
 T CClient_Precipitation::CreateAshParticle()
 T CClient_Precipitation::CreateRainOrSnowParticle(Vector, Vector)
 T CClient_Precipitation::CreateWaterSplashes()
 T CClient_Precipitation::EmitParticles(float)
 T CClient_Precipitation::GetClientClass()
 T CClient_Precipitation::OnDataChanged(DataUpdateType_t)
 T CClient_Precipitation::Precache()
 T CClient_Precipitation::Render()
 T CClient_Precipitation::RenderParticle(CPrecipitationParticle*, CMeshBuilder&)
 T CClient_Precipitation::Simulate(float)
 T CClient_Precipitation::SimulateRain(CPrecipitationParticle*, float)
 T CClient_Precipitation::YouForgotToImplementOrDeclareClientClass()
 T CClient_Precipitation::~CClient_Precipitation()
 T CCloseCaptionItem::CCloseCaptionItem(wchar_t const*, float, float, float, bool, bool)
 T CCloseCaptionItem::~CCloseCaptionItem()
 T CCollisionEvent::AddTouchEvent(C_BaseEntity*, C_BaseEntity*, int, Vector const&, Vector const&)
 T CCollisionEvent::AdditionalCollisionChecksThisTick(int)
 T CCollisionEvent::DeltaTimeSinceLastFluid(C_BaseEntity*)
 T CCollisionEvent::EndTouch(IPhysicsObject*, IPhysicsObject*, IPhysicsCollisionData*)
 T CCollisionEvent::FluidEndTouch(IPhysicsObject*, IPhysicsFluidController*)
 T CCollisionEvent::FluidStartTouch(IPhysicsObject*, IPhysicsFluidController*)
 T CCollisionEvent::FrameUpdate()
 T CCollisionEvent::Friction(IPhysicsObject*, float, int, int, IPhysicsCollisionData*)
 T CCollisionEvent::ObjectEnterTrigger(IPhysicsObject*, IPhysicsObject*)
 T CCollisionEvent::ObjectLeaveTrigger(IPhysicsObject*, IPhysicsObject*)
 T CCollisionEvent::ObjectSleep(IPhysicsObject*)
 T CCollisionEvent::ObjectWake(IPhysicsObject*)
 T CCollisionEvent::PostCollision(vcollisionevent_t*)
 T CCollisionEvent::PostSimulationFrame()
 T CCollisionEvent::PreCollision(vcollisionevent_t*)
 T CCollisionEvent::ShouldCollide(IPhysicsObject*, IPhysicsObject*, void*, void*)
 T CCollisionEvent::ShouldFreezeContacts(IPhysicsObject**, int)
 T CCollisionEvent::ShouldFreezeObject(IPhysicsObject*)
 T CCollisionEvent::ShouldSolvePenetration(IPhysicsObject*, IPhysicsObject*, void*, void*, float)
 T CCollisionEvent::StartTouch(IPhysicsObject*, IPhysicsObject*, IPhysicsCollisionData*)
 T CCollisionEvent::UpdateTouchEvents()
 T CCollisionEvent::~CCollisionEvent()
 T CCollisionProperty::CCollisionProperty()
 T CCollisionProperty::CalcDistanceFromPoint(Vector const&) const
 T CCollisionProperty::CalcNearestPoint(Vector const&, Vector*) const
 T CCollisionProperty::CollisionAABBToWorldAABB(Vector const&, Vector const&, Vector*, Vector*) const
 T CCollisionProperty::CollisionToWorldTransform() const
 T CCollisionProperty::ComputeSurroundingBox(Vector*, Vector*)
 T CCollisionProperty::ComputeVPhysicsSurroundingBox(Vector*, Vector*)
 T CCollisionProperty::CreatePartitionHandle()
 T CCollisionProperty::DestroyPartitionHandle()
 T CCollisionProperty::DoesVPhysicsInvalidateSurroundingBox() const
 T CCollisionProperty::GetCollisionAngles() const
 T CCollisionProperty::GetCollisionGroup() const
 T CCollisionProperty::GetCollisionModel()
 T CCollisionProperty::GetCollisionModelIndex()
 T CCollisionProperty::GetCollisionOrigin() const
 T CCollisionProperty::GetEntityHandle()
 T CCollisionProperty::GetIClientUnknown()
 T CCollisionProperty::GetPredDescMap()
 T CCollisionProperty::GetRootParentToWorldTransform() const
 T CCollisionProperty::GetSolid() const
 T CCollisionProperty::GetSolidFlags() const
 T CCollisionProperty::Init(C_BaseEntity*)
 T CCollisionProperty::IsPointInBounds(Vector const&) const
 T CCollisionProperty::MarkPartitionHandleDirty()
 T CCollisionProperty::MarkSurroundingBoundsDirty()
 T CCollisionProperty::NetworkStateChanged()
 T CCollisionProperty::NetworkStateChanged(void*)
 T CCollisionProperty::NormalizedToWorldSpace(Vector const&, Vector*) const
 T CCollisionProperty::OBBMaxs() const
 T CCollisionProperty::OBBMaxsPreScaled() const
 T CCollisionProperty::OBBMins() const
 T CCollisionProperty::OBBMinsPreScaled() const
 T CCollisionProperty::RandomPointInBounds(Vector const&, Vector const&, Vector*) const
 T CCollisionProperty::RefreshScaledCollisionBounds()
 T CCollisionProperty::SetCollisionBounds(Vector const&, Vector const&)
 T CCollisionProperty::SetSolid(SolidType_t)
 T CCollisionProperty::SetSolidFlags(int)
 T CCollisionProperty::SetSurroundingBoundsType(SurroundingBoundsType_t, Vector const*, Vector const*)
 T CCollisionProperty::ShouldTouchTrigger(int) const
 T CCollisionProperty::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T CCollisionProperty::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)
 T CCollisionProperty::UpdatePartition()
 T CCollisionProperty::UseTriggerBounds(bool, float)
 T CCollisionProperty::WorldSpaceCenter() const
 T CCollisionProperty::WorldSpaceSurroundingBounds(Vector*, Vector*)
 T CCollisionProperty::WorldSpaceTriggerBounds(Vector*, Vector*) const
 T CCollisionProperty::~CCollisionProperty()
 T CColorCorrectionMgr::AddColorCorrection(char const*, char const*)
 T CColorCorrectionMgr::HasNonZeroColorCorrectionWeights() const
 T CColorCorrectionMgr::Name()
 T CColorCorrectionMgr::RemoveColorCorrection(ClientCCHandle_t__*)
 T CColorCorrectionMgr::ResetColorCorrectionWeights()
 T CColorCorrectionMgr::SetColorCorrectionWeight(ClientCCHandle_t__*, float)
 T CColorCorrectionMgr::~CColorCorrectionMgr()
 T CColorProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CColorProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CColorProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CColorVisualizerPanel::CColorVisualizerPanel(vgui::Panel*, char const*, Color const&)
 T CColorVisualizerPanel::GetAnimMap()
 T CColorVisualizerPanel::GetKBMap()
 T CColorVisualizerPanel::GetMessageMap()
 T CColorVisualizerPanel::GetPanelClassName()
 T CColorVisualizerPanel::Paint()
 T CColorVisualizerPanel::~CColorVisualizerPanel()
 T CCombatCharVisCache::FrameUpdatePreEntityThink()
 T CCombatCharVisCache::LevelShutdownPreEntity()
 T CCombatCharVisCache::~CCombatCharVisCache()
 T CCommand::CCommand()
 T CCommentaryModelPanel::CCommentaryModelPanel(vgui::Panel*, char const*)
 T CCommentaryModelPanel::GetAnimMap()
 T CCommentaryModelPanel::GetKBMap()
 T CCommentaryModelPanel::GetMessageMap()
 T CCommentaryModelPanel::GetPanelClassName()
 T CCommentaryModelPanel::~CCommentaryModelPanel()
 T CCommentaryModelViewer::ApplySchemeSettings(vgui::IScheme*)
 T CCommentaryModelViewer::CCommentaryModelViewer(IViewPort*)
 T CCommentaryModelViewer::GetAnimMap()
 T CCommentaryModelViewer::GetKBMap()
 T CCommentaryModelViewer::GetMessageMap()
 T CCommentaryModelViewer::GetName()
 T CCommentaryModelViewer::GetPanelClassName()
 T CCommentaryModelViewer::GetVPanel()
 T CCommentaryModelViewer::HandleMovementInput()
 T CCommentaryModelViewer::HasInputElements()
 T CCommentaryModelViewer::IsVisible()
 T CCommentaryModelViewer::NeedsUpdate()
 T CCommentaryModelViewer::OnCommand(char const*)
 T CCommentaryModelViewer::OnKeyCodePressed(ButtonCode_t)
 T CCommentaryModelViewer::OnThink()
 T CCommentaryModelViewer::PerformLayout()
 T CCommentaryModelViewer::Reset()
 T CCommentaryModelViewer::SetData(KeyValues*)
 T CCommentaryModelViewer::SetParent(unsigned int)
 T CCommentaryModelViewer::ShowPanel(bool)
 T CCommentaryModelViewer::Update()
 T CCommentaryModelViewer::~CCommentaryModelViewer()
 T CConCommandMemberAccessor<CBasePresence>::CommandCallback(CCommand const&)
 T CConCommandMemberAccessor<CBasePresence>::CommandCompletionCallback(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T CConCommandMemberAccessor<CBasePresence>::~CConCommandMemberAccessor()
 T CConveyorMaterialProxy::GetMaterial()
 T CConveyorMaterialProxy::Init(IMaterial*, KeyValues*)
 T CConveyorMaterialProxy::OnBind(void*)
 T CConveyorMaterialProxy::Release()
 T CConveyorMaterialProxy::~CConveyorMaterialProxy()
 T CCopyRecipientFilter::AddRecipient(C_BasePlayer*)
 T CCopyRecipientFilter::GetRecipientCount() const
 T CCopyRecipientFilter::GetRecipientIndex(int) const
 T CCopyRecipientFilter::Init(IRecipientFilter*)
 T CCopyRecipientFilter::IsInitMessage() const
 T CCopyRecipientFilter::IsReliable() const
 T CCopyRecipientFilter::~CCopyRecipientFilter()
 T CCopyableUtlVector<ModelPoseDebugInfo::InfoText, CUtlMemory<ModelPoseDebugInfo::InfoText, int> >::~CCopyableUtlVector()
 T CCurveData::Add(float, float, bool)
 T CCurveData::Clear()
 T CCurveData::GetBoundedSample(ICurveDataAccessor*, int, bool&)
 T CCurveData::GetCount()
 T CCurveData::GetIntensity(ICurveDataAccessor*, float)
 T CCurveData::Parse(ISceneTokenProcessor*, ICurveDataAccessor*)
 T CCurveData::Resort(ICurveDataAccessor*)
 T CCurveData::RestoreFromBuffer(CUtlBuffer&, IChoreoStringPool*)
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::DestroyResourceStorage(void*)
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::GetRealSize(void*)
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::Lock()
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::TryLock()
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::Unlock()
 T CDataManager<CBoneCache, bonecacheparams_t, CBoneCache*, CThreadFastMutex>::~CDataManager()
 T CDataManagerBase::BreakLock(memhandle_t__*)
 T CDataManagerBase::CDataManagerBase(unsigned int)
 T CDataManagerBase::CreateHandle(bool)
 T CDataManagerBase::DestroyResource(memhandle_t__*)
 T CDataManagerBase::EnsureCapacity(unsigned int)
 T CDataManagerBase::FlushAll()
 T CDataManagerBase::GetForFreeByIndex(unsigned short)
 T CDataManagerBase::GetResource_NoLock(memhandle_t__*)
 T CDataManagerBase::Lock()
 T CDataManagerBase::StoreResourceInHandle(unsigned short, void*, unsigned int)
 T CDataManagerBase::TouchByIndex(unsigned short)
 T CDataManagerBase::TryLock()
 T CDataManagerBase::Unlock()
 T CDataManagerBase::~CDataManagerBase()
 T CDataObjectAccessSystem::Init()
 T CDataObjectAccessSystem::Shutdown()
 T CDataObjectAccessSystem::~CDataObjectAccessSystem()
 T CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder()
 T CDebugOverlay::ApplySchemeSettings(vgui::IScheme*)
 T CDebugOverlay::CDebugOverlay(unsigned int)
 T CDebugOverlay::OnTick()
 T CDebugOverlay::Paint()
 T CDebugOverlay::ShouldDraw()
 T CDebugOverlay::~CDebugOverlay()
 T CDebugOverlayPanel::Create(unsigned int)
 T CDebugOverlayPanel::Destroy()
 T CDebugViewRender::Draw2DDebuggingInfo(CViewSetup const&)
 T CDebugViewRender::Draw3DDebuggingInfo(CViewSetup const&)
 T CDebugViewRender::GenerateOverdrawForTesting()
 T CDecalEmitterSystem::CDecalEmitterSystem(char const*)
 T CDecalEmitterSystem::Clear()
 T CDecalEmitterSystem::GetDecalIndexForName(char const*)
 T CDecalEmitterSystem::GetDecalNameForIndex(int)
 T CDecalEmitterSystem::Init()
 T CDecalEmitterSystem::LevelInitPreEntity()
 T CDecalEmitterSystem::LoadDecalsFromScript(char const*)
 T CDecalEmitterSystem::Shutdown()
 T CDecalEmitterSystem::TranslateDecalForGameMaterial(char const*, unsigned char)
 T CDecalEmitterSystem::~CDecalEmitterSystem()
 T CDefOps<AvatarImagePair_t>::LessFunc(AvatarImagePair_t const&, AvatarImagePair_t const&)
 T CDefOps<CChoreoActor*>::LessFunc(CChoreoActor* const&, CChoreoActor* const&)
 T CDefOps<CDetailModel*>::LessFunc(CDetailModel* const&, CDetailModel* const&)
 T CDefOps<CPhysCollide const*>::LessFunc(CPhysCollide const* const&, CPhysCollide const* const&)
 T CDefOps<CSteamID>::LessFunc(CSteamID const&, CSteamID const&)
 T CDefOps<CStudioHdr const*>::LessFunc(CStudioHdr const* const&, CStudioHdr const* const&)
 T CDefOps<C_BaseEntity*>::LessFunc(C_BaseEntity* const&, C_BaseEntity* const&)
 T CDefOps<IPhysicsObject*>::LessFunc(IPhysicsObject* const&, IPhysicsObject* const&)
 T CDefOps<char const*>::LessFunc(char const* const&, char const* const&)
 T CDefOps<int>::LessFunc(int const&, int const&)
 T CDefOps<void*>::LessFunc(void* const&, void* const&)
 T CDefSaveRestoreOps::Parse(SaveRestoreFieldInfo_t const&, char const*)
 T CDefaultAccessor::RegisterConCommandBase(ConCommandBase*)
 T CDefaultClientRenderable::ComputeFxBlend()
 T CDefaultClientRenderable::CreateModelInstance()
 T CDefaultClientRenderable::DoAnimationEvents()
 T CDefaultClientRenderable::DrawModel(int)
 T CDefaultClientRenderable::FirstShadowChild()
 T CDefaultClientRenderable::GetAttachment(int, Vector&, QAngle&)
 T CDefaultClientRenderable::GetAttachment(int, matrix3x4_t&)
 T CDefaultClientRenderable::GetBaseEntity()
 T CDefaultClientRenderable::GetBody()
 T CDefaultClientRenderable::GetClientNetworkable()
 T CDefaultClientRenderable::GetClientRenderable()
 T CDefaultClientRenderable::GetClientThinkable()
 T CDefaultClientRenderable::GetCollideable()
 T CDefaultClientRenderable::GetColorModulation(float*)
 T CDefaultClientRenderable::GetFxBlend()
 T CDefaultClientRenderable::GetIClientEntity()
 T CDefaultClientRenderable::GetIClientUnknown()
 T CDefaultClientRenderable::GetModel() const
 T CDefaultClientRenderable::GetModelInstance()
 T CDefaultClientRenderable::GetPVSNotifyInterface()
 T CDefaultClientRenderable::GetRefEHandle() const
 T CDefaultClientRenderable::GetRenderBoundsWorldspace(Vector&, Vector&)
 T CDefaultClientRenderable::GetRenderClipPlane()
 T CDefaultClientRenderable::GetShadowCastDirection(Vector*, ShadowType_t) const
 T CDefaultClientRenderable::GetShadowCastDistance(float*, ShadowType_t) const
 T CDefaultClientRenderable::GetShadowHandle() const
 T CDefaultClientRenderable::GetShadowParent()
 T CDefaultClientRenderable::GetShadowRenderBounds(Vector&, Vector&, ShadowType_t)
 T CDefaultClientRenderable::GetSkin()
 T CDefaultClientRenderable::IgnoresZBuffer() const
 T CDefaultClientRenderable::IsShadowDirty()
 T CDefaultClientRenderable::IsTwoPass()
 T CDefaultClientRenderable::LODTest()
 T CDefaultClientRenderable::LookupAttachment(char const*)
 T CDefaultClientRenderable::MarkShadowDirty(bool)
 T CDefaultClientRenderable::NextShadowPeer()
 T CDefaultClientRenderable::OnThreadedDrawSetup()
 T CDefaultClientRenderable::RecordToolMessage()
 T CDefaultClientRenderable::RenderHandle()
 T CDefaultClientRenderable::SetRefEHandle(CBaseHandle const&)
 T CDefaultClientRenderable::SetupBones(matrix3x4_t*, int, int, float)
 T CDefaultClientRenderable::SetupWeights(matrix3x4_t const*, int, float*, float*)
 T CDefaultClientRenderable::ShadowCastType()
 T CDefaultClientRenderable::ShouldReceiveProjectedTextures(int)
 T CDefaultClientRenderable::UsesFlexDelayedWeights()
 T CDefaultClientRenderable::UsesFullFrameBufferTexture()
 T CDefaultClientRenderable::UsesPowerOfTwoFrameBufferTexture()
 T CDefaultDataCacheClient::GetItemName(unsigned int, void const*, char*, unsigned int)
 T CDefaultParticleSystemQuery::GetLightingAtPoint(Vector const&, Color&)
 T CDefaultParticleSystemQuery::GetPixelVisibility(int*, Vector const&, float)
 T CDefaultParticleSystemQuery::GetRandomPointsOnControllingObjectHitBox(CParticleCollection*, int, int, float, int, Vector*, Vector, Vector*, int*)
 T CDefaultParticleSystemQuery::TraceLine(Vector const&, Vector const&, unsigned int, IHandleEntity const*, int, CBaseTrace*)
 T CDescribeData::Describe(char const*, ...)
 T CDescribeData::DescribeFields_R(int, datamap_t*, typedescription_t*, int)
 T CDetailModel::ComputeAngles()
 T CDetailModel::ComputeFxBlend()
 T CDetailModel::CreateModelInstance()
 T CDetailModel::DoAnimationEvents()
 T CDetailModel::DrawModel(int)
 T CDetailModel::DrawTypeSprite(CMeshBuilder&)
 T CDetailModel::FirstShadowChild()
 T CDetailModel::GetAttachment(int, Vector&, QAngle&)
 T CDetailModel::GetAttachment(int, matrix3x4_t&)
 T CDetailModel::GetBaseEntity()
 T CDetailModel::GetBody()
 T CDetailModel::GetClientNetworkable()
 T CDetailModel::GetClientRenderable()
 T CDetailModel::GetClientThinkable()
 T CDetailModel::GetCollideable()
 T CDetailModel::GetColorModulation(float*)
 T CDetailModel::GetFxBlend()
 T CDetailModel::GetIClientEntity()
 T CDetailModel::GetIClientUnknown()
 T CDetailModel::GetModel() const
 T CDetailModel::GetModelInstance()
 T CDetailModel::GetPVSNotifyInterface()
 T CDetailModel::GetRefEHandle() const
 T CDetailModel::GetRenderAngles()
 T CDetailModel::GetRenderBounds(Vector&, Vector&)
 T CDetailModel::GetRenderBoundsWorldspace(Vector&, Vector&)
 T CDetailModel::GetRenderClipPlane()
 T CDetailModel::GetRenderOrigin()
 T CDetailModel::GetShadowCastDirection(Vector*, ShadowType_t) const
 T CDetailModel::GetShadowCastDistance(float*, ShadowType_t) const
 T CDetailModel::GetShadowHandle() const
 T CDetailModel::GetShadowParent()
 T CDetailModel::GetShadowRenderBounds(Vector&, Vector&, ShadowType_t)
 T CDetailModel::GetSkin()
 T CDetailModel::IgnoresZBuffer() const
 T CDetailModel::Init(int, Vector const&, QAngle const&, model_t*, ColorRGBExp32, int, unsigned char, int)
 T CDetailModel::InitSprite(int, bool, Vector const&, QAngle const&, unsigned short, ColorRGBExp32, int, unsigned char, int, float, unsigned char, unsigned char, unsigned char, unsigned char)
 T CDetailModel::IsShadowDirty()
 T CDetailModel::IsTransparent()
 T CDetailModel::IsTwoPass()
 T CDetailModel::LODTest()
 T CDetailModel::LookupAttachment(char const*)
 T CDetailModel::MarkShadowDirty(bool)
 T CDetailModel::NextShadowPeer()
 T CDetailModel::OnThreadedDrawSetup()
 T CDetailModel::RecordToolMessage()
 T CDetailModel::RenderHandle()
 T CDetailModel::RenderableToWorldTransform()
 T CDetailModel::SetRefEHandle(CBaseHandle const&)
 T CDetailModel::SetupBones(matrix3x4_t*, int, int, float)
 T CDetailModel::SetupWeights(matrix3x4_t const*, int, float*, float*)
 T CDetailModel::ShadowCastType()
 T CDetailModel::ShouldDraw()
 T CDetailModel::ShouldReceiveProjectedTextures(int)
 T CDetailModel::UsesFlexDelayedWeights()
 T CDetailModel::UsesFullFrameBufferTexture()
 T CDetailModel::UsesPowerOfTwoFrameBufferTexture()
 T CDetailModel::~CDetailModel()
 T CDetailObjectSystem::BeginTranslucentDetailRendering()
 T CDetailObjectSystem::BuildDetailObjectRenderLists(Vector const&)
 T CDetailObjectSystem::BuildOutSortedSprites(CFastDetailLeafSpriteList*, Vector const&, Vector const&, Vector const&, Vector const&)
 T CDetailObjectSystem::CDetailObjectSystem()
 T CDetailObjectSystem::CountFastSpritesInLeafList(int, unsigned short const*, int*) const
 T CDetailObjectSystem::CountSpritesInLeafList(int, unsigned short*) const
 T CDetailObjectSystem::EnumerateLeaf(int, int)
 T CDetailObjectSystem::GetDetailModel(int)
 T CDetailObjectSystem::GetSpriteMiddleBottomPosition(DetailObjectLump_t const&) const
 T CDetailObjectSystem::Init()
 T CDetailObjectSystem::IsPerFrame()
 T CDetailObjectSystem::LevelInitPostEntity()
 T CDetailObjectSystem::LevelInitPreEntity()
 T CDetailObjectSystem::LevelShutdownPostEntity()
 T CDetailObjectSystem::LevelShutdownPreEntity()
 T CDetailObjectSystem::Name()
 T CDetailObjectSystem::OnRestore()
 T CDetailObjectSystem::OnSave()
 T CDetailObjectSystem::PostInit()
 T CDetailObjectSystem::RenderFastSprites(Vector const&, Vector const&, Vector const&, Vector const&, int, unsigned short const*)
 T CDetailObjectSystem::RenderFastTranslucentDetailObjectsInLeaf(Vector const&, Vector const&, Vector const&, Vector const&, int, Vector const*)
 T CDetailObjectSystem::RenderOpaqueDetailObjects(int, unsigned short*)
 T CDetailObjectSystem::RenderTranslucentDetailObjects(Vector const&, Vector const&, Vector const&, Vector const&, int, unsigned short*)
 T CDetailObjectSystem::RenderTranslucentDetailObjectsInLeaf(Vector const&, Vector const&, Vector const&, Vector const&, int, Vector const*)
 T CDetailObjectSystem::SafeRemoveIfDesired()
 T CDetailObjectSystem::ScanForCounts(CUtlBuffer&, int*, int*, int*, int*) const
 T CDetailObjectSystem::Shutdown()
 T CDetailObjectSystem::SortSpritesBackToFront(int, Vector const&, Vector const&, CDetailObjectSystem::SortInfo_t*)
 T CDetailObjectSystem::UnserializeDetailSprites(CUtlBuffer&)
 T CDetailObjectSystem::UnserializeFastSprite(FastSpriteX4_t*, int, DetailObjectLump_t const&, bool, Vector const&)
 T CDetailObjectSystem::UnserializeModelDict(CUtlBuffer&)
 T CDetailObjectSystem::UnserializeModelLighting(CUtlBuffer&)
 T CDetailObjectSystem::UnserializeModels(CUtlBuffer&)
 T CDetailObjectSystem::~CDetailObjectSystem()
 T CDirtySpatialPartitionEntityList::CDirtySpatialPartitionEntityList(char const*)
 T CDirtySpatialPartitionEntityList::Init()
 T CDirtySpatialPartitionEntityList::LevelShutdownPostEntity()
 T CDirtySpatialPartitionEntityList::OnPostQuery(int)
 T CDirtySpatialPartitionEntityList::OnPreQuery(int)
 T CDirtySpatialPartitionEntityList::OnPreQuery_V1()
 T CDirtySpatialPartitionEntityList::Shutdown()
 T CDirtySpatialPartitionEntityList::~CDirtySpatialPartitionEntityList()
 T CDisableRangeChecks::CDisableRangeChecks()
 T CDisableRangeChecks::~CDisableRangeChecks()
 T CDivideProxy::Init(IMaterial*, KeyValues*)
 T CDivideProxy::OnBind(void*)
 T CDivideProxy::~CDivideProxy()
 T CDllDemandLoader::CDllDemandLoader(char const*)
 T CDllDemandLoader::~CDllDemandLoader()
 T CDmxAttribute::AllocateDataMemory(DmAttributeType_t)
 T CDmxAttribute::CDmxAttribute(char const*)
 T CDmxAttribute::FreeDataMemory()
 T CDmxAttribute::GetName() const
 T CDmxAttribute::SetValue(char const*)
 T CDmxAttribute::Unserialize(DmAttributeType_t, CUtlBuffer&)
 T CDmxAttribute::UnserializeElement(DmAttributeType_t, CUtlBuffer&)
 T CDmxAttribute::~CDmxAttribute()
 T CDmxElement::AddAttribute(char const*)
 T CDmxElement::AddElementsToDelete(CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> >&)
 T CDmxElement::CDmxElement(char const*)
 T CDmxElement::GetAttribute(char const*)
 T CDmxElement::GetAttribute(char const*) const
 T CDmxElement::GetId() const
 T CDmxElement::GetName() const
 T CDmxElement::GetTypeString() const
 T CDmxElement::HasAttribute(char const*) const
 T CDmxElement::LockForChanges(bool)
 T CDmxElement::RemoveAllElementsRecursive()
 T CDmxElement::Resort() const
 T CDmxElement::SetId(UniqueId_t const&)
 T CDmxElement::UnpackIntoStructure(void*, unsigned long, DmxElementUnpackStructure_t const*) const
 T CDmxElement::~CDmxElement()
 T CDmxElementDictionary::Clear()
 T CDmxElementDictionary::HookUpElementArrayAttributes()
 T CDmxElementDictionary::HookUpElementReferences()
 T CDmxKeyValues2ErrorStack::ReportError(char const*, ...)
 T CDmxSerializer::Unserialize(CUtlBuffer&, int, CDmxElement**)
 T CDmxSerializer::UnserializeAttributes(CUtlBuffer&, CDmxElement*, CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> >&, int, int*, char*)
 T CDmxSerializer::UnserializeElementArrayAttribute(CUtlBuffer&, CDmxAttribute*, CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> >&)
 T CDmxSerializer::UnserializeElementIndex(CUtlBuffer&, CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> >&)
 T CDmxSerializerKeyValues2::CreateDmxElement(char const*)
 T CDmxSerializerKeyValues2::EatWhitespacesAndComments(CUtlBuffer&)
 T CDmxSerializerKeyValues2::ReadToken(CUtlBuffer&, CUtlBuffer&)
 T CDmxSerializerKeyValues2::Unserialize(char const*, CUtlBuffer&, CDmxElement**)
 T CDmxSerializerKeyValues2::UnserializeArrayAttribute(CUtlBuffer&, int, char const*, DmAttributeType_t)
 T CDmxSerializerKeyValues2::UnserializeAttribute(CUtlBuffer&, int, char const*, DmAttributeType_t)
 T CDmxSerializerKeyValues2::UnserializeAttributeValueFromToken(CDmxAttribute*, DmAttributeType_t, CUtlBuffer&)
 T CDmxSerializerKeyValues2::UnserializeElement(CUtlBuffer&, char const*, int*)
 T CDmxSerializerKeyValues2::UnserializeElement(CUtlBuffer&, int*)
 T CDmxSerializerKeyValues2::UnserializeElementArrayAttribute(CUtlBuffer&, int, char const*)
 T CDmxSerializerKeyValues2::UnserializeElementAttribute(CUtlBuffer&, int, char const*, char const*)
 T CDragDropHelperPanel::AddPanel(vgui::Panel*)
 T CDragDropHelperPanel::CDragDropHelperPanel()
 T CDragDropHelperPanel::GetAnimMap()
 T CDragDropHelperPanel::GetKBMap()
 T CDragDropHelperPanel::GetMessageMap()
 T CDragDropHelperPanel::GetPanelClassName()
 T CDragDropHelperPanel::IsWithinTraverse(int, int, bool)
 T CDragDropHelperPanel::PostChildPaint()
 T CDragDropHelperPanel::~CDragDropHelperPanel()
 T CDummyMaterialProxy::GetMaterial()
 T CDummyMaterialProxy::Init(IMaterial*, KeyValues*)
 T CDummyMaterialProxy::OnBind(void*)
 T CDummyMaterialProxy::Release()
 T CDummyMaterialProxy::~CDummyMaterialProxy()
 T CDustEffect::RenderParticles(CParticleRenderIterator*)
 T CDustEffect::SimulateParticles(CParticleSimulateIterator*)
 T CDustEffect::~CDustEffect()
 T CDustFollower::UpdateAlpha(SimpleParticle const*)
 T CDustFollower::UpdateRoll(SimpleParticle*, float)
 T CDustFollower::UpdateVelocity(SimpleParticle*, float)
 T CDustFollower::~CDustFollower()
 T CDustParticle::UpdateAlpha(SimpleParticle const*)
 T CDustParticle::UpdateRoll(SimpleParticle*, float)
 T CDustParticle::UpdateVelocity(SimpleParticle*, float)
 T CDustParticle::~CDustParticle()
 T CEZParticleInit::LevelInitPreEntity()
 T CEZParticleInit::LevelShutdownPreEntity()
 T CEZParticleInit::~CEZParticleInit()
 T CEffectData::GetEntity() const
 T CEffectData::GetRenderable() const
 T CEffectData::entindex() const
 T CEffectsClient::Beam(Vector const&, Vector const&, int, int, unsigned char, unsigned char, float, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
 T CEffectsClient::Dust(Vector const&, Vector const&, float, float)
 T CEffectsClient::EnergySplash(Vector const&, Vector const&, bool)
 T CEffectsClient::IsServer()
 T CEffectsClient::MetalSparks(Vector const&, Vector const&)
 T CEffectsClient::MuzzleFlash(Vector const&, QAngle const&, float, int)
 T CEffectsClient::Ricochet(Vector const&, Vector const&)
 T CEffectsClient::Smoke(Vector const&, int, float, float)
 T CEffectsClient::Sparks(Vector const&, int, int, Vector const*)
 T CEffectsClient::SuppressEffectsSounds(bool)
 T CEffectsClient::Time()
 T CEffectsClient::~CEffectsClient()
 T CEffectsList::AddEffect(CClientSideEffect*)
 T CEffectsList::DrawEffects(double)
 T CEffectsList::Flush()
 T CEffectsList::~CEffectsList()
 T CEmberEffect::Create(char const*)
 T CEmberEffect::UpdateColor(SimpleParticle const*)
 T CEmberEffect::UpdateVelocity(SimpleParticle*, float)
 T CEmberEffect::~CEmberEffect()
 T CEmberEmitter::UpdateColor(SimpleParticle const*)
 T CEmberEmitter::UpdateVelocity(SimpleParticle*, float)
 T CEmberEmitter::~CEmberEmitter()
 T CEmptyConVar::GetName() const
 T CEmptyConVar::IsFlagSet(int) const
 T CEmptyConVar::SetValue(char const*)
 T CEmptyConVar::SetValue(float)
 T CEmptyConVar::SetValue(int)
 T CEmptyConVar::~CEmptyConVar()
 T CEmptyProxy::GetMaterial()
 T CEmptyProxy::Init(IMaterial*, KeyValues*)
 T CEmptyProxy::OnBind(void*)
 T CEmptyProxy::Release()
 T CEmptyProxy::~CEmptyProxy()
 T CEnginePostMaterialProxy::GetMaterial()
 T CEnginePostMaterialProxy::Init(IMaterial*, KeyValues*)
 T CEnginePostMaterialProxy::OnBind(C_BaseEntity*)
 T CEnginePostMaterialProxy::SetupEnginePostMaterial(Vector4D const&, Vector4D const&, Vector2D const&, bool, bool, bool, float)
 T CEnginePostMaterialProxy::~CEnginePostMaterialProxy()
 T CEngineSprite::GetMaterial(RenderMode_t, int)
 T CEngineSprite::GetOrientation()
 T CEngineSprite::GetTexCoordRange(float*, float*, float*, float*)
 T CEngineSprite::Init(char const*)
 T CEngineSprite::Shutdown()
 T CEngineSprite::UnloadMaterial()
 T CEntityDataInstantiator<CWatcherList>::CompareFunc(CEntityDataInstantiator<CWatcherList>::HashEntry const&, CEntityDataInstantiator<CWatcherList>::HashEntry const&)
 T CEntityDataInstantiator<CWatcherList>::CreateDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<CWatcherList>::DestroyDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<CWatcherList>::GetDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<CWatcherList>::KeyFunc(CEntityDataInstantiator<CWatcherList>::HashEntry const&)
 T CEntityDataInstantiator<CWatcherList>::~CEntityDataInstantiator()
 T CEntityDataInstantiator<ModelScale>::CompareFunc(CEntityDataInstantiator<ModelScale>::HashEntry const&, CEntityDataInstantiator<ModelScale>::HashEntry const&)
 T CEntityDataInstantiator<ModelScale>::CreateDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<ModelScale>::DestroyDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<ModelScale>::GetDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<ModelScale>::KeyFunc(CEntityDataInstantiator<ModelScale>::HashEntry const&)
 T CEntityDataInstantiator<ModelScale>::~CEntityDataInstantiator()
 T CEntityDataInstantiator<StepSimulationData>::CompareFunc(CEntityDataInstantiator<StepSimulationData>::HashEntry const&, CEntityDataInstantiator<StepSimulationData>::HashEntry const&)
 T CEntityDataInstantiator<StepSimulationData>::CreateDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<StepSimulationData>::DestroyDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<StepSimulationData>::GetDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<StepSimulationData>::KeyFunc(CEntityDataInstantiator<StepSimulationData>::HashEntry const&)
 T CEntityDataInstantiator<StepSimulationData>::~CEntityDataInstantiator()
 T CEntityDataInstantiator<groundlink_t>::CompareFunc(CEntityDataInstantiator<groundlink_t>::HashEntry const&, CEntityDataInstantiator<groundlink_t>::HashEntry const&)
 T CEntityDataInstantiator<groundlink_t>::CreateDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<groundlink_t>::DestroyDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<groundlink_t>::GetDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<groundlink_t>::KeyFunc(CEntityDataInstantiator<groundlink_t>::HashEntry const&)
 T CEntityDataInstantiator<groundlink_t>::~CEntityDataInstantiator()
 T CEntityDataInstantiator<physicspushlist_t>::CompareFunc(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&, CEntityDataInstantiator<physicspushlist_t>::HashEntry const&)
 T CEntityDataInstantiator<physicspushlist_t>::CreateDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<physicspushlist_t>::DestroyDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<physicspushlist_t>::GetDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<physicspushlist_t>::KeyFunc(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&)
 T CEntityDataInstantiator<physicspushlist_t>::~CEntityDataInstantiator()
 T CEntityDataInstantiator<touchlink_t>::CompareFunc(CEntityDataInstantiator<touchlink_t>::HashEntry const&, CEntityDataInstantiator<touchlink_t>::HashEntry const&)
 T CEntityDataInstantiator<touchlink_t>::CreateDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<touchlink_t>::DestroyDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<touchlink_t>::GetDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<touchlink_t>::KeyFunc(CEntityDataInstantiator<touchlink_t>::HashEntry const&)
 T CEntityDataInstantiator<touchlink_t>::~CEntityDataInstantiator()
 T CEntityDataInstantiator<vphysicsupdateai_t>::CompareFunc(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&, CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&)
 T CEntityDataInstantiator<vphysicsupdateai_t>::CreateDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<vphysicsupdateai_t>::DestroyDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<vphysicsupdateai_t>::GetDataObject(C_BaseEntity const*)
 T CEntityDataInstantiator<vphysicsupdateai_t>::KeyFunc(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&)
 T CEntityDataInstantiator<vphysicsupdateai_t>::~CEntityDataInstantiator()
 T CEntityMapData::CurrentBufferPosition()
 T CEntityMapData::ExtractValue(char const*, char*)
 T CEntityMapData::GetFirstKey(char*, char*)
 T CEntityMapData::GetNextKey(char*, char*)
 T CEntityMaterialProxy::OnBind(void*)
 T CEntityMaterialProxy::Release()
 T CEntityOriginAlyxMaterialProxy::GetMaterial()
 T CEntityOriginAlyxMaterialProxy::Init(IMaterial*, KeyValues*)
 T CEntityOriginAlyxMaterialProxy::OnBind(C_BaseEntity*)
 T CEntityOriginAlyxMaterialProxy::~CEntityOriginAlyxMaterialProxy()
 T CEntityOriginMaterialProxy::GetMaterial()
 T CEntityOriginMaterialProxy::Init(IMaterial*, KeyValues*)
 T CEntityOriginMaterialProxy::OnBind(C_BaseEntity*)
 T CEntityOriginMaterialProxy::~CEntityOriginMaterialProxy()
 T CEntityRandomProxy::Init(IMaterial*, KeyValues*)
 T CEntityRandomProxy::OnBind(void*)
 T CEntityRandomProxy::~CEntityRandomProxy()
 T CEntitySaveRestoreBlockHandler::DoRestoreEntity(C_BaseEntity*, IRestore*)
 T CEntitySaveRestoreBlockHandler::GetBlockName()
 T CEntitySaveRestoreBlockHandler::PostRestore()
 T CEntitySaveRestoreBlockHandler::PostSave()
 T CEntitySaveRestoreBlockHandler::PreRestore()
 T CEntitySaveRestoreBlockHandler::PreSave(CSaveRestoreData*)
 T CEntitySaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CEntitySaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CEntitySaveRestoreBlockHandler::Save(ISave*)
 T CEntitySaveRestoreBlockHandler::SaveInitEntities(CSaveRestoreData*)
 T CEntitySaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CEntitySaveUtils::AddLevelTransitionSaveDependency(C_BaseEntity*, C_BaseEntity*)
 T CEntitySaveUtils::GetEntityDependencies(C_BaseEntity*, int, C_BaseEntity**)
 T CEntitySaveUtils::GetEntityDependencyCount(C_BaseEntity*)
 T CEntitySpeedProxy::OnBind(void*)
 T CEntitySpeedProxy::~CEntitySpeedProxy()
 T CEntitySphereQuery::CEntitySphereQuery(Vector const&, float, int, int)
 T CEntitySphereQuery::GetCurrentEntity()
 T CEnvHeadcrabCanisterShared::CEnvHeadcrabCanisterShared()
 T CEnvHeadcrabCanisterShared::GetPositionAtTime(float, Vector&, QAngle&)
 T CEnvHeadcrabCanisterShared::NetworkStateChanged()
 T CEnvHeadcrabCanisterShared::NetworkStateChanged(void*)
 T CEnvWindShared::CEnvWindShared()
 T CEnvWindShared::Init(int, int, float, int, float)
 T CEnvWindShared::NetworkStateChanged()
 T CEnvWindShared::NetworkStateChanged(void*)
 T CEnvWindShared::WindThink(float)
 T CEnvWindShared::~CEnvWindShared()
 T CEp1IntroVortRefractMaterialProxy::GetMaterial()
 T CEp1IntroVortRefractMaterialProxy::Init(IMaterial*, KeyValues*)
 T CEp1IntroVortRefractMaterialProxy::OnBind(C_BaseEntity*)
 T CEp1IntroVortRefractMaterialProxy::~CEp1IntroVortRefractMaterialProxy()
 T CEqualsProxy::OnBind(void*)
 T CEqualsProxy::~CEqualsProxy()
 T CEventAbsoluteTag::CEventAbsoluteTag(CEventAbsoluteTag const&)
 T CEventAbsoluteTag::GetAbsoluteTime()
 T CEventAbsoluteTag::GetPercentage()
 T CEventAbsoluteTag::SetAbsoluteTime(float)
 T CEventRelativeTag::GetStartTime()
 T CExampleEffect::Enable(bool)
 T CExampleEffect::Init()
 T CExampleEffect::IsEnabled()
 T CExampleEffect::Render(int, int, int, int)
 T CExampleEffect::SetParameters(KeyValues*)
 T CExampleEffect::Shutdown()
 T CExampleEffect::~CExampleEffect()
 T CExplosionOverlay::Update()
 T CExplosionOverlay::~CExplosionOverlay()
 T CExplosionParticle::UpdateAlpha(SimpleParticle const*)
 T CExplosionParticle::UpdateColor(SimpleParticle const*)
 T CExplosionParticle::UpdateRoll(SimpleParticle*, float)
 T CExplosionParticle::UpdateVelocity(SimpleParticle*, float)
 T CExplosionParticle::~CExplosionParticle()
 T CExponentialProxy::Init(IMaterial*, KeyValues*)
 T CExponentialProxy::OnBind(void*)
 T CExponentialProxy::~CExponentialProxy()
 T CFPS::Create(unsigned int)
 T CFPS::Destroy()
 T CFPSPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CFPSPanel::ApplySchemeSettings(vgui::IScheme*)
 T CFPSPanel::CFPSPanel(unsigned int)
 T CFPSPanel::GetAnimMap()
 T CFPSPanel::GetKBMap()
 T CFPSPanel::GetMessageMap()
 T CFPSPanel::GetPanelClassName()
 T CFPSPanel::OnScreenSizeChanged(int, int)
 T CFPSPanel::OnTick()
 T CFPSPanel::Paint()
 T CFPSPanel::ShouldDraw()
 T CFPSPanel::~CFPSPanel()
 T CFXDiscreetLine::CFXDiscreetLine(char const*, Vector const&, Vector const&, float, float, float, float, float, char const*)
 T CFXDiscreetLine::Destroy()
 T CFXDiscreetLine::Draw(double)
 T CFXDiscreetLine::IsActive()
 T CFXDiscreetLine::Update(double)
 T CFXDiscreetLine::~CFXDiscreetLine()
 T CFXLine::CFXLine(char const*, FXLineData_t const&)
 T CFXLine::Destroy()
 T CFXLine::Draw(double)
 T CFXLine::IsActive()
 T CFXLine::Update(double)
 T CFXLine::~CFXLine()
 T CFXQuad::CFXQuad(FXQuadData_t const&)
 T CFXQuad::Destroy()
 T CFXQuad::Draw(double)
 T CFXQuad::IsActive()
 T CFXQuad::Update(double)
 T CFXQuad::~CFXQuad()
 T CFXStaticLine::CFXStaticLine(char const*, Vector const&, Vector const&, float, float, char const*, unsigned int)
 T CFXStaticLine::Destroy()
 T CFXStaticLine::Draw(double)
 T CFXStaticLine::IsActive()
 T CFXStaticLine::Update(double)
 T CFXStaticLine::~CFXStaticLine()
 T CFastDetailLeafSpriteList::~CFastDetailLeafSpriteList()
 T CFireParticle::Create(char const*)
 T CFireParticle::UpdateColor(SimpleParticle const*)
 T CFireParticle::~CFireParticle()
 T CFireSmokeEffect::Create(char const*)
 T CFireSmokeEffect::UpdateAlpha(SimpleParticle const*)
 T CFireSmokeEffect::UpdateVelocity(SimpleParticle*, float)
 T CFireSmokeEffect::~CFireSmokeEffect()
 T CFlaggedEntitiesEnum::EnumElement(IHandleEntity*)
 T CFlashlightEffect::CFlashlightEffect(int)
 T CFlashlightEffect::LightOffNew()
 T CFlashlightEffect::TurnOn()
 T CFlashlightEffect::UpdateLight(Vector const&, Vector const&, Vector const&, Vector const&, int)
 T CFlashlightEffect::UpdateLightNew(Vector const&, Vector const&, Vector const&, Vector const&)
 T CFlashlightEffect::UpdateLightOld(Vector const&, Vector const&, int)
 T CFlashlightEffect::~CFlashlightEffect()
 T CFleckParticles::Create(char const*, Vector const&, Vector const&)
 T CFleckParticles::RenderParticles(CParticleRenderIterator*)
 T CFleckParticles::Setup(Vector const&, Vector const*, float, float, float, float, float, int)
 T CFleckParticles::SimulateParticles(CParticleSimulateIterator*)
 T CFleckParticles::~CFleckParticles()
 T CFlexAnimationTrack::AddSample(float, float, int)
 T CFlexAnimationTrack::GetBoundedSample(int, bool&, int)
 T CFlexAnimationTrack::GetFlexControllerName()
 T CFlexAnimationTrack::GetFracIntensity(float, int)
 T CFlexAnimationTrack::GetIntensity(float, int)
 T CFlexAnimationTrack::GetIntensityInternal(float, int)
 T CFlexAnimationTrack::GetRawFlexControllerIndex(int)
 T CFlexAnimationTrack::IsComboType()
 T CFlexAnimationTrack::IsTrackActive()
 T CFlexAnimationTrack::Resort(int)
 T CFlexAnimationTrack::SetComboType(bool)
 T CFlexAnimationTrack::SetEdgeActive(bool, bool)
 T CFlexAnimationTrack::SetEdgeInfo(bool, int, float)
 T CFlexAnimationTrack::SetFlexControllerIndex(LocalFlexController_t, int, int)
 T CFlexAnimationTrack::SetMax(float)
 T CFlexAnimationTrack::SetMin(float)
 T CFlexAnimationTrack::SetTrackActive(bool)
 T CFlexAnimationTrack::~CFlexAnimationTrack()
 T CFlexSceneFileManager::FindSceneFile(IHasLocalToGlobalFlexSettings*, char const*, bool)
 T CFlexSceneFileManager::Init()
 T CFlexSceneFileManager::Shutdown()
 T CFlexSceneFileManager::~CFlexSceneFileManager()
 T CFloatInput::GetFloat() const
 T CFloatInput::Init(IMaterial*, KeyValues*, char const*, float)
 T CFloatProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CFloatProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CFloatProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CFmtStrN<256, false>::CFmtStrN(char const*, ...)
 T CFmtStrN<256, false>::InitQuietTruncation()
 T CFracProxy::OnBind(void*)
 T CFracProxy::~CFracProxy()
 T CFreezeFrameView::CFreezeFrameView(CViewRender*)
 T CFreezeFrameView::Draw()
 T CFreezeFrameView::Setup(CViewSetup const&)
 T CFreezeFrameView::~CFreezeFrameView()
 T CFunctionProxy::CFunctionProxy()
 T CFunctionProxy::ComputeResultType(MaterialVarType_t&, int&)
 T CFunctionProxy::Init(IMaterial*, KeyValues*)
 T CFunctionProxy::~CFunctionProxy()
 T CFunctor6<void (*)(int, int, int, int, bool, bool), int, int, int, int, bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
 T CFunctor6<void (*)(int, int, int, int, bool, bool), int, int, int, int, bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor6()
 T CGameClientExports::CreateAchievementsPanel(vgui::Panel*)
 T CGameClientExports::DisplayAchievementPanel()
 T CGameClientExports::GetAchievementsPanelMinWidth() const
 T CGameClientExports::GetHolidayString()
 T CGameClientExports::IsPlayerGameVoiceMuted(int)
 T CGameClientExports::MutePlayerGameVoice(int)
 T CGameClientExports::OnGameUIActivated()
 T CGameClientExports::OnGameUIHidden()
 T CGameClientExports::ShutdownAchievementPanel()
 T CGameClientExports::UnmutePlayerGameVoice(int)
 T CGameClientExports::~CGameClientExports()
 T CGameEventListener::~CGameEventListener()
 T CGameMovement::Accelerate(Vector&, float, float)
 T CGameMovement::AirAccelerate(Vector&, float, float)
 T CGameMovement::AirMove()
 T CGameMovement::CGameMovement()
 T CGameMovement::CalcRoll(QAngle const&, Vector const&, float, float)
 T CGameMovement::CanAccelerate()
 T CGameMovement::CanUnDuckJump(CGameTrace&)
 T CGameMovement::CanUnduck()
 T CGameMovement::CategorizePosition()
 T CGameMovement::CheckFalling()
 T CGameMovement::CheckJumpButton()
 T CGameMovement::CheckParameters()
 T CGameMovement::CheckStuck()
 T CGameMovement::CheckVelocity()
 T CGameMovement::CheckWater()
 T CGameMovement::CheckWaterJump()
 T CGameMovement::ClimbSpeed() const
 T CGameMovement::ComputeConstraintSpeedFactor()
 T CGameMovement::DecayPunchAngle()
 T CGameMovement::DiffPrint(char const*, ...)
 T CGameMovement::Duck()
 T CGameMovement::FinishDuck()
 T CGameMovement::FinishTrackPredictionErrors(C_BasePlayer*)
 T CGameMovement::FinishUnDuck()
 T CGameMovement::FinishUnDuckJump(CGameTrace&)
 T CGameMovement::Friction()
 T CGameMovement::FullLadderMove()
 T CGameMovement::FullNoClipMove(float, float)
 T CGameMovement::FullObserverMove()
 T CGameMovement::FullTossMove()
 T CGameMovement::FullWalkMove()
 T CGameMovement::GameHasLadders() const
 T CGameMovement::GetAirSpeedCap()
 T CGameMovement::GetCheckInterval(CGameMovement::IntervalType_t)
 T CGameMovement::GetPlayerMaxs() const
 T CGameMovement::GetPlayerMaxs(bool) const
 T CGameMovement::GetPlayerMins() const
 T CGameMovement::GetPlayerMins(bool) const
 T CGameMovement::GetPlayerViewOffset(bool) const
 T CGameMovement::GetPointContentsCached(Vector const&, int)
 T CGameMovement::HandleDuckingSpeedCrop()
 T CGameMovement::LadderDistance() const
 T CGameMovement::LadderLateralMultiplier() const
 T CGameMovement::LadderMask() const
 T CGameMovement::LadderMove()
 T CGameMovement::OnJump(float)
 T CGameMovement::OnLadder(CGameTrace&)
 T CGameMovement::OnLand(float)
 T CGameMovement::OnTryPlayerMoveCollision(CGameTrace&)
 T CGameMovement::PerformFlyCollisionResolution(CGameTrace&, Vector&)
 T CGameMovement::PlayerMove()
 T CGameMovement::PlayerRoughLandingEffects(float)
 T CGameMovement::PlayerSolidMask(bool)
 T CGameMovement::ProcessMovement(C_BasePlayer*, CMoveData*)
 T CGameMovement::ReduceTimers()
 T CGameMovement::SetGroundEntity(CGameTrace*)
 T CGameMovement::StartTrackPredictionErrors(C_BasePlayer*)
 T CGameMovement::StartUnDuckJump()
 T CGameMovement::StayOnGround()
 T CGameMovement::StepMove(Vector&, CGameTrace&)
 T CGameMovement::TestPlayerPosition(Vector const&, int, CGameTrace&)
 T CGameMovement::TracePlayerBBox(Vector const&, Vector const&, unsigned int, int, CGameTrace&)
 T CGameMovement::TryPlayerMove(Vector*, CGameTrace*)
 T CGameMovement::TryTouchGround(Vector const&, Vector const&, Vector const&, Vector const&, unsigned int, int, CGameTrace&)
 T CGameMovement::TryTouchGroundInQuadrants(Vector const&, Vector const&, unsigned int, int, CGameTrace&)
 T CGameMovement::UpdateDuckJumpEyeOffset()
 T CGameMovement::WalkMove()
 T CGameMovement::WaterMove()
 T CGameMovement::~CGameMovement()
 T CGameRulesRegister::CGameRulesRegister(char const*, void (*)())
 T CGameSaveRestoreInfo::GetEntityIndex(C_BaseEntity const*)
 T CGameStringPool::Allocate(char const*)
 T CGameStringPool::FreeAll()
 T CGameStringPool::LevelShutdownPostEntity()
 T CGameStringPool::Name()
 T CGameStringPool::~CGameStringPool()
 T CGameTrace::DidHitNonWorldEntity() const
 T CGameTrace::DidHitWorld() const
 T CGameTrace::GetEntityIndex() const
 T CGaussianNoiseProxy::Init(IMaterial*, KeyValues*)
 T CGaussianNoiseProxy::OnBind(void*)
 T CGaussianNoiseProxy::~CGaussianNoiseProxy()
 T CGeneralRandomRotation::GetReadAttributes() const
 T CGeneralRandomRotation::GetWrittenAttributes() const
 T CGeneralRandomRotation::InitNewParticlesBlock(CParticleCollection*, int, int, int, void*) const
 T CGeneralRandomRotation::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T CGeneralRandomRotation::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T CGeneralSpin::GetReadAttributes() const
 T CGeneralSpin::GetWrittenAttributes() const
 T CGeneralSpin::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T CGeneralSpin::Operate(CParticleCollection*, float, void*) const
 T CGlowOverlay::Activate()
 T CGlowOverlay::CGlowOverlay()
 T CGlowOverlay::CalcBasis(Vector const&, float, float, Vector&, Vector&, Vector&)
 T CGlowOverlay::CalcSpriteColorAndSize(float, CGlowSprite*, float*, float*, Vector*)
 T CGlowOverlay::Deactivate()
 T CGlowOverlay::Draw(bool)
 T CGlowOverlay::DrawOverlays(bool)
 T CGlowOverlay::Update()
 T CGlowOverlay::UpdateGlowObstruction(Vector const&, bool)
 T CGlowOverlay::UpdateSkyGlowObstruction(float, bool)
 T CGlowOverlay::UpdateSkyOverlays(float, bool)
 T CGlowOverlay::~CGlowOverlay()
 T CGlowOverlaySystem::LevelInitPreEntity()
 T CGlowOverlaySystem::LevelShutdownPostEntity()
 T CGlowOverlaySystem::~CGlowOverlaySystem()
 T CGunshipFXEnvelope::CGunshipFXEnvelope()
 T CGunshipFXEnvelope::~CGunshipFXEnvelope()
 T CHFontProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CHFontProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CHFontProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CHL2GameMovement::CanAccelerate()
 T CHL2GameMovement::CheckLadderAutoMountCone(C_FuncLadder*, Vector const&, float, float)
 T CHL2GameMovement::CheckLadderAutoMountEndPoint(C_FuncLadder*, Vector const&)
 T CHL2GameMovement::ContinueForcedMove()
 T CHL2GameMovement::Findladder(float, C_FuncLadder**, Vector&, C_FuncLadder const*)
 T CHL2GameMovement::FullLadderMove()
 T CHL2GameMovement::GetCheckInterval(CGameMovement::IntervalType_t)
 T CHL2GameMovement::LadderMove()
 T CHL2GameMovement::LookingAtLadder(C_FuncLadder*)
 T CHL2GameMovement::OnLadder(CGameTrace&)
 T CHL2GameMovement::SetGroundEntity(CGameTrace*)
 T CHL2GameMovement::StartForcedMove(bool, float, Vector const&, C_FuncLadder*)
 T CHL2GameMovement::~CHL2GameMovement()
 T CHLClient::CanRecordDemo(char*, int) const
 T CHLClient::ClientAdjustStartSoundParams(StartSoundParams_t&)
 T CHLClient::CreateMove(int, float, bool)
 T CHLClient::DecodeUserCmdFromBuffer(bf_read&, int)
 T CHLClient::DisconnectAttempt()
 T CHLClient::DispatchOnRestore()
 T CHLClient::DispatchUserMessage(int, bf_read&)
 T CHLClient::EmitCloseCaption(char const*, float)
 T CHLClient::EmitSentenceCloseCaption(char const*)
 T CHLClient::EncodeUserCmdToBuffer(bf_write&, int)
 T CHLClient::ExtraMouseSample(float, bool)
 T CHLClient::FileReceived(char const*, unsigned int)
 T CHLClient::FrameStageNotify(ClientFrameStage_t)
 T CHLClient::GetAllClasses()
 T CHLClient::GetClientUIMouthInfo()
 T CHLClient::GetPlayerView(CViewSetup&)
 T CHLClient::GetPresenceID(char const*)
 T CHLClient::GetPropertyDisplayString(unsigned int, unsigned int, char*, int)
 T CHLClient::GetPropertyIdString(unsigned int)
 T CHLClient::GetRenamedRecvTableInfos()
 T CHLClient::GetScreenHeight()
 T CHLClient::GetScreenWidth()
 T CHLClient::GetSpriteSize() const
 T CHLClient::GetStandardRecvProxies()
 T CHLClient::HandleUiToggle()
 T CHLClient::HudProcessInput(bool)
 T CHLClient::HudReset()
 T CHLClient::HudText(char const*)
 T CHLClient::HudUpdate(bool)
 T CHLClient::HudVidInit()
 T CHLClient::IN_Accumulate()
 T CHLClient::IN_ActivateMouse()
 T CHLClient::IN_ClearStates()
 T CHLClient::IN_DeactivateMouse()
 T CHLClient::IN_IsKeyDown(char const*, bool&)
 T CHLClient::IN_KeyEvent(int, ButtonCode_t, char const*)
 T CHLClient::IN_OnMouseWheeled(int)
 T CHLClient::IN_SetSampleTime(float)
 T CHLClient::Init(void* (*)(char const*, int*), void* (*)(char const*, int*), CGlobalVarsBase*)
 T CHLClient::InitSprite(CEngineSprite*, char const*)
 T CHLClient::InstallStringTableCallback(char const*)
 T CHLClient::InvalidateMdlCache()
 T CHLClient::IsConnectedUserInfoChangeAllowed(IConVar*)
 T CHLClient::LevelInitPostEntity()
 T CHLClient::LevelInitPreEntity(char const*)
 T CHLClient::LevelShutdown()
 T CHLClient::OnDemoPlaybackStart(char const*)
 T CHLClient::OnDemoPlaybackStop()
 T CHLClient::OnDemoRecordStart(char const*)
 T CHLClient::OnDemoRecordStop()
 T CHLClient::PostInit()
 T CHLClient::PreSave(CSaveRestoreData*)
 T CHLClient::PrecacheMaterial(char const*)
 T CHLClient::ReadRestoreHeaders(CSaveRestoreData*)
 T CHLClient::ReloadFilesInList(IFileList*)
 T CHLClient::RenderView(CViewSetup const&, int, int)
 T CHLClient::ReplayInit(void* (*)(char const*, int*))
 T CHLClient::ReplayPostInit()
 T CHLClient::Restore(CSaveRestoreData*, bool)
 T CHLClient::Save(CSaveRestoreData*)
 T CHLClient::SaveInit(int)
 T CHLClient::SaveReadFields(CSaveRestoreData*, char const*, void*, datamap_t*, typedescription_t*, int)
 T CHLClient::SaveWriteFields(CSaveRestoreData*, char const*, void*, datamap_t*, typedescription_t*, int)
 T CHLClient::SetCrosshairAngle(QAngle const&)
 T CHLClient::SetupGameProperties(CUtlVector<_XUSER_CONTEXT, CUtlMemory<_XUSER_CONTEXT, int> >&, CUtlVector<_XUSER_PROPERTY, CUtlMemory<_XUSER_PROPERTY, int> >&)
 T CHLClient::ShouldAllowConsole()
 T CHLClient::ShouldDrawDropdownConsole()
 T CHLClient::Shutdown()
 T CHLClient::ShutdownSprite(CEngineSprite*)
 T CHLClient::StartStatsReporting(void*, bool)
 T CHLClient::TranslateEffectForVisionFilter(char const*, char const*)
 T CHLClient::View_Fade(ScreenFade_t*)
 T CHLClient::View_Render(vrect_t*)
 T CHLClient::VoiceStatus(int, int)
 T CHLClient::WriteSaveGameScreenshot(char const*)
 T CHLClient::WriteSaveGameScreenshotOfSize(char const*, int, int, bool, bool)
 T CHLClient::WriteSaveHeaders(CSaveRestoreData*)
 T CHLClient::WriteUsercmdDeltaToBuffer(bf_write*, int, int, bool)
 T CHLClient::~CHLClient()
 T CHLInput::~CHLInput()
 T CHLModeManager::CreateMove(float, CUserCmd*)
 T CHLModeManager::Init()
 T CHLModeManager::LevelInit(char const*)
 T CHLModeManager::LevelShutdown()
 T CHLModeManager::OverrideView(CViewSetup*)
 T CHLModeManager::SwitchMode(bool, bool)
 T CHLModeManager::~CHLModeManager()
 T CHLVoiceStatusHelper::CanShowSpeakerLabels()
 T CHLVoiceStatusHelper::GetPlayerTextColor(int, int*)
 T CHLVoiceStatusHelper::UpdateCursorState()
 T CHLVoiceStatusHelper::~CHLVoiceStatusHelper()
 T CHUDAutoAim::ApplySchemeSettings(vgui::IScheme*)
 T CHUDAutoAim::CHUDAutoAim(char const*)
 T CHUDAutoAim::GetAnimMap()
 T CHUDAutoAim::GetKBMap()
 T CHUDAutoAim::GetMessageMap()
 T CHUDAutoAim::GetPanelClassName()
 T CHUDAutoAim::Init()
 T CHUDAutoAim::OnThink()
 T CHUDAutoAim::Paint()
 T CHUDAutoAim::ShouldDraw()
 T CHUDAutoAim::VidInit()
 T CHUDAutoAim::~CHUDAutoAim()
 T CHUDQuickInfo::ApplySchemeSettings(vgui::IScheme*)
 T CHUDQuickInfo::CHUDQuickInfo(char const*)
 T CHUDQuickInfo::GetAnimMap()
 T CHUDQuickInfo::GetKBMap()
 T CHUDQuickInfo::GetMessageMap()
 T CHUDQuickInfo::GetPanelClassName()
 T CHUDQuickInfo::Init()
 T CHUDQuickInfo::OnThink()
 T CHUDQuickInfo::Paint()
 T CHUDQuickInfo::ShouldDraw()
 T CHUDQuickInfo::VidInit()
 T CHUDQuickInfo::~CHUDQuickInfo()
 T CHeadlightEffect::CHeadlightEffect()
 T CHeadlightEffect::UpdateLight(Vector const&, Vector const&, Vector const&, Vector const&, int)
 T CHeadlightEffect::~CHeadlightEffect()
 T CHeliBladeMaterialProxy::GetMaterial()
 T CHeliBladeMaterialProxy::Init(IMaterial*, KeyValues*)
 T CHeliBladeMaterialProxy::OnBind(C_BaseEntity*)
 T CHeliBladeMaterialProxy::~CHeliBladeMaterialProxy()
 T CHintSystem::PlayedAHint()
 T CHistogram_entry_t::IssueQuery(int)
 T CHud::AddHudElement(CHudElement*)
 T CHud::AddSearchableHudIconToList(CHudTexture&)
 T CHud::AddUnsearchableHudIconToList(CHudTexture&)
 T CHud::DrawIconProgressBar(int, int, CHudTexture*, CHudTexture*, float, Color&, int)
 T CHud::FindElement(char const*)
 T CHud::GetFOVSensitivityAdjust()
 T CHud::GetIcon(char const*)
 T CHud::GetSensitivity()
 T CHud::Init()
 T CHud::InitColors(vgui::IScheme*)
 T CHud::IsRenderGroupLockedFor(CHudElement*, int)
 T CHud::LevelInit()
 T CHud::LevelShutdown()
 T CHud::LockRenderGroup(int, CHudElement*)
 T CHud::LookupRenderGroupIndexByName(char const*)
 T CHud::MsgFunc_ResetHUD(bf_read&)
 T CHud::OnRestore()
 T CHud::ProcessInput(bool)
 T CHud::RefreshHudTextures()
 T CHud::ResetHUD()
 T CHud::SetupNewHudTexture(CHudTexture*)
 T CHud::Shutdown()
 T CHud::Think()
 T CHud::UnlockRenderGroup(int, CHudElement*)
 T CHud::UpdateHud(bool)
 T CHud::VidInit()
 T CHud::~CHud()
 T CHudAmmo::CHudAmmo(char const*)
 T CHudAmmo::GetAnimMap()
 T CHudAmmo::GetKBMap()
 T CHudAmmo::GetMessageMap()
 T CHudAmmo::GetPanelClassName()
 T CHudAmmo::Init()
 T CHudAmmo::OnThink()
 T CHudAmmo::Paint()
 T CHudAmmo::Reset()
 T CHudAmmo::SetAmmo(int, bool)
 T CHudAmmo::SetAmmo2(int, bool)
 T CHudAmmo::UpdatePlayerAmmo(C_BasePlayer*)
 T CHudAmmo::UpdateVehicleAmmo(C_BasePlayer*, IClientVehicle*)
 T CHudAmmo::VidInit()
 T CHudAmmo::~CHudAmmo()
 T CHudAnimationInfo::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CHudAnimationInfo::ApplySchemeSettings(vgui::IScheme*)
 T CHudAnimationInfo::CHudAnimationInfo(char const*)
 T CHudAnimationInfo::GetAnimMap()
 T CHudAnimationInfo::GetKBMap()
 T CHudAnimationInfo::GetMessageMap()
 T CHudAnimationInfo::GetPanelClassName()
 T CHudAnimationInfo::GetVar_m_ItemColor(vgui::Panel*)
 T CHudAnimationInfo::GetVar_m_ItemFont(vgui::Panel*)
 T CHudAnimationInfo::GetVar_m_LabelColor(vgui::Panel*)
 T CHudAnimationInfo::GetVar_m_LabelFont(vgui::Panel*)
 T CHudAnimationInfo::Paint()
 T CHudAnimationInfo::PaintMappingInfo(int&, int&, vgui::Panel*, PanelAnimationMap*)
 T CHudAnimationInfo::PaintString(int&, int&, char const*, Color*)
 T CHudAnimationInfo::ShouldDraw()
 T CHudAnimationInfo::~CHudAnimationInfo()
 T CHudBattery::CHudBattery(char const*)
 T CHudBattery::GetAnimMap()
 T CHudBattery::GetKBMap()
 T CHudBattery::GetMessageMap()
 T CHudBattery::GetPanelClassName()
 T CHudBattery::Init()
 T CHudBattery::OnThink()
 T CHudBattery::Reset()
 T CHudBattery::ShouldDraw()
 T CHudBattery::VidInit()
 T CHudBattery::~CHudBattery()
 T CHudChat::CHudChat(char const*)
 T CHudChat::GetAnimMap()
 T CHudChat::GetKBMap()
 T CHudChat::GetMessageMap()
 T CHudChat::GetPanelClassName()
 T CHudChat::Init()
 T CHudChat::MsgFunc_SayText(bf_read&)
 T CHudChat::MsgFunc_SayText2(bf_read&)
 T CHudChat::MsgFunc_TextMsg(bf_read&)
 T CHudChat::~CHudChat()
 T CHudChatFilterButton::CHudChatFilterButton(vgui::Panel*, char const*, char const*)
 T CHudChatFilterButton::DoClick()
 T CHudChatFilterButton::GetAnimMap()
 T CHudChatFilterButton::GetKBMap()
 T CHudChatFilterButton::GetMessageMap()
 T CHudChatFilterButton::GetPanelClassName()
 T CHudChatFilterButton::~CHudChatFilterButton()
 T CHudChatFilterCheckButton::CHudChatFilterCheckButton(vgui::Panel*, char const*, char const*, int)
 T CHudChatFilterCheckButton::GetAnimMap()
 T CHudChatFilterCheckButton::GetKBMap()
 T CHudChatFilterCheckButton::GetMessageMap()
 T CHudChatFilterCheckButton::GetPanelClassName()
 T CHudChatFilterCheckButton::~CHudChatFilterCheckButton()
 T CHudChatFilterPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CHudChatFilterPanel::ApplySchemeSettings(vgui::IScheme*)
 T CHudChatFilterPanel::CHudChatFilterPanel(vgui::Panel*, char const*)
 T CHudChatFilterPanel::GetAnimMap()
 T CHudChatFilterPanel::GetKBMap()
 T CHudChatFilterPanel::GetMessageMap()
 T CHudChatFilterPanel::GetPanelClassName()
 T CHudChatFilterPanel::OnFilterButtonChecked(vgui::Panel*)
 T CHudChatFilterPanel::SetVisible(bool)
 T CHudChatFilterPanel::~CHudChatFilterPanel()
 T CHudChatHistory::ApplySchemeSettings(vgui::IScheme*)
 T CHudChatHistory::CHudChatHistory(vgui::Panel*, char const*)
 T CHudChatHistory::GetAnimMap()
 T CHudChatHistory::GetKBMap()
 T CHudChatHistory::GetMessageMap()
 T CHudChatHistory::GetPanelClassName()
 T CHudChatHistory::~CHudChatHistory()
 T CHudCloseCaption::AddAsyncWork(char const*, bool, float, bool, bool)
 T CHudCloseCaption::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CHudCloseCaption::AddWorkUnit(CCloseCaptionItem*, WorkUnitParams&)
 T CHudCloseCaption::ApplySchemeSettings(vgui::IScheme*)
 T CHudCloseCaption::CHudCloseCaption(char const*)
 T CHudCloseCaption::CaptionTokenLessFunc(CHudCloseCaption::CaptionRepeat const&, CHudCloseCaption::CaptionRepeat const&)
 T CHudCloseCaption::ComputeStreamWork(int, CCloseCaptionItem*)
 T CHudCloseCaption::DrawStream(wrect_s&, wrect_s&, CCloseCaptionItem*, int, float)
 T CHudCloseCaption::FindSound(char const*)
 T CHudCloseCaption::GetAnimMap()
 T CHudCloseCaption::GetFloatCommandValue(wchar_t const*, wchar_t const*, float&) const
 T CHudCloseCaption::GetKBMap()
 T CHudCloseCaption::GetMessageMap()
 T CHudCloseCaption::GetNoRepeatValue(wchar_t const*, float&)
 T CHudCloseCaption::GetPanelClassName()
 T CHudCloseCaption::GetVar_m_flBackgroundAlpha(vgui::Panel*)
 T CHudCloseCaption::GetVar_m_flGrowTime(vgui::Panel*)
 T CHudCloseCaption::GetVar_m_flItemFadeInTime(vgui::Panel*)
 T CHudCloseCaption::GetVar_m_flItemFadeOutTime(vgui::Panel*)
 T CHudCloseCaption::GetVar_m_flItemHiddenTime(vgui::Panel*)
 T CHudCloseCaption::GetVar_m_nAspectRatioOffset(vgui::Panel*)
 T CHudCloseCaption::GetVar_m_nTopOffset(vgui::Panel*)
 T CHudCloseCaption::InitCaptionDictionary(char const*)
 T CHudCloseCaption::LevelInit()
 T CHudCloseCaption::LevelShutdown()
 T CHudCloseCaption::Lock()
 T CHudCloseCaption::MsgFunc_CloseCaption(bf_read&)
 T CHudCloseCaption::OnFinishAsyncLoad(int, int, AsyncCaptionData_t*)
 T CHudCloseCaption::OnTick()
 T CHudCloseCaption::Paint()
 T CHudCloseCaption::PlayRandomCaption()
 T CHudCloseCaption::Process(wchar_t const*, float, char const*, bool, bool)
 T CHudCloseCaption::ProcessAsyncWork()
 T CHudCloseCaption::ProcessCaption(char const*, float, bool, bool)
 T CHudCloseCaption::ProcessCaptionDirect(char const*, float, bool)
 T CHudCloseCaption::ProcessSentenceCaptionStream(char const*)
 T CHudCloseCaption::Reset()
 T CHudCloseCaption::StreamHasCommand(wchar_t const*, wchar_t const*)
 T CHudCloseCaption::_ProcessCaption(wchar_t const*, char const*, float, bool, bool)
 T CHudCloseCaption::~CHudCloseCaption()
 T CHudCommentary::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CHudCommentary::ApplySchemeSettings(vgui::IScheme*)
 T CHudCommentary::CHudCommentary(char const*)
 T CHudCommentary::GetAnimMap()
 T CHudCommentary::GetKBMap()
 T CHudCommentary::GetMessageMap()
 T CHudCommentary::GetPanelClassName()
 T CHudCommentary::GetVar_m_BGOverrideColor(vgui::Panel*)
 T CHudCommentary::GetVar_m_BackgroundColor(vgui::Panel*)
 T CHudCommentary::GetVar_m_bUseScriptBGColor(vgui::Panel*)
 T CHudCommentary::GetVar_m_iBarTall(vgui::Panel*)
 T CHudCommentary::GetVar_m_iBarWide(vgui::Panel*)
 T CHudCommentary::GetVar_m_iBarX(vgui::Panel*)
 T CHudCommentary::GetVar_m_iBarY(vgui::Panel*)
 T CHudCommentary::GetVar_m_iCountXFR(vgui::Panel*)
 T CHudCommentary::GetVar_m_iCountY(vgui::Panel*)
 T CHudCommentary::GetVar_m_iIconTall(vgui::Panel*)
 T CHudCommentary::GetVar_m_iIconWide(vgui::Panel*)
 T CHudCommentary::GetVar_m_iIconX(vgui::Panel*)
 T CHudCommentary::GetVar_m_iIconY(vgui::Panel*)
 T CHudCommentary::GetVar_m_iSpeakersX(vgui::Panel*)
 T CHudCommentary::GetVar_m_iSpeakersY(vgui::Panel*)
 T CHudCommentary::GetVar_m_nIconTextureId(vgui::Panel*)
 T CHudCommentary::Init()
 T CHudCommentary::LevelInit()
 T CHudCommentary::Paint()
 T CHudCommentary::ShouldDraw()
 T CHudCommentary::StartCommentary(C_PointCommentaryNode*, char*, int, int, float, float)
 T CHudCommentary::VidInit()
 T CHudCommentary::~CHudCommentary()
 T CHudCredits::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CHudCredits::ApplySchemeSettings(vgui::IScheme*)
 T CHudCredits::CHudCredits(char const*)
 T CHudCredits::DrawIntroCreditsName()
 T CHudCredits::DrawLogo()
 T CHudCredits::DrawOutroCreditsName()
 T CHudCredits::GetAnimMap()
 T CHudCredits::GetKBMap()
 T CHudCredits::GetMessageMap()
 T CHudCredits::GetPanelClassName()
 T CHudCredits::GetVar_m_TextColor(vgui::Panel*)
 T CHudCredits::GetVar_m_hTextFont(vgui::Panel*)
 T CHudCredits::Init()
 T CHudCredits::LevelShutdown()
 T CHudCredits::MsgFunc_CreditsMsg(bf_read&)
 T CHudCredits::Paint()
 T CHudCredits::PrepareCredits(char const*)
 T CHudCredits::PrepareIntroCredits()
 T CHudCredits::PrepareOutroCredits()
 T CHudCredits::ReadNames(KeyValues*)
 T CHudCredits::ReadParams(KeyValues*)
 T CHudCredits::ShouldDraw()
 T CHudCredits::~CHudCredits()
 T CHudCrosshair::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CHudCrosshair::ApplySchemeSettings(vgui::IScheme*)
 T CHudCrosshair::CHudCrosshair(char const*)
 T CHudCrosshair::DrawCrosshair()
 T CHudCrosshair::GetAnimMap()
 T CHudCrosshair::GetDrawPosition(float*, float*, bool*, QAngle)
 T CHudCrosshair::GetKBMap()
 T CHudCrosshair::GetMessageMap()
 T CHudCrosshair::GetPanelClassName()
 T CHudCrosshair::GetVar_m_bHideCrosshair(vgui::Panel*)
 T CHudCrosshair::HasCrosshair()
 T CHudCrosshair::Paint()
 T CHudCrosshair::ResetCrosshair()
 T CHudCrosshair::SetCrosshair(CHudTexture*, Color const&)
 T CHudCrosshair::SetCrosshairAngle(QAngle const&)
 T CHudCrosshair::ShouldDraw()
 T CHudCrosshair::~CHudCrosshair()
 T CHudDamageIndicator::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CHudDamageIndicator::ApplySchemeSettings(vgui::IScheme*)
 T CHudDamageIndicator::CHudDamageIndicator(char const*)
 T CHudDamageIndicator::DrawDamageIndicator(int)
 T CHudDamageIndicator::DrawFullscreenDamageIndicator()
 T CHudDamageIndicator::GetAnimMap()
 T CHudDamageIndicator::GetDamagePosition(Vector const&, float*)
 T CHudDamageIndicator::GetKBMap()
 T CHudDamageIndicator::GetMessageMap()
 T CHudDamageIndicator::GetPanelClassName()
 T CHudDamageIndicator::GetVar_m_DmgColorLeft(vgui::Panel*)
 T CHudDamageIndicator::GetVar_m_DmgColorRight(vgui::Panel*)
 T CHudDamageIndicator::GetVar_m_DmgFullscreenColor(vgui::Panel*)
 T CHudDamageIndicator::GetVar_m_DmgHighColorLeft(vgui::Panel*)
 T CHudDamageIndicator::GetVar_m_DmgHighColorRight(vgui::Panel*)
 T CHudDamageIndicator::GetVar_m_flDmgTall1(vgui::Panel*)
 T CHudDamageIndicator::GetVar_m_flDmgTall2(vgui::Panel*)
 T CHudDamageIndicator::GetVar_m_flDmgWide(vgui::Panel*)
 T CHudDamageIndicator::GetVar_m_flDmgX(vgui::Panel*)
 T CHudDamageIndicator::GetVar_m_flDmgY(vgui::Panel*)
 T CHudDamageIndicator::Init()
 T CHudDamageIndicator::MsgFunc_Damage(bf_read&)
 T CHudDamageIndicator::Paint()
 T CHudDamageIndicator::Reset()
 T CHudDamageIndicator::ShouldDraw()
 T CHudDamageIndicator::~CHudDamageIndicator()
 T CHudDeathNotice::ApplySchemeSettings(vgui::IScheme*)
 T CHudDeathNotice::CHudDeathNotice(char const*)
 T CHudDeathNotice::GetAnimMap()
 T CHudDeathNotice::GetKBMap()
 T CHudDeathNotice::GetMessageMap()
 T CHudDeathNotice::GetPanelClassName()
 T CHudDeathNotice::Init()
 T CHudDeathNotice::Paint()
 T CHudDeathNotice::ShouldDraw()
 T CHudDeathNotice::VidInit()
 T CHudDeathNotice::~CHudDeathNotice()
 T CHudElement::CHudElement(char const*)
 T CHudElement::FireGameEvent(IGameEvent*)
 T CHudElement::GetName() const
 T CHudElement::GetRenderGroupPriority()
 T CHudElement::Init()
 T CHudElement::IsActive()
 T CHudElement::LevelInit()
 T CHudElement::LevelShutdown()
 T CHudElement::ProcessInput()
 T CHudElement::Reset()
 T CHudElement::SetActive(bool)
 T CHudElement::SetHiddenBits(int)
 T CHudElement::ShouldDraw()
 T CHudElement::VidInit()
 T CHudElement::~CHudElement()
 T CHudElementHelper::CHudElementHelper(CHudElement* (*)(), int)
 T CHudElementHelper::CreateAllElements()
 T CHudFilmDemo::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CHudFilmDemo::ApplySchemeSettings(vgui::IScheme*)
 T CHudFilmDemo::CHudFilmDemo(char const*)
 T CHudFilmDemo::GetAnimMap()
 T CHudFilmDemo::GetKBMap()
 T CHudFilmDemo::GetMessageMap()
 T CHudFilmDemo::GetPanelClassName()
 T CHudFilmDemo::GetVar_m_BorderColor(vgui::Panel*)
 T CHudFilmDemo::GetVar_m_TextColor(vgui::Panel*)
 T CHudFilmDemo::GetVar_m_iBorderBottom(vgui::Panel*)
 T CHudFilmDemo::GetVar_m_iBorderCenter(vgui::Panel*)
 T CHudFilmDemo::GetVar_m_iBorderLeft(vgui::Panel*)
 T CHudFilmDemo::GetVar_m_iBorderRight(vgui::Panel*)
 T CHudFilmDemo::GetVar_m_iBorderTop(vgui::Panel*)
 T CHudFilmDemo::GetVar_m_iLeftY(vgui::Panel*)
 T CHudFilmDemo::GetVar_m_iRightY(vgui::Panel*)
 T CHudFilmDemo::Paint()
 T CHudFilmDemo::ShouldDraw()
 T CHudFilmDemo::~CHudFilmDemo()
 T CHudGeiger::ApplySchemeSettings(vgui::IScheme*)
 T CHudGeiger::CHudGeiger(char const*)
 T CHudGeiger::GetAnimMap()
 T CHudGeiger::GetKBMap()
 T CHudGeiger::GetMessageMap()
 T CHudGeiger::GetPanelClassName()
 T CHudGeiger::Init()
 T CHudGeiger::Paint()
 T CHudGeiger::ShouldDraw()
 T CHudGeiger::VidInit()
 T CHudGeiger::~CHudGeiger()
 T CHudHDRDemo::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CHudHDRDemo::ApplySchemeSettings(vgui::IScheme*)
 T CHudHDRDemo::CHudHDRDemo(char const*)
 T CHudHDRDemo::GetAnimMap()
 T CHudHDRDemo::GetKBMap()
 T CHudHDRDemo::GetMessageMap()
 T CHudHDRDemo::GetPanelClassName()
 T CHudHDRDemo::GetVar_m_BorderColor(vgui::Panel*)
 T CHudHDRDemo::GetVar_m_TextColor(vgui::Panel*)
 T CHudHDRDemo::GetVar_m_iBorderBottom(vgui::Panel*)
 T CHudHDRDemo::GetVar_m_iBorderCenter(vgui::Panel*)
 T CHudHDRDemo::GetVar_m_iBorderLeft(vgui::Panel*)
 T CHudHDRDemo::GetVar_m_iBorderRight(vgui::Panel*)
 T CHudHDRDemo::GetVar_m_iBorderTop(vgui::Panel*)
 T CHudHDRDemo::GetVar_m_iLeftY(vgui::Panel*)
 T CHudHDRDemo::GetVar_m_iRightY(vgui::Panel*)
 T CHudHDRDemo::Paint()
 T CHudHDRDemo::ShouldDraw()
 T CHudHDRDemo::~CHudHDRDemo()
 T CHudHealth::CHudHealth(char const*)
 T CHudHealth::GetAnimMap()
 T CHudHealth::GetKBMap()
 T CHudHealth::GetMessageMap()
 T CHudHealth::GetPanelClassName()
 T CHudHealth::Init()
 T CHudHealth::MsgFunc_Damage(bf_read&)
 T CHudHealth::OnThink()
 T CHudHealth::Reset()
 T CHudHealth::VidInit()
 T CHudHealth::~CHudHealth()
 T CHudHintDisplay::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CHudHintDisplay::ApplySchemeSettings(vgui::IScheme*)
 T CHudHintDisplay::CHudHintDisplay(char const*)
 T CHudHintDisplay::FireGameEvent(IGameEvent*)
 T CHudHintDisplay::GetAnimMap()
 T CHudHintDisplay::GetKBMap()
 T CHudHintDisplay::GetMessageMap()
 T CHudHintDisplay::GetPanelClassName()
 T CHudHintDisplay::GetVar_m_flLabelSizePercentage(vgui::Panel*)
 T CHudHintDisplay::GetVar_m_iCenterX(vgui::Panel*)
 T CHudHintDisplay::GetVar_m_iCenterY(vgui::Panel*)
 T CHudHintDisplay::GetVar_m_iTextX(vgui::Panel*)
 T CHudHintDisplay::GetVar_m_iTextY(vgui::Panel*)
 T CHudHintDisplay::Init()
 T CHudHintDisplay::LocalizeAndDisplay(char const*, char const*)
 T CHudHintDisplay::OnThink()
 T CHudHintDisplay::PerformLayout()
 T CHudHintDisplay::Reset()
 T CHudHintDisplay::SetHintText(wchar_t*)
 T CHudHintDisplay::~CHudHintDisplay()
 T CHudHintKeyDisplay::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CHudHintKeyDisplay::ApplySchemeSettings(vgui::IScheme*)
 T CHudHintKeyDisplay::CHudHintKeyDisplay(char const*)
 T CHudHintKeyDisplay::GetAnimMap()
 T CHudHintKeyDisplay::GetKBMap()
 T CHudHintKeyDisplay::GetMessageMap()
 T CHudHintKeyDisplay::GetPanelClassName()
 T CHudHintKeyDisplay::GetVar_m_iTextGapX(vgui::Panel*)
 T CHudHintKeyDisplay::GetVar_m_iTextGapY(vgui::Panel*)
 T CHudHintKeyDisplay::GetVar_m_iTextX(vgui::Panel*)
 T CHudHintKeyDisplay::GetVar_m_iTextY(vgui::Panel*)
 T CHudHintKeyDisplay::GetVar_m_iYOffset(vgui::Panel*)
 T CHudHintKeyDisplay::Init()
 T CHudHintKeyDisplay::MsgFunc_KeyHintText(bf_read&)
 T CHudHintKeyDisplay::OnThink()
 T CHudHintKeyDisplay::Paint()
 T CHudHintKeyDisplay::Reset()
 T CHudHintKeyDisplay::SetHintText(char const*)
 T CHudHintKeyDisplay::ShouldDraw()
 T CHudHintKeyDisplay::~CHudHintKeyDisplay()
 T CHudHistoryResource::AddIconToHistory(int, int, C_BaseCombatWeapon*, int, CHudTexture*)
 T CHudHistoryResource::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CHudHistoryResource::AddToHistory(C_BaseCombatWeapon*)
 T CHudHistoryResource::AddToHistory(int, int, int)
 T CHudHistoryResource::ApplySchemeSettings(vgui::IScheme*)
 T CHudHistoryResource::CHudHistoryResource(char const*)
 T CHudHistoryResource::GetAnimMap()
 T CHudHistoryResource::GetKBMap()
 T CHudHistoryResource::GetMessageMap()
 T CHudHistoryResource::GetPanelClassName()
 T CHudHistoryResource::GetVar_m_flHistoryGap(vgui::Panel*)
 T CHudHistoryResource::GetVar_m_flIconInset(vgui::Panel*)
 T CHudHistoryResource::GetVar_m_flTextInset(vgui::Panel*)
 T CHudHistoryResource::GetVar_m_hNumberFont(vgui::Panel*)
 T CHudHistoryResource::GetVar_m_hTextFont(vgui::Panel*)
 T CHudHistoryResource::Init()
 T CHudHistoryResource::MsgFunc_AmmoDenied(bf_read&)
 T CHudHistoryResource::Paint()
 T CHudHistoryResource::Reset()
 T CHudHistoryResource::SetHistoryGap(int)
 T CHudHistoryResource::ShouldDraw()
 T CHudHistoryResource::~CHudHistoryResource()
 T CHudMenu::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CHudMenu::ApplySchemeSettings(vgui::IScheme*)
 T CHudMenu::CHudMenu(char const*)
 T CHudMenu::GetAnimMap()
 T CHudMenu::GetKBMap()
 T CHudMenu::GetMessageMap()
 T CHudMenu::GetPanelClassName()
 T CHudMenu::GetVar_m_BoxColor(vgui::Panel*)
 T CHudMenu::GetVar_m_ItemColor(vgui::Panel*)
 T CHudMenu::GetVar_m_MenuColor(vgui::Panel*)
 T CHudMenu::GetVar_m_flAlphaOverride(vgui::Panel*)
 T CHudMenu::GetVar_m_flBlur(vgui::Panel*)
 T CHudMenu::GetVar_m_flOpenCloseTime(vgui::Panel*)
 T CHudMenu::GetVar_m_flSelectionAlphaOverride(vgui::Panel*)
 T CHudMenu::GetVar_m_flTextScan(vgui::Panel*)
 T CHudMenu::GetVar_m_hItemFont(vgui::Panel*)
 T CHudMenu::GetVar_m_hItemFontPulsing(vgui::Panel*)
 T CHudMenu::GetVar_m_hTextFont(vgui::Panel*)
 T CHudMenu::Init()
 T CHudMenu::IsMenuOpen()
 T CHudMenu::MsgFunc_ShowMenu(bf_read&)
 T CHudMenu::OnThink()
 T CHudMenu::Paint()
 T CHudMenu::ProcessText()
 T CHudMenu::Reset()
 T CHudMenu::SelectMenuItem(int)
 T CHudMenu::ShouldDraw()
 T CHudMenu::VidInit()
 T CHudMenu::~CHudMenu()
 T CHudMessage::AddChar(int, int, int, int, wchar_t)
 T CHudMessage::ApplySchemeSettings(vgui::IScheme*)
 T CHudMessage::CHudMessage(char const*)
 T CHudMessage::GetAnimMap()
 T CHudMessage::GetFontInfo(FONTABC*, unsigned long)
 T CHudMessage::GetKBMap()
 T CHudMessage::GetLength(int*, int*, char const*)
 T CHudMessage::GetMessageMap()
 T CHudMessage::GetPanelClassName()
 T CHudMessage::GetTextExtents(int*, int*, char const*)
 T CHudMessage::Init()
 T CHudMessage::MessageAdd(char const*)
 T CHudMessage::MessageDrawScan(client_textmessage_t*, float)
 T CHudMessage::MessageScanNextChar()
 T CHudMessage::MessageScanStart()
 T CHudMessage::MsgFunc_HudMsg(bf_read&)
 T CHudMessage::Paint()
 T CHudMessage::PaintCharacters()
 T CHudMessage::Reset()
 T CHudMessage::SetDefaultFont()
 T CHudMessage::SetFont(unsigned long)
 T CHudMessage::SetPosition(int, int)
 T CHudMessage::ShouldDraw()
 T CHudMessage::VidInit()
 T CHudMessage::XPosition(float, int, int)
 T CHudMessage::YPosition(float, int)
 T CHudMessage::~CHudMessage()
 T CHudNumericDisplay::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CHudNumericDisplay::CHudNumericDisplay(vgui::Panel*, char const*)
 T CHudNumericDisplay::GetAnimMap()
 T CHudNumericDisplay::GetKBMap()
 T CHudNumericDisplay::GetMessageMap()
 T CHudNumericDisplay::GetPanelClassName()
 T CHudNumericDisplay::GetVar_digit2_xpos(vgui::Panel*)
 T CHudNumericDisplay::GetVar_digit2_ypos(vgui::Panel*)
 T CHudNumericDisplay::GetVar_digit_xpos(vgui::Panel*)
 T CHudNumericDisplay::GetVar_digit_ypos(vgui::Panel*)
 T CHudNumericDisplay::GetVar_m_Ammo2Color(vgui::Panel*)
 T CHudNumericDisplay::GetVar_m_TextColor(vgui::Panel*)
 T CHudNumericDisplay::GetVar_m_flBlur(vgui::Panel*)
 T CHudNumericDisplay::GetVar_m_hNumberFont(vgui::Panel*)
 T CHudNumericDisplay::GetVar_m_hNumberGlowFont(vgui::Panel*)
 T CHudNumericDisplay::GetVar_m_hSmallNumberFont(vgui::Panel*)
 T CHudNumericDisplay::GetVar_m_hTextFont(vgui::Panel*)
 T CHudNumericDisplay::GetVar_text_xpos(vgui::Panel*)
 T CHudNumericDisplay::GetVar_text_ypos(vgui::Panel*)
 T CHudNumericDisplay::Paint()
 T CHudNumericDisplay::PaintLabel()
 T CHudNumericDisplay::PaintNumbers(unsigned long, int, int, int)
 T CHudNumericDisplay::Reset()
 T CHudNumericDisplay::SetDisplayValue(int)
 T CHudNumericDisplay::SetLabelText(wchar_t const*)
 T CHudNumericDisplay::SetSecondaryValue(int)
 T CHudNumericDisplay::SetShouldDisplaySecondaryValue(bool)
 T CHudNumericDisplay::~CHudNumericDisplay()
 T CHudPoisonDamageIndicator::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CHudPoisonDamageIndicator::ApplySchemeSettings(vgui::IScheme*)
 T CHudPoisonDamageIndicator::CHudPoisonDamageIndicator(char const*)
 T CHudPoisonDamageIndicator::GetAnimMap()
 T CHudPoisonDamageIndicator::GetKBMap()
 T CHudPoisonDamageIndicator::GetMessageMap()
 T CHudPoisonDamageIndicator::GetPanelClassName()
 T CHudPoisonDamageIndicator::GetVar_m_TextColor(vgui::Panel*)
 T CHudPoisonDamageIndicator::GetVar_m_hTextFont(vgui::Panel*)
 T CHudPoisonDamageIndicator::GetVar_text_xpos(vgui::Panel*)
 T CHudPoisonDamageIndicator::GetVar_text_ygap(vgui::Panel*)
 T CHudPoisonDamageIndicator::GetVar_text_ypos(vgui::Panel*)
 T CHudPoisonDamageIndicator::OnThink()
 T CHudPoisonDamageIndicator::Paint()
 T CHudPoisonDamageIndicator::Reset()
 T CHudPoisonDamageIndicator::ShouldDraw()
 T CHudPoisonDamageIndicator::~CHudPoisonDamageIndicator()
 T CHudPosture::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CHudPosture::CHudPosture(char const*)
 T CHudPosture::GetAnimMap()
 T CHudPosture::GetKBMap()
 T CHudPosture::GetMessageMap()
 T CHudPosture::GetPanelClassName()
 T CHudPosture::GetVar_m_IconX(vgui::Panel*)
 T CHudPosture::GetVar_m_IconY(vgui::Panel*)
 T CHudPosture::GetVar_m_TextColor(vgui::Panel*)
 T CHudPosture::GetVar_m_hFont(vgui::Panel*)
 T CHudPosture::Init()
 T CHudPosture::OnTick()
 T CHudPosture::Paint()
 T CHudPosture::Reset()
 T CHudPosture::ShouldDraw()
 T CHudPosture::~CHudPosture()
 T CHudSecondaryAmmo::CHudSecondaryAmmo(char const*)
 T CHudSecondaryAmmo::GetAnimMap()
 T CHudSecondaryAmmo::GetKBMap()
 T CHudSecondaryAmmo::GetMessageMap()
 T CHudSecondaryAmmo::GetPanelClassName()
 T CHudSecondaryAmmo::Init()
 T CHudSecondaryAmmo::OnThink()
 T CHudSecondaryAmmo::Paint()
 T CHudSecondaryAmmo::Reset()
 T CHudSecondaryAmmo::SetAmmo(int)
 T CHudSecondaryAmmo::UpdateAmmoState()
 T CHudSecondaryAmmo::VidInit()
 T CHudSecondaryAmmo::~CHudSecondaryAmmo()
 T CHudSquadStatus::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CHudSquadStatus::CHudSquadStatus(char const*)
 T CHudSquadStatus::GetAnimMap()
 T CHudSquadStatus::GetKBMap()
 T CHudSquadStatus::GetMessageMap()
 T CHudSquadStatus::GetPanelClassName()
 T CHudSquadStatus::GetVar_m_LastMemberColor(vgui::Panel*)
 T CHudSquadStatus::GetVar_m_SquadIconColor(vgui::Panel*)
 T CHudSquadStatus::GetVar_m_SquadTextColor(vgui::Panel*)
 T CHudSquadStatus::GetVar_m_flIconGap(vgui::Panel*)
 T CHudSquadStatus::GetVar_m_flIconInsetX(vgui::Panel*)
 T CHudSquadStatus::GetVar_m_flIconInsetY(vgui::Panel*)
 T CHudSquadStatus::GetVar_m_hIconFont(vgui::Panel*)
 T CHudSquadStatus::GetVar_m_hTextFont(vgui::Panel*)
 T CHudSquadStatus::GetVar_text_xpos(vgui::Panel*)
 T CHudSquadStatus::GetVar_text_ypos(vgui::Panel*)
 T CHudSquadStatus::Init()
 T CHudSquadStatus::OnThink()
 T CHudSquadStatus::Paint()
 T CHudSquadStatus::Reset()
 T CHudSquadStatus::ShouldDraw()
 T CHudSquadStatus::~CHudSquadStatus()
 T CHudSuitPower::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CHudSuitPower::CHudSuitPower(char const*)
 T CHudSuitPower::GetAnimMap()
 T CHudSuitPower::GetKBMap()
 T CHudSuitPower::GetMessageMap()
 T CHudSuitPower::GetPanelClassName()
 T CHudSuitPower::GetVar_m_AuxPowerColor(vgui::Panel*)
 T CHudSuitPower::GetVar_m_flBarChunkGap(vgui::Panel*)
 T CHudSuitPower::GetVar_m_flBarChunkWidth(vgui::Panel*)
 T CHudSuitPower::GetVar_m_flBarHeight(vgui::Panel*)
 T CHudSuitPower::GetVar_m_flBarInsetX(vgui::Panel*)
 T CHudSuitPower::GetVar_m_flBarInsetY(vgui::Panel*)
 T CHudSuitPower::GetVar_m_flBarWidth(vgui::Panel*)
 T CHudSuitPower::GetVar_m_hTextFont(vgui::Panel*)
 T CHudSuitPower::GetVar_m_iAuxPowerDisabledAlpha(vgui::Panel*)
 T CHudSuitPower::GetVar_text2_gap(vgui::Panel*)
 T CHudSuitPower::GetVar_text2_xpos(vgui::Panel*)
 T CHudSuitPower::GetVar_text2_ypos(vgui::Panel*)
 T CHudSuitPower::GetVar_text_xpos(vgui::Panel*)
 T CHudSuitPower::GetVar_text_ypos(vgui::Panel*)
 T CHudSuitPower::Init()
 T CHudSuitPower::OnThink()
 T CHudSuitPower::Paint()
 T CHudSuitPower::Reset()
 T CHudSuitPower::ShouldDraw()
 T CHudSuitPower::~CHudSuitPower()
 T CHudTextMessage::BufferedLocaliseTextString(char const*)
 T CHudTextMessage::LocaliseTextString(char const*, char*, int)
 T CHudTextMessage::LookupString(char const*, int*)
 T CHudTexture::DrawSelf(int, int, Color const&) const
 T CHudTexture::DrawSelf(int, int, int, int, Color const&) const
 T CHudTexture::DrawSelfCropped(int, int, int, int, int, int, Color) const
 T CHudTexture::DrawSelfCropped(int, int, int, int, int, int, int, int, Color) const
 T CHudTexture::Precache()
 T CHudTexture::operator=(CHudTexture const&)
 T CHudTexture::~CHudTexture()
 T CHudTextureHandleProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CHudTextureHandleProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CHudTextureHandleProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CHudTrain::ApplySchemeSettings(vgui::IScheme*)
 T CHudTrain::CHudTrain(char const*)
 T CHudTrain::GetAnimMap()
 T CHudTrain::GetKBMap()
 T CHudTrain::GetMessageMap()
 T CHudTrain::GetPanelClassName()
 T CHudTrain::Init()
 T CHudTrain::Paint()
 T CHudTrain::ShouldDraw()
 T CHudTrain::VidInit()
 T CHudTrain::~CHudTrain()
 T CHudVehicle::ApplySchemeSettings(vgui::IScheme*)
 T CHudVehicle::CHudVehicle(char const*)
 T CHudVehicle::GetAnimMap()
 T CHudVehicle::GetKBMap()
 T CHudVehicle::GetMessageMap()
 T CHudVehicle::GetPanelClassName()
 T CHudVehicle::Paint()
 T CHudVehicle::ShouldDraw()
 T CHudVehicle::~CHudVehicle()
 T CHudViewport::ApplySchemeSettings(vgui::IScheme*)
 T CHudViewport::CreateDefaultPanels()
 T CHudViewport::GetAnimMap()
 T CHudViewport::GetKBMap()
 T CHudViewport::GetMessageMap()
 T CHudViewport::GetPanelClassName()
 T CHudViewport::~CHudViewport()
 T CHudWeapon::ApplySchemeSettings(vgui::IScheme*)
 T CHudWeapon::CHudWeapon(char const*)
 T CHudWeapon::GetAnimMap()
 T CHudWeapon::GetKBMap()
 T CHudWeapon::GetMessageMap()
 T CHudWeapon::GetPanelClassName()
 T CHudWeapon::Paint()
 T CHudWeapon::PerformLayout()
 T CHudWeapon::~CHudWeapon()
 T CHudWeaponSelection::ActivateFastswitchWeaponDisplay(C_BaseCombatWeapon*)
 T CHudWeaponSelection::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CHudWeaponSelection::ApplySchemeSettings(vgui::IScheme*)
 T CHudWeaponSelection::CHudWeaponSelection(char const*)
 T CHudWeaponSelection::CycleToNextWeapon()
 T CHudWeaponSelection::CycleToPrevWeapon()
 T CHudWeaponSelection::DrawBox(int, int, int, int, Color, float, int)
 T CHudWeaponSelection::DrawLargeWeaponBox(C_BaseCombatWeapon*, bool, int, int, int, int, Color, float, int)
 T CHudWeaponSelection::FastWeaponSwitch(int)
 T CHudWeaponSelection::FindNextWeaponInWeaponSelection(int, int)
 T CHudWeaponSelection::FindPrevWeaponInWeaponSelection(int, int)
 T CHudWeaponSelection::GetAnimMap()
 T CHudWeaponSelection::GetKBMap()
 T CHudWeaponSelection::GetMessageMap()
 T CHudWeaponSelection::GetPanelClassName()
 T CHudWeaponSelection::GetSelectedWeapon()
 T CHudWeaponSelection::GetVar_m_BoxColor(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_BrightBoxColor(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_EmptyBoxColor(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_NumberColor(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_SelectedBoxColor(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_SelectedFgColor(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_TextColor(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_flAlphaOverride(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_flBlur(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_flBoxGap(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_flHorizWeaponSelectOffsetPoint(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_flLargeBoxTall(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_flLargeBoxWide(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_flMediumBoxTall(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_flMediumBoxWide(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_flSelectionAlphaOverride(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_flSelectionNumberXPos(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_flSelectionNumberYPos(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_flSmallBoxSize(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_flTextScan(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_flTextYPos(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_flWeaponPickupGrowTime(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_hNumberFont(vgui::Panel*)
 T CHudWeaponSelection::GetVar_m_hTextFont(vgui::Panel*)
 T CHudWeaponSelection::GetWeaponInSlot(int, int, bool)
 T CHudWeaponSelection::HideSelection()
 T CHudWeaponSelection::IsWeaponSelectable()
 T CHudWeaponSelection::LevelInit()
 T CHudWeaponSelection::OnThink()
 T CHudWeaponSelection::OnWeaponPickup(C_BaseCombatWeapon*)
 T CHudWeaponSelection::OpenSelection()
 T CHudWeaponSelection::Paint()
 T CHudWeaponSelection::PlusTypeFastWeaponSwitch(int)
 T CHudWeaponSelection::SelectWeaponSlot(int)
 T CHudWeaponSelection::SetSelectedSlot(int)
 T CHudWeaponSelection::SetSelectedWeapon(C_BaseCombatWeapon*)
 T CHudWeaponSelection::SetWeaponSelected()
 T CHudWeaponSelection::ShouldDraw()
 T CHudWeaponSelection::~CHudWeaponSelection()
 T CHudZoom::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CHudZoom::ApplySchemeSettings(vgui::IScheme*)
 T CHudZoom::CHudZoom(char const*)
 T CHudZoom::GetAnimMap()
 T CHudZoom::GetKBMap()
 T CHudZoom::GetMessageMap()
 T CHudZoom::GetPanelClassName()
 T CHudZoom::GetVar_m_flCircle1Radius(vgui::Panel*)
 T CHudZoom::GetVar_m_flCircle2Radius(vgui::Panel*)
 T CHudZoom::GetVar_m_flDashGap(vgui::Panel*)
 T CHudZoom::GetVar_m_flDashHeight(vgui::Panel*)
 T CHudZoom::Init()
 T CHudZoom::LevelInit()
 T CHudZoom::Paint()
 T CHudZoom::ShouldDraw()
 T CHudZoom::~CHudZoom()
 T CIKContext::AddAutoplayLocks(Vector*, Quaternion*)
 T CIKContext::AddDependencies(mstudioseqdesc_t&, int, float, float const*, float)
 T CIKContext::AddSequenceLocks(mstudioseqdesc_t&, Vector*, Quaternion*)
 T CIKContext::AutoIKRelease()
 T CIKContext::CIKContext()
 T CIKContext::ClearTargets()
 T CIKContext::Init(CStudioHdr const*, QAngle const&, Vector const&, float, int, int)
 T CIKContext::SolveAutoplayLocks(Vector*, Quaternion*)
 T CIKContext::SolveDependencies(Vector*, Quaternion*, matrix3x4_t*, CBoneBitList&)
 T CIKContext::SolveLock(mstudioiklock_t const*, int, Vector*, Quaternion*, matrix3x4_t*, CBoneBitList&)
 T CIKContext::SolveSequenceLocks(mstudioseqdesc_t&, Vector*, Quaternion*)
 T CIKContext::UpdateTargets(Vector*, Quaternion*, matrix3x4_t*, CBoneBitList&)
 T CIKSolver::solve(float, float, float const*, float const*, float*)
 T CIKTarget::ClearOwner()
 T CIKTarget::GetOwner()
 T CIKTarget::IKFailed()
 T CIKTarget::IsActive()
 T CIKTarget::SetAngles(QAngle const&)
 T CIKTarget::SetNormal(Vector const&)
 T CIKTarget::SetOnWorld(bool)
 T CIKTarget::SetOwner(int, Vector const&, QAngle const&)
 T CIKTarget::SetPos(Vector const&)
 T CIKTarget::SetPosWithNormalOffset(Vector const&, Vector const&)
 T CIKTarget::UpdateOwner(int, Vector const&, QAngle const&)
 T CIconPanel::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CIconPanel::ApplySchemeSettings(vgui::IScheme*)
 T CIconPanel::ApplySettings(KeyValues*)
 T CIconPanel::CIconPanel(vgui::Panel*, char const*)
 T CIconPanel::GetAnimMap()
 T CIconPanel::GetKBMap()
 T CIconPanel::GetMessageMap()
 T CIconPanel::GetPanelClassName()
 T CIconPanel::GetVar_m_IconColor(vgui::Panel*)
 T CIconPanel::Paint()
 T CIconPanel::~CIconPanel()
 T CImpactOverlay::Update()
 T CImpactOverlay::~CImpactOverlay()
 T CInput::AccumulateMouse()
 T CInput::ActivateMouse()
 T CInput::AddIKGroundContactInfo(int, float, float)
 T CInput::AdjustAngles(float)
 T CInput::AdjustPitch(float, QAngle&)
 T CInput::AdjustYaw(float, QAngle&)
 T CInput::ApplyMouse(QAngle&, CUserCmd*, float, float)
 T CInput::CAM_CameraThirdThink()
 T CInput::CAM_CapYaw(float)
 T CInput::CAM_EndDistance()
 T CInput::CAM_EndMouseMove()
 T CInput::CAM_InterceptingMouse()
 T CInput::CAM_IsOrthographic() const
 T CInput::CAM_IsThirdPerson()
 T CInput::CAM_OrthographicSize(float&, float&) const
 T CInput::CAM_SetCameraThirdData(CameraThirdData_t*, QAngle const&)
 T CInput::CAM_StartDistance()
 T CInput::CAM_StartMouseMove()
 T CInput::CAM_Think()
 T CInput::CAM_ToFirstPerson()
 T CInput::CAM_ToOrthographic()
 T CInput::CAM_ToThirdPerson()
 T CInput::CInput()
 T CInput::CheckMouseAcclerationVars()
 T CInput::ClearInputButton(int)
 T CInput::ClearStates()
 T CInput::ComputeForwardMove(CUserCmd*)
 T CInput::ComputeSideMove(CUserCmd*)
 T CInput::ControllerCommands()
 T CInput::ControllerModeActive()
 T CInput::ControllerMove(float, CUserCmd*)
 T CInput::CreateMove(int, float, bool)
 T CInput::DeactivateMouse()
 T CInput::DecodeUserCmdFromBuffer(bf_read&, int)
 T CInput::EnableJoystickMode()
 T CInput::EncodeUserCmdToBuffer(bf_write&, int)
 T CInput::ExtraMouseSample(float, bool)
 T CInput::FindKey(char const*)
 T CInput::GetAccumulatedMouseDeltasAndResetAccumulators(float*, float*)
 T CInput::GetButtonBits(int)
 T CInput::GetFullscreenMousePos(int*, int*, int*, int*)
 T CInput::GetLastForwardMove()
 T CInput::GetLastUsedInput()
 T CInput::GetLookSpring()
 T CInput::GetMousePos(int&, int&)
 T CInput::GetUserCmd(int)
 T CInput::GetWindowCenter(int&, int&)
 T CInput::IN_SetSampleTime(float)
 T CInput::Init_All()
 T CInput::Init_Camera()
 T CInput::Init_Keyboard()
 T CInput::Init_Mouse()
 T CInput::JoyStickAdjustYaw(float)
 T CInput::JoyStickMove(float, CUserCmd*)
 T CInput::Joystick_Advanced()
 T CInput::Joystick_GetForward()
 T CInput::Joystick_GetPitch()
 T CInput::Joystick_GetSide()
 T CInput::Joystick_GetYaw()
 T CInput::Joystick_SetSampleTime(float)
 T CInput::KeyEvent(int, ButtonCode_t, char const*)
 T CInput::KeyState(kbutton_t*)
 T CInput::LevelInit()
 T CInput::MakeWeaponSelection(C_BaseCombatWeapon*)
 T CInput::MouseMove(CUserCmd*)
 T CInput::ResetMouse()
 T CInput::ScaleAxisValue(float, float)
 T CInput::ScaleMouse(float*, float*)
 T CInput::SetControllerModeActive(bool)
 T CInput::SetFullscreenMousePos(int, int)
 T CInput::SetLastUsedInput(int)
 T CInput::Shutdown_All()
 T CInput::SteamControllerMove(float, CUserCmd*)
 T CInput::SteamInput_SetSampleTime(float)
 T CInput::UpdateAndGetCameraReset(QAngle, float, float)
 T CInput::UpdateAndGetQuickTurnYaw(float, float)
 T CInput::WriteUsercmdDeltaToBuffer(bf_write*, int, int, bool)
 T CInput::~CInput()
 T CIntProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CIntProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CIntProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CIntProxy::OnBind(void*)
 T CIntProxy::~CIntProxy()
 T CInterpolatedValue::CInterpolatedValue()
 T CInterpolatedValue::Init(float, float, float, InterpType_t)
 T CInterpolatedValue::Interp(float)
 T CInterpolatedVar<C_AnimationLayer>::CInterpolatedVar(char const*)
 T CInterpolatedVar<C_AnimationLayer>::~CInterpolatedVar()
 T CInterpolatedVar<QAngle>::CInterpolatedVar(char const*)
 T CInterpolatedVar<QAngle>::~CInterpolatedVar()
 T CInterpolatedVar<Vector>::CInterpolatedVar(char const*)
 T CInterpolatedVar<Vector>::~CInterpolatedVar()
 T CInterpolatedVar<float>::CInterpolatedVar(char const*)
 T CInterpolatedVar<float>::~CInterpolatedVar()
 T CInterpolatedVarArray<QAngle, 24>::~CInterpolatedVarArray()
 T CInterpolatedVarArray<Vector, 24>::~CInterpolatedVarArray()
 T CInterpolatedVarArray<Vector, 6>::~CInterpolatedVarArray()
 T CInterpolatedVarArray<float, 24>::~CInterpolatedVarArray()
 T CInterpolatedVarArray<float, 4>::~CInterpolatedVarArray()
 T CInterpolatedVarArray<float, 96>::~CInterpolatedVarArray()
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::AddToHead(float, C_AnimationLayer const*, bool)
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::Copy(IInterpolatedVar*)
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::GetDebugName()
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::GetInterpolationInfo(CInterpolatedVarArrayBase<C_AnimationLayer, false>::CInterpolationInfo*, float, float, int*)
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::GetType() const
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::Interpolate(float)
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::Interpolate(float, float)
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::NoteChanged(float, bool)
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::NoteChanged(float, float, bool)
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::NoteLastNetworkedValue()
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::Reset()
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::RestoreToLastNetworked()
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::SetDebug(bool)
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::SetDebugName(char const*)
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::SetInterpolationAmount(float)
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::SetMaxCount(int)
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::Setup(void*, int)
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::TimeFixup2_Hermite(CInterpolatedVarEntryBase<C_AnimationLayer, false>&, CInterpolatedVarEntryBase<C_AnimationLayer, false>*&, CInterpolatedVarEntryBase<C_AnimationLayer, false>*&, float)
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::_Interpolate(C_AnimationLayer*, float, CInterpolatedVarEntryBase<C_AnimationLayer, false>*, CInterpolatedVarEntryBase<C_AnimationLayer, false>*)
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::_Interpolate_Hermite(C_AnimationLayer*, float, CInterpolatedVarEntryBase<C_AnimationLayer, false>*, CInterpolatedVarEntryBase<C_AnimationLayer, false>*, CInterpolatedVarEntryBase<C_AnimationLayer, false>*, bool)
 T CInterpolatedVarArrayBase<C_AnimationLayer, false>::~CInterpolatedVarArrayBase()
 T CInterpolatedVarArrayBase<QAngle, false>::AddToHead(float, QAngle const*, bool)
 T CInterpolatedVarArrayBase<QAngle, false>::Copy(IInterpolatedVar*)
 T CInterpolatedVarArrayBase<QAngle, false>::GetDebugName()
 T CInterpolatedVarArrayBase<QAngle, false>::GetInterpolationInfo(CInterpolatedVarArrayBase<QAngle, false>::CInterpolationInfo*, float, float, int*)
 T CInterpolatedVarArrayBase<QAngle, false>::GetType() const
 T CInterpolatedVarArrayBase<QAngle, false>::Interpolate(float)
 T CInterpolatedVarArrayBase<QAngle, false>::Interpolate(float, float)
 T CInterpolatedVarArrayBase<QAngle, false>::NoteChanged(float, bool)
 T CInterpolatedVarArrayBase<QAngle, false>::NoteChanged(float, float, bool)
 T CInterpolatedVarArrayBase<QAngle, false>::NoteLastNetworkedValue()
 T CInterpolatedVarArrayBase<QAngle, false>::Reset()
 T CInterpolatedVarArrayBase<QAngle, false>::RestoreToLastNetworked()
 T CInterpolatedVarArrayBase<QAngle, false>::SetDebug(bool)
 T CInterpolatedVarArrayBase<QAngle, false>::SetDebugName(char const*)
 T CInterpolatedVarArrayBase<QAngle, false>::SetInterpolationAmount(float)
 T CInterpolatedVarArrayBase<QAngle, false>::SetMaxCount(int)
 T CInterpolatedVarArrayBase<QAngle, false>::Setup(void*, int)
 T CInterpolatedVarArrayBase<QAngle, false>::TimeFixup2_Hermite(CInterpolatedVarEntryBase<QAngle, false>&, CInterpolatedVarEntryBase<QAngle, false>*&, CInterpolatedVarEntryBase<QAngle, false>*&, float)
 T CInterpolatedVarArrayBase<QAngle, false>::_Extrapolate(QAngle*, CInterpolatedVarEntryBase<QAngle, false>*, CInterpolatedVarEntryBase<QAngle, false>*, float, float)
 T CInterpolatedVarArrayBase<QAngle, false>::_Interpolate(QAngle*, float, CInterpolatedVarEntryBase<QAngle, false>*, CInterpolatedVarEntryBase<QAngle, false>*)
 T CInterpolatedVarArrayBase<QAngle, false>::_Interpolate_Hermite(QAngle*, float, CInterpolatedVarEntryBase<QAngle, false>*, CInterpolatedVarEntryBase<QAngle, false>*, CInterpolatedVarEntryBase<QAngle, false>*, bool)
 T CInterpolatedVarArrayBase<QAngle, false>::~CInterpolatedVarArrayBase()
 T CInterpolatedVarArrayBase<QAngle, true>::AddToHead(float, QAngle const*, bool)
 T CInterpolatedVarArrayBase<QAngle, true>::Copy(IInterpolatedVar*)
 T CInterpolatedVarArrayBase<QAngle, true>::GetDebugName()
 T CInterpolatedVarArrayBase<QAngle, true>::GetInterpolationInfo(CInterpolatedVarArrayBase<QAngle, true>::CInterpolationInfo*, float, float, int*)
 T CInterpolatedVarArrayBase<QAngle, true>::GetType() const
 T CInterpolatedVarArrayBase<QAngle, true>::Interpolate(float)
 T CInterpolatedVarArrayBase<QAngle, true>::Interpolate(float, float)
 T CInterpolatedVarArrayBase<QAngle, true>::NoteChanged(float, bool)
 T CInterpolatedVarArrayBase<QAngle, true>::NoteChanged(float, float, bool)
 T CInterpolatedVarArrayBase<QAngle, true>::NoteLastNetworkedValue()
 T CInterpolatedVarArrayBase<QAngle, true>::Reset()
 T CInterpolatedVarArrayBase<QAngle, true>::RestoreToLastNetworked()
 T CInterpolatedVarArrayBase<QAngle, true>::SetDebug(bool)
 T CInterpolatedVarArrayBase<QAngle, true>::SetDebugName(char const*)
 T CInterpolatedVarArrayBase<QAngle, true>::SetInterpolationAmount(float)
 T CInterpolatedVarArrayBase<QAngle, true>::SetMaxCount(int)
 T CInterpolatedVarArrayBase<QAngle, true>::Setup(void*, int)
 T CInterpolatedVarArrayBase<QAngle, true>::TimeFixup2_Hermite(CInterpolatedVarEntryBase<QAngle, true>&, CInterpolatedVarEntryBase<QAngle, true>*&, CInterpolatedVarEntryBase<QAngle, true>*&, float)
 T CInterpolatedVarArrayBase<QAngle, true>::_Extrapolate(QAngle*, CInterpolatedVarEntryBase<QAngle, true>*, CInterpolatedVarEntryBase<QAngle, true>*, float, float)
 T CInterpolatedVarArrayBase<QAngle, true>::_Interpolate(QAngle*, float, CInterpolatedVarEntryBase<QAngle, true>*, CInterpolatedVarEntryBase<QAngle, true>*)
 T CInterpolatedVarArrayBase<QAngle, true>::_Interpolate_Hermite(QAngle*, float, CInterpolatedVarEntryBase<QAngle, true>*, CInterpolatedVarEntryBase<QAngle, true>*, CInterpolatedVarEntryBase<QAngle, true>*, bool)
 T CInterpolatedVarArrayBase<QAngle, true>::~CInterpolatedVarArrayBase()
 T CInterpolatedVarArrayBase<Vector, false>::AddToHead(float, Vector const*, bool)
 T CInterpolatedVarArrayBase<Vector, false>::Copy(IInterpolatedVar*)
 T CInterpolatedVarArrayBase<Vector, false>::GetDebugName()
 T CInterpolatedVarArrayBase<Vector, false>::GetDerivative_SmoothVelocity(Vector*, float)
 T CInterpolatedVarArrayBase<Vector, false>::GetInterpolationInfo(CInterpolatedVarArrayBase<Vector, false>::CInterpolationInfo*, float, float, int*)
 T CInterpolatedVarArrayBase<Vector, false>::GetType() const
 T CInterpolatedVarArrayBase<Vector, false>::Interpolate(float)
 T CInterpolatedVarArrayBase<Vector, false>::Interpolate(float, float)
 T CInterpolatedVarArrayBase<Vector, false>::NoteChanged(float, bool)
 T CInterpolatedVarArrayBase<Vector, false>::NoteChanged(float, float, bool)
 T CInterpolatedVarArrayBase<Vector, false>::NoteLastNetworkedValue()
 T CInterpolatedVarArrayBase<Vector, false>::Reset()
 T CInterpolatedVarArrayBase<Vector, false>::RestoreToLastNetworked()
 T CInterpolatedVarArrayBase<Vector, false>::SetDebug(bool)
 T CInterpolatedVarArrayBase<Vector, false>::SetDebugName(char const*)
 T CInterpolatedVarArrayBase<Vector, false>::SetInterpolationAmount(float)
 T CInterpolatedVarArrayBase<Vector, false>::SetMaxCount(int)
 T CInterpolatedVarArrayBase<Vector, false>::Setup(void*, int)
 T CInterpolatedVarArrayBase<Vector, false>::TimeFixup2_Hermite(CInterpolatedVarEntryBase<Vector, false>&, CInterpolatedVarEntryBase<Vector, false>*&, CInterpolatedVarEntryBase<Vector, false>*&, float)
 T CInterpolatedVarArrayBase<Vector, false>::_Derivative_Hermite_SmoothVelocity(Vector*, float, CInterpolatedVarEntryBase<Vector, false>*, CInterpolatedVarEntryBase<Vector, false>*, CInterpolatedVarEntryBase<Vector, false>*)
 T CInterpolatedVarArrayBase<Vector, false>::_Derivative_Linear(Vector*, CInterpolatedVarEntryBase<Vector, false>*, CInterpolatedVarEntryBase<Vector, false>*)
 T CInterpolatedVarArrayBase<Vector, false>::_Extrapolate(Vector*, CInterpolatedVarEntryBase<Vector, false>*, CInterpolatedVarEntryBase<Vector, false>*, float, float)
 T CInterpolatedVarArrayBase<Vector, false>::_Interpolate(Vector*, float, CInterpolatedVarEntryBase<Vector, false>*, CInterpolatedVarEntryBase<Vector, false>*)
 T CInterpolatedVarArrayBase<Vector, false>::_Interpolate_Hermite(Vector*, float, CInterpolatedVarEntryBase<Vector, false>*, CInterpolatedVarEntryBase<Vector, false>*, CInterpolatedVarEntryBase<Vector, false>*, bool)
 T CInterpolatedVarArrayBase<Vector, false>::~CInterpolatedVarArrayBase()
 T CInterpolatedVarArrayBase<Vector, true>::AddToHead(float, Vector const*, bool)
 T CInterpolatedVarArrayBase<Vector, true>::Copy(IInterpolatedVar*)
 T CInterpolatedVarArrayBase<Vector, true>::GetDebugName()
 T CInterpolatedVarArrayBase<Vector, true>::GetInterpolationInfo(CInterpolatedVarArrayBase<Vector, true>::CInterpolationInfo*, float, float, int*)
 T CInterpolatedVarArrayBase<Vector, true>::GetType() const
 T CInterpolatedVarArrayBase<Vector, true>::Interpolate(float)
 T CInterpolatedVarArrayBase<Vector, true>::Interpolate(float, float)
 T CInterpolatedVarArrayBase<Vector, true>::NoteChanged(float, bool)
 T CInterpolatedVarArrayBase<Vector, true>::NoteChanged(float, float, bool)
 T CInterpolatedVarArrayBase<Vector, true>::NoteLastNetworkedValue()
 T CInterpolatedVarArrayBase<Vector, true>::Reset()
 T CInterpolatedVarArrayBase<Vector, true>::RestoreToLastNetworked()
 T CInterpolatedVarArrayBase<Vector, true>::SetDebug(bool)
 T CInterpolatedVarArrayBase<Vector, true>::SetDebugName(char const*)
 T CInterpolatedVarArrayBase<Vector, true>::SetInterpolationAmount(float)
 T CInterpolatedVarArrayBase<Vector, true>::SetMaxCount(int)
 T CInterpolatedVarArrayBase<Vector, true>::Setup(void*, int)
 T CInterpolatedVarArrayBase<Vector, true>::TimeFixup2_Hermite(CInterpolatedVarEntryBase<Vector, true>&, CInterpolatedVarEntryBase<Vector, true>*&, CInterpolatedVarEntryBase<Vector, true>*&, float)
 T CInterpolatedVarArrayBase<Vector, true>::_Extrapolate(Vector*, CInterpolatedVarEntryBase<Vector, true>*, CInterpolatedVarEntryBase<Vector, true>*, float, float)
 T CInterpolatedVarArrayBase<Vector, true>::_Interpolate(Vector*, float, CInterpolatedVarEntryBase<Vector, true>*, CInterpolatedVarEntryBase<Vector, true>*)
 T CInterpolatedVarArrayBase<Vector, true>::_Interpolate_Hermite(Vector*, float, CInterpolatedVarEntryBase<Vector, true>*, CInterpolatedVarEntryBase<Vector, true>*, CInterpolatedVarEntryBase<Vector, true>*, bool)
 T CInterpolatedVarArrayBase<Vector, true>::~CInterpolatedVarArrayBase()
 T CInterpolatedVarArrayBase<float, false>::AddToHead(float, float const*, bool)
 T CInterpolatedVarArrayBase<float, false>::Copy(IInterpolatedVar*)
 T CInterpolatedVarArrayBase<float, false>::GetDebugName()
 T CInterpolatedVarArrayBase<float, false>::GetInterpolationInfo(CInterpolatedVarArrayBase<float, false>::CInterpolationInfo*, float, float, int*)
 T CInterpolatedVarArrayBase<float, false>::GetType() const
 T CInterpolatedVarArrayBase<float, false>::Interpolate(float)
 T CInterpolatedVarArrayBase<float, false>::Interpolate(float, float)
 T CInterpolatedVarArrayBase<float, false>::NoteChanged(float, bool)
 T CInterpolatedVarArrayBase<float, false>::NoteChanged(float, float, bool)
 T CInterpolatedVarArrayBase<float, false>::NoteLastNetworkedValue()
 T CInterpolatedVarArrayBase<float, false>::Reset()
 T CInterpolatedVarArrayBase<float, false>::RestoreToLastNetworked()
 T CInterpolatedVarArrayBase<float, false>::SetDebug(bool)
 T CInterpolatedVarArrayBase<float, false>::SetDebugName(char const*)
 T CInterpolatedVarArrayBase<float, false>::SetInterpolationAmount(float)
 T CInterpolatedVarArrayBase<float, false>::SetMaxCount(int)
 T CInterpolatedVarArrayBase<float, false>::Setup(void*, int)
 T CInterpolatedVarArrayBase<float, false>::TimeFixup2_Hermite(CInterpolatedVarEntryBase<float, false>&, CInterpolatedVarEntryBase<float, false>*&, CInterpolatedVarEntryBase<float, false>*&, float)
 T CInterpolatedVarArrayBase<float, false>::_Interpolate(float*, float, CInterpolatedVarEntryBase<float, false>*, CInterpolatedVarEntryBase<float, false>*)
 T CInterpolatedVarArrayBase<float, false>::_Interpolate_Hermite(float*, float, CInterpolatedVarEntryBase<float, false>*, CInterpolatedVarEntryBase<float, false>*, CInterpolatedVarEntryBase<float, false>*, bool)
 T CInterpolatedVarArrayBase<float, false>::~CInterpolatedVarArrayBase()
 T CInterpolatedVarArrayBase<float, true>::AddToHead(float, float const*, bool)
 T CInterpolatedVarArrayBase<float, true>::Copy(IInterpolatedVar*)
 T CInterpolatedVarArrayBase<float, true>::GetDebugName()
 T CInterpolatedVarArrayBase<float, true>::GetInterpolationInfo(CInterpolatedVarArrayBase<float, true>::CInterpolationInfo*, float, float, int*)
 T CInterpolatedVarArrayBase<float, true>::GetType() const
 T CInterpolatedVarArrayBase<float, true>::Interpolate(float)
 T CInterpolatedVarArrayBase<float, true>::Interpolate(float, float)
 T CInterpolatedVarArrayBase<float, true>::NoteChanged(float, bool)
 T CInterpolatedVarArrayBase<float, true>::NoteChanged(float, float, bool)
 T CInterpolatedVarArrayBase<float, true>::NoteLastNetworkedValue()
 T CInterpolatedVarArrayBase<float, true>::Reset()
 T CInterpolatedVarArrayBase<float, true>::RestoreToLastNetworked()
 T CInterpolatedVarArrayBase<float, true>::SetDebug(bool)
 T CInterpolatedVarArrayBase<float, true>::SetDebugName(char const*)
 T CInterpolatedVarArrayBase<float, true>::SetInterpolationAmount(float)
 T CInterpolatedVarArrayBase<float, true>::SetMaxCount(int)
 T CInterpolatedVarArrayBase<float, true>::Setup(void*, int)
 T CInterpolatedVarArrayBase<float, true>::TimeFixup2_Hermite(CInterpolatedVarEntryBase<float, true>&, CInterpolatedVarEntryBase<float, true>*&, CInterpolatedVarEntryBase<float, true>*&, float)
 T CInterpolatedVarArrayBase<float, true>::_Interpolate(float*, float, CInterpolatedVarEntryBase<float, true>*, CInterpolatedVarEntryBase<float, true>*)
 T CInterpolatedVarArrayBase<float, true>::_Interpolate_Hermite(float*, float, CInterpolatedVarEntryBase<float, true>*, CInterpolatedVarEntryBase<float, true>*, CInterpolatedVarEntryBase<float, true>*, bool)
 T CInterpolatedVarArrayBase<float, true>::~CInterpolatedVarArrayBase()
 T CJiggleBones::BuildJiggleTransformations(int, float, mstudiojigglebone_t const*, matrix3x4_t const&, matrix3x4_t&)
 T CJiggleBones::GetJiggleData(int, float, Vector const&, Vector const&)
 T CKeyBindingsMgr::AddPanelToContext(vgui::KeyBindingContextHandle_t, vgui::Panel*)
 T CKeyBindingsMgr::Find(vgui::KeyBindingContextHandle_t)
 T CKeyBindingsMgr::KeyBindingContextHandleLessFunc(CKeyBindingsMgr::KBContext_t const&, CKeyBindingsMgr::KBContext_t const&)
 T CKeyBindingsMgr::~CKeyBindingsMgr()
 T CKeyValuesErrorStack::ReportError(char const*)
 T CLCD::AddChatLine(char const*)
 T CLCD::BuildUpdatedText(char const*, CUtlString&)
 T CLCD::DoGlobalReplacements(CUtlString&)
 T CLCD::DumpPlayer()
 T CLCD::ExtractArrayIndex(char*, unsigned long, int*)
 T CLCD::Init()
 T CLCD::LookupToken(char const*, CUtlString&)
 T CLCD::ParseIconMappings(KeyValues*)
 T CLCD::ParseItemIcon(CLCDPage*, bool, KeyValues*)
 T CLCD::ParseItemText(CLCDPage*, bool, KeyValues*)
 T CLCD::ParseItems_R(CLCDPage*, bool, KeyValues*, CUtlVector<CLCDItem*, CUtlMemory<CLCDItem*, int> >&)
 T CLCD::ParsePage(KeyValues*)
 T CLCD::ReduceParentheses(CUtlString&)
 T CLCD::Replace(CUtlString&, char const*, char const*)
 T CLCD::SetGlobalStat(char const*, char const*)
 T CLCD::ShowItems_R(CLCDPage*, unsigned int, CUtlVector<CLCDItem*, CUtlMemory<CLCDItem*, int> >&, bool)
 T CLCD::Shutdown()
 T CLCD::Update()
 T CLCD::~CLCD()
 T CLCDItem::Wipe(IG15*)
 T CLCDItem::~CLCDItem()
 T CLCDItemAggregate::Create(IG15*)
 T CLCDItemAggregate::Wipe(IG15*)
 T CLCDItemAggregate::~CLCDItemAggregate()
 T CLCDItemIcon::CLCDItemIcon()
 T CLCDItemIcon::Create(IG15*)
 T CLCDItemIcon::~CLCDItemIcon()
 T CLCDItemText::Create(IG15*)
 T CLCDItemText::~CLCDItemText()
 T CLCDPage::Alloc(int)
 T CLCDPage::Create(IG15*)
 T CLCDPage::~CLCDPage()
 T CLampBeamProxy::GetMaterial()
 T CLampBeamProxy::Init(IMaterial*, KeyValues*)
 T CLampBeamProxy::OnBind(C_BaseEntity*)
 T CLampBeamProxy::~CLampBeamProxy()
 T CLampHaloProxy::GetMaterial()
 T CLampHaloProxy::Init(IMaterial*, KeyValues*)
 T CLampHaloProxy::OnBind(C_BaseEntity*)
 T CLampHaloProxy::~CLampHaloProxy()
 T CLessOrEqualProxy::Init(IMaterial*, KeyValues*)
 T CLessOrEqualProxy::OnBind(void*)
 T CLessOrEqualProxy::~CLessOrEqualProxy()
 T CLightmapDebugView::Draw()
 T CLightmapDebugView::~CLightmapDebugView()
 T CLinearRampProxy::Init(IMaterial*, KeyValues*)
 T CLinearRampProxy::OnBind(void*)
 T CLinearRampProxy::~CLinearRampProxy()
 T CLoadingDisc::Create(unsigned int)
 T CLoadingDisc::Destroy()
 T CLoadingDisc::SetLoadingVisible(bool)
 T CLoadingDisc::SetPausedVisible(bool)
 T CLoadingDiscPanel::ApplySchemeSettings(vgui::IScheme*)
 T CLoadingDiscPanel::CLoadingDiscPanel(unsigned int)
 T CLoadingDiscPanel::PaintBackground()
 T CLoadingDiscPanel::SetText(char const*)
 T CLoadingDiscPanel::~CLoadingDiscPanel()
 T CLocalPlayerFilter::CLocalPlayerFilter()
 T CLocalPlayerFilter::~CLocalPlayerFilter()
 T CLocalSpaceEmitter::Create(char const*, CBaseHandle, int, int)
 T CLocalSpaceEmitter::RenderParticles(CParticleRenderIterator*)
 T CLocalSpaceEmitter::SetupTransformMatrix()
 T CLocalSpaceEmitter::SimulateParticles(CParticleSimulateIterator*)
 T CLocalSpaceEmitter::Update(float)
 T CLocalSpaceEmitter::~CLocalSpaceEmitter()
 T CLuminanceHistogramSystem::DisplayHistogram()
 T CLuminanceHistogramSystem::FindLocationOfPercentBrightPixels(float, float)
 T CLuminanceHistogramSystem::GetTargetTonemapScalar(bool)
 T CLuminanceHistogramSystem::Update()
 T CLuminanceHistogramSystem::UpdateLuminanceRanges()
 T CMDL::CMDL()
 T CMDL::Draw(matrix3x4_t const&, matrix3x4_t const*)
 T CMDL::GetMDL() const
 T CMDL::GetStudioHdr()
 T CMDL::SetMDL(unsigned short)
 T CMDL::SetUpBones(matrix3x4_t const&, int, matrix3x4_t*, float const*, MDLSquenceLayer_t*, int)
 T CMDL::SetupBonesWithBoneMerge(CStudioHdr const*, matrix3x4_t*, CStudioHdr const*, matrix3x4_t const*, matrix3x4_t const&)
 T CMDL::~CMDL()
 T CMDLPanel::ApplySchemeSettings(vgui::IScheme*)
 T CMDLPanel::CMDLPanel(vgui::Panel*, char const*)
 T CMDLPanel::DoAnimationEvents()
 T CMDLPanel::DoAnimationEvents(CStudioHdr*, int, float, bool, MDLAnimEventState_t*)
 T CMDLPanel::DrawCollisionModel()
 T CMDLPanel::FireEvent(char const*, char const*)
 T CMDLPanel::GetAnimMap()
 T CMDLPanel::GetBoundingBox(Vector&, Vector&)
 T CMDLPanel::GetKBMap()
 T CMDLPanel::GetMessageMap()
 T CMDLPanel::GetPanelClassName()
 T CMDLPanel::OnMouseDoublePressed(ButtonCode_t)
 T CMDLPanel::OnPaint3D()
 T CMDLPanel::OnTick()
 T CMDLPanel::Paint()
 T CMDLPanel::PostPaint3D(IMatRenderContext*)
 T CMDLPanel::PrePaint3D(IMatRenderContext*)
 T CMDLPanel::RenderingMergedModel(IMatRenderContext*, CStudioHdr*, unsigned short, matrix3x4_t*)
 T CMDLPanel::RenderingRootModel(IMatRenderContext*, CStudioHdr*, unsigned short, matrix3x4_t*)
 T CMDLPanel::SetMDL(char const*, void*)
 T CMDLPanel::SetMDL(unsigned short, void*)
 T CMDLPanel::SetModelAnglesAndPosition(QAngle const&, Vector const&)
 T CMDLPanel::SetPoseParameterByName(char const*, float)
 T CMDLPanel::SetPoseParameters(float const*, int)
 T CMDLPanel::SetSequence(int)
 T CMDLPanel::SetupFlexWeights()
 T CMDLPanel::SetupRenderState(int, int)
 T CMDLPanel::UpdateStudioRenderConfig()
 T CMDLPanel::~CMDLPanel()
 T CManagedDataCacheClient<AsyncCaptionData_t, asynccaptionparams_t, AsyncCaptionData_t*>::HandleCacheNotification(DataCacheNotification_t const&)
 T CMatStubHandler::CMatStubHandler()
 T CMatStubHandler::End()
 T CMatStubHandler::~CMatStubHandler()
 T CMaterialModifyAnimatedProxy::AnimationWrapped(void*)
 T CMaterialModifyAnimatedProxy::GetAnimationStartTime(void*)
 T CMaterialModifyAnimatedProxy::Init(IMaterial*, KeyValues*)
 T CMaterialModifyAnimatedProxy::OnBind(void*)
 T CMaterialModifyAnimatedProxy::~CMaterialModifyAnimatedProxy()
 T CMaterialModifyProxy::AnimationWrapped(void*)
 T CMaterialModifyProxy::GetAnimationStartTime(void*)
 T CMaterialModifyProxy::GetMaterial()
 T CMaterialModifyProxy::Init(IMaterial*, KeyValues*)
 T CMaterialModifyProxy::OnBind(void*)
 T CMaterialModifyProxy::OnBindAnimatedTexture(C_MaterialModifyControl*)
 T CMaterialModifyProxy::OnBindFloatLerp(C_MaterialModifyControl*)
 T CMaterialModifyProxy::~CMaterialModifyProxy()
 T CMaterialReference::CMaterialReference(char const*, char const*, bool)
 T CMaterialReference::Init(CMaterialReference&)
 T CMaterialReference::Init(IMaterial*)
 T CMaterialReference::Init(char const*, KeyValues*)
 T CMaterialReference::Init(char const*, char const*, KeyValues*)
 T CMaterialReference::Init(char const*, char const*, bool)
 T CMaterialReference::Shutdown()
 T CMaterialReference::~CMaterialReference()
 T CMatrixRotateProxy::Init(IMaterial*, KeyValues*)
 T CMatrixRotateProxy::OnBind(void*)
 T CMatrixRotateProxy::~CMatrixRotateProxy()
 T CMemberFunctor0<CParallelProcessor<CNewParticleEffect*, CFuncJobItemProcessor<CNewParticleEffect*> >*, void (CParallelProcessor<CNewParticleEffect*, CFuncJobItemProcessor<CNewParticleEffect*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor0<CParallelProcessor<CNewParticleEffect*, CFuncJobItemProcessor<CNewParticleEffect*> >*, void (CParallelProcessor<CNewParticleEffect*, CFuncJobItemProcessor<CNewParticleEffect*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T CMemberFunctor0<CParallelProcessor<C_BaseAnimating*, CFuncJobItemProcessor<C_BaseAnimating*> >*, void (CParallelProcessor<C_BaseAnimating*, CFuncJobItemProcessor<C_BaseAnimating*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor0<CParallelProcessor<C_BaseAnimating*, CFuncJobItemProcessor<C_BaseAnimating*> >*, void (CParallelProcessor<C_BaseAnimating*, CFuncJobItemProcessor<C_BaseAnimating*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T CMemberFunctor6<CRopeManager*, void (CRopeManager::*)(bool, CRopeManager::RopeRenderData_t*, int, Vector const&, Vector const&, C_RopeKeyframe::BuildRopeQueuedData_t*), bool, CRopeManager::RopeRenderData_t*, int, Vector, Vector, C_RopeKeyframe::BuildRopeQueuedData_t*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::operator()()
 T CMemberFunctor6<CRopeManager*, void (CRopeManager::*)(bool, CRopeManager::RopeRenderData_t*, int, Vector const&, Vector const&, C_RopeKeyframe::BuildRopeQueuedData_t*), bool, CRopeManager::RopeRenderData_t*, int, Vector, Vector, C_RopeKeyframe::BuildRopeQueuedData_t*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor6()
 T CMemoryStack::CMemoryStack()
 T CMemoryStack::CommitTo(unsigned char*)
 T CMemoryStack::FreeAll(bool)
 T CMemoryStack::Init(unsigned int, unsigned int, unsigned int, unsigned int)
 T CMemoryStack::~CMemoryStack()
 T CMergeSameNameBbox<CFleckParticles>::MergeParticleSystems(CFleckParticles*, char const*, Vector const&, Vector const&)
 T CMeshBuilder::DrawQuad(IMesh*, float const*, float const*, float const*, float const*, unsigned char const*, bool)
 T CMessageChars::Clear()
 T CMessageChars::Create(unsigned int)
 T CMessageChars::Destroy()
 T CMessageChars::DrawString(unsigned long, int, int, char const*, int, ...)
 T CMessageChars::DrawString(unsigned long, int, int, int, int, int, int, char const*, int, ...)
 T CMessageChars::DrawStringForTime(float, unsigned long, int, int, char const*, int, ...)
 T CMessageChars::DrawStringForTime(float, unsigned long, int, int, int, int, int, int, char const*, int, ...)
 T CMessageChars::GetStringLength(unsigned long, int*, int*, char const*, ...)
 T CMessageChars::RemoveStringsByID(int)
 T CMessageCharsPanel::AddText(float, unsigned long, int, int, int, int, int, int, char*, int, ...)
 T CMessageCharsPanel::ApplySchemeSettings(vgui::IScheme*)
 T CMessageCharsPanel::CMessageCharsPanel(unsigned int)
 T CMessageCharsPanel::GetTextExtents(unsigned long, int*, int*, char const*)
 T CMessageCharsPanel::OnTick()
 T CMessageCharsPanel::Paint()
 T CMessageCharsPanel::ShouldDraw()
 T CMessageCharsPanel::~CMessageCharsPanel()
 T CModelPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CModelPanel::ApplySettings(KeyValues*)
 T CModelPanel::CModelPanel(vgui::Panel*, char const*)
 T CModelPanel::CalculateFrameDistanceInternal(model_t const*)
 T CModelPanel::DeleteModelData()
 T CModelPanel::DeleteVCDData()
 T CModelPanel::FireGameEvent(IGameEvent*)
 T CModelPanel::GetAnimMap()
 T CModelPanel::GetKBMap()
 T CModelPanel::GetMessageMap()
 T CModelPanel::GetModelName()
 T CModelPanel::GetPanelClassName()
 T CModelPanel::OnAddAnimation(KeyValues*)
 T CModelPanel::OnSetAnimation(KeyValues*)
 T CModelPanel::Paint()
 T CModelPanel::ParseModelInfo(KeyValues*)
 T CModelPanel::SetFOV(int)
 T CModelPanel::SetPanelDirty()
 T CModelPanel::SetSequence(char const*)
 T CModelPanel::SetupModel()
 T CModelPanel::SetupVCD()
 T CModelPanel::SwapModel(char const*, char const*)
 T CModelPanel::UpdateModel()
 T CModelPanel::ZoomToFrameDistance()
 T CModelPanel::~CModelPanel()
 T CModelPanelModel::IsMenuModel() const
 T CModelPanelModel::~CModelPanelModel()
 T CModelPanelModelAnimation::~CModelPanelModelAnimation()
 T CModelPanelModelInfo::~CModelPanelModelInfo()
 T CMotionBlurMaterialProxy::GetMaterial()
 T CMotionBlurMaterialProxy::Init(IMaterial*, KeyValues*)
 T CMotionBlurMaterialProxy::OnBind(C_BaseEntity*)
 T CMotionBlurMaterialProxy::~CMotionBlurMaterialProxy()
 T CMouthInfo::~CMouthInfo()
 T CMoveHelperClient::AddToTouched(CGameTrace const&, Vector const&)
 T CMoveHelperClient::Con_NPrintf(int, char const*, ...)
 T CMoveHelperClient::GetName(CBaseHandle) const
 T CMoveHelperClient::GetSurfaceProps()
 T CMoveHelperClient::IsWorldEntity(CBaseHandle const&)
 T CMoveHelperClient::PlaybackEventFull(int, int, unsigned short, float, Vector&, Vector&, float, float, int, int, int, int)
 T CMoveHelperClient::PlayerFallingDamage()
 T CMoveHelperClient::PlayerSetAnimation(PLAYER_ANIM)
 T CMoveHelperClient::ProcessImpacts()
 T CMoveHelperClient::ResetTouchList()
 T CMoveHelperClient::StartSound(Vector const&, char const*)
 T CMoveHelperClient::StartSound(Vector const&, int, char const*, float, soundlevel_t, int, int)
 T CMoveHelperClient::~CMoveHelperClient()
 T CMultiplyProxy::Init(IMaterial*, KeyValues*)
 T CMultiplyProxy::OnBind(void*)
 T CMultiplyProxy::~CMultiplyProxy()
 T CMumbleSystem::FireGameEvent(IGameEvent*)
 T CMumbleSystem::Init()
 T CMumbleSystem::LevelInitPostEntity()
 T CMumbleSystem::LevelShutdownPreEntity()
 T CMumbleSystem::PostRender()
 T CMumbleSystem::~CMumbleSystem()
 T CNavProgress::ApplySchemeSettings(vgui::IScheme*)
 T CNavProgress::CNavProgress(IViewPort*)
 T CNavProgress::GetAnimMap()
 T CNavProgress::GetKBMap()
 T CNavProgress::GetMessageMap()
 T CNavProgress::GetName()
 T CNavProgress::GetPanelClassName()
 T CNavProgress::GetVPanel()
 T CNavProgress::HasInputElements()
 T CNavProgress::IsVisible()
 T CNavProgress::NeedsUpdate()
 T CNavProgress::PerformLayout()
 T CNavProgress::Reset()
 T CNavProgress::SetData(KeyValues*)
 T CNavProgress::SetParent(unsigned int)
 T CNavProgress::ShowPanel(bool)
 T CNavProgress::Update()
 T CNavProgress::~CNavProgress()
 T CNetGraphPanel::ApplySchemeSettings(vgui::IScheme*)
 T CNetGraphPanel::CNetGraphPanel(unsigned int)
 T CNetGraphPanel::DrawHatches(int, int, int)
 T CNetGraphPanel::DrawLargePacketSizes(int, int, int, float)
 T CNetGraphPanel::DrawLine2(vrect_t*, unsigned char*, unsigned char*, unsigned char, unsigned char)
 T CNetGraphPanel::DrawLineSegments()
 T CNetGraphPanel::DrawStreamProgress(int, int, int)
 T CNetGraphPanel::DrawTextFields(int, int, int, int, CNetGraphPanel::netbandwidthgraph_t*, CNetGraphPanel::cmdinfo_t*)
 T CNetGraphPanel::DrawTimes(vrect_t, CNetGraphPanel::cmdinfo_t*, int, int, int)
 T CNetGraphPanel::GetFrameData(INetChannelInfo*, int*, float*, float*)
 T CNetGraphPanel::OnFontChanged()
 T CNetGraphPanel::OnTick()
 T CNetGraphPanel::Paint()
 T CNetGraphPanel::PaintLineArt(int, int, int, int, int)
 T CNetGraphPanel::ShouldDraw()
 T CNetGraphPanel::~CNetGraphPanel()
 T CNetGraphPanelInterface::Create(unsigned int)
 T CNetGraphPanelInterface::Destroy()
 T CNewParticleEffect::AddRef()
 T CNewParticleEffect::CNewParticleEffect(C_BaseEntity*, CParticleSystemDefinition*)
 T CNewParticleEffect::CNewParticleEffect(C_BaseEntity*, char const*)
 T CNewParticleEffect::Construct()
 T CNewParticleEffect::DebugDrawBbox(bool)
 T CNewParticleEffect::DetectChanges()
 T CNewParticleEffect::DrawModel(int)
 T CNewParticleEffect::GetEffectName()
 T CNewParticleEffect::GetRenderAngles()
 T CNewParticleEffect::GetRenderBounds(Vector&, Vector&)
 T CNewParticleEffect::GetRenderOrigin()
 T CNewParticleEffect::GetSortOrigin()
 T CNewParticleEffect::IsTransparent()
 T CNewParticleEffect::IsTwoPass()
 T CNewParticleEffect::NotifyRemove()
 T CNewParticleEffect::RecalculateBoundingBox()
 T CNewParticleEffect::RecordControlPointOrientation(int)
 T CNewParticleEffect::Release()
 T CNewParticleEffect::RenderParticles(CParticleRenderIterator*)
 T CNewParticleEffect::RenderableToWorldTransform()
 T CNewParticleEffect::ReplaceWith(char const*)
 T CNewParticleEffect::SetControlPoint(int, Vector const&)
 T CNewParticleEffect::SetControlPointEntity(int, C_BaseEntity*)
 T CNewParticleEffect::SetControlPointOrientation(int, Vector const&, Vector const&, Vector const&)
 T CNewParticleEffect::SetDormant(bool)
 T CNewParticleEffect::SetParticleCullRadius(float)
 T CNewParticleEffect::SetShouldSimulate(bool)
 T CNewParticleEffect::ShouldDraw()
 T CNewParticleEffect::ShouldSimulate() const
 T CNewParticleEffect::SimulateParticles(CParticleSimulateIterator*)
 T CNewParticleEffect::StopEmission(bool, bool, bool)
 T CNewParticleEffect::Update(float)
 T CNewParticleEffect::UsesFullFrameBufferTexture()
 T CNewParticleEffect::UsesPowerOfTwoFrameBufferTexture()
 T CNewParticleEffect::~CNewParticleEffect()
 T COM_GetModDirectory()
 T CObjectPool<ClientWorldListInfo_t, 0, true>::~CObjectPool()
 T CPASAttenuationFilter::~CPASAttenuationFilter()
 T CPASFilter::~CPASFilter()
 T CPDumpPanel::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CPDumpPanel::ApplySchemeSettings(vgui::IScheme*)
 T CPDumpPanel::ApplySettings(KeyValues*)
 T CPDumpPanel::CPDumpPanel(char const*)
 T CPDumpPanel::Clear()
 T CPDumpPanel::DumpComparision(char const*, char const*, char const*, bool, bool, bool, bool, char const*)
 T CPDumpPanel::DumpEntity(C_BaseEntity*, int)
 T CPDumpPanel::GetAnimMap()
 T CPDumpPanel::GetKBMap()
 T CPDumpPanel::GetMessageMap()
 T CPDumpPanel::GetPanelClassName()
 T CPDumpPanel::GetVar_m_FontBig(vgui::Panel*)
 T CPDumpPanel::GetVar_m_FontMedium(vgui::Panel*)
 T CPDumpPanel::GetVar_m_FontSmall(vgui::Panel*)
 T CPDumpPanel::Paint()
 T CPDumpPanel::ShouldDraw()
 T CPDumpPanel::~CPDumpPanel()
 T CPVSFilter::~CPVSFilter()
 T CPanelAnimationDictionary::FindOrAddPanelAnimationMap(char const*)
 T CPanelAnimationDictionary::PanelAnimationDumpVars(char const*)
 T CPanelAnimationDictionary::~CPanelAnimationDictionary()
 T CPanelFactory<CSlideshowDisplayScreen, VGuiScreenInitData_t>::Create(char const*, KeyValues*, void*, vgui::Panel*)
 T CPanelFactory<CTeleportCountdownScreen, VGuiScreenInitData_t>::Create(char const*, KeyValues*, void*, vgui::Panel*)
 T CPanelFactory<CVGuiScreenPanel, VGuiScreenInitData_t>::Create(char const*, KeyValues*, void*, vgui::Panel*)
 T CPanelKeyBindingMapDictionary::CPanelKeyBindingMapDictionary()
 T CPanelKeyBindingMapDictionary::FindOrAddPanelKeyBindingMap(char const*)
 T CPanelKeyBindingMapDictionary::~CPanelKeyBindingMapDictionary()
 T CPanelMessageMapDictionary::CPanelMessageMapDictionary()
 T CPanelMessageMapDictionary::FindOrAddPanelMessageMap(char const*)
 T CPanelMessageMapDictionary::~CPanelMessageMapDictionary()
 T CPanelMetaClassMgrImp::CreatePanelMetaClass(char const*, int, void*, vgui::Panel*, char const*)
 T CPanelMetaClassMgrImp::DestroyPanelMetaClass(vgui::Panel*)
 T CPanelMetaClassMgrImp::InstallPanelType(char const*, IPanelFactory*)
 T CPanelMetaClassMgrImp::LoadMetaClassDefinitionFile(char const*)
 T CPanelMetaClassMgrImp::ParseSingleMetaClass(char const*, char const*, KeyValues*, int)
 T CPanelMetaClassMgrImp::~CPanelMetaClassMgrImp()
 T CPanelWrapper::Activate(char const*, vgui::Panel*, int, void*)
 T CPanelWrapper::CPanelWrapper()
 T CPanelWrapper::Deactivate()
 T CPanelWrapper::GetPanel()
 T CPanelWrapper::~CPanelWrapper()
 T CParallelProcessor<CNewParticleEffect*, CFuncJobItemProcessor<CNewParticleEffect*> >::DoExecute()
 T CParallelProcessor<CNewParticleEffect*, CFuncJobItemProcessor<CNewParticleEffect*> >::Run(CNewParticleEffect**, unsigned int, int, IThreadPool*)
 T CParallelProcessor<C_BaseAnimating*, CFuncJobItemProcessor<C_BaseAnimating*> >::DoExecute()
 T CParallelProcessor<C_BaseAnimating*, CFuncJobItemProcessor<C_BaseAnimating*> >::Run(C_BaseAnimating**, unsigned int, int, IThreadPool*)
 T CParticleAttractor::Create(Vector const&, char const*)
 T CParticleAttractor::SetAttractorOrigin(Vector const&)
 T CParticleAttractor::UpdateAlpha(SimpleParticle const*)
 T CParticleAttractor::UpdateScale(SimpleParticle const*)
 T CParticleAttractor::UpdateVelocity(SimpleParticle*, float)
 T CParticleAttractor::~CParticleAttractor()
 T CParticleCollection::BloatBoundsUsingControlPoint()
 T CParticleCollection::CParticleCollection()
 T CParticleCollection::CalculatePathValues(CPathParameters const&, float, Vector*, Vector*, Vector*)
 T CParticleCollection::CheckIfOperatorShouldRun(CParticleOperatorInstance const*, float*)
 T CParticleCollection::ContainsOpaqueCollections()
 T CParticleCollection::CopyInitialAttributeValues(int, int)
 T CParticleCollection::GenerateSortedIndexList(Vector, CParticleVisibilityData*, bool)
 T CParticleCollection::GetBounds(Vector*, Vector*)
 T CParticleCollection::GetControlPointAtPrevTime(int, Vector*)
 T CParticleCollection::GetControlPointAtTime(int, float, Vector*)
 T CParticleCollection::GetControlPointOrientationAtTime(int, float, Vector*, Vector*, Vector*)
 T CParticleCollection::GetControlPointTransformAtCurrentTime(int, VMatrix*)
 T CParticleCollection::GetControlPointTransformAtCurrentTime(int, matrix3x4_t*)
 T CParticleCollection::GetControlPointTransformAtTime(int, float, CParticleSIMDTransformation*)
 T CParticleCollection::GetControlPointTransformAtTime(int, float, matrix3x4_t*)
 T CParticleCollection::GetHighestControlPoint() const
 T CParticleCollection::GetName() const
 T CParticleCollection::GetRenderList(IMatRenderContext*, bool, int*, CParticleVisibilityData*)
 T CParticleCollection::Init(CParticleSystemDefinition*)
 T CParticleCollection::Init(CParticleSystemDefinition*, float, int)
 T CParticleCollection::Init(char const*)
 T CParticleCollection::InitParticleAttributes(int, int, int)
 T CParticleCollection::InitStorage(CParticleSystemDefinition*)
 T CParticleCollection::InitializeNewParticles(int, int, unsigned int)
 T CParticleCollection::IsFinished()
 T CParticleCollection::IsTranslucent() const
 T CParticleCollection::IsTwoPass() const
 T CParticleCollection::LabelTextureUsage()
 T CParticleCollection::MoveParticle(int, int)
 T CParticleCollection::RandomVectorInUnitSphere(int, Vector*)
 T CParticleCollection::RecomputeBounds()
 T CParticleCollection::Render(IMatRenderContext*, bool, void*)
 T CParticleCollection::Restart()
 T CParticleCollection::SetControlPoint(int, Vector const&)
 T CParticleCollection::SetControlPointForwardVector(int, Vector const&)
 T CParticleCollection::SetControlPointObject(int, void*)
 T CParticleCollection::SetControlPointOrientation(int, Vector const&, Vector const&, Vector const&)
 T CParticleCollection::SetControlPointParent(int, int)
 T CParticleCollection::SetDormant(bool)
 T CParticleCollection::Simulate(float)
 T CParticleCollection::SimulateFirstFrame()
 T CParticleCollection::SkipToTime(float)
 T CParticleCollection::StartEmission(bool)
 T CParticleCollection::StopEmission(bool, bool, bool)
 T CParticleCollection::SystemContainsParticlesWithBoolSet(bool CParticleCollection::*) const
 T CParticleCollection::UpdateHitBoxInfo(int)
 T CParticleCollection::UsesFullFrameBufferTexture(bool) const
 T CParticleCollection::UsesPowerOfTwoFrameBufferTexture(bool) const
 T CParticleCollection::operator delete(void*)
 T CParticleCollection::operator new(unsigned long)
 T CParticleCollection::~CParticleCollection()
 T CParticleCollision::CParticleCollision()
 T CParticleCollision::MoveParticle(Vector&, Vector&, float*, float, CGameTrace*)
 T CParticleCollision::Setup(Vector const&, Vector const*, float, float, float, float, float)
 T CParticleEffect::AddParticle(unsigned int, CParticleSubTexture*, Vector const&)
 T CParticleEffect::AddRef()
 T CParticleEffect::CParticleEffect(char const*)
 T CParticleEffect::GetEffectName()
 T CParticleEffect::GetPMaterial(char const*)
 T CParticleEffect::GetSortOrigin()
 T CParticleEffect::NotifyDestroyParticle(Particle*)
 T CParticleEffect::NotifyRemove()
 T CParticleEffect::Release()
 T CParticleEffect::SetDynamicallyAllocated(bool)
 T CParticleEffect::SetParticleCullRadius(float)
 T CParticleEffect::SetShouldSimulate(bool)
 T CParticleEffect::SetSortOrigin(Vector const&)
 T CParticleEffect::ShouldSimulate() const
 T CParticleEffect::Update(float)
 T CParticleEffect::~CParticleEffect()
 T CParticleEffectBinding::AddParticle(int, CParticleSubTexture*)
 T CParticleEffectBinding::BBoxCalcEnd(bool, Vector&, Vector&)
 T CParticleEffectBinding::CParticleEffectBinding()
 T CParticleEffectBinding::DetectChanges()
 T CParticleEffectBinding::DoBucketSort(CEffectMaterial*, float*, int, float, float)
 T CParticleEffectBinding::DrawMaterialParticles(bool, CEffectMaterial*, float, bool)
 T CParticleEffectBinding::DrawModel(int)
 T CParticleEffectBinding::EnlargeBBoxToContain(Vector const&)
 T CParticleEffectBinding::FindOrAddMaterial(char const*)
 T CParticleEffectBinding::GetActiveParticleList(int, Particle**)
 T CParticleEffectBinding::GetEffectMaterial(CParticleSubTexture*)
 T CParticleEffectBinding::GetNumActiveParticles()
 T CParticleEffectBinding::GetRenderAngles()
 T CParticleEffectBinding::GetRenderBounds(Vector&, Vector&)
 T CParticleEffectBinding::GetRenderOrigin()
 T CParticleEffectBinding::GetWorldspaceBounds(Vector*, Vector*)
 T CParticleEffectBinding::GrowBBoxFromParticlePositions(CEffectMaterial*, bool&, Vector&, Vector&)
 T CParticleEffectBinding::IsTransparent()
 T CParticleEffectBinding::RecalculateBoundingBox()
 T CParticleEffectBinding::RemoveParticle(Particle*)
 T CParticleEffectBinding::RenderEnd(VMatrix&, VMatrix&)
 T CParticleEffectBinding::RenderStart(VMatrix&, VMatrix&)
 T CParticleEffectBinding::RenderableToWorldTransform()
 T CParticleEffectBinding::SetBBox(Vector const&, Vector const&, bool)
 T CParticleEffectBinding::SetDrawBeforeViewModel(int)
 T CParticleEffectBinding::SetDrawThruLeafSystem(int)
 T CParticleEffectBinding::SetLocalSpaceTransform(matrix3x4_t const&)
 T CParticleEffectBinding::SetParticleCullRadius(float)
 T CParticleEffectBinding::ShouldDraw()
 T CParticleEffectBinding::SimulateParticles(float)
 T CParticleEffectBinding::StartDrawMaterialParticles(CEffectMaterial*, float, IMesh*&, CMeshBuilder&, ParticleDraw&, bool)
 T CParticleEffectBinding::Term()
 T CParticleEffectBinding::~CParticleEffectBinding()
 T CParticleMgr::AddEffect(CNewParticleEffect*)
 T CParticleMgr::AddEffect(CParticleEffectBinding*, IParticleEffect*)
 T CParticleMgr::BuildParticleSimList(CUtlVector<CNewParticleEffect*, CUtlMemory<CNewParticleEffect*, int> >&)
 T CParticleMgr::ComputeParticleDefScreenArea(int, CParticleMgr::RetireInfo_t*, float*, CParticleSystemDefinition*, CViewSetup const&, VMatrix const&, float)
 T CParticleMgr::EarlyRetireParticleSystems(int, CNewParticleEffect**)
 T CParticleMgr::FindOrAddSubTextureGroup(IMaterial*)
 T CParticleMgr::GetDirectionalLightInfo(CParticleLightInfo&) const
 T CParticleMgr::GetPMaterial(char const*)
 T CParticleMgr::IncrementFrameCode()
 T CParticleMgr::Init(unsigned long, IMaterialSystem*)
 T CParticleMgr::LevelInit()
 T CParticleMgr::PMaterialToIMaterial(CParticleSubTexture*)
 T CParticleMgr::PostRender()
 T CParticleMgr::RegisterEffect(char const*, IParticleEffect* (*)())
 T CParticleMgr::RemoveAllEffects()
 T CParticleMgr::RemoveAllNewEffects()
 T CParticleMgr::RemoveEffect(CNewParticleEffect*)
 T CParticleMgr::RemoveEffect(CParticleEffectBinding*)
 T CParticleMgr::RenderParticleSystems(bool)
 T CParticleMgr::RepairPMaterial(CParticleSubTexture*)
 T CParticleMgr::RetireParticleCollections(CParticleSystemDefinition*, int, CParticleMgr::RetireInfo_t*, float, float)
 T CParticleMgr::RetireSort(void const*, void const*)
 T CParticleMgr::SetDirectionalLightInfo(CParticleLightInfo const&)
 T CParticleMgr::ShouldRenderParticleSystems() const
 T CParticleMgr::Simulate(float)
 T CParticleMgr::StatsNewParticleEffectDrawn(CNewParticleEffect*)
 T CParticleMgr::Term()
 T CParticleMgr::UpdateAllEffects(float)
 T CParticleMgr::UpdateNewEffects(float)
 T CParticleMgr::~CParticleMgr()
 T CParticleOperatorDefinition<C_INIT_AgeNoise>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_AgeNoise>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_AgeNoise>::GetId() const
 T CParticleOperatorDefinition<C_INIT_AgeNoise>::GetName() const
 T CParticleOperatorDefinition<C_INIT_AgeNoise>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_AgeNoise>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_CreateAlongPath>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_CreateAlongPath>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_CreateAlongPath>::GetId() const
 T CParticleOperatorDefinition<C_INIT_CreateAlongPath>::GetName() const
 T CParticleOperatorDefinition<C_INIT_CreateAlongPath>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_CreateAlongPath>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_CreateFromParentParticles>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_CreateFromParentParticles>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_CreateFromParentParticles>::GetId() const
 T CParticleOperatorDefinition<C_INIT_CreateFromParentParticles>::GetName() const
 T CParticleOperatorDefinition<C_INIT_CreateFromParentParticles>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_CreateFromParentParticles>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_CreateFromPlaneCache>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_CreateFromPlaneCache>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_CreateFromPlaneCache>::GetId() const
 T CParticleOperatorDefinition<C_INIT_CreateFromPlaneCache>::GetName() const
 T CParticleOperatorDefinition<C_INIT_CreateFromPlaneCache>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_CreateFromPlaneCache>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_CreateInHierarchy>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_CreateInHierarchy>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_CreateInHierarchy>::GetId() const
 T CParticleOperatorDefinition<C_INIT_CreateInHierarchy>::GetName() const
 T CParticleOperatorDefinition<C_INIT_CreateInHierarchy>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_CreateInHierarchy>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_CreateOnModel>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_CreateOnModel>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_CreateOnModel>::GetId() const
 T CParticleOperatorDefinition<C_INIT_CreateOnModel>::GetName() const
 T CParticleOperatorDefinition<C_INIT_CreateOnModel>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_CreateOnModel>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_CreateSequentialPath>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_CreateSequentialPath>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_CreateSequentialPath>::GetId() const
 T CParticleOperatorDefinition<C_INIT_CreateSequentialPath>::GetName() const
 T CParticleOperatorDefinition<C_INIT_CreateSequentialPath>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_CreateSequentialPath>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_CreateWithinBox>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_CreateWithinBox>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_CreateWithinBox>::GetId() const
 T CParticleOperatorDefinition<C_INIT_CreateWithinBox>::GetName() const
 T CParticleOperatorDefinition<C_INIT_CreateWithinBox>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_CreateWithinBox>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_CreateWithinSphere>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_CreateWithinSphere>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_CreateWithinSphere>::GetId() const
 T CParticleOperatorDefinition<C_INIT_CreateWithinSphere>::GetName() const
 T CParticleOperatorDefinition<C_INIT_CreateWithinSphere>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_CreateWithinSphere>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_CreationNoise>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_CreationNoise>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_CreationNoise>::GetId() const
 T CParticleOperatorDefinition<C_INIT_CreationNoise>::GetName() const
 T CParticleOperatorDefinition<C_INIT_CreationNoise>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_CreationNoise>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_DistanceToCPInit>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_DistanceToCPInit>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_DistanceToCPInit>::GetId() const
 T CParticleOperatorDefinition<C_INIT_DistanceToCPInit>::GetName() const
 T CParticleOperatorDefinition<C_INIT_DistanceToCPInit>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_DistanceToCPInit>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_InheritVelocity>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_InheritVelocity>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_InheritVelocity>::GetId() const
 T CParticleOperatorDefinition<C_INIT_InheritVelocity>::GetName() const
 T CParticleOperatorDefinition<C_INIT_InheritVelocity>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_InheritVelocity>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_InitialRepulsionVelocity>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_InitialRepulsionVelocity>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_InitialRepulsionVelocity>::GetId() const
 T CParticleOperatorDefinition<C_INIT_InitialRepulsionVelocity>::GetName() const
 T CParticleOperatorDefinition<C_INIT_InitialRepulsionVelocity>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_InitialRepulsionVelocity>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_InitialVelocityNoise>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_InitialVelocityNoise>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_InitialVelocityNoise>::GetId() const
 T CParticleOperatorDefinition<C_INIT_InitialVelocityNoise>::GetName() const
 T CParticleOperatorDefinition<C_INIT_InitialVelocityNoise>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_InitialVelocityNoise>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_LifespanFromVelocity>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_LifespanFromVelocity>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_LifespanFromVelocity>::GetId() const
 T CParticleOperatorDefinition<C_INIT_LifespanFromVelocity>::GetName() const
 T CParticleOperatorDefinition<C_INIT_LifespanFromVelocity>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_LifespanFromVelocity>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_MoveBetweenPoints>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_MoveBetweenPoints>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_MoveBetweenPoints>::GetId() const
 T CParticleOperatorDefinition<C_INIT_MoveBetweenPoints>::GetName() const
 T CParticleOperatorDefinition<C_INIT_MoveBetweenPoints>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_MoveBetweenPoints>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_PositionOffset>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_PositionOffset>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_PositionOffset>::GetId() const
 T CParticleOperatorDefinition<C_INIT_PositionOffset>::GetName() const
 T CParticleOperatorDefinition<C_INIT_PositionOffset>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_PositionOffset>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_PositionWarp>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_PositionWarp>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_PositionWarp>::GetId() const
 T CParticleOperatorDefinition<C_INIT_PositionWarp>::GetName() const
 T CParticleOperatorDefinition<C_INIT_PositionWarp>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_PositionWarp>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_RandomAlpha>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_RandomAlpha>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_RandomAlpha>::GetId() const
 T CParticleOperatorDefinition<C_INIT_RandomAlpha>::GetName() const
 T CParticleOperatorDefinition<C_INIT_RandomAlpha>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_RandomAlpha>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_RandomColor>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_RandomColor>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_RandomColor>::GetId() const
 T CParticleOperatorDefinition<C_INIT_RandomColor>::GetName() const
 T CParticleOperatorDefinition<C_INIT_RandomColor>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_RandomColor>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_RandomLifeTime>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_RandomLifeTime>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_RandomLifeTime>::GetId() const
 T CParticleOperatorDefinition<C_INIT_RandomLifeTime>::GetName() const
 T CParticleOperatorDefinition<C_INIT_RandomLifeTime>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_RandomLifeTime>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_RandomRadius>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_RandomRadius>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_RandomRadius>::GetId() const
 T CParticleOperatorDefinition<C_INIT_RandomRadius>::GetName() const
 T CParticleOperatorDefinition<C_INIT_RandomRadius>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_RandomRadius>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_RandomRotation>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_RandomRotation>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_RandomRotation>::GetId() const
 T CParticleOperatorDefinition<C_INIT_RandomRotation>::GetName() const
 T CParticleOperatorDefinition<C_INIT_RandomRotation>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_RandomRotation>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_RandomRotationSpeed>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_RandomRotationSpeed>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_RandomRotationSpeed>::GetId() const
 T CParticleOperatorDefinition<C_INIT_RandomRotationSpeed>::GetName() const
 T CParticleOperatorDefinition<C_INIT_RandomRotationSpeed>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_RandomRotationSpeed>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_RandomSecondSequence>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_RandomSecondSequence>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_RandomSecondSequence>::GetId() const
 T CParticleOperatorDefinition<C_INIT_RandomSecondSequence>::GetName() const
 T CParticleOperatorDefinition<C_INIT_RandomSecondSequence>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_RandomSecondSequence>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_RandomSequence>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_RandomSequence>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_RandomSequence>::GetId() const
 T CParticleOperatorDefinition<C_INIT_RandomSequence>::GetName() const
 T CParticleOperatorDefinition<C_INIT_RandomSequence>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_RandomSequence>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_RandomTrailLength>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_RandomTrailLength>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_RandomTrailLength>::GetId() const
 T CParticleOperatorDefinition<C_INIT_RandomTrailLength>::GetName() const
 T CParticleOperatorDefinition<C_INIT_RandomTrailLength>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_RandomTrailLength>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_RandomYaw>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_RandomYaw>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_RandomYaw>::GetId() const
 T CParticleOperatorDefinition<C_INIT_RandomYaw>::GetName() const
 T CParticleOperatorDefinition<C_INIT_RandomYaw>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_RandomYaw>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_RandomYawFlip>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_RandomYawFlip>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_RandomYawFlip>::GetId() const
 T CParticleOperatorDefinition<C_INIT_RandomYawFlip>::GetName() const
 T CParticleOperatorDefinition<C_INIT_RandomYawFlip>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_RandomYawFlip>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_RemapCPtoScalar>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_RemapCPtoScalar>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_RemapCPtoScalar>::GetId() const
 T CParticleOperatorDefinition<C_INIT_RemapCPtoScalar>::GetName() const
 T CParticleOperatorDefinition<C_INIT_RemapCPtoScalar>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_RemapCPtoScalar>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_RemapCPtoVector>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_RemapCPtoVector>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_RemapCPtoVector>::GetId() const
 T CParticleOperatorDefinition<C_INIT_RemapCPtoVector>::GetName() const
 T CParticleOperatorDefinition<C_INIT_RemapCPtoVector>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_RemapCPtoVector>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_RemapScalar>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_RemapScalar>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_RemapScalar>::GetId() const
 T CParticleOperatorDefinition<C_INIT_RemapScalar>::GetName() const
 T CParticleOperatorDefinition<C_INIT_RemapScalar>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_RemapScalar>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_RemapScalarToVector>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_RemapScalarToVector>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_RemapScalarToVector>::GetId() const
 T CParticleOperatorDefinition<C_INIT_RemapScalarToVector>::GetName() const
 T CParticleOperatorDefinition<C_INIT_RemapScalarToVector>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_RemapScalarToVector>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_SequenceLifeTime>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_SequenceLifeTime>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_SequenceLifeTime>::GetId() const
 T CParticleOperatorDefinition<C_INIT_SequenceLifeTime>::GetName() const
 T CParticleOperatorDefinition<C_INIT_SequenceLifeTime>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_SequenceLifeTime>::IsObsolete() const
 T CParticleOperatorDefinition<C_INIT_VelocityRandom>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_INIT_VelocityRandom>::GetClassSize() const
 T CParticleOperatorDefinition<C_INIT_VelocityRandom>::GetId() const
 T CParticleOperatorDefinition<C_INIT_VelocityRandom>::GetName() const
 T CParticleOperatorDefinition<C_INIT_VelocityRandom>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_INIT_VelocityRandom>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_AttractToControlPoint>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_AttractToControlPoint>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_AttractToControlPoint>::GetId() const
 T CParticleOperatorDefinition<C_OP_AttractToControlPoint>::GetName() const
 T CParticleOperatorDefinition<C_OP_AttractToControlPoint>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_AttractToControlPoint>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_BasicMovement>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_BasicMovement>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_BasicMovement>::GetId() const
 T CParticleOperatorDefinition<C_OP_BasicMovement>::GetName() const
 T CParticleOperatorDefinition<C_OP_BasicMovement>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_BasicMovement>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_ColorInterpolate>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_ColorInterpolate>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_ColorInterpolate>::GetId() const
 T CParticleOperatorDefinition<C_OP_ColorInterpolate>::GetName() const
 T CParticleOperatorDefinition<C_OP_ColorInterpolate>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_ColorInterpolate>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_ConstrainDistance>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_ConstrainDistance>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_ConstrainDistance>::GetId() const
 T CParticleOperatorDefinition<C_OP_ConstrainDistance>::GetName() const
 T CParticleOperatorDefinition<C_OP_ConstrainDistance>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_ConstrainDistance>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_ConstrainDistanceToPath>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_ConstrainDistanceToPath>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_ConstrainDistanceToPath>::GetId() const
 T CParticleOperatorDefinition<C_OP_ConstrainDistanceToPath>::GetName() const
 T CParticleOperatorDefinition<C_OP_ConstrainDistanceToPath>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_ConstrainDistanceToPath>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_ContinuousEmitter>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_ContinuousEmitter>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_ContinuousEmitter>::GetId() const
 T CParticleOperatorDefinition<C_OP_ContinuousEmitter>::GetName() const
 T CParticleOperatorDefinition<C_OP_ContinuousEmitter>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_ContinuousEmitter>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_ControlpointLight>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_ControlpointLight>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_ControlpointLight>::GetId() const
 T CParticleOperatorDefinition<C_OP_ControlpointLight>::GetName() const
 T CParticleOperatorDefinition<C_OP_ControlpointLight>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_ControlpointLight>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_Cull>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_Cull>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_Cull>::GetId() const
 T CParticleOperatorDefinition<C_OP_Cull>::GetName() const
 T CParticleOperatorDefinition<C_OP_Cull>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_Cull>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_DampenToCP>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_DampenToCP>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_DampenToCP>::GetId() const
 T CParticleOperatorDefinition<C_OP_DampenToCP>::GetName() const
 T CParticleOperatorDefinition<C_OP_DampenToCP>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_DampenToCP>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_Decay>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_Decay>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_Decay>::GetId() const
 T CParticleOperatorDefinition<C_OP_Decay>::GetName() const
 T CParticleOperatorDefinition<C_OP_Decay>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_Decay>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_DistanceBetweenCPs>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_DistanceBetweenCPs>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_DistanceBetweenCPs>::GetId() const
 T CParticleOperatorDefinition<C_OP_DistanceBetweenCPs>::GetName() const
 T CParticleOperatorDefinition<C_OP_DistanceBetweenCPs>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_DistanceBetweenCPs>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_DistanceToCP>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_DistanceToCP>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_DistanceToCP>::GetId() const
 T CParticleOperatorDefinition<C_OP_DistanceToCP>::GetName() const
 T CParticleOperatorDefinition<C_OP_DistanceToCP>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_DistanceToCP>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_FadeAndKill>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_FadeAndKill>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_FadeAndKill>::GetId() const
 T CParticleOperatorDefinition<C_OP_FadeAndKill>::GetName() const
 T CParticleOperatorDefinition<C_OP_FadeAndKill>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_FadeAndKill>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_FadeIn>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_FadeIn>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_FadeIn>::GetId() const
 T CParticleOperatorDefinition<C_OP_FadeIn>::GetName() const
 T CParticleOperatorDefinition<C_OP_FadeIn>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_FadeIn>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_FadeOut>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_FadeOut>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_FadeOut>::GetId() const
 T CParticleOperatorDefinition<C_OP_FadeOut>::GetName() const
 T CParticleOperatorDefinition<C_OP_FadeOut>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_FadeOut>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_InstantaneousEmitter>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_InstantaneousEmitter>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_InstantaneousEmitter>::GetId() const
 T CParticleOperatorDefinition<C_OP_InstantaneousEmitter>::GetName() const
 T CParticleOperatorDefinition<C_OP_InstantaneousEmitter>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_InstantaneousEmitter>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_InterpolateRadius>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_InterpolateRadius>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_InterpolateRadius>::GetId() const
 T CParticleOperatorDefinition<C_OP_InterpolateRadius>::GetName() const
 T CParticleOperatorDefinition<C_OP_InterpolateRadius>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_InterpolateRadius>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_LockToBone>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_LockToBone>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_LockToBone>::GetId() const
 T CParticleOperatorDefinition<C_OP_LockToBone>::GetName() const
 T CParticleOperatorDefinition<C_OP_LockToBone>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_LockToBone>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_MaintainSequentialPath>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_MaintainSequentialPath>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_MaintainSequentialPath>::GetId() const
 T CParticleOperatorDefinition<C_OP_MaintainSequentialPath>::GetName() const
 T CParticleOperatorDefinition<C_OP_MaintainSequentialPath>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_MaintainSequentialPath>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_MaxVelocity>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_MaxVelocity>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_MaxVelocity>::GetId() const
 T CParticleOperatorDefinition<C_OP_MaxVelocity>::GetName() const
 T CParticleOperatorDefinition<C_OP_MaxVelocity>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_MaxVelocity>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_ModelCull>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_ModelCull>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_ModelCull>::GetId() const
 T CParticleOperatorDefinition<C_OP_ModelCull>::GetName() const
 T CParticleOperatorDefinition<C_OP_ModelCull>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_ModelCull>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_MovementRotateParticleAroundAxis>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_MovementRotateParticleAroundAxis>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_MovementRotateParticleAroundAxis>::GetId() const
 T CParticleOperatorDefinition<C_OP_MovementRotateParticleAroundAxis>::GetName() const
 T CParticleOperatorDefinition<C_OP_MovementRotateParticleAroundAxis>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_MovementRotateParticleAroundAxis>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_Noise>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_Noise>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_Noise>::GetId() const
 T CParticleOperatorDefinition<C_OP_Noise>::GetName() const
 T CParticleOperatorDefinition<C_OP_Noise>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_Noise>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_NoiseEmitter>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_NoiseEmitter>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_NoiseEmitter>::GetId() const
 T CParticleOperatorDefinition<C_OP_NoiseEmitter>::GetName() const
 T CParticleOperatorDefinition<C_OP_NoiseEmitter>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_NoiseEmitter>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_Orient2DRelToCP>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_Orient2DRelToCP>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_Orient2DRelToCP>::GetId() const
 T CParticleOperatorDefinition<C_OP_Orient2DRelToCP>::GetName() const
 T CParticleOperatorDefinition<C_OP_Orient2DRelToCP>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_Orient2DRelToCP>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_OrientTo2dDirection>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_OrientTo2dDirection>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_OrientTo2dDirection>::GetId() const
 T CParticleOperatorDefinition<C_OP_OrientTo2dDirection>::GetName() const
 T CParticleOperatorDefinition<C_OP_OrientTo2dDirection>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_OrientTo2dDirection>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_OscillateScalar>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_OscillateScalar>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_OscillateScalar>::GetId() const
 T CParticleOperatorDefinition<C_OP_OscillateScalar>::GetName() const
 T CParticleOperatorDefinition<C_OP_OscillateScalar>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_OscillateScalar>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_OscillateVector>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_OscillateVector>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_OscillateVector>::GetId() const
 T CParticleOperatorDefinition<C_OP_OscillateVector>::GetName() const
 T CParticleOperatorDefinition<C_OP_OscillateVector>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_OscillateVector>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_PerParticleEmitter>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_PerParticleEmitter>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_PerParticleEmitter>::GetId() const
 T CParticleOperatorDefinition<C_OP_PerParticleEmitter>::GetName() const
 T CParticleOperatorDefinition<C_OP_PerParticleEmitter>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_PerParticleEmitter>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_PlanarConstraint>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_PlanarConstraint>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_PlanarConstraint>::GetId() const
 T CParticleOperatorDefinition<C_OP_PlanarConstraint>::GetName() const
 T CParticleOperatorDefinition<C_OP_PlanarConstraint>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_PlanarConstraint>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_PlaneCull>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_PlaneCull>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_PlaneCull>::GetId() const
 T CParticleOperatorDefinition<C_OP_PlaneCull>::GetName() const
 T CParticleOperatorDefinition<C_OP_PlaneCull>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_PlaneCull>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_PositionLock>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_PositionLock>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_PositionLock>::GetId() const
 T CParticleOperatorDefinition<C_OP_PositionLock>::GetName() const
 T CParticleOperatorDefinition<C_OP_PositionLock>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_PositionLock>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_RandomForce>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_RandomForce>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_RandomForce>::GetId() const
 T CParticleOperatorDefinition<C_OP_RandomForce>::GetName() const
 T CParticleOperatorDefinition<C_OP_RandomForce>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_RandomForce>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_RemapCPtoScalar>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_RemapCPtoScalar>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_RemapCPtoScalar>::GetId() const
 T CParticleOperatorDefinition<C_OP_RemapCPtoScalar>::GetName() const
 T CParticleOperatorDefinition<C_OP_RemapCPtoScalar>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_RemapCPtoScalar>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_RemapDotProductToScalar>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_RemapDotProductToScalar>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_RemapDotProductToScalar>::GetId() const
 T CParticleOperatorDefinition<C_OP_RemapDotProductToScalar>::GetName() const
 T CParticleOperatorDefinition<C_OP_RemapDotProductToScalar>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_RemapDotProductToScalar>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_RemapScalar>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_RemapScalar>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_RemapScalar>::GetId() const
 T CParticleOperatorDefinition<C_OP_RemapScalar>::GetName() const
 T CParticleOperatorDefinition<C_OP_RemapScalar>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_RemapScalar>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_RemapSpeedtoCP>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_RemapSpeedtoCP>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_RemapSpeedtoCP>::GetId() const
 T CParticleOperatorDefinition<C_OP_RemapSpeedtoCP>::GetName() const
 T CParticleOperatorDefinition<C_OP_RemapSpeedtoCP>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_RemapSpeedtoCP>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_RenderPoints>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_RenderPoints>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_RenderPoints>::GetId() const
 T CParticleOperatorDefinition<C_OP_RenderPoints>::GetName() const
 T CParticleOperatorDefinition<C_OP_RenderPoints>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_RenderPoints>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_RenderRope>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_RenderRope>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_RenderRope>::GetId() const
 T CParticleOperatorDefinition<C_OP_RenderRope>::GetName() const
 T CParticleOperatorDefinition<C_OP_RenderRope>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_RenderRope>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_RenderScreenVelocityRotate>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_RenderScreenVelocityRotate>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_RenderScreenVelocityRotate>::GetId() const
 T CParticleOperatorDefinition<C_OP_RenderScreenVelocityRotate>::GetName() const
 T CParticleOperatorDefinition<C_OP_RenderScreenVelocityRotate>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_RenderScreenVelocityRotate>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_RenderSprites>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_RenderSprites>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_RenderSprites>::GetId() const
 T CParticleOperatorDefinition<C_OP_RenderSprites>::GetName() const
 T CParticleOperatorDefinition<C_OP_RenderSprites>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_RenderSprites>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_RenderSpritesTrail>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_RenderSpritesTrail>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_RenderSpritesTrail>::GetId() const
 T CParticleOperatorDefinition<C_OP_RenderSpritesTrail>::GetName() const
 T CParticleOperatorDefinition<C_OP_RenderSpritesTrail>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_RenderSpritesTrail>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_SetChildControlPoints>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_SetChildControlPoints>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_SetChildControlPoints>::GetId() const
 T CParticleOperatorDefinition<C_OP_SetChildControlPoints>::GetName() const
 T CParticleOperatorDefinition<C_OP_SetChildControlPoints>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_SetChildControlPoints>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_SetControlPointPositions>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_SetControlPointPositions>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_SetControlPointPositions>::GetId() const
 T CParticleOperatorDefinition<C_OP_SetControlPointPositions>::GetName() const
 T CParticleOperatorDefinition<C_OP_SetControlPointPositions>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_SetControlPointPositions>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_SetControlPointToCenter>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_SetControlPointToCenter>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_SetControlPointToCenter>::GetId() const
 T CParticleOperatorDefinition<C_OP_SetControlPointToCenter>::GetName() const
 T CParticleOperatorDefinition<C_OP_SetControlPointToCenter>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_SetControlPointToCenter>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_SetControlPointToPlayer>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_SetControlPointToPlayer>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_SetControlPointToPlayer>::GetId() const
 T CParticleOperatorDefinition<C_OP_SetControlPointToPlayer>::GetName() const
 T CParticleOperatorDefinition<C_OP_SetControlPointToPlayer>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_SetControlPointToPlayer>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_Spin>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_Spin>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_Spin>::GetId() const
 T CParticleOperatorDefinition<C_OP_Spin>::GetName() const
 T CParticleOperatorDefinition<C_OP_Spin>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_Spin>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_SpinUpdate>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_SpinUpdate>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_SpinUpdate>::GetId() const
 T CParticleOperatorDefinition<C_OP_SpinUpdate>::GetName() const
 T CParticleOperatorDefinition<C_OP_SpinUpdate>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_SpinUpdate>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_SpinYaw>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_SpinYaw>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_SpinYaw>::GetId() const
 T CParticleOperatorDefinition<C_OP_SpinYaw>::GetName() const
 T CParticleOperatorDefinition<C_OP_SpinYaw>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_SpinYaw>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_TwistAroundAxis>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_TwistAroundAxis>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_TwistAroundAxis>::GetId() const
 T CParticleOperatorDefinition<C_OP_TwistAroundAxis>::GetName() const
 T CParticleOperatorDefinition<C_OP_TwistAroundAxis>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_TwistAroundAxis>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_VectorNoise>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_VectorNoise>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_VectorNoise>::GetId() const
 T CParticleOperatorDefinition<C_OP_VectorNoise>::GetName() const
 T CParticleOperatorDefinition<C_OP_VectorNoise>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_VectorNoise>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_VelocityDecay>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_VelocityDecay>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_VelocityDecay>::GetId() const
 T CParticleOperatorDefinition<C_OP_VelocityDecay>::GetName() const
 T CParticleOperatorDefinition<C_OP_VelocityDecay>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_VelocityDecay>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_VelocityMatchingForce>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_VelocityMatchingForce>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_VelocityMatchingForce>::GetId() const
 T CParticleOperatorDefinition<C_OP_VelocityMatchingForce>::GetName() const
 T CParticleOperatorDefinition<C_OP_VelocityMatchingForce>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_VelocityMatchingForce>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_WorldCollideConstraint>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_WorldCollideConstraint>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_WorldCollideConstraint>::GetId() const
 T CParticleOperatorDefinition<C_OP_WorldCollideConstraint>::GetName() const
 T CParticleOperatorDefinition<C_OP_WorldCollideConstraint>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_WorldCollideConstraint>::IsObsolete() const
 T CParticleOperatorDefinition<C_OP_WorldTraceConstraint>::CreateInstance(UniqueId_t const&) const
 T CParticleOperatorDefinition<C_OP_WorldTraceConstraint>::GetClassSize() const
 T CParticleOperatorDefinition<C_OP_WorldTraceConstraint>::GetId() const
 T CParticleOperatorDefinition<C_OP_WorldTraceConstraint>::GetName() const
 T CParticleOperatorDefinition<C_OP_WorldTraceConstraint>::GetUnpackStructure() const
 T CParticleOperatorDefinition<C_OP_WorldTraceConstraint>::IsObsolete() const
 T CParticleOperatorInstance::AddForces(FourVectors*, CParticleCollection*, int, float, void*) const
 T CParticleOperatorInstance::AddScalarAttributeRandomRangeBlock(int, float, float, float, CParticleCollection*, int, int, bool) const
 T CParticleOperatorInstance::Emit(CParticleCollection*, float, void*) const
 T CParticleOperatorInstance::EnforceConstraint(int, int, CParticleCollection*, void*, int) const
 T CParticleOperatorInstance::GetParticlesToRender(CParticleCollection*, void*, int, int, int, int*, int*) const
 T CParticleOperatorInstance::GetReadControlPointMask() const
 T CParticleOperatorInstance::GetReadInitialAttributes() const
 T CParticleOperatorInstance::GetRequiredContextBytes() const
 T CParticleOperatorInstance::InitMultipleOverride()
 T CParticleOperatorInstance::InitNewParticles(CParticleCollection*, int, int, int, void*) const
 T CParticleOperatorInstance::InitNewParticlesBlock(CParticleCollection*, int, int, int, void*) const
 T CParticleOperatorInstance::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T CParticleOperatorInstance::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T CParticleOperatorInstance::InitParticleSystem(CParticleCollection*, void*) const
 T CParticleOperatorInstance::InitializeContextData(CParticleCollection*, void*) const
 T CParticleOperatorInstance::IsBatchable() const
 T CParticleOperatorInstance::IsFinalConstaint() const
 T CParticleOperatorInstance::IsScrubSafe()
 T CParticleOperatorInstance::MayCreateMoreParticles(CParticleCollection*, void*) const
 T CParticleOperatorInstance::Operate(CParticleCollection*, float, void*) const
 T CParticleOperatorInstance::Render(CParticleCollection*) const
 T CParticleOperatorInstance::Render(IMatRenderContext*, CParticleCollection*, void*) const
 T CParticleOperatorInstance::RenderUnsorted(CParticleCollection*, void*, IMatRenderContext*, CMeshBuilder&, int, int, int) const
 T CParticleOperatorInstance::Restart(CParticleCollection*, void*)
 T CParticleOperatorInstance::SetupConstraintPerFrameData(CParticleCollection*, void*) const
 T CParticleOperatorInstance::ShouldRunBeforeEmitters() const
 T CParticleOperatorInstance::SkipToTime(float, CParticleCollection*, void*) const
 T CParticleOperatorInstance::StartEmission(CParticleCollection*, void*, bool) const
 T CParticleOperatorInstance::StopEmission(CParticleCollection*, void*, bool) const
 T CParticleOperatorInstance::operator delete(void*)
 T CParticleOperatorInstance::operator new(unsigned long)
 T CParticleProperty::AddControlPoint(CNewParticleEffect*, int, C_BaseEntity*, ParticleAttachment_t, char const*, Vector)
 T CParticleProperty::AddControlPoint(int, int, C_BaseEntity*, ParticleAttachment_t, int, Vector)
 T CParticleProperty::CParticleProperty()
 T CParticleProperty::Create(char const*, ParticleAttachment_t, char const*)
 T CParticleProperty::Create(char const*, ParticleAttachment_t, int, Vector)
 T CParticleProperty::GetDataDescMap()
 T CParticleProperty::GetPredDescMap()
 T CParticleProperty::Init(C_BaseEntity*)
 T CParticleProperty::NetworkStateChanged()
 T CParticleProperty::NetworkStateChanged(void*)
 T CParticleProperty::OnParticleSystemDeleted(CNewParticleEffect*)
 T CParticleProperty::OnParticleSystemUpdated(CNewParticleEffect*, float)
 T CParticleProperty::OwnerSetDormantTo(bool)
 T CParticleProperty::ReplaceParticleEffect(CNewParticleEffect*, CNewParticleEffect*)
 T CParticleProperty::StopEmission(CNewParticleEffect*, bool, bool)
 T CParticleProperty::StopEmissionAndDestroyImmediately(CNewParticleEffect*)
 T CParticleProperty::UpdateControlPoint(ParticleEffectList_t*, int, bool)
 T CParticleProperty::~CParticleProperty()
 T CParticleSphereRenderer::CParticleSphereRenderer()
 T CParticleSphereRenderer::Init(CParticleMgr*, IMaterial*)
 T CParticleSphereRenderer::StartRender(VMatrix&)
 T CParticleSystemDefinition::GetMaterial() const
 T CParticleSystemDefinition::GetName() const
 T CParticleSystemDefinition::ParseChildren(CDmxElement*)
 T CParticleSystemDefinition::ParseOperators(char const*, ParticleFunctionType_t, CDmxElement*, CUtlVector<CParticleOperatorInstance*, CUtlMemory<CParticleOperatorInstance*, int> >&)
 T CParticleSystemDefinition::Precache()
 T CParticleSystemDefinition::Read(CDmxElement*)
 T CParticleSystemDefinition::SetupContextData()
 T CParticleSystemDefinition::Uncache()
 T CParticleSystemDefinition::~CParticleSystemDefinition()
 T CParticleSystemDictionary::AddParticleSystem(CDmxElement*)
 T CParticleSystemDictionary::DestroyExistingElement(CDmxElement*)
 T CParticleSystemDictionary::~CParticleSystemDictionary()
 T CParticleSystemMgr::AddBuiltinRenderingOperators()
 T CParticleSystemMgr::AddBuiltinSimulationOperators()
 T CParticleSystemMgr::AddParticleOperator(ParticleFunctionType_t, IParticleOperatorDefinition*)
 T CParticleSystemMgr::AddToRenderCache(CParticleCollection*)
 T CParticleSystemMgr::BuildBatchList(int, IMatRenderContext*, CUtlVector<CParticleSystemMgr::Batch_t, CUtlMemory<CParticleSystemMgr::Batch_t, int> >&)
 T CParticleSystemMgr::CParticleSystemMgr()
 T CParticleSystemMgr::CommitProfileInformation(bool)
 T CParticleSystemMgr::CreateParticleCollection(UniqueId_t const&, float, int)
 T CParticleSystemMgr::CreateParticleCollection(char const*, float, int)
 T CParticleSystemMgr::Debug_FrameWarningNeededTestAndReset()
 T CParticleSystemMgr::DecommitTempMemory()
 T CParticleSystemMgr::DrawRenderCache(bool)
 T CParticleSystemMgr::DumpProfileInformation()
 T CParticleSystemMgr::FindOrLoadSheet(char const*, ITexture*)
 T CParticleSystemMgr::FindParticleSystem(char const*)
 T CParticleSystemMgr::GetLastSimulationTime() const
 T CParticleSystemMgr::GetParticleSystemCount()
 T CParticleSystemMgr::GetParticleSystemNameFromIndex(int)
 T CParticleSystemMgr::Init(IParticleSystemQuery*)
 T CParticleSystemMgr::ParticleThrottleScaling() const
 T CParticleSystemMgr::PrecacheParticleSystem(char const*)
 T CParticleSystemMgr::ReadParticleConfigFile(CUtlBuffer&, bool, bool, char const*)
 T CParticleSystemMgr::ReadParticleConfigFile(char const*, bool, bool)
 T CParticleSystemMgr::ReadParticleDefinitions(CUtlBuffer&, char const*, bool, bool)
 T CParticleSystemMgr::ResetRenderCache()
 T CParticleSystemMgr::SetLastSimulationTime(float)
 T CParticleSystemMgr::ShouldLoadSheets(bool)
 T CParticleSystemMgr::TallyParticlesRendered(int, int)
 T CParticleSystemMgr::UncacheAllParticleSystems()
 T CParticleSystemMgr::~CParticleSystemMgr()
 T CParticleSystemQuery::GetCollisionGroupFromName(char const*)
 T CParticleSystemQuery::GetControllingObjectHitBoxInfo(CParticleCollection*, int, int, ModelHitBoxInfo_t*)
 T CParticleSystemQuery::GetLightingAtPoint(Vector const&, Color&)
 T CParticleSystemQuery::GetLocalPlayerEyeVectors(Vector*, Vector*, Vector*)
 T CParticleSystemQuery::GetLocalPlayerPos()
 T CParticleSystemQuery::GetPixelVisibility(int*, Vector const&, float)
 T CParticleSystemQuery::GetRandomPointsOnControllingObjectHitBox(CParticleCollection*, int, int, float, int, Vector*, Vector, Vector*, int*)
 T CParticleSystemQuery::IsPointInControllingObjectHitBox(CParticleCollection*, int, Vector, bool)
 T CParticleSystemQuery::MovePointInsideControllingObject(CParticleCollection*, void*, Vector*)
 T CParticleSystemQuery::SetUpLightingEnvironment(Vector const&)
 T CParticleSystemQuery::TraceLine(Vector const&, Vector const&, unsigned int, IHandleEntity const*, int, CBaseTrace*)
 T CPerfVisualBenchmark::Init()
 T CPerfVisualBenchmark::Name()
 T CPerfVisualBenchmark::PreRender()
 T CPerfVisualBenchmark::Stop()
 T CPerfVisualBenchmark::~CPerfVisualBenchmark()
 T CPhysBoxMultiplayer::GetClientClass()
 T CPhysBoxMultiplayer::GetMass()
 T CPhysBoxMultiplayer::GetMultiplayerPhysicsMode()
 T CPhysBoxMultiplayer::IsAsleep()
 T CPhysBoxMultiplayer::YouForgotToImplementOrDeclareClientClass()
 T CPhysBoxMultiplayer::~CPhysBoxMultiplayer()
 T CPhysObjSaveRestoreOps::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CPhysObjSaveRestoreOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CPhysObjSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CPhysObjSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CPhysSaveRestoreBlockHandler::AssociateModel(IPhysicsObject*, CPhysCollide const*)
 T CPhysSaveRestoreBlockHandler::AssociateModel(IPhysicsObject*, int)
 T CPhysSaveRestoreBlockHandler::CEntityRestoreSet::Add(C_BaseEntity*, typedescription_t*, void**, PhysInterfaceId_t)
 T CPhysSaveRestoreBlockHandler::ForgetAllModels()
 T CPhysSaveRestoreBlockHandler::ForgetModel(IPhysicsObject*)
 T CPhysSaveRestoreBlockHandler::GetBlockName()
 T CPhysSaveRestoreBlockHandler::NoteBBox(Vector const&, Vector const&, CPhysCollide*)
 T CPhysSaveRestoreBlockHandler::PostRestore()
 T CPhysSaveRestoreBlockHandler::PostSave()
 T CPhysSaveRestoreBlockHandler::PreRestore()
 T CPhysSaveRestoreBlockHandler::PreSave(CSaveRestoreData*)
 T CPhysSaveRestoreBlockHandler::QueueRestore(C_BaseEntity*, typedescription_t*, void**, PhysInterfaceId_t)
 T CPhysSaveRestoreBlockHandler::QueueSave(C_BaseEntity*, typedescription_t*, void**, PhysInterfaceId_t)
 T CPhysSaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CPhysSaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CPhysSaveRestoreBlockHandler::RestoreBlock(IRestore*, PhysObjectHeader_t const&)
 T CPhysSaveRestoreBlockHandler::RestorePhysicsObjectAndModel(IRestore*, PhysObjectHeader_t const&, CPhysSaveRestoreBlockHandler::QueuedItem_t*, int)
 T CPhysSaveRestoreBlockHandler::Save(ISave*)
 T CPhysSaveRestoreBlockHandler::SaveQueueFunc(CPhysSaveRestoreBlockHandler::QueuedItem_t const&, CPhysSaveRestoreBlockHandler::QueuedItem_t const&)
 T CPhysSaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CPhysSaveRestoreBlockHandler::~CPhysSaveRestoreBlockHandler()
 T CPhysicsGameTrace::VehiclePointInWater(Vector const&)
 T CPhysicsGameTrace::VehicleTraceRay(Ray_t const&, void*, CGameTrace*)
 T CPhysicsGameTrace::VehicleTraceRayWithWater(Ray_t const&, void*, CGameTrace*)
 T CPhysicsPropMultiplayer::ComputeWorldSpaceSurroundingBox(Vector*, Vector*)
 T CPhysicsPropMultiplayer::GetClientClass()
 T CPhysicsPropMultiplayer::GetMass()
 T CPhysicsPropMultiplayer::GetMultiplayerPhysicsMode()
 T CPhysicsPropMultiplayer::IsAsleep()
 T CPhysicsPropMultiplayer::YouForgotToImplementOrDeclareClientClass()
 T CPhysicsPropMultiplayer::~CPhysicsPropMultiplayer()
 T CPhysicsSystem::Init()
 T CPhysicsSystem::LevelInitPostEntity()
 T CPhysicsSystem::LevelInitPreEntity()
 T CPhysicsSystem::LevelShutdownPostEntity()
 T CPhysicsSystem::LevelShutdownPreEntity()
 T CPhysicsSystem::PhysicsSimulate()
 T CPhysicsSystem::Shutdown()
 T CPhysicsSystem::Update(float)
 T CPhysicsSystem::~CPhysicsSystem()
 T CPixelVisibilityQuery::CPixelVisibilityQuery()
 T CPixelVisibilityQuery::GetFractionVisible(float)
 T CPixelVisibilityQuery::IssueQuery(IMatRenderContext*, float, float, IMaterial*, bool)
 T CPixelVisibilityQuery::ResetOcclusionQueries()
 T CPixelVisibilityQuery::~CPixelVisibilityQuery()
 T CPixelVisibilitySystem::AllocQuery()
 T CPixelVisibilitySystem::AllocSet()
 T CPixelVisibilitySystem::DeleteUnusedQueries(CPixelVisSet*, bool)
 T CPixelVisibilitySystem::DeleteUnusedSets(bool)
 T CPixelVisibilitySystem::EndView()
 T CPixelVisibilitySystem::FindOrCreatePixelVisSet(pixelvis_queryparams_t const&, int*)
 T CPixelVisibilitySystem::FindOrCreateQueryForView(CPixelVisSet*, int)
 T CPixelVisibilitySystem::FreeSet(unsigned short)
 T CPixelVisibilitySystem::GetFractionVisible(pixelvis_queryparams_t const&, int*)
 T CPixelVisibilitySystem::LevelInitPreEntity()
 T CPixelVisibilitySystem::LevelShutdownPostEntity()
 T CPixelVisibilitySystem::~CPixelVisibilitySystem()
 T CPlasmaSpray::Create(char const*)
 T CPlasmaSpray::RenderParticles(CParticleRenderIterator*)
 T CPlasmaSpray::SimulateParticles(CParticleSimulateIterator*)
 T CPlasmaSpray::UpdateVelocity(SimpleParticle*, float)
 T CPlasmaSpray::~CPlasmaSpray()
 T CPlayerAndObjectEnumerator::CPlayerAndObjectEnumerator(float)
 T CPlayerAndObjectEnumerator::EnumElement(IHandleEntity*)
 T CPlayerAndObjectEnumerator::GetObject(int)
 T CPlayerAndObjectEnumerator::GetObjectCount()
 T CPlayerLocalData::CPlayerLocalData()
 T CPlayerLocalData::GetPredDescMap()
 T CPlayerLocalData::NetworkStateChanged()
 T CPlayerLocalData::NetworkStateChanged(void*)
 T CPlayerLogoProxy::GetMaterial()
 T CPlayerLogoProxy::Init(IMaterial*, KeyValues*)
 T CPlayerLogoProxy::LogoLessFunc(CPlayerLogoProxy::PlayerLogo const&, CPlayerLogoProxy::PlayerLogo const&)
 T CPlayerLogoProxy::OnBind(void*)
 T CPlayerLogoProxy::OnLogoBindInternal(int)
 T CPlayerLogoProxy::Release()
 T CPlayerLogoProxy::~CPlayerLogoProxy()
 T CPlayerPositionProxy::Init(IMaterial*, KeyValues*)
 T CPlayerPositionProxy::OnBind(void*)
 T CPlayerPositionProxy::~CPlayerPositionProxy()
 T CPlayerProximityProxy::Init(IMaterial*, KeyValues*)
 T CPlayerProximityProxy::OnBind(void*)
 T CPlayerProximityProxy::~CPlayerProximityProxy()
 T CPlayerSpeedProxy::Init(IMaterial*, KeyValues*)
 T CPlayerSpeedProxy::OnBind(void*)
 T CPlayerSpeedProxy::~CPlayerSpeedProxy()
 T CPlayerState::GetPredDescMap()
 T CPlayerState::NetworkStateChanged()
 T CPlayerState::NetworkStateChanged(void*)
 T CPlayerState::~CPlayerState()
 T CPlayerTeamMatchProxy::Init(IMaterial*, KeyValues*)
 T CPlayerTeamMatchProxy::OnBind(void*)
 T CPlayerTeamMatchProxy::~CPlayerTeamMatchProxy()
 T CPlayerViewProxy::Init(IMaterial*, KeyValues*)
 T CPlayerViewProxy::OnBind(void*)
 T CPlayerViewProxy::~CPlayerViewProxy()
 T CPoseDebuggerImpl::AccumulatePose(CStudioHdr const*, CIKContext*, Vector*, Quaternion*, int, float, float const*, int, float, float)
 T CPoseDebuggerImpl::StartBlending(IClientNetworkable*, CStudioHdr const*)
 T CPoseDebuggerImpl::~CPoseDebuggerImpl()
 T CPoseDebuggerStub::AccumulatePose(CStudioHdr const*, CIKContext*, Vector*, Quaternion*, int, float, float const*, int, float, float)
 T CPoseDebuggerStub::StartBlending(IClientNetworkable*, CStudioHdr const*)
 T CPotteryWheelManip::CPotteryWheelManip(matrix3x4_t*)
 T CPotteryWheelManip::OnAcceptManipulation()
 T CPotteryWheelManip::OnBeginManipulation()
 T CPotteryWheelManip::OnCancelManipulation()
 T CPotteryWheelManip::OnCursorMoved(int, int)
 T CPotteryWheelManip::OnMousePressed(ButtonCode_t, int, int)
 T CPotteryWheelManip::OnMouseReleased(ButtonCode_t, int, int)
 T CPotteryWheelManip::OnMouseWheeled(int)
 T CPotteryWheelManip::OnTick()
 T CPotteryWheelPanel::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T CPotteryWheelPanel::ApplyManipulation()
 T CPotteryWheelPanel::CPotteryWheelPanel(vgui::Panel*, char const*)
 T CPotteryWheelPanel::ComputeCameraTransform(matrix3x4_t*)
 T CPotteryWheelPanel::CreateDefaultLights()
 T CPotteryWheelPanel::DrawGrid()
 T CPotteryWheelPanel::EnableMouseCapture(bool, ButtonCode_t)
 T CPotteryWheelPanel::EnterManipulationMode(CPotteryWheelPanel::ManipulationMode_t, bool, ButtonCode_t)
 T CPotteryWheelPanel::GetAnimMap()
 T CPotteryWheelPanel::GetCameraFOV()
 T CPotteryWheelPanel::GetKBMap()
 T CPotteryWheelPanel::GetLightProbeCubemap(bool)
 T CPotteryWheelPanel::GetMessageMap()
 T CPotteryWheelPanel::GetPanelClassName()
 T CPotteryWheelPanel::GetVar_m_bUseParentBG(vgui::Panel*)
 T CPotteryWheelPanel::HasLightProbe() const
 T CPotteryWheelPanel::Init(int, int, int, int)
 T CPotteryWheelPanel::LookAt(Vector const&, float)
 T CPotteryWheelPanel::LookAt(float)
 T CPotteryWheelPanel::OnCursorMoved(int, int)
 T CPotteryWheelPanel::OnKeyCodePressed(ButtonCode_t)
 T CPotteryWheelPanel::OnKeyCodeReleased(ButtonCode_t)
 T CPotteryWheelPanel::OnMouseCaptureLost()
 T CPotteryWheelPanel::OnMousePressed(ButtonCode_t)
 T CPotteryWheelPanel::OnMouseReleased(ButtonCode_t)
 T CPotteryWheelPanel::OnMouseWheeled(int)
 T CPotteryWheelPanel::OnTick()
 T CPotteryWheelPanel::Paint()
 T CPotteryWheelPanel::ResetCameraPivot()
 T CPotteryWheelPanel::SetBackgroundColor(Color const&)
 T CPotteryWheelPanel::SetCameraFOV(float)
 T CPotteryWheelPanel::SetCameraOffset(Vector const&)
 T CPotteryWheelPanel::SetCameraPositionAndAngles(Vector const&, QAngle const&, bool)
 T CPotteryWheelPanel::SetupRenderState(int, int)
 T CPotteryWheelPanel::SyncManipulation()
 T CPotteryWheelPanel::UpdateCameraTransform()
 T CPotteryWheelPanel::WarpMouse(int&, int&)
 T CPotteryWheelPanel::~CPotteryWheelPanel()
 T CPrecacheRegister::Precache()
 T CPrecipHack::LevelInitPostEntity()
 T CPrecipHack::LevelShutdownPreEntity()
 T CPrecipHack::Update(float)
 T CPrecipHack::~CPrecipHack()
 T CPredictableId::CPredictableId()
 T CPredictableId::Describe() const
 T CPredictableId::GetAcknowledged() const
 T CPredictableId::GetPlayer() const
 T CPredictableId::IsActive() const
 T CPredictableId::ResetInstanceCounters()
 T CPredictableId::SetAcknowledged(bool)
 T CPredictableId::SetRaw(int)
 T CPredictableId::operator==(CPredictableId const&) const
 T CPredictableList::AddToPredictableList(CBaseHandle)
 T CPredictableList::GetPredictable(int)
 T CPredictableList::GetPredictableCount()
 T CPredictableList::~CPredictableList()
 T CPrediction::CPrediction()
 T CPrediction::CheckError(int)
 T CPrediction::ComputeFirstCommandToExecute(bool, int, int)
 T CPrediction::FinishCommand(C_BasePlayer*)
 T CPrediction::FinishMove(C_BasePlayer*, CUserCmd*, CMoveData*)
 T CPrediction::GetIncomingPacketNumber() const
 T CPrediction::GetLocalViewAngles(QAngle&)
 T CPrediction::GetViewAngles(QAngle&)
 T CPrediction::GetViewOrigin(Vector&)
 T CPrediction::InPrediction() const
 T CPrediction::Init()
 T CPrediction::IsFirstTimePredicted() const
 T CPrediction::OnReceivedUncompressedPacket()
 T CPrediction::PerformPrediction(bool, C_BasePlayer*, int, int)
 T CPrediction::PostEntityPacketReceived()
 T CPrediction::PostNetworkDataReceived(int)
 T CPrediction::PreEntityPacketReceived(int, int)
 T CPrediction::ReinitPredictables()
 T CPrediction::RemoveStalePredictedEntities(int)
 T CPrediction::RestoreEntityToPredictedFrame(int)
 T CPrediction::RestoreOriginalEntityState()
 T CPrediction::RunCommand(C_BasePlayer*, CUserCmd*, IMoveHelper*)
 T CPrediction::RunPostThink(C_BasePlayer*)
 T CPrediction::RunPreThink(C_BasePlayer*)
 T CPrediction::RunSimulation(int, float, CUserCmd*, C_BasePlayer*)
 T CPrediction::RunThink(C_BasePlayer*, double)
 T CPrediction::SetIdealPitch(C_BasePlayer*, Vector const&, QAngle const&, Vector const&)
 T CPrediction::SetLocalViewAngles(QAngle&)
 T CPrediction::SetViewAngles(QAngle&)
 T CPrediction::SetViewOrigin(Vector&)
 T CPrediction::SetupMove(C_BasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T CPrediction::ShiftIntermediateDataForward(int, int)
 T CPrediction::ShouldDumpEntity(C_BaseEntity*)
 T CPrediction::Shutdown()
 T CPrediction::ShutdownPredictables()
 T CPrediction::StartCommand(C_BasePlayer*, CUserCmd*)
 T CPrediction::StorePredictionResults(int)
 T CPrediction::Update(int, bool, int, int)
 T CPrediction::_Update(bool, bool, int, int)
 T CPrediction::~CPrediction()
 T CPredictionCopy::CPredictionCopy(int, void*, bool, void const*, bool, bool, bool, bool, bool, void (*)(char const*, char const*, char const*, bool, bool, bool, bool, char const*))
 T CPredictionCopy::CompareQuaternion(Quaternion*, Quaternion const*, int)
 T CPredictionCopy::CompareVector(Vector*, Vector const*, int)
 T CPredictionCopy::CopyFields(int, datamap_t*, typedescription_t*, int)
 T CPredictionCopy::DescribeEHandle(CPredictionCopy::difftype_t, CHandle<C_BaseEntity>*, CHandle<C_BaseEntity> const*, int)
 T CPredictionCopy::DescribeFields(CPredictionCopy::difftype_t, char const*, ...)
 T CPredictionCopy::DescribeInt(CPredictionCopy::difftype_t, int*, int const*, int)
 T CPredictionCopy::DescribeQuaternion(CPredictionCopy::difftype_t, Quaternion*, Quaternion const*, int)
 T CPredictionCopy::DescribeVector(CPredictionCopy::difftype_t, Vector*, Vector const*, int)
 T CPredictionCopy::ReportFieldsDiffer(char const*, ...)
 T CPredictionCopy::TransferData(char const*, int, datamap_t*)
 T CPredictionCopy::WatchEHandle(CPredictionCopy::difftype_t, CHandle<C_BaseEntity>*, CHandle<C_BaseEntity> const*, int)
 T CPredictionCopy::WatchInt(CPredictionCopy::difftype_t, int*, int const*, int)
 T CPredictionCopy::WatchMsg(char const*, ...)
 T CPropData::GetRandomChunkModel(char const*, int)
 T CPropData::LevelInitPreEntity()
 T CPropData::LevelShutdownPostEntity()
 T CPropData::ParsePropDataFile()
 T CPropData::ParsePropFromBase(C_BaseEntity*, char const*)
 T CPropData::ParsePropFromKV(C_BaseEntity*, KeyValues*, KeyValues*)
 T CPropData::~CPropData()
 T CProportionalFloatProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalFloatProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CProportionalFloatProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalIntProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalIntProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CProportionalIntProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalIntWithScreenspacePropertyX::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalIntWithScreenspacePropertyX::GetScreenSize()
 T CProportionalIntWithScreenspacePropertyX::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CProportionalIntWithScreenspacePropertyX::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CProportionalIntWithScreenspacePropertyY::GetScreenSize()
 T CProxyHealth::Init(IMaterial*, KeyValues*)
 T CProxyHealth::OnBind(void*)
 T CProxyHealth::~CProxyHealth()
 T CProxyIsNPC::Init(IMaterial*, KeyValues*)
 T CProxyIsNPC::OnBind(void*)
 T CProxyIsNPC::~CProxyIsNPC()
 T CPupilProxy::GetMaterial()
 T CPupilProxy::Init(IMaterial*, KeyValues*)
 T CPupilProxy::OnBind(C_BaseEntity*)
 T CPupilProxy::~CPupilProxy()
 T CPushAwayEnumerator::EnumElement(IHandleEntity*)
 T CQueuedRopeMemoryManager::CQueuedRopeMemoryManager()
 T CQueuedRopeMemoryManager::~CQueuedRopeMemoryManager()
 T CRC32_Final(unsigned int*)
 T CRC32_Init(unsigned int*)
 T CRC32_ProcessBuffer(unsigned int*, void const*, int)
 T CRagdoll::BuildRagdollBounds(C_BaseEntity*)
 T CRagdoll::CRagdoll()
 T CRagdoll::CheckSettleStationaryRagdoll()
 T CRagdoll::DrawWireframe()
 T CRagdoll::GetConstraintGroup()
 T CRagdoll::GetElement(int)
 T CRagdoll::GetRagdollBounds(Vector&, Vector&)
 T CRagdoll::GetRagdollOrigin()
 T CRagdoll::Init(C_BaseEntity*, CStudioHdr*, Vector const&, int, matrix3x4_t const*, matrix3x4_t const*, matrix3x4_t const*, float, bool)
 T CRagdoll::RagdollBone(C_BaseEntity*, mstudiobone_t*, int, bool*, CBoneAccessor&)
 T CRagdoll::RagdollBoneCount() const
 T CRagdoll::ResetRagdollSleepAfterTime()
 T CRagdoll::TransformVectorToWorld(int, Vector const*, Vector*)
 T CRagdoll::VPhysicsUpdate(IPhysicsObject*)
 T CRagdoll::~CRagdoll()
 T CRagdollAnimatedFriction::ParseKeyValue(void*, char const*, char const*)
 T CRagdollAnimatedFriction::SetDefaults(void*)
 T CRagdollBoltEnumerator::EnumElement(IHandleEntity*)
 T CRagdollCollisionRules::ParseKeyValue(void*, char const*, char const*)
 T CRagdollCollisionRules::SetDefaults(void*)
 T CRagdollEnumerator::EnumElement(IHandleEntity*)
 T CRagdollExplosionEnumerator::CRagdollExplosionEnumerator(Vector, float, float)
 T CRagdollExplosionEnumerator::EnumElement(IHandleEntity*)
 T CRagdollExplosionEnumerator::~CRagdollExplosionEnumerator()
 T CRagdollLRURetirement::FrameUpdatePostEntityThink()
 T CRagdollLRURetirement::LevelInitPreEntity()
 T CRagdollLRURetirement::MoveToTopOfLRU(C_BaseAnimating*, bool)
 T CRagdollLRURetirement::Update(float)
 T CRagdollLRURetirement::~CRagdollLRURetirement()
 T CRagdollLowViolenceManager::SetLowViolence(char const*)
 T CRecordingList::AddToList(CBaseHandle)
 T CRecordingList::Count()
 T CRecordingList::Get(int)
 T CRecordingList::RemoveFromList(CBaseHandle)
 T CRecordingList::~CRecordingList()
 T CRefCountServiceBase<true, CRefMT>::OnFinalRelease()
 T CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >::AddRef()
 T CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >::Release()
 T CReflectiveGlassView::AdjustView(float)
 T CReflectiveGlassView::Draw()
 T CReflectiveGlassView::PopView()
 T CReflectiveGlassView::PushView(float)
 T CReflectiveGlassView::~CReflectiveGlassView()
 T CRefractiveGlassView::AdjustView(float)
 T CRefractiveGlassView::Draw()
 T CRefractiveGlassView::PopView()
 T CRefractiveGlassView::PushView(float)
 T CRefractiveGlassView::~CRefractiveGlassView()
 T CRendering3dView::BuildRenderableRenderLists(int)
 T CRendering3dView::BuildWorldRenderLists(bool, int, bool, bool, float*)
 T CRendering3dView::CRendering3dView(CViewRender*)
 T CRendering3dView::Draw()
 T CRendering3dView::DrawNoZBufferTranslucentRenderables()
 T CRendering3dView::DrawOpaqueRenderables(ERenderDepthMode)
 T CRendering3dView::DrawTranslucentRenderables(bool, bool)
 T CRendering3dView::DrawTranslucentRenderablesNoWorld(bool)
 T CRendering3dView::DrawTranslucentWorldAndDetailPropsInLeaves(int, int, int, int&, unsigned short*, bool)
 T CRendering3dView::DrawTranslucentWorldInLeaves(bool)
 T CRendering3dView::DrawWorld(float)
 T CRendering3dView::EnableWorldFog()
 T CRendering3dView::GetDrawFlags()
 T CRendering3dView::PruneWorldListInfo()
 T CRendering3dView::ReleaseLists()
 T CRendering3dView::Setup(CViewSetup const&)
 T CRendering3dView::SetupRenderablesList(int)
 T CRendering3dView::~CRendering3dView()
 T CRestore::CRestore(CSaveRestoreData*)
 T CRestore::DoReadAll(void*, datamap_t*, datamap_t*)
 T CRestore::EmptyFields(void*, typedescription_t*, int)
 T CRestore::EndBlock()
 T CRestore::GetGameSaveRestoreInfo()
 T CRestore::GetPrecacheMode()
 T CRestore::GetReadPos() const
 T CRestore::ReadAll(void*, datamap_t*)
 T CRestore::ReadBasicField(SaveRestoreRecordHeader_t const&, void*, datamap_t*, typedescription_t*)
 T CRestore::ReadBool(bool*, int, int)
 T CRestore::ReadData(char*, int, int)
 T CRestore::ReadEHandle(CHandle<C_BaseEntity>*, int, int)
 T CRestore::ReadEdictPtr(edict_t**, int, int)
 T CRestore::ReadEntityPtr(C_BaseEntity**, int, int)
 T CRestore::ReadFields(char const*, void*, datamap_t*, typedescription_t*, int)
 T CRestore::ReadFloat(float*, int, int)
 T CRestore::ReadFunction(datamap_t*, void (CBaseEntity::***)(inputdata_t&), int, int)
 T CRestore::ReadGameField(SaveRestoreRecordHeader_t const&, void*, datamap_t*, typedescription_t*)
 T CRestore::ReadHeader(SaveRestoreRecordHeader_t*)
 T CRestore::ReadInt()
 T CRestore::ReadInt(int*, int, int)
 T CRestore::ReadMatrix3x4Worldspace(matrix3x4_t*, int, int)
 T CRestore::ReadPositionVector(Vector*)
 T CRestore::ReadPositionVector(Vector*, int, int)
 T CRestore::ReadQuaternion(Quaternion*)
 T CRestore::ReadQuaternion(Quaternion*, int, int)
 T CRestore::ReadShort()
 T CRestore::ReadShort(short*, int, int)
 T CRestore::ReadString(char const**, int, int)
 T CRestore::ReadString(char*, int, int)
 T CRestore::ReadTick(int*, int, int)
 T CRestore::ReadTime(float*, int, int)
 T CRestore::ReadVMatrix(VMatrix*, int, int)
 T CRestore::ReadVMatrixWorldspace(VMatrix*, int, int)
 T CRestore::ReadVector(Vector*)
 T CRestore::ReadVector(Vector*, int, int)
 T CRestore::SetReadPos(int)
 T CRestore::SkipHeader()
 T CRestore::StartBlock()
 T CRestore::StartBlock(SaveRestoreRecordHeader_t*)
 T CRestore::StartBlock(char*)
 T CRestore::StringFromHeaderSymbol(int)
 T CRestore::~CRestore()
 T CResultProxy::BindArgToEntity(void*)
 T CResultProxy::CResultProxy()
 T CResultProxy::GetMaterial()
 T CResultProxy::Init(IMaterial*, KeyValues*)
 T CResultProxy::Release()
 T CResultProxy::SetFloatResult(float)
 T CResultProxy::~CResultProxy()
 T CRocketTrailParticle::UpdateAlpha(SimpleParticle const*)
 T CRocketTrailParticle::UpdateRoll(SimpleParticle*, float)
 T CRocketTrailParticle::~CRocketTrailParticle()
 T CRopeManager::AddToRenderCache(C_RopeKeyframe*)
 T CRopeManager::CRopeManager()
 T CRopeManager::DrawRenderCache(bool)
 T CRopeManager::DrawRenderCache_NonQueued(bool, CRopeManager::RopeRenderData_t*, int, Vector const&, Vector const&, C_RopeKeyframe::BuildRopeQueuedData_t*)
 T CRopeManager::GetHolidayLightStyle()
 T CRopeManager::IsHolidayLightMode()
 T CRopeManager::OnRenderStart()
 T CRopeManager::RemoveRopeFromQueuedRenderCaches(C_RopeKeyframe*)
 T CRopeManager::RenderNonSolidRopes(IMatRenderContext*, IMaterial*, int, int)
 T CRopeManager::RenderSolidRopes(IMatRenderContext*, IMaterial*, int, int, bool)
 T CRopeManager::ResetRenderCache()
 T CRopeManager::ResetSegmentCache(int)
 T CRopeManager::SetHolidayLightMode(bool)
 T CRopeManager::~CRopeManager()
 T CRotationManipulator::OnCursorMoved(int, int)
 T CRotationManipulator::OnMousePressed(ButtonCode_t, int, int)
 T CRotationManipulator::UpdateTransform()
 T CRumbleEffects::ComputeAmplitudes(RumbleChannel_t*, float, float*, float*)
 T CRumbleEffects::FindAvailableChannel(int)
 T CRumbleEffects::Init()
 T CRumbleEffects::StartEffect(unsigned char, unsigned char, unsigned char)
 T CRumbleEffects::UpdateEffects(float)
 T CSave::CSave(CSaveRestoreData*)
 T CSave::DoWriteAll(void const*, datamap_t*, datamap_t*)
 T CSave::EndBlock()
 T CSave::EndLogging()
 T CSave::GetGameSaveRestoreInfo()
 T CSave::GetWritePos() const
 T CSave::IsAsync()
 T CSave::SetWritePos(int)
 T CSave::ShouldSaveField(void const*, typedescription_t*)
 T CSave::StartBlock()
 T CSave::StartBlock(char const*)
 T CSave::StartLogging(char const*)
 T CSave::WriteAll(void const*, datamap_t*)
 T CSave::WriteBasicField(char const*, void*, datamap_t*, typedescription_t*)
 T CSave::WriteBool(bool const*, int)
 T CSave::WriteBool(char const*, bool const*, int)
 T CSave::WriteData(char const*, int)
 T CSave::WriteData(char const*, int, char const*)
 T CSave::WriteEHandle(CHandle<C_BaseEntity> const*, int)
 T CSave::WriteEHandle(char const*, CHandle<C_BaseEntity> const*, int)
 T CSave::WriteEdictPtr(char const*, edict_t**, int)
 T CSave::WriteEdictPtr(edict_t**, int)
 T CSave::WriteEntityPtr(C_BaseEntity**, int)
 T CSave::WriteEntityPtr(char const*, C_BaseEntity**, int)
 T CSave::WriteFields(char const*, void const*, datamap_t*, typedescription_t*, int)
 T CSave::WriteFloat(char const*, float const*, int)
 T CSave::WriteFloat(float const*, int)
 T CSave::WriteFunction(datamap_t*, char const*, void (CBaseEntity::***)(inputdata_t&), int)
 T CSave::WriteGameField(char const*, void*, datamap_t*, typedescription_t*)
 T CSave::WriteHeader(char const*, int)
 T CSave::WriteInt(char const*, int const*, int)
 T CSave::WriteInt(int const*, int)
 T CSave::WriteMatrix3x4Worldspace(matrix3x4_t const*, int)
 T CSave::WritePositionVector(Vector const&)
 T CSave::WritePositionVector(Vector const*, int)
 T CSave::WritePositionVector(char const*, Vector const&)
 T CSave::WritePositionVector(char const*, Vector const*, int)
 T CSave::WriteQuaternion(Quaternion const&)
 T CSave::WriteQuaternion(Quaternion const*, int)
 T CSave::WriteQuaternion(char const*, Quaternion const&)
 T CSave::WriteQuaternion(char const*, Quaternion const*, int)
 T CSave::WriteShort(char const*, short const*, int)
 T CSave::WriteShort(short const*, int)
 T CSave::WriteString(char const* const*, int)
 T CSave::WriteString(char const*)
 T CSave::WriteString(char const*, char const* const*, int)
 T CSave::WriteString(char const*, char const*)
 T CSave::WriteTick(char const*, int const*, int)
 T CSave::WriteTick(int const*, int)
 T CSave::WriteTime(char const*, float const*, int)
 T CSave::WriteTime(float const*, int)
 T CSave::WriteVMatrixWorldspace(VMatrix const*, int)
 T CSave::WriteVector(Vector const&)
 T CSave::WriteVector(Vector const*, int)
 T CSave::WriteVector(char const*, Vector const&)
 T CSave::WriteVector(char const*, Vector const*, int)
 T CSave::~CSave()
 T CSaveRestoreBlockSet::AddBlockHandler(ISaveRestoreBlockHandler*)
 T CSaveRestoreBlockSet::CSaveRestoreBlockSet(char const*)
 T CSaveRestoreBlockSet::CallBlockHandlerRestore(ISaveRestoreBlockHandler*, int, IRestore*, bool)
 T CSaveRestoreBlockSet::GetBlockName()
 T CSaveRestoreBlockSet::PostRestore()
 T CSaveRestoreBlockSet::PostSave()
 T CSaveRestoreBlockSet::PreRestore()
 T CSaveRestoreBlockSet::PreSave(CSaveRestoreData*)
 T CSaveRestoreBlockSet::ReadRestoreHeaders(IRestore*)
 T CSaveRestoreBlockSet::RemoveBlockHandler(ISaveRestoreBlockHandler*)
 T CSaveRestoreBlockSet::Restore(IRestore*, bool)
 T CSaveRestoreBlockSet::Save(ISave*)
 T CSaveRestoreBlockSet::WriteSaveHeaders(ISave*)
 T CSaveRestoreBlockSet::~CSaveRestoreBlockSet()
 T CSceneTokenProcessor::CurrentToken()
 T CSceneTokenProcessor::Error(char const*, ...)
 T CSceneTokenProcessor::GetToken(bool)
 T CSceneTokenProcessor::SetBuffer(char*)
 T CSceneTokenProcessor::TokenAvailable()
 T CSchemeVisualizer::AddBordersToList()
 T CSchemeVisualizer::AddColorsToList()
 T CSchemeVisualizer::AddFontsToList()
 T CSchemeVisualizer::CSchemeVisualizer(vgui::Panel*, vgui::IScheme*, char const*)
 T CSchemeVisualizer::GetAnimMap()
 T CSchemeVisualizer::GetKBMap()
 T CSchemeVisualizer::GetMessageMap()
 T CSchemeVisualizer::GetPanelClassName()
 T CSchemeVisualizer::OnTick()
 T CSchemeVisualizer::PerformLayout()
 T CSchemeVisualizer::UpdateList(CSchemeVisualizer::ListDataType_t)
 T CSchemeVisualizer::~CSchemeVisualizer()
 T CScreenSpaceEffectManager::DisableAllScreenSpaceEffects()
 T CScreenSpaceEffectManager::DisableScreenSpaceEffect(IScreenSpaceEffect*)
 T CScreenSpaceEffectManager::DisableScreenSpaceEffect(char const*)
 T CScreenSpaceEffectManager::EnableScreenSpaceEffect(IScreenSpaceEffect*)
 T CScreenSpaceEffectManager::EnableScreenSpaceEffect(char const*)
 T CScreenSpaceEffectManager::GetScreenSpaceEffect(char const*)
 T CScreenSpaceEffectManager::InitScreenSpaceEffects()
 T CScreenSpaceEffectManager::RenderEffects(int, int, int, int)
 T CScreenSpaceEffectManager::SetScreenSpaceEffectParams(IScreenSpaceEffect*, KeyValues*)
 T CScreenSpaceEffectManager::SetScreenSpaceEffectParams(char const*, KeyValues*)
 T CScreenSpaceEffectManager::ShutdownScreenSpaceEffects()
 T CSelectFirstIfNonZeroProxy::Init(IMaterial*, KeyValues*)
 T CSelectFirstIfNonZeroProxy::OnBind(void*)
 T CSelectFirstIfNonZeroProxy::~CSelectFirstIfNonZeroProxy()
 T CSentence::GetIntensity(float, float)
 T CSentence::GetRuntimePhoneme(int) const
 T CSentence::GetRuntimePhonemeCount() const
 T CSequenceTransitioner::CheckForSequenceChange(CStudioHdr*, int, bool, bool)
 T CSequenceTransitioner::UpdateCurrent(CStudioHdr*, int, float, float, float)
 T CShadowDepthView::Draw()
 T CShadowDepthView::~CShadowDepthView()
 T CShadowLeafEnum::EnumerateLeaf(int, int)
 T CShadowModelProxy::GetMaterial()
 T CShadowModelProxy::Init(IMaterial*, KeyValues*)
 T CShadowModelProxy::OnBind(void*)
 T CShadowModelProxy::Release()
 T CShadowModelProxy::~CShadowModelProxy()
 T CShadowProxy::GetMaterial()
 T CShadowProxy::Init(IMaterial*, KeyValues*)
 T CShadowProxy::OnBind(void*)
 T CShadowProxy::Release()
 T CShadowProxy::~CShadowProxy()
 T CSheet::CSheet(CUtlBuffer&)
 T CSheet::~CSheet()
 T CShieldProxy::GetMaterial()
 T CShieldProxy::Init(IMaterial*, KeyValues*)
 T CShieldProxy::OnBind(C_BaseEntity*)
 T CShieldProxy::~CShieldProxy()
 T CSimple3DEmitter::Create(char const*)
 T CSimple3DEmitter::RenderParticles(CParticleRenderIterator*)
 T CSimple3DEmitter::SimulateParticles(CParticleSimulateIterator*)
 T CSimple3DEmitter::~CSimple3DEmitter()
 T CSimpleEmitter::AddSimpleParticle(CParticleSubTexture*, Vector const&, float, unsigned char)
 T CSimpleEmitter::CSimpleEmitter(char const*)
 T CSimpleEmitter::Create(char const*)
 T CSimpleEmitter::RenderParticles(CParticleRenderIterator*)
 T CSimpleEmitter::SetDrawBeforeViewModel(bool)
 T CSimpleEmitter::SetNearClip(float, float)
 T CSimpleEmitter::SimulateParticles(CParticleSimulateIterator*)
 T CSimpleEmitter::UpdateAlpha(SimpleParticle const*)
 T CSimpleEmitter::UpdateColor(SimpleParticle const*)
 T CSimpleEmitter::UpdateRoll(SimpleParticle*, float)
 T CSimpleEmitter::UpdateScale(SimpleParticle const*)
 T CSimpleEmitter::UpdateVelocity(SimpleParticle*, float)
 T CSimpleEmitter::~CSimpleEmitter()
 T CSimpleEmitter_Factory()
 T CSimpleGlowEmitter::Create(char const*, Vector const&, float)
 T CSimpleGlowEmitter::RenderParticles(CParticleRenderIterator*)
 T CSimpleGlowEmitter::SimulateParticles(CParticleSimulateIterator*)
 T CSimpleGlowEmitter::~CSimpleGlowEmitter()
 T CSimpleKeyList::Insert(CSimpleKeyInterp const&)
 T CSimpleKeyList::Interp(Vector&, float)
 T CSimplePhysics::CSimplePhysics()
 T CSimplePhysics::Init(float)
 T CSimplePhysics::Simulate(CSimplePhysics::CNode*, int, CSimplePhysics::IHelper*, float, float)
 T CSimpleRenderExecutor::AddView(CRendering3dView*)
 T CSimpleRenderExecutor::Execute()
 T CSimpleRingBuffer<CInterpolatedVarEntryBase<C_AnimationLayer, false> >::EnsureCapacity(int)
 T CSimpleRingBuffer<CInterpolatedVarEntryBase<QAngle, false> >::EnsureCapacity(int)
 T CSimpleRingBuffer<CInterpolatedVarEntryBase<QAngle, true> >::EnsureCapacity(int)
 T CSimpleRingBuffer<CInterpolatedVarEntryBase<Vector, false> >::EnsureCapacity(int)
 T CSimpleRingBuffer<CInterpolatedVarEntryBase<Vector, true> >::EnsureCapacity(int)
 T CSimpleRingBuffer<CInterpolatedVarEntryBase<float, false> >::EnsureCapacity(int)
 T CSimpleRingBuffer<CInterpolatedVarEntryBase<float, true> >::EnsureCapacity(int)
 T CSimpleWorldView::Draw()
 T CSimpleWorldView::Setup(CViewSetup const&, int, bool, VisibleFogVolumeInfo_t const&, WaterRenderInfo_t const&, ViewCustomVisibility_t*)
 T CSimpleWorldView::~CSimpleWorldView()
 T CSineProxy::Init(IMaterial*, KeyValues*)
 T CSineProxy::OnBind(void*)
 T CSineProxy::~CSineProxy()
 T CSingleUserRecipientFilter::~CSingleUserRecipientFilter()
 T CSkyboxView::ComputeSkyboxVisibility()
 T CSkyboxView::Draw()
 T CSkyboxView::DrawInternal(view_id_t, bool, ITexture*, ITexture*)
 T CSkyboxView::Enable3dSkyboxFog()
 T CSkyboxView::Setup(CViewSetup const&, int*, SkyboxVisibility_t*)
 T CSkyboxView::~CSkyboxView()
 T CSlideshowDisplayScreen::ApplySchemeSettings(vgui::IScheme*)
 T CSlideshowDisplayScreen::CSlideshowDisplayScreen(vgui::Panel*, char const*)
 T CSlideshowDisplayScreen::Init(KeyValues*, VGuiScreenInitData_t*)
 T CSlideshowDisplayScreen::OnTick()
 T CSlideshowDisplayScreen::Update(C_SlideshowDisplay*)
 T CSlideshowDisplayScreen::~CSlideshowDisplayScreen()
 T CSmallTextEntry::ApplySchemeSettings(vgui::IScheme*)
 T CSmallTextEntry::CSmallTextEntry(vgui::Panel*, char const*)
 T CSmallTextEntry::GetAnimMap()
 T CSmallTextEntry::GetKBMap()
 T CSmallTextEntry::GetMessageMap()
 T CSmallTextEntry::GetPanelClassName()
 T CSmallTextEntry::~CSmallTextEntry()
 T CSmartPtr<CEmberEffect, CRefCountAccessor> CEZParticleInit::InitSingleton<CEmberEffect>(CSmartPtr<CEmberEffect, CRefCountAccessor>)
 T CSmartPtr<CFireParticle, CRefCountAccessor> CEZParticleInit::InitSingleton<CFireParticle>(CSmartPtr<CFireParticle, CRefCountAccessor>)
 T CSmartPtr<CFireSmokeEffect, CRefCountAccessor> CEZParticleInit::InitSingleton<CFireSmokeEffect>(CSmartPtr<CFireSmokeEffect, CRefCountAccessor>)
 T CSmartPtr<CSimpleEmitter, CRefCountAccessor> CEZParticleInit::InitSingleton<CSimpleEmitter>(CSmartPtr<CSimpleEmitter, CRefCountAccessor>)
 T CSmokeEmitter::CreateSpurtParticles()
 T CSmokeEmitter::SimulateParticles(CParticleSimulateIterator*)
 T CSmokeEmitter::~CSmokeEmitter()
 T CSmokeParticle::UpdateAlpha(SimpleParticle const*)
 T CSmokeParticle::UpdateColor(SimpleParticle const*)
 T CSmokeParticle::UpdateRoll(SimpleParticle*, float)
 T CSmokeParticle::~CSmokeParticle()
 T CSnowFallManager::AddSnowFallEntity(CClient_Precipitation*)
 T CSnowFallManager::ClientThink()
 T CSnowFallManager::CreateInsideVolumeSnowParticles(float, float, Vector const&, Vector const&, float)
 T CSnowFallManager::CreateOutsideVolumeSnowParticles(float, float, float)
 T CSnowFallManager::CreateSnowFall()
 T CSnowFallManager::CreateSnowFallEmitter()
 T CSnowFallManager::CreateSnowFallParticle(Vector const&, int)
 T CSnowFallManager::CreateSnowParticlesRay(float, Vector const&, Vector const&)
 T CSnowFallManager::CreateSnowParticlesSphere(float)
 T CSnowFallManager::FindSnowVolumes(Vector&, float, Vector&, Vector&)
 T CSnowFallManager::IsTransparent()
 T CSnowFallManager::SpawnClientEntity()
 T CSnowFallManager::~CSnowFallManager()
 T CSolidSetDefaults::ParseKeyValue(void*, char const*, char const*)
 T CSolidSetDefaults::SetDefaults(void*)
 T CSoundControllerImp::CheckLoopingSoundsForPlayer(C_BasePlayer*)
 T CSoundControllerImp::CommandAdd(CSoundPatch*, float, soundcommands_t, float, float)
 T CSoundControllerImp::CommandClear(CSoundPatch*)
 T CSoundControllerImp::LevelShutdownPreEntity()
 T CSoundControllerImp::OnRestore()
 T CSoundControllerImp::Play(CSoundPatch*, float, float, float)
 T CSoundControllerImp::ProcessCommand(SoundCommand_t*)
 T CSoundControllerImp::RemoveFromList(CSoundPatch*)
 T CSoundControllerImp::RestoreSoundPatch(CSoundPatch**, IRestore*)
 T CSoundControllerImp::SaveSoundPatch(CSoundPatch*, ISave*)
 T CSoundControllerImp::Shutdown(CSoundPatch*)
 T CSoundControllerImp::SoundChangePitch(CSoundPatch*, float, float)
 T CSoundControllerImp::SoundChangeVolume(CSoundPatch*, float, float)
 T CSoundControllerImp::SoundCreate(IRecipientFilter&, int, EmitSound_t const&)
 T CSoundControllerImp::SoundCreate(IRecipientFilter&, int, char const*)
 T CSoundControllerImp::SoundCreate(IRecipientFilter&, int, int, char const*, float)
 T CSoundControllerImp::SoundCreate(IRecipientFilter&, int, int, char const*, soundlevel_t)
 T CSoundControllerImp::SoundDestroy(CSoundPatch*)
 T CSoundControllerImp::SoundFadeOut(CSoundPatch*, float, bool)
 T CSoundControllerImp::SoundGetName(CSoundPatch*)
 T CSoundControllerImp::SoundGetPitch(CSoundPatch*)
 T CSoundControllerImp::SoundGetVolume(CSoundPatch*)
 T CSoundControllerImp::SoundPlayEnvelope(CSoundPatch*, soundcommands_t, envelopeDescription_t*)
 T CSoundControllerImp::SoundPlayEnvelope(CSoundPatch*, soundcommands_t, envelopePoint_t*, int)
 T CSoundControllerImp::SoundSetCloseCaptionDuration(CSoundPatch*, float)
 T CSoundControllerImp::SystemReset()
 T CSoundControllerImp::SystemUpdate()
 T CSoundControllerImp::Update(float)
 T CSoundControllerImp::~CSoundControllerImp()
 T CSoundEmitterSystem::EmitCloseCaption(IRecipientFilter&, int, CSoundParameters const&, EmitSound_t const&)
 T CSoundEmitterSystem::EmitCloseCaption(IRecipientFilter&, int, bool, char const*, CUtlVector<Vector, CUtlMemory<Vector, int> >&, float, bool)
 T CSoundEmitterSystem::EmitSound(IRecipientFilter&, int, EmitSound_t const&)
 T CSoundEmitterSystem::EmitSoundByHandle(IRecipientFilter&, int, EmitSound_t const&, short&)
 T CSoundEmitterSystem::Init()
 T CSoundEmitterSystem::LevelInitPostEntity()
 T CSoundEmitterSystem::LevelInitPreEntity()
 T CSoundEmitterSystem::LevelShutdownPostEntity()
 T CSoundEmitterSystem::Name()
 T CSoundEmitterSystem::Shutdown()
 T CSoundEmitterSystem::StopSound(int, int, char const*)
 T CSoundEmitterSystem::StopSoundByHandle(int, char const*, short&)
 T CSoundEmitterSystem::TraceEmitSound(char const*, ...)
 T CSoundEmitterSystem::~CSoundEmitterSystem()
 T CSoundEnvelopeController::GetController()
 T CSoundPatch::AddPlayerPost(C_BasePlayer*)
 T CSoundPatch::Init(IRecipientFilter*, C_BaseEntity*, int, char const*, soundlevel_t)
 T CSoundPatch::ResumeSound()
 T CSoundPatch::StartSound(float)
 T CSoundPatch::Update(float, float)
 T CSoundPatchSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CSoundPatchSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CSpecButton::ApplySchemeSettings(vgui::IScheme*)
 T CSpecButton::~CSpecButton()
 T CSpectatorGUI::ApplySchemeSettings(vgui::IScheme*)
 T CSpectatorGUI::CSpectatorGUI(IViewPort*)
 T CSpectatorGUI::GetAnimMap()
 T CSpectatorGUI::GetBlackBarColor()
 T CSpectatorGUI::GetBottomBarHeight()
 T CSpectatorGUI::GetKBMap()
 T CSpectatorGUI::GetMessageMap()
 T CSpectatorGUI::GetName()
 T CSpectatorGUI::GetPanelClassName()
 T CSpectatorGUI::GetResFile()
 T CSpectatorGUI::GetTopBarHeight()
 T CSpectatorGUI::GetVPanel()
 T CSpectatorGUI::HasInputElements()
 T CSpectatorGUI::IsVisible()
 T CSpectatorGUI::NeedsUpdate()
 T CSpectatorGUI::OnThink()
 T CSpectatorGUI::PerformLayout()
 T CSpectatorGUI::Reset()
 T CSpectatorGUI::SetData(KeyValues*)
 T CSpectatorGUI::SetParent(unsigned int)
 T CSpectatorGUI::ShouldShowPlayerLabel(int)
 T CSpectatorGUI::ShowPanel(bool)
 T CSpectatorGUI::Update()
 T CSpectatorGUI::~CSpectatorGUI()
 T CSpectatorMenu::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T CSpectatorMenu::ApplySchemeSettings(vgui::IScheme*)
 T CSpectatorMenu::CSpectatorMenu(IViewPort*)
 T CSpectatorMenu::FireGameEvent(IGameEvent*)
 T CSpectatorMenu::GetAnimMap()
 T CSpectatorMenu::GetKBMap()
 T CSpectatorMenu::GetMessageMap()
 T CSpectatorMenu::GetName()
 T CSpectatorMenu::GetPanelClassName()
 T CSpectatorMenu::GetVPanel()
 T CSpectatorMenu::HasInputElements()
 T CSpectatorMenu::IsVisible()
 T CSpectatorMenu::NeedsUpdate()
 T CSpectatorMenu::OnCommand(char const*)
 T CSpectatorMenu::OnKeyCodePressed(ButtonCode_t)
 T CSpectatorMenu::OnTextChanged(KeyValues*)
 T CSpectatorMenu::PerformLayout()
 T CSpectatorMenu::Reset()
 T CSpectatorMenu::SetData(KeyValues*)
 T CSpectatorMenu::SetParent(unsigned int)
 T CSpectatorMenu::ShowPanel(bool)
 T CSpectatorMenu::Update()
 T CSpectatorMenu::~CSpectatorMenu()
 T CSpinUpdateBase::GetReadAttributes() const
 T CSpinUpdateBase::GetWrittenAttributes() const
 T CSpinUpdateBase::Operate(CParticleCollection*, float, void*) const
 T CSplashParticle::SetClipHeight(float)
 T CSplashParticle::SimulateParticles(CParticleSimulateIterator*)
 T CSplashParticle::UpdateAlpha(SimpleParticle const*)
 T CSplashParticle::UpdateRoll(SimpleParticle*, float)
 T CSplashParticle::UpdateVelocity(SimpleParticle*, float)
 T CSplashParticle::~CSplashParticle()
 T CSteamAPIContext::Init()
 T CStriderFXEnvelope::CStriderFXEnvelope()
 T CStriderFXEnvelope::~CStriderFXEnvelope()
 T CStringProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CStringProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CStringProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CStringRegistry::AddString(char const*, int)
 T CStringRegistry::CStringRegistry()
 T CStringRegistry::ClearStrings()
 T CStringRegistry::GetStringForKey(unsigned short)
 T CStringRegistry::GetStringID(char const*)
 T CStringRegistry::~CStringRegistry()
 T CStudioHdr::CActivityToSequenceMapping::Initialize(CStudioHdr*)
 T CStudioHdr::CActivityToSequenceMapping::Reinitialize(CStudioHdr*)
 T CStudioHdr::CActivityToSequenceMapping::SelectWeightedSequence(CStudioHdr*, int, int)
 T CStudioHdr::CActivityToSequenceMapping::ValidateAgainst(CStudioHdr const*)
 T CStudioHdr::CStudioHdr()
 T CStudioHdr::CStudioHdr(studiohdr_t const*, IMDLCache*)
 T CStudioHdr::EntryNode(int)
 T CStudioHdr::ExitNode(int)
 T CStudioHdr::GetActivityListVersion()
 T CStudioHdr::GetAttachmentBone(int)
 T CStudioHdr::GetNumAttachments() const
 T CStudioHdr::GetNumIKAutoplayLocks() const
 T CStudioHdr::GetNumPoseParameters() const
 T CStudioHdr::GetNumSeq() const
 T CStudioHdr::GetSharedPoseParameter(int, int) const
 T CStudioHdr::GetTransition(int, int) const
 T CStudioHdr::GroupStudioHdr(int)
 T CStudioHdr::Init(studiohdr_t const*, IMDLCache*)
 T CStudioHdr::RemapSeqBone(int, int) const
 T CStudioHdr::RunFlexRules(float const*, float*)
 T CStudioHdr::SequencesAvailable() const
 T CStudioHdr::SetActivityListVersion(int)
 T CStudioHdr::Term()
 T CStudioHdr::iRelativeAnim(int, int) const
 T CStudioHdr::iRelativeSeq(int, int) const
 T CStudioHdr::pAnimStudioHdr(int)
 T CStudioHdr::pAnimdesc(int)
 T CStudioHdr::pAttachment(int)
 T CStudioHdr::pIKAutoplayLock(int)
 T CStudioHdr::pPoseParameter(int)
 T CStudioHdr::pSeqStudioHdr(int)
 T CStudioHdr::pSeqdesc(int)
 T CStudioHdr::pszNodeName(int)
 T CStudioHdr::~CStudioHdr()
 T CStudioStatsEnumerator::EnumElement(IHandleEntity*)
 T CSubtractProxy::Init(IMaterial*, KeyValues*)
 T CSubtractProxy::OnBind(void*)
 T CSubtractProxy::~CSubtractProxy()
 T CTEParticleRenderer::AddParticle()
 T CTEParticleRenderer::Create(char const*, Vector const&)
 T CTEParticleRenderer::RenderParticles(CParticleRenderIterator*)
 T CTEParticleRenderer::SimulateParticles(CParticleSimulateIterator*)
 T CTEParticleRenderer::~CTEParticleRenderer()
 T CTSList<CClientLeafSystem::EnumResultList_t>::~CTSList()
 T CTSList<ClientWorldListInfo_t*>::~CTSList()
 T CTSListWithFreeList<CBaseHandle>::Purge()
 T CTSListWithFreeList<CBaseHandle>::PushItem(CBaseHandle const&)
 T CTSListWithFreeList<CBaseHandle>::~CTSListWithFreeList()
 T CTSQueue<CFunctor*, false>::CTSQueue()
 T CTSQueue<CFunctor*, false>::Pop()
 T CTSQueue<CFunctor*, false>::Purge()
 T CTSQueue<CFunctor*, false>::~CTSQueue()
 T CTakeDamageInfo::CTakeDamageInfo(C_BaseEntity*, C_BaseEntity*, float, int, int)
 T CTakeDamageInfo::Init(C_BaseEntity*, C_BaseEntity*, C_BaseEntity*, Vector const&, Vector const&, Vector const&, float, int, int)
 T CTakeDamageInfo::Set(C_BaseEntity*, C_BaseEntity*, float, int, int)
 T CTeamMenu::ApplySchemeSettings(vgui::IScheme*)
 T CTeamMenu::CTeamMenu(IViewPort*)
 T CTeamMenu::GetAnimMap()
 T CTeamMenu::GetKBMap()
 T CTeamMenu::GetMessageMap()
 T CTeamMenu::GetName()
 T CTeamMenu::GetPanelClassName()
 T CTeamMenu::GetVPanel()
 T CTeamMenu::HasInputElements()
 T CTeamMenu::IsVisible()
 T CTeamMenu::LoadMapPage(char const*)
 T CTeamMenu::NeedsUpdate()
 T CTeamMenu::OnKeyCodePressed(ButtonCode_t)
 T CTeamMenu::Reset()
 T CTeamMenu::SetData(KeyValues*)
 T CTeamMenu::SetLabelText(char const*, char const*)
 T CTeamMenu::SetParent(unsigned int)
 T CTeamMenu::ShowPanel(bool)
 T CTeamMenu::Update()
 T CTeamMenu::~CTeamMenu()
 T CTeleportCountdownScreen::Init(KeyValues*, VGuiScreenInitData_t*)
 T CTeleportCountdownScreen::OnTick()
 T CTeleportCountdownScreen::~CTeleportCountdownScreen()
 T CTempEnts::AddVisibleTempEntity(C_LocalTempEntity*)
 T CTempEnts::AttachTentToPlayer(int, int, float, float)
 T CTempEnts::BloodSprite(Vector const&, int, int, int, int, int, int, float)
 T CTempEnts::BreakModel(Vector const&, QAngle const&, Vector const&, Vector const&, float, float, int, int, char)
 T CTempEnts::BubbleTrail(Vector const&, Vector const&, float, int, int, float)
 T CTempEnts::Bubbles(Vector const&, Vector const&, float, int, int, float)
 T CTempEnts::CSEjectBrass(Vector const&, QAngle const&, int, int, C_BasePlayer*)
 T CTempEnts::CacheMuzzleFlashes()
 T CTempEnts::Clear()
 T CTempEnts::ClientProjectile(Vector const&, Vector const&, Vector const&, int, int, C_BaseEntity*, char const*, char const*)
 T CTempEnts::DefaultSprite(Vector const&, int, float)
 T CTempEnts::EjectBrass(Vector const&, QAngle const&, QAngle const&, int)
 T CTempEnts::FindTempEntByID(int, int)
 T CTempEnts::FizzEffect(C_BaseEntity*, int, int, int)
 T CTempEnts::HL1EjectBrass(Vector const&, QAngle const&, Vector const&, int)
 T CTempEnts::Init()
 T CTempEnts::KillAttachedTents(int)
 T CTempEnts::LevelInit()
 T CTempEnts::LevelShutdown()
 T CTempEnts::MuzzleFlash(Vector const&, QAngle const&, int, CBaseHandle, bool)
 T CTempEnts::MuzzleFlash(int, CBaseHandle, int, bool)
 T CTempEnts::MuzzleFlash_357_Player(CBaseHandle, int)
 T CTempEnts::MuzzleFlash_Combine_NPC(CBaseHandle, int)
 T CTempEnts::MuzzleFlash_Combine_Player(CBaseHandle, int)
 T CTempEnts::MuzzleFlash_Pistol_Player(CBaseHandle, int)
 T CTempEnts::MuzzleFlash_SMG1_Player(CBaseHandle, int)
 T CTempEnts::MuzzleFlash_Shotgun_NPC(CBaseHandle, int)
 T CTempEnts::MuzzleFlash_Shotgun_Player(CBaseHandle, int)
 T CTempEnts::PhysicsProp(int, int, Vector const&, QAngle const&, Vector const&, int, int)
 T CTempEnts::PlaySound(C_LocalTempEntity*, float)
 T CTempEnts::RicochetSprite(Vector const&, model_t*, float, float)
 T CTempEnts::RocketFlare(Vector const&)
 T CTempEnts::Shutdown()
 T CTempEnts::SpawnTempModel(model_t const*, Vector const&, QAngle const&, Vector const&, float, int)
 T CTempEnts::Sprite_Explode(C_LocalTempEntity*, float, int)
 T CTempEnts::Sprite_Smoke(C_LocalTempEntity*, float)
 T CTempEnts::Sprite_Spray(Vector const&, Vector const&, int, int, int, int)
 T CTempEnts::Sprite_Trail(Vector const&, Vector const&, int, int, float, float, float, int, float)
 T CTempEnts::TempEntAlloc(Vector const&, model_t const*)
 T CTempEnts::TempEntAllocHigh(Vector const&, model_t const*)
 T CTempEnts::TempEntFree(int)
 T CTempEnts::TempSprite(Vector const&, Vector const&, float, int, int, int, float, float, int, Vector const&)
 T CTempEnts::Update()
 T CTempEnts::~CTempEnts()
 T CTextWindow::ApplySchemeSettings(vgui::IScheme*)
 T CTextWindow::CTextWindow(IViewPort*)
 T CTextWindow::GetAnimMap()
 T CTextWindow::GetKBMap()
 T CTextWindow::GetMessageMap()
 T CTextWindow::GetName()
 T CTextWindow::GetPanelClassName()
 T CTextWindow::GetVPanel()
 T CTextWindow::HasInputElements()
 T CTextWindow::IsVisible()
 T CTextWindow::NeedsUpdate()
 T CTextWindow::OnCommand(char const*)
 T CTextWindow::OnKeyCodePressed(ButtonCode_t)
 T CTextWindow::Reset()
 T CTextWindow::SetData(KeyValues*)
 T CTextWindow::SetData(int, char const*, char const*, char const*, int, bool)
 T CTextWindow::SetParent(unsigned int)
 T CTextWindow::ShowFile(char const*)
 T CTextWindow::ShowIndex(char const*)
 T CTextWindow::ShowPanel(bool)
 T CTextWindow::ShowText(char const*)
 T CTextWindow::ShowURL(char const*, bool)
 T CTextWindow::Update()
 T CTextWindow::~CTextWindow()
 T CTextureAllocator::DeallocateTexture(unsigned short)
 T CTextureAllocator::Reset()
 T CTextureAllocator::UseTexture(unsigned short, bool, float)
 T CTextureIdProperty::GetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CTextureIdProperty::InitFromDefault(vgui::Panel*, PanelAnimationMapEntry*)
 T CTextureIdProperty::SetData(vgui::Panel*, KeyValues*, PanelAnimationMapEntry*)
 T CTextureReference::CTextureReference()
 T CTextureReference::CTextureReference(CTextureReference const&)
 T CTextureReference::Init(ITexture*)
 T CTextureReference::Init(char const*, char const*, bool)
 T CTextureReference::InitRenderTarget(int, int, RenderTargetSizeMode_t, ImageFormat, MaterialRenderTargetDepth_t, bool, char*)
 T CTextureReference::Shutdown(bool)
 T CTextureReference::operator=(CTextureReference&)
 T CTextureReference::~CTextureReference()
 T CTextureScrollMaterialProxy::GetMaterial()
 T CTextureScrollMaterialProxy::Init(IMaterial*, KeyValues*)
 T CTextureScrollMaterialProxy::OnBind(void*)
 T CTextureScrollMaterialProxy::Release()
 T CTextureScrollMaterialProxy::~CTextureScrollMaterialProxy()
 T CTextureTransformProxy::Init(IMaterial*, KeyValues*)
 T CTextureTransformProxy::OnBind(void*)
 T CTextureTransformProxy::~CTextureTransformProxy()
 T CThinkSyncTester::ThinkLessFunc(ThinkSync const&, ThinkSync const&)
 T CThinkSyncTester::~CThinkSyncTester()
 T CThirdPersonManager::GetDistanceFraction()
 T CThirdPersonManager::GetFinalCameraOffset()
 T CThirdPersonManager::Init()
 T CThirdPersonManager::PositionCamera(C_BasePlayer*, QAngle)
 T CThirdPersonManager::Update()
 T CTimeMaterialProxy::OnBind(void*)
 T CTimeMaterialProxy::~CTimeMaterialProxy()
 T CToolFrameworkClient::Init()
 T CToolFrameworkClient::LevelInitPostEntity()
 T CToolFrameworkClient::LevelInitPreEntity()
 T CToolFrameworkClient::LevelShutdownPostEntity()
 T CToolFrameworkClient::LevelShutdownPreEntity()
 T CToolFrameworkClient::PostRender()
 T CToolFrameworkClient::PreRender()
 T CToolFrameworkClient::~CToolFrameworkClient()
 T CTraceFilter::GetTraceType() const
 T CTraceFilterGlow::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterHitAll::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterNoCombatCharacters::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterNoNPCsOrPlayer::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterSimple::CTraceFilterSimple(IHandleEntity const*, int, bool (*)(IHandleEntity*, int))
 T CTraceFilterSimple::SetCollisionGroup(int)
 T CTraceFilterSimple::SetPassEntity(IHandleEntity const*)
 T CTraceFilterSimple::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterSimpleList::AddEntityToIgnore(IHandleEntity*)
 T CTraceFilterSimpleList::CTraceFilterSimpleList(int)
 T CTraceFilterSimpleList::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterSkipNPCsAndPlayers::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterSkipPlayerAndViewModel::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterSkipTwoEntities::CTraceFilterSkipTwoEntities(IHandleEntity const*, IHandleEntity const*, int)
 T CTraceFilterSkipTwoEntities::SetPassEntity2(IHandleEntity const*)
 T CTraceFilterSkipTwoEntities::ShouldHitEntity(IHandleEntity*, int)
 T CTraceFilterWorldOnly::GetTraceType() const
 T CTraceFilterWorldOnly::ShouldHitEntity(IHandleEntity*, int)
 T CTrailParticles::CTrailParticles(char const*)
 T CTrailParticles::RenderParticles(CParticleRenderIterator*)
 T CTrailParticles::Setup(Vector const&, Vector const*, float, float, float, float, float, int, bool)
 T CTrailParticles::SimulateParticles(CParticleSimulateIterator*)
 T CTrailParticles::~CTrailParticles()
 T CTransformManipulator::CTransformManipulator(matrix3x4_t*)
 T CTranslationManipulator::OnCursorMoved(int, int)
 T CTranslationManipulator::OnMousePressed(ButtonCode_t, int, int)
 T CUnderWaterView::CRefractionView::Draw()
 T CUnderWaterView::CRefractionView::~CRefractionView()
 T CUnderWaterView::Draw()
 T CUnderWaterView::Setup(CViewSetup const&, bool, VisibleFogVolumeInfo_t const&, WaterRenderInfo_t const&)
 T CUnderWaterView::~CUnderWaterView()
 T CUniformNoiseProxy::Init(IMaterial*, KeyValues*)
 T CUniformNoiseProxy::OnBind(void*)
 T CUniformNoiseProxy::~CUniformNoiseProxy()
 T CUserCmd::GetChecksum() const
 T CUserCmd::operator=(CUserCmd const&)
 T CUserCmd::~CUserCmd()
 T CUserMessageRegister::RegisterAll()
 T CUserMessages::DispatchUserMessage(int, bf_read&)
 T CUserMessages::HookMessage(char const*, void (*)(bf_read&))
 T CUserMessages::Register(char const*, int)
 T CUserMessages::~CUserMessages()
 T CUtlBinaryBlock::CUtlBinaryBlock(CUtlBinaryBlock const&)
 T CUtlBinaryBlock::CUtlBinaryBlock(int, int)
 T CUtlBinaryBlock::SetLength(int)
 T CUtlBuffer::AddNullTermination()
 T CUtlBuffer::AssumeMemory(void*, int, int, int)
 T CUtlBuffer::CUtlBuffer(int, int, int)
 T CUtlBuffer::CUtlBuffer(void const*, int, int)
 T CUtlBuffer::CheckArbitraryPeekGet(int, int&)
 T CUtlBuffer::CheckGet(int)
 T CUtlBuffer::CheckPut(int)
 T CUtlBuffer::EatCPPComment()
 T CUtlBuffer::EatWhiteSpace()
 T CUtlBuffer::EnsureCapacity(int)
 T CUtlBuffer::Get(void*, int)
 T CUtlBuffer::GetDelimitedCharInternal(CUtlCharConversion*)
 T CUtlBuffer::GetDelimitedString(CUtlCharConversion*, char*, int)
 T CUtlBuffer::GetOverflow(int)
 T CUtlBuffer::GetString(char*, int)
 T CUtlBuffer::GetToken(char const*)
 T CUtlBuffer::ParseToken(char const*, char const*, char*, int)
 T CUtlBuffer::PeekDelimitedStringLength(CUtlCharConversion*, bool)
 T CUtlBuffer::PeekGet(int, int)
 T CUtlBuffer::PeekStringLength()
 T CUtlBuffer::PeekStringMatch(int, char const*, int)
 T CUtlBuffer::PeekWhiteSpace(int)
 T CUtlBuffer::Put(void const*, int)
 T CUtlBuffer::PutOverflow(int)
 T CUtlBuffer::Scanf(char const*, ...)
 T CUtlBuffer::SeekGet(CUtlBuffer::SeekType_t, int)
 T CUtlBuffer::SeekPut(CUtlBuffer::SeekType_t, int)
 T CUtlBuffer::SetBufferType(bool, bool)
 T CUtlBuffer::SetExternalBuffer(void*, int, int, int)
 T CUtlBuffer::VaScanf(char const*, char*)
 T CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
 T CUtlCStringConversion::FindConversion(char const*, int*)
 T CUtlCharConversion::FindConversion(char const*, int*)
 T CUtlDict<CActivityRemapCache, int>::~CUtlDict()
 T CUtlDict<CDecalEmitterSystem::DecalEntry, int>::~CUtlDict()
 T CUtlDict<CHudTexture*, int>::~CUtlDict()
 T CUtlDict<CLCD::IconInfo_t, int>::~CUtlDict()
 T CUtlDict<CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::~CUtlDict()
 T CUtlDict<CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::~CUtlDict()
 T CUtlDict<CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::~CUtlDict()
 T CUtlDict<CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::~CUtlDict()
 T CUtlDict<CParticleSubTexture*, unsigned short>::PurgeAndDeleteElements()
 T CUtlDict<CParticleSubTexture*, unsigned short>::~CUtlDict()
 T CUtlDict<CUserMessage*, int>::~CUtlDict()
 T CUtlDict<CUtlString, int>::~CUtlDict()
 T CUtlDict<CUtlString, unsigned short>::~CUtlDict()
 T CUtlDict<EventGroup, int>::~CUtlDict()
 T CUtlDict<FileWeaponInfo_t*, unsigned short>::~CUtlDict()
 T CUtlDict<IPanelFactory*, unsigned short>::~CUtlDict()
 T CUtlDict<KeyValues*, int>::~CUtlDict()
 T CUtlDict<KeyValues*, unsigned short>::~CUtlDict()
 T CUtlDict<classentry_t, unsigned short>::~CUtlDict()
 T CUtlDict<int, int>::~CUtlDict()
 T CUtlDict<int, unsigned short>::~CUtlDict()
 T CUtlDict<vgui::IPanelAnimationPropertyConverter*, int>::~CUtlDict()
 T CUtlFixedLinkedList<C_InfoTeleporterCountdown*>::~CUtlFixedLinkedList()
 T CUtlHandleTable<vgui::BuildGroup, 20>::AddHandle()
 T CUtlHandleTable<vgui::BuildGroup, 20>::RemoveHandle(unsigned int)
 T CUtlHandleTable<vgui::BuildGroup, 20>::~CUtlHandleTable()
 T CUtlHash<CEntityDataInstantiator<CWatcherList>::HashEntry, bool (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&, CEntityDataInstantiator<CWatcherList>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&)>::Insert(CEntityDataInstantiator<CWatcherList>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<CWatcherList>::HashEntry, bool (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&, CEntityDataInstantiator<CWatcherList>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<CWatcherList>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CEntityDataInstantiator<ModelScale>::HashEntry, bool (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&, CEntityDataInstantiator<ModelScale>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&)>::Insert(CEntityDataInstantiator<ModelScale>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<ModelScale>::HashEntry, bool (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&, CEntityDataInstantiator<ModelScale>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<ModelScale>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CEntityDataInstantiator<StepSimulationData>::HashEntry, bool (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&, CEntityDataInstantiator<StepSimulationData>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&)>::Insert(CEntityDataInstantiator<StepSimulationData>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<StepSimulationData>::HashEntry, bool (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&, CEntityDataInstantiator<StepSimulationData>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<StepSimulationData>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CEntityDataInstantiator<groundlink_t>::HashEntry, bool (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&, CEntityDataInstantiator<groundlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&)>::Insert(CEntityDataInstantiator<groundlink_t>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<groundlink_t>::HashEntry, bool (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&, CEntityDataInstantiator<groundlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<groundlink_t>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CEntityDataInstantiator<physicspushlist_t>::HashEntry, bool (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&, CEntityDataInstantiator<physicspushlist_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&)>::Insert(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<physicspushlist_t>::HashEntry, bool (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&, CEntityDataInstantiator<physicspushlist_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<physicspushlist_t>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CEntityDataInstantiator<touchlink_t>::HashEntry, bool (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&, CEntityDataInstantiator<touchlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&)>::Insert(CEntityDataInstantiator<touchlink_t>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<touchlink_t>::HashEntry, bool (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&, CEntityDataInstantiator<touchlink_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<touchlink_t>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, bool (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&, CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&)>::Insert(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&)
 T CUtlHash<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, bool (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&, CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&), unsigned int (*)(CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry const&)>::~CUtlHash()
 T CUtlHash<CStudioHdr::CActivityToSequenceMapping::HashValueType, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs>::Insert(CStudioHdr::CActivityToSequenceMapping::HashValueType const&)
 T CUtlHash<CStudioHdr::CActivityToSequenceMapping::HashValueType, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs, CStudioHdr::CActivityToSequenceMapping::HashValueType::HashFuncs>::~CUtlHash()
 T CUtlHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, char const*>::BumpEntry(unsigned int)
 T CUtlHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, char const*>::DoInsertUnconstructed(unsigned int, bool)
 T CUtlHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, char const*>::DoRealloc(int)
 T CUtlLinkedList<CAchievementNotificationPanel::Notification_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CAchievementNotificationPanel::Notification_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CAchievementNotificationPanel::Notification_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CAchievementNotificationPanel::Notification_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CAsyncCaption*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CAsyncCaption*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CAsyncCaption*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CAsyncCaption*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CAsyncCaption*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CAsyncCaption*, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short>, unsigned int> >::AllocInternal(bool)
 T CUtlLinkedList<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short>, unsigned int> >::LinkBefore(unsigned int, unsigned int)
 T CUtlLinkedList<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short>, unsigned int> >::Purge()
 T CUtlLinkedList<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short>, unsigned int> >::~CUtlLinkedList()
 T CUtlLinkedList<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short>, unsigned int> >::AllocInternal(bool)
 T CUtlLinkedList<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short>, unsigned int> >::LinkBefore(unsigned int, unsigned int)
 T CUtlLinkedList<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short>, unsigned int> >::Purge()
 T CUtlLinkedList<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short>, unsigned int> >::~CUtlLinkedList()
 T CUtlLinkedList<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short>, unsigned int> >::AllocInternal(bool)
 T CUtlLinkedList<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short>, unsigned int> >::LinkBefore(unsigned int, unsigned int)
 T CUtlLinkedList<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short>, unsigned int> >::Purge()
 T CUtlLinkedList<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short>, unsigned int> >::~CUtlLinkedList()
 T CUtlLinkedList<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short>, unsigned int> >::AllocInternal(bool)
 T CUtlLinkedList<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short>, unsigned int> >::LinkBefore(unsigned int, unsigned int)
 T CUtlLinkedList<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short>, unsigned int> >::Purge()
 T CUtlLinkedList<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short, true, unsigned int, CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short>, unsigned int> >::~CUtlLinkedList()
 T CUtlLinkedList<CBreakableHelper::BreakableList_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBreakableHelper::BreakableList_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CBreakableHelper::BreakableList_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CBreakableHelper::BreakableList_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CClientEntityList::CPVSNotifyInfo, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientEntityList::CPVSNotifyInfo, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CClientEntityList::CPVSNotifyInfo, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientEntityList::CPVSNotifyInfo, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CClientLeafSystem::RenderableInfo_t, unsigned short, false, unsigned int, CUtlMemory<UtlLinkedListElem_t<CClientLeafSystem::RenderableInfo_t, unsigned short>, unsigned int> >::AllocInternal(bool)
 T CUtlLinkedList<CClientLeafSystem::RenderableInfo_t, unsigned short, false, unsigned int, CUtlMemory<UtlLinkedListElem_t<CClientLeafSystem::RenderableInfo_t, unsigned short>, unsigned int> >::LinkBefore(unsigned int, unsigned int)
 T CUtlLinkedList<CClientLeafSystem::RenderableInfo_t, unsigned short, false, unsigned int, CUtlMemory<UtlLinkedListElem_t<CClientLeafSystem::RenderableInfo_t, unsigned short>, unsigned int> >::Purge()
 T CUtlLinkedList<CClientLeafSystem::ShadowInfo_t, unsigned short, false, unsigned int, CUtlMemory<UtlLinkedListElem_t<CClientLeafSystem::ShadowInfo_t, unsigned short>, unsigned int> >::AllocInternal(bool)
 T CUtlLinkedList<CClientLeafSystem::ShadowInfo_t, unsigned short, false, unsigned int, CUtlMemory<UtlLinkedListElem_t<CClientLeafSystem::ShadowInfo_t, unsigned short>, unsigned int> >::LinkBefore(unsigned int, unsigned int)
 T CUtlLinkedList<CClientLeafSystem::ShadowInfo_t, unsigned short, false, unsigned int, CUtlMemory<UtlLinkedListElem_t<CClientLeafSystem::ShadowInfo_t, unsigned short>, unsigned int> >::Purge()
 T CUtlLinkedList<CClientShadowMgr::ClientShadow_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientShadowMgr::ClientShadow_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CClientShadowMgr::ClientShadow_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientShadowMgr::ClientShadow_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CClientShadowMgr::ClientShadow_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientShadowMgr::ClientShadow_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CClientThinkList::ThinkEntry_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientThinkList::ThinkEntry_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CClientThinkList::ThinkEntry_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CClientThinkList::ThinkEntry_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CDataChangedEvent, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDataChangedEvent, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CDataChangedEvent, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDataChangedEvent, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CDataChangedEvent, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDataChangedEvent, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CDataChangedEvent, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CDataChangedEvent, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<CEffectMaterial*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CEffectMaterial*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CEffectMaterial*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CEffectMaterial*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CEffectMaterial*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CEffectMaterial*, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CGlowOverlay*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CGlowOverlay*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CGlowOverlay*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CGlowOverlay*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CGlowOverlay*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CGlowOverlay*, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CHandle<C_BaseAnimating>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CHandle<C_BaseAnimating>, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CHandle<C_BaseAnimating>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CHandle<C_BaseAnimating>, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CHandle<C_BaseEntity>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CHandle<C_BaseEntity>, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CHandle<C_BaseEntity>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CHandle<C_BaseEntity>, unsigned short>, unsigned short> >::FindAndRemove(CHandle<C_BaseEntity> const&)
 T CUtlLinkedList<CHandle<C_BaseEntity>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CHandle<C_BaseEntity>, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CHandle<C_BaseEntity>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CHandle<C_BaseEntity>, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CParticleEffect*, int, false, int, CUtlMemory<UtlLinkedListElem_t<CParticleEffect*, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<CParticleEffectBinding*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CParticleEffectBinding*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CParticleEffectBinding*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CParticleEffectBinding*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CParticleEffectBinding*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CParticleEffectBinding*, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CPrecipitationParticle, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CPrecipitationParticle, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CPrecipitationParticle, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CPrecipitationParticle, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CRopeManager::RopeQueuedRenderCache_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRopeManager::RopeQueuedRenderCache_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CRopeManager::RopeQueuedRenderCache_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CRopeManager::RopeQueuedRenderCache_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CTeslaInfo, int, false, int, CUtlMemory<UtlLinkedListElem_t<CTeslaInfo, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<CTextureAllocator::TextureInfo_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CTextureAllocator::TextureInfo_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CTextureAllocator::TextureInfo_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CTextureAllocator::TextureInfo_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CTextureAllocator::TextureInfo_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CTextureAllocator::TextureInfo_t, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CUtlMultiList<CPixelVisSet, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CPixelVisSet, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CUtlMultiList<CPixelVisSet, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CPixelVisSet, unsigned short>::List_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CUtlMultiList<CPixelVisSet, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CPixelVisSet, unsigned short>::List_t, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CUtlMultiList<CPixelVisibilityQuery, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CPixelVisibilityQuery, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CUtlMultiList<CPixelVisibilityQuery, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CPixelVisibilityQuery, unsigned short>::List_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CUtlMultiList<CPixelVisibilityQuery, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CPixelVisibilityQuery, unsigned short>::List_t, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<CUtlMultiList<CTextureAllocator::FragmentInfo_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CTextureAllocator::FragmentInfo_t, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CUtlMultiList<CTextureAllocator::FragmentInfo_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CTextureAllocator::FragmentInfo_t, unsigned short>::List_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CUtlMultiList<CTextureAllocator::FragmentInfo_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CTextureAllocator::FragmentInfo_t, unsigned short>::List_t, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<C_BaseEntity*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<C_BaseEntity*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<C_BaseEntity*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<C_BaseEntity*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<C_BaseEntity*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<C_BaseEntity*, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<C_InfoTeleporterCountdown*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<C_InfoTeleporterCountdown*, int> > >::AllocInternal(bool)
 T CUtlLinkedList<C_InfoTeleporterCountdown*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<C_InfoTeleporterCountdown*, int> > >::RemoveAll()
 T CUtlLinkedList<C_InfoTeleporterCountdown*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<C_InfoTeleporterCountdown*, int> > >::Unlink(int)
 T CUtlLinkedList<C_LocalTempEntity*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<C_LocalTempEntity*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<C_LocalTempEntity*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<C_LocalTempEntity*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<C_RopeKeyframe*, int, false, int, CUtlMemory<UtlLinkedListElem_t<C_RopeKeyframe*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<C_RopeKeyframe*, int, false, int, CUtlMemory<UtlLinkedListElem_t<C_RopeKeyframe*, int>, int> >::~CUtlLinkedList()
 T CUtlLinkedList<C_RopeKeyframe*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<C_RopeKeyframe*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<C_RopeKeyframe*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<C_RopeKeyframe*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<C_RopeKeyframe*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<C_RopeKeyframe*, unsigned short>, unsigned short> >::Purge()
 T CUtlLinkedList<JiggleData, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<JiggleData, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<JiggleData, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<JiggleData, unsigned short>, unsigned short> >::LinkAfter(unsigned short, unsigned short)
 T CUtlLinkedList<Panel_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<Panel_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<Panel_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<Panel_t, unsigned short>, unsigned short> >::LinkAfter(unsigned short, unsigned short)
 T CUtlLinkedList<Panel_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<Panel_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<vgui::CItemButton*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::CItemButton*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::FastSortListPanelItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::FastSortListPanelItem*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::ListPanel::column_t, unsigned char, false, unsigned char, CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::ListPanel::column_t, unsigned char, false, unsigned char, CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char> >::Free(unsigned char)
 T CUtlLinkedList<vgui::ListPanel::column_t, unsigned char, false, unsigned char, CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char> >::LinkBefore(unsigned char, unsigned char)
 T CUtlLinkedList<vgui::ListPanel::column_t, unsigned char, false, unsigned char, CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char> >::RemoveAll()
 T CUtlLinkedList<vgui::ListViewItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::ListViewItem*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::MenuItem*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::MenuItem*, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::PanelListPanel::dataitem_s, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::PanelListPanel::dataitem_s, int>, int> >::AllocInternal(bool)
 T CUtlLinkedList<vgui::TreeNode*, int, false, int, CUtlMemory<UtlLinkedListElem_t<vgui::TreeNode*, int>, int> >::AllocInternal(bool)
 T CUtlMap<AvatarImagePair_t, int, unsigned short>::~CUtlMap()
 T CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::~CUtlMap()
 T CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Find(CStudioHdr const* const&) const
 T CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Insert(CStudioHdr const* const&, ModelPoseDebugInfo const&)
 T CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t::Node_t(CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t const&)
 T CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Find(char const* const&) const
 T CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Insert(char const* const&, CDecalEmitterSystem::DecalEntry const&)
 T CUtlMap<char const*, CUtlString, int>::Find(char const* const&) const
 T CUtlMap<char const*, CUtlString, int>::Insert(char const* const&)
 T CUtlMap<char const*, EventGroup, int>::Find(char const* const&) const
 T CUtlMap<char const*, EventGroup, int>::Insert(char const* const&, EventGroup const&)
 T CUtlMemory<AppSystemInfo_t, int>::Grow(int)
 T CUtlMemory<AsyncCaption_t, int>::Grow(int)
 T CUtlMemory<BMPResAnimData_t, int>::Grow(int)
 T CUtlMemory<BMPResAttachData_t, int>::Grow(int)
 T CUtlMemory<BoneAccess, int>::Grow(int)
 T CUtlMemory<CAsyncCaption::caption_t*, int>::Grow(int)
 T CUtlMemory<CAttachmentData, int>::Grow(int)
 T CUtlMemory<CBaseHandle, int>::Grow(int)
 T CUtlMemory<CBoneMergeCache::CMergedBone, int>::Grow(int)
 T CUtlMemory<CChoreoActor*, int>::Grow(int)
 T CUtlMemory<CChoreoChannel*, int>::Grow(int)
 T CUtlMemory<CChoreoEvent*, int>::Grow(int)
 T CUtlMemory<CChoreoScene*, int>::Grow(int)
 T CUtlMemory<CClientLeafSystem::ClientLeaf_t, int>::Grow(int)
 T CUtlMemory<CClientLeafSystem::RenderableInfo_t*, int>::Grow(int)
 T CUtlMemory<CClientThinkList::ThinkListChanges_t, int>::Grow(int)
 T CUtlMemory<CClient_Precipitation*, int>::Grow(int)
 T CUtlMemory<CCloseCaptionItem*, int>::Grow(int)
 T CUtlMemory<CCloseCaptionWorkUnit*, int>::Grow(int)
 T CUtlMemory<CDecalEmitterSystem::DecalListEntry, int>::Grow(int)
 T CUtlMemory<CDetailModel, int>::Grow(int)
 T CUtlMemory<CDetailObjectSystem::DetailModelDict_t, int>::Grow(int)
 T CUtlMemory<CDmxAttribute*, int>::Grow(int)
 T CUtlMemory<CDmxElement*, int>::Grow(int)
 T CUtlMemory<CDmxElementDictionary::AttributeInfo_t, int>::Grow(int)
 T CUtlMemory<CDmxElementDictionary::DictInfo_t, int>::Grow(int)
 T CUtlMemory<CDragDropHelperPanel::DragHelperPanel_t, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int>::Grow(int)
 T CUtlMemory<CEntityGroundContact, int>::Grow(int)
 T CUtlMemory<CEventAbsoluteTag, int>::Grow(int)
 T CUtlMemory<CEventRelativeTag, int>::Grow(int)
 T CUtlMemory<CExpressionSample, int>::Grow(int)
 T CUtlMemory<CFlexAnimationTrack*, int>::Grow(int)
 T CUtlMemory<CFlexSceneFile*, int>::Grow(int)
 T CUtlMemory<CFlexTimingTag, int>::Grow(int)
 T CUtlMemory<CHandle<C_BaseAnimating>, int>::Grow(int)
 T CUtlMemory<CHandle<C_BaseEntity>, int>::Grow(int)
 T CUtlMemory<CHandle<C_BaseFlex>, int>::Grow(int)
 T CUtlMemory<CHandle<C_PointCommentaryNode>, int>::Grow(int)
 T CUtlMemory<CHandle<C_VGuiScreen>, int>::Grow(int)
 T CUtlMemory<CHudElement*, int>::Grow(int)
 T CUtlMemory<CHudHistoryResource::HIST_ITEM, int>::Grow(int)
 T CUtlMemory<CHudMenu::ProcessedLine, int>::Grow(int)
 T CUtlMemory<CHudMessage::message_t, int>::Grow(int)
 T CUtlMemory<CHudWeaponSelection::WeaponBox_t, int>::Grow(int)
 T CUtlMemory<CInterpolatedVar<C_AnimationLayer>, int>::Grow(int)
 T CUtlMemory<CLCDItem*, int>::Grow(int)
 T CUtlMemory<CLCDPage*, int>::Grow(int)
 T CUtlMemory<CModelPanelAttachedModelInfo*, int>::Grow(int)
 T CUtlMemory<CModelPanelModelAnimation*, int>::Grow(int)
 T CUtlMemory<CMoveHelperClient::touchlist_t, int>::Grow(int)
 T CUtlMemory<CNetGraphPanel::CLineSegment, int>::Grow(int)
 T CUtlMemory<CNewParticleEffect*, int>::Grow(int)
 T CUtlMemory<CPDumpPanel::DumpInfo, int>::Grow(int)
 T CUtlMemory<CParticleCollection*, int>::Grow(int)
 T CUtlMemory<CParticleOperatorInstance*, int>::Grow(int)
 T CUtlMemory<CParticleSubTextureGroup*, int>::Grow(int)
 T CUtlMemory<CParticleSystemDefinition*, int>::Grow(int)
 T CUtlMemory<CParticleSystemMgr::BatchStep_t, int>::Grow(int)
 T CUtlMemory<CParticleSystemMgr::Batch_t, int>::Grow(int)
 T CUtlMemory<CParticleSystemMgr::RenderCache_t, int>::Grow(int)
 T CUtlMemory<CPerfVisualBenchmark::RunInfo_t, int>::Grow(int)
 T CUtlMemory<CPhysSaveRestoreBlockHandler::QueuedItem_t, int>::Grow(int)
 T CUtlMemory<CPropData::propdata_breakablechunk_t, int>::Grow(int)
 T CUtlMemory<CRopeManager::RopeRenderData_t, int>::Grow(int)
 T CUtlMemory<CSceneEventInfo, int>::Grow(int)
 T CUtlMemory<CSheet*, int>::Grow(int)
 T CUtlMemory<CSimpleKeyInterp, int>::Grow(int)
 T CUtlMemory<CSimplePhysics::CNode, int>::Grow(int)
 T CUtlMemory<CSnowFallManager::SnowFall_t, int>::Grow(int)
 T CUtlMemory<CSoundPatch*, int>::Grow(int)
 T CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int>::Grow(int)
 T CUtlMemory<CTextureReference, int>::Grow(int)
 T CUtlMemory<CUtlBinaryBlock, int>::Grow(int)
 T CUtlMemory<CUtlHandleTable<vgui::BuildGroup, 20>::EntryType_t, int>::Grow(int)
 T CUtlMemory<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::ListElem_t, int>::Grow(int)
 T CUtlMemory<CUtlMultiList<CPixelVisSet, unsigned short>::ListElem_t, int>::Grow(int)
 T CUtlMemory<CUtlMultiList<CPixelVisibilityQuery, unsigned short>::ListElem_t, int>::Grow(int)
 T CUtlMemory<CUtlMultiList<CTextureAllocator::FragmentInfo_t, unsigned short>::ListElem_t, int>::Grow(int)
 T CUtlMemory<CUtlString, int>::Grow(int)
 T CUtlMemory<CUtlSymbol, int>::Grow(int)
 T CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<CWatcherList>::HashEntry, CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<ModelScale>::HashEntry, CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<StepSimulationData>::HashEntry, CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<groundlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<physicspushlist_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<touchlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CGameSaveRestoreInfo::CHashElement, CUtlMemory<CGameSaveRestoreInfo::CHashElement, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<VoiceCommandMenuItem_t, CUtlMemory<VoiceCommandMenuItem_t, int> >, int>::Grow(int)
 T CUtlMemory<CUtlVector<ikcontextikrule_t, CUtlMemory<ikcontextikrule_t, int> >, int>::Grow(int)
 T CUtlMemory<CVTFTexture::ResourceMemorySection, int>::Grow(int)
 T CUtlMemory<CViewAngleKeyFrame*, int>::Grow(int)
 T CUtlMemory<C_AnimationLayer, int>::Grow(int)
 T CUtlMemory<C_BaseAnimating*, int>::Grow(int)
 T CUtlMemory<C_BaseEntity*, int>::Grow(int)
 T CUtlMemory<C_FuncLadder*, int>::Grow(int)
 T CUtlMemory<C_FuncPhysicsRespawnZone*, int>::Grow(int)
 T CUtlMemory<C_FuncPhysicsRespawnZone::clientsideproprespawn_t, int>::Grow(int)
 T CUtlMemory<C_PhysPropClientside*, int>::Grow(int)
 T CUtlMemory<C_SceneEntity::QueuedEvents_t, int>::Grow(int)
 T CUtlMemory<C_SlideshowDisplay*, int>::Grow(int)
 T CUtlMemory<C_Team*, int>::Grow(int)
 T CUtlMemory<CaptionLookup_t, int>::Grow(int)
 T CUtlMemory<Color, int>::Grow(int)
 T CUtlMemory<CommandMenu::CommandMenuItem, int>::Grow(int)
 T CUtlMemory<DetailPropLightstylesLump_t, int>::Grow(int)
 T CUtlMemory<DetailPropSpriteDict_t, int>::Grow(int)
 T CUtlMemory<IClientEffect*, int>::Grow(int)
 T CUtlMemory<IClientEntityListener*, int>::Grow(int)
 T CUtlMemory<IClientRenderable*, int>::Grow(int)
 T CUtlMemory<IGameSystem*, int>::Grow(int)
 T CUtlMemory<IGameSystemPerFrame*, int>::Grow(int)
 T CUtlMemory<IHandleEntity*, int>::Grow(int)
 T CUtlMemory<IMaterial*, int>::Grow(int)
 T CUtlMemory<IParticleOperatorDefinition*, int>::Grow(int)
 T CUtlMemory<ISaveRestoreBlockHandler*, int>::Grow(int)
 T CUtlMemory<IViewPortPanel*, int>::Grow(int)
 T CUtlMemory<IntroDataBlendPass_t, int>::Grow(int)
 T CUtlMemory<KeyValues*, int>::Grow(int)
 T CUtlMemory<ModelPoseDebugInfo::InfoText, int>::Grow(int)
 T CUtlMemory<PanelAnimationMapEntry, int>::Grow(int)
 T CUtlMemory<PanelItem_t, int>::Grow(int)
 T CUtlMemory<ParticleChildrenInfo_t, int>::Grow(int)
 T CUtlMemory<ParticleControlPoint_t, int>::Grow(int)
 T CUtlMemory<ParticleEffectList_t, int>::Grow(int)
 T CUtlMemory<QAngle, int>::Grow(int)
 T CUtlMemory<Quaternion, int>::Grow(int)
 T CUtlMemory<ResourceEntryInfo, int>::Grow(int)
 T CUtlMemory<RopeSegData_t, int>::Grow(int)
 T CUtlMemory<S3RGBA, int>::Grow(int)
 T CUtlMemory<SaveRestoreBlockHeader_t, int>::Grow(int)
 T CUtlMemory<SlideMaterialList_t*, int>::Grow(int)
 T CUtlMemory<SoundCommand_t*, int>::Grow(int)
 T CUtlMemory<SteamControllerGlyphSet_t, int>::Grow(int)
 T CUtlMemory<TextRange, int>::Grow(int)
 T CUtlMemory<UniqueId_t, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CAchievementNotificationPanel::Notification_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CAsyncCaption*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short>, unsigned int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<int, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short>, unsigned int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::BucketListInfo_t, unsigned short>, unsigned int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CBidirectionalSet<unsigned short, unsigned short, unsigned short, unsigned int>::ElementListInfo_t, unsigned short>, unsigned int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CBreakableHelper::BreakableList_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CClientEntityList::CPVSNotifyInfo, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CClientLeafSystem::RenderableInfo_t, unsigned short>, unsigned int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CClientLeafSystem::ShadowInfo_t, unsigned short>, unsigned int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CClientShadowMgr::ClientShadow_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CClientThinkList::ThinkEntry_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CDataChangedEvent, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CEffectMaterial*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CGlowOverlay*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CHandle<C_BaseAnimating>, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CHandle<C_BaseEntity>, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CParticleEffectBinding*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CPrecipitationParticle, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CRopeManager::RopeQueuedRenderCache_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CTeslaInfo, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CTextureAllocator::TextureInfo_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CPixelVisSet, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CPixelVisibilityQuery, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CTextureAllocator::FragmentInfo_t, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<C_BaseEntity*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<C_LocalTempEntity*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<C_RopeKeyframe*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<C_RopeKeyframe*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<JiggleData, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<Panel_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::CItemButton*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::FastSortListPanelItem*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::ListPanel::column_t, unsigned char>, unsigned char>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::ListViewItem*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::MenuItem*, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::PanelListPanel::dataitem_s, int>, int>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<vgui::TreeNode*, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CClientTools::HToolEntry_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CHudCloseCaption::CaptionRepeat, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CPlayerLogoProxy::PlayerLogo, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CHudTexture*, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CWorldListCache::Entry_t*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<FS_LocalToGlobal_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<char const*, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<unsigned short, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<VMatrix, int>::Grow(int)
 T CUtlMemory<VarMapEntry_t, int>::Grow(int)
 T CUtlMemory<Vector, int>::Grow(int)
 T CUtlMemory<Vector2D, int>::Grow(int)
 T CUtlMemory<Vector4D, int>::Grow(int)
 T CUtlMemory<VisibleShadowInfo_t, int>::Grow(int)
 T CUtlMemory<VoiceCommandMenuItem_t, int>::Grow(int)
 T CUtlMemory<activitylist_t, int>::Grow(int)
 T CUtlMemory<bool, int>::Grow(int)
 T CUtlMemory<breakmodel_t, int>::Grow(int)
 T CUtlMemory<char const*, int>::Grow(int)
 T CUtlMemory<char, int>::Grow(int)
 T CUtlMemory<clientanimating_t, int>::Grow(int)
 T CUtlMemory<creditname_t, int>::Grow(int)
 T CUtlMemory<eventlist_t, int>::Grow(int)
 T CUtlMemory<float, int>::Grow(int)
 T CUtlMemory<fluidevent_t, int>::Grow(int)
 T CUtlMemory<ikcontextikrule_t, int>::Grow(int)
 T CUtlMemory<int, int>::Grow(int)
 T CUtlMemory<loopingsound_t, int>::Grow(int)
 T CUtlMemory<matrix3x4_t, int>::Grow(int)
 T CUtlMemory<physicssound::impactsound_t, int>::Grow(int)
 T CUtlMemory<ragdoll_remember_t, int>::Grow(int)
 T CUtlMemory<randomsound_t, int>::Grow(int)
 T CUtlMemory<screenfade_t*, int>::Grow(int)
 T CUtlMemory<screenshake_t*, int>::Grow(int)
 T CUtlMemory<studiohdr_t const*, int>::Grow(int)
 T CUtlMemory<thinkfunc_t, int>::Grow(int)
 T CUtlMemory<touchevent_t, int>::Grow(int)
 T CUtlMemory<typedescription_t*, int>::Grow(int)
 T CUtlMemory<unsigned char, int>::Grow(int)
 T CUtlMemory<unsigned int, int>::Grow(int)
 T CUtlMemory<unsigned long, int>::Grow(int)
 T CUtlMemory<unsigned short, int>::Grow(int)
 T CUtlMemory<vgui::AnimationController::ActiveAnimation_t, int>::Grow(int)
 T CUtlMemory<vgui::AnimationController::AnimCommand_t, int>::Grow(int)
 T CUtlMemory<vgui::AnimationController::AnimSequence_t, int>::Grow(int)
 T CUtlMemory<vgui::AnimationController::PostedMessage_t, int>::Grow(int)
 T CUtlMemory<vgui::BoundKey_t, int>::Grow(int)
 T CUtlMemory<vgui::BuildModeDialog*, int>::Grow(int)
 T CUtlMemory<vgui::CItemButton*, int>::Grow(int)
 T CUtlMemory<vgui::CTreeViewListControl::CColumnInfo, int>::Grow(int)
 T CUtlMemory<vgui::ClickPanel*, int>::Grow(int)
 T CUtlMemory<vgui::DHANDLE<vgui::Menu>, int>::Grow(int)
 T CUtlMemory<vgui::IImage*, int>::Grow(int)
 T CUtlMemory<vgui::ImagePanel*, int>::Grow(int)
 T CUtlMemory<vgui::Label*, int>::Grow(int)
 T CUtlMemory<vgui::Label::TImageInfo, int>::Grow(int)
 T CUtlMemory<vgui::Menu*, int>::Grow(int)
 T CUtlMemory<vgui::MenuButton*, int>::Grow(int)
 T CUtlMemory<vgui::MenuSeparator*, int>::Grow(int)
 T CUtlMemory<vgui::MessageMapItem_t, int>::Grow(int)
 T CUtlMemory<vgui::OverridableColorEntry, int>::Grow(int)
 T CUtlMemory<vgui::PHandle, int>::Grow(int)
 T CUtlMemory<vgui::Panel*, int>::Grow(int)
 T CUtlMemory<vgui::RichText::TFormatStream, int>::Grow(int)
 T CUtlMemory<vgui::SectionedListPanel::column_t, int>::Grow(int)
 T CUtlMemory<vgui::SectionedListPanel::section_t, int>::Grow(int)
 T CUtlMemory<vgui::SortedPanel_t, int>::Grow(int)
 T CUtlMemory<vgui::TextImage*, int>::Grow(int)
 T CUtlMemory<vgui::TreeNode*, int>::Grow(int)
 T CUtlMemory<void (*)(bf_read&), int>::Grow(int)
 T CUtlMemory<void*, int>::Grow(int)
 T CUtlMemory<wchar_t*, int>::Grow(int)
 T CUtlMemory<wchar_t, int>::Grow(int)
 T CUtlMemoryPool::AddNewBlob()
 T CUtlMemoryPool::Alloc()
 T CUtlMemoryPool::Alloc(unsigned long)
 T CUtlMemoryPool::AllocZero()
 T CUtlMemoryPool::CUtlMemoryPool(int, int, int, char const*, int)
 T CUtlMemoryPool::Clear()
 T CUtlMemoryPool::Free(void*)
 T CUtlMemoryPool::~CUtlMemoryPool()
 T CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Alloc()
 T CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::LinkBefore(unsigned short, unsigned short, unsigned short)
 T CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::~CUtlMultiList()
 T CUtlMultiList<CPixelVisSet, unsigned short>::Alloc()
 T CUtlMultiList<CPixelVisSet, unsigned short>::LinkAfter(unsigned short, unsigned short, unsigned short)
 T CUtlMultiList<CPixelVisSet, unsigned short>::Purge()
 T CUtlMultiList<CPixelVisSet, unsigned short>::~CUtlMultiList()
 T CUtlMultiList<CPixelVisibilityQuery, unsigned short>::Alloc()
 T CUtlMultiList<CPixelVisibilityQuery, unsigned short>::LinkAfter(unsigned short, unsigned short, unsigned short)
 T CUtlMultiList<CPixelVisibilityQuery, unsigned short>::RemoveAll()
 T CUtlMultiList<CTextureAllocator::FragmentInfo_t, unsigned short>::Alloc()
 T CUtlMultiList<CTextureAllocator::FragmentInfo_t, unsigned short>::LinkAfter(unsigned short, unsigned short, unsigned short)
 T CUtlMultiList<CTextureAllocator::FragmentInfo_t, unsigned short>::LinkBefore(unsigned short, unsigned short, unsigned short)
 T CUtlMultiList<CTextureAllocator::FragmentInfo_t, unsigned short>::Purge()
 T CUtlMultiList<CTextureAllocator::FragmentInfo_t, unsigned short>::~CUtlMultiList()
 T CUtlMultiList<watcher_t, unsigned short>::Remove(unsigned short, unsigned short)
 T CUtlMultiList<watcher_t, unsigned short>::~CUtlMultiList()
 T CUtlNoEscConversion::FindConversion(char const*, int*)
 T CUtlPriorityQueue<CHudElement*>::Insert(CHudElement* const&)
 T CUtlPriorityQueue<CHudElement*>::RemoveAt(int)
 T CUtlPriorityQueue<CPhysSaveRestoreBlockHandler::QueuedItem_t>::Insert(CPhysSaveRestoreBlockHandler::QueuedItem_t const&)
 T CUtlPriorityQueue<CPhysSaveRestoreBlockHandler::QueuedItem_t>::RemoveAtHead()
 T CUtlPriorityQueue<SoundCommand_t*>::Insert(SoundCommand_t* const&)
 T CUtlPriorityQueue<SoundCommand_t*>::RemoveAt(int)
 T CUtlPriorityQueue<SoundCommand_t*>::RemoveAtHead()
 T CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::Find(AsyncCaption_t::BlockInfo_t const&) const
 T CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::FindInsertionPosition(AsyncCaption_t::BlockInfo_t const&, unsigned short&, bool&)
 T CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::Insert(AsyncCaption_t::BlockInfo_t const&)
 T CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<AsyncCaption_t::BlockInfo_t, unsigned short, bool (*)(AsyncCaption_t::BlockInfo_t const&, AsyncCaption_t::BlockInfo_t const&), CUtlMemory<UtlRBTreeNode_t<AsyncCaption_t::BlockInfo_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CBoneSetupEnt, unsigned short, bool (*)(CBoneSetupEnt const&, CBoneSetupEnt const&), CUtlMemory<UtlRBTreeNode_t<CBoneSetupEnt, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CBoneSetupEnt, unsigned short, bool (*)(CBoneSetupEnt const&, CBoneSetupEnt const&), CUtlMemory<UtlRBTreeNode_t<CBoneSetupEnt, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::FindInsertionPosition(CChoreoEvent* const&, unsigned short&, bool&)
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::Insert(CChoreoEvent* const&)
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CChoreoEvent*, unsigned short, bool (*)(CChoreoEvent* const&, CChoreoEvent* const&), CUtlMemory<UtlRBTreeNode_t<CChoreoEvent*, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::FindInsertionPosition(CChoreoScene::ActiveList const&, int&, bool&)
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::FirstInorder() const
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::InsertAt(int, bool)
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::RemoveAll()
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CChoreoScene::ActiveList, int, bool (*)(CChoreoScene::ActiveList const&, CChoreoScene::ActiveList const&), CUtlMemory<UtlRBTreeNode_t<CChoreoScene::ActiveList, int>, int> >::RotateRight(int)
 T CUtlRBTree<CClientTools::HToolEntry_t, unsigned short, bool (*)(CClientTools::HToolEntry_t const&, CClientTools::HToolEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CClientTools::HToolEntry_t, unsigned short>, unsigned short> >::Find(CClientTools::HToolEntry_t const&) const
 T CUtlRBTree<CClientTools::HToolEntry_t, unsigned short, bool (*)(CClientTools::HToolEntry_t const&, CClientTools::HToolEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CClientTools::HToolEntry_t, unsigned short>, unsigned short> >::FindInsertionPosition(CClientTools::HToolEntry_t const&, unsigned short&, bool&)
 T CUtlRBTree<CClientTools::HToolEntry_t, unsigned short, bool (*)(CClientTools::HToolEntry_t const&, CClientTools::HToolEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CClientTools::HToolEntry_t, unsigned short>, unsigned short> >::Insert(CClientTools::HToolEntry_t const&)
 T CUtlRBTree<CClientTools::HToolEntry_t, unsigned short, bool (*)(CClientTools::HToolEntry_t const&, CClientTools::HToolEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CClientTools::HToolEntry_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CClientTools::HToolEntry_t, unsigned short, bool (*)(CClientTools::HToolEntry_t const&, CClientTools::HToolEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CClientTools::HToolEntry_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CClientTools::HToolEntry_t, unsigned short, bool (*)(CClientTools::HToolEntry_t const&, CClientTools::HToolEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CClientTools::HToolEntry_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CClientTools::HToolEntry_t, unsigned short, bool (*)(CClientTools::HToolEntry_t const&, CClientTools::HToolEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CClientTools::HToolEntry_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CClientTools::HToolEntry_t, unsigned short, bool (*)(CClientTools::HToolEntry_t const&, CClientTools::HToolEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CClientTools::HToolEntry_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CClientTools::HToolEntry_t, unsigned short, bool (*)(CClientTools::HToolEntry_t const&, CClientTools::HToolEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CClientTools::HToolEntry_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CClientTools::HToolEntry_t, unsigned short, bool (*)(CClientTools::HToolEntry_t const&, CClientTools::HToolEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CClientTools::HToolEntry_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CClientTools::HToolEntry_t, unsigned short, bool (*)(CClientTools::HToolEntry_t const&, CClientTools::HToolEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CClientTools::HToolEntry_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CClientTools::HToolEntry_t, unsigned short, bool (*)(CClientTools::HToolEntry_t const&, CClientTools::HToolEntry_t const&), CUtlMemory<UtlRBTreeNode_t<CClientTools::HToolEntry_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CCombatCharVisCache::VisCacheEntry_t, unsigned short, CCombatCharVisCache::CVisCacheEntryLess, CUtlMemory<UtlRBTreeNode_t<CCombatCharVisCache::VisCacheEntry_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CHudCloseCaption::CaptionRepeat, int, bool (*)(CHudCloseCaption::CaptionRepeat const&, CHudCloseCaption::CaptionRepeat const&), CUtlMemory<UtlRBTreeNode_t<CHudCloseCaption::CaptionRepeat, int>, int> >::Find(CHudCloseCaption::CaptionRepeat const&) const
 T CUtlRBTree<CHudCloseCaption::CaptionRepeat, int, bool (*)(CHudCloseCaption::CaptionRepeat const&, CHudCloseCaption::CaptionRepeat const&), CUtlMemory<UtlRBTreeNode_t<CHudCloseCaption::CaptionRepeat, int>, int> >::FindInsertionPosition(CHudCloseCaption::CaptionRepeat const&, int&, bool&)
 T CUtlRBTree<CHudCloseCaption::CaptionRepeat, int, bool (*)(CHudCloseCaption::CaptionRepeat const&, CHudCloseCaption::CaptionRepeat const&), CUtlMemory<UtlRBTreeNode_t<CHudCloseCaption::CaptionRepeat, int>, int> >::Insert(CHudCloseCaption::CaptionRepeat const&)
 T CUtlRBTree<CHudCloseCaption::CaptionRepeat, int, bool (*)(CHudCloseCaption::CaptionRepeat const&, CHudCloseCaption::CaptionRepeat const&), CUtlMemory<UtlRBTreeNode_t<CHudCloseCaption::CaptionRepeat, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CHudCloseCaption::CaptionRepeat, int, bool (*)(CHudCloseCaption::CaptionRepeat const&, CHudCloseCaption::CaptionRepeat const&), CUtlMemory<UtlRBTreeNode_t<CHudCloseCaption::CaptionRepeat, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CHudCloseCaption::CaptionRepeat, int, bool (*)(CHudCloseCaption::CaptionRepeat const&, CHudCloseCaption::CaptionRepeat const&), CUtlMemory<UtlRBTreeNode_t<CHudCloseCaption::CaptionRepeat, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CHudCloseCaption::CaptionRepeat, int, bool (*)(CHudCloseCaption::CaptionRepeat const&, CHudCloseCaption::CaptionRepeat const&), CUtlMemory<UtlRBTreeNode_t<CHudCloseCaption::CaptionRepeat, int>, int> >::NewNode()
 T CUtlRBTree<CHudCloseCaption::CaptionRepeat, int, bool (*)(CHudCloseCaption::CaptionRepeat const&, CHudCloseCaption::CaptionRepeat const&), CUtlMemory<UtlRBTreeNode_t<CHudCloseCaption::CaptionRepeat, int>, int> >::RemoveAll()
 T CUtlRBTree<CHudCloseCaption::CaptionRepeat, int, bool (*)(CHudCloseCaption::CaptionRepeat const&, CHudCloseCaption::CaptionRepeat const&), CUtlMemory<UtlRBTreeNode_t<CHudCloseCaption::CaptionRepeat, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CHudCloseCaption::CaptionRepeat, int, bool (*)(CHudCloseCaption::CaptionRepeat const&, CHudCloseCaption::CaptionRepeat const&), CUtlMemory<UtlRBTreeNode_t<CHudCloseCaption::CaptionRepeat, int>, int> >::RotateRight(int)
 T CUtlRBTree<CKeyBindingsMgr::KBContext_t, int, bool (*)(CKeyBindingsMgr::KBContext_t const&, CKeyBindingsMgr::KBContext_t const&), CUtlMemory<UtlRBTreeNode_t<CKeyBindingsMgr::KBContext_t, int>, int> >::Find(CKeyBindingsMgr::KBContext_t const&) const
 T CUtlRBTree<CKeyBindingsMgr::KBContext_t, int, bool (*)(CKeyBindingsMgr::KBContext_t const&, CKeyBindingsMgr::KBContext_t const&), CUtlMemory<UtlRBTreeNode_t<CKeyBindingsMgr::KBContext_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CPlayerLogoProxy::PlayerLogo, unsigned short, bool (*)(CPlayerLogoProxy::PlayerLogo const&, CPlayerLogoProxy::PlayerLogo const&), CUtlMemory<UtlRBTreeNode_t<CPlayerLogoProxy::PlayerLogo, unsigned short>, unsigned short> >::Find(CPlayerLogoProxy::PlayerLogo const&) const
 T CUtlRBTree<CPlayerLogoProxy::PlayerLogo, unsigned short, bool (*)(CPlayerLogoProxy::PlayerLogo const&, CPlayerLogoProxy::PlayerLogo const&), CUtlMemory<UtlRBTreeNode_t<CPlayerLogoProxy::PlayerLogo, unsigned short>, unsigned short> >::FindInsertionPosition(CPlayerLogoProxy::PlayerLogo const&, unsigned short&, bool&)
 T CUtlRBTree<CPlayerLogoProxy::PlayerLogo, unsigned short, bool (*)(CPlayerLogoProxy::PlayerLogo const&, CPlayerLogoProxy::PlayerLogo const&), CUtlMemory<UtlRBTreeNode_t<CPlayerLogoProxy::PlayerLogo, unsigned short>, unsigned short> >::Insert(CPlayerLogoProxy::PlayerLogo const&)
 T CUtlRBTree<CPlayerLogoProxy::PlayerLogo, unsigned short, bool (*)(CPlayerLogoProxy::PlayerLogo const&, CPlayerLogoProxy::PlayerLogo const&), CUtlMemory<UtlRBTreeNode_t<CPlayerLogoProxy::PlayerLogo, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CPlayerLogoProxy::PlayerLogo, unsigned short, bool (*)(CPlayerLogoProxy::PlayerLogo const&, CPlayerLogoProxy::PlayerLogo const&), CUtlMemory<UtlRBTreeNode_t<CPlayerLogoProxy::PlayerLogo, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CPlayerLogoProxy::PlayerLogo, unsigned short, bool (*)(CPlayerLogoProxy::PlayerLogo const&, CPlayerLogoProxy::PlayerLogo const&), CUtlMemory<UtlRBTreeNode_t<CPlayerLogoProxy::PlayerLogo, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CPlayerLogoProxy::PlayerLogo, unsigned short, bool (*)(CPlayerLogoProxy::PlayerLogo const&, CPlayerLogoProxy::PlayerLogo const&), CUtlMemory<UtlRBTreeNode_t<CPlayerLogoProxy::PlayerLogo, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CPlayerLogoProxy::PlayerLogo, unsigned short, bool (*)(CPlayerLogoProxy::PlayerLogo const&, CPlayerLogoProxy::PlayerLogo const&), CUtlMemory<UtlRBTreeNode_t<CPlayerLogoProxy::PlayerLogo, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CPlayerLogoProxy::PlayerLogo, unsigned short, bool (*)(CPlayerLogoProxy::PlayerLogo const&, CPlayerLogoProxy::PlayerLogo const&), CUtlMemory<UtlRBTreeNode_t<CPlayerLogoProxy::PlayerLogo, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CPlayerLogoProxy::PlayerLogo, unsigned short, bool (*)(CPlayerLogoProxy::PlayerLogo const&, CPlayerLogoProxy::PlayerLogo const&), CUtlMemory<UtlRBTreeNode_t<CPlayerLogoProxy::PlayerLogo, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short, CUtlMap<AvatarImagePair_t, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short, CUtlMap<AvatarImagePair_t, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short, CUtlMap<AvatarImagePair_t, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short, CUtlMap<AvatarImagePair_t, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short, CUtlMap<AvatarImagePair_t, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short, CUtlMap<AvatarImagePair_t, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short, CUtlMap<AvatarImagePair_t, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short, CUtlMap<AvatarImagePair_t, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short, CUtlMap<AvatarImagePair_t, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short, CUtlMap<AvatarImagePair_t, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AvatarImagePair_t, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short, CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CChoreoActor*, C_BaseFlex*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short, CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CDetailModel*, CDetailModel::LightStyleInfo_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short, CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CPhysCollide const*, BBox_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<CSteamID, int, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<CSteamID, int, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<CSteamID, int, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short, CUtlMap<CSteamID, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSteamID, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short, CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short, CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short, CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short, CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short, CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short, CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short, CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short, CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short, CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short, CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short, CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short, CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CStudioHdr const*, ModelPoseDebugInfo, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short, CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<C_BaseEntity*, CPhysSaveRestoreBlockHandler::CEntityRestoreSet*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<IClientUnknown*, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<IClientUnknown*, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<IClientUnknown*, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<IClientUnknown*, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<IClientUnknown*, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<IClientUnknown*, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<IClientUnknown*, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<IClientUnknown*, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<IClientUnknown*, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<IClientUnknown*, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<IClientUnknown*, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short, CUtlMap<IClientUnknown*, unsigned short, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IClientUnknown*, unsigned short, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, CPhysCollide const*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short, CUtlMap<IPhysicsObject*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<IPhysicsObject*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int, CUtlMap<char const*, CActivityRemapCache, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int, CUtlMap<char const*, CActivityRemapCache, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int, CUtlMap<char const*, CActivityRemapCache, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int, CUtlMap<char const*, CActivityRemapCache, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CActivityRemapCache, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int, CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CDecalEmitterSystem::DecalEntry, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CHudTexture*, int>::Node_t, int, CUtlMap<char const*, CHudTexture*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CHudTexture*, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, CHudTexture*, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CHudTexture*, int>::Node_t, int, CUtlMap<char const*, CHudTexture*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CHudTexture*, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, CHudTexture*, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CHudTexture*, int>::Node_t, int, CUtlMap<char const*, CHudTexture*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CHudTexture*, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CHudTexture*, int>::Node_t, int, CUtlMap<char const*, CHudTexture*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CHudTexture*, int>::Node_t, int>, int> >::InsertAt(int, bool)
 T CUtlRBTree<CUtlMap<char const*, CHudTexture*, int>::Node_t, int, CUtlMap<char const*, CHudTexture*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CHudTexture*, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CHudTexture*, int>::Node_t, int, CUtlMap<char const*, CHudTexture*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CHudTexture*, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CHudTexture*, int>::Node_t, int, CUtlMap<char const*, CHudTexture*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CHudTexture*, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CHudTexture*, int>::Node_t, int, CUtlMap<char const*, CHudTexture*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CHudTexture*, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CHudTexture*, int>::Node_t, int, CUtlMap<char const*, CHudTexture*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CHudTexture*, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CHudTexture*, int>::Node_t, int, CUtlMap<char const*, CHudTexture*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CHudTexture*, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CHudTexture*, int>::Node_t, int, CUtlMap<char const*, CHudTexture*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CHudTexture*, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int, CUtlMap<char const*, CLCD::IconInfo_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int, CUtlMap<char const*, CLCD::IconInfo_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int, CUtlMap<char const*, CLCD::IconInfo_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int, CUtlMap<char const*, CLCD::IconInfo_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int>, int> >::InsertAt(int, bool)
 T CUtlRBTree<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int, CUtlMap<char const*, CLCD::IconInfo_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int, CUtlMap<char const*, CLCD::IconInfo_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int, CUtlMap<char const*, CLCD::IconInfo_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int, CUtlMap<char const*, CLCD::IconInfo_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int, CUtlMap<char const*, CLCD::IconInfo_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int, CUtlMap<char const*, CLCD::IconInfo_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int, CUtlMap<char const*, CLCD::IconInfo_t, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CLCD::IconInfo_t, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::InsertAt(int, bool)
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelAnimationDictionary::PanelAnimationMapDictionaryEntry, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::InsertAt(int, bool)
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelKeyBindingMapDictionary::PanelKeyBindingMapDictionaryEntry, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::InsertAt(int, bool)
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int, CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMessageMapDictionary::PanelMessageMapDictionaryEntry, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CPanelMetaClassMgrImp::MetaClassDict_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CParticleSubTexture*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CParticleSubTexture*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CParticleSubTexture*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CParticleSubTexture*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CParticleSubTexture*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CParticleSubTexture*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CParticleSubTexture*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CParticleSubTexture*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CParticleSubTexture*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CParticleSubTexture*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CParticleSubTexture*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CParticleSubTexture*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CParticleSubTexture*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, CUserMessage*, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, CUserMessage*, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::InsertAt(int, bool)
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CUserMessage*, int>::Node_t, int, CUtlMap<char const*, CUserMessage*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUserMessage*, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CUtlString, int>::Node_t, int, CUtlMap<char const*, CUtlString, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, CUtlString, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, CUtlString, int>::Node_t, int, CUtlMap<char const*, CUtlString, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, CUtlString, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, CUtlString, int>::Node_t, int, CUtlMap<char const*, CUtlString, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CUtlString, int>::Node_t, int, CUtlMap<char const*, CUtlString, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, CUtlString, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, CUtlString, int>::Node_t, int, CUtlMap<char const*, CUtlString, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, CUtlString, int>::Node_t, int, CUtlMap<char const*, CUtlString, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CUtlString, int>::Node_t, int, CUtlMap<char const*, CUtlString, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, CUtlString, int>::Node_t, int, CUtlMap<char const*, CUtlString, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, CUtlString, int>::Node_t, int, CUtlMap<char const*, CUtlString, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, CUtlString, int>::Node_t, int, CUtlMap<char const*, CUtlString, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, CUtlString, int>::Node_t, int, CUtlMap<char const*, CUtlString, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, CUtlString, int>::Node_t, int, CUtlMap<char const*, CUtlString, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CUtlString, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CUtlString, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CUtlString, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, CUtlString, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, CUtlString, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, EventGroup, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, EventGroup, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::Insert(CUtlMap<char const*, EventGroup, int>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, EventGroup, int>::Node_t, int, CUtlMap<char const*, EventGroup, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, EventGroup, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, FileWeaponInfo_t*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IPanelFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IPanelFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IPanelFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IPanelFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IPanelFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IPanelFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IPanelFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IPanelFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IPanelFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IPanelFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IPanelFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IPanelFactory*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IPanelFactory*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short, CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, IParticleEffect* (*)(), unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, KeyValues*, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, KeyValues*, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::InsertAt(int, bool)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, int>::Node_t, int, CUtlMap<char const*, KeyValues*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, KeyValues*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<char const*, KeyValues*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, KeyValues*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<char const*, KeyValues*, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, KeyValues*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, KeyValues*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, KeyValues*, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, KeyValues*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, KeyValues*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, KeyValues*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, KeyValues*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, KeyValues*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, KeyValues*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, KeyValues*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, KeyValues*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, KeyValues*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, KeyValues*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, KeyValues*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<char const*, classentry_t, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<char const*, classentry_t, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, classentry_t, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, classentry_t, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, classentry_t, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, int, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, int, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::InsertAt(int, bool)
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, int, int>::Node_t, int, CUtlMap<char const*, int, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<char const*, int, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlMap<char const*, int, unsigned short>::Node_t const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<char const*, int, unsigned short>::Node_t const&)
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short, CUtlMap<char const*, int, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, int, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::Find(CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t const&) const
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::FindInsertionPosition(CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t const&, int&, bool&)
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::InsertAt(int, bool)
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::RemoveAll()
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int, CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<char const*, vgui::IPanelAnimationPropertyConverter*, int>::Node_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short, CUtlMap<int, CHudRenderGroup*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t const&) const
 T CUtlRBTree<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short, CUtlMap<int, CHudRenderGroup*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short, CUtlMap<int, CHudRenderGroup*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short, CUtlMap<int, CHudRenderGroup*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short, CUtlMap<int, CHudRenderGroup*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short, CUtlMap<int, CHudRenderGroup*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short, CUtlMap<int, CHudRenderGroup*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short, CUtlMap<int, CHudRenderGroup*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CHudRenderGroup*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Find(CUtlSymbolTable::CStringPoolIndex const&) const
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::FindInsertionPosition(CUtlSymbolTable::CStringPoolIndex const&, unsigned short&, bool&)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Insert(CUtlSymbolTable::CStringPoolIndex const&)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CWorldListCache::Entry_t*, unsigned short, CWorldListCache::CEntryComparator, CUtlMemory<UtlRBTreeNode_t<CWorldListCache::Entry_t*, unsigned short>, unsigned short> >::Find(CWorldListCache::Entry_t* const&) const
 T CUtlRBTree<CWorldListCache::Entry_t*, unsigned short, CWorldListCache::CEntryComparator, CUtlMemory<UtlRBTreeNode_t<CWorldListCache::Entry_t*, unsigned short>, unsigned short> >::FindInsertionPosition(CWorldListCache::Entry_t* const&, unsigned short&, bool&)
 T CUtlRBTree<CWorldListCache::Entry_t*, unsigned short, CWorldListCache::CEntryComparator, CUtlMemory<UtlRBTreeNode_t<CWorldListCache::Entry_t*, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<CWorldListCache::Entry_t*, unsigned short, CWorldListCache::CEntryComparator, CUtlMemory<UtlRBTreeNode_t<CWorldListCache::Entry_t*, unsigned short>, unsigned short> >::Insert(CWorldListCache::Entry_t* const&)
 T CUtlRBTree<CWorldListCache::Entry_t*, unsigned short, CWorldListCache::CEntryComparator, CUtlMemory<UtlRBTreeNode_t<CWorldListCache::Entry_t*, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CWorldListCache::Entry_t*, unsigned short, CWorldListCache::CEntryComparator, CUtlMemory<UtlRBTreeNode_t<CWorldListCache::Entry_t*, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<CWorldListCache::Entry_t*, unsigned short, CWorldListCache::CEntryComparator, CUtlMemory<UtlRBTreeNode_t<CWorldListCache::Entry_t*, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<CWorldListCache::Entry_t*, unsigned short, CWorldListCache::CEntryComparator, CUtlMemory<UtlRBTreeNode_t<CWorldListCache::Entry_t*, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CWorldListCache::Entry_t*, unsigned short, CWorldListCache::CEntryComparator, CUtlMemory<UtlRBTreeNode_t<CWorldListCache::Entry_t*, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<CWorldListCache::Entry_t*, unsigned short, CWorldListCache::CEntryComparator, CUtlMemory<UtlRBTreeNode_t<CWorldListCache::Entry_t*, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<CWorldListCache::Entry_t*, unsigned short, CWorldListCache::CEntryComparator, CUtlMemory<UtlRBTreeNode_t<CWorldListCache::Entry_t*, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CWorldListCache::Entry_t*, unsigned short, CWorldListCache::CEntryComparator, CUtlMemory<UtlRBTreeNode_t<CWorldListCache::Entry_t*, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<FS_LocalToGlobal_t, unsigned short, bool (*)(FS_LocalToGlobal_t const&, FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<FS_LocalToGlobal_t, unsigned short>, unsigned short> >::Find(FS_LocalToGlobal_t const&) const
 T CUtlRBTree<FS_LocalToGlobal_t, unsigned short, bool (*)(FS_LocalToGlobal_t const&, FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<FS_LocalToGlobal_t, unsigned short>, unsigned short> >::FindInsertionPosition(FS_LocalToGlobal_t const&, unsigned short&, bool&)
 T CUtlRBTree<FS_LocalToGlobal_t, unsigned short, bool (*)(FS_LocalToGlobal_t const&, FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<FS_LocalToGlobal_t, unsigned short>, unsigned short> >::Insert(FS_LocalToGlobal_t const&)
 T CUtlRBTree<FS_LocalToGlobal_t, unsigned short, bool (*)(FS_LocalToGlobal_t const&, FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<FS_LocalToGlobal_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<FS_LocalToGlobal_t, unsigned short, bool (*)(FS_LocalToGlobal_t const&, FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<FS_LocalToGlobal_t, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<FS_LocalToGlobal_t, unsigned short, bool (*)(FS_LocalToGlobal_t const&, FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<FS_LocalToGlobal_t, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<FS_LocalToGlobal_t, unsigned short, bool (*)(FS_LocalToGlobal_t const&, FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<FS_LocalToGlobal_t, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<FS_LocalToGlobal_t, unsigned short, bool (*)(FS_LocalToGlobal_t const&, FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<FS_LocalToGlobal_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<FS_LocalToGlobal_t, unsigned short, bool (*)(FS_LocalToGlobal_t const&, FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<FS_LocalToGlobal_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<FS_LocalToGlobal_t, unsigned short, bool (*)(FS_LocalToGlobal_t const&, FS_LocalToGlobal_t const&), CUtlMemory<UtlRBTreeNode_t<FS_LocalToGlobal_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<ThinkSync, unsigned short, bool (*)(ThinkSync const&, ThinkSync const&), CUtlMemory<UtlRBTreeNode_t<ThinkSync, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::FindInsertionPosition(char const* const&, int&, bool&)
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::FirstInorder() const
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::InsertAt(int, bool)
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::NextInorder(int) const
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::RemoveAll()
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::RotateLeft(int)
 T CUtlRBTree<char const*, int, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, int>, int> >::RotateRight(int)
 T CUtlRBTree<unsigned short, unsigned short, bool (*)(unsigned short const&, unsigned short const&), CUtlMemory<UtlRBTreeNode_t<unsigned short, unsigned short>, unsigned short> >::Find(unsigned short const&) const
 T CUtlRBTree<unsigned short, unsigned short, bool (*)(unsigned short const&, unsigned short const&), CUtlMemory<UtlRBTreeNode_t<unsigned short, unsigned short>, unsigned short> >::FindInsertionPosition(unsigned short const&, unsigned short&, bool&)
 T CUtlRBTree<unsigned short, unsigned short, bool (*)(unsigned short const&, unsigned short const&), CUtlMemory<UtlRBTreeNode_t<unsigned short, unsigned short>, unsigned short> >::FirstInorder() const
 T CUtlRBTree<unsigned short, unsigned short, bool (*)(unsigned short const&, unsigned short const&), CUtlMemory<UtlRBTreeNode_t<unsigned short, unsigned short>, unsigned short> >::Insert(unsigned short const&)
 T CUtlRBTree<unsigned short, unsigned short, bool (*)(unsigned short const&, unsigned short const&), CUtlMemory<UtlRBTreeNode_t<unsigned short, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<unsigned short, unsigned short, bool (*)(unsigned short const&, unsigned short const&), CUtlMemory<UtlRBTreeNode_t<unsigned short, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<unsigned short, unsigned short, bool (*)(unsigned short const&, unsigned short const&), CUtlMemory<UtlRBTreeNode_t<unsigned short, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<unsigned short, unsigned short, bool (*)(unsigned short const&, unsigned short const&), CUtlMemory<UtlRBTreeNode_t<unsigned short, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<unsigned short, unsigned short, bool (*)(unsigned short const&, unsigned short const&), CUtlMemory<UtlRBTreeNode_t<unsigned short, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
 T CUtlRBTree<unsigned short, unsigned short, bool (*)(unsigned short const&, unsigned short const&), CUtlMemory<UtlRBTreeNode_t<unsigned short, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<unsigned short, unsigned short, bool (*)(unsigned short const&, unsigned short const&), CUtlMemory<UtlRBTreeNode_t<unsigned short, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
 T CUtlRBTree<unsigned short, unsigned short, bool (*)(unsigned short const&, unsigned short const&), CUtlMemory<UtlRBTreeNode_t<unsigned short, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<unsigned short, unsigned short, bool (*)(unsigned short const&, unsigned short const&), CUtlMemory<UtlRBTreeNode_t<unsigned short, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<unsigned short, unsigned short, bool (*)(unsigned short const&, unsigned short const&), CUtlMemory<UtlRBTreeNode_t<unsigned short, unsigned short>, unsigned short> >::Unlink(unsigned short)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::FindInsertionPosition(vgui::ListPanel::IndexItem_t const&, int&, bool&)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::FirstInorder() const
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::InsertAt(int, bool)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::IsLeftChild(int) const
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::IsRightChild(int) const
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::LastInorder() const
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::NextInorder(int) const
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::RemoveAll()
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::RemoveRebalance(int)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::RotateLeft(int)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::RotateRight(int)
 T CUtlRBTree<vgui::ListPanel::IndexItem_t, int, bool (*)(vgui::ListPanel::IndexItem_t const&, vgui::ListPanel::IndexItem_t const&), CUtlMemory<UtlRBTreeNode_t<vgui::ListPanel::IndexItem_t, int>, int> >::Unlink(int)
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::Find(void* const&) const
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::FindInsertionPosition(void* const&, unsigned short&, bool&)
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::Insert(void* const&)
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::IsLeftChild(unsigned short) const
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::IsRightChild(unsigned short) const
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<void*, unsigned short, bool (*)(void* const&, void* const&), CUtlMemory<UtlRBTreeNode_t<void*, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlSortVector<CDmxAttribute*, CDmxAttributeLess, CUtlVector<CDmxAttribute*, CUtlMemory<CDmxAttribute*, int> > >::CompareHelper(CDmxAttribute* const*, CDmxAttribute* const*)
 T CUtlSortVector<CaptionLookup_t, CCaptionLookupLess, CUtlVector<CaptionLookup_t, CUtlMemory<CaptionLookup_t, int> > >::CompareHelper(CaptionLookup_t const*, CaptionLookup_t const*)
 T CUtlSortVector<KeyValues*, CUtlSortVectorKeyValuesByName, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> > >::CompareHelper(KeyValues* const*, KeyValues* const*)
 T CUtlSortVector<vgui::SortedPanel_t, vgui::CSortedPanelYLess, CUtlVector<vgui::SortedPanel_t, CUtlMemory<vgui::SortedPanel_t, int> > >::Insert(vgui::SortedPanel_t const&)
 T CUtlString::CUtlString()
 T CUtlString::CUtlString(CUtlString const&)
 T CUtlString::CUtlString(char const*)
 T CUtlString::Format(char const*, ...)
 T CUtlString::Get()
 T CUtlString::Get() const
 T CUtlString::Length() const
 T CUtlString::Set(char const*)
 T CUtlString::SetLength(int)
 T CUtlString::operator char const*() const
 T CUtlString::operator+=(CUtlString const&)
 T CUtlString::operator+=(char const*)
 T CUtlString::operator=(CUtlString const&)
 T CUtlString::operator=(char const*)
 T CUtlString::~CUtlString()
 T CUtlStringMap<CParticleSystemDefinition*>::operator[](char const*)
 T CUtlStringMap<CSheet*>::PurgeAndDeleteElements()
 T CUtlStringMap<CSheet*>::operator[](char const*)
 T CUtlStringMap<ParticleInfo_t>::~CUtlStringMap()
 T CUtlSymbol::CUtlSymbol(char const*)
 T CUtlSymbol::Initialize()
 T CUtlSymbol::String() const
 T CUtlSymbolTable::AddString(char const*)
 T CUtlSymbolTable::CLess::operator()(CUtlSymbolTable::CStringPoolIndex const&, CUtlSymbolTable::CStringPoolIndex const&) const
 T CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
 T CUtlSymbolTable::Find(char const*) const
 T CUtlSymbolTable::RemoveAll()
 T CUtlSymbolTable::String(CUtlSymbol) const
 T CUtlSymbolTable::~CUtlSymbolTable()
 T CUtlSymbolTableMT::String(CUtlSymbol) const
 T CUtlSymbolTableMT::~CUtlSymbolTableMT()
 T CUtlVector<AsyncCaption_t, CUtlMemory<AsyncCaption_t, int> >::InsertBefore(int)
 T CUtlVector<AsyncCaption_t, CUtlMemory<AsyncCaption_t, int> >::InsertMultipleBefore(int, int, AsyncCaption_t const*)
 T CUtlVector<AsyncCaption_t, CUtlMemory<AsyncCaption_t, int> >::Purge()
 T CUtlVector<AsyncCaption_t, CUtlMemory<AsyncCaption_t, int> >::operator=(CUtlVector<AsyncCaption_t, CUtlMemory<AsyncCaption_t, int> > const&)
 T CUtlVector<BMPResAttachData_t, CUtlMemory<BMPResAttachData_t, int> >::~CUtlVector()
 T CUtlVector<BoneAccess, CUtlMemory<BoneAccess, int> >::~CUtlVector()
 T CUtlVector<CClientLeafSystem::RenderableInfo_t*, CUtlMemory<CClientLeafSystem::RenderableInfo_t*, int> >::~CUtlVector()
 T CUtlVector<CClient_Precipitation*, CUtlMemory<CClient_Precipitation*, int> >::~CUtlVector()
 T CUtlVector<CDetailModel, CUtlMemory<CDetailModel, int> >::InsertBefore(int)
 T CUtlVector<CDmxElement*, CUtlMemory<CDmxElement*, int> >::~CUtlVector()
 T CUtlVector<CEventAbsoluteTag, CUtlMemory<CEventAbsoluteTag, int> >::~CUtlVector()
 T CUtlVector<CEventRelativeTag, CUtlMemory<CEventRelativeTag, int> >::InsertBefore(int, CEventRelativeTag const&)
 T CUtlVector<CEventRelativeTag, CUtlMemory<CEventRelativeTag, int> >::~CUtlVector()
 T CUtlVector<CFlexTimingTag, CUtlMemory<CFlexTimingTag, int> >::InsertBefore(int, CFlexTimingTag const&)
 T CUtlVector<CFlexTimingTag, CUtlMemory<CFlexTimingTag, int> >::~CUtlVector()
 T CUtlVector<CHandle<C_BaseEntity>, CUtlMemory<CHandle<C_BaseEntity>, int> >::~CUtlVector()
 T CUtlVector<CHandle<C_PointCommentaryNode>, CUtlMemory<CHandle<C_PointCommentaryNode>, int> >::~CUtlVector()
 T CUtlVector<CInterpolatedVar<C_AnimationLayer>, CUtlMemory<CInterpolatedVar<C_AnimationLayer>, int> >::InsertMultipleBefore(int, int, CInterpolatedVar<C_AnimationLayer> const*)
 T CUtlVector<CModelPanelAttachedModelInfo*, CUtlMemory<CModelPanelAttachedModelInfo*, int> >::PurgeAndDeleteElements()
 T CUtlVector<CParticleSystemMgr::Batch_t, CUtlMemory<CParticleSystemMgr::Batch_t, int> >::FastRemove(int)
 T CUtlVector<CParticleSystemMgr::Batch_t, CUtlMemory<CParticleSystemMgr::Batch_t, int> >::Purge()
 T CUtlVector<CParticleSystemMgr::RenderCache_t, CUtlMemory<CParticleSystemMgr::RenderCache_t, int> >::Purge()
 T CUtlVector<CPropData::propdata_breakablechunk_t, CUtlMemory<CPropData::propdata_breakablechunk_t, int> >::Purge()
 T CUtlVector<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >::~CUtlVector()
 T CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::~CUtlVector()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<CWatcherList>::HashEntry, CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<CWatcherList>::HashEntry, CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int> >, int> >::Purge()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<CWatcherList>::HashEntry, CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<CWatcherList>::HashEntry, CUtlMemory<CEntityDataInstantiator<CWatcherList>::HashEntry, int> >, int> >::SetCount(int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<ModelScale>::HashEntry, CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<ModelScale>::HashEntry, CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int> >, int> >::Purge()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<ModelScale>::HashEntry, CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<ModelScale>::HashEntry, CUtlMemory<CEntityDataInstantiator<ModelScale>::HashEntry, int> >, int> >::SetCount(int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<StepSimulationData>::HashEntry, CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<StepSimulationData>::HashEntry, CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int> >, int> >::Purge()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<StepSimulationData>::HashEntry, CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<StepSimulationData>::HashEntry, CUtlMemory<CEntityDataInstantiator<StepSimulationData>::HashEntry, int> >, int> >::SetCount(int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<groundlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<groundlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int> >, int> >::Purge()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<groundlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<groundlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<groundlink_t>::HashEntry, int> >, int> >::SetCount(int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<physicspushlist_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<physicspushlist_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int> >, int> >::Purge()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<physicspushlist_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<physicspushlist_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<physicspushlist_t>::HashEntry, int> >, int> >::SetCount(int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<touchlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<touchlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int> >, int> >::Purge()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<touchlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<touchlink_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<touchlink_t>::HashEntry, int> >, int> >::SetCount(int)
 T CUtlVector<CUtlVector<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int> >, int> >::Purge()
 T CUtlVector<CUtlVector<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int> >, CUtlMemory<CUtlVector<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, CUtlMemory<CEntityDataInstantiator<vphysicsupdateai_t>::HashEntry, int> >, int> >::SetCount(int)
 T CUtlVector<CUtlVector<CGameSaveRestoreInfo::CHashElement, CUtlMemory<CGameSaveRestoreInfo::CHashElement, int> >, CUtlMemory<CUtlVector<CGameSaveRestoreInfo::CHashElement, CUtlMemory<CGameSaveRestoreInfo::CHashElement, int> >, int> >::SetCount(int)
 T CUtlVector<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int> >::Purge()
 T CUtlVector<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, CUtlMemory<CUtlVector<CStudioHdr::CActivityToSequenceMapping::HashValueType, CUtlMemory<CStudioHdr::CActivityToSequenceMapping::HashValueType, int> >, int> >::SetCount(int)
 T CUtlVector<CUtlVector<VoiceCommandMenuItem_t, CUtlMemory<VoiceCommandMenuItem_t, int> >, CUtlMemory<CUtlVector<VoiceCommandMenuItem_t, CUtlMemory<VoiceCommandMenuItem_t, int> >, int> >::Purge()
 T CUtlVector<CUtlVector<ikcontextikrule_t, CUtlMemory<ikcontextikrule_t, int> >, CUtlMemory<CUtlVector<ikcontextikrule_t, CUtlMemory<ikcontextikrule_t, int> >, int> >::Purge()
 T CUtlVector<CUtlVector<ikcontextikrule_t, CUtlMemory<ikcontextikrule_t, int> >, CUtlMemory<CUtlVector<ikcontextikrule_t, CUtlMemory<ikcontextikrule_t, int> >, int> >::SetCount(int)
 T CUtlVector<C_AnimationLayer, CUtlMemory<C_AnimationLayer, int> >::InsertMultipleBefore(int, int, C_AnimationLayer const*)
 T CUtlVector<C_BaseAnimating*, CUtlMemory<C_BaseAnimating*, int> >::~CUtlVector()
 T CUtlVector<C_BaseEntity*, CUtlMemory<C_BaseEntity*, int> >::~CUtlVector()
 T CUtlVector<C_FuncLadder*, CUtlMemory<C_FuncLadder*, int> >::~CUtlVector()
 T CUtlVector<C_FuncPhysicsRespawnZone*, CUtlMemory<C_FuncPhysicsRespawnZone*, int> >::~CUtlVector()
 T CUtlVector<C_PhysPropClientside*, CUtlMemory<C_PhysPropClientside*, int> >::~CUtlVector()
 T CUtlVector<C_SlideshowDisplay*, CUtlMemory<C_SlideshowDisplay*, int> >::~CUtlVector()
 T CUtlVector<C_Team*, CUtlMemory<C_Team*, int> >::~CUtlVector()
 T CUtlVector<IClientRenderable*, CUtlMemory<IClientRenderable*, int> >::~CUtlVector()
 T CUtlVector<IGameSystem*, CUtlMemory<IGameSystem*, int> >::~CUtlVector()
 T CUtlVector<IGameSystemPerFrame*, CUtlMemory<IGameSystemPerFrame*, int> >::~CUtlVector()
 T CUtlVector<ModelPoseDebugInfo::InfoText, CUtlMemory<ModelPoseDebugInfo::InfoText, int> >::operator=(CUtlVector<ModelPoseDebugInfo::InfoText, CUtlMemory<ModelPoseDebugInfo::InfoText, int> > const&)
 T CUtlVector<ParticleChildrenInfo_t, CUtlMemory<ParticleChildrenInfo_t, int> >::~CUtlVector()
 T CUtlVector<ParticleControlPoint_t, CUtlMemory<ParticleControlPoint_t, int> >::InsertBefore(int)
 T CUtlVector<ParticleEffectList_t, CUtlMemory<ParticleEffectList_t, int> >::Remove(int)
 T CUtlVector<ParticleEffectList_t, CUtlMemory<ParticleEffectList_t, int> >::~CUtlVector()
 T CUtlVector<activitylist_t, CUtlMemory<activitylist_t, int> >::~CUtlVector()
 T CUtlVector<clientanimating_t, CUtlMemory<clientanimating_t, int> >::~CUtlVector()
 T CUtlVector<eventlist_t, CUtlMemory<eventlist_t, int> >::~CUtlVector()
 T CUtlVector<int, CUtlMemoryFixedGrowable<int, 512ul, int> >::InsertBefore(int, int const&)
 T CUtlVector<vgui::AnimationController::AnimSequence_t, CUtlMemory<vgui::AnimationController::AnimSequence_t, int> >::Purge()
 T CUtlVector<vgui::AnimationController::AnimSequence_t, CUtlMemory<vgui::AnimationController::AnimSequence_t, int> >::Remove(int)
 T CUtlVector<vgui::BoundKey_t, CUtlMemory<vgui::BoundKey_t, int> >::InsertBefore(int, vgui::BoundKey_t const&)
 T CUtlVector<vgui::SectionedListPanel::section_t, CUtlMemory<vgui::SectionedListPanel::section_t, int> >::Purge()
 T CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<SaveRestoreBlockHeader_t, CUtlMemory<SaveRestoreBlockHeader_t, int> >, 10>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>::IsEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>::MakeEmpty(SaveRestoreFieldInfo_t const&)
 T CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
 T CUtlVectorDataOps<CUtlVector<int, CUtlMemory<int, int> >, 5>::Save(SaveRestoreFieldInfo_t const&, ISave*)
 T CVGuiScreenEnumerator::EnumElement(IHandleEntity*)
 T CVGuiScreenPanel::CVGuiScreenPanel(vgui::Panel*, char const*, unsigned long)
 T CVGuiScreenPanel::CreateControlByName(char const*)
 T CVGuiScreenPanel::Init(KeyValues*, VGuiScreenInitData_t*)
 T CVGuiScreenPanel::OnCommand(char const*)
 T CVGuiScreenPanel::~CVGuiScreenPanel()
 T CVTFTexture::BlendCubeMapCornerPalettes(int, int, CCornerMatch const*)
 T CVTFTexture::BlendCubeMapEdgePalettes(int, int, CEdgeMatch const*)
 T CVTFTexture::BlendCubeMapFaceCorners(int, int, CCornerMatch const*)
 T CVTFTexture::BlendCubeMapFaceEdges(int, int, CEdgeMatch const*)
 T CVTFTexture::BuildCubeMapMatchLists(CEdgeMatch*, CCornerMatch*, bool)
 T CVTFTexture::BumpScale() const
 T CVTFTexture::ComputeAlphaFlags()
 T CVTFTexture::ComputeFaceSize(int) const
 T CVTFTexture::ComputeHemispheremapFrame(unsigned char**, unsigned char*, LookDir_t)
 T CVTFTexture::ComputeMipLevelDimensions(int, int*, int*, int*) const
 T CVTFTexture::ComputeMipLevelSubRect(Rect_t*, int, Rect_t*) const
 T CVTFTexture::ComputeMipSize(int) const
 T CVTFTexture::ComputeReflectivity()
 T CVTFTexture::ComputeSpheremapFrame(unsigned char**, unsigned char*, LookDir_t)
 T CVTFTexture::ComputeTotalSize() const
 T CVTFTexture::ConstructLowResImage()
 T CVTFTexture::ConvertImageFormat(ImageFormat, bool)
 T CVTFTexture::Depth() const
 T CVTFTexture::FaceCount() const
 T CVTFTexture::FaceSizeInBytes(int) const
 T CVTFTexture::FileSize(int) const
 T CVTFTexture::FindOrCreateResourceEntryInfo(unsigned int)
 T CVTFTexture::FixCubemapFaceOrientation()
 T CVTFTexture::Flags() const
 T CVTFTexture::Format() const
 T CVTFTexture::FrameCount() const
 T CVTFTexture::GenerateHemisphereMap(unsigned char*, int, int, LookDir_t, int)
 T CVTFTexture::GenerateMipmaps()
 T CVTFTexture::GenerateSpheremap(LookDir_t)
 T CVTFTexture::GetImageOffset(int, int, int, ImageFormat) const
 T CVTFTexture::GetResourceData(unsigned int, unsigned long*) const
 T CVTFTexture::GetResourceTypes(unsigned int*, int) const
 T CVTFTexture::HasResourceEntry(unsigned int) const
 T CVTFTexture::Height() const
 T CVTFTexture::ImageData()
 T CVTFTexture::ImageData(int, int, int)
 T CVTFTexture::ImageData(int, int, int, int, int, int)
 T CVTFTexture::ImageFileInfo(int, int, int, int*, int*) const
 T CVTFTexture::Init(int, int, int, ImageFormat, int, int, int)
 T CVTFTexture::InitLowResImage(int, int, ImageFormat)
 T CVTFTexture::IsCubeMap() const
 T CVTFTexture::IsNormalMap() const
 T CVTFTexture::IsVolumeTexture() const
 T CVTFTexture::LoadImageData(CUtlBuffer&, VTFFileHeader_t const&, int)
 T CVTFTexture::LowResFileInfo(int*, int*) const
 T CVTFTexture::LowResFormat() const
 T CVTFTexture::LowResHeight() const
 T CVTFTexture::LowResImageData()
 T CVTFTexture::LowResWidth() const
 T CVTFTexture::MatchCubeMapBorders(int, ImageFormat, bool)
 T CVTFTexture::MatchCubeMapS3TCPalettes(CEdgeMatch*, CCornerMatch*)
 T CVTFTexture::MipCount() const
 T CVTFTexture::NormalizeTopMipLevel()
 T CVTFTexture::PostProcess(bool, LookDir_t, bool)
 T CVTFTexture::PutOneOverMipLevelInAlpha()
 T CVTFTexture::ReadHeader(CUtlBuffer&, VTFFileHeader_t&)
 T CVTFTexture::Reflectivity() const
 T CVTFTexture::RemoveResourceEntryInfo(unsigned int)
 T CVTFTexture::ResourceMemorySection::LoadData(CUtlBuffer&, CByteswap&)
 T CVTFTexture::RowSizeInBytes(int) const
 T CVTFTexture::Serialize(CUtlBuffer&)
 T CVTFTexture::SetAlphaTestThreshholds(float, float)
 T CVTFTexture::SetBumpScale(float)
 T CVTFTexture::SetPostProcessingSettings(VtfProcessingOptions const*)
 T CVTFTexture::SetReflectivity(Vector const&)
 T CVTFTexture::SetResourceData(unsigned int, void const*, unsigned long)
 T CVTFTexture::SetupTextureEdgeIncrements(int, int, int, bool, CEdgeIncrements*)
 T CVTFTexture::Shutdown()
 T CVTFTexture::Unserialize(CUtlBuffer&, bool, int)
 T CVTFTexture::Width() const
 T CVTFTexture::~CVTFTexture()
 T CValueChangeTracker::CValueChangeTracker()
 T CValueChangeTracker::SetupTracking(C_BaseEntity*, char const*)
 T CValueChangeTracker::~CValueChangeTracker()
 T CViewAngleAnimation::ClientThink()
 T CViewAngleAnimation::LoadViewAnimFile(char const*)
 T CViewAngleAnimation::SaveAsAnimFile(char const*)
 T CViewAngleAnimation::SetAngles(QAngle)
 T CViewAngleAnimation::Spawn()
 T CViewAngleAnimation::~CViewAngleAnimation()
 T CViewEffects::ApplyShake(Vector&, QAngle&, float)
 T CViewEffects::CalcShake()
 T CViewEffects::ClearAllFades()
 T CViewEffects::ClearPermanentFades()
 T CViewEffects::Fade(ScreenFade_t&)
 T CViewEffects::FadeCalculate()
 T CViewEffects::GetFadeParams(unsigned char*, unsigned char*, unsigned char*, unsigned char*, bool*)
 T CViewEffects::Init()
 T CViewEffects::LevelInit()
 T CViewEffects::Restore(IRestore*, bool)
 T CViewEffects::Save(ISave*)
 T CViewEffects::Shake(ScreenShake_t&)
 T CViewEffects::~CViewEffects()
 T CViewEffectsSaveRestoreBlockHandler::GetBlockName()
 T CViewEffectsSaveRestoreBlockHandler::PostRestore()
 T CViewEffectsSaveRestoreBlockHandler::PostSave()
 T CViewEffectsSaveRestoreBlockHandler::PreRestore()
 T CViewEffectsSaveRestoreBlockHandler::PreSave(CSaveRestoreData*)
 T CViewEffectsSaveRestoreBlockHandler::ReadRestoreHeaders(IRestore*)
 T CViewEffectsSaveRestoreBlockHandler::Restore(IRestore*, bool)
 T CViewEffectsSaveRestoreBlockHandler::Save(ISave*)
 T CViewEffectsSaveRestoreBlockHandler::WriteSaveHeaders(ISave*)
 T CViewRender::BuildWorldListsNumber() const
 T CViewRender::CViewRender()
 T CViewRender::DetermineWaterRenderInfo(VisibleFogVolumeInfo_t const&, WaterRenderInfo_t&)
 T CViewRender::DisableFog()
 T CViewRender::DisableVis()
 T CViewRender::DrawMonitors(CViewSetup const&)
 T CViewRender::DrawOneMonitor(ITexture*, int, C_PointCamera*, CViewSetup const&, C_BasePlayer*, int, int, int, int)
 T CViewRender::DrawUnderwaterOverlay()
 T CViewRender::DrawViewModels(CViewSetup const&, bool)
 T CViewRender::DrawWorldAndEntities(bool, CViewSetup const&, int, ViewCustomVisibility_t*)
 T CViewRender::DriftPitch()
 T CViewRender::FreezeFrame(float)
 T CViewRender::GetCurrentlyDrawingEntity()
 T CViewRender::GetDrawFlags()
 T CViewRender::GetFirstEye() const
 T CViewRender::GetFrustum()
 T CViewRender::GetLastEye() const
 T CViewRender::GetPlayerViewSetup() const
 T CViewRender::GetReplayScreenshotSystem()
 T CViewRender::GetScreenFadeDistances(float*, float*)
 T CViewRender::GetScreenOverlayMaterial()
 T CViewRender::GetView(StereoEye_t)
 T CViewRender::GetViewSetup() const
 T CViewRender::GetWaterLODParams(float&, float&)
 T CViewRender::GetZFar()
 T CViewRender::GetZNear()
 T CViewRender::Init()
 T CViewRender::LevelInit()
 T CViewRender::LevelShutdown()
 T CViewRender::OnRenderStart()
 T CViewRender::PerformScreenOverlay(int, int, int, int)
 T CViewRender::PerformScreenSpaceEffects(int, int, int, int)
 T CViewRender::QueueOverlayRenderView(CViewSetup const&, int, int)
 T CViewRender::Render(vrect_t*)
 T CViewRender::Render2DEffectsPostHUD(CViewSetup const&)
 T CViewRender::Render2DEffectsPreHUD(CViewSetup const&)
 T CViewRender::RenderPlayerSprites()
 T CViewRender::RenderView(CViewSetup const&, int, int)
 T CViewRender::SetCheapWaterEndDistance(float)
 T CViewRender::SetCheapWaterStartDistance(float)
 T CViewRender::SetCurrentlyDrawingEntity(C_BaseEntity*)
 T CViewRender::SetScreenOverlayMaterial(IMaterial*)
 T CViewRender::SetUpOverView()
 T CViewRender::SetUpViews()
 T CViewRender::SetupMain3DView(CViewSetup const&, int&)
 T CViewRender::SetupVis(CViewSetup const&, unsigned int&, ViewCustomVisibility_t*)
 T CViewRender::ShouldDrawBrushModels()
 T CViewRender::ShouldForceNoVis()
 T CViewRender::Shutdown()
 T CViewRender::StartPitchDrift()
 T CViewRender::StopPitchDrift()
 T CViewRender::UpdateReplayScreenshotCache()
 T CViewRender::UpdateShadowDepthTexture(ITexture*, ITexture*, CViewSetup const&)
 T CViewRender::ViewDrawScene(bool, SkyboxVisibility_t, CViewSetup const&, int, view_id_t, bool, int, ViewCustomVisibility_t*)
 T CViewRender::ViewDrawScene_Intro(CViewSetup const&, int, IntroData_t const&)
 T CViewRender::WriteReplayScreenshot(WriteReplayScreenshotParams_t&)
 T CViewRender::WriteSaveGameScreenshot(char const*)
 T CViewRender::WriteSaveGameScreenshotOfSize(char const*, int, int, bool, bool)
 T CViewRender::~CViewRender()
 T CViewRenderBeams::BeamFree(Beam_t*)
 T CViewRenderBeams::ClearBeams()
 T CViewRenderBeams::CreateBeamCirclePoints(BeamInfo_t&)
 T CViewRenderBeams::CreateBeamCirclePoints(int, Vector&, Vector&, int, int, float, float, float, float, float, float, float, float, int, float, float, float, float)
 T CViewRenderBeams::CreateBeamEntPoint(BeamInfo_t&)
 T CViewRenderBeams::CreateBeamEntPoint(int, Vector const*, int, Vector const*, int, int, float, float, float, float, float, float, float, float, int, float, float, float, float)
 T CViewRenderBeams::CreateBeamEnts(BeamInfo_t&)
 T CViewRenderBeams::CreateBeamEnts(int, int, int, int, float, float, float, float, float, float, float, float, int, float, float, float, float, int)
 T CViewRenderBeams::CreateBeamFollow(BeamInfo_t&)
 T CViewRenderBeams::CreateBeamFollow(int, int, int, float, float, float, float, float, float, float, float, float)
 T CViewRenderBeams::CreateBeamPoints(BeamInfo_t&)
 T CViewRenderBeams::CreateBeamPoints(Vector&, Vector&, int, int, float, float, float, float, float, float, float, float, int, float, float, float, float)
 T CViewRenderBeams::CreateBeamRing(BeamInfo_t&)
 T CViewRenderBeams::CreateBeamRing(int, int, int, int, float, float, float, float, float, float, float, float, int, float, float, float, float, int)
 T CViewRenderBeams::CreateBeamRingPoint(BeamInfo_t&)
 T CViewRenderBeams::CreateBeamRingPoint(Vector const&, float, float, int, int, float, float, float, float, float, float, float, float, int, float, float, float, float, int)
 T CViewRenderBeams::CreateGenericBeam(BeamInfo_t&)
 T CViewRenderBeams::CullBeam(Vector const&, Vector const&, int)
 T CViewRenderBeams::DrawBeam(Beam_t*)
 T CViewRenderBeams::DrawBeam(C_Beam*, ITraceFilter*)
 T CViewRenderBeams::DrawBeamFollow(model_t const*, Beam_t*, int, int, float, float const*, float)
 T CViewRenderBeams::DrawBeamWithHalo(Beam_t*, int, int, float*, float*, model_t const*, model_t const*, float)
 T CViewRenderBeams::DrawLaser(Beam_t*, int, int, float*, model_t const*, model_t const*, float)
 T CViewRenderBeams::FreeBeam(Beam_t*)
 T CViewRenderBeams::InitBeams()
 T CViewRenderBeams::KillDeadBeams(C_BaseEntity*)
 T CViewRenderBeams::RecomputeBeamEndpoints(Beam_t*)
 T CViewRenderBeams::SetupBeam(Beam_t*, BeamInfo_t const&)
 T CViewRenderBeams::ShutdownBeams()
 T CViewRenderBeams::UpdateBeam(Beam_t*, float)
 T CViewRenderBeams::UpdateBeamInfo(Beam_t*, BeamInfo_t&)
 T CViewRenderBeams::UpdateTempEntBeams()
 T CViewRenderBeams::~CViewRenderBeams()
 T CViewportClientSystem::Init()
 T CViewportClientSystem::IsPerFrame()
 T CViewportClientSystem::LevelInitPostEntity()
 T CViewportClientSystem::LevelInitPreEntity()
 T CViewportClientSystem::LevelShutdownPostEntity()
 T CViewportClientSystem::LevelShutdownPreEntity()
 T CViewportClientSystem::Name()
 T CViewportClientSystem::OnRestore()
 T CViewportClientSystem::OnSave()
 T CViewportClientSystem::PostInit()
 T CViewportClientSystem::SafeRemoveIfDesired()
 T CViewportClientSystem::Shutdown()
 T CViewportClientSystem::~CViewportClientSystem()
 T CVisibleShadowList::ComputeScreenArea(Vector const&, float) const
 T CVisibleShadowList::EnumShadow(unsigned short)
 T CVisibleShadowList::FindShadows(CViewSetup const*, int, unsigned short*)
 T CVisibleShadowList::PrioritySort()
 T CVisibleShadowList::~CVisibleShadowList()
 T CVoiceBanMgr::CVoiceBanMgr()
 T CVoiceBanMgr::GetPlayerBan(char const*)
 T CVoiceBanMgr::Init(char const*)
 T CVoiceBanMgr::SaveState(char const*)
 T CVoiceBanMgr::SetPlayerBan(char const*, bool)
 T CVoiceBanMgr::~CVoiceBanMgr()
 T CVoiceStatus::DrawHeadLabels()
 T CVoiceStatus::Frame(double)
 T CVoiceStatus::HandleVoiceMaskMsg(bf_read&)
 T CVoiceStatus::Init(IVoiceStatusHelper*, unsigned int)
 T CVoiceStatus::IsLocalPlayerSpeaking()
 T CVoiceStatus::IsPlayerBlocked(int)
 T CVoiceStatus::SetPlayerBlockedState(int, bool)
 T CVoiceStatus::StopSquelchMode()
 T CVoiceStatus::UpdateServerState(bool)
 T CVoiceStatus::UpdateSpeakerStatus(int, bool)
 T CVoiceStatus::VidInit()
 T CVoiceStatus::~CVoiceStatus()
 T CVortEmissiveProxy::GetMaterial()
 T CVortEmissiveProxy::Init(IMaterial*, KeyValues*)
 T CVortEmissiveProxy::OnBind(C_BaseEntity*)
 T CVortEmissiveProxy::~CVortEmissiveProxy()
 T CWarpOverlay::Draw(bool)
 T CWatcherList::NotifyVPhysicsStateChanged(IPhysicsObject*, C_BaseEntity*, bool)
 T CWatcherList::~CWatcherList()
 T CWaterExplosionParticle::UpdateAlpha(SimpleParticle const*)
 T CWaterExplosionParticle::UpdateRoll(SimpleParticle*, float)
 T CWaterExplosionParticle::UpdateVelocity(SimpleParticle*, float)
 T CWaterExplosionParticle::~CWaterExplosionParticle()
 T CWaterLODMaterialProxy::GetMaterial()
 T CWaterLODMaterialProxy::Init(IMaterial*, KeyValues*)
 T CWaterLODMaterialProxy::OnBind(void*)
 T CWaterLODMaterialProxy::Release()
 T CWaterLODMaterialProxy::~CWaterLODMaterialProxy()
 T CWorkerThread::~CWorkerThread()
 T CWorldCollideContextData::CalculatePlanes(CParticleCollection*, int, int, Vector const*, float)
 T CWorldCollideContextData::SetBaseTrace(int, Vector const&, Vector const&, int, bool)
 T CWorldCollideContextData::operator new(unsigned long)
 T CWorldDimsProxy::GetMaterial()
 T CWorldDimsProxy::Init(IMaterial*, KeyValues*)
 T CWorldDimsProxy::OnBind(void*)
 T CWorldDimsProxy::Release()
 T CWorldDimsProxy::~CWorldDimsProxy()
 T CWorldListCache::Add(CViewSetup const&, IWorldRenderList*, ClientWorldListInfo_t*)
 T CWorldListCache::Find(CViewSetup const&, IWorldRenderList**, ClientWorldListInfo_t**)
 T CWorldListCache::Flush()
 T CWorldListCache::~CWorldListCache()
 T CWrapMinMaxProxy::Init(IMaterial*, KeyValues*)
 T CWrapMinMaxProxy::OnBind(void*)
 T CWrapMinMaxProxy::~CWrapMinMaxProxy()
 T CZoomManipulator::OnCursorMoved(int, int)
 T CZoomManipulator::OnMousePressed(ButtonCode_t, int, int)
 T C_AI_BaseNPC::AddRagdollToFadeQueue()
 T C_AI_BaseNPC::C_AI_BaseNPC()
 T C_AI_BaseNPC::ClientThink()
 T C_AI_BaseNPC::GetClientClass()
 T C_AI_BaseNPC::GetRagdollInitBoneArrays(matrix3x4_t*, matrix3x4_t*, matrix3x4_t*, float)
 T C_AI_BaseNPC::IsNPC()
 T C_AI_BaseNPC::OnDataChanged(DataUpdateType_t)
 T C_AI_BaseNPC::PhysicsSolidMaskForEntity() const
 T C_AI_BaseNPC::YouForgotToImplementOrDeclareClientClass()
 T C_AI_BaseNPC::~C_AI_BaseNPC()
 T C_AR2Explosion::GetClientClass()
 T C_AR2Explosion::OnDataChanged(DataUpdateType_t)
 T C_AR2Explosion::RenderParticles(CParticleRenderIterator*)
 T C_AR2Explosion::SimulateParticles(CParticleSimulateIterator*)
 T C_AR2Explosion::Start(CParticleMgr*, IPrototypeArgAccess*)
 T C_AR2Explosion::Update(float)
 T C_AR2Explosion::YouForgotToImplementOrDeclareClientClass()
 T C_AR2Explosion::~C_AR2Explosion()
 T C_AlyxEmpEffect::ClientThink()
 T C_AlyxEmpEffect::GetClientClass()
 T C_AlyxEmpEffect::GetRenderGroup()
 T C_AlyxEmpEffect::NotifyShouldTransmit(ShouldTransmitState_t)
 T C_AlyxEmpEffect::OnDataChanged(DataUpdateType_t)
 T C_AlyxEmpEffect::SetupEmitters()
 T C_AlyxEmpEffect::UpdateCharging(float)
 T C_AlyxEmpEffect::UpdateDischarging()
 T C_AlyxEmpEffect::YouForgotToImplementOrDeclareClientClass()
 T C_AlyxEmpEffect::~C_AlyxEmpEffect()
 T C_AntlionGib::CreateClientsideGib(char const*, Vector, Vector, Vector, float)
 T C_AntlionGib::HitSurface(C_BaseEntity*)
 T C_AntlionGib::~C_AntlionGib()
 T C_Barney::GetClientClass()
 T C_Barney::YouForgotToImplementOrDeclareClientClass()
 T C_Barney::~C_Barney()
 T C_BaseAnimating::AccumulateLayers(IBoneSetup&, Vector*, Quaternion*, float)
 T C_BaseAnimating::AddEntity()
 T C_BaseAnimating::AddToClientSideAnimationList()
 T C_BaseAnimating::ApplyBoneMatrixTransform(matrix3x4_t&)
 T C_BaseAnimating::AttachEntityToBone(C_BaseAnimating*, int, Vector, QAngle)
 T C_BaseAnimating::AutoAllowBoneAccess::AutoAllowBoneAccess(bool, bool)
 T C_BaseAnimating::AutoAllowBoneAccess::~AutoAllowBoneAccess()
 T C_BaseAnimating::BecomeRagdollOnClient()
 T C_BaseAnimating::BuildTransformations(CStudioHdr*, Vector*, Quaternion*, matrix3x4_t const&, int, CBoneBitList&)
 T C_BaseAnimating::C_BaseAnimating()
 T C_BaseAnimating::CalcAttachments()
 T C_BaseAnimating::CalculateIKLocks(float)
 T C_BaseAnimating::ChildLayerBlend(Vector*, Quaternion*, float, int)
 T C_BaseAnimating::ClampCycle(float, bool)
 T C_BaseAnimating::CleanupToolRecordingState(KeyValues*)
 T C_BaseAnimating::Clear()
 T C_BaseAnimating::ClearRagdoll()
 T C_BaseAnimating::ClientSideAnimationChanged()
 T C_BaseAnimating::ComputeClientSideAnimationFlags()
 T C_BaseAnimating::ComputeEntitySpaceHitboxSurroundingBox(Vector*, Vector*)
 T C_BaseAnimating::ComputeHitboxSurroundingBox(Vector*, Vector*)
 T C_BaseAnimating::ControlMouth(CStudioHdr*)
 T C_BaseAnimating::CreateRagdollCopy()
 T C_BaseAnimating::CreateUnragdollInfo(C_BaseAnimating*)
 T C_BaseAnimating::DelayedInitModelEffects()
 T C_BaseAnimating::DispatchMuzzleEffect(char const*, bool)
 T C_BaseAnimating::DoAnimationEvents(CStudioHdr*)
 T C_BaseAnimating::DoInternalDrawModel(ClientModelRenderInfo_t*, DrawModelState_t*, matrix3x4_t*)
 T C_BaseAnimating::DoMuzzleFlash()
 T C_BaseAnimating::DrawModel(int)
 T C_BaseAnimating::FindFollowedEntity()
 T C_BaseAnimating::FindTransitionSequence(int, int, int*)
 T C_BaseAnimating::FireEvent(Vector const&, QAngle const&, int, char const*)
 T C_BaseAnimating::FireObsoleteEvent(Vector const&, QAngle const&, int, char const*)
 T C_BaseAnimating::ForceSetupBonesAtTime(matrix3x4_t*, float)
 T C_BaseAnimating::FormatViewModelAttachment(int, matrix3x4_t&)
 T C_BaseAnimating::FrameAdvance(float)
 T C_BaseAnimating::GetAimEntOrigin(IClientEntity*, Vector*, QAngle*)
 T C_BaseAnimating::GetAttachment(int, Vector&)
 T C_BaseAnimating::GetAttachment(int, Vector&, QAngle&)
 T C_BaseAnimating::GetAttachment(int, matrix3x4_t&)
 T C_BaseAnimating::GetAttachmentLocal(int, Vector&, QAngle&)
 T C_BaseAnimating::GetAttachmentVelocity(int, Vector&, Quaternion&)
 T C_BaseAnimating::GetBaseAnimating()
 T C_BaseAnimating::GetBody()
 T C_BaseAnimating::GetBoneAttachment(int)
 T C_BaseAnimating::GetBoneCache(CStudioHdr*)
 T C_BaseAnimating::GetBoneControllers(float*)
 T C_BaseAnimating::GetBonePosition(int, Vector&, QAngle&)
 T C_BaseAnimating::GetCachedBoneMatrix(int, matrix3x4_t&)
 T C_BaseAnimating::GetClientClass()
 T C_BaseAnimating::GetClientSideFade()
 T C_BaseAnimating::GetCollideType()
 T C_BaseAnimating::GetFlexControllerName(LocalFlexController_t)
 T C_BaseAnimating::GetHitboxSet()
 T C_BaseAnimating::GetMouth()
 T C_BaseAnimating::GetNumBoneAttachments()
 T C_BaseAnimating::GetNumFlexControllers()
 T C_BaseAnimating::GetPoseParameterRange(int, float&, float&)
 T C_BaseAnimating::GetPoseParameters(CStudioHdr*, float*)
 T C_BaseAnimating::GetPredDescMap()
 T C_BaseAnimating::GetRagdollInitBoneArrays(matrix3x4_t*, matrix3x4_t*, matrix3x4_t*, float)
 T C_BaseAnimating::GetRenderAngles()
 T C_BaseAnimating::GetRenderBounds(Vector&, Vector&)
 T C_BaseAnimating::GetRenderOrigin()
 T C_BaseAnimating::GetRootBone(matrix3x4_t&)
 T C_BaseAnimating::GetSequenceCycleRate(CStudioHdr*, int)
 T C_BaseAnimating::GetSequenceGroundSpeed(CStudioHdr*, int)
 T C_BaseAnimating::GetServerIntendedCycle()
 T C_BaseAnimating::GetSkin()
 T C_BaseAnimating::GetSoundSpatialization(SpatializationInfo_t&)
 T C_BaseAnimating::GetStudioBody()
 T C_BaseAnimating::GetToolRecordingState(KeyValues*)
 T C_BaseAnimating::HitboxToWorldTransforms(matrix3x4_t**)
 T C_BaseAnimating::IgniteRagdoll(C_BaseAnimating*)
 T C_BaseAnimating::InitAsClientRagdoll(matrix3x4_t const*, matrix3x4_t const*, matrix3x4_t const*, float, bool)
 T C_BaseAnimating::InitBoneSetupThreadPool()
 T C_BaseAnimating::InternalDrawModel(int)
 T C_BaseAnimating::Interpolate(float)
 T C_BaseAnimating::InvalidateBoneCache()
 T C_BaseAnimating::InvalidateBoneCaches()
 T C_BaseAnimating::IsAboutToRagdoll() const
 T C_BaseAnimating::IsActivityFinished()
 T C_BaseAnimating::IsMenuModel() const
 T C_BaseAnimating::IsRagdoll() const
 T C_BaseAnimating::IsSelfAnimating()
 T C_BaseAnimating::IsSequenceLooping(CStudioHdr*, int)
 T C_BaseAnimating::IsViewModel() const
 T C_BaseAnimating::LastBoneChangedTime()
 T C_BaseAnimating::LockStudioHdr()
 T C_BaseAnimating::LookupAttachment(char const*)
 T C_BaseAnimating::LookupBone(char const*)
 T C_BaseAnimating::LookupSequence(char const*)
 T C_BaseAnimating::MaintainSequenceTransitions(IBoneSetup&, float, Vector*, Quaternion*)
 T C_BaseAnimating::ModifyEventParticles(char const*)
 T C_BaseAnimating::NotifyBoneAttached(C_BaseAnimating*)
 T C_BaseAnimating::NotifyShouldTransmit(ShouldTransmitState_t)
 T C_BaseAnimating::OnDataChanged(DataUpdateType_t)
 T C_BaseAnimating::OnInternalDrawModel(ClientModelRenderInfo_t*)
 T C_BaseAnimating::OnModelLoadComplete(model_t const*)
 T C_BaseAnimating::OnNewModel()
 T C_BaseAnimating::OnPostInternalDrawModel(ClientModelRenderInfo_t*)
 T C_BaseAnimating::OnPreDataChanged(DataUpdateType_t)
 T C_BaseAnimating::PopBoneAccess(char const*)
 T C_BaseAnimating::PostDataUpdate(DataUpdateType_t)
 T C_BaseAnimating::PreDataUpdate(DataUpdateType_t)
 T C_BaseAnimating::ProcessMuzzleFlashEvent()
 T C_BaseAnimating::PushAllowBoneAccess(bool, bool, char const*)
 T C_BaseAnimating::PutAttachment(int, matrix3x4_t const&)
 T C_BaseAnimating::RecordBones(CStudioHdr*, matrix3x4_t*)
 T C_BaseAnimating::RefreshCollisionBounds()
 T C_BaseAnimating::Release()
 T C_BaseAnimating::RemoveBoneAttachment(C_BaseAnimating*)
 T C_BaseAnimating::ResetClientsideFrame()
 T C_BaseAnimating::ResetLatched()
 T C_BaseAnimating::ResetSequenceInfo()
 T C_BaseAnimating::RestoreData(char const*, int, int)
 T C_BaseAnimating::RetrieveRagdollInfo(Vector*, Quaternion*)
 T C_BaseAnimating::SaveRagdollInfo(int, matrix3x4_t const&, CBoneAccessor&)
 T C_BaseAnimating::SelectWeightedSequence(int)
 T C_BaseAnimating::SequenceDuration(CStudioHdr*, int)
 T C_BaseAnimating::SetBoneController(int, float)
 T C_BaseAnimating::SetCycle(float)
 T C_BaseAnimating::SetPoseParameter(CStudioHdr*, char const*, float)
 T C_BaseAnimating::SetPoseParameter(CStudioHdr*, int, float)
 T C_BaseAnimating::SetPredictable(bool)
 T C_BaseAnimating::SetSequence(int)
 T C_BaseAnimating::SetServerIntendedCycle(float)
 T C_BaseAnimating::SetupBones(matrix3x4_t*, int, int, float)
 T C_BaseAnimating::SetupBones_AttachmentHelper(CStudioHdr*)
 T C_BaseAnimating::ShadowCastType()
 T C_BaseAnimating::ShouldDraw()
 T C_BaseAnimating::ShouldResetSequenceOnNewModel()
 T C_BaseAnimating::ShutdownBoneSetupThreadPool()
 T C_BaseAnimating::Simulate()
 T C_BaseAnimating::StandardBlendingRules(CStudioHdr*, Vector*, Quaternion*, float, int)
 T C_BaseAnimating::StudioFrameAdvance()
 T C_BaseAnimating::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T C_BaseAnimating::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)
 T C_BaseAnimating::ThreadedBoneSetup()
 T C_BaseAnimating::TransferDissolveFrom(C_BaseAnimating*)
 T C_BaseAnimating::UncorrectViewModelAttachment(Vector&)
 T C_BaseAnimating::UnlockStudioHdr()
 T C_BaseAnimating::UnragdollBlend(CStudioHdr*, Vector*, Quaternion*, float)
 T C_BaseAnimating::UpdateBoneAttachments()
 T C_BaseAnimating::UpdateClientSideAnimation()
 T C_BaseAnimating::UpdateClientSideAnimations()
 T C_BaseAnimating::UpdateIKLocks(float)
 T C_BaseAnimating::UpdateModelScale()
 T C_BaseAnimating::UpdateRelevantInterpolatedVars()
 T C_BaseAnimating::UsesPowerOfTwoFrameBufferTexture()
 T C_BaseAnimating::VPhysicsGetObjectList(IPhysicsObject**, int)
 T C_BaseAnimating::VPhysicsUpdate(IPhysicsObject*)
 T C_BaseAnimating::ValidateModelIndex()
 T C_BaseAnimating::YouForgotToImplementOrDeclareClientClass()
 T C_BaseAnimating::~C_BaseAnimating()
 T C_BaseAnimatingGameSystem::LevelShutdownPostEntity()
 T C_BaseAnimatingGameSystem::~C_BaseAnimatingGameSystem()
 T C_BaseAnimatingOverlay::AccumulateLayers(IBoneSetup&, Vector*, Quaternion*, float)
 T C_BaseAnimatingOverlay::C_BaseAnimatingOverlay()
 T C_BaseAnimatingOverlay::CheckForLayerChanges(CStudioHdr*, float)
 T C_BaseAnimatingOverlay::DoAnimationEvents(CStudioHdr*)
 T C_BaseAnimatingOverlay::GetClientClass()
 T C_BaseAnimatingOverlay::GetPredDescMap()
 T C_BaseAnimatingOverlay::GetRenderBounds(Vector&, Vector&)
 T C_BaseAnimatingOverlay::OnNewModel()
 T C_BaseAnimatingOverlay::YouForgotToImplementOrDeclareClientClass()
 T C_BaseAnimatingOverlay::~C_BaseAnimatingOverlay()
 T C_BaseCombatCharacter::BloodColor()
 T C_BaseCombatCharacter::C_BaseCombatCharacter()
 T C_BaseCombatCharacter::DoMuzzleFlash()
 T C_BaseCombatCharacter::GetActiveWeapon() const
 T C_BaseCombatCharacter::GetAmmoCount(int) const
 T C_BaseCombatCharacter::GetClientClass()
 T C_BaseCombatCharacter::GetPredDescMap()
 T C_BaseCombatCharacter::IsBaseCombatCharacter()
 T C_BaseCombatCharacter::IsInFieldOfView(C_BaseEntity*) const
 T C_BaseCombatCharacter::IsInFieldOfView(Vector const&) const
 T C_BaseCombatCharacter::IsLineOfSightClear(C_BaseEntity*, C_BaseCombatCharacter::LineOfSightCheckType) const
 T C_BaseCombatCharacter::IsLineOfSightClear(Vector const&, C_BaseCombatCharacter::LineOfSightCheckType, C_BaseEntity*) const
 T C_BaseCombatCharacter::IsLookingTowards(C_BaseEntity const*, float) const
 T C_BaseCombatCharacter::IsLookingTowards(Vector const&, float) const
 T C_BaseCombatCharacter::MyCombatCharacterPointer()
 T C_BaseCombatCharacter::OnDataChanged(DataUpdateType_t)
 T C_BaseCombatCharacter::OnPreDataChanged(DataUpdateType_t)
 T C_BaseCombatCharacter::RemoveAmmo(int, int)
 T C_BaseCombatCharacter::SetBloodColor(int)
 T C_BaseCombatCharacter::Weapon_CanSwitchTo(C_BaseCombatWeapon*)
 T C_BaseCombatCharacter::Weapon_OwnsThisType(char const*, int) const
 T C_BaseCombatCharacter::Weapon_Switch(C_BaseCombatWeapon*, int)
 T C_BaseCombatCharacter::YouForgotToImplementOrDeclareClientClass()
 T C_BaseCombatCharacter::~C_BaseCombatCharacter()
 T C_BaseCombatWeapon::AbortReload()
 T C_BaseCombatWeapon::Activate()
 T C_BaseCombatWeapon::ActivityList()
 T C_BaseCombatWeapon::ActivityListCount()
 T C_BaseCombatWeapon::ActivityOverride(Activity, bool*)
 T C_BaseCombatWeapon::AddLookShift()
 T C_BaseCombatWeapon::AddViewKick()
 T C_BaseCombatWeapon::AddViewmodelBob(C_BaseViewModel*, Vector&, QAngle&)
 T C_BaseCombatWeapon::AllowsAutoSwitchFrom() const
 T C_BaseCombatWeapon::AllowsAutoSwitchTo() const
 T C_BaseCombatWeapon::AutoFiresFullClip()
 T C_BaseCombatWeapon::BoneMergeFastCullBloat(Vector&, Vector&, Vector const&, Vector const&) const
 T C_BaseCombatWeapon::C_BaseCombatWeapon()
 T C_BaseCombatWeapon::CalcOverrideModelIndex()
 T C_BaseCombatWeapon::CalcViewmodelBob()
 T C_BaseCombatWeapon::CanBePickedUpByNPCs()
 T C_BaseCombatWeapon::CanBeSelected()
 T C_BaseCombatWeapon::CanDeploy()
 T C_BaseCombatWeapon::CanHolster()
 T C_BaseCombatWeapon::CanLower()
 T C_BaseCombatWeapon::CanOverload()
 T C_BaseCombatWeapon::CanReload()
 T C_BaseCombatWeapon::CheckReload()
 T C_BaseCombatWeapon::Clip1()
 T C_BaseCombatWeapon::Clip2()
 T C_BaseCombatWeapon::CreateMove(float, CUserCmd*, QAngle const&)
 T C_BaseCombatWeapon::DefaultDeploy(char*, char*, int, char*)
 T C_BaseCombatWeapon::DefaultReload(int, int, int)
 T C_BaseCombatWeapon::DefaultTouch(C_BaseEntity*)
 T C_BaseCombatWeapon::Deploy()
 T C_BaseCombatWeapon::Detach()
 T C_BaseCombatWeapon::DisplayAltFireHudHint()
 T C_BaseCombatWeapon::DisplayReloadHudHint()
 T C_BaseCombatWeapon::DrawCrosshair()
 T C_BaseCombatWeapon::DrawModel(int)
 T C_BaseCombatWeapon::DrawOverriddenViewmodel(C_BaseViewModel*, int)
 T C_BaseCombatWeapon::Drop(Vector const&)
 T C_BaseCombatWeapon::Equip(C_BaseCombatCharacter*)
 T C_BaseCombatWeapon::FinishReload()
 T C_BaseCombatWeapon::GetAnimPrefix() const
 T C_BaseCombatWeapon::GetBulletSpread()
 T C_BaseCombatWeapon::GetBulletSpread(WeaponProficiency_t)
 T C_BaseCombatWeapon::GetBulletType()
 T C_BaseCombatWeapon::GetClientClass()
 T C_BaseCombatWeapon::GetControlPanelClassName(int, char const*&)
 T C_BaseCombatWeapon::GetControlPanelInfo(int, char const*&)
 T C_BaseCombatWeapon::GetDamage(float, int)
 T C_BaseCombatWeapon::GetDeathNoticeName()
 T C_BaseCombatWeapon::GetDefaultAnimSpeed()
 T C_BaseCombatWeapon::GetDefaultClip1() const
 T C_BaseCombatWeapon::GetDefaultClip2() const
 T C_BaseCombatWeapon::GetDrawActivity()
 T C_BaseCombatWeapon::GetEncryptionKey()
 T C_BaseCombatWeapon::GetFireRate()
 T C_BaseCombatWeapon::GetLastWeapon()
 T C_BaseCombatWeapon::GetMaxAutoAimDeflection()
 T C_BaseCombatWeapon::GetMaxBurst()
 T C_BaseCombatWeapon::GetMaxClip1() const
 T C_BaseCombatWeapon::GetMaxClip2() const
 T C_BaseCombatWeapon::GetMaxRestTime()
 T C_BaseCombatWeapon::GetMinBurst()
 T C_BaseCombatWeapon::GetMinRestTime()
 T C_BaseCombatWeapon::GetName() const
 T C_BaseCombatWeapon::GetOwner() const
 T C_BaseCombatWeapon::GetPosition() const
 T C_BaseCombatWeapon::GetPositionConsole() const
 T C_BaseCombatWeapon::GetPredDescMap()
 T C_BaseCombatWeapon::GetPrimaryAmmoType() const
 T C_BaseCombatWeapon::GetPrimaryAttackActivity()
 T C_BaseCombatWeapon::GetPrintName() const
 T C_BaseCombatWeapon::GetProficiencyValues()
 T C_BaseCombatWeapon::GetRandomBurst()
 T C_BaseCombatWeapon::GetRumbleEffect() const
 T C_BaseCombatWeapon::GetSecondaryAmmoType() const
 T C_BaseCombatWeapon::GetSecondaryAttackActivity()
 T C_BaseCombatWeapon::GetShootSound(int) const
 T C_BaseCombatWeapon::GetSkinOverride() const
 T C_BaseCombatWeapon::GetSlot() const
 T C_BaseCombatWeapon::GetSlotConsole() const
 T C_BaseCombatWeapon::GetSpreadBias(WeaponProficiency_t)
 T C_BaseCombatWeapon::GetSpriteActive() const
 T C_BaseCombatWeapon::GetSpriteAmmo() const
 T C_BaseCombatWeapon::GetSpriteAmmo2() const
 T C_BaseCombatWeapon::GetSpriteAutoaim() const
 T C_BaseCombatWeapon::GetSpriteCrosshair() const
 T C_BaseCombatWeapon::GetSpriteInactive() const
 T C_BaseCombatWeapon::GetSpriteZoomedAutoaim() const
 T C_BaseCombatWeapon::GetSpriteZoomedCrosshair() const
 T C_BaseCombatWeapon::GetSubType()
 T C_BaseCombatWeapon::GetToolRecordingState(KeyValues*)
 T C_BaseCombatWeapon::GetViewModel(int) const
 T C_BaseCombatWeapon::GetViewmodelBoneControllers(C_BaseViewModel*, float*)
 T C_BaseCombatWeapon::GetWeaponCrosshairScale(float&)
 T C_BaseCombatWeapon::GetWeaponFlags() const
 T C_BaseCombatWeapon::GetWeaponIdleTime()
 T C_BaseCombatWeapon::GetWeight() const
 T C_BaseCombatWeapon::GetWorldModel() const
 T C_BaseCombatWeapon::GetWorldModelIndex()
 T C_BaseCombatWeapon::GetWpnData() const
 T C_BaseCombatWeapon::GiveDefaultAmmo()
 T C_BaseCombatWeapon::GiveTo(C_BaseEntity*)
 T C_BaseCombatWeapon::HandleFireOnEmpty()
 T C_BaseCombatWeapon::HandleInput()
 T C_BaseCombatWeapon::HasAmmo()
 T C_BaseCombatWeapon::HasAnyAmmo()
 T C_BaseCombatWeapon::HasPrimaryAmmo()
 T C_BaseCombatWeapon::HasSecondaryAmmo()
 T C_BaseCombatWeapon::HasWeaponIdleTimeElapsed()
 T C_BaseCombatWeapon::HideThink()
 T C_BaseCombatWeapon::Holster(C_BaseCombatWeapon*)
 T C_BaseCombatWeapon::HolsterOnDetach()
 T C_BaseCombatWeapon::IsActiveByLocalPlayer()
 T C_BaseCombatWeapon::IsAllowedToSwitch()
 T C_BaseCombatWeapon::IsBaseCombatWeapon() const
 T C_BaseCombatWeapon::IsCarriedByLocalPlayer()
 T C_BaseCombatWeapon::IsHolstered()
 T C_BaseCombatWeapon::IsOverridingViewmodel()
 T C_BaseCombatWeapon::IsPredicted() const
 T C_BaseCombatWeapon::IsWeaponVisible()
 T C_BaseCombatWeapon::IsWeaponZoomed()
 T C_BaseCombatWeapon::ItemBusyFrame()
 T C_BaseCombatWeapon::ItemHolsterFrame()
 T C_BaseCombatWeapon::ItemPostFrame()
 T C_BaseCombatWeapon::ItemPreFrame()
 T C_BaseCombatWeapon::KeyInput(int, ButtonCode_t, char const*)
 T C_BaseCombatWeapon::Lower()
 T C_BaseCombatWeapon::MaintainIdealActivity()
 T C_BaseCombatWeapon::MakeTracer(Vector const&, CGameTrace const&, int)
 T C_BaseCombatWeapon::MyCombatWeaponPointer()
 T C_BaseCombatWeapon::NetworkStateChanged_m_nNextThinkTick()
 T C_BaseCombatWeapon::NetworkStateChanged_m_nNextThinkTick(void*)
 T C_BaseCombatWeapon::NotifyShouldTransmit(ShouldTransmitState_t)
 T C_BaseCombatWeapon::OnActiveStateChanged(int)
 T C_BaseCombatWeapon::OnDataChanged(DataUpdateType_t)
 T C_BaseCombatWeapon::OnFireEvent(C_BaseViewModel*, Vector const&, QAngle const&, int, char const*)
 T C_BaseCombatWeapon::OnPickedUp(C_BaseCombatCharacter*)
 T C_BaseCombatWeapon::OnRestore()
 T C_BaseCombatWeapon::OverrideMouseInput(float*, float*)
 T C_BaseCombatWeapon::Precache()
 T C_BaseCombatWeapon::PrimaryAttack()
 T C_BaseCombatWeapon::Ready()
 T C_BaseCombatWeapon::Redraw()
 T C_BaseCombatWeapon::Reload()
 T C_BaseCombatWeapon::ReloadOrSwitchWeapons()
 T C_BaseCombatWeapon::RescindAltFireHudHint()
 T C_BaseCombatWeapon::RescindReloadHudHint()
 T C_BaseCombatWeapon::RestartParticleEffect()
 T C_BaseCombatWeapon::SecondaryAttack()
 T C_BaseCombatWeapon::SendViewModelAnim(int)
 T C_BaseCombatWeapon::SendWeaponAnim(int)
 T C_BaseCombatWeapon::SetActivity(Activity, float)
 T C_BaseCombatWeapon::SetDormant(bool)
 T C_BaseCombatWeapon::SetIdealActivity(Activity)
 T C_BaseCombatWeapon::SetPickupTouch()
 T C_BaseCombatWeapon::SetSubType(int)
 T C_BaseCombatWeapon::SetViewModel()
 T C_BaseCombatWeapon::SetViewModelIndex(int)
 T C_BaseCombatWeapon::SetWeaponIdleTime(float)
 T C_BaseCombatWeapon::SetWeaponVisible(bool)
 T C_BaseCombatWeapon::ShadowCastType()
 T C_BaseCombatWeapon::ShouldBlockPrimaryFire()
 T C_BaseCombatWeapon::ShouldDisplayAltFireHUDHint()
 T C_BaseCombatWeapon::ShouldDisplayReloadHUDHint()
 T C_BaseCombatWeapon::ShouldDraw()
 T C_BaseCombatWeapon::ShouldDrawCrosshair()
 T C_BaseCombatWeapon::ShouldDrawPickup()
 T C_BaseCombatWeapon::ShouldDrawUsingViewModel()
 T C_BaseCombatWeapon::ShouldShowControlPanels()
 T C_BaseCombatWeapon::ShouldUseLargeViewModelVROverride()
 T C_BaseCombatWeapon::Spawn()
 T C_BaseCombatWeapon::StartSprinting()
 T C_BaseCombatWeapon::StopSprinting()
 T C_BaseCombatWeapon::StopWeaponSound(WeaponSound_t)
 T C_BaseCombatWeapon::UpdateAutoFire()
 T C_BaseCombatWeapon::UpdateClientData(C_BasePlayer*)
 T C_BaseCombatWeapon::UsesClipsForAmmo1() const
 T C_BaseCombatWeapon::UsesClipsForAmmo2() const
 T C_BaseCombatWeapon::UsesPrimaryAmmo()
 T C_BaseCombatWeapon::UsesSecondaryAmmo()
 T C_BaseCombatWeapon::ViewModelDrawn(C_BaseViewModel*)
 T C_BaseCombatWeapon::ViewModel_IsTransparent()
 T C_BaseCombatWeapon::ViewModel_IsUsingFBTexture()
 T C_BaseCombatWeapon::VisibleInWeaponSelection()
 T C_BaseCombatWeapon::WeaponAutoAimScale()
 T C_BaseCombatWeapon::WeaponIdle()
 T C_BaseCombatWeapon::WeaponSound(WeaponSound_t, float)
 T C_BaseCombatWeapon::YouForgotToImplementOrDeclareClientClass()
 T C_BaseCombatWeapon::~C_BaseCombatWeapon()
 T C_BaseDoor::GetClientClass()
 T C_BaseDoor::YouForgotToImplementOrDeclareClientClass()
 T C_BaseDoor::~C_BaseDoor()
 T C_BaseEntity::Activate()
 T C_BaseEntity::AddColoredDecal(Vector const&, Vector const&, Vector const&, int, int, bool, CGameTrace&, Color, int)
 T C_BaseEntity::AddColoredStudioDecal(Ray_t const&, int, int, bool, CGameTrace&, Color, int)
 T C_BaseEntity::AddDecal(Vector const&, Vector const&, Vector const&, int, int, bool, CGameTrace&, int)
 T C_BaseEntity::AddEffects(int)
 T C_BaseEntity::AddEntity()
 T C_BaseEntity::AddEntityToGroundList(C_BaseEntity*)
 T C_BaseEntity::AddFlag(int)
 T C_BaseEntity::AddRagdollToFadeQueue()
 T C_BaseEntity::AddStudioDecal(Ray_t const&, int, int, bool, CGameTrace&, int)
 T C_BaseEntity::AddToInterpolationList()
 T C_BaseEntity::AddToLeafSystem()
 T C_BaseEntity::AddToLeafSystem(RenderGroup_t)
 T C_BaseEntity::AddVar(void*, IInterpolatedVar*, int, bool)
 T C_BaseEntity::AddVisibleEntities()
 T C_BaseEntity::AllocateIntermediateData()
 T C_BaseEntity::ApplyAbsVelocityImpulse(Vector const&)
 T C_BaseEntity::AttemptToPowerup(int, float, float, C_BaseEntity*, CDamageModifier*)
 T C_BaseEntity::BaseInterpolatePart1(float&, Vector&, QAngle&, Vector&, int&)
 T C_BaseEntity::BaseInterpolatePart2(Vector&, QAngle&, Vector&, int)
 T C_BaseEntity::BecameDormantThisPacket() const
 T C_BaseEntity::BlocksLOS()
 T C_BaseEntity::BloodColor()
 T C_BaseEntity::BoneMergeFastCullBloat(Vector&, Vector&, Vector const&, Vector const&) const
 T C_BaseEntity::C_BaseEntity()
 T C_BaseEntity::CalcAbsolutePosition()
 T C_BaseEntity::CalcAbsoluteVelocity()
 T C_BaseEntity::CalcAimEntPositions()
 T C_BaseEntity::CalcOverrideModelIndex()
 T C_BaseEntity::CanBePoweredUp()
 T C_BaseEntity::ChangeTeam(int)
 T C_BaseEntity::CheckCLInterpChanged()
 T C_BaseEntity::CheckInitPredictable(char const*)
 T C_BaseEntity::CleanupToolRecordingState(KeyValues*)
 T C_BaseEntity::Clear()
 T C_BaseEntity::ClearFlags()
 T C_BaseEntity::ClientThink()
 T C_BaseEntity::CollisionRulesChanged()
 T C_BaseEntity::ComputeAbsPosition(Vector const&, Vector*)
 T C_BaseEntity::ComputeFxBlend()
 T C_BaseEntity::ComputePackedSize_R(datamap_t*)
 T C_BaseEntity::ComputeTracerStartPosition(Vector const&, Vector*)
 T C_BaseEntity::ComputeWorldSpaceSurroundingBox(Vector*, Vector*)
 T C_BaseEntity::CreateLightEffects()
 T C_BaseEntity::CreateModelInstance()
 T C_BaseEntity::CreateShadow()
 T C_BaseEntity::CreateVPhysics()
 T C_BaseEntity::DamageDecal(int, int)
 T C_BaseEntity::DecalTrace(CGameTrace*, char const*)
 T C_BaseEntity::DestroyAllDataObjects()
 T C_BaseEntity::DestroyDataObject(int)
 T C_BaseEntity::DestroyShadow()
 T C_BaseEntity::DispatchTraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*, CDmgAccumulator*)
 T C_BaseEntity::DoAnimationEvents()
 T C_BaseEntity::DoImpactEffect(CGameTrace&, int)
 T C_BaseEntity::DontRecordInTools()
 T C_BaseEntity::DrawBBoxVisualizations()
 T C_BaseEntity::DrawBrushModel(bool, int, bool)
 T C_BaseEntity::DrawModel(int)
 T C_BaseEntity::EarPosition()
 T C_BaseEntity::EmitCloseCaption(IRecipientFilter&, int, char const*, CUtlVector<Vector, CUtlMemory<Vector, int> >&, float, bool)
 T C_BaseEntity::EmitSound(IRecipientFilter&, int, EmitSound_t const&)
 T C_BaseEntity::EmitSound(IRecipientFilter&, int, EmitSound_t const&, short&)
 T C_BaseEntity::EmitSound(IRecipientFilter&, int, char const*, Vector const*, float, float*)
 T C_BaseEntity::EmitSound(IRecipientFilter&, int, char const*, short&, Vector const*, float, float*)
 T C_BaseEntity::EmitSound(char const*, float, float*)
 T C_BaseEntity::EnableAbsRecomputations(bool)
 T C_BaseEntity::EnableInToolView(bool)
 T C_BaseEntity::EndTouch(C_BaseEntity*)
 T C_BaseEntity::EstimateAbsVelocity(Vector&)
 T C_BaseEntity::EyeAngles()
 T C_BaseEntity::EyePosition()
 T C_BaseEntity::FireBullets(FireBulletsInfo_t const&)
 T C_BaseEntity::FirstShadowChild()
 T C_BaseEntity::FollowEntity(C_BaseEntity*, bool)
 T C_BaseEntity::GetAbsAngles() const
 T C_BaseEntity::GetAbsOrigin() const
 T C_BaseEntity::GetAimEntOrigin(IClientEntity*, Vector*, QAngle*)
 T C_BaseEntity::GetAttachment(int, Vector&)
 T C_BaseEntity::GetAttachment(int, Vector&, QAngle&)
 T C_BaseEntity::GetAttachment(int, matrix3x4_t&)
 T C_BaseEntity::GetAttachmentVelocity(int, Vector&, Quaternion&)
 T C_BaseEntity::GetAttackDamageScale()
 T C_BaseEntity::GetBaseAnimating()
 T C_BaseEntity::GetBaseEntity()
 T C_BaseEntity::GetBeamTraceFilter()
 T C_BaseEntity::GetBody()
 T C_BaseEntity::GetCheckUntouch() const
 T C_BaseEntity::GetClassname()
 T C_BaseEntity::GetClientClass()
 T C_BaseEntity::GetClientNetworkable()
 T C_BaseEntity::GetClientRenderable()
 T C_BaseEntity::GetClientSideFade()
 T C_BaseEntity::GetClientThinkable()
 T C_BaseEntity::GetClientVehicle()
 T C_BaseEntity::GetCollideType()
 T C_BaseEntity::GetCollideable()
 T C_BaseEntity::GetColorModulation(float*)
 T C_BaseEntity::GetDataDescMap()
 T C_BaseEntity::GetDataObject(int)
 T C_BaseEntity::GetDataTableBasePtr()
 T C_BaseEntity::GetDebugName()
 T C_BaseEntity::GetEFlags() const
 T C_BaseEntity::GetFollowedEntity()
 T C_BaseEntity::GetFxBlend()
 T C_BaseEntity::GetGroundEntity()
 T C_BaseEntity::GetHealth() const
 T C_BaseEntity::GetIClientEntity()
 T C_BaseEntity::GetIClientUnknown()
 T C_BaseEntity::GetIDString()
 T C_BaseEntity::GetIntermediateDataSize()
 T C_BaseEntity::GetInterpolationAmount(int)
 T C_BaseEntity::GetKeyValue(char const*, char*, int)
 T C_BaseEntity::GetLocalAngles() const
 T C_BaseEntity::GetLocalAnglesDim(int) const
 T C_BaseEntity::GetLocalOrigin() const
 T C_BaseEntity::GetLocalOriginDim(int) const
 T C_BaseEntity::GetMaxHealth() const
 T C_BaseEntity::GetModel() const
 T C_BaseEntity::GetModelInstance()
 T C_BaseEntity::GetModelName() const
 T C_BaseEntity::GetMouth()
 T C_BaseEntity::GetNextThinkTick(char const*)
 T C_BaseEntity::GetNextThinkTick(int) const
 T C_BaseEntity::GetObserverCamOrigin()
 T C_BaseEntity::GetOldOrigin()
 T C_BaseEntity::GetOriginalNetworkDataObject()
 T C_BaseEntity::GetPVSNotifyInterface()
 T C_BaseEntity::GetParametersForSound(char const*, CSoundParameters&, char const*)
 T C_BaseEntity::GetParametersForSound(char const*, short&, CSoundParameters&, char const*)
 T C_BaseEntity::GetParentToWorldTransform(matrix3x4_t&)
 T C_BaseEntity::GetPredDescMap()
 T C_BaseEntity::GetPredictable() const
 T C_BaseEntity::GetPredictedFrame(int)
 T C_BaseEntity::GetPrevLocalAngles() const
 T C_BaseEntity::GetPrevLocalOrigin() const
 T C_BaseEntity::GetRefEHandle() const
 T C_BaseEntity::GetRenderAngles()
 T C_BaseEntity::GetRenderBounds(Vector&, Vector&)
 T C_BaseEntity::GetRenderBoundsWorldspace(Vector&, Vector&)
 T C_BaseEntity::GetRenderClipPlane()
 T C_BaseEntity::GetRenderGroup()
 T C_BaseEntity::GetRenderOrigin()
 T C_BaseEntity::GetRenderTeamNumber()
 T C_BaseEntity::GetRootMoveParent()
 T C_BaseEntity::GetShadowCastDirection(Vector*, ShadowType_t) const
 T C_BaseEntity::GetShadowCastDistance(float*, ShadowType_t) const
 T C_BaseEntity::GetShadowHandle() const
 T C_BaseEntity::GetShadowParent()
 T C_BaseEntity::GetShadowRenderBounds(Vector&, Vector&, ShadowType_t)
 T C_BaseEntity::GetShadowUseOtherEntity() const
 T C_BaseEntity::GetSkin()
 T C_BaseEntity::GetSolid() const
 T C_BaseEntity::GetSolidFlags() const
 T C_BaseEntity::GetSoundSourceIndex() const
 T C_BaseEntity::GetSoundSpatialization(SpatializationInfo_t&)
 T C_BaseEntity::GetStudioBody()
 T C_BaseEntity::GetTeam()
 T C_BaseEntity::GetTeamNumber() const
 T C_BaseEntity::GetTextureAnimationStartTime()
 T C_BaseEntity::GetTextureFrameIndex()
 T C_BaseEntity::GetThinkHandle()
 T C_BaseEntity::GetToolRecordingState(KeyValues*)
 T C_BaseEntity::GetTouchTrace()
 T C_BaseEntity::GetTracerAttachment()
 T C_BaseEntity::GetTracerType()
 T C_BaseEntity::GetVectors(Vector*, Vector*, Vector*) const
 T C_BaseEntity::GetViewOffset() const
 T C_BaseEntity::GetWaterType() const
 T C_BaseEntity::HandleShotImpactingWater(FireBulletsInfo_t const&, Vector const&, ITraceFilter*, Vector*)
 T C_BaseEntity::HasDataObjectType(int) const
 T C_BaseEntity::HealthFraction() const
 T C_BaseEntity::HierarchySetParent(C_BaseEntity*)
 T C_BaseEntity::HierarchyUpdateMoveParent()
 T C_BaseEntity::IgnoresZBuffer() const
 T C_BaseEntity::ImpactTrace(CGameTrace*, int, char const*)
 T C_BaseEntity::InLocalTeam()
 T C_BaseEntity::InSameTeam(C_BaseEntity*)
 T C_BaseEntity::Init(int, int)
 T C_BaseEntity::InitPredictable()
 T C_BaseEntity::InitializeAsClientEntity(char const*, RenderGroup_t)
 T C_BaseEntity::InitializeAsClientEntityByIndex(int, RenderGroup_t)
 T C_BaseEntity::Instance(CBaseHandle)
 T C_BaseEntity::Instance(int)
 T C_BaseEntity::Interp_HierarchyUpdateInterpolationAmounts()
 T C_BaseEntity::Interp_RestoreToLastNetworked(VarMapping_t*)
 T C_BaseEntity::Interp_SetupMappings(VarMapping_t*)
 T C_BaseEntity::Interp_UpdateInterpolationAmounts(VarMapping_t*)
 T C_BaseEntity::Interpolate(float)
 T C_BaseEntity::InterpolateServerEntities()
 T C_BaseEntity::InvalidatePhysicsRecursive(int)
 T C_BaseEntity::IsAbsRecomputationsEnabled()
 T C_BaseEntity::IsAlive()
 T C_BaseEntity::IsBaseCombatCharacter()
 T C_BaseEntity::IsBaseCombatWeapon() const
 T C_BaseEntity::IsBaseObject() const
 T C_BaseEntity::IsBaseTrain() const
 T C_BaseEntity::IsBrushModel() const
 T C_BaseEntity::IsClientCreated() const
 T C_BaseEntity::IsCombatItem() const
 T C_BaseEntity::IsCurrentlyTouching() const
 T C_BaseEntity::IsDeflectable()
 T C_BaseEntity::IsDormant()
 T C_BaseEntity::IsDormantPredictable() const
 T C_BaseEntity::IsFloating()
 T C_BaseEntity::IsFollowingEntity()
 T C_BaseEntity::IsIntermediateDataAllocated() const
 T C_BaseEntity::IsNPC()
 T C_BaseEntity::IsNextBot()
 T C_BaseEntity::IsPlayer() const
 T C_BaseEntity::IsSelfAnimating()
 T C_BaseEntity::IsShadowDirty()
 T C_BaseEntity::IsSimulatingOnAlternateTicks()
 T C_BaseEntity::IsStandable() const
 T C_BaseEntity::IsSubModel()
 T C_BaseEntity::IsToolRecording() const
 T C_BaseEntity::IsTransparent()
 T C_BaseEntity::IsTwoPass()
 T C_BaseEntity::IsValidIDTarget()
 T C_BaseEntity::IsVisibleToTargetID()
 T C_BaseEntity::KeyValue(char const*, Vector const&)
 T C_BaseEntity::KeyValue(char const*, char const*)
 T C_BaseEntity::KeyValue(char const*, float)
 T C_BaseEntity::LODTest()
 T C_BaseEntity::LinkChild(C_BaseEntity*, C_BaseEntity*)
 T C_BaseEntity::LocalEyeAngles()
 T C_BaseEntity::LookupAttachment(char const*)
 T C_BaseEntity::MakeTracer(Vector const&, CGameTrace const&, int)
 T C_BaseEntity::MarkAimEntsDirty()
 T C_BaseEntity::MarkMessageReceived()
 T C_BaseEntity::MarkRenderHandleDirty()
 T C_BaseEntity::MarkShadowDirty(bool)
 T C_BaseEntity::ModifyEmitSoundParams(EmitSound_t&)
 T C_BaseEntity::ModifyFireBulletsDamage(CTakeDamageInfo*)
 T C_BaseEntity::MoveToLastReceivedPosition(bool)
 T C_BaseEntity::MyCombatCharacterPointer()
 T C_BaseEntity::MyCombatWeaponPointer()
 T C_BaseEntity::NetworkVar_m_Collision::NetworkStateChanged()
 T C_BaseEntity::NetworkVar_m_Collision::NetworkStateChanged(void*)
 T C_BaseEntity::NetworkVar_m_Particles::NetworkStateChanged()
 T C_BaseEntity::NetworkVar_m_Particles::NetworkStateChanged(void*)
 T C_BaseEntity::NextShadowPeer()
 T C_BaseEntity::NotifyShouldTransmit(ShouldTransmitState_t)
 T C_BaseEntity::ObjectCaps()
 T C_BaseEntity::OnDataChanged(DataUpdateType_t)
 T C_BaseEntity::OnLatchInterpolatedVariables(int)
 T C_BaseEntity::OnNewModel()
 T C_BaseEntity::OnNewParticleEffect(char const*, CNewParticleEffect*)
 T C_BaseEntity::OnPostRestoreData()
 T C_BaseEntity::OnPreDataChanged(DataUpdateType_t)
 T C_BaseEntity::OnPredictedEntityRemove(bool, C_BaseEntity*)
 T C_BaseEntity::OnRestore()
 T C_BaseEntity::OnSave()
 T C_BaseEntity::OnStoreLastNetworkedValue()
 T C_BaseEntity::OnThreadedDrawSetup()
 T C_BaseEntity::ParseMapData(CEntityMapData*)
 T C_BaseEntity::PerformCustomPhysics(Vector*, Vector*, QAngle*, QAngle*)
 T C_BaseEntity::PhysicsAddGravityMove(Vector&)
 T C_BaseEntity::PhysicsCheckForEntityUntouch()
 T C_BaseEntity::PhysicsCheckSweep(Vector const&, Vector const&, CGameTrace*)
 T C_BaseEntity::PhysicsCheckVelocity()
 T C_BaseEntity::PhysicsCheckWater()
 T C_BaseEntity::PhysicsCheckWaterTransition()
 T C_BaseEntity::PhysicsCustom()
 T C_BaseEntity::PhysicsDispatchThink(void (C_BaseEntity::*)())
 T C_BaseEntity::PhysicsImpact(C_BaseEntity*, CGameTrace&)
 T C_BaseEntity::PhysicsMarkEntitiesAsTouchingEventDriven(C_BaseEntity*, CGameTrace&)
 T C_BaseEntity::PhysicsMarkEntityAsTouched(C_BaseEntity*)
 T C_BaseEntity::PhysicsNoclip()
 T C_BaseEntity::PhysicsNone()
 T C_BaseEntity::PhysicsNotifyOtherOfGroundRemoval(C_BaseEntity*, C_BaseEntity*)
 T C_BaseEntity::PhysicsNotifyOtherOfUntouch(C_BaseEntity*, C_BaseEntity*)
 T C_BaseEntity::PhysicsPushEntity(Vector const&, CGameTrace*)
 T C_BaseEntity::PhysicsPusher()
 T C_BaseEntity::PhysicsRemoveGroundList(C_BaseEntity*)
 T C_BaseEntity::PhysicsRemoveTouchedList(C_BaseEntity*)
 T C_BaseEntity::PhysicsRigidChild()
 T C_BaseEntity::PhysicsRunThink(C_BaseEntity::thinkmethods_t)
 T C_BaseEntity::PhysicsSimulate()
 T C_BaseEntity::PhysicsSolidMaskForEntity() const
 T C_BaseEntity::PhysicsStep()
 T C_BaseEntity::PhysicsToss()
 T C_BaseEntity::PopEnableAbsRecomputations()
 T C_BaseEntity::PostDataUpdate(DataUpdateType_t)
 T C_BaseEntity::PostEntityPacketReceived()
 T C_BaseEntity::PostNetworkDataReceived(int)
 T C_BaseEntity::PreDataUpdate(DataUpdateType_t)
 T C_BaseEntity::PreEntityPacketReceived(int)
 T C_BaseEntity::Precache()
 T C_BaseEntity::PrecacheModel(char const*)
 T C_BaseEntity::PrecacheScriptSound(char const*)
 T C_BaseEntity::ProcessTeleportList()
 T C_BaseEntity::PushEnableAbsRecomputations(bool)
 T C_BaseEntity::ReceiveMessage(int, bf_read&)
 T C_BaseEntity::RecordToolMessage()
 T C_BaseEntity::RegisterThinkContext(char const*)
 T C_BaseEntity::Release()
 T C_BaseEntity::Remove()
 T C_BaseEntity::RemoveFlag(int)
 T C_BaseEntity::RemoveFromInterpolationList()
 T C_BaseEntity::RemoveFromLeafSystem()
 T C_BaseEntity::RemoveRecipientsIfNotCloseCaptioning(C_RecipientFilter&)
 T C_BaseEntity::RemoveVar(void*, bool)
 T C_BaseEntity::RenderHandle()
 T C_BaseEntity::RenderableToWorldTransform()
 T C_BaseEntity::ResetLatched()
 T C_BaseEntity::ResolveFlyCollisionBounce(CGameTrace&, Vector&, float)
 T C_BaseEntity::ResolveFlyCollisionCustom(CGameTrace&, Vector&)
 T C_BaseEntity::ResolveFlyCollisionSlide(CGameTrace&, Vector&)
 T C_BaseEntity::Restore(IRestore&)
 T C_BaseEntity::RestoreData(char const*, int, int)
 T C_BaseEntity::SUB_Remove()
 T C_BaseEntity::Save(ISave&)
 T C_BaseEntity::SaveData(char const*, int, int)
 T C_BaseEntity::SetAIWalkable(bool)
 T C_BaseEntity::SetAbsAngles(QAngle const&)
 T C_BaseEntity::SetAbsOrigin(Vector const&)
 T C_BaseEntity::SetAbsQueriesValid(bool)
 T C_BaseEntity::SetAbsVelocity(Vector const&)
 T C_BaseEntity::SetBlocksLOS(bool)
 T C_BaseEntity::SetCheckUntouch(bool)
 T C_BaseEntity::SetClassname(char const*)
 T C_BaseEntity::SetCollisionGroup(int)
 T C_BaseEntity::SetDestroyedOnRecreateEntities()
 T C_BaseEntity::SetDormant(bool)
 T C_BaseEntity::SetEFlags(int)
 T C_BaseEntity::SetEffectEntity(C_BaseEntity*)
 T C_BaseEntity::SetEffects(int)
 T C_BaseEntity::SetGroundEntity(C_BaseEntity*)
 T C_BaseEntity::SetHealth(int)
 T C_BaseEntity::SetLastThink(int, float)
 T C_BaseEntity::SetLocalAngles(QAngle const&)
 T C_BaseEntity::SetLocalAnglesDim(int, float)
 T C_BaseEntity::SetLocalAngularVelocity(QAngle const&)
 T C_BaseEntity::SetLocalOrigin(Vector const&)
 T C_BaseEntity::SetLocalOriginDim(int, float)
 T C_BaseEntity::SetLocalVelocity(Vector const&)
 T C_BaseEntity::SetModel(char const*)
 T C_BaseEntity::SetModelByIndex(int)
 T C_BaseEntity::SetModelIndex(int)
 T C_BaseEntity::SetModelName(char const*)
 T C_BaseEntity::SetModelPointer(model_t const*)
 T C_BaseEntity::SetMoveCollide(MoveCollide_t)
 T C_BaseEntity::SetMoveType(MoveType_t, MoveCollide_t)
 T C_BaseEntity::SetNetworkAngles(QAngle const&)
 T C_BaseEntity::SetNetworkOrigin(Vector const&)
 T C_BaseEntity::SetNextClientThink(float)
 T C_BaseEntity::SetNextThink(float, char const*)
 T C_BaseEntity::SetNextThink(int, float)
 T C_BaseEntity::SetOwnerEntity(C_BaseEntity*)
 T C_BaseEntity::SetParent(C_BaseEntity*, int)
 T C_BaseEntity::SetPlayerSimulated(C_BasePlayer*)
 T C_BaseEntity::SetPredictable(bool)
 T C_BaseEntity::SetPredictionEligible(bool)
 T C_BaseEntity::SetPredictionRandomSeed(CUserCmd const*)
 T C_BaseEntity::SetRefEHandle(CBaseHandle const&)
 T C_BaseEntity::SetRemovalFlag(bool)
 T C_BaseEntity::SetRenderMode(RenderMode_t, bool)
 T C_BaseEntity::SetShadowUseOtherEntity(C_BaseEntity*)
 T C_BaseEntity::SetSize(Vector const&, Vector const&)
 T C_BaseEntity::SetThinkHandle(CClientThinkHandlePtr*)
 T C_BaseEntity::SetToolRecording(bool)
 T C_BaseEntity::SetViewOffset(Vector const&)
 T C_BaseEntity::SetWaterType(int)
 T C_BaseEntity::SetupBones(matrix3x4_t*, int, int, float)
 T C_BaseEntity::SetupWeights(matrix3x4_t const*, int, float*, float*)
 T C_BaseEntity::ShadowCastType()
 T C_BaseEntity::ShiftIntermediateDataForward(int, int)
 T C_BaseEntity::ShouldCollide(int, int) const
 T C_BaseEntity::ShouldDraw()
 T C_BaseEntity::ShouldDrawUnderwaterBulletBubbles()
 T C_BaseEntity::ShouldDrawWaterImpacts()
 T C_BaseEntity::ShouldInterpolate()
 T C_BaseEntity::ShouldPredict()
 T C_BaseEntity::ShouldReceiveProjectedTextures(int)
 T C_BaseEntity::ShouldSavePhysics()
 T C_BaseEntity::ShutdownPredictable()
 T C_BaseEntity::Simulate()
 T C_BaseEntity::SnatchModelInstance(C_BaseEntity*)
 T C_BaseEntity::Spawn()
 T C_BaseEntity::SpawnClientEntity()
 T C_BaseEntity::StartTouch(C_BaseEntity*)
 T C_BaseEntity::StopFollowingEntity()
 T C_BaseEntity::StopSound(char const*)
 T C_BaseEntity::StopSound(int, char const*)
 T C_BaseEntity::StopSound(int, int, char const*)
 T C_BaseEntity::Teleported()
 T C_BaseEntity::Term()
 T C_BaseEntity::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T C_BaseEntity::TestHitboxes(Ray_t const&, unsigned int, CGameTrace&)
 T C_BaseEntity::TextureAnimationWrapped()
 T C_BaseEntity::Think()
 T C_BaseEntity::ThinkSet(void (C_BaseEntity::*)(), float, char const*)
 T C_BaseEntity::ToolRecordEntities()
 T C_BaseEntity::Touch(C_BaseEntity*)
 T C_BaseEntity::TraceAttack(CTakeDamageInfo const&, Vector const&, CGameTrace*, CDmgAccumulator*)
 T C_BaseEntity::TraceBleed(float, Vector const&, CGameTrace*, int)
 T C_BaseEntity::UnlinkChild(C_BaseEntity*, C_BaseEntity*)
 T C_BaseEntity::UnlinkFromHierarchy()
 T C_BaseEntity::UpdateOnRemove()
 T C_BaseEntity::UpdatePartitionListEntry()
 T C_BaseEntity::UpdateVisibility()
 T C_BaseEntity::UpdateWaterState()
 T C_BaseEntity::UsesFlexDelayedWeights()
 T C_BaseEntity::UsesFullFrameBufferTexture()
 T C_BaseEntity::UsesPowerOfTwoFrameBufferTexture()
 T C_BaseEntity::VPhysicsDestroyObject()
 T C_BaseEntity::VPhysicsGetObjectList(IPhysicsObject**, int)
 T C_BaseEntity::VPhysicsInitNormal(SolidType_t, int, bool, solid_t*)
 T C_BaseEntity::VPhysicsInitShadow(bool, bool, solid_t*)
 T C_BaseEntity::VPhysicsIsFlesh()
 T C_BaseEntity::VPhysicsSetObject(IPhysicsObject*)
 T C_BaseEntity::VPhysicsUpdate(IPhysicsObject*)
 T C_BaseEntity::ValidateModelIndex()
 T C_BaseEntity::WorldAlignMaxs() const
 T C_BaseEntity::WorldAlignMins() const
 T C_BaseEntity::WorldSpaceCenter() const
 T C_BaseEntity::YouForgotToImplementOrDeclareClientClass()
 T C_BaseEntity::entindex() const
 T C_BaseEntity::operator delete(void*)
 T C_BaseEntity::operator new(unsigned long)
 T C_BaseEntity::~C_BaseEntity()
 T C_BaseEntityClassList::C_BaseEntityClassList()
 T C_BaseEntityClassList::~C_BaseEntityClassList()
 T C_BaseEntityIterator::C_BaseEntityIterator()
 T C_BaseEntityIterator::Next()
 T C_BaseExplosionEffect::Create(Vector const&, float, float, int)
 T C_BaseExplosionEffect::CreateCore()
 T C_BaseExplosionEffect::CreateDebris()
 T C_BaseExplosionEffect::CreateDynamicLight()
 T C_BaseExplosionEffect::CreateMisc()
 T C_BaseExplosionEffect::GetForceDirection(Vector const&, float, Vector*, float*)
 T C_BaseExplosionEffect::PlaySound()
 T C_BaseExplosionEffect::Probe(Vector const&, Vector*, float)
 T C_BaseFlex::AddFlexAnimation(CSceneEventInfo*)
 T C_BaseFlex::AddFlexSetting(char const*, float, flexsettinghdr_t const*, bool)
 T C_BaseFlex::AddGlobalFlexController(char const*)
 T C_BaseFlex::AddSceneEvent(CChoreoScene*, CChoreoEvent*, C_BaseEntity*, bool)
 T C_BaseFlex::AddViseme(Emphasized_Phoneme*, float, int, float, bool)
 T C_BaseFlex::AddVisemesForSentence(Emphasized_Phoneme*, float, CSentence*, float, float, bool)
 T C_BaseFlex::BuildTransformations(CStudioHdr*, Vector*, Quaternion*, matrix3x4_t const&, int, CBoneBitList&)
 T C_BaseFlex::C_BaseFlex()
 T C_BaseFlex::CheckSceneEventCompletion(CSceneEventInfo*, float, CChoreoScene*, CChoreoEvent*)
 T C_BaseFlex::ClearSceneEvent(CSceneEventInfo*, bool, bool)
 T C_BaseFlex::ClearSceneEvents(CChoreoScene*, bool)
 T C_BaseFlex::EnsureTranslations(flexsettinghdr_t const*)
 T C_BaseFlex::FlexControllerLocalToGlobal(flexsettinghdr_t const*, int)
 T C_BaseFlex::GetClientClass()
 T C_BaseFlex::GetGlobalFlexControllerName(int)
 T C_BaseFlex::GetPredDescMap()
 T C_BaseFlex::GetSoundSpatialization(SpatializationInfo_t&)
 T C_BaseFlex::GetToolRecordingState(KeyValues*)
 T C_BaseFlex::InitPhonemeMappings()
 T C_BaseFlex::LinkToGlobalFlexControllers(CStudioHdr*)
 T C_BaseFlex::OnNewModel()
 T C_BaseFlex::OnThreadedDrawSetup()
 T C_BaseFlex::ProcessFlexSettingSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T C_BaseFlex::ProcessSceneEvent(bool, CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T C_BaseFlex::ProcessSceneEvents(bool)
 T C_BaseFlex::ProcessSequenceSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*)
 T C_BaseFlex::ProcessVisemes(Emphasized_Phoneme*)
 T C_BaseFlex::RemoveChoreoScene(CChoreoScene*)
 T C_BaseFlex::RemoveSceneEvent(CChoreoScene*, CChoreoEvent*, bool)
 T C_BaseFlex::SetFlexWeight(LocalFlexController_t, float)
 T C_BaseFlex::SetViewTarget(CStudioHdr*)
 T C_BaseFlex::SetupEmphasisBlend(Emphasized_Phoneme*, int)
 T C_BaseFlex::SetupGlobalWeights(matrix3x4_t const*, int, float*, float*)
 T C_BaseFlex::SetupLocalWeights(matrix3x4_t const*, int, float*, float*)
 T C_BaseFlex::SetupWeights(matrix3x4_t const*, int, float*, float*)
 T C_BaseFlex::Spawn()
 T C_BaseFlex::StandardBlendingRules(CStudioHdr*, Vector*, Quaternion*, float, int)
 T C_BaseFlex::StartChoreoScene(CChoreoScene*)
 T C_BaseFlex::StartSceneEvent(CSceneEventInfo*, CChoreoScene*, CChoreoEvent*, CChoreoActor*, C_BaseEntity*)
 T C_BaseFlex::UsesFlexDelayedWeights()
 T C_BaseFlex::YouForgotToImplementOrDeclareClientClass()
 T C_BaseFlex::~C_BaseFlex()
 T C_BaseGrenade::BloodColor()
 T C_BaseGrenade::BounceSound()
 T C_BaseGrenade::C_BaseGrenade()
 T C_BaseGrenade::Detonate()
 T C_BaseGrenade::Event_Killed(CTakeDamageInfo const&)
 T C_BaseGrenade::Explode(CGameTrace*, int)
 T C_BaseGrenade::GetBlastForce()
 T C_BaseGrenade::GetClientClass()
 T C_BaseGrenade::GetDamage()
 T C_BaseGrenade::GetDamageRadius()
 T C_BaseGrenade::GetPredDescMap()
 T C_BaseGrenade::GetShakeAmplitude()
 T C_BaseGrenade::GetShakeRadius()
 T C_BaseGrenade::NetworkStateChanged_m_fFlags()
 T C_BaseGrenade::NetworkStateChanged_m_fFlags(void*)
 T C_BaseGrenade::NetworkStateChanged_m_vecVelocity()
 T C_BaseGrenade::NetworkStateChanged_m_vecVelocity(void*)
 T C_BaseGrenade::Precache()
 T C_BaseGrenade::SetDamage(float)
 T C_BaseGrenade::SetDamageRadius(float)
 T C_BaseGrenade::YouForgotToImplementOrDeclareClientClass()
 T C_BaseGrenade::~C_BaseGrenade()
 T C_BaseHLBludgeonWeapon::GetClientClass()
 T C_BaseHLBludgeonWeapon::YouForgotToImplementOrDeclareClientClass()
 T C_BaseHLBludgeonWeapon::~C_BaseHLBludgeonWeapon()
 T C_BaseHLCombatWeapon::AddViewmodelBob(C_BaseViewModel*, Vector&, QAngle&)
 T C_BaseHLCombatWeapon::CalcViewmodelBob()
 T C_BaseHLCombatWeapon::CanLower()
 T C_BaseHLCombatWeapon::Deploy()
 T C_BaseHLCombatWeapon::GetBulletSpread(WeaponProficiency_t)
 T C_BaseHLCombatWeapon::GetClientClass()
 T C_BaseHLCombatWeapon::GetPredDescMap()
 T C_BaseHLCombatWeapon::GetProficiencyValues()
 T C_BaseHLCombatWeapon::GetSpreadBias(WeaponProficiency_t)
 T C_BaseHLCombatWeapon::Holster(C_BaseCombatWeapon*)
 T C_BaseHLCombatWeapon::ItemHolsterFrame()
 T C_BaseHLCombatWeapon::Lower()
 T C_BaseHLCombatWeapon::Ready()
 T C_BaseHLCombatWeapon::WeaponIdle()
 T C_BaseHLCombatWeapon::WeaponShouldBeLowered()
 T C_BaseHLCombatWeapon::YouForgotToImplementOrDeclareClientClass()
 T C_BaseHLCombatWeapon::~C_BaseHLCombatWeapon()
 T C_BaseHLPlayer::BuildTransformations(CStudioHdr*, Vector*, Quaternion*, matrix3x4_t const&, int, CBoneBitList&)
 T C_BaseHLPlayer::C_BaseHLPlayer()
 T C_BaseHLPlayer::CreateMove(float, CUserCmd*)
 T C_BaseHLPlayer::DrawModel(int)
 T C_BaseHLPlayer::ExitLadder()
 T C_BaseHLPlayer::GetClientClass()
 T C_BaseHLPlayer::GetFOV()
 T C_BaseHLPlayer::GetPredDescMap()
 T C_BaseHLPlayer::IsZoomed()
 T C_BaseHLPlayer::OnDataChanged(DataUpdateType_t)
 T C_BaseHLPlayer::PerformClientSideNPCSpeedModifiers(float, CUserCmd*)
 T C_BaseHLPlayer::PerformClientSideObstacleAvoidance(float, CUserCmd*)
 T C_BaseHLPlayer::TestMove(Vector const&, float, float, Vector const&, Vector const&)
 T C_BaseHLPlayer::Weapon_DropPrimary()
 T C_BaseHLPlayer::YouForgotToImplementOrDeclareClientClass()
 T C_BaseHLPlayer::~C_BaseHLPlayer()
 T C_BaseHelicopter::C_BaseHelicopter()
 T C_BaseHelicopter::GetClientClass()
 T C_BaseHelicopter::YouForgotToImplementOrDeclareClientClass()
 T C_BaseHelicopter::~C_BaseHelicopter()
 T C_BaseParticleEntity::Activate()
 T C_BaseParticleEntity::C_BaseParticleEntity()
 T C_BaseParticleEntity::GetClientClass()
 T C_BaseParticleEntity::GetPredDescMap()
 T C_BaseParticleEntity::GetSortOrigin()
 T C_BaseParticleEntity::RenderParticles(CParticleRenderIterator*)
 T C_BaseParticleEntity::SetShouldSimulate(bool)
 T C_BaseParticleEntity::ShouldDraw()
 T C_BaseParticleEntity::ShouldSimulate() const
 T C_BaseParticleEntity::SimulateParticles(CParticleSimulateIterator*)
 T C_BaseParticleEntity::Think()
 T C_BaseParticleEntity::YouForgotToImplementOrDeclareClientClass()
 T C_BaseParticleEntity::~C_BaseParticleEntity()
 T C_BasePlayer::AbortReload()
 T C_BasePlayer::AddEntity()
 T C_BasePlayer::AddToPlayerSimulationList(C_BaseEntity*)
 T C_BasePlayer::AudioStateIsUnderwater(Vector)
 T C_BasePlayer::AvoidPhysicsProps(CUserCmd*)
 T C_BasePlayer::BuildFirstPersonMeathookTransformations(CStudioHdr*, Vector*, Quaternion*, matrix3x4_t const&, int, CBoneBitList&, char const*)
 T C_BasePlayer::C_BasePlayer()
 T C_BasePlayer::CacheVehicleView()
 T C_BasePlayer::CalcChaseCamView(Vector&, QAngle&, float&)
 T C_BasePlayer::CalcDeathCamView(Vector&, QAngle&, float&)
 T C_BasePlayer::CalcFreezeCamView(Vector&, QAngle&, float&)
 T C_BasePlayer::CalcInEyeCamView(Vector&, QAngle&, float&)
 T C_BasePlayer::CalcObserverView(Vector&, QAngle&, float&)
 T C_BasePlayer::CalcPlayerView(Vector&, QAngle&, float&)
 T C_BasePlayer::CalcRoamingView(Vector&, QAngle&, float&)
 T C_BasePlayer::CalcRoll(QAngle const&, Vector const&, float, float)
 T C_BasePlayer::CalcVehicleView(IClientVehicle*, Vector&, QAngle&, float&, float&, float&)
 T C_BasePlayer::CalcView(Vector&, QAngle&, float&, float&, float&)
 T C_BasePlayer::CalcViewModelView(Vector const&, QAngle const&)
 T C_BasePlayer::CalculateVisionUsingCurrentFlags()
 T C_BasePlayer::CanSetSoundMixer()
 T C_BasePlayer::CanUseFirstPersonCommand()
 T C_BasePlayer::CreateMove(float, CUserCmd*)
 T C_BasePlayer::CreateWaterEffects()
 T C_BasePlayer::DetermineVguiInputMode(CUserCmd*)
 T C_BasePlayer::DoMuzzleFlash()
 T C_BasePlayer::DrawModel(int)
 T C_BasePlayer::DrawOverriddenViewmodel(C_BaseViewModel*, int)
 T C_BasePlayer::ExitLadder()
 T C_BasePlayer::EyeAngles()
 T C_BasePlayer::EyePosition()
 T C_BasePlayer::EyePositionAndVectors(Vector*, Vector*, Vector*, Vector*)
 T C_BasePlayer::EyeVectors(Vector*, Vector*, Vector*)
 T C_BasePlayer::FireGameEvent(IGameEvent*)
 T C_BasePlayer::FogControllerChanged(bool)
 T C_BasePlayer::ForceSetupBonesAtTimeFakeInterpolation(matrix3x4_t*, float)
 T C_BasePlayer::GetActiveWeapon() const
 T C_BasePlayer::GetActiveWeaponForSelection()
 T C_BasePlayer::GetAutoaimVector(float)
 T C_BasePlayer::GetChaseCamViewOffset(C_BaseEntity*)
 T C_BasePlayer::GetClientClass()
 T C_BasePlayer::GetDeathCamInterpolationTime()
 T C_BasePlayer::GetDefaultAnimSpeed()
 T C_BasePlayer::GetDefaultFOV() const
 T C_BasePlayer::GetFOV()
 T C_BasePlayer::GetFOVDistanceAdjustFactor()
 T C_BasePlayer::GetFallVelocity()
 T C_BasePlayer::GetFinalPredictedTime() const
 T C_BasePlayer::GetFootstepSurface(Vector const&, char const*)
 T C_BasePlayer::GetGroundSurface()
 T C_BasePlayer::GetHeadLabelMaterial()
 T C_BasePlayer::GetHealth() const
 T C_BasePlayer::GetLastWeapon()
 T C_BasePlayer::GetLocalPlayer()
 T C_BasePlayer::GetMinFOV() const
 T C_BasePlayer::GetObserverMode() const
 T C_BasePlayer::GetObserverTarget() const
 T C_BasePlayer::GetOverrideStepSound(char const*)
 T C_BasePlayer::GetPlayerMaxSpeed()
 T C_BasePlayer::GetPlayerMaxs() const
 T C_BasePlayer::GetPlayerMins() const
 T C_BasePlayer::GetPlayerName()
 T C_BasePlayer::GetPredDescMap()
 T C_BasePlayer::GetPredictionErrorSmoothingVector(Vector&)
 T C_BasePlayer::GetRagdollInitBoneArrays(matrix3x4_t*, matrix3x4_t*, matrix3x4_t*, float)
 T C_BasePlayer::GetRenderedWeaponModel()
 T C_BasePlayer::GetRepresentativeRagdoll() const
 T C_BasePlayer::GetSteamID(CSteamID*)
 T C_BasePlayer::GetStepSoundVelocities(float*, float*)
 T C_BasePlayer::GetTimeBase() const
 T C_BasePlayer::GetToolRecordingState(KeyValues*)
 T C_BasePlayer::GetTracerType()
 T C_BasePlayer::GetViewModel(int, bool)
 T C_BasePlayer::GetVisionFilterFlags(bool)
 T C_BasePlayer::Hints()
 T C_BasePlayer::InFirstPersonView()
 T C_BasePlayer::IsAllowedToSwitchWeapons()
 T C_BasePlayer::IsDucked() const
 T C_BasePlayer::IsDucking() const
 T C_BasePlayer::IsInVGuiInputMode() const
 T C_BasePlayer::IsInViewModelVGuiInputMode() const
 T C_BasePlayer::IsLocalPlayer() const
 T C_BasePlayer::IsOverridingViewmodel()
 T C_BasePlayer::IsPlayer() const
 T C_BasePlayer::IsPlayerDead()
 T C_BasePlayer::IsUseableEntity(C_BaseEntity*, unsigned int)
 T C_BasePlayer::IsZoomed()
 T C_BasePlayer::ItemPostFrame()
 T C_BasePlayer::ItemPreFrame()
 T C_BasePlayer::LocalEyeAngles()
 T C_BasePlayer::LocalPlayerInFirstPersonView()
 T C_BasePlayer::MakeTracer(Vector const&, CGameTrace const&, int)
 T C_BasePlayer::NetworkVar_m_Local::NetworkStateChanged()
 T C_BasePlayer::NetworkVar_m_Local::NetworkStateChanged(void*)
 T C_BasePlayer::NotePredictionError(Vector const&)
 T C_BasePlayer::OnAchievementAchieved(int)
 T C_BasePlayer::OnDataChanged(DataUpdateType_t)
 T C_BasePlayer::OnEmitFootstepSound(CSoundParameters const&, Vector const&, float)
 T C_BasePlayer::OnPreDataChanged(DataUpdateType_t)
 T C_BasePlayer::OnRestore()
 T C_BasePlayer::OverrideView(CViewSetup*)
 T C_BasePlayer::PhysicsSimulate()
 T C_BasePlayer::PhysicsSolidMaskForEntity() const
 T C_BasePlayer::PlayPlayerJingle()
 T C_BasePlayer::PlayStepSound(Vector&, surfacedata_t*, float, bool)
 T C_BasePlayer::PlayerUse()
 T C_BasePlayer::PostDataUpdate(DataUpdateType_t)
 T C_BasePlayer::PostThink()
 T C_BasePlayer::PreDataUpdate(DataUpdateType_t)
 T C_BasePlayer::PreThink()
 T C_BasePlayer::ReceiveMessage(int, bf_read&)
 T C_BasePlayer::RemoveFromPlayerSimulationList(C_BaseEntity*)
 T C_BasePlayer::ResetAutoaim()
 T C_BasePlayer::ResetObserverMode()
 T C_BasePlayer::SelectItem(char const*, int)
 T C_BasePlayer::SelectLastItem()
 T C_BasePlayer::SetAnimation(PLAYER_ANIM)
 T C_BasePlayer::SetAnimationExtension(char const*)
 T C_BasePlayer::SetLocalViewAngles(QAngle const&)
 T C_BasePlayer::SetObserverTarget(CHandle<C_BaseEntity>)
 T C_BasePlayer::SetPlayerUnderwater(bool)
 T C_BasePlayer::SetStepSoundTime(stepsoundtimes_t, bool)
 T C_BasePlayer::SetSuitUpdate(char const*, int, int)
 T C_BasePlayer::SetVehicleRole(int)
 T C_BasePlayer::SetViewAngles(QAngle const&)
 T C_BasePlayer::ShadowCastType()
 T C_BasePlayer::SharedSpawn()
 T C_BasePlayer::ShouldDraw()
 T C_BasePlayer::ShouldDrawLocalPlayer()
 T C_BasePlayer::ShouldDrawThisPlayer()
 T C_BasePlayer::ShouldInterpolate()
 T C_BasePlayer::ShouldPredict()
 T C_BasePlayer::ShouldReceiveProjectedTextures(int)
 T C_BasePlayer::Simulate()
 T C_BasePlayer::SimulatePlayerSimulatedEntities()
 T C_BasePlayer::SmoothViewOnStairs(Vector&)
 T C_BasePlayer::Spawn()
 T C_BasePlayer::TeamChange(int)
 T C_BasePlayer::ThirdPersonSwitch(bool)
 T C_BasePlayer::UpdateButtonState(int)
 T C_BasePlayer::UpdateClientData()
 T C_BasePlayer::UpdateFlashlight()
 T C_BasePlayer::UpdateFogBlend()
 T C_BasePlayer::UpdateFogController()
 T C_BasePlayer::UpdateStepSound(surfacedata_t*, Vector const&, Vector const&)
 T C_BasePlayer::UpdateUnderwaterState()
 T C_BasePlayer::UsingStandardWeaponsInVehicle()
 T C_BasePlayer::ViewModel_IsTransparent()
 T C_BasePlayer::ViewModel_IsUsingFBTexture()
 T C_BasePlayer::ViewPunch(QAngle const&)
 T C_BasePlayer::Weapon_DropPrimary()
 T C_BasePlayer::Weapon_SetLast(C_BaseCombatWeapon*)
 T C_BasePlayer::Weapon_SetLastPending(C_BaseCombatWeapon*)
 T C_BasePlayer::Weapon_ShootPosition()
 T C_BasePlayer::Weapon_ShouldSelectItem(C_BaseCombatWeapon*)
 T C_BasePlayer::Weapon_ShouldSetLast(C_BaseCombatWeapon*, C_BaseCombatWeapon*)
 T C_BasePlayer::Weapon_Switch(C_BaseCombatWeapon*, int)
 T C_BasePlayer::YouForgotToImplementOrDeclareClientClass()
 T C_BasePlayer::~C_BasePlayer()
 T C_BaseProjectile::C_BaseProjectile()
 T C_BaseProjectile::Destroy(bool, bool)
 T C_BaseProjectile::GetClientClass()
 T C_BaseProjectile::IsDestroyable()
 T C_BaseProjectile::YouForgotToImplementOrDeclareClientClass()
 T C_BaseProjectile::~C_BaseProjectile()
 T C_BasePropDoor::GetClientClass()
 T C_BasePropDoor::OnDataChanged(DataUpdateType_t)
 T C_BasePropDoor::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T C_BasePropDoor::YouForgotToImplementOrDeclareClientClass()
 T C_BasePropDoor::~C_BasePropDoor()
 T C_BaseTeamObjectiveResource::C_BaseTeamObjectiveResource()
 T C_BaseTeamObjectiveResource::ClientThink()
 T C_BaseTeamObjectiveResource::GetClientClass()
 T C_BaseTeamObjectiveResource::GetGameSpecificCPBarBG(int, int)
 T C_BaseTeamObjectiveResource::GetGameSpecificCPBarFG(int, int)
 T C_BaseTeamObjectiveResource::GetGameSpecificCPCappingSwipe(int, int)
 T C_BaseTeamObjectiveResource::OnDataChanged(DataUpdateType_t)
 T C_BaseTeamObjectiveResource::OnPreDataChanged(DataUpdateType_t)
 T C_BaseTeamObjectiveResource::SetCappingTeam(int, int)
 T C_BaseTeamObjectiveResource::YouForgotToImplementOrDeclareClientClass()
 T C_BaseTeamObjectiveResource::~C_BaseTeamObjectiveResource()
 T C_BaseTempEntity::C_BaseTempEntity()
 T C_BaseTempEntity::CheckDynamicTempEnts()
 T C_BaseTempEntity::ClearDynamicTempEnts()
 T C_BaseTempEntity::GetBaseEntity()
 T C_BaseTempEntity::GetClientClass()
 T C_BaseTempEntity::GetClientNetworkable()
 T C_BaseTempEntity::GetClientRenderable()
 T C_BaseTempEntity::GetClientThinkable()
 T C_BaseTempEntity::GetCollideable()
 T C_BaseTempEntity::GetDataTableBasePtr()
 T C_BaseTempEntity::GetIClientEntity()
 T C_BaseTempEntity::GetIClientUnknown()
 T C_BaseTempEntity::GetRefEHandle() const
 T C_BaseTempEntity::Init(int, int)
 T C_BaseTempEntity::IsDormant()
 T C_BaseTempEntity::NotifyShouldTransmit(ShouldTransmitState_t)
 T C_BaseTempEntity::OnDataChanged(DataUpdateType_t)
 T C_BaseTempEntity::OnPreDataChanged(DataUpdateType_t)
 T C_BaseTempEntity::PostDataUpdate(DataUpdateType_t)
 T C_BaseTempEntity::PreDataUpdate(DataUpdateType_t)
 T C_BaseTempEntity::Precache()
 T C_BaseTempEntity::PrecacheTempEnts()
 T C_BaseTempEntity::ReceiveMessage(int, bf_read&)
 T C_BaseTempEntity::Release()
 T C_BaseTempEntity::SetDestroyedOnRecreateEntities()
 T C_BaseTempEntity::SetDormant(bool)
 T C_BaseTempEntity::SetRefEHandle(CBaseHandle const&)
 T C_BaseTempEntity::ShouldDestroy()
 T C_BaseTempEntity::ShouldReceiveProjectedTextures(int)
 T C_BaseTempEntity::YouForgotToImplementOrDeclareClientClass()
 T C_BaseTempEntity::entindex() const
 T C_BaseTempEntity::~C_BaseTempEntity()
 T C_BaseViewModel::AddEffects(int)
 T C_BaseViewModel::AddEntity()
 T C_BaseViewModel::AddViewModelBob(C_BasePlayer*, Vector&, QAngle&)
 T C_BaseViewModel::ApplyBoneMatrixTransform(matrix3x4_t&)
 T C_BaseViewModel::C_BaseViewModel()
 T C_BaseViewModel::CalcViewModelLag(Vector&, QAngle&, QAngle&)
 T C_BaseViewModel::CalcViewModelView(C_BasePlayer*, Vector const&, QAngle const&)
 T C_BaseViewModel::DrawModel(int)
 T C_BaseViewModel::FireEvent(Vector const&, QAngle const&, int, char const*)
 T C_BaseViewModel::FormatViewModelAttachment(int, matrix3x4_t&)
 T C_BaseViewModel::GetAttachment(int, Vector&)
 T C_BaseViewModel::GetAttachment(int, Vector&, QAngle&)
 T C_BaseViewModel::GetAttachment(int, matrix3x4_t&)
 T C_BaseViewModel::GetAttachmentVelocity(int, Vector&, Quaternion&)
 T C_BaseViewModel::GetBoneControllers(float*)
 T C_BaseViewModel::GetClientClass()
 T C_BaseViewModel::GetFxBlend()
 T C_BaseViewModel::GetOwner()
 T C_BaseViewModel::GetOwnerViaInterface()
 T C_BaseViewModel::GetOwningWeapon()
 T C_BaseViewModel::GetPredDescMap()
 T C_BaseViewModel::GetRenderGroup()
 T C_BaseViewModel::InternalDrawModel(int)
 T C_BaseViewModel::Interpolate(float)
 T C_BaseViewModel::IsSelfAnimating()
 T C_BaseViewModel::IsTransparent()
 T C_BaseViewModel::IsViewModel() const
 T C_BaseViewModel::LookupAttachment(char const*)
 T C_BaseViewModel::OnDataChanged(DataUpdateType_t)
 T C_BaseViewModel::PostDataUpdate(DataUpdateType_t)
 T C_BaseViewModel::Precache()
 T C_BaseViewModel::RemoveEffects(int)
 T C_BaseViewModel::SendViewModelMatchingSequence(int)
 T C_BaseViewModel::SetWeaponModel(char const*, C_BaseCombatWeapon*)
 T C_BaseViewModel::ShadowCastType()
 T C_BaseViewModel::ShouldDraw()
 T C_BaseViewModel::ShouldReceiveProjectedTextures(int)
 T C_BaseViewModel::ShouldResetSequenceOnNewModel()
 T C_BaseViewModel::Spawn()
 T C_BaseViewModel::UncorrectViewModelAttachment(Vector&)
 T C_BaseViewModel::UpdateAnimationParity()
 T C_BaseViewModel::UpdateOnRemove()
 T C_BaseViewModel::UsesPowerOfTwoFrameBufferTexture()
 T C_BaseViewModel::YouForgotToImplementOrDeclareClientClass()
 T C_BaseViewModel::~C_BaseViewModel()
 T C_Beam::AddEntity()
 T C_Beam::C_Beam()
 T C_Beam::ComputeBounds(Vector&, Vector&)
 T C_Beam::DrawDebugTextOverlays()
 T C_Beam::DrawModel(int)
 T C_Beam::GetAbsEndPos() const
 T C_Beam::GetAbsStartPos() const
 T C_Beam::GetBeamFlags() const
 T C_Beam::GetClientClass()
 T C_Beam::GetDecalName()
 T C_Beam::GetPredDescMap()
 T C_Beam::GetType() const
 T C_Beam::IgnoresZBuffer() const
 T C_Beam::IsTransparent()
 T C_Beam::OnDataChanged(DataUpdateType_t)
 T C_Beam::OnPredictedEntityRemove(bool, C_BaseEntity*)
 T C_Beam::Precache()
 T C_Beam::RelinkBeam()
 T C_Beam::SetModel(char const*)
 T C_Beam::ShouldDraw()
 T C_Beam::ShouldReceiveProjectedTextures(int)
 T C_Beam::Spawn()
 T C_Beam::WorldSpaceCenter() const
 T C_Beam::YouForgotToImplementOrDeclareClientClass()
 T C_Beam::~C_Beam()
 T C_BoneFollower::DrawModel(int)
 T C_BoneFollower::GetClientClass()
 T C_BoneFollower::ShouldDraw()
 T C_BoneFollower::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T C_BoneFollower::YouForgotToImplementOrDeclareClientClass()
 T C_BoneFollower::~C_BoneFollower()
 T C_BreakableProp::C_BreakableProp()
 T C_BreakableProp::CopyFadeFrom(C_BreakableProp*)
 T C_BreakableProp::GetClientClass()
 T C_BreakableProp::SetFadeMinMax(float, float)
 T C_BreakableProp::YouForgotToImplementOrDeclareClientClass()
 T C_BreakableProp::~C_BreakableProp()
 T C_BreakableSurface::AddToRenderList(int, int, WinSide_t, WinEdge_t, int)
 T C_BreakableSurface::C_BreakableSurface()
 T C_BreakableSurface::DrawModel(int)
 T C_BreakableSurface::DrawOneBlock(IBrushSurface*, IMesh*, CMeshBuilder*, Vector const&, Vector const&, Vector const&)
 T C_BreakableSurface::DrawOneEdge(IBrushSurface*, IMesh*, CMeshBuilder*, Vector const&, Vector const&, Vector const&, WinSide_t)
 T C_BreakableSurface::DrawOneHighlight(IBrushSurface*, IMesh*, CMeshBuilder*, Vector const&, Vector const&, Vector const&, WinSide_t)
 T C_BreakableSurface::DrawRenderList(IBrushSurface*)
 T C_BreakableSurface::DrawRenderListHighlights(IBrushSurface*)
 T C_BreakableSurface::DrawSolidBlocks(IBrushSurface*)
 T C_BreakableSurface::FindCrackedMaterial()
 T C_BreakableSurface::GetClientClass()
 T C_BreakableSurface::GetDataDescMap()
 T C_BreakableSurface::IsTransparent()
 T C_BreakableSurface::OnDataChanged(DataUpdateType_t)
 T C_BreakableSurface::OnPreDataChanged(DataUpdateType_t)
 T C_BreakableSurface::OnRestore()
 T C_BreakableSurface::RenderBrushModelSurface(IClientEntity*, IBrushSurface*)
 T C_BreakableSurface::ShouldReceiveProjectedTextures(int)
 T C_BreakableSurface::UpdateEdgeType(int, int, int)
 T C_BreakableSurface::YouForgotToImplementOrDeclareClientClass()
 T C_BreakableSurface::~C_BreakableSurface()
 T C_CitadelEnergyCore::ClientThink()
 T C_CitadelEnergyCore::GetClientClass()
 T C_CitadelEnergyCore::GetRenderGroup()
 T C_CitadelEnergyCore::NotifyShouldTransmit(ShouldTransmitState_t)
 T C_CitadelEnergyCore::OnDataChanged(DataUpdateType_t)
 T C_CitadelEnergyCore::SetupEmitters()
 T C_CitadelEnergyCore::UpdateCharging(float)
 T C_CitadelEnergyCore::UpdateDischarging()
 T C_CitadelEnergyCore::UpdateIdle(float)
 T C_CitadelEnergyCore::YouForgotToImplementOrDeclareClientClass()
 T C_CitadelEnergyCore::~C_CitadelEnergyCore()
 T C_ClientRagdoll::C_ClientRagdoll(bool)
 T C_ClientRagdoll::ClientThink()
 T C_ClientRagdoll::FadeOut()
 T C_ClientRagdoll::GetDataDescMap()
 T C_ClientRagdoll::GetPVSNotifyInterface()
 T C_ClientRagdoll::HandleAnimatedFriction()
 T C_ClientRagdoll::ImpactTrace(CGameTrace*, int, char const*)
 T C_ClientRagdoll::LastBoneChangedTime()
 T C_ClientRagdoll::ObjectCaps()
 T C_ClientRagdoll::OnPVSStatusChanged(bool)
 T C_ClientRagdoll::OnRestore()
 T C_ClientRagdoll::OnSave()
 T C_ClientRagdoll::Release()
 T C_ClientRagdoll::SUB_Remove()
 T C_ClientRagdoll::SetupWeights(matrix3x4_t const*, int, float*, float*)
 T C_ClientRagdoll::ShouldSavePhysics()
 T C_ClientRagdoll::~C_ClientRagdoll()
 T C_ColorCorrection::ClientThink()
 T C_ColorCorrection::GetClientClass()
 T C_ColorCorrection::OnDataChanged(DataUpdateType_t)
 T C_ColorCorrection::ShouldDraw()
 T C_ColorCorrection::YouForgotToImplementOrDeclareClientClass()
 T C_ColorCorrection::~C_ColorCorrection()
 T C_ColorCorrectionVolume::ClientThink()
 T C_ColorCorrectionVolume::GetClientClass()
 T C_ColorCorrectionVolume::GetPredDescMap()
 T C_ColorCorrectionVolume::OnDataChanged(DataUpdateType_t)
 T C_ColorCorrectionVolume::ShouldDraw()
 T C_ColorCorrectionVolume::YouForgotToImplementOrDeclareClientClass()
 T C_ColorCorrectionVolume::~C_ColorCorrectionVolume()
 T C_CombineGunship::GetClientClass()
 T C_CombineGunship::GetRenderGroup()
 T C_CombineGunship::OnDataChanged(DataUpdateType_t)
 T C_CombineGunship::ReceiveMessage(int, bf_read&)
 T C_CombineGunship::YouForgotToImplementOrDeclareClientClass()
 T C_CombineGunship::~C_CombineGunship()
 T C_Corpse::DrawModel(int)
 T C_Corpse::GetClientClass()
 T C_Corpse::YouForgotToImplementOrDeclareClientClass()
 T C_Corpse::~C_Corpse()
 T C_CrossbowBolt::ClientThink()
 T C_CrossbowBolt::DrawModel(int)
 T C_CrossbowBolt::GetClientClass()
 T C_CrossbowBolt::GetRenderGroup()
 T C_CrossbowBolt::OnDataChanged(DataUpdateType_t)
 T C_CrossbowBolt::YouForgotToImplementOrDeclareClientClass()
 T C_CrossbowBolt::~C_CrossbowBolt()
 T C_DustTrail::CleanupToolRecordingState(KeyValues*)
 T C_DustTrail::GetClientClass()
 T C_DustTrail::OnDataChanged(DataUpdateType_t)
 T C_DustTrail::RenderParticles(CParticleRenderIterator*)
 T C_DustTrail::SimulateParticles(CParticleSimulateIterator*)
 T C_DustTrail::Start(CParticleMgr*, IPrototypeArgAccess*)
 T C_DustTrail::Update(float)
 T C_DustTrail::YouForgotToImplementOrDeclareClientClass()
 T C_DustTrail::~C_DustTrail()
 T C_DynamicLight::ClientThink()
 T C_DynamicLight::GetClientClass()
 T C_DynamicLight::OnDataChanged(DataUpdateType_t)
 T C_DynamicLight::Release()
 T C_DynamicLight::ShouldDraw()
 T C_DynamicLight::YouForgotToImplementOrDeclareClientClass()
 T C_DynamicLight::~C_DynamicLight()
 T C_DynamicProp::C_DynamicProp()
 T C_DynamicProp::ComputeClientSideAnimationFlags()
 T C_DynamicProp::GetClientClass()
 T C_DynamicProp::GetRenderBounds(Vector&, Vector&)
 T C_DynamicProp::TestBoneFollowers(Ray_t const&, unsigned int, CGameTrace&)
 T C_DynamicProp::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T C_DynamicProp::YouForgotToImplementOrDeclareClientClass()
 T C_DynamicProp::~C_DynamicProp()
 T C_Embers::AddEntity()
 T C_Embers::C_Embers()
 T C_Embers::GetClientClass()
 T C_Embers::OnDataChanged(DataUpdateType_t)
 T C_Embers::ShouldDraw()
 T C_Embers::SpawnEmber()
 T C_Embers::YouForgotToImplementOrDeclareClientClass()
 T C_Embers::~C_Embers()
 T C_EntityClassList<C_FuncReflectiveGlass>::LevelShutdown()
 T C_EntityClassList<C_FuncReflectiveGlass>::~C_EntityClassList()
 T C_EntityClassList<C_PointCamera>::LevelShutdown()
 T C_EntityClassList<C_PointCamera>::~C_EntityClassList()
 T C_EntityDissolve::BuildTeslaEffect(mstudiobbox_t*, matrix3x4_t const&, bool, float)
 T C_EntityDissolve::C_EntityDissolve()
 T C_EntityDissolve::ClientThink()
 T C_EntityDissolve::ComputeRenderInfo(mstudiobbox_t*, matrix3x4_t const&, Vector*, Vector*, Vector*)
 T C_EntityDissolve::DoSparks(mstudiohitboxset_t*, matrix3x4_t**)
 T C_EntityDissolve::DrawModel(int)
 T C_EntityDissolve::GetClientClass()
 T C_EntityDissolve::GetEffectColor()
 T C_EntityDissolve::GetRenderBounds(Vector&, Vector&)
 T C_EntityDissolve::OnDataChanged(DataUpdateType_t)
 T C_EntityDissolve::SetEffectColor(Vector)
 T C_EntityDissolve::SetupEmitter()
 T C_EntityDissolve::ShouldDraw()
 T C_EntityDissolve::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T C_EntityDissolve::UpdateOnRemove()
 T C_EntityDissolve::YouForgotToImplementOrDeclareClientClass()
 T C_EntityDissolve::~C_EntityDissolve()
 T C_EntityFlame::C_EntityFlame()
 T C_EntityFlame::ClientThink()
 T C_EntityFlame::CreateEffect()
 T C_EntityFlame::GetClientClass()
 T C_EntityFlame::OnDataChanged(DataUpdateType_t)
 T C_EntityFlame::Simulate()
 T C_EntityFlame::StopEffect()
 T C_EntityFlame::UpdateOnRemove()
 T C_EntityFlame::YouForgotToImplementOrDeclareClientClass()
 T C_EntityFlame::~C_EntityFlame()
 T C_EntityParticleTrail::AddParticle(float, Vector const&, Vector const&, matrix3x4_t const&)
 T C_EntityParticleTrail::GetClientClass()
 T C_EntityParticleTrail::OnDataChanged(DataUpdateType_t)
 T C_EntityParticleTrail::RenderParticles(CParticleRenderIterator*)
 T C_EntityParticleTrail::SimulateParticles(CParticleSimulateIterator*)
 T C_EntityParticleTrail::Update(float)
 T C_EntityParticleTrail::YouForgotToImplementOrDeclareClientClass()
 T C_EntityParticleTrail::~C_EntityParticleTrail()
 T C_EnvDetailController::GetClientClass()
 T C_EnvDetailController::UpdateTransmitState()
 T C_EnvDetailController::YouForgotToImplementOrDeclareClientClass()
 T C_EnvDetailController::~C_EnvDetailController()
 T C_EnvHeadcrabCanister::ClientThink()
 T C_EnvHeadcrabCanister::GetClientClass()
 T C_EnvHeadcrabCanister::OnDataChanged(DataUpdateType_t)
 T C_EnvHeadcrabCanister::YouForgotToImplementOrDeclareClientClass()
 T C_EnvHeadcrabCanister::~C_EnvHeadcrabCanister()
 T C_EnvParticleScript::CreateParticle(char const*, char const*)
 T C_EnvParticleScript::DestroyAllParticles()
 T C_EnvParticleScript::DestroyAllParticles(char const*)
 T C_EnvParticleScript::DrawModel(int)
 T C_EnvParticleScript::FireEvent(Vector const&, QAngle const&, int, char const*)
 T C_EnvParticleScript::GetClientClass()
 T C_EnvParticleScript::GetFxBlend()
 T C_EnvParticleScript::GetSortOrigin()
 T C_EnvParticleScript::OnDataChanged(DataUpdateType_t)
 T C_EnvParticleScript::OnPreDataChanged(DataUpdateType_t)
 T C_EnvParticleScript::RenderParticles(CParticleRenderIterator*)
 T C_EnvParticleScript::SetShouldSimulate(bool)
 T C_EnvParticleScript::ShouldDraw()
 T C_EnvParticleScript::ShouldSimulate() const
 T C_EnvParticleScript::SimulateParticles(CParticleSimulateIterator*)
 T C_EnvParticleScript::YouForgotToImplementOrDeclareClientClass()
 T C_EnvParticleScript::~C_EnvParticleScript()
 T C_EnvParticleScript_Factory()
 T C_EnvProjectedTexture::GetClientClass()
 T C_EnvProjectedTexture::OnDataChanged(DataUpdateType_t)
 T C_EnvProjectedTexture::Simulate()
 T C_EnvProjectedTexture::UpdateLight(bool)
 T C_EnvProjectedTexture::YouForgotToImplementOrDeclareClientClass()
 T C_EnvProjectedTexture::~C_EnvProjectedTexture()
 T C_EnvScreenEffect::GetClientClass()
 T C_EnvScreenEffect::ReceiveMessage(int, bf_read&)
 T C_EnvScreenEffect::YouForgotToImplementOrDeclareClientClass()
 T C_EnvScreenEffect::~C_EnvScreenEffect()
 T C_EnvScreenOverlay::ClientThink()
 T C_EnvScreenOverlay::GetClientClass()
 T C_EnvScreenOverlay::PostDataUpdate(DataUpdateType_t)
 T C_EnvScreenOverlay::PreDataUpdate(DataUpdateType_t)
 T C_EnvScreenOverlay::StartCurrentOverlay()
 T C_EnvScreenOverlay::YouForgotToImplementOrDeclareClientClass()
 T C_EnvScreenOverlay::~C_EnvScreenOverlay()
 T C_EnvStarfield::ClientThink()
 T C_EnvStarfield::GetClientClass()
 T C_EnvStarfield::OnDataChanged(DataUpdateType_t)
 T C_EnvStarfield::YouForgotToImplementOrDeclareClientClass()
 T C_EnvStarfield::~C_EnvStarfield()
 T C_EnvTonemapController::GetClientClass()
 T C_EnvTonemapController::OnDataChanged(DataUpdateType_t)
 T C_EnvTonemapController::YouForgotToImplementOrDeclareClientClass()
 T C_EnvTonemapController::~C_EnvTonemapController()
 T C_EnvWind::ClientThink()
 T C_EnvWind::GetClientClass()
 T C_EnvWind::OnDataChanged(DataUpdateType_t)
 T C_EnvWind::ShouldDraw()
 T C_EnvWind::YouForgotToImplementOrDeclareClientClass()
 T C_EnvWind::~C_EnvWind()
 T C_EnvelopeFX::C_EnvelopeFX()
 T C_EnvelopeFX::EffectInit(int, int)
 T C_EnvelopeFX::EffectShutdown()
 T C_EnvelopeFX::GetRenderAngles()
 T C_EnvelopeFX::GetRenderOrigin()
 T C_EnvelopeFX::IsTransparent()
 T C_EnvelopeFX::RenderableToWorldTransform()
 T C_EnvelopeFX::SetRenderOrigin(Vector const&)
 T C_EnvelopeFX::ShouldDraw()
 T C_EnvelopeFX::ShouldReceiveProjectedTextures(int)
 T C_EnvelopeFX::Update()
 T C_EnvelopeFX::~C_EnvelopeFX()
 T C_FireFromAboveSprite::DrawModel(int)
 T C_FireFromAboveSprite::~C_FireFromAboveSprite()
 T C_FireSmoke::C_FireSmoke()
 T C_FireSmoke::GetClientClass()
 T C_FireSmoke::OnDataChanged(DataUpdateType_t)
 T C_FireSmoke::ShouldDraw()
 T C_FireSmoke::Simulate()
 T C_FireSmoke::YouForgotToImplementOrDeclareClientClass()
 T C_FireSmoke::~C_FireSmoke()
 T C_FireSprite::DrawModel(int)
 T C_FireSprite::~C_FireSprite()
 T C_FireTrail::GetClientClass()
 T C_FireTrail::Start(CParticleMgr*, IPrototypeArgAccess*)
 T C_FireTrail::Update(float)
 T C_FireTrail::YouForgotToImplementOrDeclareClientClass()
 T C_FireTrail::~C_FireTrail()
 T C_Fish::ClientThink()
 T C_Fish::GetClientClass()
 T C_Fish::OnDataChanged(DataUpdateType_t)
 T C_Fish::Spawn()
 T C_Fish::YouForgotToImplementOrDeclareClientClass()
 T C_Fish::~C_Fish()
 T C_Flare::C_Flare()
 T C_Flare::GetClientClass()
 T C_Flare::NotifyDestroyParticle(Particle*)
 T C_Flare::NotifyShouldTransmit(ShouldTransmitState_t)
 T C_Flare::OnDataChanged(DataUpdateType_t)
 T C_Flare::RestoreResources()
 T C_Flare::Update(float)
 T C_Flare::YouForgotToImplementOrDeclareClientClass()
 T C_Flare::~C_Flare()
 T C_Flaregun::GetClientClass()
 T C_Flaregun::GetPredDescMap()
 T C_Flaregun::YouForgotToImplementOrDeclareClientClass()
 T C_Flaregun::~C_Flaregun()
 T C_FogController::GetClientClass()
 T C_FogController::YouForgotToImplementOrDeclareClientClass()
 T C_FogController::~C_FogController()
 T C_FuncAreaPortalWindow::ComputeFxBlend()
 T C_FuncAreaPortalWindow::DrawModel(int)
 T C_FuncAreaPortalWindow::GetClientClass()
 T C_FuncAreaPortalWindow::GetDistanceBlend()
 T C_FuncAreaPortalWindow::IsTransparent()
 T C_FuncAreaPortalWindow::ShouldReceiveProjectedTextures(int)
 T C_FuncAreaPortalWindow::YouForgotToImplementOrDeclareClientClass()
 T C_FuncAreaPortalWindow::~C_FuncAreaPortalWindow()
 T C_FuncConveyor::GetClientClass()
 T C_FuncConveyor::YouForgotToImplementOrDeclareClientClass()
 T C_FuncConveyor::~C_FuncConveyor()
 T C_FuncLadder::Activate()
 T C_FuncLadder::ComputeLadderDir(Vector&)
 T C_FuncLadder::DrawDebugGeometryOverlays()
 T C_FuncLadder::GetBottomPosition(Vector&)
 T C_FuncLadder::GetClientClass()
 T C_FuncLadder::GetDataDescMap()
 T C_FuncLadder::GetLadder(int)
 T C_FuncLadder::GetLadderCount()
 T C_FuncLadder::GetTopPosition(Vector&)
 T C_FuncLadder::PlayerGotOff(C_BasePlayer*)
 T C_FuncLadder::SetEndPoints(Vector const&, Vector const&)
 T C_FuncLadder::Spawn()
 T C_FuncLadder::YouForgotToImplementOrDeclareClientClass()
 T C_FuncLadder::~C_FuncLadder()
 T C_FuncMonitor::GetClientClass()
 T C_FuncMonitor::ShouldDraw()
 T C_FuncMonitor::YouForgotToImplementOrDeclareClientClass()
 T C_FuncMonitor::~C_FuncMonitor()
 T C_FuncOccluder::DrawModel(int)
 T C_FuncOccluder::GetClientClass()
 T C_FuncOccluder::OnDataChanged(DataUpdateType_t)
 T C_FuncOccluder::ShouldDraw()
 T C_FuncOccluder::YouForgotToImplementOrDeclareClientClass()
 T C_FuncOccluder::~C_FuncOccluder()
 T C_FuncPhysicsRespawnZone::CanMovePropAt(Vector, Vector const&, Vector const&)
 T C_FuncPhysicsRespawnZone::ClientThink()
 T C_FuncPhysicsRespawnZone::Initialize()
 T C_FuncPhysicsRespawnZone::InitializePropsWithin()
 T C_FuncPhysicsRespawnZone::KeyValue(char const*, char const*)
 T C_FuncPhysicsRespawnZone::RespawnProps()
 T C_FuncPhysicsRespawnZone::~C_FuncPhysicsRespawnZone()
 T C_FuncReflectiveGlass::GetClientClass()
 T C_FuncReflectiveGlass::ShouldDraw()
 T C_FuncReflectiveGlass::YouForgotToImplementOrDeclareClientClass()
 T C_FuncReflectiveGlass::~C_FuncReflectiveGlass()
 T C_FuncRotating::GetClientClass()
 T C_FuncRotating::YouForgotToImplementOrDeclareClientClass()
 T C_FuncRotating::~C_FuncRotating()
 T C_FuncSmokeVolume::FillVolume()
 T C_FuncSmokeVolume::GetClientClass()
 T C_FuncSmokeVolume::NotifyRemove()
 T C_FuncSmokeVolume::OnDataChanged(DataUpdateType_t)
 T C_FuncSmokeVolume::RenderParticles(CParticleRenderIterator*)
 T C_FuncSmokeVolume::SimulateParticles(CParticleSimulateIterator*)
 T C_FuncSmokeVolume::Start(CParticleMgr*, IPrototypeArgAccess*)
 T C_FuncSmokeVolume::Update(float)
 T C_FuncSmokeVolume::YouForgotToImplementOrDeclareClientClass()
 T C_FuncSmokeVolume::~C_FuncSmokeVolume()
 T C_FuncTrackTrain::GetClientClass()
 T C_FuncTrackTrain::GetSoundSpatialization(SpatializationInfo_t&)
 T C_FuncTrackTrain::IsBaseTrain() const
 T C_FuncTrackTrain::OnDataChanged(DataUpdateType_t)
 T C_FuncTrackTrain::YouForgotToImplementOrDeclareClientClass()
 T C_FuncTrackTrain::~C_FuncTrackTrain()
 T C_Func_Dust::AttemptSpawnNewParticle()
 T C_Func_Dust::C_Func_Dust()
 T C_Func_Dust::ClientThink()
 T C_Func_Dust::GetClientClass()
 T C_Func_Dust::OnDataChanged(DataUpdateType_t)
 T C_Func_Dust::ShouldDraw()
 T C_Func_Dust::YouForgotToImplementOrDeclareClientClass()
 T C_Func_Dust::~C_Func_Dust()
 T C_Func_LOD::GetClientClass()
 T C_Func_LOD::GetClientSideFade()
 T C_Func_LOD::YouForgotToImplementOrDeclareClientClass()
 T C_Func_LOD::~C_Func_LOD()
 T C_GameRules::AllowMapParticleEffect(char const*)
 T C_GameRules::AllowMapVisionFilterShaders()
 T C_GameRules::AllowThirdPersonCamera()
 T C_GameRules::AllowWeatherParticles()
 T C_GameRules::C_GameRules()
 T C_GameRules::ClientCommandKeyValues(edict_t*, KeyValues*)
 T C_GameRules::ClientSpawned(edict_t*)
 T C_GameRules::DefaultFOV()
 T C_GameRules::GetAmmoDamage(C_BaseEntity*, C_BaseEntity*, int)
 T C_GameRules::GetDamageMultiplier()
 T C_GameRules::GetEncryptionKey()
 T C_GameRules::GetGameType()
 T C_GameRules::GetGameTypeName()
 T C_GameRules::GetNextBestWeapon(C_BaseCombatCharacter*, C_BaseCombatWeapon*)
 T C_GameRules::GetViewVectors() const
 T C_GameRules::InRoundRestart()
 T C_GameRules::IsBonusChallengeTimeBased()
 T C_GameRules::IsConnectedUserInfoChangeAllowed(C_BasePlayer*)
 T C_GameRules::IsHolidayActive(int) const
 T C_GameRules::IsLocalPlayer(int)
 T C_GameRules::ModifySentChat(char*, int)
 T C_GameRules::Name()
 T C_GameRules::OnFileReceived(char const*, unsigned int)
 T C_GameRules::ShouldCollide(int, int)
 T C_GameRules::ShouldDrawHeadLabels()
 T C_GameRules::ShouldWarnOfAbandonOnQuit()
 T C_GameRules::SwitchToNextBestWeapon(C_BaseCombatCharacter*, C_BaseCombatWeapon*)
 T C_GameRules::TranslateEffectForVisionFilter(char const*, char const*)
 T C_GameRules::~C_GameRules()
 T C_GameRulesProxy::C_GameRulesProxy()
 T C_GameRulesProxy::GetClientClass()
 T C_GameRulesProxy::NotifyNetworkStateChanged()
 T C_GameRulesProxy::ObjectCaps()
 T C_GameRulesProxy::UpdateTransmitState()
 T C_GameRulesProxy::YouForgotToImplementOrDeclareClientClass()
 T C_GameRulesProxy::~C_GameRulesProxy()
 T C_Gib::ClientThink()
 T C_Gib::HitSurface(C_BaseEntity*)
 T C_Gib::InitializeGib(char const*, Vector, Vector, Vector, float)
 T C_Gib::StartTouch(C_BaseEntity*)
 T C_Gib::~C_Gib()
 T C_GunshipFX::DrawModel(int)
 T C_GunshipFX::GetRenderBounds(Vector&, Vector&)
 T C_GunshipFX::~C_GunshipFX()
 T C_HL2PlayerLocalData::C_HL2PlayerLocalData()
 T C_HL2PlayerLocalData::GetPredDescMap()
 T C_HL2PlayerLocalData::NetworkStateChanged()
 T C_HL2PlayerLocalData::NetworkStateChanged(void*)
 T C_HLMachineGun::GetClientClass()
 T C_HLMachineGun::YouForgotToImplementOrDeclareClientClass()
 T C_HLMachineGun::~C_HLMachineGun()
 T C_HLSelectFireMachineGun::GetClientClass()
 T C_HLSelectFireMachineGun::YouForgotToImplementOrDeclareClientClass()
 T C_HLSelectFireMachineGun::~C_HLSelectFireMachineGun()
 T C_HLTVCamera::CalcChaseCamView(Vector&, QAngle&, float&)
 T C_HLTVCamera::CalcFixedView(Vector&, QAngle&, float&)
 T C_HLTVCamera::CalcInEyeCamView(Vector&, QAngle&, float&)
 T C_HLTVCamera::CalcRoamingView(Vector&, QAngle&, float&)
 T C_HLTVCamera::CalcView(Vector&, QAngle&, float&)
 T C_HLTVCamera::CreateMove(CUserCmd*)
 T C_HLTVCamera::FireGameEvent(IGameEvent*)
 T C_HLTVCamera::GetCameraMan()
 T C_HLTVCamera::GetMode()
 T C_HLTVCamera::GetPrimaryTarget()
 T C_HLTVCamera::Init()
 T C_HLTVCamera::IsPVSLocked()
 T C_HLTVCamera::PostEntityPacketReceived()
 T C_HLTVCamera::SetAutoDirector(bool)
 T C_HLTVCamera::SetMode(int)
 T C_HLTVCamera::SetPrimaryTarget(int)
 T C_HLTVCamera::SpecNamedPlayer(char const*)
 T C_HLTVCamera::SpecNextPlayer(bool)
 T C_HLTVCamera::ToggleChaseAsFirstPerson()
 T C_HLTVCamera::~C_HLTVCamera()
 T C_Hairball::CHairballDelegate::ApplyConstraints(CSimplePhysics::CNode*, int)
 T C_Hairball::CHairballDelegate::GetNodeForces(CSimplePhysics::CNode*, int, Vector*)
 T C_Hairball::C_Hairball()
 T C_Hairball::ClientThink()
 T C_Hairball::DrawModel(int)
 T C_Hairball::~C_Hairball()
 T C_HalfLife2::Damage_GetTimeBased()
 T C_HalfLife2::Damage_IsTimeBased(int)
 T C_HalfLife2::ShouldCollide(int, int)
 T C_HalfLife2::ShouldUseRobustRadiusDamage(C_BaseEntity*)
 T C_HalfLife2::~C_HalfLife2()
 T C_HalfLife2Proxy::GetClientClass()
 T C_HalfLife2Proxy::YouForgotToImplementOrDeclareClientClass()
 T C_HalfLife2Proxy::~C_HalfLife2Proxy()
 T C_HandleTest::GetClientClass()
 T C_HandleTest::OnDataChanged(DataUpdateType_t)
 T C_HandleTest::YouForgotToImplementOrDeclareClientClass()
 T C_HandleTest::~C_HandleTest()
 T C_INIT_AgeNoise::GetReadAttributes() const
 T C_INIT_AgeNoise::GetWrittenAttributes() const
 T C_INIT_AgeNoise::InitMultipleOverride()
 T C_INIT_AgeNoise::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_AgeNoise::~C_INIT_AgeNoise()
 T C_INIT_CreateAlongPath::GetReadAttributes() const
 T C_INIT_CreateAlongPath::GetReadControlPointMask() const
 T C_INIT_CreateAlongPath::GetWrittenAttributes() const
 T C_INIT_CreateAlongPath::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_CreateAlongPath::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_INIT_CreateAlongPath::~C_INIT_CreateAlongPath()
 T C_INIT_CreateFromParentParticles::GetReadAttributes() const
 T C_INIT_CreateFromParentParticles::GetRequiredContextBytes() const
 T C_INIT_CreateFromParentParticles::GetWrittenAttributes() const
 T C_INIT_CreateFromParentParticles::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_CreateFromParentParticles::InitializeContextData(CParticleCollection*, void*) const
 T C_INIT_CreateFromParentParticles::~C_INIT_CreateFromParentParticles()
 T C_INIT_CreateFromPlaneCache::GetReadAttributes() const
 T C_INIT_CreateFromPlaneCache::GetRequiredContextBytes() const
 T C_INIT_CreateFromPlaneCache::GetWrittenAttributes() const
 T C_INIT_CreateFromPlaneCache::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_CreateFromPlaneCache::~C_INIT_CreateFromPlaneCache()
 T C_INIT_CreateInHierarchy::GetReadAttributes() const
 T C_INIT_CreateInHierarchy::GetReadControlPointMask() const
 T C_INIT_CreateInHierarchy::GetWrittenAttributes() const
 T C_INIT_CreateInHierarchy::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_CreateInHierarchy::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_INIT_CreateInHierarchy::~C_INIT_CreateInHierarchy()
 T C_INIT_CreateOnModel::GetReadAttributes() const
 T C_INIT_CreateOnModel::GetReadControlPointMask() const
 T C_INIT_CreateOnModel::GetWrittenAttributes() const
 T C_INIT_CreateOnModel::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_CreateOnModel::~C_INIT_CreateOnModel()
 T C_INIT_CreateSequentialPath::GetReadAttributes() const
 T C_INIT_CreateSequentialPath::GetReadControlPointMask() const
 T C_INIT_CreateSequentialPath::GetRequiredContextBytes() const
 T C_INIT_CreateSequentialPath::GetWrittenAttributes() const
 T C_INIT_CreateSequentialPath::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_CreateSequentialPath::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_INIT_CreateSequentialPath::InitializeContextData(CParticleCollection*, void*) const
 T C_INIT_CreateSequentialPath::~C_INIT_CreateSequentialPath()
 T C_INIT_CreateWithinBox::GetReadAttributes() const
 T C_INIT_CreateWithinBox::GetReadControlPointMask() const
 T C_INIT_CreateWithinBox::GetWrittenAttributes() const
 T C_INIT_CreateWithinBox::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_CreateWithinBox::Render(CParticleCollection*) const
 T C_INIT_CreateWithinBox::~C_INIT_CreateWithinBox()
 T C_INIT_CreateWithinSphere::GetReadAttributes() const
 T C_INIT_CreateWithinSphere::GetReadControlPointMask() const
 T C_INIT_CreateWithinSphere::GetWrittenAttributes() const
 T C_INIT_CreateWithinSphere::InitNewParticlesBlock(CParticleCollection*, int, int, int, void*) const
 T C_INIT_CreateWithinSphere::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_CreateWithinSphere::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_INIT_CreateWithinSphere::Render(CParticleCollection*) const
 T C_INIT_CreateWithinSphere::~C_INIT_CreateWithinSphere()
 T C_INIT_CreationNoise::GetReadAttributes() const
 T C_INIT_CreationNoise::GetWrittenAttributes() const
 T C_INIT_CreationNoise::InitNewParticlesBlock(CParticleCollection*, int, int, int, void*) const
 T C_INIT_CreationNoise::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_CreationNoise::IsScrubSafe()
 T C_INIT_CreationNoise::~C_INIT_CreationNoise()
 T C_INIT_DistanceToCPInit::GetReadAttributes() const
 T C_INIT_DistanceToCPInit::GetReadControlPointMask() const
 T C_INIT_DistanceToCPInit::GetWrittenAttributes() const
 T C_INIT_DistanceToCPInit::InitMultipleOverride()
 T C_INIT_DistanceToCPInit::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_DistanceToCPInit::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_INIT_DistanceToCPInit::~C_INIT_DistanceToCPInit()
 T C_INIT_InheritVelocity::GetReadAttributes() const
 T C_INIT_InheritVelocity::GetReadControlPointMask() const
 T C_INIT_InheritVelocity::GetWrittenAttributes() const
 T C_INIT_InheritVelocity::InitMultipleOverride()
 T C_INIT_InheritVelocity::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_InheritVelocity::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_INIT_InheritVelocity::~C_INIT_InheritVelocity()
 T C_INIT_InitialRepulsionVelocity::GetReadAttributes() const
 T C_INIT_InitialRepulsionVelocity::GetReadControlPointMask() const
 T C_INIT_InitialRepulsionVelocity::GetWrittenAttributes() const
 T C_INIT_InitialRepulsionVelocity::InitMultipleOverride()
 T C_INIT_InitialRepulsionVelocity::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_InitialRepulsionVelocity::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_INIT_InitialRepulsionVelocity::~C_INIT_InitialRepulsionVelocity()
 T C_INIT_InitialVelocityNoise::GetReadAttributes() const
 T C_INIT_InitialVelocityNoise::GetReadControlPointMask() const
 T C_INIT_InitialVelocityNoise::GetWrittenAttributes() const
 T C_INIT_InitialVelocityNoise::InitMultipleOverride()
 T C_INIT_InitialVelocityNoise::InitNewParticlesBlock(CParticleCollection*, int, int, int, void*) const
 T C_INIT_InitialVelocityNoise::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_InitialVelocityNoise::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_INIT_InitialVelocityNoise::~C_INIT_InitialVelocityNoise()
 T C_INIT_LifespanFromVelocity::GetReadAttributes() const
 T C_INIT_LifespanFromVelocity::GetRequiredContextBytes() const
 T C_INIT_LifespanFromVelocity::GetWrittenAttributes() const
 T C_INIT_LifespanFromVelocity::InitMultipleOverride()
 T C_INIT_LifespanFromVelocity::InitNewParticlesBlock(CParticleCollection*, int, int, int, void*) const
 T C_INIT_LifespanFromVelocity::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_LifespanFromVelocity::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_INIT_LifespanFromVelocity::InitializeContextData(CParticleCollection*, void*) const
 T C_INIT_LifespanFromVelocity::~C_INIT_LifespanFromVelocity()
 T C_INIT_MoveBetweenPoints::GetReadAttributes() const
 T C_INIT_MoveBetweenPoints::GetReadControlPointMask() const
 T C_INIT_MoveBetweenPoints::GetWrittenAttributes() const
 T C_INIT_MoveBetweenPoints::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_MoveBetweenPoints::~C_INIT_MoveBetweenPoints()
 T C_INIT_PositionOffset::GetReadAttributes() const
 T C_INIT_PositionOffset::GetReadControlPointMask() const
 T C_INIT_PositionOffset::GetWrittenAttributes() const
 T C_INIT_PositionOffset::InitMultipleOverride()
 T C_INIT_PositionOffset::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_PositionOffset::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_INIT_PositionOffset::Render(CParticleCollection*) const
 T C_INIT_PositionOffset::~C_INIT_PositionOffset()
 T C_INIT_PositionWarp::GetReadAttributes() const
 T C_INIT_PositionWarp::GetReadControlPointMask() const
 T C_INIT_PositionWarp::GetWrittenAttributes() const
 T C_INIT_PositionWarp::InitMultipleOverride()
 T C_INIT_PositionWarp::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_PositionWarp::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_INIT_PositionWarp::~C_INIT_PositionWarp()
 T C_INIT_RandomAlpha::GetReadAttributes() const
 T C_INIT_RandomAlpha::GetWrittenAttributes() const
 T C_INIT_RandomAlpha::InitNewParticlesBlock(CParticleCollection*, int, int, int, void*) const
 T C_INIT_RandomAlpha::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_RandomAlpha::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_INIT_RandomAlpha::~C_INIT_RandomAlpha()
 T C_INIT_RandomColor::GetReadAttributes() const
 T C_INIT_RandomColor::GetReadControlPointMask() const
 T C_INIT_RandomColor::GetRequiredContextBytes() const
 T C_INIT_RandomColor::GetWrittenAttributes() const
 T C_INIT_RandomColor::InitNewParticlesBlock(CParticleCollection*, int, int, int, void*) const
 T C_INIT_RandomColor::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_RandomColor::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_INIT_RandomColor::InitializeContextData(CParticleCollection*, void*) const
 T C_INIT_RandomColor::~C_INIT_RandomColor()
 T C_INIT_RandomLifeTime::GetReadAttributes() const
 T C_INIT_RandomLifeTime::GetWrittenAttributes() const
 T C_INIT_RandomLifeTime::InitNewParticlesBlock(CParticleCollection*, int, int, int, void*) const
 T C_INIT_RandomLifeTime::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_RandomLifeTime::~C_INIT_RandomLifeTime()
 T C_INIT_RandomRadius::GetReadAttributes() const
 T C_INIT_RandomRadius::GetWrittenAttributes() const
 T C_INIT_RandomRadius::InitNewParticlesBlock(CParticleCollection*, int, int, int, void*) const
 T C_INIT_RandomRadius::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_RandomRadius::~C_INIT_RandomRadius()
 T C_INIT_RandomRotation::GetAttributeToInit() const
 T C_INIT_RandomRotation::~C_INIT_RandomRotation()
 T C_INIT_RandomRotationSpeed::GetAttributeToInit() const
 T C_INIT_RandomRotationSpeed::~C_INIT_RandomRotationSpeed()
 T C_INIT_RandomSecondSequence::GetReadAttributes() const
 T C_INIT_RandomSecondSequence::GetWrittenAttributes() const
 T C_INIT_RandomSecondSequence::InitNewParticlesBlock(CParticleCollection*, int, int, int, void*) const
 T C_INIT_RandomSecondSequence::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_RandomSecondSequence::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_INIT_RandomSecondSequence::~C_INIT_RandomSecondSequence()
 T C_INIT_RandomSequence::GetReadAttributes() const
 T C_INIT_RandomSequence::GetWrittenAttributes() const
 T C_INIT_RandomSequence::InitNewParticlesBlock(CParticleCollection*, int, int, int, void*) const
 T C_INIT_RandomSequence::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_RandomSequence::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_INIT_RandomSequence::~C_INIT_RandomSequence()
 T C_INIT_RandomTrailLength::GetReadAttributes() const
 T C_INIT_RandomTrailLength::GetWrittenAttributes() const
 T C_INIT_RandomTrailLength::InitNewParticlesBlock(CParticleCollection*, int, int, int, void*) const
 T C_INIT_RandomTrailLength::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_RandomTrailLength::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_INIT_RandomTrailLength::~C_INIT_RandomTrailLength()
 T C_INIT_RandomYaw::GetAttributeToInit() const
 T C_INIT_RandomYaw::~C_INIT_RandomYaw()
 T C_INIT_RandomYawFlip::GetReadAttributes() const
 T C_INIT_RandomYawFlip::GetWrittenAttributes() const
 T C_INIT_RandomYawFlip::InitMultipleOverride()
 T C_INIT_RandomYawFlip::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_RandomYawFlip::~C_INIT_RandomYawFlip()
 T C_INIT_RemapCPtoScalar::GetReadAttributes() const
 T C_INIT_RemapCPtoScalar::GetReadControlPointMask() const
 T C_INIT_RemapCPtoScalar::GetWrittenAttributes() const
 T C_INIT_RemapCPtoScalar::InitMultipleOverride()
 T C_INIT_RemapCPtoScalar::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_RemapCPtoScalar::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_INIT_RemapCPtoScalar::~C_INIT_RemapCPtoScalar()
 T C_INIT_RemapCPtoVector::GetReadAttributes() const
 T C_INIT_RemapCPtoVector::GetReadControlPointMask() const
 T C_INIT_RemapCPtoVector::GetWrittenAttributes() const
 T C_INIT_RemapCPtoVector::InitMultipleOverride()
 T C_INIT_RemapCPtoVector::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_RemapCPtoVector::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_INIT_RemapCPtoVector::~C_INIT_RemapCPtoVector()
 T C_INIT_RemapScalar::GetReadAttributes() const
 T C_INIT_RemapScalar::GetWrittenAttributes() const
 T C_INIT_RemapScalar::InitMultipleOverride()
 T C_INIT_RemapScalar::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_RemapScalar::~C_INIT_RemapScalar()
 T C_INIT_RemapScalarToVector::GetReadAttributes() const
 T C_INIT_RemapScalarToVector::GetReadControlPointMask() const
 T C_INIT_RemapScalarToVector::GetWrittenAttributes() const
 T C_INIT_RemapScalarToVector::InitMultipleOverride()
 T C_INIT_RemapScalarToVector::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_RemapScalarToVector::~C_INIT_RemapScalarToVector()
 T C_INIT_SequenceLifeTime::GetReadAttributes() const
 T C_INIT_SequenceLifeTime::GetWrittenAttributes() const
 T C_INIT_SequenceLifeTime::InitMultipleOverride()
 T C_INIT_SequenceLifeTime::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_SequenceLifeTime::~C_INIT_SequenceLifeTime()
 T C_INIT_VelocityRandom::GetReadAttributes() const
 T C_INIT_VelocityRandom::GetReadControlPointMask() const
 T C_INIT_VelocityRandom::GetWrittenAttributes() const
 T C_INIT_VelocityRandom::InitMultipleOverride()
 T C_INIT_VelocityRandom::InitNewParticlesScalar(CParticleCollection*, int, int, int, void*) const
 T C_INIT_VelocityRandom::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_INIT_VelocityRandom::~C_INIT_VelocityRandom()
 T C_InfoLadderDismount::DrawDebugGeometryOverlays()
 T C_InfoLadderDismount::GetClientClass()
 T C_InfoLadderDismount::YouForgotToImplementOrDeclareClientClass()
 T C_InfoLadderDismount::~C_InfoLadderDismount()
 T C_InfoLightingRelative::GetClientClass()
 T C_InfoLightingRelative::GetLightingOffset(matrix3x4_t&)
 T C_InfoLightingRelative::YouForgotToImplementOrDeclareClientClass()
 T C_InfoLightingRelative::~C_InfoLightingRelative()
 T C_InfoOverlayAccessor::GetClientClass()
 T C_InfoOverlayAccessor::OnDataChanged(DataUpdateType_t)
 T C_InfoOverlayAccessor::YouForgotToImplementOrDeclareClientClass()
 T C_InfoOverlayAccessor::~C_InfoOverlayAccessor()
 T C_InfoTeleporterCountdown::C_InfoTeleporterCountdown()
 T C_InfoTeleporterCountdown::GetClientClass()
 T C_InfoTeleporterCountdown::ShouldDraw()
 T C_InfoTeleporterCountdown::YouForgotToImplementOrDeclareClientClass()
 T C_InfoTeleporterCountdown::~C_InfoTeleporterCountdown()
 T C_LightGlow::ClientThink()
 T C_LightGlow::GetClientClass()
 T C_LightGlow::OnDataChanged(DataUpdateType_t)
 T C_LightGlow::Simulate()
 T C_LightGlow::YouForgotToImplementOrDeclareClientClass()
 T C_LightGlow::~C_LightGlow()
 T C_LightGlowOverlay::CalcSpriteColorAndSize(float, CGlowSprite*, float*, float*, Vector*)
 T C_LightGlowOverlay::~C_LightGlowOverlay()
 T C_LocalTempEntity::DrawModel(int)
 T C_LocalTempEntity::DrawStudioModel(int)
 T C_LocalTempEntity::Frame(float, int)
 T C_LocalTempEntity::IsActive()
 T C_LocalTempEntity::Prepare(model_t const*, float)
 T C_LocalTempEntity::~C_LocalTempEntity()
 T C_MaterialModifyControl::GetClientClass()
 T C_MaterialModifyControl::OnDataChanged(DataUpdateType_t)
 T C_MaterialModifyControl::OnPreDataChanged(DataUpdateType_t)
 T C_MaterialModifyControl::ShouldDraw()
 T C_MaterialModifyControl::YouForgotToImplementOrDeclareClientClass()
 T C_MaterialModifyControl::~C_MaterialModifyControl()
 T C_MegaBombExplosionEffect::CreateCore()
 T C_MegaBombExplosionEffect::CreateDebris()
 T C_MegaBombExplosionEffect::CreateMisc()
 T C_MegaBombExplosionEffect::PlaySound()
 T C_MortarShell::AddExplodingParticles(float)
 T C_MortarShell::AddRisingParticles(float)
 T C_MortarShell::DrawModel(int)
 T C_MortarShell::GetClientClass()
 T C_MortarShell::GetRenderGroup()
 T C_MortarShell::OnDataChanged(DataUpdateType_t)
 T C_MortarShell::YouForgotToImplementOrDeclareClientClass()
 T C_MortarShell::~C_MortarShell()
 T C_MovieExplosion::GetClientClass()
 T C_MovieExplosion::OnDataChanged(DataUpdateType_t)
 T C_MovieExplosion::RenderParticles(CParticleRenderIterator*)
 T C_MovieExplosion::SimulateParticles(CParticleSimulateIterator*)
 T C_MovieExplosion::Start(CParticleMgr*, IPrototypeArgAccess*)
 T C_MovieExplosion::Update(float)
 T C_MovieExplosion::YouForgotToImplementOrDeclareClientClass()
 T C_MovieExplosion::~C_MovieExplosion()
 T C_MultiplayRules::C_MultiplayRules()
 T C_MultiplayRules::Damage_GetNoPhysicsForce()
 T C_MultiplayRules::Damage_GetShouldGibCorpse()
 T C_MultiplayRules::Damage_GetShouldNotBleed()
 T C_MultiplayRules::Damage_GetShowOnHud()
 T C_MultiplayRules::Damage_GetTimeBased()
 T C_MultiplayRules::Damage_IsTimeBased(int)
 T C_MultiplayRules::Damage_NoPhysicsForce(int)
 T C_MultiplayRules::Damage_ShouldGibCorpse(int)
 T C_MultiplayRules::Damage_ShouldNotBleed(int)
 T C_MultiplayRules::Damage_ShowOnHUD(int)
 T C_MultiplayRules::GetVoiceCommandSubtitle(int, int)
 T C_MultiplayRules::Init()
 T C_MultiplayRules::IsMultiplayer()
 T C_MultiplayRules::LoadVoiceCommandScript()
 T C_MultiplayRules::ShouldDrawHeadLabels()
 T C_MultiplayRules::~C_MultiplayRules()
 T C_NPC_AntlionGuard::ClientThink()
 T C_NPC_AntlionGuard::GetClientClass()
 T C_NPC_AntlionGuard::GetDataDescMap()
 T C_NPC_AntlionGuard::OnDataChanged(DataUpdateType_t)
 T C_NPC_AntlionGuard::YouForgotToImplementOrDeclareClientClass()
 T C_NPC_AntlionGuard::~C_NPC_AntlionGuard()
 T C_NPC_Barnacle::CBarnaclePhysicsDelegate::ApplyConstraints(CSimplePhysics::CNode*, int)
 T C_NPC_Barnacle::CBarnaclePhysicsDelegate::GetNodeForces(CSimplePhysics::CNode*, int, Vector*)
 T C_NPC_Barnacle::ClientThink()
 T C_NPC_Barnacle::ComputeVisualTipPoint(Vector*)
 T C_NPC_Barnacle::ComputeWorldSpaceSurroundingBox(Vector*, Vector*)
 T C_NPC_Barnacle::GetClientClass()
 T C_NPC_Barnacle::GetRenderBounds(Vector&, Vector&)
 T C_NPC_Barnacle::InitTonguePhysics()
 T C_NPC_Barnacle::OnDataChanged(DataUpdateType_t)
 T C_NPC_Barnacle::StandardBlendingRules(CStudioHdr*, Vector*, Quaternion*, float, int)
 T C_NPC_Barnacle::YouForgotToImplementOrDeclareClientClass()
 T C_NPC_Barnacle::~C_NPC_Barnacle()
 T C_NPC_Manhack::GetClientClass()
 T C_NPC_Manhack::GetDataDescMap()
 T C_NPC_Manhack::OnDataChanged(DataUpdateType_t)
 T C_NPC_Manhack::OnRestore()
 T C_NPC_Manhack::SoundInit()
 T C_NPC_Manhack::SoundShutdown()
 T C_NPC_Manhack::UpdateOnRemove()
 T C_NPC_Manhack::YouForgotToImplementOrDeclareClientClass()
 T C_NPC_Manhack::~C_NPC_Manhack()
 T C_NPC_Vortigaunt::ClientThink()
 T C_NPC_Vortigaunt::GetClientClass()
 T C_NPC_Vortigaunt::OnDataChanged(DataUpdateType_t)
 T C_NPC_Vortigaunt::ReceiveMessage(int, bf_read&)
 T C_NPC_Vortigaunt::YouForgotToImplementOrDeclareClientClass()
 T C_NPC_Vortigaunt::~C_NPC_Vortigaunt()
 T C_OP_AttractToControlPoint::AddForces(FourVectors*, CParticleCollection*, int, float, void*) const
 T C_OP_AttractToControlPoint::GetReadAttributes() const
 T C_OP_AttractToControlPoint::GetReadControlPointMask() const
 T C_OP_AttractToControlPoint::GetWrittenAttributes() const
 T C_OP_AttractToControlPoint::~C_OP_AttractToControlPoint()
 T C_OP_BasicMovement::GetReadAttributes() const
 T C_OP_BasicMovement::GetWrittenAttributes() const
 T C_OP_BasicMovement::Operate(CParticleCollection*, float, void*) const
 T C_OP_BasicMovement::~C_OP_BasicMovement()
 T C_OP_ColorInterpolate::GetReadAttributes() const
 T C_OP_ColorInterpolate::GetReadInitialAttributes() const
 T C_OP_ColorInterpolate::GetWrittenAttributes() const
 T C_OP_ColorInterpolate::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_ColorInterpolate::Operate(CParticleCollection*, float, void*) const
 T C_OP_ColorInterpolate::~C_OP_ColorInterpolate()
 T C_OP_ConstrainDistance::EnforceConstraint(int, int, CParticleCollection*, void*, int) const
 T C_OP_ConstrainDistance::GetReadAttributes() const
 T C_OP_ConstrainDistance::GetWrittenAttributes() const
 T C_OP_ConstrainDistance::~C_OP_ConstrainDistance()
 T C_OP_ConstrainDistanceToPath::EnforceConstraint(int, int, CParticleCollection*, void*, int) const
 T C_OP_ConstrainDistanceToPath::GetReadAttributes() const
 T C_OP_ConstrainDistanceToPath::GetReadControlPointMask() const
 T C_OP_ConstrainDistanceToPath::GetWrittenAttributes() const
 T C_OP_ConstrainDistanceToPath::~C_OP_ConstrainDistanceToPath()
 T C_OP_ContinuousEmitter::Emit(CParticleCollection*, float, void*) const
 T C_OP_ContinuousEmitter::GetReadAttributes() const
 T C_OP_ContinuousEmitter::GetRequiredContextBytes() const
 T C_OP_ContinuousEmitter::GetWrittenAttributes() const
 T C_OP_ContinuousEmitter::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_ContinuousEmitter::InitializeContextData(CParticleCollection*, void*) const
 T C_OP_ContinuousEmitter::MayCreateMoreParticles(CParticleCollection*, void*) const
 T C_OP_ContinuousEmitter::Restart(CParticleCollection*, void*)
 T C_OP_ContinuousEmitter::SkipToTime(float, CParticleCollection*, void*) const
 T C_OP_ContinuousEmitter::StartEmission(CParticleCollection*, void*, bool) const
 T C_OP_ContinuousEmitter::StopEmission(CParticleCollection*, void*, bool) const
 T C_OP_ContinuousEmitter::~C_OP_ContinuousEmitter()
 T C_OP_ControlpointLight::GetReadAttributes() const
 T C_OP_ControlpointLight::GetReadControlPointMask() const
 T C_OP_ControlpointLight::GetReadInitialAttributes() const
 T C_OP_ControlpointLight::GetWrittenAttributes() const
 T C_OP_ControlpointLight::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_ControlpointLight::Operate(CParticleCollection*, float, void*) const
 T C_OP_ControlpointLight::Render(CParticleCollection*) const
 T C_OP_ControlpointLight::~C_OP_ControlpointLight()
 T C_OP_Cull::GetReadAttributes() const
 T C_OP_Cull::GetWrittenAttributes() const
 T C_OP_Cull::Operate(CParticleCollection*, float, void*) const
 T C_OP_Cull::~C_OP_Cull()
 T C_OP_DampenToCP::GetReadAttributes() const
 T C_OP_DampenToCP::GetReadControlPointMask() const
 T C_OP_DampenToCP::GetWrittenAttributes() const
 T C_OP_DampenToCP::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_DampenToCP::Operate(CParticleCollection*, float, void*) const
 T C_OP_DampenToCP::~C_OP_DampenToCP()
 T C_OP_Decay::GetReadAttributes() const
 T C_OP_Decay::GetWrittenAttributes() const
 T C_OP_Decay::Operate(CParticleCollection*, float, void*) const
 T C_OP_Decay::~C_OP_Decay()
 T C_OP_DistanceBetweenCPs::GetReadAttributes() const
 T C_OP_DistanceBetweenCPs::GetReadControlPointMask() const
 T C_OP_DistanceBetweenCPs::GetReadInitialAttributes() const
 T C_OP_DistanceBetweenCPs::GetWrittenAttributes() const
 T C_OP_DistanceBetweenCPs::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_DistanceBetweenCPs::Operate(CParticleCollection*, float, void*) const
 T C_OP_DistanceBetweenCPs::~C_OP_DistanceBetweenCPs()
 T C_OP_DistanceToCP::GetReadAttributes() const
 T C_OP_DistanceToCP::GetReadControlPointMask() const
 T C_OP_DistanceToCP::GetReadInitialAttributes() const
 T C_OP_DistanceToCP::GetWrittenAttributes() const
 T C_OP_DistanceToCP::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_DistanceToCP::Operate(CParticleCollection*, float, void*) const
 T C_OP_DistanceToCP::~C_OP_DistanceToCP()
 T C_OP_FadeAndKill::GetReadAttributes() const
 T C_OP_FadeAndKill::GetReadInitialAttributes() const
 T C_OP_FadeAndKill::GetWrittenAttributes() const
 T C_OP_FadeAndKill::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_FadeAndKill::Operate(CParticleCollection*, float, void*) const
 T C_OP_FadeAndKill::~C_OP_FadeAndKill()
 T C_OP_FadeIn::GetReadAttributes() const
 T C_OP_FadeIn::GetReadInitialAttributes() const
 T C_OP_FadeIn::GetWrittenAttributes() const
 T C_OP_FadeIn::Operate(CParticleCollection*, float, void*) const
 T C_OP_FadeIn::~C_OP_FadeIn()
 T C_OP_FadeOut::GetReadAttributes() const
 T C_OP_FadeOut::GetReadInitialAttributes() const
 T C_OP_FadeOut::GetWrittenAttributes() const
 T C_OP_FadeOut::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_FadeOut::Operate(CParticleCollection*, float, void*) const
 T C_OP_FadeOut::~C_OP_FadeOut()
 T C_OP_InstantaneousEmitter::Emit(CParticleCollection*, float, void*) const
 T C_OP_InstantaneousEmitter::GetReadAttributes() const
 T C_OP_InstantaneousEmitter::GetReadControlPointMask() const
 T C_OP_InstantaneousEmitter::GetRequiredContextBytes() const
 T C_OP_InstantaneousEmitter::GetWrittenAttributes() const
 T C_OP_InstantaneousEmitter::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_InstantaneousEmitter::InitializeContextData(CParticleCollection*, void*) const
 T C_OP_InstantaneousEmitter::MayCreateMoreParticles(CParticleCollection*, void*) const
 T C_OP_InstantaneousEmitter::Restart(CParticleCollection*, void*)
 T C_OP_InstantaneousEmitter::SkipToTime(float, CParticleCollection*, void*) const
 T C_OP_InstantaneousEmitter::StartEmission(CParticleCollection*, void*, bool) const
 T C_OP_InstantaneousEmitter::StopEmission(CParticleCollection*, void*, bool) const
 T C_OP_InstantaneousEmitter::~C_OP_InstantaneousEmitter()
 T C_OP_InterpolateRadius::GetReadAttributes() const
 T C_OP_InterpolateRadius::GetReadInitialAttributes() const
 T C_OP_InterpolateRadius::GetWrittenAttributes() const
 T C_OP_InterpolateRadius::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_InterpolateRadius::Operate(CParticleCollection*, float, void*) const
 T C_OP_InterpolateRadius::~C_OP_InterpolateRadius()
 T C_OP_LockToBone::GetReadAttributes() const
 T C_OP_LockToBone::GetReadControlPointMask() const
 T C_OP_LockToBone::GetWrittenAttributes() const
 T C_OP_LockToBone::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_LockToBone::Operate(CParticleCollection*, float, void*) const
 T C_OP_LockToBone::~C_OP_LockToBone()
 T C_OP_MaintainSequentialPath::GetReadAttributes() const
 T C_OP_MaintainSequentialPath::GetReadControlPointMask() const
 T C_OP_MaintainSequentialPath::GetRequiredContextBytes() const
 T C_OP_MaintainSequentialPath::GetWrittenAttributes() const
 T C_OP_MaintainSequentialPath::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_MaintainSequentialPath::InitializeContextData(CParticleCollection*, void*) const
 T C_OP_MaintainSequentialPath::Operate(CParticleCollection*, float, void*) const
 T C_OP_MaintainSequentialPath::~C_OP_MaintainSequentialPath()
 T C_OP_MaxVelocity::GetReadAttributes() const
 T C_OP_MaxVelocity::GetWrittenAttributes() const
 T C_OP_MaxVelocity::Operate(CParticleCollection*, float, void*) const
 T C_OP_MaxVelocity::~C_OP_MaxVelocity()
 T C_OP_ModelCull::GetReadAttributes() const
 T C_OP_ModelCull::GetWrittenAttributes() const
 T C_OP_ModelCull::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_ModelCull::Operate(CParticleCollection*, float, void*) const
 T C_OP_ModelCull::~C_OP_ModelCull()
 T C_OP_MovementRotateParticleAroundAxis::GetReadAttributes() const
 T C_OP_MovementRotateParticleAroundAxis::GetReadControlPointMask() const
 T C_OP_MovementRotateParticleAroundAxis::GetWrittenAttributes() const
 T C_OP_MovementRotateParticleAroundAxis::Operate(CParticleCollection*, float, void*) const
 T C_OP_MovementRotateParticleAroundAxis::~C_OP_MovementRotateParticleAroundAxis()
 T C_OP_Noise::GetReadAttributes() const
 T C_OP_Noise::GetWrittenAttributes() const
 T C_OP_Noise::Operate(CParticleCollection*, float, void*) const
 T C_OP_Noise::~C_OP_Noise()
 T C_OP_NoiseEmitter::Emit(CParticleCollection*, float, void*) const
 T C_OP_NoiseEmitter::GetReadAttributes() const
 T C_OP_NoiseEmitter::GetRequiredContextBytes() const
 T C_OP_NoiseEmitter::GetWrittenAttributes() const
 T C_OP_NoiseEmitter::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_NoiseEmitter::InitializeContextData(CParticleCollection*, void*) const
 T C_OP_NoiseEmitter::MayCreateMoreParticles(CParticleCollection*, void*) const
 T C_OP_NoiseEmitter::Restart(CParticleCollection*, void*)
 T C_OP_NoiseEmitter::SkipToTime(float, CParticleCollection*, void*) const
 T C_OP_NoiseEmitter::StartEmission(CParticleCollection*, void*, bool) const
 T C_OP_NoiseEmitter::StopEmission(CParticleCollection*, void*, bool) const
 T C_OP_NoiseEmitter::~C_OP_NoiseEmitter()
 T C_OP_Orient2DRelToCP::GetReadAttributes() const
 T C_OP_Orient2DRelToCP::GetReadControlPointMask() const
 T C_OP_Orient2DRelToCP::GetWrittenAttributes() const
 T C_OP_Orient2DRelToCP::Operate(CParticleCollection*, float, void*) const
 T C_OP_Orient2DRelToCP::~C_OP_Orient2DRelToCP()
 T C_OP_OrientTo2dDirection::GetReadAttributes() const
 T C_OP_OrientTo2dDirection::GetWrittenAttributes() const
 T C_OP_OrientTo2dDirection::Operate(CParticleCollection*, float, void*) const
 T C_OP_OrientTo2dDirection::~C_OP_OrientTo2dDirection()
 T C_OP_OscillateScalar::GetReadAttributes() const
 T C_OP_OscillateScalar::GetWrittenAttributes() const
 T C_OP_OscillateScalar::Operate(CParticleCollection*, float, void*) const
 T C_OP_OscillateScalar::~C_OP_OscillateScalar()
 T C_OP_OscillateVector::GetReadAttributes() const
 T C_OP_OscillateVector::GetWrittenAttributes() const
 T C_OP_OscillateVector::Operate(CParticleCollection*, float, void*) const
 T C_OP_OscillateVector::~C_OP_OscillateVector()
 T C_OP_PerParticleEmitter::GetReadAttributes() const
 T C_OP_PerParticleEmitter::GetWrittenAttributes() const
 T C_OP_PerParticleEmitter::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_PerParticleEmitter::InitializeContextData(CParticleCollection*, void*) const
 T C_OP_PerParticleEmitter::MayCreateMoreParticles(CParticleCollection*, void*) const
 T C_OP_PerParticleEmitter::Operate(CParticleCollection*, float, void*) const
 T C_OP_PerParticleEmitter::~C_OP_PerParticleEmitter()
 T C_OP_PlanarConstraint::EnforceConstraint(int, int, CParticleCollection*, void*, int) const
 T C_OP_PlanarConstraint::GetReadAttributes() const
 T C_OP_PlanarConstraint::GetReadControlPointMask() const
 T C_OP_PlanarConstraint::GetWrittenAttributes() const
 T C_OP_PlanarConstraint::~C_OP_PlanarConstraint()
 T C_OP_PlaneCull::GetReadAttributes() const
 T C_OP_PlaneCull::GetReadControlPointMask() const
 T C_OP_PlaneCull::GetWrittenAttributes() const
 T C_OP_PlaneCull::Operate(CParticleCollection*, float, void*) const
 T C_OP_PlaneCull::~C_OP_PlaneCull()
 T C_OP_PositionLock::GetReadAttributes() const
 T C_OP_PositionLock::GetReadControlPointMask() const
 T C_OP_PositionLock::GetRequiredContextBytes() const
 T C_OP_PositionLock::GetWrittenAttributes() const
 T C_OP_PositionLock::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_PositionLock::InitializeContextData(CParticleCollection*, void*) const
 T C_OP_PositionLock::Operate(CParticleCollection*, float, void*) const
 T C_OP_PositionLock::~C_OP_PositionLock()
 T C_OP_RandomForce::AddForces(FourVectors*, CParticleCollection*, int, float, void*) const
 T C_OP_RandomForce::GetReadAttributes() const
 T C_OP_RandomForce::GetWrittenAttributes() const
 T C_OP_RandomForce::~C_OP_RandomForce()
 T C_OP_RemapCPtoScalar::GetReadAttributes() const
 T C_OP_RemapCPtoScalar::GetReadControlPointMask() const
 T C_OP_RemapCPtoScalar::GetWrittenAttributes() const
 T C_OP_RemapCPtoScalar::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_RemapCPtoScalar::Operate(CParticleCollection*, float, void*) const
 T C_OP_RemapCPtoScalar::~C_OP_RemapCPtoScalar()
 T C_OP_RemapDotProductToScalar::GetReadAttributes() const
 T C_OP_RemapDotProductToScalar::GetReadControlPointMask() const
 T C_OP_RemapDotProductToScalar::GetWrittenAttributes() const
 T C_OP_RemapDotProductToScalar::Operate(CParticleCollection*, float, void*) const
 T C_OP_RemapDotProductToScalar::~C_OP_RemapDotProductToScalar()
 T C_OP_RemapScalar::GetReadAttributes() const
 T C_OP_RemapScalar::GetWrittenAttributes() const
 T C_OP_RemapScalar::Operate(CParticleCollection*, float, void*) const
 T C_OP_RemapScalar::~C_OP_RemapScalar()
 T C_OP_RemapSpeedtoCP::GetReadAttributes() const
 T C_OP_RemapSpeedtoCP::GetReadControlPointMask() const
 T C_OP_RemapSpeedtoCP::GetWrittenAttributes() const
 T C_OP_RemapSpeedtoCP::InitParams(CParticleSystemDefinition*)
 T C_OP_RemapSpeedtoCP::Operate(CParticleCollection*, float, void*) const
 T C_OP_RemapSpeedtoCP::ShouldRunBeforeEmitters() const
 T C_OP_RemapSpeedtoCP::~C_OP_RemapSpeedtoCP()
 T C_OP_RenderPoints::GetReadAttributes() const
 T C_OP_RenderPoints::GetRequiredContextBytes() const
 T C_OP_RenderPoints::GetWrittenAttributes() const
 T C_OP_RenderPoints::InitializeContextData(CParticleCollection*, void*) const
 T C_OP_RenderPoints::Render(IMatRenderContext*, CParticleCollection*, void*) const
 T C_OP_RenderPoints::~C_OP_RenderPoints()
 T C_OP_RenderRope::GetParticlesToRender(CParticleCollection*, void*, int, int, int, int*, int*) const
 T C_OP_RenderRope::GetReadAttributes() const
 T C_OP_RenderRope::GetRequiredContextBytes() const
 T C_OP_RenderRope::GetWrittenAttributes() const
 T C_OP_RenderRope::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_RenderRope::InitializeContextData(CParticleCollection*, void*) const
 T C_OP_RenderRope::Render(IMatRenderContext*, CParticleCollection*, void*) const
 T C_OP_RenderRope::RenderSpriteCard(CParticleCollection*, void*, IMaterial*) const
 T C_OP_RenderRope::RenderUnsorted(CParticleCollection*, void*, IMatRenderContext*, CMeshBuilder&, int, int, int) const
 T C_OP_RenderRope::~C_OP_RenderRope()
 T C_OP_RenderScreenVelocityRotate::GetReadAttributes() const
 T C_OP_RenderScreenVelocityRotate::GetRequiredContextBytes() const
 T C_OP_RenderScreenVelocityRotate::GetWrittenAttributes() const
 T C_OP_RenderScreenVelocityRotate::InitializeContextData(CParticleCollection*, void*) const
 T C_OP_RenderScreenVelocityRotate::Render(IMatRenderContext*, CParticleCollection*, void*) const
 T C_OP_RenderScreenVelocityRotate::~C_OP_RenderScreenVelocityRotate()
 T C_OP_RenderSprites::GetParticlesToRender(CParticleCollection*, void*, int, int, int, int*, int*) const
 T C_OP_RenderSprites::GetReadAttributes() const
 T C_OP_RenderSprites::GetReadControlPointMask() const
 T C_OP_RenderSprites::GetRequiredContextBytes() const
 T C_OP_RenderSprites::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_RenderSprites::InitializeContextData(CParticleCollection*, void*) const
 T C_OP_RenderSprites::Render(IMatRenderContext*, CParticleCollection*, void*) const
 T C_OP_RenderSprites::RenderNonSpriteCardCameraFacing(CParticleCollection*, void*, IMatRenderContext*, IMaterial*) const
 T C_OP_RenderSprites::RenderNonSpriteCardOriented(CMeshBuilder&, SpriteRenderInfo_t&, int, Vector const&, ParticleRenderData_t const*) const
 T C_OP_RenderSprites::RenderNonSpriteCardOriented(CParticleCollection*, void*, IMatRenderContext*, IMaterial*) const
 T C_OP_RenderSprites::RenderNonSpriteCardZRotating(CMeshBuilder&, SpriteRenderInfo_t&, int, Vector const&, ParticleRenderData_t const*) const
 T C_OP_RenderSprites::RenderNonSpriteCardZRotating(CParticleCollection*, void*, IMatRenderContext*, IMaterial*) const
 T C_OP_RenderSprites::RenderSpriteCard(CMeshBuilder&, SpriteRenderInfo_t&, int, ParticleRenderData_t const*) const
 T C_OP_RenderSprites::RenderTwoSequenceSpriteCard(CMeshBuilder&, SpriteRenderInfo_t&, int, ParticleRenderData_t const*) const
 T C_OP_RenderSprites::RenderUnsorted(CParticleCollection*, void*, IMatRenderContext*, CMeshBuilder&, int, int, int) const
 T C_OP_RenderSprites::RenderUnsortedNonSpriteCardOriented(CParticleCollection*, void*, IMatRenderContext*, CMeshBuilder&, int, int, int) const
 T C_OP_RenderSprites::RenderUnsortedNonSpriteCardZRotating(CParticleCollection*, void*, IMatRenderContext*, CMeshBuilder&, int, int, int) const
 T C_OP_RenderSprites::~C_OP_RenderSprites()
 T C_OP_RenderSpritesTrail::GetParticlesToRender(CParticleCollection*, void*, int, int, int, int*, int*) const
 T C_OP_RenderSpritesTrail::GetReadAttributes() const
 T C_OP_RenderSpritesTrail::GetRequiredContextBytes() const
 T C_OP_RenderSpritesTrail::GetWrittenAttributes() const
 T C_OP_RenderSpritesTrail::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_RenderSpritesTrail::InitializeContextData(CParticleCollection*, void*) const
 T C_OP_RenderSpritesTrail::Render(IMatRenderContext*, CParticleCollection*, void*) const
 T C_OP_RenderSpritesTrail::RenderSpriteTrail(CMeshBuilder&, SpriteTrailRenderInfo_t&, int, Vector const&, float, ParticleRenderData_t const*) const
 T C_OP_RenderSpritesTrail::RenderUnsorted(CParticleCollection*, void*, IMatRenderContext*, CMeshBuilder&, int, int, int) const
 T C_OP_RenderSpritesTrail::~C_OP_RenderSpritesTrail()
 T C_OP_SetChildControlPoints::GetReadAttributes() const
 T C_OP_SetChildControlPoints::GetWrittenAttributes() const
 T C_OP_SetChildControlPoints::Operate(CParticleCollection*, float, void*) const
 T C_OP_SetChildControlPoints::~C_OP_SetChildControlPoints()
 T C_OP_SetControlPointPositions::GetReadAttributes() const
 T C_OP_SetControlPointPositions::GetWrittenAttributes() const
 T C_OP_SetControlPointPositions::Operate(CParticleCollection*, float, void*) const
 T C_OP_SetControlPointPositions::ShouldRunBeforeEmitters() const
 T C_OP_SetControlPointPositions::~C_OP_SetControlPointPositions()
 T C_OP_SetControlPointToCenter::GetReadAttributes() const
 T C_OP_SetControlPointToCenter::GetWrittenAttributes() const
 T C_OP_SetControlPointToCenter::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_SetControlPointToCenter::Operate(CParticleCollection*, float, void*) const
 T C_OP_SetControlPointToCenter::ShouldRunBeforeEmitters() const
 T C_OP_SetControlPointToCenter::~C_OP_SetControlPointToCenter()
 T C_OP_SetControlPointToPlayer::GetReadAttributes() const
 T C_OP_SetControlPointToPlayer::GetWrittenAttributes() const
 T C_OP_SetControlPointToPlayer::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_SetControlPointToPlayer::Operate(CParticleCollection*, float, void*) const
 T C_OP_SetControlPointToPlayer::ShouldRunBeforeEmitters() const
 T C_OP_SetControlPointToPlayer::~C_OP_SetControlPointToPlayer()
 T C_OP_Spin::GetAttributeToSpin() const
 T C_OP_Spin::~C_OP_Spin()
 T C_OP_SpinUpdate::GetAttributeToSpin() const
 T C_OP_SpinUpdate::GetSpinSpeedAttribute() const
 T C_OP_SpinUpdate::~C_OP_SpinUpdate()
 T C_OP_SpinYaw::GetAttributeToSpin() const
 T C_OP_SpinYaw::~C_OP_SpinYaw()
 T C_OP_TwistAroundAxis::AddForces(FourVectors*, CParticleCollection*, int, float, void*) const
 T C_OP_TwistAroundAxis::GetReadAttributes() const
 T C_OP_TwistAroundAxis::GetWrittenAttributes() const
 T C_OP_TwistAroundAxis::~C_OP_TwistAroundAxis()
 T C_OP_VectorNoise::GetReadAttributes() const
 T C_OP_VectorNoise::GetWrittenAttributes() const
 T C_OP_VectorNoise::Operate(CParticleCollection*, float, void*) const
 T C_OP_VectorNoise::~C_OP_VectorNoise()
 T C_OP_VelocityDecay::GetReadAttributes() const
 T C_OP_VelocityDecay::GetWrittenAttributes() const
 T C_OP_VelocityDecay::Operate(CParticleCollection*, float, void*) const
 T C_OP_VelocityDecay::~C_OP_VelocityDecay()
 T C_OP_VelocityMatchingForce::GetReadAttributes() const
 T C_OP_VelocityMatchingForce::GetRequiredContextBytes() const
 T C_OP_VelocityMatchingForce::GetWrittenAttributes() const
 T C_OP_VelocityMatchingForce::InitializeContextData(CParticleCollection*, void*) const
 T C_OP_VelocityMatchingForce::Operate(CParticleCollection*, float, void*) const
 T C_OP_VelocityMatchingForce::~C_OP_VelocityMatchingForce()
 T C_OP_WorldCollideConstraint::EnforceConstraint(int, int, CParticleCollection*, void*, int) const
 T C_OP_WorldCollideConstraint::GetReadAttributes() const
 T C_OP_WorldCollideConstraint::GetReadControlPointMask() const
 T C_OP_WorldCollideConstraint::GetRequiredContextBytes() const
 T C_OP_WorldCollideConstraint::GetWrittenAttributes() const
 T C_OP_WorldCollideConstraint::SetupConstraintPerFrameData(CParticleCollection*, void*) const
 T C_OP_WorldCollideConstraint::~C_OP_WorldCollideConstraint()
 T C_OP_WorldTraceConstraint::EnforceConstraint(int, int, CParticleCollection*, void*, int) const
 T C_OP_WorldTraceConstraint::GetReadAttributes() const
 T C_OP_WorldTraceConstraint::GetReadControlPointMask() const
 T C_OP_WorldTraceConstraint::GetWrittenAttributes() const
 T C_OP_WorldTraceConstraint::InitParams(CParticleSystemDefinition*, CDmxElement*)
 T C_OP_WorldTraceConstraint::InitializeContextData(CParticleCollection*, void*) const
 T C_OP_WorldTraceConstraint::IsFinalConstaint() const
 T C_OP_WorldTraceConstraint::~C_OP_WorldTraceConstraint()
 T C_ParticleFire::GetClientClass()
 T C_ParticleFire::OnDataChanged(DataUpdateType_t)
 T C_ParticleFire::RenderParticles(CParticleRenderIterator*)
 T C_ParticleFire::SimulateParticles(CParticleSimulateIterator*)
 T C_ParticleFire::Start(CParticleMgr*, IPrototypeArgAccess*)
 T C_ParticleFire::Update(float)
 T C_ParticleFire::YouForgotToImplementOrDeclareClientClass()
 T C_ParticleFire::~C_ParticleFire()
 T C_ParticlePerformanceMonitor::GetClientClass()
 T C_ParticlePerformanceMonitor::OnDataChanged(DataUpdateType_t)
 T C_ParticlePerformanceMonitor::YouForgotToImplementOrDeclareClientClass()
 T C_ParticlePerformanceMonitor::~C_ParticlePerformanceMonitor()
 T C_ParticleSmokeGrenade::CleanupToolRecordingState(KeyValues*)
 T C_ParticleSmokeGrenade::ClientThink()
 T C_ParticleSmokeGrenade::FillVolume()
 T C_ParticleSmokeGrenade::GetClientClass()
 T C_ParticleSmokeGrenade::GetParticlePosition(Particle*, Vector&)
 T C_ParticleSmokeGrenade::NotifyRemove()
 T C_ParticleSmokeGrenade::OnDataChanged(DataUpdateType_t)
 T C_ParticleSmokeGrenade::RecvProxy_CurrentStage(CRecvProxyData const*, void*, void*)
 T C_ParticleSmokeGrenade::RenderParticles(CParticleRenderIterator*)
 T C_ParticleSmokeGrenade::SimulateParticles(CParticleSimulateIterator*)
 T C_ParticleSmokeGrenade::Start(CParticleMgr*, IPrototypeArgAccess*)
 T C_ParticleSmokeGrenade::Update(float)
 T C_ParticleSmokeGrenade::UpdateDynamicLightList(Vector const&, Vector const&)
 T C_ParticleSmokeGrenade::UpdateParticleAndFindTrade(int, float)
 T C_ParticleSmokeGrenade::UpdateParticleDuringTrade(int, float)
 T C_ParticleSmokeGrenade::UpdateSmokeTrail(float)
 T C_ParticleSmokeGrenade::YouForgotToImplementOrDeclareClientClass()
 T C_ParticleSmokeGrenade::~C_ParticleSmokeGrenade()
 T C_ParticleSystem::ClientThink()
 T C_ParticleSystem::GetClientClass()
 T C_ParticleSystem::PostDataUpdate(DataUpdateType_t)
 T C_ParticleSystem::PreDataUpdate(DataUpdateType_t)
 T C_ParticleSystem::YouForgotToImplementOrDeclareClientClass()
 T C_ParticleSystem::~C_ParticleSystem()
 T C_ParticleTrail::C_ParticleTrail()
 T C_ParticleTrail::GetAimEntOrigin(IClientEntity*, Vector*, QAngle*)
 T C_ParticleTrail::OnDataChanged(DataUpdateType_t)
 T C_ParticleTrail::Start(CParticleMgr*, IPrototypeArgAccess*)
 T C_ParticleTrail::~C_ParticleTrail()
 T C_PhysBox::C_PhysBox()
 T C_PhysBox::GetClientClass()
 T C_PhysBox::ShadowCastType()
 T C_PhysBox::YouForgotToImplementOrDeclareClientClass()
 T C_PhysBox::~C_PhysBox()
 T C_PhysMagnet::GetClientClass()
 T C_PhysMagnet::GetShadowCastDirection(Vector*, ShadowType_t) const
 T C_PhysMagnet::PostDataUpdate(DataUpdateType_t)
 T C_PhysMagnet::YouForgotToImplementOrDeclareClientClass()
 T C_PhysMagnet::~C_PhysMagnet()
 T C_PhysPropClientside::Break()
 T C_PhysPropClientside::C_PhysPropClientside()
 T C_PhysPropClientside::ClientThink()
 T C_PhysPropClientside::Clone(Vector&)
 T C_PhysPropClientside::CreateNew(bool)
 T C_PhysPropClientside::DestroyAll()
 T C_PhysPropClientside::GetBasePropData()
 T C_PhysPropClientside::GetBreakableCount()
 T C_PhysPropClientside::GetBreakableModel()
 T C_PhysPropClientside::GetBreakableSkin()
 T C_PhysPropClientside::GetCollideType()
 T C_PhysPropClientside::GetDmgModBullet()
 T C_PhysPropClientside::GetDmgModClub()
 T C_PhysPropClientside::GetDmgModExplosive()
 T C_PhysPropClientside::GetExplosiveDamage()
 T C_PhysPropClientside::GetExplosiveRadius()
 T C_PhysPropClientside::GetHealth() const
 T C_PhysPropClientside::GetMass()
 T C_PhysPropClientside::GetMaxBreakableSize()
 T C_PhysPropClientside::GetMultiplayerBreakMode() const
 T C_PhysPropClientside::GetMultiplayerPhysicsMode()
 T C_PhysPropClientside::GetPhysicsDamageTable()
 T C_PhysPropClientside::GetPhysicsMode()
 T C_PhysPropClientside::HasInteraction(propdata_interactions_t)
 T C_PhysPropClientside::HitSurface(C_BaseEntity*)
 T C_PhysPropClientside::ImpactTrace(CGameTrace*, int, char const*)
 T C_PhysPropClientside::Initialize()
 T C_PhysPropClientside::IsAsleep()
 T C_PhysPropClientside::IsClientCreated() const
 T C_PhysPropClientside::IsDormant()
 T C_PhysPropClientside::KeyValue(char const*, char const*)
 T C_PhysPropClientside::OnTakeDamage(int)
 T C_PhysPropClientside::ParseAllEntities(char const*)
 T C_PhysPropClientside::ParseEntity(char const*)
 T C_PhysPropClientside::ParsePropData()
 T C_PhysPropClientside::RecreateAll()
 T C_PhysPropClientside::SetBasePropData(char const*)
 T C_PhysPropClientside::SetBreakableCount(int)
 T C_PhysPropClientside::SetBreakableModel(char const*)
 T C_PhysPropClientside::SetBreakableSkin(int)
 T C_PhysPropClientside::SetDmgModBullet(float)
 T C_PhysPropClientside::SetDmgModClub(float)
 T C_PhysPropClientside::SetDmgModExplosive(float)
 T C_PhysPropClientside::SetExplosiveDamage(float)
 T C_PhysPropClientside::SetExplosiveRadius(float)
 T C_PhysPropClientside::SetHealth(int)
 T C_PhysPropClientside::SetInteraction(propdata_interactions_t)
 T C_PhysPropClientside::SetMaxBreakableSize(int)
 T C_PhysPropClientside::SetMultiplayerBreakMode(mp_break_t)
 T C_PhysPropClientside::SetPhysicsDamageTable(char const*)
 T C_PhysPropClientside::SetPhysicsMode(int)
 T C_PhysPropClientside::SetPropDataBlocksLOS(bool)
 T C_PhysPropClientside::SetPropDataIsAIWalkable(bool)
 T C_PhysPropClientside::Spawn()
 T C_PhysPropClientside::StartFadeOut(float)
 T C_PhysPropClientside::StartTouch(C_BaseEntity*)
 T C_PhysPropClientside::~C_PhysPropClientside()
 T C_PhysicsProp::C_PhysicsProp()
 T C_PhysicsProp::GetClientClass()
 T C_PhysicsProp::OnInternalDrawModel(ClientModelRenderInfo_t*)
 T C_PhysicsProp::YouForgotToImplementOrDeclareClientClass()
 T C_PhysicsProp::~C_PhysicsProp()
 T C_Plasma::AddEntity()
 T C_Plasma::AddFlames()
 T C_Plasma::C_Plasma()
 T C_Plasma::GetClientClass()
 T C_Plasma::OnDataChanged(DataUpdateType_t)
 T C_Plasma::ShouldDraw()
 T C_Plasma::Start()
 T C_Plasma::Update()
 T C_Plasma::UpdateAnimation()
 T C_Plasma::UpdateFlames()
 T C_Plasma::YouForgotToImplementOrDeclareClientClass()
 T C_Plasma::~C_Plasma()
 T C_PlasmaBeamNode::AddEntity()
 T C_PlasmaBeamNode::C_PlasmaBeamNode()
 T C_PlasmaBeamNode::ClientThink()
 T C_PlasmaBeamNode::GetClientClass()
 T C_PlasmaBeamNode::OnDataChanged(DataUpdateType_t)
 T C_PlasmaBeamNode::ShouldDraw()
 T C_PlasmaBeamNode::YouForgotToImplementOrDeclareClientClass()
 T C_PlasmaBeamNode::~C_PlasmaBeamNode()
 T C_PlasmaSprite::~C_PlasmaSprite()
 T C_PlayerResource::ClientThink()
 T C_PlayerResource::GetClientClass()
 T C_PlayerResource::GetDeaths(int)
 T C_PlayerResource::GetFrags(int)
 T C_PlayerResource::GetHealth(int)
 T C_PlayerResource::GetPing(int)
 T C_PlayerResource::GetPlayerName(int)
 T C_PlayerResource::GetPlayerScore(int)
 T C_PlayerResource::GetPredDescMap()
 T C_PlayerResource::GetTeam(int)
 T C_PlayerResource::GetTeamColor(int)
 T C_PlayerResource::GetTeamName(int)
 T C_PlayerResource::GetTeamScore(int)
 T C_PlayerResource::IsAlive(int)
 T C_PlayerResource::IsConnected(int)
 T C_PlayerResource::IsFakePlayer(int)
 T C_PlayerResource::IsHLTV(int)
 T C_PlayerResource::IsLocalPlayer(int)
 T C_PlayerResource::IsReplay(int)
 T C_PlayerResource::OnDataChanged(DataUpdateType_t)
 T C_PlayerResource::UpdatePlayerName(int)
 T C_PlayerResource::YouForgotToImplementOrDeclareClientClass()
 T C_PlayerResource::~C_PlayerResource()
 T C_PointCamera::GetClientClass()
 T C_PointCamera::GetFOV()
 T C_PointCamera::GetFogColor(unsigned char&, unsigned char&, unsigned char&)
 T C_PointCamera::GetFogEnd()
 T C_PointCamera::GetFogMaxDensity()
 T C_PointCamera::GetFogStart()
 T C_PointCamera::GetToolRecordingState(KeyValues*)
 T C_PointCamera::IsActive()
 T C_PointCamera::IsFogEnabled()
 T C_PointCamera::ShouldDraw()
 T C_PointCamera::YouForgotToImplementOrDeclareClientClass()
 T C_PointCamera::~C_PointCamera()
 T C_PointCommentaryNode::AddAndLockCommentaryHudGroup()
 T C_PointCommentaryNode::GetClientClass()
 T C_PointCommentaryNode::GetDataDescMap()
 T C_PointCommentaryNode::OnDataChanged(DataUpdateType_t)
 T C_PointCommentaryNode::OnPreDataChanged(DataUpdateType_t)
 T C_PointCommentaryNode::OnRestore()
 T C_PointCommentaryNode::RemoveAndUnlockCommentaryHudGroup()
 T C_PointCommentaryNode::SetDormant(bool)
 T C_PointCommentaryNode::TestCollision(Ray_t const&, unsigned int, CGameTrace&)
 T C_PointCommentaryNode::UpdateOnRemove()
 T C_PointCommentaryNode::YouForgotToImplementOrDeclareClientClass()
 T C_PointCommentaryNode::~C_PointCommentaryNode()
 T C_PoseController::ClientThink()
 T C_PoseController::GetClientClass()
 T C_PoseController::OnDataChanged(DataUpdateType_t)
 T C_PoseController::SetCurrentPose(float)
 T C_PoseController::Spawn()
 T C_PoseController::UpdateModulation()
 T C_PoseController::YouForgotToImplementOrDeclareClientClass()
 T C_PoseController::~C_PoseController()
 T C_PropAirboat::DampenEyePosition(Vector&, QAngle&)
 T C_PropAirboat::DampenForwardMotion(Vector&, QAngle&, float)
 T C_PropAirboat::DrawHudElements()
 T C_PropAirboat::DrawModel(int)
 T C_PropAirboat::DrawPontoonSplash(Vector, Vector, float)
 T C_PropAirboat::DrawPontoonWake(Vector, Vector, float, float)
 T C_PropAirboat::DrawSegment(BeamSeg_t const&, Vector const&)
 T C_PropAirboat::DrawWake()
 T C_PropAirboat::GetClientClass()
 T C_PropAirboat::GetDataDescMap()
 T C_PropAirboat::GetJoystickResponseCurve() const
 T C_PropAirboat::GetPrimaryAmmoClip() const
 T C_PropAirboat::GetPrimaryAmmoCount() const
 T C_PropAirboat::GetPrimaryAmmoType() const
 T C_PropAirboat::OnEnteredVehicle(C_BasePlayer*)
 T C_PropAirboat::PrimaryAmmoUsesClips() const
 T C_PropAirboat::Simulate()
 T C_PropAirboat::UpdateHeadlight()
 T C_PropAirboat::UpdateViewAngles(C_BasePlayer*, CUserCmd*)
 T C_PropAirboat::UpdateWake()
 T C_PropAirboat::YouForgotToImplementOrDeclareClientClass()
 T C_PropAirboat::~C_PropAirboat()
 T C_PropCannon::DrawHudElements()
 T C_PropCannon::FinishMove(C_BasePlayer*, CUserCmd*, CMoveData*)
 T C_PropCannon::GetClientClass()
 T C_PropCannon::GetClientVehicle()
 T C_PropCannon::GetDataDescMap()
 T C_PropCannon::GetJoystickResponseCurve() const
 T C_PropCannon::GetPassenger(int)
 T C_PropCannon::GetPassengerRole(C_BaseCombatCharacter*)
 T C_PropCannon::GetPrimaryAmmoClip() const
 T C_PropCannon::GetPrimaryAmmoCount() const
 T C_PropCannon::GetPrimaryAmmoType() const
 T C_PropCannon::GetRenderBounds(Vector&, Vector&)
 T C_PropCannon::GetVehicleClipPlanes(float&, float&) const
 T C_PropCannon::GetVehicleEnt()
 T C_PropCannon::GetVehicleFOV(float&)
 T C_PropCannon::GetVehicleViewPosition(int, Vector*, QAngle*, float*)
 T C_PropCannon::IsPassengerUsingStandardWeapons(int)
 T C_PropCannon::IsPredicted() const
 T C_PropCannon::IsSelfAnimating()
 T C_PropCannon::ItemPostFrame(C_BasePlayer*)
 T C_PropCannon::PreDataUpdate(DataUpdateType_t)
 T C_PropCannon::PrimaryAmmoUsesClips() const
 T C_PropCannon::ProcessMovement(C_BasePlayer*, CMoveData*)
 T C_PropCannon::SetupMove(C_BasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T C_PropCannon::UpdateViewAngles(C_BasePlayer*, CUserCmd*)
 T C_PropCannon::YouForgotToImplementOrDeclareClientClass()
 T C_PropCannon::~C_PropCannon()
 T C_PropCombineBall::DrawFlicker()
 T C_PropCombineBall::DrawModel(int)
 T C_PropCombineBall::DrawMotionBlur()
 T C_PropCombineBall::GetClientClass()
 T C_PropCombineBall::GetRenderGroup()
 T C_PropCombineBall::InitMaterials()
 T C_PropCombineBall::OnDataChanged(DataUpdateType_t)
 T C_PropCombineBall::YouForgotToImplementOrDeclareClientClass()
 T C_PropCombineBall::~C_PropCombineBall()
 T C_PropCrane::DrawHudElements()
 T C_PropCrane::FinishMove(C_BasePlayer*, CUserCmd*, CMoveData*)
 T C_PropCrane::GetClientClass()
 T C_PropCrane::GetClientVehicle()
 T C_PropCrane::GetDataDescMap()
 T C_PropCrane::GetJoystickResponseCurve() const
 T C_PropCrane::GetPassenger(int)
 T C_PropCrane::GetPassengerRole(C_BaseCombatCharacter*)
 T C_PropCrane::GetPrimaryAmmoClip() const
 T C_PropCrane::GetPrimaryAmmoCount() const
 T C_PropCrane::GetPrimaryAmmoType() const
 T C_PropCrane::GetRenderBounds(Vector&, Vector&)
 T C_PropCrane::GetVehicleClipPlanes(float&, float&) const
 T C_PropCrane::GetVehicleEnt()
 T C_PropCrane::GetVehicleFOV(float&)
 T C_PropCrane::GetVehicleViewPosition(int, Vector*, QAngle*, float*)
 T C_PropCrane::IsPassengerUsingStandardWeapons(int)
 T C_PropCrane::IsPredicted() const
 T C_PropCrane::IsSelfAnimating()
 T C_PropCrane::ItemPostFrame(C_BasePlayer*)
 T C_PropCrane::PostDataUpdate(DataUpdateType_t)
 T C_PropCrane::PreDataUpdate(DataUpdateType_t)
 T C_PropCrane::PrimaryAmmoUsesClips() const
 T C_PropCrane::ProcessMovement(C_BasePlayer*, CMoveData*)
 T C_PropCrane::SetupMove(C_BasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T C_PropCrane::UpdateViewAngles(C_BasePlayer*, CUserCmd*)
 T C_PropCrane::YouForgotToImplementOrDeclareClientClass()
 T C_PropCrane::~C_PropCrane()
 T C_PropJeep::DampenEyePosition(Vector&, QAngle&)
 T C_PropJeep::DampenForwardMotion(Vector&, QAngle&, float)
 T C_PropJeep::GetClientClass()
 T C_PropJeep::Simulate()
 T C_PropJeep::UpdateViewAngles(C_BasePlayer*, CUserCmd*)
 T C_PropJeep::YouForgotToImplementOrDeclareClientClass()
 T C_PropJeep::~C_PropJeep()
 T C_PropVehicleChoreoGeneric::DrawHudElements()
 T C_PropVehicleChoreoGeneric::FinishMove(C_BasePlayer*, CUserCmd*, CMoveData*)
 T C_PropVehicleChoreoGeneric::GetClientClass()
 T C_PropVehicleChoreoGeneric::GetClientVehicle()
 T C_PropVehicleChoreoGeneric::GetDataDescMap()
 T C_PropVehicleChoreoGeneric::GetJoystickResponseCurve() const
 T C_PropVehicleChoreoGeneric::GetPassenger(int)
 T C_PropVehicleChoreoGeneric::GetPassengerRole(C_BaseCombatCharacter*)
 T C_PropVehicleChoreoGeneric::GetPrimaryAmmoClip() const
 T C_PropVehicleChoreoGeneric::GetPrimaryAmmoCount() const
 T C_PropVehicleChoreoGeneric::GetPrimaryAmmoType() const
 T C_PropVehicleChoreoGeneric::GetVehicleClipPlanes(float&, float&) const
 T C_PropVehicleChoreoGeneric::GetVehicleEnt()
 T C_PropVehicleChoreoGeneric::GetVehicleFOV(float&)
 T C_PropVehicleChoreoGeneric::GetVehicleViewPosition(int, Vector*, QAngle*, float*)
 T C_PropVehicleChoreoGeneric::IsPassengerUsingStandardWeapons(int)
 T C_PropVehicleChoreoGeneric::IsPredicted() const
 T C_PropVehicleChoreoGeneric::IsSelfAnimating()
 T C_PropVehicleChoreoGeneric::ItemPostFrame(C_BasePlayer*)
 T C_PropVehicleChoreoGeneric::PostDataUpdate(DataUpdateType_t)
 T C_PropVehicleChoreoGeneric::PreDataUpdate(DataUpdateType_t)
 T C_PropVehicleChoreoGeneric::PrimaryAmmoUsesClips() const
 T C_PropVehicleChoreoGeneric::ProcessMovement(C_BasePlayer*, CMoveData*)
 T C_PropVehicleChoreoGeneric::SetupMove(C_BasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T C_PropVehicleChoreoGeneric::UpdateViewAngles(C_BasePlayer*, CUserCmd*)
 T C_PropVehicleChoreoGeneric::YouForgotToImplementOrDeclareClientClass()
 T C_PropVehicleChoreoGeneric::~C_PropVehicleChoreoGeneric()
 T C_PropVehicleDriveable::C_PropVehicleDriveable()
 T C_PropVehicleDriveable::ClientThink()
 T C_PropVehicleDriveable::DampenEyePosition(Vector&, QAngle&)
 T C_PropVehicleDriveable::DrawHudElements()
 T C_PropVehicleDriveable::FinishMove(C_BasePlayer*, CUserCmd*, CMoveData*)
 T C_PropVehicleDriveable::GetClientClass()
 T C_PropVehicleDriveable::GetClientVehicle()
 T C_PropVehicleDriveable::GetDataDescMap()
 T C_PropVehicleDriveable::GetJoystickResponseCurve() const
 T C_PropVehicleDriveable::GetPassenger(int)
 T C_PropVehicleDriveable::GetPassengerRole(C_BaseCombatCharacter*)
 T C_PropVehicleDriveable::GetPrimaryAmmoClip() const
 T C_PropVehicleDriveable::GetPrimaryAmmoCount() const
 T C_PropVehicleDriveable::GetPrimaryAmmoType() const
 T C_PropVehicleDriveable::GetVehicleClipPlanes(float&, float&) const
 T C_PropVehicleDriveable::GetVehicleEnt()
 T C_PropVehicleDriveable::GetVehicleFOV(float&)
 T C_PropVehicleDriveable::GetVehicleViewPosition(int, Vector*, QAngle*, float*)
 T C_PropVehicleDriveable::HasGun()
 T C_PropVehicleDriveable::IsPassengerUsingStandardWeapons(int)
 T C_PropVehicleDriveable::IsPredicted() const
 T C_PropVehicleDriveable::IsSelfAnimating()
 T C_PropVehicleDriveable::ItemPostFrame(C_BasePlayer*)
 T C_PropVehicleDriveable::OnDataChanged(DataUpdateType_t)
 T C_PropVehicleDriveable::OnEnteredVehicle(C_BaseCombatCharacter*)
 T C_PropVehicleDriveable::OnExitedVehicle(C_BaseCombatCharacter*)
 T C_PropVehicleDriveable::OnPreDataChanged(DataUpdateType_t)
 T C_PropVehicleDriveable::PrimaryAmmoUsesClips() const
 T C_PropVehicleDriveable::ProcessMovement(C_BasePlayer*, CMoveData*)
 T C_PropVehicleDriveable::RestrictView(float*, float*, float*, QAngle&)
 T C_PropVehicleDriveable::SetVehicleFOV(float)
 T C_PropVehicleDriveable::SetupMove(C_BasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T C_PropVehicleDriveable::ShadowCastType()
 T C_PropVehicleDriveable::UpdateViewAngles(C_BasePlayer*, CUserCmd*)
 T C_PropVehicleDriveable::YouForgotToImplementOrDeclareClientClass()
 T C_PropVehicleDriveable::~C_PropVehicleDriveable()
 T C_PropVehiclePrisonerPod::DrawHudElements()
 T C_PropVehiclePrisonerPod::FinishMove(C_BasePlayer*, CUserCmd*, CMoveData*)
 T C_PropVehiclePrisonerPod::GetClientClass()
 T C_PropVehiclePrisonerPod::GetClientVehicle()
 T C_PropVehiclePrisonerPod::GetDataDescMap()
 T C_PropVehiclePrisonerPod::GetJoystickResponseCurve() const
 T C_PropVehiclePrisonerPod::GetPassenger(int)
 T C_PropVehiclePrisonerPod::GetPassengerRole(C_BaseCombatCharacter*)
 T C_PropVehiclePrisonerPod::GetPrimaryAmmoClip() const
 T C_PropVehiclePrisonerPod::GetPrimaryAmmoCount() const
 T C_PropVehiclePrisonerPod::GetPrimaryAmmoType() const
 T C_PropVehiclePrisonerPod::GetVehicleClipPlanes(float&, float&) const
 T C_PropVehiclePrisonerPod::GetVehicleEnt()
 T C_PropVehiclePrisonerPod::GetVehicleFOV(float&)
 T C_PropVehiclePrisonerPod::GetVehicleViewPosition(int, Vector*, QAngle*, float*)
 T C_PropVehiclePrisonerPod::IsPassengerUsingStandardWeapons(int)
 T C_PropVehiclePrisonerPod::IsPredicted() const
 T C_PropVehiclePrisonerPod::IsSelfAnimating()
 T C_PropVehiclePrisonerPod::ItemPostFrame(C_BasePlayer*)
 T C_PropVehiclePrisonerPod::PostDataUpdate(DataUpdateType_t)
 T C_PropVehiclePrisonerPod::PreDataUpdate(DataUpdateType_t)
 T C_PropVehiclePrisonerPod::PrimaryAmmoUsesClips() const
 T C_PropVehiclePrisonerPod::ProcessMovement(C_BasePlayer*, CMoveData*)
 T C_PropVehiclePrisonerPod::SetupMove(C_BasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T C_PropVehiclePrisonerPod::UpdateViewAngles(C_BasePlayer*, CUserCmd*)
 T C_PropVehiclePrisonerPod::YouForgotToImplementOrDeclareClientClass()
 T C_PropVehiclePrisonerPod::~C_PropVehiclePrisonerPod()
 T C_QuadraticBeam::DrawModel(int)
 T C_QuadraticBeam::GetClientClass()
 T C_QuadraticBeam::GetRenderBounds(Vector&, Vector&)
 T C_QuadraticBeam::ShouldDraw()
 T C_QuadraticBeam::YouForgotToImplementOrDeclareClientClass()
 T C_QuadraticBeam::~C_QuadraticBeam()
 T C_RagdollManager::GetClientClass()
 T C_RagdollManager::OnDataChanged(DataUpdateType_t)
 T C_RagdollManager::YouForgotToImplementOrDeclareClientClass()
 T C_RagdollManager::~C_RagdollManager()
 T C_RecipientFilter::AddAllPlayers()
 T C_RecipientFilter::AddRecipient(C_BasePlayer*)
 T C_RecipientFilter::AddRecipientsByPAS(Vector const&)
 T C_RecipientFilter::AddRecipientsByPVS(Vector const&)
 T C_RecipientFilter::C_RecipientFilter()
 T C_RecipientFilter::CopyFrom(C_RecipientFilter const&)
 T C_RecipientFilter::GetRecipientCount() const
 T C_RecipientFilter::GetRecipientIndex(int) const
 T C_RecipientFilter::IsInitMessage() const
 T C_RecipientFilter::IsReliable() const
 T C_RecipientFilter::Reset()
 T C_RecipientFilter::UsePredictionRules()
 T C_RecipientFilter::~C_RecipientFilter()
 T C_RocketTrail::GetAimEntOrigin(IClientEntity*, Vector*, QAngle*)
 T C_RocketTrail::GetClientClass()
 T C_RocketTrail::OnDataChanged(DataUpdateType_t)
 T C_RocketTrail::RenderParticles(CParticleRenderIterator*)
 T C_RocketTrail::SimulateParticles(CParticleSimulateIterator*)
 T C_RocketTrail::Start(CParticleMgr*, IPrototypeArgAccess*)
 T C_RocketTrail::Update(float)
 T C_RocketTrail::YouForgotToImplementOrDeclareClientClass()
 T C_RocketTrail::~C_RocketTrail()
 T C_RollerMine::DrawModel(int)
 T C_RollerMine::GetClientClass()
 T C_RollerMine::GetRenderGroup()
 T C_RollerMine::YouForgotToImplementOrDeclareClientClass()
 T C_RollerMine::~C_RollerMine()
 T C_RopeKeyframe::BuildRope(RopeSegData_t*, Vector const&, Vector const&, C_RopeKeyframe::BuildRopeQueuedData_t*, bool)
 T C_RopeKeyframe::CPhysicsDelegate::ApplyConstraints(CSimplePhysics::CNode*, int)
 T C_RopeKeyframe::CPhysicsDelegate::GetNodeForces(CSimplePhysics::CNode*, int, Vector*)
 T C_RopeKeyframe::C_RopeKeyframe()
 T C_RopeKeyframe::CalcLightValues()
 T C_RopeKeyframe::CalculateEndPointAttachment(C_BaseEntity*, int, Vector&, QAngle*)
 T C_RopeKeyframe::ClientThink()
 T C_RopeKeyframe::ConstrainNode(Vector const&, Vector const&, Vector const&, float)
 T C_RopeKeyframe::ConstrainNodesBetweenEndpoints()
 T C_RopeKeyframe::Create(C_BaseEntity*, C_BaseEntity*, int, int, float, char const*, int, int)
 T C_RopeKeyframe::CreateFromKeyValues(C_BaseAnimating*, KeyValues*)
 T C_RopeKeyframe::DetectRestingState(bool&)
 T C_RopeKeyframe::DrawModel(int)
 T C_RopeKeyframe::FinishInit(char const*)
 T C_RopeKeyframe::GetAttachment(int, Vector&)
 T C_RopeKeyframe::GetAttachment(int, Vector&, QAngle&)
 T C_RopeKeyframe::GetAttachment(int, matrix3x4_t&)
 T C_RopeKeyframe::GetAttachmentVelocity(int, Vector&, Quaternion&)
 T C_RopeKeyframe::GetClientClass()
 T C_RopeKeyframe::GetEndPointAttachment(int, Vector&, QAngle&)
 T C_RopeKeyframe::GetEndPointPos(int, Vector&)
 T C_RopeKeyframe::InitRopePhysics()
 T C_RopeKeyframe::OnDataChanged(DataUpdateType_t)
 T C_RopeKeyframe::ReceiveMessage(int, bf_read&)
 T C_RopeKeyframe::ShouldDraw()
 T C_RopeKeyframe::UpdateBBox()
 T C_RopeKeyframe::WorldSpaceCenter() const
 T C_RopeKeyframe::YouForgotToImplementOrDeclareClientClass()
 T C_RopeKeyframe::~C_RopeKeyframe()
 T C_RotorWashEmitter::ClientThink()
 T C_RotorWashEmitter::GetClientClass()
 T C_RotorWashEmitter::InitSpawner()
 T C_RotorWashEmitter::OnDataChanged(DataUpdateType_t)
 T C_RotorWashEmitter::YouForgotToImplementOrDeclareClientClass()
 T C_RotorWashEmitter::~C_RotorWashEmitter()
 T C_SceneEntity::C_SceneEntity()
 T C_SceneEntity::CheckEvent(float, CChoreoScene*, CChoreoEvent*)
 T C_SceneEntity::CheckQueuedEvents()
 T C_SceneEntity::ClearSceneEvents(CChoreoScene*, bool)
 T C_SceneEntity::ClientThink()
 T C_SceneEntity::DispatchEndExpression(CChoreoScene*, C_BaseFlex*, CChoreoEvent*)
 T C_SceneEntity::DispatchEndFlexAnimation(CChoreoScene*, C_BaseFlex*, CChoreoEvent*)
 T C_SceneEntity::DispatchEndGesture(CChoreoScene*, C_BaseFlex*, CChoreoEvent*)
 T C_SceneEntity::DispatchEndSequence(CChoreoScene*, C_BaseFlex*, CChoreoEvent*)
 T C_SceneEntity::DispatchEndSpeak(CChoreoScene*, C_BaseFlex*, CChoreoEvent*)
 T C_SceneEntity::DispatchProcessGesture(CChoreoScene*, C_BaseFlex*, CChoreoEvent*)
 T C_SceneEntity::DispatchProcessLoop(CChoreoScene*, CChoreoEvent*)
 T C_SceneEntity::DispatchProcessSequence(CChoreoScene*, C_BaseFlex*, CChoreoEvent*)
 T C_SceneEntity::DispatchStartExpression(CChoreoScene*, C_BaseFlex*, CChoreoEvent*)
 T C_SceneEntity::DispatchStartFlexAnimation(CChoreoScene*, C_BaseFlex*, CChoreoEvent*)
 T C_SceneEntity::DispatchStartGesture(CChoreoScene*, C_BaseFlex*, CChoreoEvent*)
 T C_SceneEntity::DispatchStartSequence(CChoreoScene*, C_BaseFlex*, CChoreoEvent*)
 T C_SceneEntity::DispatchStartSpeak(CChoreoScene*, C_BaseFlex*, CChoreoEvent*, soundlevel_t)
 T C_SceneEntity::DoThink(float)
 T C_SceneEntity::EndEvent(float, CChoreoScene*, CChoreoEvent*)
 T C_SceneEntity::GetClientClass()
 T C_SceneEntity::LoadScene(char const*)
 T C_SceneEntity::PostDataUpdate(DataUpdateType_t)
 T C_SceneEntity::PreDataUpdate(DataUpdateType_t)
 T C_SceneEntity::PrefetchAnimBlocks(CChoreoScene*)
 T C_SceneEntity::ProcessEvent(float, CChoreoScene*, CChoreoEvent*)
 T C_SceneEntity::QueueStartEvent(float, CChoreoScene*, CChoreoEvent*)
 T C_SceneEntity::ResetActorFlexesForScene()
 T C_SceneEntity::SetupClientOnlyScene(char const*, C_BaseFlex*, bool)
 T C_SceneEntity::StartEvent(float, CChoreoScene*, CChoreoEvent*)
 T C_SceneEntity::StopClientOnlyScene()
 T C_SceneEntity::UnloadScene()
 T C_SceneEntity::YouForgotToImplementOrDeclareClientClass()
 T C_SceneEntity::~C_SceneEntity()
 T C_ScriptIntro::ClientThink()
 T C_ScriptIntro::GetClientClass()
 T C_ScriptIntro::PostDataUpdate(DataUpdateType_t)
 T C_ScriptIntro::YouForgotToImplementOrDeclareClientClass()
 T C_ScriptIntro::~C_ScriptIntro()
 T C_ServerRagdoll::AccumulateLayers(IBoneSetup&, Vector*, Quaternion*, float)
 T C_ServerRagdoll::AddEntity()
 T C_ServerRagdoll::BuildTransformations(CStudioHdr*, Vector*, Quaternion*, matrix3x4_t const&, int, CBoneBitList&)
 T C_ServerRagdoll::C_ServerRagdoll()
 T C_ServerRagdoll::GetClientClass()
 T C_ServerRagdoll::GetClientSideFade()
 T C_ServerRagdoll::GetRenderBounds(Vector&, Vector&)
 T C_ServerRagdoll::InternalDrawModel(int)
 T C_ServerRagdoll::LastBoneChangedTime()
 T C_ServerRagdoll::OnNewModel()
 T C_ServerRagdoll::PostDataUpdate(DataUpdateType_t)
 T C_ServerRagdoll::SetupWeights(matrix3x4_t const*, int, float*, float*)
 T C_ServerRagdoll::UpdateOnRemove()
 T C_ServerRagdoll::YouForgotToImplementOrDeclareClientClass()
 T C_ServerRagdoll::~C_ServerRagdoll()
 T C_ServerRagdollAttached::BuildTransformations(CStudioHdr*, Vector*, Quaternion*, matrix3x4_t const&, int, CBoneBitList&)
 T C_ServerRagdollAttached::GetClientClass()
 T C_ServerRagdollAttached::LastBoneChangedTime()
 T C_ServerRagdollAttached::OnDataChanged(DataUpdateType_t)
 T C_ServerRagdollAttached::SetupBones(matrix3x4_t*, int, int, float)
 T C_ServerRagdollAttached::YouForgotToImplementOrDeclareClientClass()
 T C_ServerRagdollAttached::~C_ServerRagdollAttached()
 T C_ShadowControl::GetClientClass()
 T C_ShadowControl::OnDataChanged(DataUpdateType_t)
 T C_ShadowControl::ShouldDraw()
 T C_ShadowControl::YouForgotToImplementOrDeclareClientClass()
 T C_ShadowControl::~C_ShadowControl()
 T C_SingleplayRules::Damage_GetNoPhysicsForce()
 T C_SingleplayRules::Damage_GetShouldGibCorpse()
 T C_SingleplayRules::Damage_GetShouldNotBleed()
 T C_SingleplayRules::Damage_GetShowOnHud()
 T C_SingleplayRules::Damage_GetTimeBased()
 T C_SingleplayRules::Damage_IsTimeBased(int)
 T C_SingleplayRules::Damage_NoPhysicsForce(int)
 T C_SingleplayRules::Damage_ShouldGibCorpse(int)
 T C_SingleplayRules::Damage_ShouldNotBleed(int)
 T C_SingleplayRules::Damage_ShowOnHUD(int)
 T C_SingleplayRules::IsMultiplayer()
 T C_SlideshowDisplay::BuildSlideShowImagesList()
 T C_SlideshowDisplay::ClientThink()
 T C_SlideshowDisplay::GetClientClass()
 T C_SlideshowDisplay::GetMaterialIndex(int)
 T C_SlideshowDisplay::NumMaterials()
 T C_SlideshowDisplay::OnDataChanged(DataUpdateType_t)
 T C_SlideshowDisplay::Spawn()
 T C_SlideshowDisplay::YouForgotToImplementOrDeclareClientClass()
 T C_SlideshowDisplay::~C_SlideshowDisplay()
 T C_SmokeStack::C_SmokeStack()
 T C_SmokeStack::ClientThink()
 T C_SmokeStack::GetClientClass()
 T C_SmokeStack::GetPropEditInfo(RecvTable**, void**)
 T C_SmokeStack::OnDataChanged(DataUpdateType_t)
 T C_SmokeStack::RenderParticles(CParticleRenderIterator*)
 T C_SmokeStack::SimulateParticles(CParticleSimulateIterator*)
 T C_SmokeStack::Start(CParticleMgr*, IPrototypeArgAccess*)
 T C_SmokeStack::StartRender(VMatrix&)
 T C_SmokeStack::Update(float)
 T C_SmokeStack::YouForgotToImplementOrDeclareClientClass()
 T C_SmokeStack::~C_SmokeStack()
 T C_SmokeTrail::C_SmokeTrail()
 T C_SmokeTrail::CleanupToolRecordingState(KeyValues*)
 T C_SmokeTrail::GetAimEntOrigin(IClientEntity*, Vector*, QAngle*)
 T C_SmokeTrail::GetClientClass()
 T C_SmokeTrail::OnDataChanged(DataUpdateType_t)
 T C_SmokeTrail::RenderParticles(CParticleRenderIterator*)
 T C_SmokeTrail::SetEmit(bool)
 T C_SmokeTrail::SetSpawnRate(float)
 T C_SmokeTrail::SimulateParticles(CParticleSimulateIterator*)
 T C_SmokeTrail::Start(CParticleMgr*, IPrototypeArgAccess*)
 T C_SmokeTrail::Update(float)
 T C_SmokeTrail::YouForgotToImplementOrDeclareClientClass()
 T C_SmokeTrail::~C_SmokeTrail()
 T C_SoundscapeSystem::AddLoopingSound(char const*, bool, float, soundlevel_t, int, Vector const&)
 T C_SoundscapeSystem::AddRandomSound(randomsound_t const&)
 T C_SoundscapeSystem::AddSoundScapeFile(char const*)
 T C_SoundscapeSystem::ForceSoundscape(char const*, float)
 T C_SoundscapeSystem::GenerateRandomSoundPosition()
 T C_SoundscapeSystem::GetAudioParams(audioparams_t&) const
 T C_SoundscapeSystem::Init()
 T C_SoundscapeSystem::LevelInitPostEntity()
 T C_SoundscapeSystem::LevelInitPreEntity()
 T C_SoundscapeSystem::LevelShutdownPostEntity()
 T C_SoundscapeSystem::LevelShutdownPreEntity()
 T C_SoundscapeSystem::Name()
 T C_SoundscapeSystem::OnRestore()
 T C_SoundscapeSystem::OnSave()
 T C_SoundscapeSystem::OnStopAllSounds()
 T C_SoundscapeSystem::PlayRandomSound(randomsound_t&)
 T C_SoundscapeSystem::PostRender()
 T C_SoundscapeSystem::PreRender()
 T C_SoundscapeSystem::PrintDebugInfo()
 T C_SoundscapeSystem::ProcessPlayLooping(KeyValues*, subsoundscapeparams_t const&)
 T C_SoundscapeSystem::ProcessPlayRandom(KeyValues*, subsoundscapeparams_t const&)
 T C_SoundscapeSystem::ProcessPlaySoundscape(KeyValues*, subsoundscapeparams_t&)
 T C_SoundscapeSystem::SafeRemoveIfDesired()
 T C_SoundscapeSystem::Shutdown()
 T C_SoundscapeSystem::StartNewSoundscape(KeyValues*)
 T C_SoundscapeSystem::StartSubSoundscape(KeyValues*, subsoundscapeparams_t&)
 T C_SoundscapeSystem::TouchPlayLooping(KeyValues*)
 T C_SoundscapeSystem::TouchPlayRandom(KeyValues*)
 T C_SoundscapeSystem::TouchWaveFiles(KeyValues*)
 T C_SoundscapeSystem::Update(float)
 T C_SoundscapeSystem::UpdateAudioParams(audioparams_t&)
 T C_SoundscapeSystem::UpdateLoopingSound(loopingsound_t&)
 T C_SoundscapeSystem::UpdateLoopingSounds(float)
 T C_SoundscapeSystem::~C_SoundscapeSystem()
 T C_SporeExplosion::AddParticles()
 T C_SporeExplosion::GetClientClass()
 T C_SporeExplosion::OnDataChanged(DataUpdateType_t)
 T C_SporeExplosion::RenderParticles(CParticleRenderIterator*)
 T C_SporeExplosion::SimulateParticles(CParticleSimulateIterator*)
 T C_SporeExplosion::Start(CParticleMgr*, IPrototypeArgAccess*)
 T C_SporeExplosion::Update(float)
 T C_SporeExplosion::YouForgotToImplementOrDeclareClientClass()
 T C_SporeExplosion::~C_SporeExplosion()
 T C_SporeTrail::AddParticles()
 T C_SporeTrail::GetAimEntOrigin(IClientEntity*, Vector*, QAngle*)
 T C_SporeTrail::GetClientClass()
 T C_SporeTrail::OnDataChanged(DataUpdateType_t)
 T C_SporeTrail::RenderParticles(CParticleRenderIterator*)
 T C_SporeTrail::SimulateParticles(CParticleSimulateIterator*)
 T C_SporeTrail::Start(CParticleMgr*, IPrototypeArgAccess*)
 T C_SporeTrail::StartRender(VMatrix&)
 T C_SporeTrail::Update(float)
 T C_SporeTrail::YouForgotToImplementOrDeclareClientClass()
 T C_SporeTrail::~C_SporeTrail()
 T C_SpotlightEnd::ClientThink()
 T C_SpotlightEnd::GetClientClass()
 T C_SpotlightEnd::OnDataChanged(DataUpdateType_t)
 T C_SpotlightEnd::ShouldDraw()
 T C_SpotlightEnd::ShouldInterpolate()
 T C_SpotlightEnd::YouForgotToImplementOrDeclareClientClass()
 T C_SpotlightEnd::~C_SpotlightEnd()
 T C_Sprite::AnimateThink()
 T C_Sprite::C_Sprite()
 T C_Sprite::ClientThink()
 T C_Sprite::ComputeWorldSpaceSurroundingBox(Vector*, Vector*)
 T C_Sprite::DrawModel(int)
 T C_Sprite::GetClientClass()
 T C_Sprite::GetPredDescMap()
 T C_Sprite::GetRenderBounds(Vector&, Vector&)
 T C_Sprite::GetRenderBrightness()
 T C_Sprite::GetRenderOrigin()
 T C_Sprite::GetRenderScale()
 T C_Sprite::GetToolRecordingState(KeyValues*)
 T C_Sprite::GlowBlend(CEngineSprite*, Vector const&, int, int, int, float*)
 T C_Sprite::OnDataChanged(DataUpdateType_t)
 T C_Sprite::Precache()
 T C_Sprite::SetBrightness(int, float)
 T C_Sprite::SetModel(char const*)
 T C_Sprite::SetScale(float, float)
 T C_Sprite::Spawn()
 T C_Sprite::TurnOn()
 T C_Sprite::YouForgotToImplementOrDeclareClientClass()
 T C_Sprite::~C_Sprite()
 T C_SpriteOriented::GetClientClass()
 T C_SpriteOriented::IsTransparent()
 T C_SpriteOriented::YouForgotToImplementOrDeclareClientClass()
 T C_SpriteOriented::~C_SpriteOriented()
 T C_SpriteRenderer::DrawSprite(IClientEntity*, model_t const*, Vector const&, QAngle const&, float, IClientEntity*, int, int, int, int, int, int, int, float, float)
 T C_SpriteRenderer::GetSpriteAxes(C_SpriteRenderer::SPRITETYPE, Vector const&, QAngle const&, Vector&, Vector&, Vector&)
 T C_SpriteRenderer::GlowBlend(CEngineSprite*, Vector const&, int, int, int, float*)
 T C_SpriteTrail::C_SpriteTrail()
 T C_SpriteTrail::ClientThink()
 T C_SpriteTrail::ConvertSkybox()
 T C_SpriteTrail::DrawModel(int)
 T C_SpriteTrail::GetClientClass()
 T C_SpriteTrail::GetDataDescMap()
 T C_SpriteTrail::GetPredDescMap()
 T C_SpriteTrail::GetRenderAngles()
 T C_SpriteTrail::GetRenderBounds(Vector&, Vector&)
 T C_SpriteTrail::GetRenderOrigin()
 T C_SpriteTrail::OnDataChanged(DataUpdateType_t)
 T C_SpriteTrail::OnPreDataChanged(DataUpdateType_t)
 T C_SpriteTrail::Precache()
 T C_SpriteTrail::Spawn()
 T C_SpriteTrail::UpdateBoundingBox()
 T C_SpriteTrail::UpdateTrail()
 T C_SpriteTrail::ValidateEntityAttachedToPlayer(bool&)
 T C_SpriteTrail::YouForgotToImplementOrDeclareClientClass()
 T C_SpriteTrail::~C_SpriteTrail()
 T C_SteamJet::GetClientClass()
 T C_SteamJet::GetPropEditInfo(RecvTable**, void**)
 T C_SteamJet::OnDataChanged(DataUpdateType_t)
 T C_SteamJet::RenderParticles(CParticleRenderIterator*)
 T C_SteamJet::SimulateParticles(CParticleSimulateIterator*)
 T C_SteamJet::Start(CParticleMgr*, IPrototypeArgAccess*)
 T C_SteamJet::Update(float)
 T C_SteamJet::UpdateLightingRamp()
 T C_SteamJet::YouForgotToImplementOrDeclareClientClass()
 T C_SteamJet::~C_SteamJet()
 T C_Strider::C_Strider()
 T C_Strider::CalculateIKLocks(float)
 T C_Strider::ClientThink()
 T C_Strider::GetClientClass()
 T C_Strider::GetRenderBounds(Vector&, Vector&)
 T C_Strider::OnDataChanged(DataUpdateType_t)
 T C_Strider::ReceiveMessage(int, bf_read&)
 T C_Strider::YouForgotToImplementOrDeclareClientClass()
 T C_Strider::~C_Strider()
 T C_StriderFX::DrawModel(int)
 T C_StriderFX::EffectInit(int, int)
 T C_StriderFX::EffectShutdown()
 T C_StriderFX::GetRenderBounds(Vector&, Vector&)
 T C_StriderFX::LimitTime(float)
 T C_StriderFX::~C_StriderFX()
 T C_Sun::C_Sun()
 T C_Sun::GetClientClass()
 T C_Sun::OnDataChanged(DataUpdateType_t)
 T C_Sun::YouForgotToImplementOrDeclareClientClass()
 T C_Sun::~C_Sun()
 T C_SunGlowOverlay::CalcSpriteColorAndSize(float, CGlowSprite*, float*, float*, Vector*)
 T C_SunGlowOverlay::~C_SunGlowOverlay()
 T C_TEAntlionDust::GetClientClass()
 T C_TEAntlionDust::GetDustColor(Vector&)
 T C_TEAntlionDust::PostDataUpdate(DataUpdateType_t)
 T C_TEAntlionDust::RenderParticles(CParticleRenderIterator*)
 T C_TEAntlionDust::ShouldDraw()
 T C_TEAntlionDust::SimulateParticles(CParticleSimulateIterator*)
 T C_TEAntlionDust::YouForgotToImplementOrDeclareClientClass()
 T C_TEAntlionDust::~C_TEAntlionDust()
 T C_TEArmorRicochet::GetClientClass()
 T C_TEArmorRicochet::PostDataUpdate(DataUpdateType_t)
 T C_TEArmorRicochet::YouForgotToImplementOrDeclareClientClass()
 T C_TEArmorRicochet::~C_TEArmorRicochet()
 T C_TEBSPDecal::GetClientClass()
 T C_TEBSPDecal::PostDataUpdate(DataUpdateType_t)
 T C_TEBSPDecal::Precache()
 T C_TEBSPDecal::YouForgotToImplementOrDeclareClientClass()
 T C_TEBSPDecal::~C_TEBSPDecal()
 T C_TEBaseBeam::C_TEBaseBeam()
 T C_TEBaseBeam::GetClientClass()
 T C_TEBaseBeam::PostDataUpdate(DataUpdateType_t)
 T C_TEBaseBeam::PreDataUpdate(DataUpdateType_t)
 T C_TEBaseBeam::YouForgotToImplementOrDeclareClientClass()
 T C_TEBaseBeam::~C_TEBaseBeam()
 T C_TEBeamEntPoint::GetClientClass()
 T C_TEBeamEntPoint::PostDataUpdate(DataUpdateType_t)
 T C_TEBeamEntPoint::YouForgotToImplementOrDeclareClientClass()
 T C_TEBeamEntPoint::~C_TEBeamEntPoint()
 T C_TEBeamEnts::GetClientClass()
 T C_TEBeamEnts::PostDataUpdate(DataUpdateType_t)
 T C_TEBeamEnts::YouForgotToImplementOrDeclareClientClass()
 T C_TEBeamEnts::~C_TEBeamEnts()
 T C_TEBeamFollow::GetClientClass()
 T C_TEBeamFollow::PostDataUpdate(DataUpdateType_t)
 T C_TEBeamFollow::YouForgotToImplementOrDeclareClientClass()
 T C_TEBeamFollow::~C_TEBeamFollow()
 T C_TEBeamLaser::GetClientClass()
 T C_TEBeamLaser::PostDataUpdate(DataUpdateType_t)
 T C_TEBeamLaser::YouForgotToImplementOrDeclareClientClass()
 T C_TEBeamLaser::~C_TEBeamLaser()
 T C_TEBeamPoints::GetClientClass()
 T C_TEBeamPoints::PostDataUpdate(DataUpdateType_t)
 T C_TEBeamPoints::YouForgotToImplementOrDeclareClientClass()
 T C_TEBeamPoints::~C_TEBeamPoints()
 T C_TEBeamRing::GetClientClass()
 T C_TEBeamRing::PostDataUpdate(DataUpdateType_t)
 T C_TEBeamRing::YouForgotToImplementOrDeclareClientClass()
 T C_TEBeamRing::~C_TEBeamRing()
 T C_TEBeamRingPoint::GetClientClass()
 T C_TEBeamRingPoint::PostDataUpdate(DataUpdateType_t)
 T C_TEBeamRingPoint::YouForgotToImplementOrDeclareClientClass()
 T C_TEBeamRingPoint::~C_TEBeamRingPoint()
 T C_TEBeamSpline::GetClientClass()
 T C_TEBeamSpline::PostDataUpdate(DataUpdateType_t)
 T C_TEBeamSpline::YouForgotToImplementOrDeclareClientClass()
 T C_TEBeamSpline::~C_TEBeamSpline()
 T C_TEBloodSprite::GetClientClass()
 T C_TEBloodSprite::PostDataUpdate(DataUpdateType_t)
 T C_TEBloodSprite::YouForgotToImplementOrDeclareClientClass()
 T C_TEBloodSprite::~C_TEBloodSprite()
 T C_TEBloodStream::GetClientClass()
 T C_TEBloodStream::PostDataUpdate(DataUpdateType_t)
 T C_TEBloodStream::YouForgotToImplementOrDeclareClientClass()
 T C_TEBloodStream::~C_TEBloodStream()
 T C_TEBreakModel::GetClientClass()
 T C_TEBreakModel::PostDataUpdate(DataUpdateType_t)
 T C_TEBreakModel::YouForgotToImplementOrDeclareClientClass()
 T C_TEBreakModel::~C_TEBreakModel()
 T C_TEBubbleTrail::GetClientClass()
 T C_TEBubbleTrail::PostDataUpdate(DataUpdateType_t)
 T C_TEBubbleTrail::YouForgotToImplementOrDeclareClientClass()
 T C_TEBubbleTrail::~C_TEBubbleTrail()
 T C_TEBubbles::GetClientClass()
 T C_TEBubbles::PostDataUpdate(DataUpdateType_t)
 T C_TEBubbles::YouForgotToImplementOrDeclareClientClass()
 T C_TEBubbles::~C_TEBubbles()
 T C_TEClientProjectile::GetClientClass()
 T C_TEClientProjectile::PostDataUpdate(DataUpdateType_t)
 T C_TEClientProjectile::YouForgotToImplementOrDeclareClientClass()
 T C_TEClientProjectile::~C_TEClientProjectile()
 T C_TEConcussiveExplosion::AffectRagdolls()
 T C_TEConcussiveExplosion::GetClientClass()
 T C_TEConcussiveExplosion::PostDataUpdate(DataUpdateType_t)
 T C_TEConcussiveExplosion::YouForgotToImplementOrDeclareClientClass()
 T C_TEConcussiveExplosion::~C_TEConcussiveExplosion()
 T C_TEDecal::GetClientClass()
 T C_TEDecal::PostDataUpdate(DataUpdateType_t)
 T C_TEDecal::Precache()
 T C_TEDecal::YouForgotToImplementOrDeclareClientClass()
 T C_TEDecal::~C_TEDecal()
 T C_TEDust::GetClientClass()
 T C_TEDust::PostDataUpdate(DataUpdateType_t)
 T C_TEDust::ShouldDraw()
 T C_TEDust::YouForgotToImplementOrDeclareClientClass()
 T C_TEDust::~C_TEDust()
 T C_TEDynamicLight::GetClientClass()
 T C_TEDynamicLight::PostDataUpdate(DataUpdateType_t)
 T C_TEDynamicLight::YouForgotToImplementOrDeclareClientClass()
 T C_TEDynamicLight::~C_TEDynamicLight()
 T C_TEEffectDispatch::GetClientClass()
 T C_TEEffectDispatch::PostDataUpdate(DataUpdateType_t)
 T C_TEEffectDispatch::YouForgotToImplementOrDeclareClientClass()
 T C_TEEffectDispatch::~C_TEEffectDispatch()
 T C_TEEnergySplash::GetClientClass()
 T C_TEEnergySplash::PostDataUpdate(DataUpdateType_t)
 T C_TEEnergySplash::Precache()
 T C_TEEnergySplash::YouForgotToImplementOrDeclareClientClass()
 T C_TEEnergySplash::~C_TEEnergySplash()
 T C_TEExplosion::AffectRagdolls()
 T C_TEExplosion::GetClientClass()
 T C_TEExplosion::PostDataUpdate(DataUpdateType_t)
 T C_TEExplosion::RecordExplosion()
 T C_TEExplosion::RenderParticles(CParticleRenderIterator*)
 T C_TEExplosion::SimulateParticles(CParticleSimulateIterator*)
 T C_TEExplosion::YouForgotToImplementOrDeclareClientClass()
 T C_TEExplosion::~C_TEExplosion()
 T C_TEFizz::GetClientClass()
 T C_TEFizz::PostDataUpdate(DataUpdateType_t)
 T C_TEFizz::YouForgotToImplementOrDeclareClientClass()
 T C_TEFizz::~C_TEFizz()
 T C_TEFootprintDecal::GetClientClass()
 T C_TEFootprintDecal::PostDataUpdate(DataUpdateType_t)
 T C_TEFootprintDecal::Precache()
 T C_TEFootprintDecal::YouForgotToImplementOrDeclareClientClass()
 T C_TEFootprintDecal::~C_TEFootprintDecal()
 T C_TEGaussExplosion::GetClientClass()
 T C_TEGaussExplosion::PostDataUpdate(DataUpdateType_t)
 T C_TEGaussExplosion::ShouldDraw()
 T C_TEGaussExplosion::YouForgotToImplementOrDeclareClientClass()
 T C_TEGaussExplosion::~C_TEGaussExplosion()
 T C_TEGlowSprite::GetClientClass()
 T C_TEGlowSprite::PostDataUpdate(DataUpdateType_t)
 T C_TEGlowSprite::YouForgotToImplementOrDeclareClientClass()
 T C_TEGlowSprite::~C_TEGlowSprite()
 T C_TEImpact::GetClientClass()
 T C_TEImpact::PerformCustomEffects(CGameTrace&, Vector&)
 T C_TEImpact::PlayImpactSound(CGameTrace&)
 T C_TEImpact::PostDataUpdate(DataUpdateType_t)
 T C_TEImpact::Precache()
 T C_TEImpact::YouForgotToImplementOrDeclareClientClass()
 T C_TEImpact::~C_TEImpact()
 T C_TEKillPlayerAttachments::GetClientClass()
 T C_TEKillPlayerAttachments::PostDataUpdate(DataUpdateType_t)
 T C_TEKillPlayerAttachments::YouForgotToImplementOrDeclareClientClass()
 T C_TEKillPlayerAttachments::~C_TEKillPlayerAttachments()
 T C_TELargeFunnel::CreateFunnel()
 T C_TELargeFunnel::GetClientClass()
 T C_TELargeFunnel::PostDataUpdate(DataUpdateType_t)
 T C_TELargeFunnel::YouForgotToImplementOrDeclareClientClass()
 T C_TELargeFunnel::~C_TELargeFunnel()
 T C_TEMetalSparks::GetClientClass()
 T C_TEMetalSparks::PostDataUpdate(DataUpdateType_t)
 T C_TEMetalSparks::Precache()
 T C_TEMetalSparks::YouForgotToImplementOrDeclareClientClass()
 T C_TEMetalSparks::~C_TEMetalSparks()
 T C_TEMuzzleFlash::GetClientClass()
 T C_TEMuzzleFlash::PostDataUpdate(DataUpdateType_t)
 T C_TEMuzzleFlash::YouForgotToImplementOrDeclareClientClass()
 T C_TEMuzzleFlash::~C_TEMuzzleFlash()
 T C_TEParticleSystem::C_TEParticleSystem()
 T C_TEParticleSystem::GetClientClass()
 T C_TEParticleSystem::YouForgotToImplementOrDeclareClientClass()
 T C_TEParticleSystem::~C_TEParticleSystem()
 T C_TEPhysicsProp::GetClientClass()
 T C_TEPhysicsProp::PostDataUpdate(DataUpdateType_t)
 T C_TEPhysicsProp::YouForgotToImplementOrDeclareClientClass()
 T C_TEPhysicsProp::~C_TEPhysicsProp()
 T C_TEPlayerDecal::GetClientClass()
 T C_TEPlayerDecal::PostDataUpdate(DataUpdateType_t)
 T C_TEPlayerDecal::Precache()
 T C_TEPlayerDecal::YouForgotToImplementOrDeclareClientClass()
 T C_TEPlayerDecal::~C_TEPlayerDecal()
 T C_TEProjectedDecal::GetClientClass()
 T C_TEProjectedDecal::PostDataUpdate(DataUpdateType_t)
 T C_TEProjectedDecal::Precache()
 T C_TEProjectedDecal::YouForgotToImplementOrDeclareClientClass()
 T C_TEProjectedDecal::~C_TEProjectedDecal()
 T C_TEShatterSurface::GetClientClass()
 T C_TEShatterSurface::PostDataUpdate(DataUpdateType_t)
 T C_TEShatterSurface::RecordShatterSurface()
 T C_TEShatterSurface::YouForgotToImplementOrDeclareClientClass()
 T C_TEShatterSurface::~C_TEShatterSurface()
 T C_TEShowLine::GetClientClass()
 T C_TEShowLine::PostDataUpdate(DataUpdateType_t)
 T C_TEShowLine::YouForgotToImplementOrDeclareClientClass()
 T C_TEShowLine::~C_TEShowLine()
 T C_TESmoke::GetClientClass()
 T C_TESmoke::PostDataUpdate(DataUpdateType_t)
 T C_TESmoke::YouForgotToImplementOrDeclareClientClass()
 T C_TESmoke::~C_TESmoke()
 T C_TESparks::GetClientClass()
 T C_TESparks::PostDataUpdate(DataUpdateType_t)
 T C_TESparks::Precache()
 T C_TESparks::YouForgotToImplementOrDeclareClientClass()
 T C_TESparks::~C_TESparks()
 T C_TESprite::GetClientClass()
 T C_TESprite::PostDataUpdate(DataUpdateType_t)
 T C_TESprite::YouForgotToImplementOrDeclareClientClass()
 T C_TESprite::~C_TESprite()
 T C_TESpriteSpray::GetClientClass()
 T C_TESpriteSpray::PostDataUpdate(DataUpdateType_t)
 T C_TESpriteSpray::YouForgotToImplementOrDeclareClientClass()
 T C_TESpriteSpray::~C_TESpriteSpray()
 T C_TEWorldDecal::GetClientClass()
 T C_TEWorldDecal::PostDataUpdate(DataUpdateType_t)
 T C_TEWorldDecal::Precache()
 T C_TEWorldDecal::YouForgotToImplementOrDeclareClientClass()
 T C_TEWorldDecal::~C_TEWorldDecal()
 T C_Team::ClientThink()
 T C_Team::ContainsPlayer(int)
 T C_Team::GetClientClass()
 T C_Team::GetNumPlayers()
 T C_Team::GetPredDescMap()
 T C_Team::GetTeamNumber() const
 T C_Team::Get_Deaths()
 T C_Team::Get_Name()
 T C_Team::Get_Number_Players()
 T C_Team::Get_Ping()
 T C_Team::Get_Score()
 T C_Team::PreDataUpdate(DataUpdateType_t)
 T C_Team::YouForgotToImplementOrDeclareClientClass()
 T C_Team::~C_Team()
 T C_TeamplayRoundBasedRulesProxy::GetClientClass()
 T C_TeamplayRoundBasedRulesProxy::OnDataChanged(DataUpdateType_t)
 T C_TeamplayRoundBasedRulesProxy::OnPreDataChanged(DataUpdateType_t)
 T C_TeamplayRoundBasedRulesProxy::YouForgotToImplementOrDeclareClientClass()
 T C_TeamplayRoundBasedRulesProxy::~C_TeamplayRoundBasedRulesProxy()
 T C_TempEntsSystem::ArmorRicochet(IRecipientFilter&, float, Vector const*, Vector const*)
 T C_TempEntsSystem::BSPDecal(IRecipientFilter&, float, Vector const*, int, int)
 T C_TempEntsSystem::BeamEntPoint(IRecipientFilter&, float, int, Vector const*, int, Vector const*, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T C_TempEntsSystem::BeamEnts(IRecipientFilter&, float, int, int, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T C_TempEntsSystem::BeamFollow(IRecipientFilter&, float, int, int, int, float, float, float, float, float, float, float, float)
 T C_TempEntsSystem::BeamLaser(IRecipientFilter&, float, int, int, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T C_TempEntsSystem::BeamPoints(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T C_TempEntsSystem::BeamRing(IRecipientFilter&, float, int, int, int, int, int, int, float, float, int, float, int, int, int, int, int, int)
 T C_TempEntsSystem::BeamRingPoint(IRecipientFilter&, float, Vector const&, float, float, int, int, int, int, float, float, int, float, int, int, int, int, int, int)
 T C_TempEntsSystem::BeamSpline(IRecipientFilter&, float, int, Vector*)
 T C_TempEntsSystem::BloodSprite(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int, int, int)
 T C_TempEntsSystem::BloodStream(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int, int, int)
 T C_TempEntsSystem::BreakModel(IRecipientFilter&, float, Vector const&, QAngle const&, Vector const&, Vector const&, int, int, int, float, int)
 T C_TempEntsSystem::BubbleTrail(IRecipientFilter&, float, Vector const*, Vector const*, float, int, int, float)
 T C_TempEntsSystem::Bubbles(IRecipientFilter&, float, Vector const*, Vector const*, float, int, int, float)
 T C_TempEntsSystem::ClientProjectile(IRecipientFilter&, float, Vector const*, Vector const*, int, int, C_BaseEntity*)
 T C_TempEntsSystem::Decal(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int)
 T C_TempEntsSystem::DispatchEffect(IRecipientFilter&, float, Vector const&, char const*, CEffectData const&)
 T C_TempEntsSystem::Dust(IRecipientFilter&, float, Vector const&, Vector const&, float, float)
 T C_TempEntsSystem::DynamicLight(IRecipientFilter&, float, Vector const*, int, int, int, int, float, float, float)
 T C_TempEntsSystem::EnergySplash(IRecipientFilter&, float, Vector const*, Vector const*, bool)
 T C_TempEntsSystem::Explosion(IRecipientFilter&, float, Vector const*, int, float, int, int, int, int, Vector const*, unsigned char)
 T C_TempEntsSystem::Fizz(IRecipientFilter&, float, C_BaseEntity const*, int, int, int)
 T C_TempEntsSystem::FootprintDecal(IRecipientFilter&, float, Vector const*, Vector const*, int, int, unsigned char)
 T C_TempEntsSystem::GaussExplosion(IRecipientFilter&, float, Vector const&, Vector const&, int)
 T C_TempEntsSystem::GlowSprite(IRecipientFilter&, float, Vector const*, int, float, float, int)
 T C_TempEntsSystem::KillPlayerAttachments(IRecipientFilter&, float, int)
 T C_TempEntsSystem::LargeFunnel(IRecipientFilter&, float, Vector const*, int, int)
 T C_TempEntsSystem::MetalSparks(IRecipientFilter&, float, Vector const*, Vector const*)
 T C_TempEntsSystem::MuzzleFlash(IRecipientFilter&, float, Vector const&, QAngle const&, float, int)
 T C_TempEntsSystem::PhysicsProp(IRecipientFilter&, float, int, int, Vector const&, QAngle const&, Vector const&, int, int)
 T C_TempEntsSystem::PlayerDecal(IRecipientFilter&, float, Vector const*, int, int)
 T C_TempEntsSystem::ProjectDecal(IRecipientFilter&, float, Vector const*, QAngle const*, float, int)
 T C_TempEntsSystem::ShatterSurface(IRecipientFilter&, float, Vector const*, QAngle const*, Vector const*, Vector const*, float, float, float, ShatterSurface_t, int, int, int, int, int, int)
 T C_TempEntsSystem::ShowLine(IRecipientFilter&, float, Vector const*, Vector const*)
 T C_TempEntsSystem::Smoke(IRecipientFilter&, float, Vector const*, int, float, int)
 T C_TempEntsSystem::Sparks(IRecipientFilter&, float, Vector const*, int, int, Vector const*)
 T C_TempEntsSystem::Sprite(IRecipientFilter&, float, Vector const*, int, float, int)
 T C_TempEntsSystem::SpriteSpray(IRecipientFilter&, float, Vector const*, Vector const*, int, int, float, int)
 T C_TempEntsSystem::TriggerTempEntity(KeyValues*)
 T C_TempEntsSystem::WorldDecal(IRecipientFilter&, float, Vector const*, int)
 T C_TempEntsSystem::~C_TempEntsSystem()
 T C_Tesla::ClientThink()
 T C_Tesla::GetClientClass()
 T C_Tesla::ReceiveMessage(int, bf_read&)
 T C_Tesla::YouForgotToImplementOrDeclareClientClass()
 T C_Tesla::~C_Tesla()
 T C_TestTraceline::DrawCube(Vector&, unsigned char*)
 T C_TestTraceline::DrawModel(int)
 T C_TestTraceline::GetClientClass()
 T C_TestTraceline::ShouldDraw()
 T C_TestTraceline::YouForgotToImplementOrDeclareClientClass()
 T C_TestTraceline::~C_TestTraceline()
 T C_Test_ProxyToggle_Networkable::GetClientClass()
 T C_Test_ProxyToggle_Networkable::YouForgotToImplementOrDeclareClientClass()
 T C_Test_ProxyToggle_Networkable::~C_Test_ProxyToggle_Networkable()
 T C_VGuiScreen::AcceptsInput() const
 T C_VGuiScreen::C_VGuiScreen()
 T C_VGuiScreen::ClientThink()
 T C_VGuiScreen::CreateVguiScreen(char const*)
 T C_VGuiScreen::DrawModel(int)
 T C_VGuiScreen::DrawScreenOverlay()
 T C_VGuiScreen::GetAimEntOrigin(IClientEntity*, Vector*, QAngle*)
 T C_VGuiScreen::GetClientClass()
 T C_VGuiScreen::GetRenderGroup()
 T C_VGuiScreen::IsAttachedToViewModel() const
 T C_VGuiScreen::IsTransparent()
 T C_VGuiScreen::IsVisibleToPlayer(C_BasePlayer*)
 T C_VGuiScreen::OnDataChanged(DataUpdateType_t)
 T C_VGuiScreen::PreDataUpdate(DataUpdateType_t)
 T C_VGuiScreen::ShouldDraw()
 T C_VGuiScreen::YouForgotToImplementOrDeclareClientClass()
 T C_VGuiScreen::~C_VGuiScreen()
 T C_VortigauntChargeToken::ClientThink()
 T C_VortigauntChargeToken::GetClientClass()
 T C_VortigauntChargeToken::NotifyShouldTransmit(ShouldTransmitState_t)
 T C_VortigauntChargeToken::OnDataChanged(DataUpdateType_t)
 T C_VortigauntChargeToken::UpdateOnRemove()
 T C_VortigauntChargeToken::YouForgotToImplementOrDeclareClientClass()
 T C_VortigauntChargeToken::~C_VortigauntChargeToken()
 T C_VortigauntEffectDispel::ClientThink()
 T C_VortigauntEffectDispel::GetClientClass()
 T C_VortigauntEffectDispel::NotifyShouldTransmit(ShouldTransmitState_t)
 T C_VortigauntEffectDispel::OnDataChanged(DataUpdateType_t)
 T C_VortigauntEffectDispel::UpdateOnRemove()
 T C_VortigauntEffectDispel::YouForgotToImplementOrDeclareClientClass()
 T C_VortigauntEffectDispel::~C_VortigauntEffectDispel()
 T C_VoteController::C_VoteController()
 T C_VoteController::ClientThink()
 T C_VoteController::FireGameEvent(IGameEvent*)
 T C_VoteController::GetClientClass()
 T C_VoteController::RecvProxy_VoteOption(CRecvProxyData const*, void*, void*)
 T C_VoteController::RecvProxy_VoteType(CRecvProxyData const*, void*, void*)
 T C_VoteController::Spawn()
 T C_VoteController::YouForgotToImplementOrDeclareClientClass()
 T C_VoteController::~C_VoteController()
 T C_WaterBullet::AddEntity()
 T C_WaterBullet::GetClientClass()
 T C_WaterBullet::OnDataChanged(DataUpdateType_t)
 T C_WaterBullet::ShouldDraw()
 T C_WaterBullet::YouForgotToImplementOrDeclareClientClass()
 T C_WaterBullet::~C_WaterBullet()
 T C_WaterExplosionEffect::Create(Vector const&, float, float, int)
 T C_WaterExplosionEffect::CreateCore()
 T C_WaterExplosionEffect::CreateDebris()
 T C_WaterExplosionEffect::CreateMisc()
 T C_WaterExplosionEffect::PlaySound()
 T C_WaterLODControl::GetClientClass()
 T C_WaterLODControl::OnDataChanged(DataUpdateType_t)
 T C_WaterLODControl::ShouldDraw()
 T C_WaterLODControl::YouForgotToImplementOrDeclareClientClass()
 T C_WaterLODControl::~C_WaterLODControl()
 T C_Weapon357::GetClientClass()
 T C_Weapon357::GetPredDescMap()
 T C_Weapon357::YouForgotToImplementOrDeclareClientClass()
 T C_Weapon357::~C_Weapon357()
 T C_WeaponAR2::GetClientClass()
 T C_WeaponAR2::GetPredDescMap()
 T C_WeaponAR2::YouForgotToImplementOrDeclareClientClass()
 T C_WeaponAR2::~C_WeaponAR2()
 T C_WeaponAlyxGun::GetClientClass()
 T C_WeaponAlyxGun::GetPredDescMap()
 T C_WeaponAlyxGun::YouForgotToImplementOrDeclareClientClass()
 T C_WeaponAlyxGun::~C_WeaponAlyxGun()
 T C_WeaponAnnabelle::GetClientClass()
 T C_WeaponAnnabelle::GetPredDescMap()
 T C_WeaponAnnabelle::YouForgotToImplementOrDeclareClientClass()
 T C_WeaponAnnabelle::~C_WeaponAnnabelle()
 T C_WeaponBinoculars::GetClientClass()
 T C_WeaponBinoculars::GetPredDescMap()
 T C_WeaponBinoculars::YouForgotToImplementOrDeclareClientClass()
 T C_WeaponBinoculars::~C_WeaponBinoculars()
 T C_WeaponBugBait::GetClientClass()
 T C_WeaponBugBait::GetPredDescMap()
 T C_WeaponBugBait::YouForgotToImplementOrDeclareClientClass()
 T C_WeaponBugBait::~C_WeaponBugBait()
 T C_WeaponCitizenPackage::GetClientClass()
 T C_WeaponCitizenPackage::GetPredDescMap()
 T C_WeaponCitizenPackage::YouForgotToImplementOrDeclareClientClass()
 T C_WeaponCitizenPackage::~C_WeaponCitizenPackage()
 T C_WeaponCitizenSuitcase::GetClientClass()
 T C_WeaponCitizenSuitcase::GetPredDescMap()
 T C_WeaponCitizenSuitcase::YouForgotToImplementOrDeclareClientClass()
 T C_WeaponCitizenSuitcase::~C_WeaponCitizenSuitcase()
 T C_WeaponCrossbow::GetClientClass()
 T C_WeaponCrossbow::GetPredDescMap()
 T C_WeaponCrossbow::YouForgotToImplementOrDeclareClientClass()
 T C_WeaponCrossbow::~C_WeaponCrossbow()
 T C_WeaponCrowbar::GetClientClass()
 T C_WeaponCrowbar::GetPredDescMap()
 T C_WeaponCrowbar::YouForgotToImplementOrDeclareClientClass()
 T C_WeaponCrowbar::~C_WeaponCrowbar()
 T C_WeaponCubemap::GetClientClass()
 T C_WeaponCubemap::GetPredDescMap()
 T C_WeaponCubemap::YouForgotToImplementOrDeclareClientClass()
 T C_WeaponCubemap::~C_WeaponCubemap()
 T C_WeaponCycler::GetClientClass()
 T C_WeaponCycler::GetPredDescMap()
 T C_WeaponCycler::YouForgotToImplementOrDeclareClientClass()
 T C_WeaponCycler::~C_WeaponCycler()
 T C_WeaponFrag::GetClientClass()
 T C_WeaponFrag::GetPredDescMap()
 T C_WeaponFrag::YouForgotToImplementOrDeclareClientClass()
 T C_WeaponFrag::~C_WeaponFrag()
 T C_WeaponGaussGun::GetClientClass()
 T C_WeaponGaussGun::GetPredDescMap()
 T C_WeaponGaussGun::YouForgotToImplementOrDeclareClientClass()
 T C_WeaponGaussGun::~C_WeaponGaussGun()
 T C_WeaponPhysCannon::ClientThink()
 T C_WeaponPhysCannon::DrawModel(int)
 T C_WeaponPhysCannon::GetClientClass()
 T C_WeaponPhysCannon::GetPredDescMap()
 T C_WeaponPhysCannon::OnDataChanged(DataUpdateType_t)
 T C_WeaponPhysCannon::SetupEmitter()
 T C_WeaponPhysCannon::ShouldUseLargeViewModelVROverride()
 T C_WeaponPhysCannon::YouForgotToImplementOrDeclareClientClass()
 T C_WeaponPhysCannon::~C_WeaponPhysCannon()
 T C_WeaponPistol::GetClientClass()
 T C_WeaponPistol::GetPredDescMap()
 T C_WeaponPistol::YouForgotToImplementOrDeclareClientClass()
 T C_WeaponPistol::~C_WeaponPistol()
 T C_WeaponRPG::GetClientClass()
 T C_WeaponRPG::GetPredDescMap()
 T C_WeaponRPG::YouForgotToImplementOrDeclareClientClass()
 T C_WeaponRPG::~C_WeaponRPG()
 T C_WeaponSMG1::GetClientClass()
 T C_WeaponSMG1::GetPredDescMap()
 T C_WeaponSMG1::YouForgotToImplementOrDeclareClientClass()
 T C_WeaponSMG1::~C_WeaponSMG1()
 T C_WeaponShotgun::GetClientClass()
 T C_WeaponShotgun::GetPredDescMap()
 T C_WeaponShotgun::YouForgotToImplementOrDeclareClientClass()
 T C_WeaponShotgun::~C_WeaponShotgun()
 T C_WeaponStunStick::ClientThink()
 T C_WeaponStunStick::DrawModel(int)
 T C_WeaponStunStick::GetClientClass()
 T C_WeaponStunStick::GetPredDescMap()
 T C_WeaponStunStick::GetRenderGroup()
 T C_WeaponStunStick::OnDataChanged(DataUpdateType_t)
 T C_WeaponStunStick::YouForgotToImplementOrDeclareClientClass()
 T C_WeaponStunStick::~C_WeaponStunStick()
 T C_Weapon_SLAM::GetClientClass()
 T C_Weapon_SLAM::GetPredDescMap()
 T C_Weapon_SLAM::YouForgotToImplementOrDeclareClientClass()
 T C_Weapon_SLAM::~C_Weapon_SLAM()
 T C_World::GetClientClass()
 T C_World::GetCollideType()
 T C_World::Init(int, int)
 T C_World::OnDataChanged(DataUpdateType_t)
 T C_World::PreDataUpdate(DataUpdateType_t)
 T C_World::Precache()
 T C_World::Release()
 T C_World::Spawn()
 T C_World::YouForgotToImplementOrDeclareClientClass()
 T C_World::~C_World()
 T CacheKeyValuesForFile(char const*)
 T Calc3WayBlendIndices(int, int, float, float, mstudioseqdesc_t const&, int*, float*)
 T CalcBoneAdj(CStudioHdr const*, Vector*, Quaternion*, float const*, int)
 T CalcBoneDerivatives(Vector&, Vector&, matrix3x4_t const&, matrix3x4_t const&, float)
 T CalcBonePosition(int, float, Vector const&, Vector const&, mstudioanim_t const*, Vector&)
 T CalcBoneQuaternion(int, float, Quaternion const&, RadianEuler const&, Vector const&, int, Quaternion const&, mstudioanim_t const*, Quaternion&)
 T CalcClosestPointOnAABB(Vector const&, Vector const&, Vector const&, Vector&)
 T CalcClosestPointOnLine(Vector const&, Vector const&, Vector const&, Vector&, float*)
 T CalcClosestPointOnLineSegment(Vector const&, Vector const&, Vector const&, Vector&, float*)
 T CalcDistanceSqrToLine(Vector const&, Vector const&, Vector const&, float*)
 T CalcDistanceSqrToLineSegment(Vector const&, Vector const&, Vector const&, float*)
 T CalcDistanceToLineSegment(Vector const&, Vector const&, Vector const&, float*)
 T CalcFovY(float, float)
 T CalcPoseSingle(CStudioHdr const*, Vector*, Quaternion*, mstudioseqdesc_t&, int, float, float const*, int, float)
 T CalcProceduralBone(CStudioHdr const*, int, CBoneAccessor&)
 T CalcRenderableWorldSpaceAABB_Fast(IClientRenderable*, Vector&, Vector&)
 T CalcSegOrigin(Vector*, int, int, float*, Vector const&, Vector const&, Vector const&, int, float, float, float, int)
 T CalcSqrDistanceToAABB(Vector const&, Vector const&, Vector const&)
 T CalculateAABBFromProjectionMatrix(VMatrix const&, Vector*, Vector*)
 T CalculateAABBFromProjectionMatrixInverse(VMatrix const&, Vector*, Vector*)
 T CalculateBulletDamageForce(CTakeDamageInfo*, int, Vector const&, Vector const&, float)
 T CaptionAsyncLoaderCallback(FileAsyncRequest_t const&, int, FSAsyncStatus_t)
 T CaptionLookup_t::SetHash(char const*)
 T CaselessStringLessThan(char const* const&, char const* const&)
 T Catmull_Rom_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T Catmull_Rom_Spline_Matrix(Vector const&, Vector const&, Vector const&, Vector const&, catmull_t&)
 T Catmull_Rom_Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T Catmull_Rom_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T Catmull_Rom_Spline_Tangent(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T CharacterSetBuild(characterset_t*, char const*)
 T ChopperMuzzleFlashCallback(CEffectData const&)
 T ChoreoLoadScene(char const*, IChoreoEventCallback*, ISceneTokenProcessor*, void (*)(char const*, ...))
 T CleanupDMX(CDmxElement*)
 T ClearBounds(Vector&, Vector&)
 T ClearDataChangedEvent(int)
 T ClearKeyValuesCache()
 T ClearMultiDamage()
 T ClientEffectPrecacheSystem()
 T ClientModeHLNormal::ClientModeHLNormal()
 T ClientModeHLNormal::Init()
 T ClientModeHLNormal::ShouldDrawCrosshair()
 T ClientModeHLNormal::~ClientModeHLNormal()
 T ClientModeShared::ActivateInGameVGuiContext(vgui::Panel*)
 T ClientModeShared::AdjustEngineViewport(int&, int&, int&, int&)
 T ClientModeShared::CanRecordDemo(char*, int) const
 T ClientModeShared::ClientModeShared()
 T ClientModeShared::ComputeVguiResConditions(KeyValues*)
 T ClientModeShared::CreateMove(float, CUserCmd*)
 T ClientModeShared::DeactivateInGameVGuiContext()
 T ClientModeShared::Disable()
 T ClientModeShared::DisplayReplayMessage(char const*, float, bool, char const*, bool)
 T ClientModeShared::DoPostScreenSpaceEffects(CViewSetup const*)
 T ClientModeShared::Enable()
 T ClientModeShared::FireGameEvent(IGameEvent*)
 T ClientModeShared::GetMapName()
 T ClientModeShared::GetMessagePanel()
 T ClientModeShared::GetServerName()
 T ClientModeShared::GetViewModelFOV()
 T ClientModeShared::GetViewport()
 T ClientModeShared::GetViewportAnimationController()
 T ClientModeShared::HandleSpectatorKeyInput(int, ButtonCode_t, char const*)
 T ClientModeShared::HudElementKeyInput(int, ButtonCode_t, char const*)
 T ClientModeShared::InfoPanelDisplayed()
 T ClientModeShared::Init()
 T ClientModeShared::InitViewport()
 T ClientModeShared::IsHTMLInfoPanelAllowed()
 T ClientModeShared::IsInfoPanelAllowed()
 T ClientModeShared::KeyInput(int, ButtonCode_t, char const*)
 T ClientModeShared::Layout()
 T ClientModeShared::Layout(bool)
 T ClientModeShared::LevelInit(char const*)
 T ClientModeShared::LevelShutdown()
 T ClientModeShared::OverrideMouseInput(float*, float*)
 T ClientModeShared::OverrideView(CViewSetup*)
 T ClientModeShared::PostRender()
 T ClientModeShared::PostRenderVGui()
 T ClientModeShared::PreRender(CViewSetup*)
 T ClientModeShared::ProcessInput(bool)
 T ClientModeShared::ReloadScheme()
 T ClientModeShared::SetMapName(wchar_t*)
 T ClientModeShared::SetServerName(wchar_t*)
 T ClientModeShared::ShouldBlackoutAroundHUD()
 T ClientModeShared::ShouldDrawCrosshair()
 T ClientModeShared::ShouldDrawDetailObjects()
 T ClientModeShared::ShouldDrawEntity(C_BaseEntity*)
 T ClientModeShared::ShouldDrawFog()
 T ClientModeShared::ShouldDrawLocalPlayer(C_BasePlayer*)
 T ClientModeShared::ShouldDrawParticles()
 T ClientModeShared::ShouldDrawViewModel()
 T ClientModeShared::ShouldOverrideHeadtrackControl()
 T ClientModeShared::Shutdown()
 T ClientModeShared::StartMessageMode(int)
 T ClientModeShared::Update()
 T ClientModeShared::UpdateReplayMessages()
 T ClientModeShared::VGui_Shutdown()
 T ClientModeShared::~ClientModeShared()
 T ClientSoundscapeSystem()
 T ClientSteamContext()
 T ClientVoiceMgr_Init()
 T ClientVoiceMgr_Shutdown()
 T ClientWorldFactoryInit()
 T ClientWorldFactoryShutdown()
 T ClientWorldListInfo_t::AllocPooled(ClientWorldListInfo_t const&)
 T ClientWorldListInfo_t::OnFinalRelease()
 T ClientWorldListInfo_t::~ClientWorldListInfo_t()
 T ColorRGBExp32ToVector(ColorRGBExp32 const&, Vector&)
 T ColumnButton::ApplySchemeSettings(vgui::IScheme*)
 T ColumnButton::OnMousePressed(ButtonCode_t)
 T ColumnButton::~ColumnButton()
 T CombineBallExplosionCallback(CEffectData const&)
 T CombineBallImpactCallback(CEffectData const&)
 T ComboBox_Factory()
 T CommandMenu::AddCustomItem(KeyValues*, vgui::Menu*)
 T CommandMenu::AddMenuCommandItem(KeyValues*)
 T CommandMenu::AddMenuToggleItem(KeyValues*)
 T CommandMenu::CheckRules(char const*, char const*)
 T CommandMenu::CommandMenu(vgui::Panel*, char const*, IViewPort*)
 T CommandMenu::GetAnimMap()
 T CommandMenu::GetKBMap()
 T CommandMenu::GetMessageMap()
 T CommandMenu::GetPanelClassName()
 T CommandMenu::LoadFromFile(char const*)
 T CommandMenu::LoadFromKeyValues(KeyValues*)
 T CommandMenu::LoadFromKeyValuesInternal(KeyValues*, int)
 T CommandMenu::OnCustomItem(KeyValues*)
 T CommandMenu::OnMessage(KeyValues const*, unsigned int)
 T CommandMenu::SetVisible(bool)
 T CommandMenu::StartNewSubMenu(KeyValues*)
 T CommandMenu::UpdateCustomItem(KeyValues*, vgui::MenuItem*)
 T CommandMenu::UpdateMenu()
 T CommandMenu::~CommandMenu()
 T CommandPointerCallback(CEffectData const&)
 T CommentaryModeShouldSwallowInput(C_BasePlayer*)
 T CommentaryShowModelViewer(CCommand const&)
 T ComputeBeamEntPosition(C_BaseEntity*, int, bool, Vector&)
 T ComputeCameraVariables(Vector const&, QAngle const&, Vector*, Vector*, Vector*, VMatrix*)
 T ComputeIntersectionBarycentricCoordinates(Ray_t const&, Vector const&, Vector const&, Vector const&, float&, float&, float*)
 T ComputeProjectionMatrix(VMatrix*, Camera_t const&, int, int)
 T ComputeRenderInfo(mstudiobbox_t*, matrix3x4_t const&, Vector*, Vector*, Vector*)
 T ComputeSeparatingPlane(Vector const&, QAngle const&, Vector const&, Vector const&, Vector const&, QAngle const&, Vector const&, Vector const&, float, cplane_t*)
 T ComputeViewMatrix(VMatrix*, Camera_t const&)
 T ConCommand::AutoCompleteSuggest(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T ConCommand::CanAutoComplete()
 T ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
 T ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
 T ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
 T ConCommand::Dispatch(CCommand const&)
 T ConCommand::IsCommand() const
 T ConCommand::~ConCommand()
 T ConCommandBase::AddFlags(int)
 T ConCommandBase::Create(char const*, char const*, int)
 T ConCommandBase::GetDLLIdentifier() const
 T ConCommandBase::GetHelpText() const
 T ConCommandBase::GetName() const
 T ConCommandBase::Init()
 T ConCommandBase::IsFlagSet(int) const
 T ConCommandBase::IsRegistered() const
 T ConCommandBase::Shutdown()
 T ConVar::AddFlags(int)
 T ConVar::ChangeStringValue(char const*, float)
 T ConVar::ClampValue(float&)
 T ConVar::ConVar(char const*, char const*, int)
 T ConVar::ConVar(char const*, char const*, int, char const*)
 T ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
 T ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
 T ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
 T ConVar::Create(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
 T ConVar::GetHelpText() const
 T ConVar::GetName() const
 T ConVar::Init()
 T ConVar::InternalSetFloatValue(float)
 T ConVar::InternalSetIntValue(int)
 T ConVar::InternalSetValue(char const*)
 T ConVar::IsCommand() const
 T ConVar::IsFlagSet(int) const
 T ConVar::IsRegistered() const
 T ConVar::Revert()
 T ConVar::SetValue(char const*)
 T ConVar::SetValue(float)
 T ConVar::SetValue(int)
 T ConVar::~ConVar()
 T ConVarRef::ConVarRef(IConVar*)
 T ConVarRef::ConVarRef(char const*)
 T ConVarRef::ConVarRef(char const*, bool)
 T ConVarRef::Init(char const*, bool)
 T ConVarRef::IsValid() const
 T ConVar_Register(int, IConCommandBaseAccessor*)
 T ConVar_ServerBounded::GetBool() const
 T ConVar_ServerBounded::GetInt() const
 T ConVar_Unregister()
 T ConVar_m_pitch::GetFloat() const
 T ConVar_m_pitch::~ConVar_m_pitch()
 T ConcatTransforms(matrix3x4_t const&, matrix3x4_t const&, matrix3x4_t&)
 T ConnectTier1Libraries(void* (**)(char const*, int*), int)
 T ConnectTier2Libraries(void* (**)(char const*, int*), int)
 T ConnectTier3Libraries(void* (**)(char const*, int*), int)
 T ConvertCRtoNL(char*)
 T ConvertCRtoNL(wchar_t*)
 T CopyUniqueId(UniqueId_t const&, UniqueId_t*)
 T CountdownTimer::Now() const
 T CreateCrossbowBolt(Vector const&, Vector const&)
 T CreateEntityByName(char const*)
 T CreateHairballCallback()
 T CreateInterface
 T CreateInterfaceInternal(char const*, int*)
 T CreateRagdoll(C_BaseEntity*, CStudioHdr*, Vector const&, int, matrix3x4_t const*, matrix3x4_t const*, matrix3x4_t const*, float, bool)
 T CreateStuckTable()
 T CreateTempMaterialForPlayerLogo(int, player_info_s*, char*, int)
 T CreateUniqueId(UniqueId_t*)
 T CreateVTFTexture()
 T CreateWeaponInfo()
 T Create_CvarToggleCheckButton()
 T CrossProduct(float const*, float const*, float*)
 T CrosshairLoadCallback(CEffectData const&)
 T Cubic_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T CurrentViewAngles()
 T CurrentViewForward()
 T CurrentViewID()
 T CurrentViewOrigin()
 T CurrentViewRight()
 T CurrentViewUp()
 T CurrentWorldToViewMatrix()
 T DMXAlloc(unsigned long)
 T DataTableRecvProxy_LengthProxy(RecvProp const*, void**, void*, int)
 T DataTableRecvProxy_StaticDataTable(RecvProp const*, void**, void*, int)
 T DeactivateVguiScreen(C_BaseEntity*)
 T DebugDrawLine(Vector const&, Vector const&, int, int, int, bool, float)
 T DecommitDMXMemory()
 T DefaultCompletionFunc(char const*, char (*) [64])
 T DefaultRenderBoundsWorldspace(IClientRenderable*, Vector&, Vector&)
 T DestroyVTFTexture(IVTFTexture*)
 T DetailObjectSystem()
 T DevMsgRT(char const*, ...)
 T DisconnectTier1Libraries()
 T DisconnectTier2Libraries()
 T DisconnectTier3Libraries()
 T DispatchEffect(char const*, CEffectData const&)
 T DispatchHudText(char const*)
 T DispatchParticleEffect(char const*, Vector, QAngle, C_BaseEntity*)
 T DispatchParticleEffect(int, Vector, Vector, QAngle, C_BaseEntity*)
 T DispelCallback(CEffectData const&)
 T DissolveEffect(C_BaseEntity*, float)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<CParticleSystemDefinition>(CParticleSystemDefinition*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_AgeNoise>(C_INIT_AgeNoise*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateAlongPath>(C_INIT_CreateAlongPath*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateFromParentParticles>(C_INIT_CreateFromParentParticles*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateFromPlaneCache>(C_INIT_CreateFromPlaneCache*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateInHierarchy>(C_INIT_CreateInHierarchy*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateOnModel>(C_INIT_CreateOnModel*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateSequentialPath>(C_INIT_CreateSequentialPath*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateWithinBox>(C_INIT_CreateWithinBox*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreateWithinSphere>(C_INIT_CreateWithinSphere*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_CreationNoise>(C_INIT_CreationNoise*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_DistanceToCPInit>(C_INIT_DistanceToCPInit*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_InheritVelocity>(C_INIT_InheritVelocity*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_InitialRepulsionVelocity>(C_INIT_InitialRepulsionVelocity*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_InitialVelocityNoise>(C_INIT_InitialVelocityNoise*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_LifespanFromVelocity>(C_INIT_LifespanFromVelocity*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_MoveBetweenPoints>(C_INIT_MoveBetweenPoints*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_PositionOffset>(C_INIT_PositionOffset*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_PositionWarp>(C_INIT_PositionWarp*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomAlpha>(C_INIT_RandomAlpha*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomColor>(C_INIT_RandomColor*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomLifeTime>(C_INIT_RandomLifeTime*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomRadius>(C_INIT_RandomRadius*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomRotation>(C_INIT_RandomRotation*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomRotationSpeed>(C_INIT_RandomRotationSpeed*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomSecondSequence>(C_INIT_RandomSecondSequence*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomSequence>(C_INIT_RandomSequence*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomTrailLength>(C_INIT_RandomTrailLength*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomYaw>(C_INIT_RandomYaw*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RandomYawFlip>(C_INIT_RandomYawFlip*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RemapCPtoScalar>(C_INIT_RemapCPtoScalar*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RemapCPtoVector>(C_INIT_RemapCPtoVector*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RemapScalar>(C_INIT_RemapScalar*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_RemapScalarToVector>(C_INIT_RemapScalarToVector*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_SequenceLifeTime>(C_INIT_SequenceLifeTime*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_INIT_VelocityRandom>(C_INIT_VelocityRandom*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_AttractToControlPoint>(C_OP_AttractToControlPoint*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_BasicMovement>(C_OP_BasicMovement*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_ColorInterpolate>(C_OP_ColorInterpolate*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_ConstrainDistance>(C_OP_ConstrainDistance*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_ConstrainDistanceToPath>(C_OP_ConstrainDistanceToPath*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_ContinuousEmitter>(C_OP_ContinuousEmitter*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_ControlpointLight>(C_OP_ControlpointLight*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_Cull>(C_OP_Cull*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_DampenToCP>(C_OP_DampenToCP*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_Decay>(C_OP_Decay*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_DistanceBetweenCPs>(C_OP_DistanceBetweenCPs*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_DistanceToCP>(C_OP_DistanceToCP*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_FadeAndKill>(C_OP_FadeAndKill*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_FadeIn>(C_OP_FadeIn*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_FadeOut>(C_OP_FadeOut*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_InstantaneousEmitter>(C_OP_InstantaneousEmitter*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_InterpolateRadius>(C_OP_InterpolateRadius*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_LockToBone>(C_OP_LockToBone*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_MaintainSequentialPath>(C_OP_MaintainSequentialPath*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_MaxVelocity>(C_OP_MaxVelocity*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_ModelCull>(C_OP_ModelCull*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_MovementRotateParticleAroundAxis>(C_OP_MovementRotateParticleAroundAxis*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_Noise>(C_OP_Noise*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_NoiseEmitter>(C_OP_NoiseEmitter*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_Orient2DRelToCP>(C_OP_Orient2DRelToCP*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_OrientTo2dDirection>(C_OP_OrientTo2dDirection*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_OscillateScalar>(C_OP_OscillateScalar*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_OscillateVector>(C_OP_OscillateVector*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_PerParticleEmitter>(C_OP_PerParticleEmitter*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_PlanarConstraint>(C_OP_PlanarConstraint*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_PlaneCull>(C_OP_PlaneCull*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_PositionLock>(C_OP_PositionLock*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RandomForce>(C_OP_RandomForce*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RemapCPtoScalar>(C_OP_RemapCPtoScalar*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RemapDotProductToScalar>(C_OP_RemapDotProductToScalar*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RemapScalar>(C_OP_RemapScalar*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RemapSpeedtoCP>(C_OP_RemapSpeedtoCP*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RenderPoints>(C_OP_RenderPoints*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RenderRope>(C_OP_RenderRope*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RenderScreenVelocityRotate>(C_OP_RenderScreenVelocityRotate*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RenderSprites>(C_OP_RenderSprites*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_RenderSpritesTrail>(C_OP_RenderSpritesTrail*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_SetChildControlPoints>(C_OP_SetChildControlPoints*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_SetControlPointPositions>(C_OP_SetControlPointPositions*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_SetControlPointToCenter>(C_OP_SetControlPointToCenter*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_SetControlPointToPlayer>(C_OP_SetControlPointToPlayer*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_Spin>(C_OP_Spin*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_SpinUpdate>(C_OP_SpinUpdate*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_SpinYaw>(C_OP_SpinYaw*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_TwistAroundAxis>(C_OP_TwistAroundAxis*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_VectorNoise>(C_OP_VectorNoise*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_VelocityDecay>(C_OP_VelocityDecay*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_VelocityMatchingForce>(C_OP_VelocityMatchingForce*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_WorldCollideConstraint>(C_OP_WorldCollideConstraint*)
 T DmxElementUnpackStructure_t* DmxElementUnpackInit<C_OP_WorldTraceConstraint>(C_OP_WorldTraceConstraint*)
 T DoAimAtBone(mstudiobone_t*, int, CBoneAccessor&, CStudioHdr const*)
 T DoAxisInterpBone(mstudiobone_t*, int, CBoneAccessor&)
 T DoEnginePostProcessing(int, int, int, int, bool, bool)
 T DoImageSpaceMotionBlur(CViewSetup const&, int, int, int, int)
 T DoQuatInterpBone(mstudiobone_t*, int, CBoneAccessor&)
 T DoesViewPlaneIntersectWater(float, int)
 T Dragger::Dragger(int)
 T Dragger::OnCursorMoved(int, int)
 T Dragger::OnMouseDoublePressed(ButtonCode_t)
 T Dragger::OnMousePressed(ButtonCode_t)
 T Dragger::OnMouseReleased(ButtonCode_t)
 T Dragger::SetMovable(bool)
 T Dragger::~Dragger()
 T DrawBeamFollow(model_t const*, BeamTrail_t*, int, int, Vector&, Vector&, Vector&, float, Vector const&, int, float, float, float, float*, float)
 T DrawBeamQuadratic(Vector const&, Vector const&, Vector const&, float, Vector const&, float, float)
 T DrawCylinder(int, float*, model_t const*, float, int, Vector const&, Vector const&, float, float, float, float, int, float*, float)
 T DrawDisk(int, float*, model_t const*, float, int, Vector const&, Vector const&, float, float, float, float, int, float*, float)
 T DrawHalo(IMaterial*, Vector const&, float, float const*, float)
 T DrawHaloOriented(Vector const&, float, float const*, float)
 T DrawParticleSingletons(bool)
 T DrawPrecipitation()
 T DrawRing(int, float*, void (*)(float*, int, float), model_t const*, float, int, Vector const&, Vector const&, float, float, float, float, int, float*, float)
 T DrawScreenEffectMaterial(IMaterial*, int, int, int, int)
 T DrawSegs(int, float*, model_t const*, float, int, Vector const&, Vector const&, float, float, float, float, float, int, int, float*, float, float)
 T DrawSmokeFogOverlay()
 T DrawSplineSegs(int, float*, model_t const*, model_t const*, float, float, int, int, Vector*, float, float, float, float, float, int, int, float*, float, float)
 T DrawSpriteModel(IClientEntity*, CEngineSprite*, Vector const&, float, float, int, int, int, int, int, Vector const&, Vector const&, Vector const&, float)
 T DrawSpriteTangentSpace(Vector const&, float, float, color32_s)
 T DrawTeslaSegs(int, float*, model_t const*, float, int, Vector const&, Vector const&, float, float, float, float, float, int, int, float*, float, float)
 T Draw_SetSpriteTexture(model_t const*, int, int)
 T DrawingMainView()
 T DumpTGAofRenderTarget(int, int, char const*)
 T EffectOccluded(Vector const&, int*)
 T EndDMXContext(bool)
 T EntityParticleTrailInfo_t::EntityParticleTrailInfo_t()
 T EntityParticleTrailInfo_t::NetworkStateChanged()
 T EntityParticleTrailInfo_t::NetworkStateChanged(void*)
 T EvaluateConditional(char const*)
 T EventGroup::EventGroup(EventGroup const&)
 T EventList_AddEventEntry(char const*, int, bool, int)
 T EventList_Free()
 T EventList_GetEventType(int)
 T EventList_IndexForName(char const*)
 T EventList_Init()
 T EventList_RegisterPrivateEvent(char const*)
 T EventList_RegisterSharedEvents()
 T ExplosionCallback(CEffectData const&)
 T ExtractAnimValue(int, mstudioanimvalue_t*, float, float&, float&)
 T FX_AR2Tracer(Vector&, Vector&, int, bool)
 T FX_AddDiscreetLine(Vector const&, Vector const&, float, float, float, float, float, char const*)
 T FX_AddLine(FXLineData_t const&)
 T FX_AddQuad(FXQuadData_t const&)
 T FX_AddQuad(Vector const&, Vector const&, float, float, float, float, float, float, float, float, Vector const&, float, char const*, unsigned int)
 T FX_AntlionGib(Vector const&, Vector const&, float)
 T FX_AntlionImpact(Vector const&, CGameTrace*)
 T FX_Blood(Vector&, Vector&, float, float, float, float)
 T FX_BloodBulletImpact(Vector const&, Vector const&, float, unsigned char, unsigned char, unsigned char)
 T FX_BloodSpray(Vector const&, Vector const&, float, unsigned char, unsigned char, unsigned char, int)
 T FX_BuildSmoke(Vector&, QAngle&, CBaseHandle, int, float, Vector4D const&)
 T FX_BuildTeslaHitbox(CEffectData const&)
 T FX_BuildTeslaHitbox(C_BaseEntity*, int, int, float, Vector const&, float)
 T FX_BuildTeslaZap(CEffectData const&)
 T FX_CacheMaterialHandles()
 T FX_ConcussiveExplosion(Vector&, Vector&)
 T FX_DebrisFlecks(Vector const&, CGameTrace*, char, int, bool)
 T FX_DrawLine(Vector const&, Vector const&, float, IMaterial*, color32_s const&)
 T FX_DrawLineFade(Vector const&, Vector const&, float, IMaterial*, color32_s const&, float)
 T FX_Dust(Vector const&, Vector const&, float, float)
 T FX_DustImpact(Vector const&, CGameTrace*, float)
 T FX_DustImpact(Vector const&, CGameTrace*, int)
 T FX_ElectricSpark(Vector const&, int, int, Vector const*)
 T FX_EnergySplash(Vector const&, Vector const&, int)
 T FX_GaussExplosion(Vector const&, Vector const&, int)
 T FX_GaussTracer(Vector&, Vector&, int, bool)
 T FX_GetAttachmentTransform(CBaseHandle, int, Vector*, QAngle*)
 T FX_GetAttachmentTransform(CBaseHandle, int, matrix3x4_t&)
 T FX_GlassImpact(Vector const&, Vector const&)
 T FX_GunshipImpact(Vector const&, Vector const&, float, float, float)
 T FX_GunshipMuzzleEffect(Vector const&, QAngle const&, float, CBaseHandle, unsigned char*)
 T FX_GunshipTracer(Vector&, Vector&, int, bool)
 T FX_GunshotSlimeSplash(Vector const&, Vector const&, float)
 T FX_GunshotSplash(Vector const&, Vector const&, float)
 T FX_HunterTracer(Vector&, Vector&, int, bool)
 T FX_MetalSpark(Vector const&, Vector const&, Vector const&, int)
 T FX_MuzzleEffect(Vector const&, QAngle const&, float, CBaseHandle, unsigned char*, bool)
 T FX_MuzzleEffectAttached(float, CBaseHandle, int, unsigned char*, bool)
 T FX_PlayerAR2Tracer(Vector const&, Vector const&)
 T FX_PlayerTracer(Vector&, Vector&)
 T FX_RicochetSound(Vector const&)
 T FX_Smoke(Vector const&, QAngle const&, float, int, unsigned char*, int)
 T FX_Smoke(Vector const&, Vector const&, float, int, float, unsigned char*, int, char const*, float, float)
 T FX_SparkFan(Vector&, Vector&)
 T FX_StriderMuzzleEffect(Vector const&, QAngle const&, float, CBaseHandle, unsigned char*)
 T FX_StriderTracer(Vector&, Vector&, int, bool)
 T FX_Tesla(CTeslaInfo const&)
 T FX_ThumperDust(CEffectData const&)
 T FX_Tracer(Vector&, Vector&, int, bool)
 T FX_TracerSound(Vector const&, Vector const&, int)
 T FX_WaterRipple(Vector const&, float, Vector*, float, float)
 T FactoryList_Retrieve(factorylist_t&)
 T FactoryList_Store(factorylist_t const&)
 T FileWeaponInfo_t::FileWeaponInfo_t()
 T FileWeaponInfo_t::Parse(KeyValues*, char const*)
 T FindBodygroupByName(CStudioHdr*, char const*)
 T FindEntityInFrontOfLocalPlayer()
 T FindFieldByName(char const*, datamap_t*)
 T FindNearbyVguiScreen(Vector const&, QAngle const&, int)
 T FindOrAddPanelAnimationMap(char const*)
 T FindTransitionSequence(CStudioHdr*, int, int, int*)
 T FireEffect(C_BaseAnimating*, C_BaseEntity*, float*, float*, float*)
 T FlexSettingLessFunc(FS_LocalToGlobal_t const&, FS_LocalToGlobal_t const&)
 T FloatBitMap_t::CompressTo8Bits(float)
 T FloatBitMap_t::FloatBitMap_t(int, int)
 T FloatBitMap_t::~FloatBitMap_t()
 T FormatViewModelAttachment(Vector&, bool)
 T FreeHudTextureList(CUtlDict<CHudTexture*, int>&)
 T FrustumTransform(VMatrix const&, Vector const&, Vector&)
 T Gain(float, float)
 T GameResources()
 T GameStringSystem()
 T GaussTracerCallback(CEffectData const&)
 T GenerateLineLoopIndexBuffer(unsigned short*, int, int)
 T GenerateLineStripIndexBuffer(unsigned short*, int, int)
 T GeneratePerspectiveFrustum(Vector const&, QAngle const&, float, float, float, float, Frustum_t&)
 T GeneratePerspectiveFrustum(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, Frustum_t&)
 T GeneratePolygonIndexBuffer(unsigned short*, int, int)
 T GenerateQuadIndexBuffer(unsigned short*, int, int)
 T GenerateSequentialIndexBuffer(unsigned short*, int, int)
 T GetActiveWeapon()
 T GetAmmoDef()
 T GetAttachTypeFromString(char const*)
 T GetAttachmentLocalSpace(CStudioHdr*, int, matrix3x4_t&)
 T GetAutoMultiplayerPhysicsMode(Vector, float)
 T GetCStringCharConversion()
 T GetCameraTexture()
 T GetClassMap()
 T GetClientInterpAmount()
 T GetClientModeNormal()
 T GetClientVoiceMgr()
 T GetClientWorldEntity()
 T GetColorForSurface(CGameTrace*, Vector*)
 T GetCurrentGravity()
 T GetDetailController()
 T GetEntitySaveRestoreBlockHandler()
 T GetEventIndexForSequence(mstudioseqdesc_t&)
 T GetFastSwitchType()
 T GetFileWeaponInfoFromHandle(unsigned short)
 T GetFullFrameDepthTexture()
 T GetFullFrameFrameBufferTexture(int)
 T GetFullscreenTexture()
 T GetGlobalTeam(int)
 T GetHudSize(int&, int&)
 T GetHudWeaponSelection()
 T GetInterpolationData(float const*, float const*, int, int, float, bool, float*, float*, float*)
 T GetInvalidWeaponInfoHandle()
 T GetLocalPlayerIndex()
 T GetLocalPlayerTeam()
 T GetLocalTeam()
 T GetMDLBoundingBox(Vector*, Vector*, unsigned short, int)
 T GetMDLBoundingSphere(Vector*, float*, unsigned short, int)
 T GetMaterialIndex(char const*)
 T GetMaterialNameFromIndex(int)
 T GetNoEscCharConversion()
 T GetPDumpPanel()
 T GetPanelAnimationDictionary()
 T GetParticleManifest(CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T GetParticlePerformance()
 T GetParticleSystemIndex(char const*)
 T GetParticleSystemNameFromIndex(int)
 T GetPhysObjSaveRestoreOps(PhysInterfaceId_t)
 T GetPhysSaveRestoreBlockHandler()
 T GetPointCameraList()
 T GetPowerOfTwoFrameBufferTexture()
 T GetPushawayEnts(C_BaseCombatCharacter*, C_BaseEntity**, int, float, int, CPushAwayEnumerator*)
 T GetRagdollCurSequenceWithDeathPose(C_BaseAnimating*, matrix3x4_t*, float, int, int)
 T GetRatioedHudSize(int&, int&, int&, int&)
 T GetRealScreenSize(int&, int&)
 T GetSIMDRandContext()
 T GetSequenceFlags(CStudioHdr*, int)
 T GetSequenceLinearMotion(CStudioHdr*, int, float const*, Vector*)
 T GetSoundSaveRestoreOps()
 T GetSpectatorMode()
 T GetSpectatorTarget()
 T GetTracerOrigin(CEffectData const&)
 T GetVGUICursorPos(int&, int&)
 T GetViewEffectsRestoreBlockHandler()
 T GetWaterReflectionTexture()
 T GetWaterRefractionTexture()
 T GetWindspeedAtTime(float, Vector&)
 T GetWorldPhysObject()
 T GlassImpactCallback(CEffectData const&)
 T GlowSightDistance(Vector const&, bool)
 T GunshipImpactCallback(CEffectData const&)
 T GunshipMuzzleFlashCallback(CEffectData const&)
 T GunshipTracerCallback(CEffectData const&)
 T Gunship_DrawSprite(Vector const&, float, color32_s const&, bool)
 T GunshotSplashCallback(CEffectData const&)
 T HLTVCamera()
 T Hack_FixEscapeChars(char*)
 T Hash4(void const*)
 T HashInt(int)
 T HelicopterMegaBombCallback(CEffectData const&)
 T HelicopterTracerCallback(CEffectData const&)
 T Helper_GetFrameTime()
 T Helper_GetTime()
 T Helper_RandomFloat(float, float)
 T Helper_RandomInt(int, int)
 T Hermite_Spline(Quaternion const&, Quaternion const&, Quaternion const&, float, Quaternion&)
 T Hermite_Spline(Vector const&, Vector const&, Vector const&, float, Vector&)
 T HintClear()
 T HookHapticMessages()
 T HunterDamageCallback(CEffectData const&)
 T HunterMuzzleFlashCallback(CEffectData const&)
 T HunterTracerCallback(CEffectData const&)
 T IBoneSetup::AccumulatePose(Vector*, Quaternion*, int, float, float, float, CIKContext*)
 T IBoneSetup::CalcAutoplaySequences(Vector*, Quaternion*, float, CIKContext*)
 T IBoneSetup::CalcBoneAdj(Vector*, Quaternion*, float const*)
 T IBoneSetup::GetStudioHdr()
 T IBoneSetup::IBoneSetup(CStudioHdr const*, int, float const*, IPoseDebugger*)
 T IBoneSetup::InitPose(Vector*, Quaternion*)
 T IBoneSetup::~IBoneSetup()
 T IGameEventListener2::~IGameEventListener2()
 T IGameSystem::Add(IGameSystem*)
 T IGameSystem::InitAllSystems()
 T IGameSystem::LevelInitPostEntityAllSystems()
 T IGameSystem::LevelInitPreEntityAllSystems(char const*)
 T IGameSystem::LevelShutdownPostEntityAllSystems()
 T IGameSystem::LevelShutdownPreClearSteamAPIContext()
 T IGameSystem::LevelShutdownPreEntityAllSystems()
 T IGameSystem::MapName()
 T IGameSystem::OnRestoreAllSystems()
 T IGameSystem::OnSaveAllSystems()
 T IGameSystem::PostInitAllSystems()
 T IGameSystem::PostRenderAllSystems()
 T IGameSystem::PreRenderAllSystems()
 T IGameSystem::Remove(IGameSystem*)
 T IGameSystem::ShutdownAllSystems()
 T IGameSystem::UpdateAllSystems(float)
 T IGameSystem::~IGameSystem()
 T IGameSystemPerFrame::~IGameSystemPerFrame()
 T ILocalize::ConstructStringVArgsInternal(wchar_t*, int, wchar_t const*, int, char*)
 T ILocalize::ConvertANSIToUnicode(char const*, wchar_t*, int)
 T ILocalize::ConvertUnicodeToANSI(wchar_t const*, char*, int)
 T IN_Alt1Down(CCommand const&)
 T IN_Alt1Up(CCommand const&)
 T IN_Alt2Down(CCommand const&)
 T IN_Alt2Up(CCommand const&)
 T IN_Attack2Down(CCommand const&)
 T IN_Attack2Up(CCommand const&)
 T IN_Attack3Down(CCommand const&)
 T IN_Attack3Up(CCommand const&)
 T IN_AttackDown(CCommand const&)
 T IN_AttackUp(CCommand const&)
 T IN_BackDown(CCommand const&)
 T IN_BackUp(CCommand const&)
 T IN_BreakDown(CCommand const&)
 T IN_BreakUp(CCommand const&)
 T IN_CenterView_f()
 T IN_CommanderMouseMoveDown(CCommand const&)
 T IN_CommanderMouseMoveUp(CCommand const&)
 T IN_DownDown(CCommand const&)
 T IN_DownUp(CCommand const&)
 T IN_DuckDown(CCommand const&)
 T IN_DuckUp(CCommand const&)
 T IN_ForwardDown(CCommand const&)
 T IN_ForwardUp(CCommand const&)
 T IN_GraphDown(CCommand const&)
 T IN_GraphUp(CCommand const&)
 T IN_Grenade1Down(CCommand const&)
 T IN_Grenade1Up(CCommand const&)
 T IN_Grenade2Down(CCommand const&)
 T IN_Grenade2Up(CCommand const&)
 T IN_Impulse(CCommand const&)
 T IN_JLookDown(CCommand const&)
 T IN_JLookUp(CCommand const&)
 T IN_Joystick_Advanced_f()
 T IN_JumpDown(CCommand const&)
 T IN_JumpUp(CCommand const&)
 T IN_KLookDown(CCommand const&)
 T IN_KLookUp(CCommand const&)
 T IN_LeftDown(CCommand const&)
 T IN_LeftUp(CCommand const&)
 T IN_LookSpinDown(CCommand const&)
 T IN_LookSpinUp(CCommand const&)
 T IN_LookdownDown(CCommand const&)
 T IN_LookdownUp(CCommand const&)
 T IN_LookupDown(CCommand const&)
 T IN_LookupUp(CCommand const&)
 T IN_MoveleftDown(CCommand const&)
 T IN_MoveleftUp(CCommand const&)
 T IN_MoverightDown(CCommand const&)
 T IN_MoverightUp(CCommand const&)
 T IN_ReloadDown(CCommand const&)
 T IN_ReloadUp(CCommand const&)
 T IN_ResetCameraDown(CCommand const&)
 T IN_ResetCameraUp(CCommand const&)
 T IN_RightDown(CCommand const&)
 T IN_RightUp(CCommand const&)
 T IN_ScoreDown(CCommand const&)
 T IN_ScoreUp(CCommand const&)
 T IN_SpeedDown(CCommand const&)
 T IN_SpeedUp(CCommand const&)
 T IN_StrafeDown(CCommand const&)
 T IN_StrafeUp(CCommand const&)
 T IN_UpDown(CCommand const&)
 T IN_UpUp(CCommand const&)
 T IN_UseDown(CCommand const&)
 T IN_UseUp(CCommand const&)
 T IN_WalkDown(CCommand const&)
 T IN_WalkUp(CCommand const&)
 T IN_XboxStub(CCommand const&)
 T IN_ZoomDown(CCommand const&)
 T IN_ZoomUp(CCommand const&)
 T IParticleEffect::GetEffectName()
 T IParticleEffect::GetParticlePosition(Particle*)
 T IParticleEffect::NotifyDestroyParticle(Particle*)
 T IParticleEffect::NotifyRemove()
 T IParticleEffect::StartRender(VMatrix&)
 T IParticleEffect::Update(float)
 T IParticleEffect::~IParticleEffect()
 T IParticleSystemQuery::GetCollisionGroupFromName(char const*)
 T IParticleSystemQuery::GetControllingObjectHitBoxInfo(CParticleCollection*, int, int, ModelHitBoxInfo_t*)
 T IParticleSystemQuery::GetLocalPlayerEyeVectors(Vector*, Vector*, Vector*)
 T IParticleSystemQuery::GetLocalPlayerPos()
 T IParticleSystemQuery::IsPointInControllingObjectHitBox(CParticleCollection*, int, Vector, bool)
 T IParticleSystemQuery::MovePointInsideControllingObject(CParticleCollection*, void*, Vector*)
 T IParticleSystemQuery::SetUpLightingEnvironment(Vector const&)
 T IPredictionSystem::~IPredictionSystem()
 T IPrototypeAppEffect::GetPropEditInfo(RecvTable**, void**)
 T IRotateAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
 T IceKey::IceKey(int)
 T IceKey::blockSize() const
 T IceKey::decrypt(unsigned char const*, unsigned char*) const
 T IceKey::scheduleBuild(unsigned short*, int, int const*)
 T IceKey::set(unsigned char const*)
 T IceKey::~IceKey()
 T ImageLoader::CKernelWrapper<0, false>::ApplyKernel(ImageLoader::KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<0, false>::ComputeAveragedColor(ImageLoader::KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<0, true>::ApplyKernel(ImageLoader::KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<0, true>::ComputeAveragedColor(ImageLoader::KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<1, false>::ApplyKernel(ImageLoader::KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<1, false>::ComputeAveragedColor(ImageLoader::KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<1, true>::ApplyKernel(ImageLoader::KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<1, true>::ComputeAveragedColor(ImageLoader::KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<2, false>::AddAlphaToAlphaResult(ImageLoader::KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float, float*)
 T ImageLoader::CKernelWrapper<2, false>::AdjustAlphaChannel(ImageLoader::KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*)
 T ImageLoader::CKernelWrapper<2, false>::ApplyKernel(ImageLoader::KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<2, false>::ComputeAveragedColor(ImageLoader::KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<2, true>::AddAlphaToAlphaResult(ImageLoader::KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float, float*)
 T ImageLoader::CKernelWrapper<2, true>::AdjustAlphaChannel(ImageLoader::KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*)
 T ImageLoader::CKernelWrapper<2, true>::ApplyKernel(ImageLoader::KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::CKernelWrapper<2, true>::ComputeAveragedColor(ImageLoader::KernelInfo_t const&, ImageLoader::ResampleInfo_t const&, int, int, int, float*, float*)
 T ImageLoader::ConvertImageFormat(unsigned char const*, ImageFormat, unsigned char*, ImageFormat, int, int, int, int)
 T ImageLoader::ConvertImageFormat_RGB323232F_To_BGRA8888(float*, unsigned char*, int, int)
 T ImageLoader::ConvertImageFormat_RGB323232F_To_RGBA8888(float*, unsigned char*, int, int)
 T ImageLoader::ConvertImageFormat_RGBA16161616F_To_RGB323232F(float16*, float*, int, int)
 T ImageLoader::ConvertImageFormat_RGBA16161616F_To_RGBA16161616(float16*, unsigned short*, int, int)
 T ImageLoader::ConvertImageFormat_RGBA16161616F_To_RGBA323232F(float16*, float*, int, int, unsigned long)
 T ImageLoader::ConvertImageFormat_RGBA16161616_To_RGBA16161616F(unsigned short*, float*, int, int)
 T ImageLoader::ConvertNormalMapRGBA8888ToDUDVMapUV88(unsigned char const*, int, int, unsigned char*)
 T ImageLoader::ConvertNormalMapRGBA8888ToDUDVMapUVLX8888(unsigned char const*, int, int, unsigned char*)
 T ImageLoader::ConvertNormalMapRGBA8888ToDUDVMapUVWQ8888(unsigned char const*, int, int, unsigned char*)
 T ImageLoader::FlipImageHorizontally(void*, void*, int, int, ImageFormat, int)
 T ImageLoader::FlipImageVertically(void*, void*, int, int, ImageFormat, int)
 T ImageLoader::GammaCorrectRGBA8888(unsigned char*, unsigned char*, int, int, int, float, float)
 T ImageLoader::GenerateMipmapLevels(unsigned char*, unsigned char*, int, int, int, ImageFormat, float, float, int)
 T ImageLoader::GetMemRequired(int, int, int, ImageFormat, bool)
 T ImageLoader::GetNumMipMapLevels(int, int, int)
 T ImageLoader::ImageFormatInfo(ImageFormat)
 T ImageLoader::NormalizeNormalMapRGBA8888(unsigned char*, int)
 T ImageLoader::ResampleRGB323232F(ImageLoader::ResampleInfo_t const&)
 T ImageLoader::ResampleRGBA8888(ImageLoader::ResampleInfo_t const&)
 T ImageLoader::RotateImage180(unsigned char const*, unsigned char*, int, ImageFormat)
 T ImageLoader::RotateImageLeft(unsigned char const*, unsigned char*, int, ImageFormat)
 T ImgUtl_LoadBitmap(char const*, Bitmap_t&)
 T ImgUtl_ReadImageAsRGBA(char const*, int&, int&, ConversionErrorType&)
 T ImgUtl_ReadJPEGAsRGBA(char const*, int&, int&, ConversionErrorType&)
 T ImgUtl_ReadPNGAsRGBA(char const*, int&, int&, ConversionErrorType&)
 T ImgUtl_ReadPNGAsRGBAFromBuffer(CUtlBuffer&, int&, int&, ConversionErrorType&)
 T ImgUtl_ReadTGAAsRGBA(char const*, int&, int&, ConversionErrorType&, TGAHeader&)
 T ImgUtl_ReadVTFAsRGBA(char const*, int&, int&, ConversionErrorType&)
 T ImgUtl_ResizeBitmap(Bitmap_t&, int, int, Bitmap_t const*)
 T ImgUtl_StretchRGBAImage(unsigned char const*, int, int, unsigned char*, int, int)
 T Impact(Vector&, Vector&, int, int, int, C_BaseEntity*, CGameTrace&, int, int)
 T ImpactAirboatGunCallback(CEffectData const&)
 T ImpactCallback(CEffectData const&)
 T ImpactGaussCallback(CEffectData const&)
 T ImpactGunshipCallback(CEffectData const&)
 T ImpactHelicopterCallback(CEffectData const&)
 T ImpactJeepCallback(CEffectData const&)
 T IndexModelSequences(CStudioHdr*)
 T InitCRTMemDebug()
 T InitPose(CStudioHdr const*, Vector*, Quaternion*, int)
 T InitSmokeFogOverlay()
 T InitializeImage(KeyValues*, char const*, vgui::Panel*, BitmapImage*)
 T InitializeStandardMaterials()
 T Initializer::FreeAllObjects()
 T Initializer::InitializeAllObjects()
 T InstallStringTableCallback_GameRules()
 T InterfaceReg::InterfaceReg(void* (*)(), char const*)
 T InternalRecvPropArray(int, int, char const*, void (*)(void*, int, int))
 T InterpolateAngles(QAngle const&, QAngle const&, QAngle&, float)
 T Interpolator_CurveInterpolate(int, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T Interpolator_CurveInterpolatorsForType(int, int&, int&)
 T Interpolator_CurveTypeForName(char const*)
 T IntersectInfiniteRayWithSphere(Vector const&, Vector const&, Vector const&, float, float*, float*)
 T IntersectRayWithBox(Vector const&, Vector const&, Vector const&, Vector const&, float, BoxTraceInfo_t*)
 T IntersectRayWithBox(Vector const&, Vector const&, Vector const&, Vector const&, float, CBaseTrace*, float*)
 T IntersectRayWithOBB(Ray_t const&, matrix3x4_t const&, Vector const&, Vector const&, float, CBaseTrace*)
 T IntersectRayWithOBB(Vector const&, Vector const&, matrix3x4_t const&, Vector const&, Vector const&, float, CBaseTrace*)
 T IntersectRayWithRay(Ray_t const&, Ray_t const&, float&, float&)
 T InvalidateEFlagsRecursive(C_BaseEntity*, int, int)
 T InvalidateUniqueId(UniqueId_t*)
 T IsBoxIntersectingSphere(Vector const&, Vector const&, Vector const&, float)
 T IsBufferBinaryVCD(char*, int)
 T IsCurrentViewAccessAllowed()
 T IsEngineThreaded()
 T IsInCommentaryMode()
 T IsNodeUnderCrosshair(C_BasePlayer*)
 T IsPointInBox(Vector const&, Vector const&, Vector const&)
 T IsReflectiveGlassInView(CViewSetup const&, cplane_t&)
 T IsSphereIntersectingSphere(Vector const&, float, Vector const&, float)
 T IsSteamDeck()
 T IsUniqueIdEqual(UniqueId_t const&, UniqueId_t const&)
 T IsUniqueIdValid(UniqueId_t const&)
 T KeyDown(kbutton_t*, char const*)
 T KeyUp(kbutton_t*, char const*)
 T KeyValues::AddSubKey(KeyValues*)
 T KeyValues::ChainKeyValue(KeyValues*)
 T KeyValues::CopySubkeys(KeyValues*) const
 T KeyValues::CreateKeyUsingKnownLastChild(char const*, KeyValues*)
 T KeyValues::CreateNewKey()
 T KeyValues::FindKey(char const*, bool)
 T KeyValues::FindKey(int) const
 T KeyValues::GetBool(char const*, bool)
 T KeyValues::GetColor(char const*)
 T KeyValues::GetDataType(char const*)
 T KeyValues::GetFloat(char const*, float)
 T KeyValues::GetInt(char const*, int)
 T KeyValues::GetName() const
 T KeyValues::GetPtr(char const*, void*)
 T KeyValues::GetString(char const*, char const*)
 T KeyValues::GetStringForSymbolClassic(int)
 T KeyValues::GetSymbolForStringClassic(char const*, bool)
 T KeyValues::GetUint64(char const*, unsigned long long)
 T KeyValues::GetWString(char const*, wchar_t const*)
 T KeyValues::IsEmpty(char const*)
 T KeyValues::KeyValues(char const*)
 T KeyValues::KeyValues(char const*, char const*, char const*)
 T KeyValues::KeyValues(char const*, char const*, char const*, char const*, char const*)
 T KeyValues::KeyValues(char const*, char const*, int)
 T KeyValues::KeyValues(char const*, char const*, int, char const*, int)
 T KeyValues::KeyValues(char const*, char const*, wchar_t const*)
 T KeyValues::LoadFromBuffer(char const*, CUtlBuffer&, IBaseFileSystem*, char const*)
 T KeyValues::LoadFromBuffer(char const*, char const*, IBaseFileSystem*, char const*)
 T KeyValues::LoadFromFile(IBaseFileSystem*, char const*, char const*)
 T KeyValues::MakeCopy() const
 T KeyValues::ParseIncludedKeys(char const*, char const*, IBaseFileSystem*, char const*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T KeyValues::ProcessResolutionKeys(char const*)
 T KeyValues::ReadToken(CUtlBuffer&, bool&, bool&)
 T KeyValues::RecursiveLoadFromBuffer(char const*, CUtlBuffer&)
 T KeyValues::RecursiveMergeKeyValues(KeyValues*)
 T KeyValues::RecursiveSaveToFile(CUtlBuffer&, int, bool, bool)
 T KeyValues::RecursiveSaveToFile(IBaseFileSystem*, void*, CUtlBuffer*, int, bool, bool)
 T KeyValues::RemoveEverything()
 T KeyValues::SaveKeyToFile(KeyValues*, IBaseFileSystem*, void*, CUtlBuffer*, int, bool, bool)
 T KeyValues::SaveToFile(IBaseFileSystem*, char const*, char const*, bool, bool)
 T KeyValues::SetColor(char const*, Color)
 T KeyValues::SetFloat(char const*, float)
 T KeyValues::SetInt(char const*, int)
 T KeyValues::SetPtr(char const*, void*)
 T KeyValues::SetString(char const*, char const*)
 T KeyValues::SetStringValue(char const*)
 T KeyValues::SetWString(char const*, wchar_t const*)
 T KeyValues::WriteConvertedString(IBaseFileSystem*, void*, CUtlBuffer*, char const*)
 T KeyValues::deleteThis()
 T KeyValues::operator delete(void*)
 T KeyValues::operator new(unsigned long)
 T Kochanek_Bartels_Spline(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T Kochanek_Bartels_Spline_NormalizeX(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
 T LightDesc_t::ComputeLightAtPoints(FourVectors const&, FourVectors const&, FourVectors&, bool) const
 T LightDesc_t::ComputeNonincidenceLightAtPoints(FourVectors const&, FourVectors&) const
 T LightDesc_t::RecalculateDerivedValues()
 T LightDesc_t::SetupNewStyleAttenuation(float, float)
 T LinearToGammaFullRange(float)
 T LinearToTexture(float)
 T LoadHudTextures(CUtlDict<CHudTexture*, int>&, char const*, unsigned char const*)
 T LockNodeDirection(CSimplePhysics::CNode*, int, int, float, float, Vector const&)
 T LookupActivity(CStudioHdr*, char const*)
 T LookupSequence(CStudioHdr*, char const*)
 T MD5Update(MD5Context_t*, unsigned char const*, unsigned int)
 T MD5_PseudoRandom(unsigned int)
 T MP3Player_Create(unsigned int)
 T MP3Player_Destroy()
 T MainViewAngles()
 T MainViewForward()
 T MainViewOrigin()
 T MainViewRight()
 T MainViewUp()
 T ManhackSparkCallback(CEffectData const&)
 T MapEntity_ParseToken(char const*, char*)
 T MapEntity_SkipToNextEntity(char const*, char*)
 T MaterialFootstepSound(C_BaseAnimating*, bool, float)
 T MathLib_Init(float, float, float, int, bool, bool, bool, bool)
 T MatrixAngles(matrix3x4_t const&, Quaternion&, Vector&)
 T MatrixAngles(matrix3x4_t const&, float*)
 T MatrixBuildPerspective(VMatrix&, float, float, float, float)
 T MatrixBuildRotateZ(VMatrix&, float)
 T MatrixBuildRotationAboutAxis(VMatrix&, Vector const&, float)
 T MatrixBuildRotationAboutAxis(Vector const&, float, matrix3x4_t&)
 T MatrixBuildScale(VMatrix&, float, float, float)
 T MatrixBuildTranslation(VMatrix&, Vector const&)
 T MatrixBuildTranslation(VMatrix&, float, float, float)
 T MatrixCopy(matrix3x4_t const&, matrix3x4_t&)
 T MatrixFromAngles(QAngle const&, VMatrix&)
 T MatrixGetColumn(matrix3x4_t const&, int, Vector&)
 T MatrixInverseGeneral(VMatrix const&, VMatrix&)
 T MatrixInverseTR(VMatrix const&, VMatrix&)
 T MatrixInvert(matrix3x4_t const&, matrix3x4_t&)
 T MatrixMultiply(VMatrix const&, VMatrix const&, VMatrix&)
 T MatrixScaleByZero(matrix3x4_t&)
 T MatrixSetColumn(Vector const&, int, matrix3x4_t&)
 T MatrixSetIdentity(VMatrix&)
 T MatrixToAngles(VMatrix const&, QAngle&)
 T MatrixTranspose(VMatrix const&, VMatrix&)
 T MatrixVectors(matrix3x4_t const&, Vector*, Vector*, Vector*)
 T MenuItemCheckImage::Paint()
 T MenuItemCheckImage::~MenuItemCheckImage()
 T MessageBox_Factory()
 T ModelPoseDebugInfo::AddInfoText(ModelPoseDebugInfo::InfoText*, ModelPoseDebugInfo*)
 T ModelPoseDebugInfo::PrintPendingInfoText(int&)
 T MumbleSystem()
 T MuzzleFlashCallback(CEffectData const&)
 T MuzzleFlash_Airboat(CBaseHandle, int)
 T MuzzleFlash_Chopper(CBaseHandle, int)
 T MuzzleFlash_Gunship(CBaseHandle, int)
 T MuzzleFlash_Hunter(CBaseHandle, int)
 T MuzzleFlash_Strider(CBaseHandle, int)
 T NPC_IsImportantNPC(C_BaseAnimating*)
 T NetgraphFontChangeCallback(IConVar*, char const*, float)
 T NoiseSIMD(FourVectors const&)
 T NoiseSIMD(float __vector(4) const&, float __vector(4) const&, float __vector(4) const&)
 T NormalizeAngles(QAngle&)
 T NoteRagdollCreationTick(C_BaseEntity*)
 T OnCaptionLanguageChanged(IConVar*, char const*, float)
 T OnGameRulesCreationStringChanged(void*, INetworkStringTable*, int, char const*, void const*)
 T OnMaterialStringTableChanged(void*, INetworkStringTable*, int, char const*, void const*)
 T OnParticleSystemStringTableChanged(void*, INetworkStringTable*, int, char const*, void const*)
 T OnRenderStart()
 T OnSceneStringTableChanged(void*, INetworkStringTable*, int, char const*, void const*)
 T OnVguiScreenTableChanged(void*, INetworkStringTable*, int, char const*, void const*)
 T OverlayCameraRenderTarget(char const*, float, float, float, float)
 T PVSNotifierMap_LessFunc(IClientUnknown* const&, IClientUnknown* const&)
 T PanelAnimationDumpVars(char const*)
 T PanelMetaClassMgr()
 T ParseFileInternal(char const*, char*, bool*, characterset_t*, unsigned long)
 T ParseImpactData(CEffectData const&, Vector*, Vector*, Vector*, short&, int&, int&, int&)
 T ParseParticleEffects(bool, bool)
 T ParseParticleEffectsMap(char const*, bool, IFileList*)
 T ParseRGBA(KeyValues*, char const*, Color&)
 T ParseTokenFromString(char const**)
 T ParticleEffectCallback(CEffectData const&)
 T ParticleEffectStopCallback(CEffectData const&)
 T ParticleMgr()
 T ParticleSphereProxy::GetMaterial()
 T ParticleSphereProxy::Init(IMaterial*, KeyValues*)
 T ParticleSphereProxy::OnBind(void*)
 T ParticleSphereProxy::Release()
 T ParticleSphereProxy::~ParticleSphereProxy()
 T ParticleTracerCallback(CEffectData const&)
 T PerfVisualBenchmark()
 T PerformCustomEffects(Vector const&, CGameTrace&, Vector const&, int, int, int)
 T PhysCleanupFrictionSounds(C_BaseEntity*)
 T PhysCreateBbox(Vector const&, Vector const&)
 T PhysCreateVirtualTerrain(C_BaseEntity*, objectparams_t const&)
 T PhysCreateWorld_Shared(C_BaseEntity*, vcollide_t*, objectparams_t const&)
 T PhysDestroyObject(IPhysicsObject*, C_BaseEntity*)
 T PhysForceClearVelocity(IPhysicsObject*)
 T PhysFrictionEffect(Vector&, Vector, float, int, int)
 T PhysFrictionSound(C_BaseEntity*, IPhysicsObject*, char const*, short&, float)
 T PhysFrictionSound(C_BaseEntity*, IPhysicsObject*, float, int, int)
 T PhysGetSyncCreateTime()
 T PhysHasContactWithOtherInDirection(IPhysicsObject*, Vector const&)
 T PhysIsInCallback()
 T PhysModelCreate(C_BaseEntity*, int, Vector const&, QAngle const&, solid_t*)
 T PhysModelCreateBox(C_BaseEntity*, Vector const&, Vector const&, Vector const&, bool)
 T PhysModelCreateOBB(C_BaseEntity*, Vector const&, Vector const&, Vector const&, QAngle const&, bool)
 T PhysModelParseSolid(solid_t&, C_BaseEntity*, int)
 T PhysModelParseSolidByIndex(solid_t&, C_BaseEntity*, int, int)
 T PhysModelParseSolidByIndex(solid_t&, C_BaseEntity*, vcollide_t*, int)
 T PhysParseSurfaceData(IPhysicsSurfaceProps*, IFileSystem*)
 T PhysicsDLLInit(void* (*)(char const*, int*))
 T PhysicsLevelInit()
 T PhysicsReset()
 T PhysicsSimulate()
 T PhysicsSplash(IPhysicsFluidController*, IPhysicsObject*, C_BaseEntity*)
 T PixelVisibility_DrawProxy(IMatRenderContext*, OcclusionQueryObjectHandle_t__*, Vector, float, float, IMaterial*, bool)
 T PixelVisibility_EndCurrentView()
 T PixelVisibility_EndScene()
 T PixelVisibility_FractionVisible(pixelvis_queryparams_t const&, int*)
 T PixelVisibility_IsAvailable()
 T PlayImpactSound(C_BaseEntity*, CGameTrace&, Vector&, int)
 T Playgamesound_f(CCommand const&)
 T Pow_FixedPoint_Exponent_SIMD(float __vector(4) const&, int)
 T PrecacheEffectBloodSpray::ClientEffectRegister::Cache(bool)
 T PrecacheEffectBuild::ClientEffectRegister::Cache(bool)
 T PrecacheEffectCombineBall::ClientEffectRegister::Cache(bool)
 T PrecacheEffectCrossbow::ClientEffectRegister::Cache(bool)
 T PrecacheEffectDusttrail::ClientEffectRegister::Cache(bool)
 T PrecacheEffectExplosion::ClientEffectRegister::Cache(bool)
 T PrecacheEffectFlares::ClientEffectRegister::Cache(bool)
 T PrecacheEffectGlassShatter::ClientEffectRegister::Cache(bool)
 T PrecacheEffectGlow::ClientEffectRegister::Cache(bool)
 T PrecacheEffectImpacts::ClientEffectRegister::Cache(bool)
 T PrecacheEffectMuzzleFlash::ClientEffectRegister::Cache(bool)
 T PrecacheEffectPlasmaBeam::ClientEffectRegister::Cache(bool)
 T PrecacheEffectSparks::ClientEffectRegister::Cache(bool)
 T PrecacheEffectSplash::ClientEffectRegister::Cache(bool)
 T PrecacheEffectStunstick::ClientEffectRegister::Cache(bool)
 T PrecacheEffectVGuiScreen::ClientEffectRegister::Cache(bool)
 T PrecacheEffectWarp::ClientEffectRegister::Cache(bool)
 T PrecacheEffectsTest::ClientEffectRegister::Cache(bool)
 T PrecacheFileWeaponInfoDatabase(IFileSystem*, unsigned char const*)
 T PrecacheGunshipFX::ClientEffectRegister::Cache(bool)
 T PrecacheMaterial(char const*)
 T PrecacheMuzzleFlash::ClientEffectRegister::Cache(bool)
 T PrecacheOcclusionProxy::ClientEffectRegister::Cache(bool)
 T PrecachePhysicsSounds()
 T PrecachePlayerDecal::ClientEffectRegister::Cache(bool)
 T PrecachePostProcessingEffects::ClientEffectRegister::Cache(bool)
 T PrecachePrecipitation::ClientEffectRegister::Cache(bool)
 T PrecacheSmokeFogOverlay::ClientEffectRegister::Cache(bool)
 T PrecacheTracers::ClientEffectRegister::Cache(bool)
 T PrecacheViewRender::ClientEffectRegister::Cache(bool)
 T PreparePanelMessageMap(vgui::PanelMessageMap*)
 T PrevMainViewAngles()
 T PrevMainViewOrigin()
 T ProcessOnDataChangedEvents()
 T PropBreakableCreateAll(int, IPhysicsObject*, breakablepropparams_t const&, C_BaseEntity*, int, bool, bool)
 T QuaternionAlign(Quaternion const&, Quaternion const&, Quaternion&)
 T QuaternionAngles(Quaternion const&, QAngle&)
 T QuaternionAngles(Quaternion const&, RadianEuler&)
 T QuaternionBlend(Quaternion const&, Quaternion const&, float, Quaternion&)
 T QuaternionBlendNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
 T QuaternionDotProduct(Quaternion const&, Quaternion const&)
 T QuaternionIdentityBlend(Quaternion const&, float, Quaternion&)
 T QuaternionMatrix(Quaternion const&, Vector const&, matrix3x4_t&)
 T QuaternionMatrix(Quaternion const&, matrix3x4_t&)
 T QuaternionMult(Quaternion const&, Quaternion const&, Quaternion&)
 T QuaternionNormalize(Quaternion&)
 T QuaternionScale(Quaternion const&, float, Quaternion&)
 T QuaternionSlerp(Quaternion const&, Quaternion const&, float, Quaternion&)
 T QuaternionSlerpNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
 T RPGShotDownCallback(CEffectData const&)
 T R_CullBox(Vector const&, Vector const&, Frustum_t const&)
 T R_CullSphere(VPlane const*, int, Vector const*, float)
 T RagdollActivate(ragdoll_t&, vcollide_t*, int, bool)
 T RagdollApplyAnimationAsVelocity(ragdoll_t&, matrix3x4_t const*, matrix3x4_t const*, float)
 T RagdollComputeExactBbox(ragdoll_t const&, Vector const&, Vector&, Vector&)
 T RagdollCreate(ragdoll_t&, ragdollparams_t const&, IPhysicsEnvironment*)
 T RagdollDestroy(ragdoll_t&)
 T RagdollExtractBoneIndices(int*, CStudioHdr*, vcollide_t*)
 T RagdollGetBoneMatrix(ragdoll_t const&, CBoneAccessor&, int)
 T RagdollImpactCallback(CEffectData const&)
 T RagdollIsAsleep(ragdoll_t const&)
 T RagdollSetupAnimatedFriction(IPhysicsEnvironment*, ragdoll_t*, int)
 T RagdollSetupCollisions(ragdoll_t&, vcollide_t*, int)
 T RagdollSolveSeparation(ragdoll_t&, C_BaseEntity*)
 T RandSIMD(int)
 T RandomInterval(interval_t const&)
 T ReadAndAllocStringValue(KeyValues*, char const*, char const*)
 T ReadChatTextString(bf_read&, wchar_t*, int)
 T ReadDMXHeader(CUtlBuffer&, char*, int, int&, char*, int, int&)
 T ReadEncryptedKVFile(IFileSystem*, char const*, unsigned char const*, bool)
 T ReadInterval(char const*)
 T ReadLocalizedString(bf_read&, wchar_t*, int, bool, char*, int)
 T ReadUsercmd(bf_read*, CUserCmd*, CUserCmd*)
 T ReadWeaponDataFromFileForSlot(IFileSystem*, char const*, unsigned short*, unsigned char const*)
 T RecvProp::RecvProp()
 T RecvPropArray3(char const*, int, int, int, RecvProp, void (*)(RecvProp const*, void**, void*, int))
 T RecvPropBool(char const*, int, int)
 T RecvPropDataTable(char const*, int, int, RecvTable*, void (*)(RecvProp const*, void**, void*, int))
 T RecvPropEHandle(char const*, int, int, void (*)(CRecvProxyData const*, void*, void*))
 T RecvPropFloat(char const*, int, int, int, void (*)(CRecvProxyData const*, void*, void*))
 T RecvPropInt(char const*, int, int, int, void (*)(CRecvProxyData const*, void*, void*))
 T RecvPropIntWithMinusOneFlag(char const*, int, int, void (*)(CRecvProxyData const*, void*, void*))
 T RecvPropPredictableId(char const*, int, int)
 T RecvPropString(char const*, int, int, int, void (*)(CRecvProxyData const*, void*, void*))
 T RecvPropTime(char const*, int, int)
 T RecvPropUtlVector(char const*, int, int, void (*)(void*, int, int), void (*)(void*, int, int), int, RecvProp)
 T RecvPropVector(char const*, int, int, int, void (*)(CRecvProxyData const*, void*, void*))
 T RecvProxyArrayLength_PlayerArray(void*, int, int)
 T RecvProxy_AnimTime(CRecvProxyData const*, void*, void*)
 T RecvProxy_Beam_ScrollSpeed(CRecvProxyData const*, void*, void*)
 T RecvProxy_CapLayout(CRecvProxyData const*, void*, void*)
 T RecvProxy_CappingTeam(CRecvProxyData const*, void*, void*)
 T RecvProxy_EffectFlags(CRecvProxyData const*, void*, void*)
 T RecvProxy_FishOriginX(CRecvProxyData const*, void*, void*)
 T RecvProxy_FishOriginY(CRecvProxyData const*, void*, void*)
 T RecvProxy_FloatToFloat(CRecvProxyData const*, void*, void*)
 T RecvProxy_ForcedClientTime(CRecvProxyData const*, void*, void*)
 T RecvProxy_HL2GameRules(RecvProp const*, void**, void*, int)
 T RecvProxy_Int32ToInt16(CRecvProxyData const*, void*, void*)
 T RecvProxy_Int32ToInt32(CRecvProxyData const*, void*, void*)
 T RecvProxy_Int32ToInt8(CRecvProxyData const*, void*, void*)
 T RecvProxy_IntSubOne(CRecvProxyData const*, void*, void*)
 T RecvProxy_IntToColor32(CRecvProxyData const*, void*, void*)
 T RecvProxy_IntToEHandle(CRecvProxyData const*, void*, void*)
 T RecvProxy_IntToModelIndex16_BackCompatible(CRecvProxyData const*, void*, void*)
 T RecvProxy_IntToMoveParent(CRecvProxyData const*, void*, void*)
 T RecvProxy_InterpolationAmountChanged(CRecvProxyData const*, void*, void*)
 T RecvProxy_LocalVelocity(CRecvProxyData const*, void*, void*)
 T RecvProxy_LocalVelocityX(CRecvProxyData const*, void*, void*)
 T RecvProxy_LocalVelocityY(CRecvProxyData const*, void*, void*)
 T RecvProxy_LocalVelocityZ(CRecvProxyData const*, void*, void*)
 T RecvProxy_ObserverMode(CRecvProxyData const*, void*, void*)
 T RecvProxy_ObserverTarget(CRecvProxyData const*, void*, void*)
 T RecvProxy_Owner(CRecvProxyData const*, void*, void*)
 T RecvProxy_PlasmaScale(CRecvProxyData const*, void*, void*)
 T RecvProxy_PlasmaScaleTime(CRecvProxyData const*, void*, void*)
 T RecvProxy_PlayerList(CRecvProxyData const*, void*, void*)
 T RecvProxy_RecomputeSprings(CRecvProxyData const*, void*, void*)
 T RecvProxy_Scale(CRecvProxyData const*, void*, void*)
 T RecvProxy_ScaleTime(CRecvProxyData const*, void*, void*)
 T RecvProxy_Sequence(CRecvProxyData const*, void*, void*)
 T RecvProxy_SequenceNum(CRecvProxyData const*, void*, void*)
 T RecvProxy_ShortSubOne(CRecvProxyData const*, void*, void*)
 T RecvProxy_SimulationTime(CRecvProxyData const*, void*, void*)
 T RecvProxy_StringToString(CRecvProxyData const*, void*, void*)
 T RecvProxy_StunActive(CRecvProxyData const*, void*, void*)
 T RecvProxy_TeamplayRoundBasedRules(RecvProp const*, void**, void*, int)
 T RecvProxy_TeamplayRoundState(CRecvProxyData const*, void*, void*)
 T RecvProxy_UtlVectorElement(CRecvProxyData const*, void*, void*)
 T RecvProxy_UtlVectorElement_DataTable(RecvProp const*, void**, void*, int)
 T RecvProxy_UtlVectorLength(CRecvProxyData const*, void*, void*)
 T RecvProxy_VectorToVector(CRecvProxyData const*, void*, void*)
 T RecvTable::Construct(RecvProp*, int, char const*)
 T RecvTable::RecvTable()
 T RecvTable::RecvTable(RecvProp*, int, char const*)
 T RecvTable::~RecvTable()
 T RegisterHapticMessages()
 T RegisterUserMessages()
 T ReleaseRenderTargets()
 T ReleaseSIMDRandContext(int)
 T ReloadParticleEffectsInList(IFileList*)
 T ReloadSoundEntriesInList(IFileList*)
 T RemapViewAngles(ViewSmoothingData_t*, QAngle&)
 T RemoveColorMarkup(char*)
 T RenderBox(Vector const&, QAngle const&, Vector const&, Vector const&, Color, IMaterial*, bool)
 T RenderParticle_Color255Size(ParticleDraw*, Vector const&, Vector const&, float, float)
 T RenderParticle_Color255SizeNormalAngle(ParticleDraw*, Vector const&, Vector const&, float, float, Vector const&, float)
 T RenderParticle_ColorSize(ParticleDraw*, Vector const&, Vector const&, float, float)
 T RenderParticle_ColorSizeAngle(ParticleDraw*, Vector const&, Vector const&, float, float, float)
 T RenderParticle_ColorSizeAngles(ParticleDraw*, Vector const&, Vector const&, float, float, QAngle const&)
 T RenderParticle_ColorSizePerturbNormal(ParticleDraw*, Vector const&, Vector const&, float, float)
 T RenderWireframeBox(Vector const&, QAngle const&, Vector const&, Vector const&, Color, bool)
 T RenderWireframeSphere(Vector const&, float, int, int, Color, bool)
 T ReportVPhysicsStateChanged(IPhysicsObject*, C_BaseEntity*, bool)
 T ResetParticlePerformanceCounters()
 T ResetToneMapping(float)
 T ResetViewAngles()
 T ResetWindspeed()
 T ResizeAnimationLayerCallback(void*, int, int)
 T ResponseCurveLook(int, float, int, float, float, float)
 T RifleShellEjectCallback(CEffectData const&)
 T RippleCallback(CEffectData const&)
 T RopeManager()
 T Rope_ResetCounters()
 T RotationDeltaAxisAngle(QAngle const&, QAngle const&, Vector&, float&)
 T RumbleEffect(unsigned char, unsigned char, unsigned char)
 T SaveInit(int)
 T ScaleBones(CStudioHdr const*, Quaternion*, Vector*, int, float, int)
 T ScaleFOVByWidthRatio(float, float)
 T Scene_Printf(char const*, ...)
 T ScreenHeight()
 T ScreenTransform(Vector const&, Vector&)
 T ScreenWidth()
 T ScriptInfo_CalculateFOV(float, float, int, int, bool)
 T ScrollBar_Horizontal_Factory()
 T ScrollBar_Vertical_Factory()
 T SeedRandSIMD(unsigned int)
 T SelectWeightedSequence(CStudioHdr*, int, int)
 T SetActivityForSequence(CStudioHdr*, int)
 T SetBeamCreationAllowed(bool)
 T SetBodygroup(CStudioHdr*, int&, int, int)
 T SetEventIndexForSequence(mstudioseqdesc_t&)
 T SetFXCreationAllowed(bool)
 T SetIdentityMatrix(matrix3x4_t&)
 T SetSerializationDelimiter(CUtlCharConversion*)
 T SetVGUICursorPos(int, int)
 T SetVGuiScreenButtonState(C_BaseEntity*, int)
 T SetupCurrentView(Vector const&, QAngle const&, view_id_t)
 T SetupParticleVisibility(CParticleCollection*, CParticleVisibilityData*, CParticleVisibilityInputs const*, int*)
 T SetupSingleBoneMatrix(CStudioHdr*, int, int, int, matrix3x4_t&)
 T ShakeRopesCallback(CEffectData const&)
 T SharedRandomInt(char const*, int, int, int)
 T SharedVehicleViewSmoothing(C_BasePlayer*, Vector*, QAngle*, bool, bool, Vector const&, ViewSmoothingData_t*, float*)
 T ShellEjectCallback(CEffectData const&)
 T ShotgunShellEjectCallback(CEffectData const&)
 T ShouldRemoveThisRagdoll(C_BaseAnimating*)
 T SimulateEntities()
 T SinCos(float, float*, float*)
 T SlerpBones(CStudioHdr const*, Quaternion*, Vector*, mstudioseqdesc_t&, int, QuaternionAligned const*, Vector const*, float, int)
 T SmokeCallback(CEffectData const&)
 T SmokeStackMaterials::ClientEffectRegister::Cache(bool)
 T SmoothCurve(float)
 T SnowFallEffect::SimulateParticles(CParticleSimulateIterator*)
 T SnowFallEffect::UpdateVelocity(SimpleParticle*, float)
 T SnowFallEffect::~SnowFallEffect()
 T SnowFallManagerCreate(CClient_Precipitation*)
 T SoftwareCursorChangedCB(IConVar*, char const*, float)
 T SolveInverseQuadraticMonotonic(float, float, float, float, float, float, float&, float&, float&)
 T SoundCommandLessFunc(SoundCommand_t* const&, SoundCommand_t* const&)
 T SoundEmitterSystem()
 T Soundscape_Update(audioparams_t&)
 T SplashCallback(CEffectData const&)
 T Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, Vector&, Vector&)
 T SporeEffect::UpdateAlpha(SimpleParticle const*)
 T SporeEffect::UpdateColor(SimpleParticle const*)
 T SporeEffect::UpdateVelocity(SimpleParticle*, float)
 T SporeEffect::~SporeEffect()
 T StandardGlowBlend(pixelvis_queryparams_t const&, int*, int, int, int, float*)
 T SteamInternal_Init_SteamAppList(ISteamAppList**)
 T SteamInternal_Init_SteamApps(ISteamApps**)
 T SteamInternal_Init_SteamClient(ISteamClient**)
 T SteamInternal_Init_SteamController(ISteamController**)
 T SteamInternal_Init_SteamFriends(ISteamFriends**)
 T SteamInternal_Init_SteamGameSearch(ISteamGameSearch**)
 T SteamInternal_Init_SteamHTMLSurface(ISteamHTMLSurface**)
 T SteamInternal_Init_SteamHTTP(ISteamHTTP**)
 T SteamInternal_Init_SteamInput(ISteamInput**)
 T SteamInternal_Init_SteamInventory(ISteamInventory**)
 T SteamInternal_Init_SteamMatchmaking(ISteamMatchmaking**)
 T SteamInternal_Init_SteamMatchmakingServers(ISteamMatchmakingServers**)
 T SteamInternal_Init_SteamMusic(ISteamMusic**)
 T SteamInternal_Init_SteamMusicRemote(ISteamMusicRemote**)
 T SteamInternal_Init_SteamNetworking(ISteamNetworking**)
 T SteamInternal_Init_SteamParentalSettings(ISteamParentalSettings**)
 T SteamInternal_Init_SteamRemoteStorage(ISteamRemoteStorage**)
 T SteamInternal_Init_SteamScreenshots(ISteamScreenshots**)
 T SteamInternal_Init_SteamUGC(ISteamUGC**)
 T SteamInternal_Init_SteamUser(ISteamUser**)
 T SteamInternal_Init_SteamUserStats(ISteamUserStats**)
 T SteamInternal_Init_SteamUtils(ISteamUtils**)
 T SteamInternal_Init_SteamVideo(ISteamVideo**)
 T StickRagdollNow(Vector const&, Vector const&)
 T StickyBoltCallback(CEffectData const&)
 T StopAllRumbleEffects()
 T StriderBlood(Vector const&, Vector const&, float)
 T StriderBloodCallback(CEffectData const&)
 T StriderMuzzleFlashCallback(CEffectData const&)
 T StriderTracerCallback(CEffectData const&)
 T StringAfterPrefix(char const*, char const*)
 T StringLessThan(char const* const&, char const* const&)
 T StripEndNewlineFromString(char*)
 T StudioStats_FindClosestEntity(CClientRenderablesList*)
 T Studio_AlignIKMatrix(matrix3x4_t&, Vector const&)
 T Studio_AnimMovement(mstudioanimdesc_t*, float, float, Vector&, QAngle&)
 T Studio_AnimPosition(mstudioanimdesc_t*, float, Vector&, QAngle&)
 T Studio_BoneIndexByName(CStudioHdr const*, char const*)
 T Studio_CPS(CStudioHdr const*, mstudioseqdesc_t&, int, float const*)
 T Studio_CalcBoneToBoneTransform(CStudioHdr const*, int, int, matrix3x4_t&)
 T Studio_CalcDefaultPoseParameters(CStudioHdr const*, float*, int)
 T Studio_CreateBoneCache(bonecacheparams_t&)
 T Studio_DestroyBoneCache(memhandle_t__*)
 T Studio_Duration(CStudioHdr const*, int, float const*)
 T Studio_FindAttachment(CStudioHdr const*, char const*)
 T Studio_GetBoneCache(memhandle_t__*)
 T Studio_GetDefaultSurfaceProps(CStudioHdr*)
 T Studio_IKAnimationError(CStudioHdr const*, mstudioikrule_t*, mstudioanimdesc_t const*, float, Vector&, Quaternion&, float&)
 T Studio_IKRuleWeight(mstudioikrule_t&, mstudioanimdesc_t const*, float, int&, float&)
 T Studio_IKSequenceError(CStudioHdr const*, mstudioseqdesc_t&, int, float, int, float const*, mstudioanimdesc_t**, float*, ikcontextikrule_t&)
 T Studio_LocalPoseParameter(CStudioHdr const*, float const*, mstudioseqdesc_t&, int, int, float&, int&)
 T Studio_MaxFrame(CStudioHdr const*, int, float const*)
 T Studio_RunBoneFlexDrivers(float*, CStudioHdr const*, Vector const*, matrix3x4_t const*, matrix3x4_t const&)
 T Studio_SeqAnims(CStudioHdr const*, mstudioseqdesc_t&, int, float const*, mstudioanimdesc_t**, float*)
 T Studio_SeqMovement(CStudioHdr const*, int, float, float, float const*, Vector&, QAngle&)
 T Studio_SetController(CStudioHdr const*, int, float, float&)
 T Studio_SetPoseParameter(CStudioHdr const*, int, float, float&)
 T Studio_SolveIK(int, int, int, Vector&, Vector&, Vector&, matrix3x4_t*)
 T Studio_SolveIK(int, int, int, Vector&, matrix3x4_t*)
 T Studio_SolveIK(mstudioikchain_t*, Vector&, matrix3x4_t*)
 T SuppressParticleEffects(bool)
 T SuppressingParticleEffects()
 T SweepBoxToStudio(IPhysicsSurfaceProps*, Ray_t const&, CStudioHdr*, mstudiohitboxset_t*, matrix3x4_t**, int, CGameTrace&)
 T Sys_GetFactory(CSysModule*)
 T Sys_GetFactoryThis()
 T Sys_LoadLibrary(char const*, Sys_Flags)
 T Sys_LoadModule(char const*, Sys_Flags)
 T Sys_UnloadModule(CSysModule*)
 T TE_ArmorRicochet(IRecipientFilter&, float, Vector const*, Vector const*)
 T TE_BSPDecal(IRecipientFilter&, float, Vector const*, int, int)
 T TE_BeamEntPoint(IRecipientFilter&, float, int, Vector const*, int, Vector const*, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T TE_BeamEnts(IRecipientFilter&, float, int, int, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T TE_BeamFollow(IRecipientFilter&, float, int, int, int, float, float, float, float, float, float, float, float)
 T TE_BeamLaser(IRecipientFilter&, float, int, int, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T TE_BeamPoints(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int, int, float, float, float, int, float, int, int, int, int, int)
 T TE_BeamRing(IRecipientFilter&, float, int, int, int, int, int, int, float, float, int, float, int, int, int, int, int, int)
 T TE_BeamRingPoint(IRecipientFilter&, float, Vector const&, float, float, int, int, int, int, float, float, int, float, int, int, int, int, int, int)
 T TE_BeamSpline(IRecipientFilter&, float, int, Vector*)
 T TE_BloodSprite(IRecipientFilter&, float, KeyValues*)
 T TE_BloodSprite(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int, int, int)
 T TE_BloodStream(IRecipientFilter&, float, KeyValues*)
 T TE_BloodStream(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int, int, int)
 T TE_BreakModel(IRecipientFilter&, float, KeyValues*)
 T TE_BreakModel(IRecipientFilter&, float, Vector const&, QAngle const&, Vector const&, Vector const&, int, int, int, float, int)
 T TE_BubbleTrail(IRecipientFilter&, float, Vector const*, Vector const*, float, int, int, float)
 T TE_Bubbles(IRecipientFilter&, float, Vector const*, Vector const*, float, int, int, float)
 T TE_ClientProjectile(IRecipientFilter&, float, Vector const*, Vector const*, int, int, C_BaseEntity*)
 T TE_Decal(IRecipientFilter&, float, KeyValues*)
 T TE_Decal(IRecipientFilter&, float, Vector const*, Vector const*, int, int, int)
 T TE_DispatchEffect(IRecipientFilter&, float, KeyValues*)
 T TE_DispatchEffect(IRecipientFilter&, float, Vector const&, char const*, CEffectData const&)
 T TE_Dust(IRecipientFilter&, float, Vector const&, Vector const&, float, float)
 T TE_DynamicLight(IRecipientFilter&, float, KeyValues*)
 T TE_DynamicLight(IRecipientFilter&, float, Vector const*, int, int, int, int, float, float, float, int)
 T TE_EnergySplash(IRecipientFilter&, float, Vector const*, Vector const*, bool)
 T TE_Explosion(IRecipientFilter&, float, KeyValues*)
 T TE_Explosion(IRecipientFilter&, float, Vector const*, int, float, int, int, int, int, Vector const*, unsigned char, bool)
 T TE_Fizz(IRecipientFilter&, float, C_BaseEntity const*, int, int, int)
 T TE_FootprintDecal(IRecipientFilter&, float, Vector const*, Vector const*, int, int, unsigned char)
 T TE_GaussExplosion(IRecipientFilter&, float, Vector const&, Vector const&, int)
 T TE_GlowSprite(IRecipientFilter&, float, KeyValues*)
 T TE_GlowSprite(IRecipientFilter&, float, Vector const*, int, float, float, int)
 T TE_KillPlayerAttachments(IRecipientFilter&, float, int)
 T TE_LargeFunnel(IRecipientFilter&, float, Vector const*, int, int)
 T TE_MetalSparks(IRecipientFilter&, float, Vector const*, Vector const*)
 T TE_MuzzleFlash(IRecipientFilter&, float, Vector const&, QAngle const&, float, int)
 T TE_PhysicsProp(IRecipientFilter&, float, KeyValues*)
 T TE_PhysicsProp(IRecipientFilter&, float, int, int, Vector const&, QAngle const&, Vector const&, bool, int)
 T TE_PlayerDecal(IRecipientFilter&, float, Vector const*, int, int)
 T TE_ProjectDecal(IRecipientFilter&, float, KeyValues*)
 T TE_ProjectDecal(IRecipientFilter&, float, Vector const*, QAngle const*, float, int)
 T TE_ShatterSurface(IRecipientFilter&, float, KeyValues*)
 T TE_ShatterSurface(IRecipientFilter&, float, Vector const*, QAngle const*, Vector const*, Vector const*, float, float, float, ShatterSurface_t, int, int, int, int, int, int)
 T TE_ShowLine(IRecipientFilter&, float, Vector const*, Vector const*)
 T TE_Smoke(IRecipientFilter&, float, Vector const*, int, float, int)
 T TE_Sparks(IRecipientFilter&, float, Vector const*, int, int, Vector const*)
 T TE_Sprite(IRecipientFilter&, float, KeyValues*)
 T TE_Sprite(IRecipientFilter&, float, Vector const*, int, float, int)
 T TE_SpriteSpray(IRecipientFilter&, float, KeyValues*)
 T TE_SpriteSpray(IRecipientFilter&, float, Vector const*, Vector const*, int, int, float, int)
 T TE_WorldDecal(IRecipientFilter&, float, KeyValues*)
 T TE_WorldDecal(IRecipientFilter&, float, Vector const*, int)
 T TGAWriter::WriteToBuffer(unsigned char*, CUtlBuffer&, int, int, ImageFormat, ImageFormat)
 T TermSmokeFogOverlay()
 T TestViewAnim()
 T TextMessageGet(char const*)
 T TextToSoundLevel(char const*)
 T TextureToLinear(int)
 T ThirdPersonChange(IConVar*, char const*, float)
 T ThumperDustCallback(CEffectData const&)
 T ThumperDustEmitter::UpdateAlpha(SimpleParticle const*)
 T ThumperDustEmitter::UpdateRoll(SimpleParticle*, float)
 T ThumperDustEmitter::UpdateVelocity(SimpleParticle*, float)
 T ThumperDustEmitter::~ThumperDustEmitter()
 T ToolFrameworkClientSystem()
 T ToolFramework_AdjustEngineViewport(int&, int&, int&, int&)
 T ToolFramework_IsThirdPersonCamera()
 T ToolFramework_PostToolMessage(unsigned int, KeyValues*)
 T ToolFramework_RecordMaterialParams(IMaterial*)
 T ToolFramework_SetupAudioState(AudioState_t&)
 T ToolFramework_SetupEngineView(Vector&, QAngle&, float&)
 T ToolsEnabled()
 T TraceToStudio(IPhysicsSurfaceProps*, Ray_t const&, CStudioHdr*, mstudiohitboxset_t*, matrix3x4_t**, int, Vector const&, float, CGameTrace&)
 T TracerCallback(CEffectData const&)
 T TracerSoundCallback(CEffectData const&)
 T Tracer_ComputeVerts(Vector const&, Vector const&, float, Vector*)
 T Tracer_Draw(CMeshBuilder*, Vector&, Vector&, float, float*, float, float)
 T Tracer_Draw(ParticleDraw*, Vector&, Vector&, float, float*, float, float)
 T TrackBoneSetupEnt(C_BaseAnimating*)
 T TransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
 T URLLabel_Factory()
 T UTIL_BloodDecalTrace(CGameTrace*, int)
 T UTIL_BloodDrips(Vector const&, Vector const&, int, int)
 T UTIL_ComputeEntityFade(C_BaseEntity*, float, float, float)
 T UTIL_ComputeStringWidth(unsigned long&, wchar_t const*)
 T UTIL_DecodeICE(unsigned char*, int, unsigned char const*)
 T UTIL_EntitiesInBox(C_BaseEntity**, int, Vector const&, Vector const&, int, int)
 T UTIL_GetActiveHolidayString()
 T UTIL_GetNormalizedColorTintAndLuminosity(Vector const&, Vector*, float*)
 T UTIL_ImpactTrace(CGameTrace*, int, char const*)
 T UTIL_IsLowViolence()
 T UTIL_MakeSafeName(char const*, char*, int)
 T UTIL_PlayerByIndex(int)
 T UTIL_ReplaceKeyBindings(wchar_t const*, int, wchar_t*, int)
 T UTIL_SafeName(char const*)
 T UTIL_ScreenShake(Vector const&, float, float, float, float, ShakeCommand_t, bool)
 T UTIL_Smoke(Vector const&, float, float)
 T UTIL_StringToColor32(color32_s*, char const*)
 T UTIL_StringToVector(float*, char const*)
 T UTIL_TraceModel(Vector const&, Vector const&, Vector const&, Vector const&, C_BaseEntity*, int, CGameTrace*)
 T UTIL_Tracer(Vector const&, Vector const&, int, int, float, bool, char const*, int)
 T UTIL_WaterLevel(Vector const&, float, float)
 T UniqueIdFromString(UniqueId_t*, char const*, int)
 T UniqueIdToString(UniqueId_t const&, char*, int)
 T Unserialize(CUtlBuffer&, CUtlBinaryBlock&)
 T Unserialize(CUtlBuffer&, CUtlString&)
 T Unserialize(CUtlBuffer&, Color&)
 T Unserialize(CUtlBuffer&, QAngle&)
 T Unserialize(CUtlBuffer&, Quaternion&)
 T Unserialize(CUtlBuffer&, UniqueId_t&)
 T Unserialize(CUtlBuffer&, VMatrix&)
 T Unserialize(CUtlBuffer&, Vector&)
 T Unserialize(CUtlBuffer&, Vector2D&)
 T Unserialize(CUtlBuffer&, Vector4D&)
 T Unserialize(CUtlBuffer&, bool&)
 T Unserialize(CUtlBuffer&, float&)
 T Unserialize(CUtlBuffer&, int&)
 T UnserializeDMX(CUtlBuffer&, CDmxElement**, char const*)
 T UnserializeTextDMX(char const*, CUtlBuffer&, CDmxElement**)
 T UpdateClientRenderableInPVSStatus()
 T UpdateDirtySpatialPartitionEntities()
 T UpdateFullScreenDepthTexture()
 T UpdatePVSNotifiers()
 T UpdatePerfStats()
 T UpdateRefractTexture(bool)
 T UpdateRefractTexture(int, int, int, int, bool)
 T UpdateRumbleEffects()
 T UpdateScreenEffectTexture(int, int, int, int, int, bool, Rect_t*)
 T UpdateScreenShakeRumble(float, float)
 T UseHWMorphModels()
 T UtlVectorTemplate<CHandle<C_BaseFlex>, CUtlMemory<CHandle<C_BaseFlex>, int> >::EnsureCapacity(void*, int, int)
 T UtlVectorTemplate<CHandle<C_BaseFlex>, CUtlMemory<CHandle<C_BaseFlex>, int> >::ResizeUtlVector(void*, int, int)
 T UtlVectorTemplate<C_AnimationLayer, CUtlMemory<C_AnimationLayer, int> >::EnsureCapacity(void*, int, int)
 T VCollideWireframe_ChangeCallback(IConVar*, char const*, float)
 T VGUI_CreateClientDLLRootPanel()
 T VGUI_DestroyClientDLLRootPanel()
 T VGui_CreateGlobalPanels()
 T VGui_GetClientDLLRootPanel()
 T VGui_PostRender()
 T VGui_PreRender()
 T VGui_Shutdown()
 T VGui_Startup(void* (*)(char const*, int*))
 T VMatrix::InverseTR() const
 T VMatrix::SetupMatrixAngles(QAngle const&)
 T VMatrix::SetupMatrixOrgAngles(Vector const&, QAngle const&)
 T VMatrix::Transpose() const
 T VMatrix::operator*(VMatrix const&) const
 T VMatrix::operator=(VMatrix const&)
 T V_FileBase(char const*, char*, int)
 T V_FixSlashes(char*, char)
 T V_GetFileExtension(char const*)
 T V_IsAbsolutePath(char const*)
 T V_SetExtension(char*, char const*, int)
 T V_StripExtension(char const*, char*, int)
 T V_StripFilename(char*)
 T V_StripLastDir(char*, int)
 T V_StripTrailingSlash(char*)
 T V_UCS2ToUTF8(unsigned short const*, char*, int)
 T V_UCS2ToUnicode(unsigned short const*, wchar_t*, int)
 T V_UTF8ToUnicode(char const*, wchar_t*, int)
 T V_UnicodeToUTF8(wchar_t const*, char*, int)
 T V_atof(char const*)
 T V_atoi(char const*)
 T V_atoi64(char const*)
 T V_binarytohex(unsigned char const*, int, char*, int)
 T V_nibble(char)
 T V_pretifymem(float, int, bool)
 T V_snprintf(char*, int, char const*, ...)
 T V_snwprintf(wchar_t*, int, wchar_t const*, ...)
 T V_stricmp(char const*, char const*)
 T V_stristr(char const*, char const*)
 T V_stristr(char*, char const*)
 T V_strlower(char*)
 T V_strncat(char*, char const*, unsigned long, int)
 T V_strnchr(char const*, char, int)
 T V_strncmp(char const*, char const*, int)
 T V_strncpy(char*, char const*, int)
 T V_strnicmp(char const*, char const*, int)
 T V_strnistr(char const*, char const*, int)
 T V_strnlwr(char*, unsigned long)
 T V_strupr(char*)
 T V_vsnprintf(char*, int, char const*, char*)
 T V_vsnprintfRet(char*, int, char const*, char*, bool*)
 T V_vsnwprintf(wchar_t*, int, wchar_t const*, char*)
 T V_wcsncat(wchar_t*, wchar_t const*, unsigned long, int)
 T V_wcsncpy(wchar_t*, wchar_t const*, int)
 T ValidateChains_R(datamap_t*)
 T VarArgs(char const*, ...)
 T Vector3DMultiply(VMatrix const&, Vector const&, Vector&)
 T Vector3DMultiplyPositionProjective(VMatrix const&, Vector const&, Vector&)
 T VectorAngles(Vector const&, QAngle&)
 T VectorAngles(Vector const&, Vector const&, QAngle&)
 T VectorIRotate(float const*, matrix3x4_t const&, float*)
 T VectorITransform(float const*, matrix3x4_t const&, float*)
 T VectorMatrix(Vector const&, matrix3x4_t&)
 T VectorRotate(float const*, matrix3x4_t const&, float*)
 T VectorTransform(float const*, matrix3x4_t const&, float*)
 T VectorVectors(Vector const&, Vector&, Vector&)
 T VectorYawRotate(Vector const&, float, Vector&)
 T VideoPanel::Activate()
 T VideoPanel::BeginPlayback(char const*)
 T VideoPanel::DoModal()
 T VideoPanel::GetAnimMap()
 T VideoPanel::GetKBMap()
 T VideoPanel::GetMessageMap()
 T VideoPanel::GetPanelClassName()
 T VideoPanel::GetPanelPos(int&, int&)
 T VideoPanel::OnClose()
 T VideoPanel::OnCommand(char const*)
 T VideoPanel::OnKeyCodePressed(ButtonCode_t)
 T VideoPanel::OnKeyCodeTyped(ButtonCode_t)
 T VideoPanel::OnTick()
 T VideoPanel::OnVideoOver()
 T VideoPanel::Paint()
 T VideoPanel::VideoPanel(unsigned int, unsigned int, unsigned int, unsigned int, bool)
 T VideoPanel::~VideoPanel()
 T VideoPanel_Create(unsigned int, unsigned int, unsigned int, unsigned int, char const*, char const*)
 T ViewportClientSystem()
 T W_Precache()
 T WasRagdollCreatedOnCurrentTick(C_BaseEntity*)
 T WashEmitter::UpdateAlpha(SimpleParticle const*)
 T WashEmitter::UpdateRoll(SimpleParticle*, float)
 T WashEmitter::UpdateVelocity(SimpleParticle*, float)
 T WashEmitter::~WashEmitter()
 T WaterDebrisEffect::Create(char const*)
 T WaterDebrisEffect::UpdateAlpha(SimpleParticle const*)
 T WaterDebrisEffect::~WaterDebrisEffect()
 T WaterExplosionEffect()
 T WaterSurfaceExplosionCallback(CEffectData const&)
 T WaveTrace(char const*, char const*)
 T WeaponsResource::GetAmmoIconFromWeapon(int)
 T WeaponsResource::GetWeaponFromAmmo(int)
 T WeaponsResource::Init()
 T WeaponsResource::LoadAllWeaponSprites()
 T WeaponsResource::LoadWeaponSprites(unsigned short)
 T WeaponsResource::Reset()
 T WheelDustCallback(CEffectData const&)
 T WorldSpaceSlerp(CStudioHdr const*, Quaternion*, Vector*, mstudioseqdesc_t&, int, Quaternion const*, Vector const*, float, int)
 T WriteUsercmd(bf_write*, CUserCmd const*, CUserCmd const*)
 T _InvRSquared(float const*)
 T _SSE_InvRSquared(float const*)
 T _SSE_RSqrtAccurate(float)
 T _SSE_RSqrtFast(float)
 T _SSE_Sqrt(float)
 T _SSE_VectorNormalizeFast(Vector&)
 T _VectorNormalize(Vector&)
 T _VectorNormalizeFast(Vector&)
 T __CmdFunc_Close()
 T __CmdFunc_LastWeapon()
 T __CmdFunc_NextWeapon()
 T __CmdFunc_PrevWeapon()
 T __CmdFunc_Slot0()
 T __CmdFunc_Slot1()
 T __CmdFunc_Slot10()
 T __CmdFunc_Slot2()
 T __CmdFunc_Slot3()
 T __CmdFunc_Slot4()
 T __CmdFunc_Slot5()
 T __CmdFunc_Slot6()
 T __CmdFunc_Slot7()
 T __CmdFunc_Slot8()
 T __CmdFunc_Slot9()
 T __CreateGameRules_CHalfLife2()
 T __CreateGameRules_CMultiplayRules()
 T __MsgFunc_CHudBattery_Battery(bf_read&)
 T __MsgFunc_CHudChat_SayText(bf_read&)
 T __MsgFunc_CHudChat_SayText2(bf_read&)
 T __MsgFunc_CHudChat_TextMsg(bf_read&)
 T __MsgFunc_CHudCloseCaption_CloseCaption(bf_read&)
 T __MsgFunc_CHudCredits_CreditsMsg(bf_read&)
 T __MsgFunc_CHudCredits_LogoTimeMsg(bf_read&)
 T __MsgFunc_CHudDamageIndicator_Damage(bf_read&)
 T __MsgFunc_CHudGeiger_Geiger(bf_read&)
 T __MsgFunc_CHudHealth_Damage(bf_read&)
 T __MsgFunc_CHudHintDisplay_HintText(bf_read&)
 T __MsgFunc_CHudHintKeyDisplay_KeyHintText(bf_read&)
 T __MsgFunc_CHudHistoryResource_AmmoDenied(bf_read&)
 T __MsgFunc_CHudHistoryResource_ItemPickup(bf_read&)
 T __MsgFunc_CHudMenu_ShowMenu(bf_read&)
 T __MsgFunc_CHudMessage_GameTitle(bf_read&)
 T __MsgFunc_CHudMessage_HudMsg(bf_read&)
 T __MsgFunc_CHudMessage_HudText(bf_read&)
 T __MsgFunc_CHudSquadStatus_SquadMemberDied(bf_read&)
 T __MsgFunc_CHudTrain_Train(bf_read&)
 T __MsgFunc_Fade(bf_read&)
 T __MsgFunc_HapDmg(bf_read&)
 T __MsgFunc_HapMeleeContact(bf_read&)
 T __MsgFunc_HapPunch(bf_read&)
 T __MsgFunc_HapSetConst(bf_read&)
 T __MsgFunc_HapSetDrag(bf_read&)
 T __MsgFunc_RequestState(bf_read&)
 T __MsgFunc_SPHapWeapEvent(bf_read&)
 T __MsgFunc_Shake(bf_read&)
 T __MsgFunc_VoiceMask(bf_read&)
 T __MsgFunc_gHUD_ResetHUD(bf_read&)
 T __clang_call_terminate
 T _rsqrtf(float)
 T _sqrtf(float)
 T audioparams_t::NetworkStateChanged()
 T audioparams_t::NetworkStateChanged(void*)
 T bf_read::ReadBitCoord()
 T bf_read::ReadBitVec3Coord(Vector&)
 T bf_read::ReadBitVec3Normal(Vector&)
 T bf_read::ReadBits(void*, int)
 T bf_read::ReadFloat()
 T bf_read::ReadString(char*, int, bool, int*)
 T bf_read::SetOverflowFlag()
 T bf_write::WriteBitCoord(float)
 T bf_write::WriteBits(void const*, int)
 T bf_write::WriteFloat(float)
 T bf_write::WriteShort(int)
 T bool C_OP_WorldTraceConstraint::EnforceConstraintInternal<false, false>(int, int, CParticleCollection*, void*, int) const
 T bool C_OP_WorldTraceConstraint::EnforceConstraintInternal<false, true>(int, int, CParticleCollection*, void*, int) const
 T bool C_OP_WorldTraceConstraint::EnforceConstraintInternal<true, false>(int, int, CParticleCollection*, void*, int) const
 T bool C_OP_WorldTraceConstraint::EnforceConstraintInternal<true, true>(int, int, CParticleCollection*, void*, int) const
 T bool Unserialize<CUtlBinaryBlock>(CUtlBuffer&, CUtlVector<CUtlBinaryBlock, CUtlMemory<CUtlBinaryBlock, int> >&)
 T bool Unserialize<CUtlString>(CUtlBuffer&, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T bool Unserialize<Color>(CUtlBuffer&, CUtlVector<Color, CUtlMemory<Color, int> >&)
 T bool Unserialize<QAngle>(CUtlBuffer&, CUtlVector<QAngle, CUtlMemory<QAngle, int> >&)
 T bool Unserialize<Quaternion>(CUtlBuffer&, CUtlVector<Quaternion, CUtlMemory<Quaternion, int> >&)
 T bool Unserialize<UniqueId_t>(CUtlBuffer&, CUtlVector<UniqueId_t, CUtlMemory<UniqueId_t, int> >&)
 T bool Unserialize<VMatrix>(CUtlBuffer&, CUtlVector<VMatrix, CUtlMemory<VMatrix, int> >&)
 T bool Unserialize<Vector2D>(CUtlBuffer&, CUtlVector<Vector2D, CUtlMemory<Vector2D, int> >&)
 T bool Unserialize<Vector4D>(CUtlBuffer&, CUtlVector<Vector4D, CUtlMemory<Vector4D, int> >&)
 T bool Unserialize<Vector>(CUtlBuffer&, CUtlVector<Vector, CUtlMemory<Vector, int> >&)
 T bool Unserialize<bool>(CUtlBuffer&, CUtlVector<bool, CUtlMemory<bool, int> >&)
 T bool Unserialize<float>(CUtlBuffer&, CUtlVector<float, CUtlMemory<float, int> >&)
 T bool Unserialize<int>(CUtlBuffer&, CUtlVector<int, CUtlMemory<int, int> >&)
 T cc_cl_interp_all_changed(IConVar*, char const*, float)
 T datamap_t* DataMapInit<CCopyRecipientFilter>(CCopyRecipientFilter*)
 T datamap_t* DataMapInit<CRagdoll>(CRagdoll*)
 T datamap_t* DataMapInit<C_ClientRagdoll>(C_ClientRagdoll*)
 T datamap_t* DataMapInit<C_PointCommentaryNode>(C_PointCommentaryNode*)
 T float16::ConvertFloatTo16bits(float)
 T fogparams_t::NetworkStateChanged()
 T fogparams_t::NetworkStateChanged(void*)
 T fogparams_t::operator!=(fogparams_t const&) const
 T fogplayerparams_t::NetworkStateChanged()
 T fogplayerparams_t::NetworkStateChanged(void*)
 T int CRestore::ReadSimple<Quaternion>(Quaternion*, int, int)
 T int CRestore::ReadSimple<VMatrix>(VMatrix*, int, int)
 T int CRestore::ReadSimple<Vector>(Vector*, int, int)
 T int CRestore::ReadSimple<bool>(bool*, int, int)
 T int CRestore::ReadSimple<char>(char*, int, int)
 T int CRestore::ReadSimple<float>(float*, int, int)
 T int CRestore::ReadSimple<int>(int*, int, int)
 T int CRestore::ReadSimple<interval_t>(interval_t*, int, int)
 T int CRestore::ReadSimple<short>(short*, int, int)
 T int CUtlSortVector<CDmxAttribute*, CDmxAttributeLess, CUtlVector<CDmxAttribute*, CUtlMemory<CDmxAttribute*, int> > >::Find<CDmxAttribute*>(CDmxAttribute* const&) const
 T int CUtlSortVector<CaptionLookup_t, CCaptionLookupLess, CUtlVector<CaptionLookup_t, CUtlMemory<CaptionLookup_t, int> > >::Find<CaptionLookup_t>(CaptionLookup_t const&) const
 T int CUtlSortVector<vgui::SortedPanel_t, vgui::CSortedPanelYLess, CUtlVector<vgui::SortedPanel_t, CUtlMemory<vgui::SortedPanel_t, int> > >::FindLessOrEqual<vgui::SortedPanel_t>(vgui::SortedPanel_t const&, bool*) const
 T int ClientClassInit<DT_AI_BaseNPC::ignored>(DT_AI_BaseNPC::ignored*)
 T int ClientClassInit<DT_AR2Explosion::ignored>(DT_AR2Explosion::ignored*)
 T int ClientClassInit<DT_AlyxEmpEffect::ignored>(DT_AlyxEmpEffect::ignored*)
 T int ClientClassInit<DT_AnimTimeMustBeFirst::ignored>(DT_AnimTimeMustBeFirst::ignored*)
 T int ClientClassInit<DT_Animationlayer::ignored>(DT_Animationlayer::ignored*)
 T int ClientClassInit<DT_BCCLocalPlayerExclusive::ignored>(DT_BCCLocalPlayerExclusive::ignored*)
 T int ClientClassInit<DT_Barnacle::ignored>(DT_Barnacle::ignored*)
 T int ClientClassInit<DT_BaseAnimating::ignored>(DT_BaseAnimating::ignored*)
 T int ClientClassInit<DT_BaseAnimatingOverlay::ignored>(DT_BaseAnimatingOverlay::ignored*)
 T int ClientClassInit<DT_BaseBeam::ignored>(DT_BaseBeam::ignored*)
 T int ClientClassInit<DT_BaseCombatCharacter::ignored>(DT_BaseCombatCharacter::ignored*)
 T int ClientClassInit<DT_BaseCombatWeapon::ignored>(DT_BaseCombatWeapon::ignored*)
 T int ClientClassInit<DT_BaseDoor::ignored>(DT_BaseDoor::ignored*)
 T int ClientClassInit<DT_BaseEntity::ignored>(DT_BaseEntity::ignored*)
 T int ClientClassInit<DT_BaseFlex::ignored>(DT_BaseFlex::ignored*)
 T int ClientClassInit<DT_BaseGrenade::ignored>(DT_BaseGrenade::ignored*)
 T int ClientClassInit<DT_BaseHLBludgeonWeapon::ignored>(DT_BaseHLBludgeonWeapon::ignored*)
 T int ClientClassInit<DT_BaseHLCombatWeapon::ignored>(DT_BaseHLCombatWeapon::ignored*)
 T int ClientClassInit<DT_BaseHelicopter::ignored>(DT_BaseHelicopter::ignored*)
 T int ClientClassInit<DT_BaseParticleEntity::ignored>(DT_BaseParticleEntity::ignored*)
 T int ClientClassInit<DT_BasePlayer::ignored>(DT_BasePlayer::ignored*)
 T int ClientClassInit<DT_BaseProjectile::ignored>(DT_BaseProjectile::ignored*)
 T int ClientClassInit<DT_BasePropDoor::ignored>(DT_BasePropDoor::ignored*)
 T int ClientClassInit<DT_BaseTeamObjectiveResource::ignored>(DT_BaseTeamObjectiveResource::ignored*)
 T int ClientClassInit<DT_BaseTempEntity::ignored>(DT_BaseTempEntity::ignored*)
 T int ClientClassInit<DT_BaseViewModel::ignored>(DT_BaseViewModel::ignored*)
 T int ClientClassInit<DT_Beam::ignored>(DT_Beam::ignored*)
 T int ClientClassInit<DT_BeamPredictableId::ignored>(DT_BeamPredictableId::ignored*)
 T int ClientClassInit<DT_BoneFollower::ignored>(DT_BoneFollower::ignored*)
 T int ClientClassInit<DT_BreakableProp::ignored>(DT_BreakableProp::ignored*)
 T int ClientClassInit<DT_BreakableSurface::ignored>(DT_BreakableSurface::ignored*)
 T int ClientClassInit<DT_CFish::ignored>(DT_CFish::ignored*)
 T int ClientClassInit<DT_CitadelEnergyCore::ignored>(DT_CitadelEnergyCore::ignored*)
 T int ClientClassInit<DT_CollisionProperty::ignored>(DT_CollisionProperty::ignored*)
 T int ClientClassInit<DT_ColorCorrection::ignored>(DT_ColorCorrection::ignored*)
 T int ClientClassInit<DT_ColorCorrectionVolume::ignored>(DT_ColorCorrectionVolume::ignored*)
 T int ClientClassInit<DT_CombineGunship::ignored>(DT_CombineGunship::ignored*)
 T int ClientClassInit<DT_Corpse::ignored>(DT_Corpse::ignored*)
 T int ClientClassInit<DT_CrossbowBolt::ignored>(DT_CrossbowBolt::ignored*)
 T int ClientClassInit<DT_DetailController::ignored>(DT_DetailController::ignored*)
 T int ClientClassInit<DT_DustTrail::ignored>(DT_DustTrail::ignored*)
 T int ClientClassInit<DT_DynamicLight::ignored>(DT_DynamicLight::ignored*)
 T int ClientClassInit<DT_DynamicProp::ignored>(DT_DynamicProp::ignored*)
 T int ClientClassInit<DT_EffectData::ignored>(DT_EffectData::ignored*)
 T int ClientClassInit<DT_Embers::ignored>(DT_Embers::ignored*)
 T int ClientClassInit<DT_EntityDissolve::ignored>(DT_EntityDissolve::ignored*)
 T int ClientClassInit<DT_EntityFlame::ignored>(DT_EntityFlame::ignored*)
 T int ClientClassInit<DT_EntityParticleTrail::ignored>(DT_EntityParticleTrail::ignored*)
 T int ClientClassInit<DT_EntityParticleTrailInfo::ignored>(DT_EntityParticleTrailInfo::ignored*)
 T int ClientClassInit<DT_EnvHeadcrabCanister::ignored>(DT_EnvHeadcrabCanister::ignored*)
 T int ClientClassInit<DT_EnvHeadcrabCanisterShared::ignored>(DT_EnvHeadcrabCanisterShared::ignored*)
 T int ClientClassInit<DT_EnvParticleScript::ignored>(DT_EnvParticleScript::ignored*)
 T int ClientClassInit<DT_EnvProjectedTexture::ignored>(DT_EnvProjectedTexture::ignored*)
 T int ClientClassInit<DT_EnvScreenEffect::ignored>(DT_EnvScreenEffect::ignored*)
 T int ClientClassInit<DT_EnvScreenOverlay::ignored>(DT_EnvScreenOverlay::ignored*)
 T int ClientClassInit<DT_EnvStarfield::ignored>(DT_EnvStarfield::ignored*)
 T int ClientClassInit<DT_EnvTonemapController::ignored>(DT_EnvTonemapController::ignored*)
 T int ClientClassInit<DT_EnvWind::ignored>(DT_EnvWind::ignored*)
 T int ClientClassInit<DT_EnvWindShared::ignored>(DT_EnvWindShared::ignored*)
 T int ClientClassInit<DT_FireSmoke::ignored>(DT_FireSmoke::ignored*)
 T int ClientClassInit<DT_FireTrail::ignored>(DT_FireTrail::ignored*)
 T int ClientClassInit<DT_Flare::ignored>(DT_Flare::ignored*)
 T int ClientClassInit<DT_Flaregun::ignored>(DT_Flaregun::ignored*)
 T int ClientClassInit<DT_FogController::ignored>(DT_FogController::ignored*)
 T int ClientClassInit<DT_FuncAreaPortalWindow::ignored>(DT_FuncAreaPortalWindow::ignored*)
 T int ClientClassInit<DT_FuncConveyor::ignored>(DT_FuncConveyor::ignored*)
 T int ClientClassInit<DT_FuncLadder::ignored>(DT_FuncLadder::ignored*)
 T int ClientClassInit<DT_FuncMonitor::ignored>(DT_FuncMonitor::ignored*)
 T int ClientClassInit<DT_FuncOccluder::ignored>(DT_FuncOccluder::ignored*)
 T int ClientClassInit<DT_FuncReflectiveGlass::ignored>(DT_FuncReflectiveGlass::ignored*)
 T int ClientClassInit<DT_FuncRotating::ignored>(DT_FuncRotating::ignored*)
 T int ClientClassInit<DT_FuncSmokeVolume::ignored>(DT_FuncSmokeVolume::ignored*)
 T int ClientClassInit<DT_FuncTrackTrain::ignored>(DT_FuncTrackTrain::ignored*)
 T int ClientClassInit<DT_Func_Dust::ignored>(DT_Func_Dust::ignored*)
 T int ClientClassInit<DT_Func_LOD::ignored>(DT_Func_LOD::ignored*)
 T int ClientClassInit<DT_GameRulesProxy::ignored>(DT_GameRulesProxy::ignored*)
 T int ClientClassInit<DT_HL2GameRules::ignored>(DT_HL2GameRules::ignored*)
 T int ClientClassInit<DT_HL2Local::ignored>(DT_HL2Local::ignored*)
 T int ClientClassInit<DT_HL2_Player::ignored>(DT_HL2_Player::ignored*)
 T int ClientClassInit<DT_HLMachineGun::ignored>(DT_HLMachineGun::ignored*)
 T int ClientClassInit<DT_HLSelectFireMachineGun::ignored>(DT_HLSelectFireMachineGun::ignored*)
 T int ClientClassInit<DT_HalfLife2Proxy::ignored>(DT_HalfLife2Proxy::ignored*)
 T int ClientClassInit<DT_HandleTest::ignored>(DT_HandleTest::ignored*)
 T int ClientClassInit<DT_InfoLadderDismount::ignored>(DT_InfoLadderDismount::ignored*)
 T int ClientClassInit<DT_InfoLightingRelative::ignored>(DT_InfoLightingRelative::ignored*)
 T int ClientClassInit<DT_InfoOverlayAccessor::ignored>(DT_InfoOverlayAccessor::ignored*)
 T int ClientClassInit<DT_InfoTeleporterCountdown::ignored>(DT_InfoTeleporterCountdown::ignored*)
 T int ClientClassInit<DT_LightGlow::ignored>(DT_LightGlow::ignored*)
 T int ClientClassInit<DT_Local::ignored>(DT_Local::ignored*)
 T int ClientClassInit<DT_LocalActiveWeaponData::ignored>(DT_LocalActiveWeaponData::ignored*)
 T int ClientClassInit<DT_LocalPlayerExclusive::ignored>(DT_LocalPlayerExclusive::ignored*)
 T int ClientClassInit<DT_LocalWeaponData::ignored>(DT_LocalWeaponData::ignored*)
 T int ClientClassInit<DT_MaterialModifyControl::ignored>(DT_MaterialModifyControl::ignored*)
 T int ClientClassInit<DT_MortarShell::ignored>(DT_MortarShell::ignored*)
 T int ClientClassInit<DT_MovieExplosion::ignored>(DT_MovieExplosion::ignored*)
 T int ClientClassInit<DT_NPC_AntlionGuard::ignored>(DT_NPC_AntlionGuard::ignored*)
 T int ClientClassInit<DT_NPC_Barney::ignored>(DT_NPC_Barney::ignored*)
 T int ClientClassInit<DT_NPC_Manhack::ignored>(DT_NPC_Manhack::ignored*)
 T int ClientClassInit<DT_NPC_Strider::ignored>(DT_NPC_Strider::ignored*)
 T int ClientClassInit<DT_NPC_Vortigaunt::ignored>(DT_NPC_Vortigaunt::ignored*)
 T int ClientClassInit<DT_OverlayVars::ignored>(DT_OverlayVars::ignored*)
 T int ClientClassInit<DT_ParticleFire::ignored>(DT_ParticleFire::ignored*)
 T int ClientClassInit<DT_ParticlePerformanceMonitor::ignored>(DT_ParticlePerformanceMonitor::ignored*)
 T int ClientClassInit<DT_ParticleProperty::ignored>(DT_ParticleProperty::ignored*)
 T int ClientClassInit<DT_ParticleSmokeGrenade::ignored>(DT_ParticleSmokeGrenade::ignored*)
 T int ClientClassInit<DT_ParticleSystem::ignored>(DT_ParticleSystem::ignored*)
 T int ClientClassInit<DT_PhysBox::ignored>(DT_PhysBox::ignored*)
 T int ClientClassInit<DT_PhysBoxMultiplayer::ignored>(DT_PhysBoxMultiplayer::ignored*)
 T int ClientClassInit<DT_PhysMagnet::ignored>(DT_PhysMagnet::ignored*)
 T int ClientClassInit<DT_PhysicsProp::ignored>(DT_PhysicsProp::ignored*)
 T int ClientClassInit<DT_PhysicsPropMultiplayer::ignored>(DT_PhysicsPropMultiplayer::ignored*)
 T int ClientClassInit<DT_Plasma::ignored>(DT_Plasma::ignored*)
 T int ClientClassInit<DT_PlasmaBeamNode::ignored>(DT_PlasmaBeamNode::ignored*)
 T int ClientClassInit<DT_PlayerResource::ignored>(DT_PlayerResource::ignored*)
 T int ClientClassInit<DT_PlayerState::ignored>(DT_PlayerState::ignored*)
 T int ClientClassInit<DT_PointCamera::ignored>(DT_PointCamera::ignored*)
 T int ClientClassInit<DT_PointCommentaryNode::ignored>(DT_PointCommentaryNode::ignored*)
 T int ClientClassInit<DT_PoseController::ignored>(DT_PoseController::ignored*)
 T int ClientClassInit<DT_Precipitation::ignored>(DT_Precipitation::ignored*)
 T int ClientClassInit<DT_PredictableId::ignored>(DT_PredictableId::ignored*)
 T int ClientClassInit<DT_PropAirboat::ignored>(DT_PropAirboat::ignored*)
 T int ClientClassInit<DT_PropCannon::ignored>(DT_PropCannon::ignored*)
 T int ClientClassInit<DT_PropCombineBall::ignored>(DT_PropCombineBall::ignored*)
 T int ClientClassInit<DT_PropCrane::ignored>(DT_PropCrane::ignored*)
 T int ClientClassInit<DT_PropJeep::ignored>(DT_PropJeep::ignored*)
 T int ClientClassInit<DT_PropVehicleChoreoGeneric::ignored>(DT_PropVehicleChoreoGeneric::ignored*)
 T int ClientClassInit<DT_PropVehicleDriveable::ignored>(DT_PropVehicleDriveable::ignored*)
 T int ClientClassInit<DT_PropVehiclePrisonerPod::ignored>(DT_PropVehiclePrisonerPod::ignored*)
 T int ClientClassInit<DT_ProxyToggle::ignored>(DT_ProxyToggle::ignored*)
 T int ClientClassInit<DT_ProxyToggle_ProxiedData::ignored>(DT_ProxyToggle_ProxiedData::ignored*)
 T int ClientClassInit<DT_QuadraticBeam::ignored>(DT_QuadraticBeam::ignored*)
 T int ClientClassInit<DT_Ragdoll::ignored>(DT_Ragdoll::ignored*)
 T int ClientClassInit<DT_RagdollManager::ignored>(DT_RagdollManager::ignored*)
 T int ClientClassInit<DT_Ragdoll_Attached::ignored>(DT_Ragdoll_Attached::ignored*)
 T int ClientClassInit<DT_RocketTrail::ignored>(DT_RocketTrail::ignored*)
 T int ClientClassInit<DT_RollerMine::ignored>(DT_RollerMine::ignored*)
 T int ClientClassInit<DT_RopeKeyframe::ignored>(DT_RopeKeyframe::ignored*)
 T int ClientClassInit<DT_RotorWashEmitter::ignored>(DT_RotorWashEmitter::ignored*)
 T int ClientClassInit<DT_SceneEntity::ignored>(DT_SceneEntity::ignored*)
 T int ClientClassInit<DT_ScriptIntro::ignored>(DT_ScriptIntro::ignored*)
 T int ClientClassInit<DT_ServerAnimationData::ignored>(DT_ServerAnimationData::ignored*)
 T int ClientClassInit<DT_ShadowControl::ignored>(DT_ShadowControl::ignored*)
 T int ClientClassInit<DT_SlideshowDisplay::ignored>(DT_SlideshowDisplay::ignored*)
 T int ClientClassInit<DT_SmokeStack::ignored>(DT_SmokeStack::ignored*)
 T int ClientClassInit<DT_SmokeTrail::ignored>(DT_SmokeTrail::ignored*)
 T int ClientClassInit<DT_SporeExplosion::ignored>(DT_SporeExplosion::ignored*)
 T int ClientClassInit<DT_SporeTrail::ignored>(DT_SporeTrail::ignored*)
 T int ClientClassInit<DT_SpotlightEnd::ignored>(DT_SpotlightEnd::ignored*)
 T int ClientClassInit<DT_Sprite::ignored>(DT_Sprite::ignored*)
 T int ClientClassInit<DT_SpriteOriented::ignored>(DT_SpriteOriented::ignored*)
 T int ClientClassInit<DT_SpriteTrail::ignored>(DT_SpriteTrail::ignored*)
 T int ClientClassInit<DT_SteamJet::ignored>(DT_SteamJet::ignored*)
 T int ClientClassInit<DT_Sun::ignored>(DT_Sun::ignored*)
 T int ClientClassInit<DT_TEAntlionDust::ignored>(DT_TEAntlionDust::ignored*)
 T int ClientClassInit<DT_TEArmorRicochet::ignored>(DT_TEArmorRicochet::ignored*)
 T int ClientClassInit<DT_TEBSPDecal::ignored>(DT_TEBSPDecal::ignored*)
 T int ClientClassInit<DT_TEBeamEntPoint::ignored>(DT_TEBeamEntPoint::ignored*)
 T int ClientClassInit<DT_TEBeamEnts::ignored>(DT_TEBeamEnts::ignored*)
 T int ClientClassInit<DT_TEBeamFollow::ignored>(DT_TEBeamFollow::ignored*)
 T int ClientClassInit<DT_TEBeamLaser::ignored>(DT_TEBeamLaser::ignored*)
 T int ClientClassInit<DT_TEBeamPoints::ignored>(DT_TEBeamPoints::ignored*)
 T int ClientClassInit<DT_TEBeamRing::ignored>(DT_TEBeamRing::ignored*)
 T int ClientClassInit<DT_TEBeamRingPoint::ignored>(DT_TEBeamRingPoint::ignored*)
 T int ClientClassInit<DT_TEBeamSpline::ignored>(DT_TEBeamSpline::ignored*)
 T int ClientClassInit<DT_TEBloodSprite::ignored>(DT_TEBloodSprite::ignored*)
 T int ClientClassInit<DT_TEBloodStream::ignored>(DT_TEBloodStream::ignored*)
 T int ClientClassInit<DT_TEBreakModel::ignored>(DT_TEBreakModel::ignored*)
 T int ClientClassInit<DT_TEBubbleTrail::ignored>(DT_TEBubbleTrail::ignored*)
 T int ClientClassInit<DT_TEBubbles::ignored>(DT_TEBubbles::ignored*)
 T int ClientClassInit<DT_TEClientProjectile::ignored>(DT_TEClientProjectile::ignored*)
 T int ClientClassInit<DT_TEConcussiveExplosion::ignored>(DT_TEConcussiveExplosion::ignored*)
 T int ClientClassInit<DT_TEDecal::ignored>(DT_TEDecal::ignored*)
 T int ClientClassInit<DT_TEDust::ignored>(DT_TEDust::ignored*)
 T int ClientClassInit<DT_TEDynamicLight::ignored>(DT_TEDynamicLight::ignored*)
 T int ClientClassInit<DT_TEEffectDispatch::ignored>(DT_TEEffectDispatch::ignored*)
 T int ClientClassInit<DT_TEEnergySplash::ignored>(DT_TEEnergySplash::ignored*)
 T int ClientClassInit<DT_TEExplosion::ignored>(DT_TEExplosion::ignored*)
 T int ClientClassInit<DT_TEFizz::ignored>(DT_TEFizz::ignored*)
 T int ClientClassInit<DT_TEFootprintDecal::ignored>(DT_TEFootprintDecal::ignored*)
 T int ClientClassInit<DT_TEGaussExplosion::ignored>(DT_TEGaussExplosion::ignored*)
 T int ClientClassInit<DT_TEGlowSprite::ignored>(DT_TEGlowSprite::ignored*)
 T int ClientClassInit<DT_TEImpact::ignored>(DT_TEImpact::ignored*)
 T int ClientClassInit<DT_TEKillPlayerAttachments::ignored>(DT_TEKillPlayerAttachments::ignored*)
 T int ClientClassInit<DT_TELargeFunnel::ignored>(DT_TELargeFunnel::ignored*)
 T int ClientClassInit<DT_TEMetalSparks::ignored>(DT_TEMetalSparks::ignored*)
 T int ClientClassInit<DT_TEMuzzleFlash::ignored>(DT_TEMuzzleFlash::ignored*)
 T int ClientClassInit<DT_TEParticleSystem::ignored>(DT_TEParticleSystem::ignored*)
 T int ClientClassInit<DT_TEPhysicsProp::ignored>(DT_TEPhysicsProp::ignored*)
 T int ClientClassInit<DT_TEPlayerDecal::ignored>(DT_TEPlayerDecal::ignored*)
 T int ClientClassInit<DT_TEProjectedDecal::ignored>(DT_TEProjectedDecal::ignored*)
 T int ClientClassInit<DT_TEShatterSurface::ignored>(DT_TEShatterSurface::ignored*)
 T int ClientClassInit<DT_TEShowLine::ignored>(DT_TEShowLine::ignored*)
 T int ClientClassInit<DT_TESmoke::ignored>(DT_TESmoke::ignored*)
 T int ClientClassInit<DT_TESparks::ignored>(DT_TESparks::ignored*)
 T int ClientClassInit<DT_TESprite::ignored>(DT_TESprite::ignored*)
 T int ClientClassInit<DT_TESpriteSpray::ignored>(DT_TESpriteSpray::ignored*)
 T int ClientClassInit<DT_TEWorldDecal::ignored>(DT_TEWorldDecal::ignored*)
 T int ClientClassInit<DT_Team::ignored>(DT_Team::ignored*)
 T int ClientClassInit<DT_TeamplayRoundBasedRules::ignored>(DT_TeamplayRoundBasedRules::ignored*)
 T int ClientClassInit<DT_TeamplayRoundBasedRulesProxy::ignored>(DT_TeamplayRoundBasedRulesProxy::ignored*)
 T int ClientClassInit<DT_Tesla::ignored>(DT_Tesla::ignored*)
 T int ClientClassInit<DT_TestTraceline::ignored>(DT_TestTraceline::ignored*)
 T int ClientClassInit<DT_VGuiScreen::ignored>(DT_VGuiScreen::ignored*)
 T int ClientClassInit<DT_VortigauntChargeToken::ignored>(DT_VortigauntChargeToken::ignored*)
 T int ClientClassInit<DT_VortigauntEffectDispel::ignored>(DT_VortigauntEffectDispel::ignored*)
 T int ClientClassInit<DT_VoteController::ignored>(DT_VoteController::ignored*)
 T int ClientClassInit<DT_WaterBullet::ignored>(DT_WaterBullet::ignored*)
 T int ClientClassInit<DT_WaterLODControl::ignored>(DT_WaterLODControl::ignored*)
 T int ClientClassInit<DT_Weapon357::ignored>(DT_Weapon357::ignored*)
 T int ClientClassInit<DT_WeaponAR2::ignored>(DT_WeaponAR2::ignored*)
 T int ClientClassInit<DT_WeaponAlyxGun::ignored>(DT_WeaponAlyxGun::ignored*)
 T int ClientClassInit<DT_WeaponAnnabelle::ignored>(DT_WeaponAnnabelle::ignored*)
 T int ClientClassInit<DT_WeaponBinoculars::ignored>(DT_WeaponBinoculars::ignored*)
 T int ClientClassInit<DT_WeaponBugBait::ignored>(DT_WeaponBugBait::ignored*)
 T int ClientClassInit<DT_WeaponCitizenPackage::ignored>(DT_WeaponCitizenPackage::ignored*)
 T int ClientClassInit<DT_WeaponCitizenSuitcase::ignored>(DT_WeaponCitizenSuitcase::ignored*)
 T int ClientClassInit<DT_WeaponCrossbow::ignored>(DT_WeaponCrossbow::ignored*)
 T int ClientClassInit<DT_WeaponCrowbar::ignored>(DT_WeaponCrowbar::ignored*)
 T int ClientClassInit<DT_WeaponCubemap::ignored>(DT_WeaponCubemap::ignored*)
 T int ClientClassInit<DT_WeaponCycler::ignored>(DT_WeaponCycler::ignored*)
 T int ClientClassInit<DT_WeaponFrag::ignored>(DT_WeaponFrag::ignored*)
 T int ClientClassInit<DT_WeaponGaussGun::ignored>(DT_WeaponGaussGun::ignored*)
 T int ClientClassInit<DT_WeaponPhysCannon::ignored>(DT_WeaponPhysCannon::ignored*)
 T int ClientClassInit<DT_WeaponPistol::ignored>(DT_WeaponPistol::ignored*)
 T int ClientClassInit<DT_WeaponRPG::ignored>(DT_WeaponRPG::ignored*)
 T int ClientClassInit<DT_WeaponSMG1::ignored>(DT_WeaponSMG1::ignored*)
 T int ClientClassInit<DT_WeaponShotgun::ignored>(DT_WeaponShotgun::ignored*)
 T int ClientClassInit<DT_WeaponStunStick::ignored>(DT_WeaponStunStick::ignored*)
 T int ClientClassInit<DT_Weapon_SLAM::ignored>(DT_Weapon_SLAM::ignored*)
 T int ClientClassInit<DT_World::ignored>(DT_World::ignored*)
 T int V_sprintf_safe<256ul>(char (&) [256ul], char const*, ...)
 T int V_swprintf_safe<64ul>(wchar_t (&) [64ul], wchar_t const*, ...)
 T jcopy_block_row
 T jcopy_sample_rows
 T jdiv_round_up
 T jinit_1pass_quantizer
 T jinit_2pass_quantizer
 T jinit_arith_decoder
 T jinit_color_deconverter
 T jinit_d_coef_controller
 T jinit_d_main_controller
 T jinit_d_post_controller
 T jinit_huff_decoder
 T jinit_input_controller
 T jinit_inverse_dct
 T jinit_marker_reader
 T jinit_master_decompress
 T jinit_memory_mgr
 T jinit_merged_upsampler
 T jinit_upsampler
 T joy_movement_stick_Callback(IConVar*, char const*, float)
 T jpeg_CreateDecompress
 T jpeg_abort
 T jpeg_alloc_huff_table
 T jpeg_alloc_quant_table
 T jpeg_calc_output_dimensions
 T jpeg_consume_input
 T jpeg_core_output_dimensions
 T jpeg_destroy
 T jpeg_destroy_decompress
 T jpeg_free_large(jpeg_common_struct*, void*, unsigned long)
 T jpeg_free_small(jpeg_common_struct*, void*, unsigned long)
 T jpeg_get_large(jpeg_common_struct*, unsigned long)
 T jpeg_get_small(jpeg_common_struct*, unsigned long)
 T jpeg_idct_10x10(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_10x5(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_11x11(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_12x12(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_12x6(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_13x13(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_14x14(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_14x7(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_15x15(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_16x16(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_16x8(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_1x1(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_1x2(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_2x1(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_2x2(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_2x4(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_3x3(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_3x6(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_4x2(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_4x4(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_4x8(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_5x10(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_5x5(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_6x12(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_6x3(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_6x6(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_7x14(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_7x7(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_8x16(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_8x4(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_9x9(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_float(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_ifast(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_idct_islow(jpeg_decompress_struct*, jpeg_component_info*, short*, unsigned char**, unsigned int)
 T jpeg_mem_available(jpeg_common_struct*, long, long, long)
 T jpeg_mem_init(jpeg_common_struct*)
 T jpeg_mem_term(jpeg_common_struct*)
 T jpeg_open_backing_store(jpeg_common_struct*, backing_store_struct*, long)
 T jpeg_read_header
 T jpeg_read_scanlines
 T jpeg_resync_to_restart
 T jpeg_start_decompress
 T jpeg_std_error
 T jpeg_stdio_src
 T jround_up
 T jzero_far
 T mat_show_ab_hdr_hudelement_changed(IConVar*, char const*, float)
 T mstudioanimdesc_t::pAnim(int*) const
 T mstudioanimdesc_t::pAnim(int*, float&) const
 T mstudioanimdesc_t::pHierarchy(int) const
 T mstudioanimdesc_t::pIKRule(int) const
 T nexttoken(char*, char const*, char)
 T non-virtual thunk to Beam_t::ComputeFxBlend()
 T non-virtual thunk to Beam_t::DrawModel(int)
 T non-virtual thunk to Beam_t::GetFxBlend()
 T non-virtual thunk to Beam_t::GetRenderAngles()
 T non-virtual thunk to Beam_t::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to Beam_t::GetRenderOrigin()
 T non-virtual thunk to Beam_t::IsTransparent()
 T non-virtual thunk to Beam_t::RenderableToWorldTransform()
 T non-virtual thunk to Beam_t::ShouldDraw()
 T non-virtual thunk to CAchievementNotificationPanel::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CAchievementNotificationPanel::GetAnimMap()
 T non-virtual thunk to CAchievementNotificationPanel::GetKBMap()
 T non-virtual thunk to CAchievementNotificationPanel::GetMessageMap()
 T non-virtual thunk to CAchievementNotificationPanel::OnTick()
 T non-virtual thunk to CAchievementNotificationPanel::PerformLayout()
 T non-virtual thunk to CAchievementNotificationPanel::~CAchievementNotificationPanel()
 T non-virtual thunk to CBaseHudChat::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CBaseHudChat::GetAnimMap()
 T non-virtual thunk to CBaseHudChat::GetKBMap()
 T non-virtual thunk to CBaseHudChat::GetMessageMap()
 T non-virtual thunk to CBaseHudChat::OnTick()
 T non-virtual thunk to CBaseHudChat::Paint()
 T non-virtual thunk to CBaseHudChat::~CBaseHudChat()
 T non-virtual thunk to CBasePresence::Init()
 T non-virtual thunk to CBasePresence::Name()
 T non-virtual thunk to CBasePresence::Shutdown()
 T non-virtual thunk to CBasePresence::Update(float)
 T non-virtual thunk to CBasePresence::~CBasePresence()
 T non-virtual thunk to CBaseViewport::FindPanelByName(char const*)
 T non-virtual thunk to CBaseViewport::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CBaseViewport::GetActivePanel()
 T non-virtual thunk to CBaseViewport::PostMessageToPanel(char const*, KeyValues*)
 T non-virtual thunk to CBaseViewport::ShowBackGround(bool)
 T non-virtual thunk to CBaseViewport::ShowPanel(IViewPortPanel*, bool)
 T non-virtual thunk to CBaseViewport::ShowPanel(char const*, bool)
 T non-virtual thunk to CBaseViewport::UpdateAllPanels()
 T non-virtual thunk to CBaseViewport::~CBaseViewport()
 T non-virtual thunk to CClientEntityList::GetClientEntity(int)
 T non-virtual thunk to CClientEntityList::GetClientEntityFromHandle(CBaseHandle)
 T non-virtual thunk to CClientEntityList::GetClientNetworkable(int)
 T non-virtual thunk to CClientEntityList::GetClientNetworkableFromHandle(CBaseHandle)
 T non-virtual thunk to CClientEntityList::GetClientUnknownFromHandle(CBaseHandle)
 T non-virtual thunk to CClientEntityList::GetHighestEntityIndex()
 T non-virtual thunk to CClientEntityList::GetMaxEntities()
 T non-virtual thunk to CClientEntityList::NumberOfEntities(bool)
 T non-virtual thunk to CClientEntityList::SetMaxEntities(int)
 T non-virtual thunk to CClientLeafSystem::EnumerateLeaf(int, int)
 T non-virtual thunk to CClientLeafSystem::Init()
 T non-virtual thunk to CClientLeafSystem::IsPerFrame()
 T non-virtual thunk to CClientLeafSystem::LevelInitPostEntity()
 T non-virtual thunk to CClientLeafSystem::LevelInitPreEntity()
 T non-virtual thunk to CClientLeafSystem::LevelShutdownPostEntity()
 T non-virtual thunk to CClientLeafSystem::LevelShutdownPreEntity()
 T non-virtual thunk to CClientLeafSystem::Name()
 T non-virtual thunk to CClientLeafSystem::OnRestore()
 T non-virtual thunk to CClientLeafSystem::OnSave()
 T non-virtual thunk to CClientLeafSystem::PostInit()
 T non-virtual thunk to CClientLeafSystem::PostRender()
 T non-virtual thunk to CClientLeafSystem::PreRender()
 T non-virtual thunk to CClientLeafSystem::SafeRemoveIfDesired()
 T non-virtual thunk to CClientLeafSystem::Shutdown()
 T non-virtual thunk to CClientLeafSystem::Update(float)
 T non-virtual thunk to CClientLeafSystem::~CClientLeafSystem()
 T non-virtual thunk to CClientScoreBoardDialog::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CClientScoreBoardDialog::GetName()
 T non-virtual thunk to CClientScoreBoardDialog::GetVPanel()
 T non-virtual thunk to CClientScoreBoardDialog::HasInputElements()
 T non-virtual thunk to CClientScoreBoardDialog::IsVisible()
 T non-virtual thunk to CClientScoreBoardDialog::NeedsUpdate()
 T non-virtual thunk to CClientScoreBoardDialog::Reset()
 T non-virtual thunk to CClientScoreBoardDialog::SetData(KeyValues*)
 T non-virtual thunk to CClientScoreBoardDialog::SetParent(unsigned int)
 T non-virtual thunk to CClientScoreBoardDialog::ShowPanel(bool)
 T non-virtual thunk to CClientScoreBoardDialog::Update()
 T non-virtual thunk to CClientScoreBoardDialog::~CClientScoreBoardDialog()
 T non-virtual thunk to CClientTools::OnEntityCreated(C_BaseEntity*)
 T non-virtual thunk to CClientTools::OnEntityDeleted(C_BaseEntity*)
 T non-virtual thunk to CClient_Precipitation::ClientThink()
 T non-virtual thunk to CClient_Precipitation::GetClientClass()
 T non-virtual thunk to CClient_Precipitation::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to CCollisionEvent::AdditionalCollisionChecksThisTick(int)
 T non-virtual thunk to CCollisionEvent::ObjectSleep(IPhysicsObject*)
 T non-virtual thunk to CCollisionEvent::ObjectWake(IPhysicsObject*)
 T non-virtual thunk to CCollisionEvent::ShouldCollide(IPhysicsObject*, IPhysicsObject*, void*, void*)
 T non-virtual thunk to CCollisionEvent::ShouldFreezeContacts(IPhysicsObject**, int)
 T non-virtual thunk to CCollisionEvent::ShouldFreezeObject(IPhysicsObject*)
 T non-virtual thunk to CCollisionEvent::ShouldSolvePenetration(IPhysicsObject*, IPhysicsObject*, void*, void*, float)
 T non-virtual thunk to CCommentaryModelPanel::~CCommentaryModelPanel()
 T non-virtual thunk to CCommentaryModelViewer::GetName()
 T non-virtual thunk to CCommentaryModelViewer::GetVPanel()
 T non-virtual thunk to CCommentaryModelViewer::HasInputElements()
 T non-virtual thunk to CCommentaryModelViewer::IsVisible()
 T non-virtual thunk to CCommentaryModelViewer::NeedsUpdate()
 T non-virtual thunk to CCommentaryModelViewer::Reset()
 T non-virtual thunk to CCommentaryModelViewer::SetData(KeyValues*)
 T non-virtual thunk to CCommentaryModelViewer::SetParent(unsigned int)
 T non-virtual thunk to CCommentaryModelViewer::ShowPanel(bool)
 T non-virtual thunk to CCommentaryModelViewer::Update()
 T non-virtual thunk to CCommentaryModelViewer::~CCommentaryModelViewer()
 T non-virtual thunk to CConCommandMemberAccessor<CBasePresence>::CommandCallback(CCommand const&)
 T non-virtual thunk to CConCommandMemberAccessor<CBasePresence>::CommandCompletionCallback(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
 T non-virtual thunk to CDecalEmitterSystem::Init()
 T non-virtual thunk to CDecalEmitterSystem::LevelInitPreEntity()
 T non-virtual thunk to CDecalEmitterSystem::Shutdown()
 T non-virtual thunk to CDecalEmitterSystem::~CDecalEmitterSystem()
 T non-virtual thunk to CDefaultClientRenderable::ComputeFxBlend()
 T non-virtual thunk to CDefaultClientRenderable::CreateModelInstance()
 T non-virtual thunk to CDefaultClientRenderable::DoAnimationEvents()
 T non-virtual thunk to CDefaultClientRenderable::DrawModel(int)
 T non-virtual thunk to CDefaultClientRenderable::FirstShadowChild()
 T non-virtual thunk to CDefaultClientRenderable::GetAttachment(int, Vector&, QAngle&)
 T non-virtual thunk to CDefaultClientRenderable::GetAttachment(int, matrix3x4_t&)
 T non-virtual thunk to CDefaultClientRenderable::GetBody()
 T non-virtual thunk to CDefaultClientRenderable::GetColorModulation(float*)
 T non-virtual thunk to CDefaultClientRenderable::GetFxBlend()
 T non-virtual thunk to CDefaultClientRenderable::GetIClientUnknown()
 T non-virtual thunk to CDefaultClientRenderable::GetModel() const
 T non-virtual thunk to CDefaultClientRenderable::GetModelInstance()
 T non-virtual thunk to CDefaultClientRenderable::GetPVSNotifyInterface()
 T non-virtual thunk to CDefaultClientRenderable::GetRenderBoundsWorldspace(Vector&, Vector&)
 T non-virtual thunk to CDefaultClientRenderable::GetRenderClipPlane()
 T non-virtual thunk to CDefaultClientRenderable::GetShadowCastDirection(Vector*, ShadowType_t) const
 T non-virtual thunk to CDefaultClientRenderable::GetShadowCastDistance(float*, ShadowType_t) const
 T non-virtual thunk to CDefaultClientRenderable::GetShadowHandle() const
 T non-virtual thunk to CDefaultClientRenderable::GetShadowParent()
 T non-virtual thunk to CDefaultClientRenderable::GetShadowRenderBounds(Vector&, Vector&, ShadowType_t)
 T non-virtual thunk to CDefaultClientRenderable::GetSkin()
 T non-virtual thunk to CDefaultClientRenderable::IgnoresZBuffer() const
 T non-virtual thunk to CDefaultClientRenderable::IsShadowDirty()
 T non-virtual thunk to CDefaultClientRenderable::IsTwoPass()
 T non-virtual thunk to CDefaultClientRenderable::LODTest()
 T non-virtual thunk to CDefaultClientRenderable::LookupAttachment(char const*)
 T non-virtual thunk to CDefaultClientRenderable::MarkShadowDirty(bool)
 T non-virtual thunk to CDefaultClientRenderable::NextShadowPeer()
 T non-virtual thunk to CDefaultClientRenderable::OnThreadedDrawSetup()
 T non-virtual thunk to CDefaultClientRenderable::RecordToolMessage()
 T non-virtual thunk to CDefaultClientRenderable::RenderHandle()
 T non-virtual thunk to CDefaultClientRenderable::SetupBones(matrix3x4_t*, int, int, float)
 T non-virtual thunk to CDefaultClientRenderable::SetupWeights(matrix3x4_t const*, int, float*, float*)
 T non-virtual thunk to CDefaultClientRenderable::ShadowCastType()
 T non-virtual thunk to CDefaultClientRenderable::ShouldReceiveProjectedTextures(int)
 T non-virtual thunk to CDefaultClientRenderable::UsesFlexDelayedWeights()
 T non-virtual thunk to CDefaultClientRenderable::UsesFullFrameBufferTexture()
 T non-virtual thunk to CDefaultClientRenderable::UsesPowerOfTwoFrameBufferTexture()
 T non-virtual thunk to CDetailModel::ComputeFxBlend()
 T non-virtual thunk to CDetailModel::CreateModelInstance()
 T non-virtual thunk to CDetailModel::DoAnimationEvents()
 T non-virtual thunk to CDetailModel::DrawModel(int)
 T non-virtual thunk to CDetailModel::FirstShadowChild()
 T non-virtual thunk to CDetailModel::GetAttachment(int, Vector&, QAngle&)
 T non-virtual thunk to CDetailModel::GetAttachment(int, matrix3x4_t&)
 T non-virtual thunk to CDetailModel::GetBody()
 T non-virtual thunk to CDetailModel::GetColorModulation(float*)
 T non-virtual thunk to CDetailModel::GetFxBlend()
 T non-virtual thunk to CDetailModel::GetIClientUnknown()
 T non-virtual thunk to CDetailModel::GetModel() const
 T non-virtual thunk to CDetailModel::GetModelInstance()
 T non-virtual thunk to CDetailModel::GetPVSNotifyInterface()
 T non-virtual thunk to CDetailModel::GetRenderAngles()
 T non-virtual thunk to CDetailModel::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to CDetailModel::GetRenderBoundsWorldspace(Vector&, Vector&)
 T non-virtual thunk to CDetailModel::GetRenderClipPlane()
 T non-virtual thunk to CDetailModel::GetRenderOrigin()
 T non-virtual thunk to CDetailModel::GetShadowCastDirection(Vector*, ShadowType_t) const
 T non-virtual thunk to CDetailModel::GetShadowCastDistance(float*, ShadowType_t) const
 T non-virtual thunk to CDetailModel::GetShadowHandle() const
 T non-virtual thunk to CDetailModel::GetShadowParent()
 T non-virtual thunk to CDetailModel::GetShadowRenderBounds(Vector&, Vector&, ShadowType_t)
 T non-virtual thunk to CDetailModel::GetSkin()
 T non-virtual thunk to CDetailModel::IgnoresZBuffer() const
 T non-virtual thunk to CDetailModel::IsShadowDirty()
 T non-virtual thunk to CDetailModel::IsTransparent()
 T non-virtual thunk to CDetailModel::IsTwoPass()
 T non-virtual thunk to CDetailModel::LODTest()
 T non-virtual thunk to CDetailModel::LookupAttachment(char const*)
 T non-virtual thunk to CDetailModel::MarkShadowDirty(bool)
 T non-virtual thunk to CDetailModel::NextShadowPeer()
 T non-virtual thunk to CDetailModel::OnThreadedDrawSetup()
 T non-virtual thunk to CDetailModel::RecordToolMessage()
 T non-virtual thunk to CDetailModel::RenderHandle()
 T non-virtual thunk to CDetailModel::RenderableToWorldTransform()
 T non-virtual thunk to CDetailModel::SetupBones(matrix3x4_t*, int, int, float)
 T non-virtual thunk to CDetailModel::SetupWeights(matrix3x4_t const*, int, float*, float*)
 T non-virtual thunk to CDetailModel::ShadowCastType()
 T non-virtual thunk to CDetailModel::ShouldDraw()
 T non-virtual thunk to CDetailModel::ShouldReceiveProjectedTextures(int)
 T non-virtual thunk to CDetailModel::UsesFlexDelayedWeights()
 T non-virtual thunk to CDetailModel::UsesFullFrameBufferTexture()
 T non-virtual thunk to CDetailModel::UsesPowerOfTwoFrameBufferTexture()
 T non-virtual thunk to CDetailObjectSystem::EnumerateLeaf(int, int)
 T non-virtual thunk to CDirtySpatialPartitionEntityList::OnPostQuery(int)
 T non-virtual thunk to CDirtySpatialPartitionEntityList::OnPreQuery(int)
 T non-virtual thunk to CDirtySpatialPartitionEntityList::OnPreQuery_V1()
 T non-virtual thunk to CEmptyConVar::GetName() const
 T non-virtual thunk to CEmptyConVar::IsFlagSet(int) const
 T non-virtual thunk to CEmptyConVar::SetValue(char const*)
 T non-virtual thunk to CEmptyConVar::SetValue(float)
 T non-virtual thunk to CEmptyConVar::SetValue(int)
 T non-virtual thunk to CFunctor6<void (*)(int, int, int, int, bool, bool), int, int, int, int, bool, bool, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor6()
 T non-virtual thunk to CHUDAutoAim::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHUDAutoAim::GetAnimMap()
 T non-virtual thunk to CHUDAutoAim::GetKBMap()
 T non-virtual thunk to CHUDAutoAim::GetMessageMap()
 T non-virtual thunk to CHUDAutoAim::OnThink()
 T non-virtual thunk to CHUDAutoAim::Paint()
 T non-virtual thunk to CHUDAutoAim::~CHUDAutoAim()
 T non-virtual thunk to CHUDQuickInfo::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHUDQuickInfo::GetAnimMap()
 T non-virtual thunk to CHUDQuickInfo::GetKBMap()
 T non-virtual thunk to CHUDQuickInfo::GetMessageMap()
 T non-virtual thunk to CHUDQuickInfo::OnThink()
 T non-virtual thunk to CHUDQuickInfo::Paint()
 T non-virtual thunk to CHUDQuickInfo::~CHUDQuickInfo()
 T non-virtual thunk to CHudAmmo::Init()
 T non-virtual thunk to CHudAmmo::Reset()
 T non-virtual thunk to CHudAmmo::VidInit()
 T non-virtual thunk to CHudAmmo::~CHudAmmo()
 T non-virtual thunk to CHudAnimationInfo::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHudAnimationInfo::GetAnimMap()
 T non-virtual thunk to CHudAnimationInfo::GetKBMap()
 T non-virtual thunk to CHudAnimationInfo::GetMessageMap()
 T non-virtual thunk to CHudAnimationInfo::Paint()
 T non-virtual thunk to CHudAnimationInfo::~CHudAnimationInfo()
 T non-virtual thunk to CHudBattery::Init()
 T non-virtual thunk to CHudBattery::Reset()
 T non-virtual thunk to CHudBattery::ShouldDraw()
 T non-virtual thunk to CHudBattery::VidInit()
 T non-virtual thunk to CHudBattery::~CHudBattery()
 T non-virtual thunk to CHudChat::GetAnimMap()
 T non-virtual thunk to CHudChat::GetKBMap()
 T non-virtual thunk to CHudChat::GetMessageMap()
 T non-virtual thunk to CHudChat::~CHudChat()
 T non-virtual thunk to CHudCloseCaption::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHudCloseCaption::GetAnimMap()
 T non-virtual thunk to CHudCloseCaption::GetKBMap()
 T non-virtual thunk to CHudCloseCaption::GetMessageMap()
 T non-virtual thunk to CHudCloseCaption::OnTick()
 T non-virtual thunk to CHudCloseCaption::Paint()
 T non-virtual thunk to CHudCloseCaption::~CHudCloseCaption()
 T non-virtual thunk to CHudCommentary::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHudCommentary::GetAnimMap()
 T non-virtual thunk to CHudCommentary::GetKBMap()
 T non-virtual thunk to CHudCommentary::GetMessageMap()
 T non-virtual thunk to CHudCommentary::Paint()
 T non-virtual thunk to CHudCommentary::~CHudCommentary()
 T non-virtual thunk to CHudCredits::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHudCredits::GetAnimMap()
 T non-virtual thunk to CHudCredits::GetKBMap()
 T non-virtual thunk to CHudCredits::GetMessageMap()
 T non-virtual thunk to CHudCredits::Paint()
 T non-virtual thunk to CHudCredits::~CHudCredits()
 T non-virtual thunk to CHudCrosshair::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHudCrosshair::GetAnimMap()
 T non-virtual thunk to CHudCrosshair::GetKBMap()
 T non-virtual thunk to CHudCrosshair::GetMessageMap()
 T non-virtual thunk to CHudCrosshair::Paint()
 T non-virtual thunk to CHudCrosshair::~CHudCrosshair()
 T non-virtual thunk to CHudDamageIndicator::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHudDamageIndicator::GetAnimMap()
 T non-virtual thunk to CHudDamageIndicator::GetKBMap()
 T non-virtual thunk to CHudDamageIndicator::GetMessageMap()
 T non-virtual thunk to CHudDamageIndicator::Paint()
 T non-virtual thunk to CHudDamageIndicator::~CHudDamageIndicator()
 T non-virtual thunk to CHudDeathNotice::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHudDeathNotice::GetAnimMap()
 T non-virtual thunk to CHudDeathNotice::GetKBMap()
 T non-virtual thunk to CHudDeathNotice::GetMessageMap()
 T non-virtual thunk to CHudDeathNotice::Paint()
 T non-virtual thunk to CHudDeathNotice::~CHudDeathNotice()
 T non-virtual thunk to CHudFilmDemo::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHudFilmDemo::GetAnimMap()
 T non-virtual thunk to CHudFilmDemo::GetKBMap()
 T non-virtual thunk to CHudFilmDemo::GetMessageMap()
 T non-virtual thunk to CHudFilmDemo::Paint()
 T non-virtual thunk to CHudFilmDemo::~CHudFilmDemo()
 T non-virtual thunk to CHudGeiger::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHudGeiger::GetAnimMap()
 T non-virtual thunk to CHudGeiger::GetKBMap()
 T non-virtual thunk to CHudGeiger::GetMessageMap()
 T non-virtual thunk to CHudGeiger::Paint()
 T non-virtual thunk to CHudGeiger::~CHudGeiger()
 T non-virtual thunk to CHudHDRDemo::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHudHDRDemo::GetAnimMap()
 T non-virtual thunk to CHudHDRDemo::GetKBMap()
 T non-virtual thunk to CHudHDRDemo::GetMessageMap()
 T non-virtual thunk to CHudHDRDemo::Paint()
 T non-virtual thunk to CHudHDRDemo::~CHudHDRDemo()
 T non-virtual thunk to CHudHealth::GetAnimMap()
 T non-virtual thunk to CHudHealth::GetKBMap()
 T non-virtual thunk to CHudHealth::GetMessageMap()
 T non-virtual thunk to CHudHealth::OnThink()
 T non-virtual thunk to CHudHealth::Reset()
 T non-virtual thunk to CHudHealth::~CHudHealth()
 T non-virtual thunk to CHudHintDisplay::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CHudHintDisplay::Init()
 T non-virtual thunk to CHudHintDisplay::Reset()
 T non-virtual thunk to CHudHintDisplay::~CHudHintDisplay()
 T non-virtual thunk to CHudHintKeyDisplay::Init()
 T non-virtual thunk to CHudHintKeyDisplay::Reset()
 T non-virtual thunk to CHudHintKeyDisplay::ShouldDraw()
 T non-virtual thunk to CHudHintKeyDisplay::~CHudHintKeyDisplay()
 T non-virtual thunk to CHudHistoryResource::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHudHistoryResource::GetAnimMap()
 T non-virtual thunk to CHudHistoryResource::GetKBMap()
 T non-virtual thunk to CHudHistoryResource::GetMessageMap()
 T non-virtual thunk to CHudHistoryResource::Paint()
 T non-virtual thunk to CHudHistoryResource::~CHudHistoryResource()
 T non-virtual thunk to CHudMenu::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHudMenu::GetAnimMap()
 T non-virtual thunk to CHudMenu::GetKBMap()
 T non-virtual thunk to CHudMenu::GetMessageMap()
 T non-virtual thunk to CHudMenu::OnThink()
 T non-virtual thunk to CHudMenu::Paint()
 T non-virtual thunk to CHudMenu::~CHudMenu()
 T non-virtual thunk to CHudMessage::AddChar(int, int, int, int, wchar_t)
 T non-virtual thunk to CHudMessage::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHudMessage::GetAnimMap()
 T non-virtual thunk to CHudMessage::GetFontInfo(FONTABC*, unsigned long)
 T non-virtual thunk to CHudMessage::GetKBMap()
 T non-virtual thunk to CHudMessage::GetLength(int*, int*, char const*)
 T non-virtual thunk to CHudMessage::GetMessageMap()
 T non-virtual thunk to CHudMessage::Paint()
 T non-virtual thunk to CHudMessage::SetDefaultFont()
 T non-virtual thunk to CHudMessage::SetFont(unsigned long)
 T non-virtual thunk to CHudMessage::SetPosition(int, int)
 T non-virtual thunk to CHudMessage::~CHudMessage()
 T non-virtual thunk to CHudPoisonDamageIndicator::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHudPoisonDamageIndicator::GetAnimMap()
 T non-virtual thunk to CHudPoisonDamageIndicator::GetKBMap()
 T non-virtual thunk to CHudPoisonDamageIndicator::GetMessageMap()
 T non-virtual thunk to CHudPoisonDamageIndicator::OnThink()
 T non-virtual thunk to CHudPoisonDamageIndicator::Paint()
 T non-virtual thunk to CHudPoisonDamageIndicator::~CHudPoisonDamageIndicator()
 T non-virtual thunk to CHudPosture::GetAnimMap()
 T non-virtual thunk to CHudPosture::GetKBMap()
 T non-virtual thunk to CHudPosture::GetMessageMap()
 T non-virtual thunk to CHudPosture::OnTick()
 T non-virtual thunk to CHudPosture::Paint()
 T non-virtual thunk to CHudPosture::~CHudPosture()
 T non-virtual thunk to CHudSecondaryAmmo::Init()
 T non-virtual thunk to CHudSecondaryAmmo::Reset()
 T non-virtual thunk to CHudSecondaryAmmo::VidInit()
 T non-virtual thunk to CHudSecondaryAmmo::~CHudSecondaryAmmo()
 T non-virtual thunk to CHudSquadStatus::GetAnimMap()
 T non-virtual thunk to CHudSquadStatus::GetKBMap()
 T non-virtual thunk to CHudSquadStatus::GetMessageMap()
 T non-virtual thunk to CHudSquadStatus::OnThink()
 T non-virtual thunk to CHudSquadStatus::Paint()
 T non-virtual thunk to CHudSquadStatus::~CHudSquadStatus()
 T non-virtual thunk to CHudSuitPower::GetAnimMap()
 T non-virtual thunk to CHudSuitPower::GetKBMap()
 T non-virtual thunk to CHudSuitPower::GetMessageMap()
 T non-virtual thunk to CHudSuitPower::OnThink()
 T non-virtual thunk to CHudSuitPower::Paint()
 T non-virtual thunk to CHudSuitPower::~CHudSuitPower()
 T non-virtual thunk to CHudTrain::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHudTrain::GetAnimMap()
 T non-virtual thunk to CHudTrain::GetKBMap()
 T non-virtual thunk to CHudTrain::GetMessageMap()
 T non-virtual thunk to CHudTrain::Paint()
 T non-virtual thunk to CHudTrain::~CHudTrain()
 T non-virtual thunk to CHudVehicle::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHudVehicle::GetAnimMap()
 T non-virtual thunk to CHudVehicle::GetKBMap()
 T non-virtual thunk to CHudVehicle::GetMessageMap()
 T non-virtual thunk to CHudVehicle::Paint()
 T non-virtual thunk to CHudVehicle::~CHudVehicle()
 T non-virtual thunk to CHudViewport::~CHudViewport()
 T non-virtual thunk to CHudWeapon::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHudWeapon::GetAnimMap()
 T non-virtual thunk to CHudWeapon::GetKBMap()
 T non-virtual thunk to CHudWeapon::GetMessageMap()
 T non-virtual thunk to CHudWeapon::Paint()
 T non-virtual thunk to CHudWeapon::PerformLayout()
 T non-virtual thunk to CHudWeapon::~CHudWeapon()
 T non-virtual thunk to CHudWeaponSelection::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CHudWeaponSelection::GetAnimMap()
 T non-virtual thunk to CHudWeaponSelection::GetKBMap()
 T non-virtual thunk to CHudWeaponSelection::GetMessageMap()
 T non-virtual thunk to CHudWeaponSelection::OnThink()
 T non-virtual thunk to CHudWeaponSelection::Paint()
 T non-virtual thunk to CHudWeaponSelection::~CHudWeaponSelection()
 T non-virtual thunk to CHudZoom::Init()
 T non-virtual thunk to CHudZoom::LevelInit()
 T non-virtual thunk to CHudZoom::ShouldDraw()
 T non-virtual thunk to CHudZoom::~CHudZoom()
 T non-virtual thunk to CMemberFunctor0<CParallelProcessor<CNewParticleEffect*, CFuncJobItemProcessor<CNewParticleEffect*> >*, void (CParallelProcessor<CNewParticleEffect*, CFuncJobItemProcessor<CNewParticleEffect*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T non-virtual thunk to CMemberFunctor0<CParallelProcessor<C_BaseAnimating*, CFuncJobItemProcessor<C_BaseAnimating*> >*, void (CParallelProcessor<C_BaseAnimating*, CFuncJobItemProcessor<C_BaseAnimating*> >::*)(), CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor0()
 T non-virtual thunk to CMemberFunctor6<CRopeManager*, void (CRopeManager::*)(bool, CRopeManager::RopeRenderData_t*, int, Vector const&, Vector const&, C_RopeKeyframe::BuildRopeQueuedData_t*), bool, CRopeManager::RopeRenderData_t*, int, Vector, Vector, C_RopeKeyframe::BuildRopeQueuedData_t*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >, CFuncMemPolicyNone>::~CMemberFunctor6()
 T non-virtual thunk to CModelPanel::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CModelPanel::~CModelPanel()
 T non-virtual thunk to CMumbleSystem::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CMumbleSystem::~CMumbleSystem()
 T non-virtual thunk to CNavProgress::GetName()
 T non-virtual thunk to CNavProgress::GetVPanel()
 T non-virtual thunk to CNavProgress::HasInputElements()
 T non-virtual thunk to CNavProgress::IsVisible()
 T non-virtual thunk to CNavProgress::NeedsUpdate()
 T non-virtual thunk to CNavProgress::Reset()
 T non-virtual thunk to CNavProgress::SetData(KeyValues*)
 T non-virtual thunk to CNavProgress::SetParent(unsigned int)
 T non-virtual thunk to CNavProgress::ShowPanel(bool)
 T non-virtual thunk to CNavProgress::Update()
 T non-virtual thunk to CNavProgress::~CNavProgress()
 T non-virtual thunk to CNewParticleEffect::DrawModel(int)
 T non-virtual thunk to CNewParticleEffect::GetRenderAngles()
 T non-virtual thunk to CNewParticleEffect::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to CNewParticleEffect::GetRenderOrigin()
 T non-virtual thunk to CNewParticleEffect::IsTransparent()
 T non-virtual thunk to CNewParticleEffect::IsTwoPass()
 T non-virtual thunk to CNewParticleEffect::RenderableToWorldTransform()
 T non-virtual thunk to CNewParticleEffect::ShouldDraw()
 T non-virtual thunk to CNewParticleEffect::UsesFullFrameBufferTexture()
 T non-virtual thunk to CNewParticleEffect::UsesPowerOfTwoFrameBufferTexture()
 T non-virtual thunk to CNewParticleEffect::~CNewParticleEffect()
 T non-virtual thunk to CPDumpPanel::ApplySchemeSettings(vgui::IScheme*)
 T non-virtual thunk to CPDumpPanel::ApplySettings(KeyValues*)
 T non-virtual thunk to CPDumpPanel::GetAnimMap()
 T non-virtual thunk to CPDumpPanel::GetKBMap()
 T non-virtual thunk to CPDumpPanel::GetMessageMap()
 T non-virtual thunk to CPDumpPanel::Paint()
 T non-virtual thunk to CPDumpPanel::~CPDumpPanel()
 T non-virtual thunk to CParticleEffectBinding::DrawModel(int)
 T non-virtual thunk to CParticleEffectBinding::GetRenderAngles()
 T non-virtual thunk to CParticleEffectBinding::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to CParticleEffectBinding::GetRenderOrigin()
 T non-virtual thunk to CParticleEffectBinding::IsTransparent()
 T non-virtual thunk to CParticleEffectBinding::RenderableToWorldTransform()
 T non-virtual thunk to CParticleEffectBinding::ShouldDraw()
 T non-virtual thunk to CPhysBoxMultiplayer::GetClientClass()
 T non-virtual thunk to CPhysBoxMultiplayer::GetMass()
 T non-virtual thunk to CPhysBoxMultiplayer::GetMultiplayerPhysicsMode()
 T non-virtual thunk to CPhysBoxMultiplayer::IsAsleep()
 T non-virtual thunk to CPhysSaveRestoreBlockHandler::AssociateModel(IPhysicsObject*, CPhysCollide const*)
 T non-virtual thunk to CPhysSaveRestoreBlockHandler::AssociateModel(IPhysicsObject*, int)
 T non-virtual thunk to CPhysSaveRestoreBlockHandler::ForgetAllModels()
 T non-virtual thunk to CPhysSaveRestoreBlockHandler::ForgetModel(IPhysicsObject*)
 T non-virtual thunk to CPhysSaveRestoreBlockHandler::NoteBBox(Vector const&, Vector const&, CPhysCollide*)
 T non-virtual thunk to CPhysicsPropMultiplayer::GetClientClass()
 T non-virtual thunk to CPhysicsPropMultiplayer::GetMass()
 T non-virtual thunk to CPhysicsPropMultiplayer::GetMultiplayerPhysicsMode()
 T non-virtual thunk to CPhysicsPropMultiplayer::IsAsleep()
 T non-virtual thunk to CSnowFallManager::ClientThink()
 T non-virtual thunk to CSnowFallManager::IsTransparent()
 T non-virtual thunk to CSoundControllerImp::LevelShutdownPreEntity()
 T non-virtual thunk to CSoundControllerImp::OnRestore()
 T non-virtual thunk to CSoundControllerImp::Update(float)
 T non-virtual thunk to CSoundControllerImp::~CSoundControllerImp()
 T non-virtual thunk to CSpectatorGUI::GetName()
 T non-virtual thunk to CSpectatorGUI::GetVPanel()
 T non-virtual thunk to CSpectatorGUI::HasInputElements()
 T non-virtual thunk to CSpectatorGUI::IsVisible()
 T non-virtual thunk to CSpectatorGUI::NeedsUpdate()
 T non-virtual thunk to CSpectatorGUI::Reset()
 T non-virtual thunk to CSpectatorGUI::SetData(KeyValues*)
 T non-virtual thunk to CSpectatorGUI::SetParent(unsigned int)
 T non-virtual thunk to CSpectatorGUI::ShowPanel(bool)
 T non-virtual thunk to CSpectatorGUI::Update()
 T non-virtual thunk to CSpectatorGUI::~CSpectatorGUI()
 T non-virtual thunk to CSpectatorMenu::FireGameEvent(IGameEvent*)
 T non-virtual thunk to CSpectatorMenu::GetName()
 T non-virtual thunk to CSpectatorMenu::GetVPanel()
 T non-virtual thunk to CSpectatorMenu::HasInputElements()
 T non-virtual thunk to CSpectatorMenu::IsVisible()
 T non-virtual thunk to CSpectatorMenu::NeedsUpdate()
 T non-virtual thunk to CSpectatorMenu::Reset()
 T non-virtual thunk to CSpectatorMenu::SetData(KeyValues*)
 T non-virtual thunk to CSpectatorMenu::SetParent(unsigned int)
 T non-virtual thunk to CSpectatorMenu::ShowPanel(bool)
 T non-virtual thunk to CSpectatorMenu::Update()
 T non-virtual thunk to CSpectatorMenu::~CSpectatorMenu()
 T non-virtual thunk to CTeamMenu::GetName()
 T non-virtual thunk to CTeamMenu::GetVPanel()
 T non-virtual thunk to CTeamMenu::HasInputElements()
 T non-virtual thunk to CTeamMenu::IsVisible()
 T non-virtual thunk to CTeamMenu::NeedsUpdate()
 T non-virtual thunk to CTeamMenu::Reset()
 T non-virtual thunk to CTeamMenu::SetData(KeyValues*)
 T non-virtual thunk to CTeamMenu::SetParent(unsigned int)
 T non-virtual thunk to CTeamMenu::ShowPanel(bool)
 T non-virtual thunk to CTeamMenu::Update()
 T non-virtual thunk to CTeamMenu::~CTeamMenu()
 T non-virtual thunk to CTextWindow::GetName()
 T non-virtual thunk to CTextWindow::GetVPanel()
 T non-virtual thunk to CTextWindow::HasInputElements()
 T non-virtual thunk to CTextWindow::IsVisible()
 T non-virtual thunk to CTextWindow::NeedsUpdate()
 T non-virtual thunk to CTextWindow::Reset()
 T non-virtual thunk to CTextWindow::SetData(KeyValues*)
 T non-virtual thunk to CTextWindow::SetParent(unsigned int)
 T non-virtual thunk to CTextWindow::ShowPanel(bool)
 T non-virtual thunk to CTextWindow::Update()
 T non-virtual thunk to CTextWindow::~CTextWindow()
 T non-virtual thunk to CViewAngleAnimation::ClientThink()
 T non-virtual thunk to CViewRender::UpdateReplayScreenshotCache()
 T non-virtual thunk to CViewRender::WriteReplayScreenshot(WriteReplayScreenshotParams_t&)
 T non-virtual thunk to CViewRender::~CViewRender()
 T non-virtual thunk to C_AI_BaseNPC::ClientThink()
 T non-virtual thunk to C_AI_BaseNPC::GetClientClass()
 T non-virtual thunk to C_AI_BaseNPC::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_AR2Explosion::GetClientClass()
 T non-virtual thunk to C_AR2Explosion::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_AR2Explosion::RenderParticles(CParticleRenderIterator*)
 T non-virtual thunk to C_AR2Explosion::SimulateParticles(CParticleSimulateIterator*)
 T non-virtual thunk to C_AR2Explosion::Start(CParticleMgr*, IPrototypeArgAccess*)
 T non-virtual thunk to C_AR2Explosion::Update(float)
 T non-virtual thunk to C_AR2Explosion::~C_AR2Explosion()
 T non-virtual thunk to C_AlyxEmpEffect::ClientThink()
 T non-virtual thunk to C_AlyxEmpEffect::GetClientClass()
 T non-virtual thunk to C_AlyxEmpEffect::NotifyShouldTransmit(ShouldTransmitState_t)
 T non-virtual thunk to C_AlyxEmpEffect::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_Barney::GetClientClass()
 T non-virtual thunk to C_BaseAnimating::DrawModel(int)
 T non-virtual thunk to C_BaseAnimating::GetAttachment(int, Vector&, QAngle&)
 T non-virtual thunk to C_BaseAnimating::GetAttachment(int, matrix3x4_t&)
 T non-virtual thunk to C_BaseAnimating::GetBody()
 T non-virtual thunk to C_BaseAnimating::GetClientClass()
 T non-virtual thunk to C_BaseAnimating::GetRenderAngles()
 T non-virtual thunk to C_BaseAnimating::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to C_BaseAnimating::GetRenderOrigin()
 T non-virtual thunk to C_BaseAnimating::GetSkin()
 T non-virtual thunk to C_BaseAnimating::LookupAttachment(char const*)
 T non-virtual thunk to C_BaseAnimating::NotifyShouldTransmit(ShouldTransmitState_t)
 T non-virtual thunk to C_BaseAnimating::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_BaseAnimating::OnModelLoadComplete(model_t const*)
 T non-virtual thunk to C_BaseAnimating::OnPreDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_BaseAnimating::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_BaseAnimating::PreDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_BaseAnimating::Release()
 T non-virtual thunk to C_BaseAnimating::SetupBones(matrix3x4_t*, int, int, float)
 T non-virtual thunk to C_BaseAnimating::ShadowCastType()
 T non-virtual thunk to C_BaseAnimating::ShouldDraw()
 T non-virtual thunk to C_BaseAnimating::UsesPowerOfTwoFrameBufferTexture()
 T non-virtual thunk to C_BaseAnimatingOverlay::GetClientClass()
 T non-virtual thunk to C_BaseAnimatingOverlay::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to C_BaseCombatCharacter::GetClientClass()
 T non-virtual thunk to C_BaseCombatCharacter::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_BaseCombatCharacter::OnPreDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_BaseCombatWeapon::DrawModel(int)
 T non-virtual thunk to C_BaseCombatWeapon::GetClientClass()
 T non-virtual thunk to C_BaseCombatWeapon::NotifyShouldTransmit(ShouldTransmitState_t)
 T non-virtual thunk to C_BaseCombatWeapon::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_BaseCombatWeapon::ShadowCastType()
 T non-virtual thunk to C_BaseCombatWeapon::ShouldDraw()
 T non-virtual thunk to C_BaseDoor::GetClientClass()
 T non-virtual thunk to C_BaseEntity::ClientThink()
 T non-virtual thunk to C_BaseEntity::ComputeFxBlend()
 T non-virtual thunk to C_BaseEntity::CreateModelInstance()
 T non-virtual thunk to C_BaseEntity::DoAnimationEvents()
 T non-virtual thunk to C_BaseEntity::DrawModel(int)
 T non-virtual thunk to C_BaseEntity::FirstShadowChild()
 T non-virtual thunk to C_BaseEntity::GetAttachment(int, Vector&, QAngle&)
 T non-virtual thunk to C_BaseEntity::GetAttachment(int, matrix3x4_t&)
 T non-virtual thunk to C_BaseEntity::GetBody()
 T non-virtual thunk to C_BaseEntity::GetClientClass()
 T non-virtual thunk to C_BaseEntity::GetColorModulation(float*)
 T non-virtual thunk to C_BaseEntity::GetDataTableBasePtr()
 T non-virtual thunk to C_BaseEntity::GetFxBlend()
 T non-virtual thunk to C_BaseEntity::GetIClientUnknown()
 T non-virtual thunk to C_BaseEntity::GetModel() const
 T non-virtual thunk to C_BaseEntity::GetModelInstance()
 T non-virtual thunk to C_BaseEntity::GetPVSNotifyInterface()
 T non-virtual thunk to C_BaseEntity::GetRenderAngles()
 T non-virtual thunk to C_BaseEntity::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to C_BaseEntity::GetRenderBoundsWorldspace(Vector&, Vector&)
 T non-virtual thunk to C_BaseEntity::GetRenderClipPlane()
 T non-virtual thunk to C_BaseEntity::GetRenderOrigin()
 T non-virtual thunk to C_BaseEntity::GetShadowCastDirection(Vector*, ShadowType_t) const
 T non-virtual thunk to C_BaseEntity::GetShadowCastDistance(float*, ShadowType_t) const
 T non-virtual thunk to C_BaseEntity::GetShadowHandle() const
 T non-virtual thunk to C_BaseEntity::GetShadowParent()
 T non-virtual thunk to C_BaseEntity::GetShadowRenderBounds(Vector&, Vector&, ShadowType_t)
 T non-virtual thunk to C_BaseEntity::GetSkin()
 T non-virtual thunk to C_BaseEntity::GetThinkHandle()
 T non-virtual thunk to C_BaseEntity::IgnoresZBuffer() const
 T non-virtual thunk to C_BaseEntity::IsDormant()
 T non-virtual thunk to C_BaseEntity::IsShadowDirty()
 T non-virtual thunk to C_BaseEntity::IsTransparent()
 T non-virtual thunk to C_BaseEntity::IsTwoPass()
 T non-virtual thunk to C_BaseEntity::LODTest()
 T non-virtual thunk to C_BaseEntity::LookupAttachment(char const*)
 T non-virtual thunk to C_BaseEntity::MarkShadowDirty(bool)
 T non-virtual thunk to C_BaseEntity::NextShadowPeer()
 T non-virtual thunk to C_BaseEntity::NotifyShouldTransmit(ShouldTransmitState_t)
 T non-virtual thunk to C_BaseEntity::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_BaseEntity::OnPreDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_BaseEntity::OnThreadedDrawSetup()
 T non-virtual thunk to C_BaseEntity::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_BaseEntity::PreDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_BaseEntity::ReceiveMessage(int, bf_read&)
 T non-virtual thunk to C_BaseEntity::RecordToolMessage()
 T non-virtual thunk to C_BaseEntity::Release()
 T non-virtual thunk to C_BaseEntity::RenderHandle()
 T non-virtual thunk to C_BaseEntity::RenderableToWorldTransform()
 T non-virtual thunk to C_BaseEntity::SetDestroyedOnRecreateEntities()
 T non-virtual thunk to C_BaseEntity::SetThinkHandle(CClientThinkHandlePtr*)
 T non-virtual thunk to C_BaseEntity::SetupBones(matrix3x4_t*, int, int, float)
 T non-virtual thunk to C_BaseEntity::SetupWeights(matrix3x4_t const*, int, float*, float*)
 T non-virtual thunk to C_BaseEntity::ShadowCastType()
 T non-virtual thunk to C_BaseEntity::ShouldDraw()
 T non-virtual thunk to C_BaseEntity::ShouldReceiveProjectedTextures(int)
 T non-virtual thunk to C_BaseEntity::UsesFlexDelayedWeights()
 T non-virtual thunk to C_BaseEntity::UsesFullFrameBufferTexture()
 T non-virtual thunk to C_BaseEntity::UsesPowerOfTwoFrameBufferTexture()
 T non-virtual thunk to C_BaseEntity::entindex() const
 T non-virtual thunk to C_BaseFlex::EnsureTranslations(flexsettinghdr_t const*)
 T non-virtual thunk to C_BaseFlex::GetClientClass()
 T non-virtual thunk to C_BaseFlex::OnThreadedDrawSetup()
 T non-virtual thunk to C_BaseFlex::SetupWeights(matrix3x4_t const*, int, float*, float*)
 T non-virtual thunk to C_BaseFlex::UsesFlexDelayedWeights()
 T non-virtual thunk to C_BaseGrenade::GetClientClass()
 T non-virtual thunk to C_BaseHLBludgeonWeapon::GetClientClass()
 T non-virtual thunk to C_BaseHLCombatWeapon::GetClientClass()
 T non-virtual thunk to C_BaseHLPlayer::DrawModel(int)
 T non-virtual thunk to C_BaseHLPlayer::GetClientClass()
 T non-virtual thunk to C_BaseHLPlayer::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_BaseHLPlayer::~C_BaseHLPlayer()
 T non-virtual thunk to C_BaseHelicopter::GetClientClass()
 T non-virtual thunk to C_BaseParticleEntity::GetClientClass()
 T non-virtual thunk to C_BaseParticleEntity::GetSortOrigin()
 T non-virtual thunk to C_BaseParticleEntity::RenderParticles(CParticleRenderIterator*)
 T non-virtual thunk to C_BaseParticleEntity::SetShouldSimulate(bool)
 T non-virtual thunk to C_BaseParticleEntity::ShouldDraw()
 T non-virtual thunk to C_BaseParticleEntity::ShouldSimulate() const
 T non-virtual thunk to C_BaseParticleEntity::SimulateParticles(CParticleSimulateIterator*)
 T non-virtual thunk to C_BaseParticleEntity::~C_BaseParticleEntity()
 T non-virtual thunk to C_BasePlayer::DrawModel(int)
 T non-virtual thunk to C_BasePlayer::FireGameEvent(IGameEvent*)
 T non-virtual thunk to C_BasePlayer::GetClientClass()
 T non-virtual thunk to C_BasePlayer::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_BasePlayer::OnPreDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_BasePlayer::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_BasePlayer::PreDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_BasePlayer::ReceiveMessage(int, bf_read&)
 T non-virtual thunk to C_BasePlayer::ShadowCastType()
 T non-virtual thunk to C_BasePlayer::ShouldDraw()
 T non-virtual thunk to C_BasePlayer::ShouldReceiveProjectedTextures(int)
 T non-virtual thunk to C_BasePlayer::~C_BasePlayer()
 T non-virtual thunk to C_BaseProjectile::GetClientClass()
 T non-virtual thunk to C_BasePropDoor::GetClientClass()
 T non-virtual thunk to C_BasePropDoor::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_BaseTeamObjectiveResource::ClientThink()
 T non-virtual thunk to C_BaseTeamObjectiveResource::GetClientClass()
 T non-virtual thunk to C_BaseTeamObjectiveResource::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_BaseTeamObjectiveResource::OnPreDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_BaseTempEntity::GetClientClass()
 T non-virtual thunk to C_BaseTempEntity::GetDataTableBasePtr()
 T non-virtual thunk to C_BaseTempEntity::GetIClientUnknown()
 T non-virtual thunk to C_BaseTempEntity::IsDormant()
 T non-virtual thunk to C_BaseTempEntity::NotifyShouldTransmit(ShouldTransmitState_t)
 T non-virtual thunk to C_BaseTempEntity::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_BaseTempEntity::OnPreDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_BaseTempEntity::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_BaseTempEntity::PreDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_BaseTempEntity::ReceiveMessage(int, bf_read&)
 T non-virtual thunk to C_BaseTempEntity::Release()
 T non-virtual thunk to C_BaseTempEntity::SetDestroyedOnRecreateEntities()
 T non-virtual thunk to C_BaseTempEntity::entindex() const
 T non-virtual thunk to C_BaseViewModel::DrawModel(int)
 T non-virtual thunk to C_BaseViewModel::GetAttachment(int, Vector&, QAngle&)
 T non-virtual thunk to C_BaseViewModel::GetAttachment(int, matrix3x4_t&)
 T non-virtual thunk to C_BaseViewModel::GetClientClass()
 T non-virtual thunk to C_BaseViewModel::GetFxBlend()
 T non-virtual thunk to C_BaseViewModel::GetOwnerViaInterface()
 T non-virtual thunk to C_BaseViewModel::IsTransparent()
 T non-virtual thunk to C_BaseViewModel::LookupAttachment(char const*)
 T non-virtual thunk to C_BaseViewModel::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_BaseViewModel::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_BaseViewModel::ShadowCastType()
 T non-virtual thunk to C_BaseViewModel::ShouldDraw()
 T non-virtual thunk to C_BaseViewModel::ShouldReceiveProjectedTextures(int)
 T non-virtual thunk to C_BaseViewModel::UsesPowerOfTwoFrameBufferTexture()
 T non-virtual thunk to C_Beam::DrawModel(int)
 T non-virtual thunk to C_Beam::GetClientClass()
 T non-virtual thunk to C_Beam::IgnoresZBuffer() const
 T non-virtual thunk to C_Beam::IsTransparent()
 T non-virtual thunk to C_Beam::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_Beam::ShouldDraw()
 T non-virtual thunk to C_Beam::ShouldReceiveProjectedTextures(int)
 T non-virtual thunk to C_BoneFollower::DrawModel(int)
 T non-virtual thunk to C_BoneFollower::GetClientClass()
 T non-virtual thunk to C_BoneFollower::ShouldDraw()
 T non-virtual thunk to C_BreakableProp::GetClientClass()
 T non-virtual thunk to C_BreakableSurface::DrawModel(int)
 T non-virtual thunk to C_BreakableSurface::GetClientClass()
 T non-virtual thunk to C_BreakableSurface::IsTransparent()
 T non-virtual thunk to C_BreakableSurface::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_BreakableSurface::OnPreDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_BreakableSurface::RenderBrushModelSurface(IClientEntity*, IBrushSurface*)
 T non-virtual thunk to C_BreakableSurface::ShouldReceiveProjectedTextures(int)
 T non-virtual thunk to C_CitadelEnergyCore::ClientThink()
 T non-virtual thunk to C_CitadelEnergyCore::GetClientClass()
 T non-virtual thunk to C_CitadelEnergyCore::NotifyShouldTransmit(ShouldTransmitState_t)
 T non-virtual thunk to C_CitadelEnergyCore::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_ClientRagdoll::ClientThink()
 T non-virtual thunk to C_ClientRagdoll::GetPVSNotifyInterface()
 T non-virtual thunk to C_ClientRagdoll::OnPVSStatusChanged(bool)
 T non-virtual thunk to C_ClientRagdoll::Release()
 T non-virtual thunk to C_ClientRagdoll::SetupWeights(matrix3x4_t const*, int, float*, float*)
 T non-virtual thunk to C_ColorCorrection::ClientThink()
 T non-virtual thunk to C_ColorCorrection::GetClientClass()
 T non-virtual thunk to C_ColorCorrection::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_ColorCorrection::ShouldDraw()
 T non-virtual thunk to C_ColorCorrectionVolume::ClientThink()
 T non-virtual thunk to C_ColorCorrectionVolume::GetClientClass()
 T non-virtual thunk to C_ColorCorrectionVolume::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_ColorCorrectionVolume::ShouldDraw()
 T non-virtual thunk to C_CombineGunship::GetClientClass()
 T non-virtual thunk to C_CombineGunship::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_CombineGunship::ReceiveMessage(int, bf_read&)
 T non-virtual thunk to C_Corpse::DrawModel(int)
 T non-virtual thunk to C_Corpse::GetClientClass()
 T non-virtual thunk to C_CrossbowBolt::ClientThink()
 T non-virtual thunk to C_CrossbowBolt::DrawModel(int)
 T non-virtual thunk to C_CrossbowBolt::GetClientClass()
 T non-virtual thunk to C_CrossbowBolt::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_DustTrail::GetClientClass()
 T non-virtual thunk to C_DustTrail::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_DustTrail::RenderParticles(CParticleRenderIterator*)
 T non-virtual thunk to C_DustTrail::SimulateParticles(CParticleSimulateIterator*)
 T non-virtual thunk to C_DustTrail::Start(CParticleMgr*, IPrototypeArgAccess*)
 T non-virtual thunk to C_DustTrail::Update(float)
 T non-virtual thunk to C_DustTrail::~C_DustTrail()
 T non-virtual thunk to C_DynamicLight::ClientThink()
 T non-virtual thunk to C_DynamicLight::GetClientClass()
 T non-virtual thunk to C_DynamicLight::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_DynamicLight::Release()
 T non-virtual thunk to C_DynamicLight::ShouldDraw()
 T non-virtual thunk to C_DynamicProp::GetClientClass()
 T non-virtual thunk to C_DynamicProp::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to C_Embers::GetClientClass()
 T non-virtual thunk to C_Embers::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_Embers::ShouldDraw()
 T non-virtual thunk to C_EntityDissolve::ClientThink()
 T non-virtual thunk to C_EntityDissolve::DrawModel(int)
 T non-virtual thunk to C_EntityDissolve::GetClientClass()
 T non-virtual thunk to C_EntityDissolve::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to C_EntityDissolve::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_EntityDissolve::ShouldDraw()
 T non-virtual thunk to C_EntityDissolve::Simulate(IPhysicsMotionController*, IPhysicsObject*, float, Vector&, Vector&)
 T non-virtual thunk to C_EntityFlame::ClientThink()
 T non-virtual thunk to C_EntityFlame::GetClientClass()
 T non-virtual thunk to C_EntityFlame::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_EntityParticleTrail::GetClientClass()
 T non-virtual thunk to C_EntityParticleTrail::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_EntityParticleTrail::RenderParticles(CParticleRenderIterator*)
 T non-virtual thunk to C_EntityParticleTrail::SimulateParticles(CParticleSimulateIterator*)
 T non-virtual thunk to C_EntityParticleTrail::Update(float)
 T non-virtual thunk to C_EntityParticleTrail::~C_EntityParticleTrail()
 T non-virtual thunk to C_EnvDetailController::GetClientClass()
 T non-virtual thunk to C_EnvHeadcrabCanister::ClientThink()
 T non-virtual thunk to C_EnvHeadcrabCanister::GetClientClass()
 T non-virtual thunk to C_EnvHeadcrabCanister::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_EnvParticleScript::DrawModel(int)
 T non-virtual thunk to C_EnvParticleScript::GetClientClass()
 T non-virtual thunk to C_EnvParticleScript::GetFxBlend()
 T non-virtual thunk to C_EnvParticleScript::GetSortOrigin()
 T non-virtual thunk to C_EnvParticleScript::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_EnvParticleScript::OnPreDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_EnvParticleScript::RenderParticles(CParticleRenderIterator*)
 T non-virtual thunk to C_EnvParticleScript::SetShouldSimulate(bool)
 T non-virtual thunk to C_EnvParticleScript::ShouldDraw()
 T non-virtual thunk to C_EnvParticleScript::ShouldSimulate() const
 T non-virtual thunk to C_EnvParticleScript::SimulateParticles(CParticleSimulateIterator*)
 T non-virtual thunk to C_EnvParticleScript::~C_EnvParticleScript()
 T non-virtual thunk to C_EnvProjectedTexture::GetClientClass()
 T non-virtual thunk to C_EnvProjectedTexture::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_EnvScreenEffect::GetClientClass()
 T non-virtual thunk to C_EnvScreenEffect::ReceiveMessage(int, bf_read&)
 T non-virtual thunk to C_EnvScreenOverlay::ClientThink()
 T non-virtual thunk to C_EnvScreenOverlay::GetClientClass()
 T non-virtual thunk to C_EnvScreenOverlay::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_EnvScreenOverlay::PreDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_EnvStarfield::ClientThink()
 T non-virtual thunk to C_EnvStarfield::GetClientClass()
 T non-virtual thunk to C_EnvStarfield::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_EnvTonemapController::GetClientClass()
 T non-virtual thunk to C_EnvTonemapController::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_EnvWind::ClientThink()
 T non-virtual thunk to C_EnvWind::GetClientClass()
 T non-virtual thunk to C_EnvWind::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_EnvWind::ShouldDraw()
 T non-virtual thunk to C_EnvelopeFX::GetRenderAngles()
 T non-virtual thunk to C_EnvelopeFX::GetRenderOrigin()
 T non-virtual thunk to C_EnvelopeFX::IsTransparent()
 T non-virtual thunk to C_EnvelopeFX::RenderableToWorldTransform()
 T non-virtual thunk to C_EnvelopeFX::ShouldDraw()
 T non-virtual thunk to C_EnvelopeFX::ShouldReceiveProjectedTextures(int)
 T non-virtual thunk to C_FireFromAboveSprite::DrawModel(int)
 T non-virtual thunk to C_FireSmoke::GetClientClass()
 T non-virtual thunk to C_FireSmoke::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_FireSmoke::ShouldDraw()
 T non-virtual thunk to C_FireSprite::DrawModel(int)
 T non-virtual thunk to C_FireTrail::GetClientClass()
 T non-virtual thunk to C_FireTrail::Start(CParticleMgr*, IPrototypeArgAccess*)
 T non-virtual thunk to C_FireTrail::Update(float)
 T non-virtual thunk to C_FireTrail::~C_FireTrail()
 T non-virtual thunk to C_Fish::ClientThink()
 T non-virtual thunk to C_Fish::GetClientClass()
 T non-virtual thunk to C_Fish::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_Flare::GetClientClass()
 T non-virtual thunk to C_Flare::NotifyDestroyParticle(Particle*)
 T non-virtual thunk to C_Flare::NotifyShouldTransmit(ShouldTransmitState_t)
 T non-virtual thunk to C_Flare::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_Flare::Update(float)
 T non-virtual thunk to C_Flare::~C_Flare()
 T non-virtual thunk to C_Flaregun::GetClientClass()
 T non-virtual thunk to C_FogController::GetClientClass()
 T non-virtual thunk to C_FuncAreaPortalWindow::ComputeFxBlend()
 T non-virtual thunk to C_FuncAreaPortalWindow::DrawModel(int)
 T non-virtual thunk to C_FuncAreaPortalWindow::GetClientClass()
 T non-virtual thunk to C_FuncAreaPortalWindow::IsTransparent()
 T non-virtual thunk to C_FuncAreaPortalWindow::ShouldReceiveProjectedTextures(int)
 T non-virtual thunk to C_FuncConveyor::GetClientClass()
 T non-virtual thunk to C_FuncLadder::GetClientClass()
 T non-virtual thunk to C_FuncMonitor::GetClientClass()
 T non-virtual thunk to C_FuncMonitor::ShouldDraw()
 T non-virtual thunk to C_FuncOccluder::DrawModel(int)
 T non-virtual thunk to C_FuncOccluder::GetClientClass()
 T non-virtual thunk to C_FuncOccluder::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_FuncOccluder::ShouldDraw()
 T non-virtual thunk to C_FuncPhysicsRespawnZone::ClientThink()
 T non-virtual thunk to C_FuncReflectiveGlass::GetClientClass()
 T non-virtual thunk to C_FuncReflectiveGlass::ShouldDraw()
 T non-virtual thunk to C_FuncRotating::GetClientClass()
 T non-virtual thunk to C_FuncSmokeVolume::GetClientClass()
 T non-virtual thunk to C_FuncSmokeVolume::NotifyRemove()
 T non-virtual thunk to C_FuncSmokeVolume::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_FuncSmokeVolume::RenderParticles(CParticleRenderIterator*)
 T non-virtual thunk to C_FuncSmokeVolume::SimulateParticles(CParticleSimulateIterator*)
 T non-virtual thunk to C_FuncSmokeVolume::Start(CParticleMgr*, IPrototypeArgAccess*)
 T non-virtual thunk to C_FuncSmokeVolume::Update(float)
 T non-virtual thunk to C_FuncSmokeVolume::~C_FuncSmokeVolume()
 T non-virtual thunk to C_FuncTrackTrain::GetClientClass()
 T non-virtual thunk to C_FuncTrackTrain::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_Func_Dust::ClientThink()
 T non-virtual thunk to C_Func_Dust::GetClientClass()
 T non-virtual thunk to C_Func_Dust::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_Func_Dust::ShouldDraw()
 T non-virtual thunk to C_Func_LOD::GetClientClass()
 T non-virtual thunk to C_GameRulesProxy::GetClientClass()
 T non-virtual thunk to C_Gib::ClientThink()
 T non-virtual thunk to C_GunshipFX::DrawModel(int)
 T non-virtual thunk to C_GunshipFX::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to C_HLMachineGun::GetClientClass()
 T non-virtual thunk to C_HLSelectFireMachineGun::GetClientClass()
 T non-virtual thunk to C_Hairball::ClientThink()
 T non-virtual thunk to C_Hairball::DrawModel(int)
 T non-virtual thunk to C_HalfLife2Proxy::GetClientClass()
 T non-virtual thunk to C_HandleTest::GetClientClass()
 T non-virtual thunk to C_HandleTest::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_InfoLadderDismount::GetClientClass()
 T non-virtual thunk to C_InfoLightingRelative::GetClientClass()
 T non-virtual thunk to C_InfoOverlayAccessor::GetClientClass()
 T non-virtual thunk to C_InfoOverlayAccessor::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_InfoTeleporterCountdown::GetClientClass()
 T non-virtual thunk to C_InfoTeleporterCountdown::ShouldDraw()
 T non-virtual thunk to C_LightGlow::ClientThink()
 T non-virtual thunk to C_LightGlow::GetClientClass()
 T non-virtual thunk to C_LightGlow::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_LocalTempEntity::DrawModel(int)
 T non-virtual thunk to C_MaterialModifyControl::GetClientClass()
 T non-virtual thunk to C_MaterialModifyControl::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_MaterialModifyControl::OnPreDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_MaterialModifyControl::ShouldDraw()
 T non-virtual thunk to C_MortarShell::DrawModel(int)
 T non-virtual thunk to C_MortarShell::GetClientClass()
 T non-virtual thunk to C_MortarShell::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_MovieExplosion::GetClientClass()
 T non-virtual thunk to C_MovieExplosion::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_MovieExplosion::RenderParticles(CParticleRenderIterator*)
 T non-virtual thunk to C_MovieExplosion::SimulateParticles(CParticleSimulateIterator*)
 T non-virtual thunk to C_MovieExplosion::Start(CParticleMgr*, IPrototypeArgAccess*)
 T non-virtual thunk to C_MovieExplosion::Update(float)
 T non-virtual thunk to C_MovieExplosion::~C_MovieExplosion()
 T non-virtual thunk to C_NPC_AntlionGuard::ClientThink()
 T non-virtual thunk to C_NPC_AntlionGuard::GetClientClass()
 T non-virtual thunk to C_NPC_AntlionGuard::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_NPC_Barnacle::ClientThink()
 T non-virtual thunk to C_NPC_Barnacle::GetClientClass()
 T non-virtual thunk to C_NPC_Barnacle::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to C_NPC_Barnacle::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_NPC_Manhack::GetClientClass()
 T non-virtual thunk to C_NPC_Manhack::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_NPC_Vortigaunt::ClientThink()
 T non-virtual thunk to C_NPC_Vortigaunt::GetClientClass()
 T non-virtual thunk to C_NPC_Vortigaunt::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_NPC_Vortigaunt::ReceiveMessage(int, bf_read&)
 T non-virtual thunk to C_ParticleFire::GetClientClass()
 T non-virtual thunk to C_ParticleFire::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_ParticleFire::RenderParticles(CParticleRenderIterator*)
 T non-virtual thunk to C_ParticleFire::SimulateParticles(CParticleSimulateIterator*)
 T non-virtual thunk to C_ParticleFire::Start(CParticleMgr*, IPrototypeArgAccess*)
 T non-virtual thunk to C_ParticleFire::Update(float)
 T non-virtual thunk to C_ParticleFire::~C_ParticleFire()
 T non-virtual thunk to C_ParticlePerformanceMonitor::GetClientClass()
 T non-virtual thunk to C_ParticlePerformanceMonitor::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_ParticleSmokeGrenade::ClientThink()
 T non-virtual thunk to C_ParticleSmokeGrenade::GetClientClass()
 T non-virtual thunk to C_ParticleSmokeGrenade::NotifyRemove()
 T non-virtual thunk to C_ParticleSmokeGrenade::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_ParticleSmokeGrenade::RenderParticles(CParticleRenderIterator*)
 T non-virtual thunk to C_ParticleSmokeGrenade::SimulateParticles(CParticleSimulateIterator*)
 T non-virtual thunk to C_ParticleSmokeGrenade::Start(CParticleMgr*, IPrototypeArgAccess*)
 T non-virtual thunk to C_ParticleSmokeGrenade::Update(float)
 T non-virtual thunk to C_ParticleSmokeGrenade::~C_ParticleSmokeGrenade()
 T non-virtual thunk to C_ParticleSystem::ClientThink()
 T non-virtual thunk to C_ParticleSystem::GetClientClass()
 T non-virtual thunk to C_ParticleSystem::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_ParticleSystem::PreDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_ParticleTrail::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_ParticleTrail::Start(CParticleMgr*, IPrototypeArgAccess*)
 T non-virtual thunk to C_ParticleTrail::~C_ParticleTrail()
 T non-virtual thunk to C_PhysBox::GetClientClass()
 T non-virtual thunk to C_PhysBox::ShadowCastType()
 T non-virtual thunk to C_PhysMagnet::GetClientClass()
 T non-virtual thunk to C_PhysMagnet::GetShadowCastDirection(Vector*, ShadowType_t) const
 T non-virtual thunk to C_PhysMagnet::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_PhysPropClientside::ClientThink()
 T non-virtual thunk to C_PhysPropClientside::GetBasePropData()
 T non-virtual thunk to C_PhysPropClientside::GetBreakableCount()
 T non-virtual thunk to C_PhysPropClientside::GetBreakableModel()
 T non-virtual thunk to C_PhysPropClientside::GetBreakableSkin()
 T non-virtual thunk to C_PhysPropClientside::GetDmgModBullet()
 T non-virtual thunk to C_PhysPropClientside::GetDmgModClub()
 T non-virtual thunk to C_PhysPropClientside::GetDmgModExplosive()
 T non-virtual thunk to C_PhysPropClientside::GetExplosiveDamage()
 T non-virtual thunk to C_PhysPropClientside::GetExplosiveRadius()
 T non-virtual thunk to C_PhysPropClientside::GetMass()
 T non-virtual thunk to C_PhysPropClientside::GetMaxBreakableSize()
 T non-virtual thunk to C_PhysPropClientside::GetMultiplayerBreakMode() const
 T non-virtual thunk to C_PhysPropClientside::GetMultiplayerPhysicsMode()
 T non-virtual thunk to C_PhysPropClientside::GetPhysicsDamageTable()
 T non-virtual thunk to C_PhysPropClientside::GetPhysicsMode()
 T non-virtual thunk to C_PhysPropClientside::HasInteraction(propdata_interactions_t)
 T non-virtual thunk to C_PhysPropClientside::IsAsleep()
 T non-virtual thunk to C_PhysPropClientside::IsDormant()
 T non-virtual thunk to C_PhysPropClientside::SetBasePropData(char const*)
 T non-virtual thunk to C_PhysPropClientside::SetBreakableCount(int)
 T non-virtual thunk to C_PhysPropClientside::SetBreakableModel(char const*)
 T non-virtual thunk to C_PhysPropClientside::SetBreakableSkin(int)
 T non-virtual thunk to C_PhysPropClientside::SetDmgModBullet(float)
 T non-virtual thunk to C_PhysPropClientside::SetDmgModClub(float)
 T non-virtual thunk to C_PhysPropClientside::SetDmgModExplosive(float)
 T non-virtual thunk to C_PhysPropClientside::SetExplosiveDamage(float)
 T non-virtual thunk to C_PhysPropClientside::SetExplosiveRadius(float)
 T non-virtual thunk to C_PhysPropClientside::SetInteraction(propdata_interactions_t)
 T non-virtual thunk to C_PhysPropClientside::SetMaxBreakableSize(int)
 T non-virtual thunk to C_PhysPropClientside::SetMultiplayerBreakMode(mp_break_t)
 T non-virtual thunk to C_PhysPropClientside::SetPhysicsDamageTable(char const*)
 T non-virtual thunk to C_PhysPropClientside::SetPhysicsMode(int)
 T non-virtual thunk to C_PhysPropClientside::SetPropDataBlocksLOS(bool)
 T non-virtual thunk to C_PhysPropClientside::SetPropDataIsAIWalkable(bool)
 T non-virtual thunk to C_PhysicsProp::GetClientClass()
 T non-virtual thunk to C_Plasma::GetClientClass()
 T non-virtual thunk to C_Plasma::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_Plasma::ShouldDraw()
 T non-virtual thunk to C_PlasmaBeamNode::ClientThink()
 T non-virtual thunk to C_PlasmaBeamNode::GetClientClass()
 T non-virtual thunk to C_PlasmaBeamNode::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_PlasmaBeamNode::ShouldDraw()
 T non-virtual thunk to C_PlayerResource::ClientThink()
 T non-virtual thunk to C_PlayerResource::GetClientClass()
 T non-virtual thunk to C_PlayerResource::GetDeaths(int)
 T non-virtual thunk to C_PlayerResource::GetFrags(int)
 T non-virtual thunk to C_PlayerResource::GetHealth(int)
 T non-virtual thunk to C_PlayerResource::GetPing(int)
 T non-virtual thunk to C_PlayerResource::GetPlayerName(int)
 T non-virtual thunk to C_PlayerResource::GetPlayerScore(int)
 T non-virtual thunk to C_PlayerResource::GetTeam(int)
 T non-virtual thunk to C_PlayerResource::GetTeamColor(int)
 T non-virtual thunk to C_PlayerResource::GetTeamName(int)
 T non-virtual thunk to C_PlayerResource::GetTeamScore(int)
 T non-virtual thunk to C_PlayerResource::IsAlive(int)
 T non-virtual thunk to C_PlayerResource::IsConnected(int)
 T non-virtual thunk to C_PlayerResource::IsFakePlayer(int)
 T non-virtual thunk to C_PlayerResource::IsLocalPlayer(int)
 T non-virtual thunk to C_PlayerResource::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_PlayerResource::~C_PlayerResource()
 T non-virtual thunk to C_PointCamera::GetClientClass()
 T non-virtual thunk to C_PointCamera::ShouldDraw()
 T non-virtual thunk to C_PointCommentaryNode::GetClientClass()
 T non-virtual thunk to C_PointCommentaryNode::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_PointCommentaryNode::OnPreDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_PoseController::ClientThink()
 T non-virtual thunk to C_PoseController::GetClientClass()
 T non-virtual thunk to C_PoseController::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_PropAirboat::DrawHudElements()
 T non-virtual thunk to C_PropAirboat::DrawModel(int)
 T non-virtual thunk to C_PropAirboat::GetClientClass()
 T non-virtual thunk to C_PropAirboat::GetJoystickResponseCurve() const
 T non-virtual thunk to C_PropAirboat::GetPrimaryAmmoClip() const
 T non-virtual thunk to C_PropAirboat::GetPrimaryAmmoCount() const
 T non-virtual thunk to C_PropAirboat::GetPrimaryAmmoType() const
 T non-virtual thunk to C_PropAirboat::PrimaryAmmoUsesClips() const
 T non-virtual thunk to C_PropAirboat::UpdateViewAngles(C_BasePlayer*, CUserCmd*)
 T non-virtual thunk to C_PropCannon::DrawHudElements()
 T non-virtual thunk to C_PropCannon::FinishMove(C_BasePlayer*, CUserCmd*, CMoveData*)
 T non-virtual thunk to C_PropCannon::GetClientClass()
 T non-virtual thunk to C_PropCannon::GetJoystickResponseCurve() const
 T non-virtual thunk to C_PropCannon::GetPassenger(int)
 T non-virtual thunk to C_PropCannon::GetPassengerRole(C_BaseCombatCharacter*)
 T non-virtual thunk to C_PropCannon::GetPrimaryAmmoClip() const
 T non-virtual thunk to C_PropCannon::GetPrimaryAmmoCount() const
 T non-virtual thunk to C_PropCannon::GetPrimaryAmmoType() const
 T non-virtual thunk to C_PropCannon::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to C_PropCannon::GetVehicleClipPlanes(float&, float&) const
 T non-virtual thunk to C_PropCannon::GetVehicleEnt()
 T non-virtual thunk to C_PropCannon::GetVehicleFOV(float&)
 T non-virtual thunk to C_PropCannon::GetVehicleViewPosition(int, Vector*, QAngle*, float*)
 T non-virtual thunk to C_PropCannon::IsPassengerUsingStandardWeapons(int)
 T non-virtual thunk to C_PropCannon::IsPredicted() const
 T non-virtual thunk to C_PropCannon::ItemPostFrame(C_BasePlayer*)
 T non-virtual thunk to C_PropCannon::PreDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_PropCannon::PrimaryAmmoUsesClips() const
 T non-virtual thunk to C_PropCannon::ProcessMovement(C_BasePlayer*, CMoveData*)
 T non-virtual thunk to C_PropCannon::SetupMove(C_BasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T non-virtual thunk to C_PropCannon::UpdateViewAngles(C_BasePlayer*, CUserCmd*)
 T non-virtual thunk to C_PropCombineBall::DrawModel(int)
 T non-virtual thunk to C_PropCombineBall::GetClientClass()
 T non-virtual thunk to C_PropCombineBall::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_PropCrane::DrawHudElements()
 T non-virtual thunk to C_PropCrane::FinishMove(C_BasePlayer*, CUserCmd*, CMoveData*)
 T non-virtual thunk to C_PropCrane::GetClientClass()
 T non-virtual thunk to C_PropCrane::GetJoystickResponseCurve() const
 T non-virtual thunk to C_PropCrane::GetPassenger(int)
 T non-virtual thunk to C_PropCrane::GetPassengerRole(C_BaseCombatCharacter*)
 T non-virtual thunk to C_PropCrane::GetPrimaryAmmoClip() const
 T non-virtual thunk to C_PropCrane::GetPrimaryAmmoCount() const
 T non-virtual thunk to C_PropCrane::GetPrimaryAmmoType() const
 T non-virtual thunk to C_PropCrane::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to C_PropCrane::GetVehicleClipPlanes(float&, float&) const
 T non-virtual thunk to C_PropCrane::GetVehicleEnt()
 T non-virtual thunk to C_PropCrane::GetVehicleFOV(float&)
 T non-virtual thunk to C_PropCrane::GetVehicleViewPosition(int, Vector*, QAngle*, float*)
 T non-virtual thunk to C_PropCrane::IsPassengerUsingStandardWeapons(int)
 T non-virtual thunk to C_PropCrane::IsPredicted() const
 T non-virtual thunk to C_PropCrane::ItemPostFrame(C_BasePlayer*)
 T non-virtual thunk to C_PropCrane::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_PropCrane::PreDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_PropCrane::PrimaryAmmoUsesClips() const
 T non-virtual thunk to C_PropCrane::ProcessMovement(C_BasePlayer*, CMoveData*)
 T non-virtual thunk to C_PropCrane::SetupMove(C_BasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T non-virtual thunk to C_PropCrane::UpdateViewAngles(C_BasePlayer*, CUserCmd*)
 T non-virtual thunk to C_PropJeep::GetClientClass()
 T non-virtual thunk to C_PropJeep::UpdateViewAngles(C_BasePlayer*, CUserCmd*)
 T non-virtual thunk to C_PropVehicleChoreoGeneric::DrawHudElements()
 T non-virtual thunk to C_PropVehicleChoreoGeneric::FinishMove(C_BasePlayer*, CUserCmd*, CMoveData*)
 T non-virtual thunk to C_PropVehicleChoreoGeneric::GetClientClass()
 T non-virtual thunk to C_PropVehicleChoreoGeneric::GetJoystickResponseCurve() const
 T non-virtual thunk to C_PropVehicleChoreoGeneric::GetPassenger(int)
 T non-virtual thunk to C_PropVehicleChoreoGeneric::GetPassengerRole(C_BaseCombatCharacter*)
 T non-virtual thunk to C_PropVehicleChoreoGeneric::GetPrimaryAmmoClip() const
 T non-virtual thunk to C_PropVehicleChoreoGeneric::GetPrimaryAmmoCount() const
 T non-virtual thunk to C_PropVehicleChoreoGeneric::GetPrimaryAmmoType() const
 T non-virtual thunk to C_PropVehicleChoreoGeneric::GetVehicleClipPlanes(float&, float&) const
 T non-virtual thunk to C_PropVehicleChoreoGeneric::GetVehicleEnt()
 T non-virtual thunk to C_PropVehicleChoreoGeneric::GetVehicleFOV(float&)
 T non-virtual thunk to C_PropVehicleChoreoGeneric::GetVehicleViewPosition(int, Vector*, QAngle*, float*)
 T non-virtual thunk to C_PropVehicleChoreoGeneric::IsPassengerUsingStandardWeapons(int)
 T non-virtual thunk to C_PropVehicleChoreoGeneric::IsPredicted() const
 T non-virtual thunk to C_PropVehicleChoreoGeneric::ItemPostFrame(C_BasePlayer*)
 T non-virtual thunk to C_PropVehicleChoreoGeneric::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_PropVehicleChoreoGeneric::PreDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_PropVehicleChoreoGeneric::PrimaryAmmoUsesClips() const
 T non-virtual thunk to C_PropVehicleChoreoGeneric::ProcessMovement(C_BasePlayer*, CMoveData*)
 T non-virtual thunk to C_PropVehicleChoreoGeneric::SetupMove(C_BasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T non-virtual thunk to C_PropVehicleChoreoGeneric::UpdateViewAngles(C_BasePlayer*, CUserCmd*)
 T non-virtual thunk to C_PropVehicleDriveable::ClientThink()
 T non-virtual thunk to C_PropVehicleDriveable::DrawHudElements()
 T non-virtual thunk to C_PropVehicleDriveable::FinishMove(C_BasePlayer*, CUserCmd*, CMoveData*)
 T non-virtual thunk to C_PropVehicleDriveable::GetClientClass()
 T non-virtual thunk to C_PropVehicleDriveable::GetJoystickResponseCurve() const
 T non-virtual thunk to C_PropVehicleDriveable::GetPassenger(int)
 T non-virtual thunk to C_PropVehicleDriveable::GetPassengerRole(C_BaseCombatCharacter*)
 T non-virtual thunk to C_PropVehicleDriveable::GetPrimaryAmmoClip() const
 T non-virtual thunk to C_PropVehicleDriveable::GetPrimaryAmmoCount() const
 T non-virtual thunk to C_PropVehicleDriveable::GetPrimaryAmmoType() const
 T non-virtual thunk to C_PropVehicleDriveable::GetVehicleClipPlanes(float&, float&) const
 T non-virtual thunk to C_PropVehicleDriveable::GetVehicleEnt()
 T non-virtual thunk to C_PropVehicleDriveable::GetVehicleFOV(float&)
 T non-virtual thunk to C_PropVehicleDriveable::GetVehicleViewPosition(int, Vector*, QAngle*, float*)
 T non-virtual thunk to C_PropVehicleDriveable::IsPassengerUsingStandardWeapons(int)
 T non-virtual thunk to C_PropVehicleDriveable::IsPredicted() const
 T non-virtual thunk to C_PropVehicleDriveable::ItemPostFrame(C_BasePlayer*)
 T non-virtual thunk to C_PropVehicleDriveable::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_PropVehicleDriveable::OnPreDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_PropVehicleDriveable::PrimaryAmmoUsesClips() const
 T non-virtual thunk to C_PropVehicleDriveable::ProcessMovement(C_BasePlayer*, CMoveData*)
 T non-virtual thunk to C_PropVehicleDriveable::SetupMove(C_BasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T non-virtual thunk to C_PropVehicleDriveable::ShadowCastType()
 T non-virtual thunk to C_PropVehicleDriveable::UpdateViewAngles(C_BasePlayer*, CUserCmd*)
 T non-virtual thunk to C_PropVehiclePrisonerPod::DrawHudElements()
 T non-virtual thunk to C_PropVehiclePrisonerPod::FinishMove(C_BasePlayer*, CUserCmd*, CMoveData*)
 T non-virtual thunk to C_PropVehiclePrisonerPod::GetClientClass()
 T non-virtual thunk to C_PropVehiclePrisonerPod::GetJoystickResponseCurve() const
 T non-virtual thunk to C_PropVehiclePrisonerPod::GetPassenger(int)
 T non-virtual thunk to C_PropVehiclePrisonerPod::GetPassengerRole(C_BaseCombatCharacter*)
 T non-virtual thunk to C_PropVehiclePrisonerPod::GetPrimaryAmmoClip() const
 T non-virtual thunk to C_PropVehiclePrisonerPod::GetPrimaryAmmoCount() const
 T non-virtual thunk to C_PropVehiclePrisonerPod::GetPrimaryAmmoType() const
 T non-virtual thunk to C_PropVehiclePrisonerPod::GetVehicleClipPlanes(float&, float&) const
 T non-virtual thunk to C_PropVehiclePrisonerPod::GetVehicleEnt()
 T non-virtual thunk to C_PropVehiclePrisonerPod::GetVehicleFOV(float&)
 T non-virtual thunk to C_PropVehiclePrisonerPod::GetVehicleViewPosition(int, Vector*, QAngle*, float*)
 T non-virtual thunk to C_PropVehiclePrisonerPod::IsPassengerUsingStandardWeapons(int)
 T non-virtual thunk to C_PropVehiclePrisonerPod::IsPredicted() const
 T non-virtual thunk to C_PropVehiclePrisonerPod::ItemPostFrame(C_BasePlayer*)
 T non-virtual thunk to C_PropVehiclePrisonerPod::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_PropVehiclePrisonerPod::PreDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_PropVehiclePrisonerPod::PrimaryAmmoUsesClips() const
 T non-virtual thunk to C_PropVehiclePrisonerPod::ProcessMovement(C_BasePlayer*, CMoveData*)
 T non-virtual thunk to C_PropVehiclePrisonerPod::SetupMove(C_BasePlayer*, CUserCmd*, IMoveHelper*, CMoveData*)
 T non-virtual thunk to C_PropVehiclePrisonerPod::UpdateViewAngles(C_BasePlayer*, CUserCmd*)
 T non-virtual thunk to C_QuadraticBeam::DrawModel(int)
 T non-virtual thunk to C_QuadraticBeam::GetClientClass()
 T non-virtual thunk to C_QuadraticBeam::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to C_QuadraticBeam::ShouldDraw()
 T non-virtual thunk to C_RagdollManager::GetClientClass()
 T non-virtual thunk to C_RagdollManager::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_RocketTrail::GetClientClass()
 T non-virtual thunk to C_RocketTrail::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_RocketTrail::RenderParticles(CParticleRenderIterator*)
 T non-virtual thunk to C_RocketTrail::SimulateParticles(CParticleSimulateIterator*)
 T non-virtual thunk to C_RocketTrail::Start(CParticleMgr*, IPrototypeArgAccess*)
 T non-virtual thunk to C_RocketTrail::Update(float)
 T non-virtual thunk to C_RocketTrail::~C_RocketTrail()
 T non-virtual thunk to C_RollerMine::DrawModel(int)
 T non-virtual thunk to C_RollerMine::GetClientClass()
 T non-virtual thunk to C_RopeKeyframe::ClientThink()
 T non-virtual thunk to C_RopeKeyframe::DrawModel(int)
 T non-virtual thunk to C_RopeKeyframe::GetAttachment(int, Vector&, QAngle&)
 T non-virtual thunk to C_RopeKeyframe::GetAttachment(int, matrix3x4_t&)
 T non-virtual thunk to C_RopeKeyframe::GetClientClass()
 T non-virtual thunk to C_RopeKeyframe::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_RopeKeyframe::ReceiveMessage(int, bf_read&)
 T non-virtual thunk to C_RopeKeyframe::ShouldDraw()
 T non-virtual thunk to C_RotorWashEmitter::ClientThink()
 T non-virtual thunk to C_RotorWashEmitter::GetClientClass()
 T non-virtual thunk to C_RotorWashEmitter::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_SceneEntity::CheckEvent(float, CChoreoScene*, CChoreoEvent*)
 T non-virtual thunk to C_SceneEntity::ClientThink()
 T non-virtual thunk to C_SceneEntity::EndEvent(float, CChoreoScene*, CChoreoEvent*)
 T non-virtual thunk to C_SceneEntity::GetClientClass()
 T non-virtual thunk to C_SceneEntity::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_SceneEntity::PreDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_SceneEntity::ProcessEvent(float, CChoreoScene*, CChoreoEvent*)
 T non-virtual thunk to C_SceneEntity::StartEvent(float, CChoreoScene*, CChoreoEvent*)
 T non-virtual thunk to C_ScriptIntro::ClientThink()
 T non-virtual thunk to C_ScriptIntro::GetClientClass()
 T non-virtual thunk to C_ScriptIntro::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_ServerRagdoll::GetClientClass()
 T non-virtual thunk to C_ServerRagdoll::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to C_ServerRagdoll::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_ServerRagdoll::SetupWeights(matrix3x4_t const*, int, float*, float*)
 T non-virtual thunk to C_ServerRagdollAttached::GetClientClass()
 T non-virtual thunk to C_ServerRagdollAttached::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_ServerRagdollAttached::SetupBones(matrix3x4_t*, int, int, float)
 T non-virtual thunk to C_ShadowControl::GetClientClass()
 T non-virtual thunk to C_ShadowControl::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_ShadowControl::ShouldDraw()
 T non-virtual thunk to C_SlideshowDisplay::ClientThink()
 T non-virtual thunk to C_SlideshowDisplay::GetClientClass()
 T non-virtual thunk to C_SlideshowDisplay::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_SmokeStack::ClientThink()
 T non-virtual thunk to C_SmokeStack::GetClientClass()
 T non-virtual thunk to C_SmokeStack::GetPropEditInfo(RecvTable**, void**)
 T non-virtual thunk to C_SmokeStack::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_SmokeStack::RenderParticles(CParticleRenderIterator*)
 T non-virtual thunk to C_SmokeStack::SimulateParticles(CParticleSimulateIterator*)
 T non-virtual thunk to C_SmokeStack::Start(CParticleMgr*, IPrototypeArgAccess*)
 T non-virtual thunk to C_SmokeStack::StartRender(VMatrix&)
 T non-virtual thunk to C_SmokeStack::Update(float)
 T non-virtual thunk to C_SmokeStack::~C_SmokeStack()
 T non-virtual thunk to C_SmokeTrail::GetClientClass()
 T non-virtual thunk to C_SmokeTrail::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_SmokeTrail::RenderParticles(CParticleRenderIterator*)
 T non-virtual thunk to C_SmokeTrail::SimulateParticles(CParticleSimulateIterator*)
 T non-virtual thunk to C_SmokeTrail::Start(CParticleMgr*, IPrototypeArgAccess*)
 T non-virtual thunk to C_SmokeTrail::Update(float)
 T non-virtual thunk to C_SmokeTrail::~C_SmokeTrail()
 T non-virtual thunk to C_SporeExplosion::GetClientClass()
 T non-virtual thunk to C_SporeExplosion::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_SporeExplosion::RenderParticles(CParticleRenderIterator*)
 T non-virtual thunk to C_SporeExplosion::SimulateParticles(CParticleSimulateIterator*)
 T non-virtual thunk to C_SporeExplosion::Start(CParticleMgr*, IPrototypeArgAccess*)
 T non-virtual thunk to C_SporeExplosion::Update(float)
 T non-virtual thunk to C_SporeExplosion::~C_SporeExplosion()
 T non-virtual thunk to C_SporeTrail::GetClientClass()
 T non-virtual thunk to C_SporeTrail::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_SporeTrail::RenderParticles(CParticleRenderIterator*)
 T non-virtual thunk to C_SporeTrail::SimulateParticles(CParticleSimulateIterator*)
 T non-virtual thunk to C_SporeTrail::StartRender(VMatrix&)
 T non-virtual thunk to C_SporeTrail::Update(float)
 T non-virtual thunk to C_SporeTrail::~C_SporeTrail()
 T non-virtual thunk to C_SpotlightEnd::ClientThink()
 T non-virtual thunk to C_SpotlightEnd::GetClientClass()
 T non-virtual thunk to C_SpotlightEnd::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_SpotlightEnd::ShouldDraw()
 T non-virtual thunk to C_Sprite::ClientThink()
 T non-virtual thunk to C_Sprite::DrawModel(int)
 T non-virtual thunk to C_Sprite::GetClientClass()
 T non-virtual thunk to C_Sprite::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to C_Sprite::GetRenderOrigin()
 T non-virtual thunk to C_Sprite::GlowBlend(CEngineSprite*, Vector const&, int, int, int, float*)
 T non-virtual thunk to C_Sprite::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_SpriteOriented::GetClientClass()
 T non-virtual thunk to C_SpriteOriented::IsTransparent()
 T non-virtual thunk to C_SpriteTrail::ClientThink()
 T non-virtual thunk to C_SpriteTrail::DrawModel(int)
 T non-virtual thunk to C_SpriteTrail::GetClientClass()
 T non-virtual thunk to C_SpriteTrail::GetRenderAngles()
 T non-virtual thunk to C_SpriteTrail::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to C_SpriteTrail::GetRenderOrigin()
 T non-virtual thunk to C_SpriteTrail::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_SpriteTrail::OnPreDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_SteamJet::GetClientClass()
 T non-virtual thunk to C_SteamJet::GetPropEditInfo(RecvTable**, void**)
 T non-virtual thunk to C_SteamJet::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_SteamJet::RenderParticles(CParticleRenderIterator*)
 T non-virtual thunk to C_SteamJet::SimulateParticles(CParticleSimulateIterator*)
 T non-virtual thunk to C_SteamJet::Start(CParticleMgr*, IPrototypeArgAccess*)
 T non-virtual thunk to C_SteamJet::Update(float)
 T non-virtual thunk to C_SteamJet::~C_SteamJet()
 T non-virtual thunk to C_Strider::ClientThink()
 T non-virtual thunk to C_Strider::GetClientClass()
 T non-virtual thunk to C_Strider::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to C_Strider::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_Strider::ReceiveMessage(int, bf_read&)
 T non-virtual thunk to C_StriderFX::DrawModel(int)
 T non-virtual thunk to C_StriderFX::GetRenderBounds(Vector&, Vector&)
 T non-virtual thunk to C_Sun::GetClientClass()
 T non-virtual thunk to C_Sun::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_TEAntlionDust::GetClientClass()
 T non-virtual thunk to C_TEAntlionDust::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEArmorRicochet::GetClientClass()
 T non-virtual thunk to C_TEArmorRicochet::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEBSPDecal::GetClientClass()
 T non-virtual thunk to C_TEBSPDecal::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEBaseBeam::GetClientClass()
 T non-virtual thunk to C_TEBaseBeam::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEBaseBeam::PreDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEBeamEntPoint::GetClientClass()
 T non-virtual thunk to C_TEBeamEntPoint::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEBeamEnts::GetClientClass()
 T non-virtual thunk to C_TEBeamEnts::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEBeamFollow::GetClientClass()
 T non-virtual thunk to C_TEBeamFollow::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEBeamLaser::GetClientClass()
 T non-virtual thunk to C_TEBeamLaser::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEBeamPoints::GetClientClass()
 T non-virtual thunk to C_TEBeamPoints::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEBeamRing::GetClientClass()
 T non-virtual thunk to C_TEBeamRing::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEBeamRingPoint::GetClientClass()
 T non-virtual thunk to C_TEBeamRingPoint::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEBeamSpline::GetClientClass()
 T non-virtual thunk to C_TEBeamSpline::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEBloodSprite::GetClientClass()
 T non-virtual thunk to C_TEBloodSprite::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEBloodStream::GetClientClass()
 T non-virtual thunk to C_TEBloodStream::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEBreakModel::GetClientClass()
 T non-virtual thunk to C_TEBreakModel::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEBubbleTrail::GetClientClass()
 T non-virtual thunk to C_TEBubbleTrail::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEBubbles::GetClientClass()
 T non-virtual thunk to C_TEBubbles::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEClientProjectile::GetClientClass()
 T non-virtual thunk to C_TEClientProjectile::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEConcussiveExplosion::GetClientClass()
 T non-virtual thunk to C_TEConcussiveExplosion::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEDecal::GetClientClass()
 T non-virtual thunk to C_TEDecal::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEDust::GetClientClass()
 T non-virtual thunk to C_TEDust::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEDynamicLight::GetClientClass()
 T non-virtual thunk to C_TEDynamicLight::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEEffectDispatch::GetClientClass()
 T non-virtual thunk to C_TEEffectDispatch::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEEnergySplash::GetClientClass()
 T non-virtual thunk to C_TEEnergySplash::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEExplosion::GetClientClass()
 T non-virtual thunk to C_TEExplosion::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEFizz::GetClientClass()
 T non-virtual thunk to C_TEFizz::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEFootprintDecal::GetClientClass()
 T non-virtual thunk to C_TEFootprintDecal::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEGaussExplosion::GetClientClass()
 T non-virtual thunk to C_TEGaussExplosion::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEGlowSprite::GetClientClass()
 T non-virtual thunk to C_TEGlowSprite::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEImpact::GetClientClass()
 T non-virtual thunk to C_TEImpact::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEKillPlayerAttachments::GetClientClass()
 T non-virtual thunk to C_TEKillPlayerAttachments::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TELargeFunnel::GetClientClass()
 T non-virtual thunk to C_TELargeFunnel::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEMetalSparks::GetClientClass()
 T non-virtual thunk to C_TEMetalSparks::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEMuzzleFlash::GetClientClass()
 T non-virtual thunk to C_TEMuzzleFlash::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEParticleSystem::GetClientClass()
 T non-virtual thunk to C_TEPhysicsProp::GetClientClass()
 T non-virtual thunk to C_TEPhysicsProp::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEPlayerDecal::GetClientClass()
 T non-virtual thunk to C_TEPlayerDecal::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEProjectedDecal::GetClientClass()
 T non-virtual thunk to C_TEProjectedDecal::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEShatterSurface::GetClientClass()
 T non-virtual thunk to C_TEShatterSurface::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEShowLine::GetClientClass()
 T non-virtual thunk to C_TEShowLine::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TESmoke::GetClientClass()
 T non-virtual thunk to C_TESmoke::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TESparks::GetClientClass()
 T non-virtual thunk to C_TESparks::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TESprite::GetClientClass()
 T non-virtual thunk to C_TESprite::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TESpriteSpray::GetClientClass()
 T non-virtual thunk to C_TESpriteSpray::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TEWorldDecal::GetClientClass()
 T non-virtual thunk to C_TEWorldDecal::PostDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_Team::ClientThink()
 T non-virtual thunk to C_Team::GetClientClass()
 T non-virtual thunk to C_Team::PreDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_TeamplayRoundBasedRulesProxy::GetClientClass()
 T non-virtual thunk to C_TeamplayRoundBasedRulesProxy::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_TeamplayRoundBasedRulesProxy::OnPreDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_Tesla::ClientThink()
 T non-virtual thunk to C_Tesla::GetClientClass()
 T non-virtual thunk to C_Tesla::ReceiveMessage(int, bf_read&)
 T non-virtual thunk to C_TestTraceline::DrawModel(int)
 T non-virtual thunk to C_TestTraceline::GetClientClass()
 T non-virtual thunk to C_TestTraceline::ShouldDraw()
 T non-virtual thunk to C_Test_ProxyToggle_Networkable::GetClientClass()
 T non-virtual thunk to C_VGuiScreen::ClientThink()
 T non-virtual thunk to C_VGuiScreen::DrawModel(int)
 T non-virtual thunk to C_VGuiScreen::GetClientClass()
 T non-virtual thunk to C_VGuiScreen::IsTransparent()
 T non-virtual thunk to C_VGuiScreen::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_VGuiScreen::PreDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_VGuiScreen::ShouldDraw()
 T non-virtual thunk to C_VortigauntChargeToken::ClientThink()
 T non-virtual thunk to C_VortigauntChargeToken::GetClientClass()
 T non-virtual thunk to C_VortigauntChargeToken::NotifyShouldTransmit(ShouldTransmitState_t)
 T non-virtual thunk to C_VortigauntChargeToken::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_VortigauntEffectDispel::ClientThink()
 T non-virtual thunk to C_VortigauntEffectDispel::GetClientClass()
 T non-virtual thunk to C_VortigauntEffectDispel::NotifyShouldTransmit(ShouldTransmitState_t)
 T non-virtual thunk to C_VortigauntEffectDispel::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_VoteController::ClientThink()
 T non-virtual thunk to C_VoteController::FireGameEvent(IGameEvent*)
 T non-virtual thunk to C_VoteController::GetClientClass()
 T non-virtual thunk to C_VoteController::~C_VoteController()
 T non-virtual thunk to C_WaterBullet::GetClientClass()
 T non-virtual thunk to C_WaterBullet::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_WaterBullet::ShouldDraw()
 T non-virtual thunk to C_WaterLODControl::GetClientClass()
 T non-virtual thunk to C_WaterLODControl::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_WaterLODControl::ShouldDraw()
 T non-virtual thunk to C_Weapon357::GetClientClass()
 T non-virtual thunk to C_WeaponAR2::GetClientClass()
 T non-virtual thunk to C_WeaponAlyxGun::GetClientClass()
 T non-virtual thunk to C_WeaponAnnabelle::GetClientClass()
 T non-virtual thunk to C_WeaponBinoculars::GetClientClass()
 T non-virtual thunk to C_WeaponBugBait::GetClientClass()
 T non-virtual thunk to C_WeaponCitizenPackage::GetClientClass()
 T non-virtual thunk to C_WeaponCitizenSuitcase::GetClientClass()
 T non-virtual thunk to C_WeaponCrossbow::GetClientClass()
 T non-virtual thunk to C_WeaponCrowbar::GetClientClass()
 T non-virtual thunk to C_WeaponCubemap::GetClientClass()
 T non-virtual thunk to C_WeaponCycler::GetClientClass()
 T non-virtual thunk to C_WeaponFrag::GetClientClass()
 T non-virtual thunk to C_WeaponGaussGun::GetClientClass()
 T non-virtual thunk to C_WeaponPhysCannon::ClientThink()
 T non-virtual thunk to C_WeaponPhysCannon::DrawModel(int)
 T non-virtual thunk to C_WeaponPhysCannon::GetClientClass()
 T non-virtual thunk to C_WeaponPhysCannon::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_WeaponPistol::GetClientClass()
 T non-virtual thunk to C_WeaponRPG::GetClientClass()
 T non-virtual thunk to C_WeaponSMG1::GetClientClass()
 T non-virtual thunk to C_WeaponShotgun::GetClientClass()
 T non-virtual thunk to C_WeaponStunStick::ClientThink()
 T non-virtual thunk to C_WeaponStunStick::DrawModel(int)
 T non-virtual thunk to C_WeaponStunStick::GetClientClass()
 T non-virtual thunk to C_WeaponStunStick::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_Weapon_SLAM::GetClientClass()
 T non-virtual thunk to C_World::GetClientClass()
 T non-virtual thunk to C_World::OnDataChanged(DataUpdateType_t)
 T non-virtual thunk to C_World::PreDataUpdate(DataUpdateType_t)
 T non-virtual thunk to C_World::Release()
 T non-virtual thunk to ClientModeHLNormal::~ClientModeHLNormal()
 T non-virtual thunk to ClientModeShared::FireGameEvent(IGameEvent*)
 T non-virtual thunk to ClientModeShared::~ClientModeShared()
 T non-virtual thunk to ConVar::GetName() const
 T non-virtual thunk to ConVar::IsFlagSet(int) const
 T non-virtual thunk to ConVar::SetValue(char const*)
 T non-virtual thunk to ConVar::SetValue(float)
 T non-virtual thunk to ConVar::SetValue(int)
 T physicssound::AddImpactSound(physicssound::soundlist_t&, void*, int, int, IPhysicsObject*, int, int, float, float)
 T physicssound::PlayImpactSounds(physicssound::soundlist_t&)
 T png_64bit_product
 T png_access_version_number
 T png_ascii_from_fixed
 T png_ascii_from_fp
 T png_benign_error
 T png_build_gamma_table
 T png_build_grayscale_palette
 T png_calculate_crc
 T png_calloc
 T png_check_IHDR
 T png_check_cHRM_fixed
 T png_check_chunk_name
 T png_check_fp_number
 T png_check_fp_string
 T png_check_keyword
 T png_chunk_benign_error
 T png_chunk_error
 T png_chunk_warning
 T png_combine_row
 T png_convert_from_struct_tm
 T png_convert_from_time_t
 T png_convert_to_rfc1123
 T png_crc_error
 T png_crc_finish
 T png_crc_read
 T png_create_info_struct
 T png_create_read_struct
 T png_create_read_struct_2
 T png_create_struct
 T png_create_struct_2
 T png_create_write_struct
 T png_create_write_struct_2
 T png_data_freer
 T png_decompress_chunk
 T png_default_flush
 T png_default_read_data
 T png_default_write_data
 T png_destroy_info_struct
 T png_destroy_read_struct
 T png_destroy_struct
 T png_destroy_struct_2
 T png_destroy_write_struct
 T png_do_background
 T png_do_bgr
 T png_do_chop
 T png_do_expand
 T png_do_expand_16
 T png_do_expand_palette
 T png_do_gamma
 T png_do_gray_to_rgb
 T png_do_invert
 T png_do_pack
 T png_do_packswap
 T png_do_quantize
 T png_do_read_filler
 T png_do_read_interlace
 T png_do_read_intrapixel
 T png_do_read_invert_alpha
 T png_do_read_swap_alpha
 T png_do_read_transformations
 T png_do_rgb_to_gray
 T png_do_shift
 T png_do_strip_channel
 T png_do_swap
 T png_do_unpack
 T png_do_unshift
 T png_do_write_interlace
 T png_do_write_intrapixel
 T png_do_write_invert_alpha
 T png_do_write_swap_alpha
 T png_do_write_transformations
 T png_error
 T png_fixed
 T png_fixed_error
 T png_flush
 T png_free
 T png_free_data
 T png_free_default
 T png_gamma_16bit_correct
 T png_gamma_8bit_correct
 T png_gamma_correct
 T png_gamma_significant
 T png_get_IHDR
 T png_get_PLTE
 T png_get_bKGD
 T png_get_bit_depth
 T png_get_cHRM
 T png_get_cHRM_fixed
 T png_get_channels
 T png_get_chunk_cache_max
 T png_get_chunk_malloc_max
 T png_get_color_type
 T png_get_compression_buffer_size
 T png_get_compression_type
 T png_get_copyright
 T png_get_current_pass_number
 T png_get_current_row_number
 T png_get_error_ptr
 T png_get_filter_type
 T png_get_gAMA
 T png_get_gAMA_fixed
 T png_get_hIST
 T png_get_header_ver
 T png_get_header_version
 T png_get_iCCP
 T png_get_image_height
 T png_get_image_width
 T png_get_int_32
 T png_get_interlace_type
 T png_get_io_chunk_name
 T png_get_io_chunk_type
 T png_get_io_ptr
 T png_get_io_state
 T png_get_libpng_ver
 T png_get_mem_ptr
 T png_get_oFFs
 T png_get_pCAL
 T png_get_pHYs
 T png_get_pHYs_dpi
 T png_get_pixel_aspect_ratio
 T png_get_pixel_aspect_ratio_fixed
 T png_get_pixels_per_inch
 T png_get_pixels_per_meter
 T png_get_rgb_to_gray_status
 T png_get_rowbytes
 T png_get_rows
 T png_get_sBIT
 T png_get_sCAL
 T png_get_sCAL_fixed
 T png_get_sCAL_s
 T png_get_sPLT
 T png_get_sRGB
 T png_get_signature
 T png_get_tIME
 T png_get_tRNS
 T png_get_text
 T png_get_uint_16
 T png_get_uint_31
 T png_get_uint_32
 T png_get_unknown_chunks
 T png_get_user_chunk_ptr
 T png_get_user_height_max
 T png_get_user_transform_ptr
 T png_get_user_width_max
 T png_get_valid
 T png_get_x_offset_inches
 T png_get_x_offset_inches_fixed
 T png_get_x_offset_microns
 T png_get_x_offset_pixels
 T png_get_x_pixels_per_inch
 T png_get_x_pixels_per_meter
 T png_get_y_offset_inches
 T png_get_y_offset_inches_fixed
 T png_get_y_offset_microns
 T png_get_y_offset_pixels
 T png_get_y_pixels_per_inch
 T png_get_y_pixels_per_meter
 T png_handle_IEND
 T png_handle_IHDR
 T png_handle_PLTE
 T png_handle_as_unknown
 T png_handle_bKGD
 T png_handle_cHRM
 T png_handle_gAMA
 T png_handle_hIST
 T png_handle_iCCP
 T png_handle_iTXt
 T png_handle_oFFs
 T png_handle_pCAL
 T png_handle_pHYs
 T png_handle_sBIT
 T png_handle_sCAL
 T png_handle_sPLT
 T png_handle_sRGB
 T png_handle_tEXt
 T png_handle_tIME
 T png_handle_tRNS
 T png_handle_unknown
 T png_handle_zTXt
 T png_info_destroy
 T png_info_init_3
 T png_init_io
 T png_init_read_transformations
 T png_longjmp
 T png_malloc
 T png_malloc_default
 T png_malloc_warn
 T png_muldiv
 T png_muldiv_warn
 T png_permit_mng_features
 T png_read_chunk_header
 T png_read_data
 T png_read_destroy
 T png_read_end
 T png_read_filter_row
 T png_read_finish_row
 T png_read_image
 T png_read_info
 T png_read_png
 T png_read_row
 T png_read_rows
 T png_read_sig
 T png_read_start_row
 T png_read_transform_info
 T png_read_update_info
 T png_reciprocal
 T png_reciprocal2
 T png_reset_crc
 T png_reset_zstream
 T png_save_int_32
 T png_save_uint_16
 T png_save_uint_32
 T png_set_IHDR
 T png_set_PLTE
 T png_set_add_alpha
 T png_set_bKGD
 T png_set_background
 T png_set_background_fixed
 T png_set_benign_errors
 T png_set_bgr
 T png_set_cHRM
 T png_set_cHRM_fixed
 T png_set_chunk_cache_max
 T png_set_chunk_malloc_max
 T png_set_compression_buffer_size
 T png_set_compression_level
 T png_set_compression_mem_level
 T png_set_compression_method
 T png_set_compression_strategy
 T png_set_compression_window_bits
 T png_set_crc_action
 T png_set_error_fn
 T png_set_expand
 T png_set_expand_16
 T png_set_expand_gray_1_2_4_to_8
 T png_set_filler
 T png_set_filter
 T png_set_filter_heuristics
 T png_set_filter_heuristics_fixed
 T png_set_flush
 T png_set_gAMA
 T png_set_gAMA_fixed
 T png_set_gamma
 T png_set_gamma_fixed
 T png_set_gray_to_rgb
 T png_set_hIST
 T png_set_iCCP
 T png_set_interlace_handling
 T png_set_invalid
 T png_set_invert_alpha
 T png_set_invert_mono
 T png_set_keep_unknown_chunks
 T png_set_longjmp_fn
 T png_set_mem_fn
 T png_set_oFFs
 T png_set_pCAL
 T png_set_pHYs
 T png_set_packing
 T png_set_packswap
 T png_set_palette_to_rgb
 T png_set_quantize
 T png_set_read_fn
 T png_set_read_status_fn
 T png_set_read_user_chunk_fn
 T png_set_read_user_transform_fn
 T png_set_rgb_to_gray
 T png_set_rgb_to_gray_fixed
 T png_set_rows
 T png_set_sBIT
 T png_set_sCAL
 T png_set_sCAL_fixed
 T png_set_sCAL_s
 T png_set_sPLT
 T png_set_sRGB
 T png_set_sRGB_gAMA_and_cHRM
 T png_set_shift
 T png_set_sig_bytes
 T png_set_strip_16
 T png_set_strip_alpha
 T png_set_swap
 T png_set_swap_alpha
 T png_set_tIME
 T png_set_tRNS
 T png_set_tRNS_to_alpha
 T png_set_text
 T png_set_text_2
 T png_set_unknown_chunk_location
 T png_set_unknown_chunks
 T png_set_user_limits
 T png_set_user_transform_info
 T png_set_write_fn
 T png_set_write_status_fn
 T png_set_write_user_transform_fn
 T png_sig_cmp
 T png_start_read_image
 T png_warning
 T png_write_IDAT
 T png_write_IEND
 T png_write_IHDR
 T png_write_PLTE
 T png_write_bKGD
 T png_write_cHRM_fixed
 T png_write_chunk
 T png_write_chunk_data
 T png_write_chunk_end
 T png_write_chunk_start
 T png_write_data
 T png_write_destroy
 T png_write_end
 T png_write_filtered_row
 T png_write_find_filter
 T png_write_finish_row
 T png_write_flush
 T png_write_gAMA_fixed
 T png_write_hIST
 T png_write_iCCP
 T png_write_iTXt
 T png_write_image
 T png_write_info
 T png_write_info_before_PLTE
 T png_write_oFFs
 T png_write_pCAL
 T png_write_pHYs
 T png_write_png
 T png_write_row
 T png_write_rows
 T png_write_sBIT
 T png_write_sCAL_s
 T png_write_sPLT
 T png_write_sRGB
 T png_write_sig
 T png_write_start_row
 T png_write_tEXt
 T png_write_tIME
 T png_write_tRNS
 T png_write_zTXt
 T png_zalloc
 T png_zfree
 T r_newflashlightCallback_f(IConVar*, char const*, float)
 T ragdoll_memory_list_t::AddToList(C_BaseEntity*)
 T ragdoll_memory_list_t::~ragdoll_memory_list_t()
 T rand
 T sky3dparams_t::NetworkStateChanged()
 T sky3dparams_t::NetworkStateChanged(void*)
 T sky3dparams_t::NetworkVar_fog::NetworkStateChanged()
 T sky3dparams_t::NetworkVar_fog::NetworkStateChanged(void*)
 T studiohdr_t::GetAnimBlock(int) const
 T studiohdr_t::GetAutoplayList(unsigned short**) const
 T studiohdr_t::GetVirtualModel() const
 T studiohdr_t::SetActivityListVersion(int) const
 T studiohdr_t::pSeqdesc(int) const
 T unsigned int CUtlHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, char const*>::DoLookup<char const*>(char const*, unsigned int, unsigned int*) const
 T usrCmd_Abort()
 T usrCmd_Start()
 T vehicleview_t::NetworkStateChanged()
 T vehicleview_t::NetworkStateChanged(void*)
 T vgui::AnimatingImagePanel::AddImage(vgui::IImage*)
 T vgui::AnimatingImagePanel::AnimatingImagePanel(vgui::Panel*, char const*)
 T vgui::AnimatingImagePanel::ApplySettings(KeyValues*)
 T vgui::AnimatingImagePanel::GetAnimMap()
 T vgui::AnimatingImagePanel::GetDescription()
 T vgui::AnimatingImagePanel::GetKBMap()
 T vgui::AnimatingImagePanel::GetMessageMap()
 T vgui::AnimatingImagePanel::GetPanelClassName()
 T vgui::AnimatingImagePanel::GetSettings(KeyValues*)
 T vgui::AnimatingImagePanel::LoadAnimation(char const*, int)
 T vgui::AnimatingImagePanel::OnTick()
 T vgui::AnimatingImagePanel::PaintBackground()
 T vgui::AnimatingImagePanel::PerformLayout()
 T vgui::AnimatingImagePanel::ResetAnimation(int)
 T vgui::AnimatingImagePanel::StartAnimation()
 T vgui::AnimatingImagePanel::StopAnimation()
 T vgui::AnimatingImagePanel::~AnimatingImagePanel()
 T vgui::AnimationController::AnimationController(vgui::Panel*)
 T vgui::AnimationController::CancelAllAnimations()
 T vgui::AnimationController::ExecAnimationCommand(unsigned short, vgui::AnimationController::AnimCommand_t&, vgui::Panel*)
 T vgui::AnimationController::GetAnimMap()
 T vgui::AnimationController::GetKBMap()
 T vgui::AnimationController::GetMessageMap()
 T vgui::AnimationController::GetPanelClassName()
 T vgui::AnimationController::GetRelativeOffset(vgui::AnimationController::AnimAlign_t&, bool)
 T vgui::AnimationController::GetValue(vgui::AnimationController::ActiveAnimation_t&, vgui::Panel*, unsigned short)
 T vgui::AnimationController::LoadScriptFile(char const*)
 T vgui::AnimationController::ParseScriptFile(char*, int)
 T vgui::AnimationController::ReloadScriptFile()
 T vgui::AnimationController::RemoveQueuedAnimationCommands(unsigned short, vgui::Panel*)
 T vgui::AnimationController::RunAllAnimationsToCompletion()
 T vgui::AnimationController::RunAnimationCommand(vgui::Panel*, char const*, Color, float, float, vgui::AnimationController::Interpolators_e, float)
 T vgui::AnimationController::RunAnimationCommand(vgui::Panel*, char const*, float, float, float, vgui::AnimationController::Interpolators_e, float)
 T vgui::AnimationController::RunCmd_SetFont(vgui::AnimationController::PostedMessage_t&)
 T vgui::AnimationController::RunCmd_SetString(vgui::AnimationController::PostedMessage_t&)
 T vgui::AnimationController::RunCmd_SetTexture(vgui::AnimationController::PostedMessage_t&)
 T vgui::AnimationController::RunCmd_StopAnimation(vgui::AnimationController::PostedMessage_t&)
 T vgui::AnimationController::RunCmd_StopPanelAnimations(vgui::AnimationController::PostedMessage_t&)
 T vgui::AnimationController::SetAutoReloadScript(bool)
 T vgui::AnimationController::SetScriptFile(unsigned int, char const*, bool)
 T vgui::AnimationController::SetValue(vgui::AnimationController::ActiveAnimation_t&, vgui::Panel*, unsigned short, vgui::AnimationController::Value_t&)
 T vgui::AnimationController::SetupPosition(vgui::AnimationController::AnimCmdAnimate_t&, float*, char const*, int)
 T vgui::AnimationController::StartAnimationSequence(char const*)
 T vgui::AnimationController::StartAnimationSequence(vgui::Panel*, char const*)
 T vgui::AnimationController::StartCmd_Animate(unsigned short, vgui::AnimationController::AnimCmdAnimate_t&, vgui::Panel*)
 T vgui::AnimationController::StartCmd_Animate(vgui::Panel*, unsigned short, vgui::AnimationController::AnimCmdAnimate_t&)
 T vgui::AnimationController::UpdateActiveAnimations(bool)
 T vgui::AnimationController::UpdateAnimations(float)
 T vgui::AnimationController::UpdatePostedMessages(bool)
 T vgui::AnimationController::UpdateScreenSize()
 T vgui::AnimationController::~AnimationController()
 T vgui::BaseTooltip::ApplySchemeSettings(vgui::IScheme*)
 T vgui::BaseTooltip::GetText()
 T vgui::BaseTooltip::HideTooltip()
 T vgui::BaseTooltip::PerformLayout()
 T vgui::BaseTooltip::PositionWindow(vgui::Panel*)
 T vgui::BaseTooltip::ResetDelay()
 T vgui::BaseTooltip::SetEnabled(bool)
 T vgui::BaseTooltip::SetText(char const*)
 T vgui::BaseTooltip::SetTooltipDelay(int)
 T vgui::BaseTooltip::SetTooltipFormatToSingleLine()
 T vgui::BaseTooltip::ShowTooltip(vgui::Panel*)
 T vgui::BuildGroup::ActivateBuildDialog()
 T vgui::BuildGroup::ApplySchemeSettings(vgui::IScheme*)
 T vgui::BuildGroup::ApplySettings(KeyValues*)
 T vgui::BuildGroup::BuildGroup(vgui::Panel*, vgui::Panel*)
 T vgui::BuildGroup::ChangeControlSettingsFile(char const*)
 T vgui::BuildGroup::CreateBuildDialog()
 T vgui::BuildGroup::CursorMoved(int, int, vgui::Panel*)
 T vgui::BuildGroup::DeleteAllControlsCreatedByControlSettingsFile()
 T vgui::BuildGroup::DrawRulers()
 T vgui::BuildGroup::FieldNameTaken(char const*)
 T vgui::BuildGroup::GetContextPanel()
 T vgui::BuildGroup::GetControlGroup()
 T vgui::BuildGroup::GetCurrentPanel()
 T vgui::BuildGroup::GetCursor(vgui::Panel*)
 T vgui::BuildGroup::GetDialogVariables()
 T vgui::BuildGroup::GetNewFieldName(char*, int, vgui::Panel*)
 T vgui::BuildGroup::GetRegisteredControlSettingsFileByIndex(int)
 T vgui::BuildGroup::GetRegisteredControlSettingsFileCount()
 T vgui::BuildGroup::GetResourceName()
 T vgui::BuildGroup::GetSettings(KeyValues*)
 T vgui::BuildGroup::HasRulersOn()
 T vgui::BuildGroup::IsEnabled()
 T vgui::BuildGroup::KeyCodeReleased(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::KeyCodeTyped(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::KeyTyped(wchar_t, vgui::Panel*)
 T vgui::BuildGroup::LoadControlSettings(char const*, char const*, KeyValues*, KeyValues*)
 T vgui::BuildGroup::MouseDoublePressed(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::MousePressed(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::MouseReleased(ButtonCode_t, vgui::Panel*)
 T vgui::BuildGroup::NewControl(KeyValues*, int, int)
 T vgui::BuildGroup::NewControl(char const*, int, int)
 T vgui::BuildGroup::PanelAdded(vgui::Panel*)
 T vgui::BuildGroup::ProcessConditionalKeys(KeyValues*, KeyValues*)
 T vgui::BuildGroup::RegisterControlSettingsFile(char const*, char const*)
 T vgui::BuildGroup::ReloadControlSettings()
 T vgui::BuildGroup::RemoveSettings()
 T vgui::BuildGroup::SaveControlSettings()
 T vgui::BuildGroup::SetContextPanel(vgui::Panel*)
 T vgui::BuildGroup::SetEnabled(bool)
 T vgui::BuildGroup::SetRulerLabelsVisible(bool)
 T vgui::BuildGroup::ToggleRulerDisplay()
 T vgui::BuildGroup::~BuildGroup()
 T vgui::BuildModeDialog::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::BuildModeDialog::ApplyDataToControls()
 T vgui::BuildModeDialog::ApplySchemeSettings(vgui::IScheme*)
 T vgui::BuildModeDialog::BuildModeDialog(vgui::BuildGroup*)
 T vgui::BuildModeDialog::CreateControls()
 T vgui::BuildModeDialog::DoCopy()
 T vgui::BuildModeDialog::DoPaste()
 T vgui::BuildModeDialog::DoUndo()
 T vgui::BuildModeDialog::EnableSaveButton()
 T vgui::BuildModeDialog::GetAnimMap()
 T vgui::BuildModeDialog::GetKBMap()
 T vgui::BuildModeDialog::GetMessageMap()
 T vgui::BuildModeDialog::GetPanelClassName()
 T vgui::BuildModeDialog::IsBuildGroupEnabled()
 T vgui::BuildModeDialog::OnChangeChild(int)
 T vgui::BuildModeDialog::OnClose()
 T vgui::BuildModeDialog::OnCommand(char const*)
 T vgui::BuildModeDialog::OnCreateNewControl(char const*)
 T vgui::BuildModeDialog::OnDeletePanel()
 T vgui::BuildModeDialog::OnKeyCodeTyped(ButtonCode_t)
 T vgui::BuildModeDialog::OnPanelMoved()
 T vgui::BuildModeDialog::OnReloadLocalization()
 T vgui::BuildModeDialog::OnSetClipboardText(char const*)
 T vgui::BuildModeDialog::OnShowNewControlMenu()
 T vgui::BuildModeDialog::OnTextChanged(vgui::Panel*)
 T vgui::BuildModeDialog::OnTextKillFocus()
 T vgui::BuildModeDialog::PerformLayout()
 T vgui::BuildModeDialog::SetActiveControl(vgui::Panel*)
 T vgui::BuildModeDialog::ShutdownBuildMode()
 T vgui::BuildModeDialog::StoreSettings()
 T vgui::BuildModeDialog::StoreUndoSettings()
 T vgui::BuildModeDialog::UpdateControlData(vgui::Panel*)
 T vgui::BuildModeDialog::~BuildModeDialog()
 T vgui::Button::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Button::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Button::ApplySettings(KeyValues*)
 T vgui::Button::Button(vgui::Panel*, char const*, char const*, vgui::Panel*, char const*)
 T vgui::Button::Button(vgui::Panel*, char const*, wchar_t const*, vgui::Panel*, char const*)
 T vgui::Button::CanBeDefaultButton()
 T vgui::Button::DoClick()
 T vgui::Button::DrawFocusBorder(int, int, int, int)
 T vgui::Button::FireActionSignal()
 T vgui::Button::ForceDepressed(bool)
 T vgui::Button::GetAnimMap()
 T vgui::Button::GetBorder(bool, bool, bool, bool)
 T vgui::Button::GetButtonBgColor()
 T vgui::Button::GetButtonFgColor()
 T vgui::Button::GetCommand()
 T vgui::Button::GetDescription()
 T vgui::Button::GetKBMap()
 T vgui::Button::GetMessageMap()
 T vgui::Button::GetPanelClassName()
 T vgui::Button::GetSettings(KeyValues*)
 T vgui::Button::Init()
 T vgui::Button::IsArmed()
 T vgui::Button::IsBlinking()
 T vgui::Button::IsDepressed()
 T vgui::Button::IsMouseClickEnabled(ButtonCode_t)
 T vgui::Button::IsSelected()
 T vgui::Button::IsUseCaptureMouseEnabled()
 T vgui::Button::NavigateFrom()
 T vgui::Button::NavigateTo()
 T vgui::Button::OnCursorEntered()
 T vgui::Button::OnCursorExited()
 T vgui::Button::OnHotkey()
 T vgui::Button::OnKeyCodePressed(ButtonCode_t)
 T vgui::Button::OnKeyCodeReleased(ButtonCode_t)
 T vgui::Button::OnKillFocus()
 T vgui::Button::OnMouseDoublePressed(ButtonCode_t)
 T vgui::Button::OnMousePressed(ButtonCode_t)
 T vgui::Button::OnMouseReleased(ButtonCode_t)
 T vgui::Button::OnSetFocus()
 T vgui::Button::OnSetState(int)
 T vgui::Button::Paint()
 T vgui::Button::PerformLayout()
 T vgui::Button::RecalculateDepressedState()
 T vgui::Button::RequestInfo(KeyValues*)
 T vgui::Button::SetArmed(bool)
 T vgui::Button::SetArmedColor(Color, Color)
 T vgui::Button::SetAsCurrentDefaultButton(int)
 T vgui::Button::SetAsDefaultButton(int)
 T vgui::Button::SetBlink(bool)
 T vgui::Button::SetBlinkColor(Color)
 T vgui::Button::SetButtonActivationType(vgui::Button::ActivationType_t)
 T vgui::Button::SetButtonBorderEnabled(bool)
 T vgui::Button::SetCommand(KeyValues*)
 T vgui::Button::SetCommand(char const*)
 T vgui::Button::SetDefaultBorder(vgui::IBorder*)
 T vgui::Button::SetDefaultColor(Color, Color)
 T vgui::Button::SetDepressedBorder(vgui::IBorder*)
 T vgui::Button::SetDepressedColor(Color, Color)
 T vgui::Button::SetKeyFocusBorder(vgui::IBorder*)
 T vgui::Button::SetMouseClickEnabled(ButtonCode_t, bool)
 T vgui::Button::SetSelected(bool)
 T vgui::Button::SetSelectedColor(Color, Color)
 T vgui::Button::SetUseCaptureMouse(bool)
 T vgui::Button::SizeToContents()
 T vgui::Button::~Button()
 T vgui::CBitmapImagePanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::CBitmapImagePanel::ApplySettings(KeyValues*)
 T vgui::CBitmapImagePanel::CBitmapImagePanel(vgui::Panel*, char const*, char const*)
 T vgui::CBitmapImagePanel::ComputeImagePosition(int&, int&, int&, int&)
 T vgui::CBitmapImagePanel::GetDescription()
 T vgui::CBitmapImagePanel::GetSettings(KeyValues*)
 T vgui::CBitmapImagePanel::PaintBackground()
 T vgui::CBitmapImagePanel::PaintBorder()
 T vgui::CBitmapImagePanel::SetContentAlignment(vgui::Label::Alignment)
 T vgui::CBitmapImagePanel::setTexture(char const*, bool)
 T vgui::CBitmapImagePanel::~CBitmapImagePanel()
 T vgui::CBuildFactoryHelper::CBuildFactoryHelper(char const*, vgui::Panel* (*)())
 T vgui::CBuildFactoryHelper::GetFactoryNames(CUtlVector<char const*, CUtlMemory<char const*, int> >&)
 T vgui::CBuildFactoryHelper::InstancePanel(char const*)
 T vgui::CItemButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::CItemButton::CItemButton(vgui::SectionedListPanel*, int)
 T vgui::CItemButton::GetAnimMap()
 T vgui::CItemButton::GetKBMap()
 T vgui::CItemButton::GetMessageMap()
 T vgui::CItemButton::GetPanelClassName()
 T vgui::CItemButton::OnKillFocus()
 T vgui::CItemButton::OnMouseDoublePressed(ButtonCode_t)
 T vgui::CItemButton::OnMousePressed(ButtonCode_t)
 T vgui::CItemButton::OnSetFocus()
 T vgui::CItemButton::Paint()
 T vgui::CItemButton::PaintBackground()
 T vgui::CItemButton::PerformLayout()
 T vgui::CItemButton::SetOverrideColors(bool)
 T vgui::CItemButton::~CItemButton()
 T vgui::CMenuManager::AddMenu(vgui::Menu*)
 T vgui::CMenuManager::IsWithinMenuOrRelative(vgui::Panel*, int, int)
 T vgui::CMenuManager::OnInternalMousePressed(vgui::Panel*, ButtonCode_t)
 T vgui::CMenuManager::~CMenuManager()
 T vgui::CTreeViewListControl::CTreeViewListControl(vgui::Panel*, char const*)
 T vgui::CTreeViewListControl::DrawTitleBars()
 T vgui::CTreeViewListControl::GetAnimMap()
 T vgui::CTreeViewListControl::GetGridElementBounds(int, int, int&, int&, int&, int&)
 T vgui::CTreeViewListControl::GetKBMap()
 T vgui::CTreeViewListControl::GetMessageMap()
 T vgui::CTreeViewListControl::GetNumColumns() const
 T vgui::CTreeViewListControl::GetNumRows()
 T vgui::CTreeViewListControl::GetPanelClassName()
 T vgui::CTreeViewListControl::GetScrollBarSize()
 T vgui::CTreeViewListControl::GetTitleBarHeight()
 T vgui::CTreeViewListControl::GetTree()
 T vgui::CTreeViewListControl::GetTreeItemAtRow(int)
 T vgui::CTreeViewListControl::Paint()
 T vgui::CTreeViewListControl::PerformLayout()
 T vgui::CTreeViewListControl::PostChildPaint()
 T vgui::CTreeViewListControl::RecalculateRows_R(int)
 T vgui::CTreeViewListControl::SetBorderColor(Color)
 T vgui::CTreeViewListControl::SetColumnInfo(int, char const*, int, int)
 T vgui::CTreeViewListControl::SetNumColumns(int)
 T vgui::CTreeViewListControl::SetTitleBarInfo(unsigned long, int)
 T vgui::CTreeViewListControl::SetTreeView(vgui::TreeView*)
 T vgui::CTreeViewListControl::~CTreeViewListControl()
 T vgui::CheckButton::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::CheckButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::CheckButton::CheckButton(vgui::Panel*, char const*, char const*)
 T vgui::CheckButton::GetAnimMap()
 T vgui::CheckButton::GetBorder(bool, bool, bool, bool)
 T vgui::CheckButton::GetButtonFgColor()
 T vgui::CheckButton::GetKBMap()
 T vgui::CheckButton::GetMessageMap()
 T vgui::CheckButton::GetPanelClassName()
 T vgui::CheckButton::IsCheckButtonCheckable() const
 T vgui::CheckButton::OnCheckButtonChecked(vgui::Panel*)
 T vgui::CheckButton::SetCheckButtonCheckable(bool)
 T vgui::CheckButton::SetHighlightColor(Color)
 T vgui::CheckButton::SetSelected(bool)
 T vgui::CheckButton::~CheckButton()
 T vgui::CheckImage::Paint()
 T vgui::CheckImage::SetColor(Color)
 T vgui::CheckImage::~CheckImage()
 T vgui::CircularProgressBar::ApplySchemeSettings(vgui::IScheme*)
 T vgui::CircularProgressBar::ApplySettings(KeyValues*)
 T vgui::CircularProgressBar::CircularProgressBar(vgui::Panel*, char const*)
 T vgui::CircularProgressBar::DrawCircleSegment(Color, float, bool)
 T vgui::CircularProgressBar::GetAnimMap()
 T vgui::CircularProgressBar::GetKBMap()
 T vgui::CircularProgressBar::GetMessageMap()
 T vgui::CircularProgressBar::GetPanelClassName()
 T vgui::CircularProgressBar::Paint()
 T vgui::CircularProgressBar::PaintBackground()
 T vgui::CircularProgressBar::SetImage(char const*, progress_textures_t)
 T vgui::CircularProgressBar::~CircularProgressBar()
 T vgui::ClickPanel::ClickPanel(vgui::Panel*)
 T vgui::ClickPanel::GetAnimMap()
 T vgui::ClickPanel::GetKBMap()
 T vgui::ClickPanel::GetMessageMap()
 T vgui::ClickPanel::GetPanelClassName()
 T vgui::ClickPanel::OnMousePressed(ButtonCode_t)
 T vgui::ClickPanel::~ClickPanel()
 T vgui::ComboBox::ActivateItem(int)
 T vgui::ComboBox::ActivateItemByRow(int)
 T vgui::ComboBox::AddItem(char const*, KeyValues const*)
 T vgui::ComboBox::AddItem(wchar_t const*, KeyValues const*)
 T vgui::ComboBox::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ComboBox::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ComboBox::ApplySettings(KeyValues*)
 T vgui::ComboBox::ComboBox(vgui::Panel*, char const*, int, bool)
 T vgui::ComboBox::DoClick()
 T vgui::ComboBox::GetActiveItem()
 T vgui::ComboBox::GetActiveItemUserData()
 T vgui::ComboBox::GetAnimMap()
 T vgui::ComboBox::GetItemCount()
 T vgui::ComboBox::GetItemUserData(int)
 T vgui::ComboBox::GetKBMap()
 T vgui::ComboBox::GetMenu()
 T vgui::ComboBox::GetMessageMap()
 T vgui::ComboBox::GetPanelClassName()
 T vgui::ComboBox::HideMenu()
 T vgui::ComboBox::IsDropdownVisible()
 T vgui::ComboBox::IsItemIDValid(int)
 T vgui::ComboBox::OnCommand(char const*)
 T vgui::ComboBox::OnCursorEntered()
 T vgui::ComboBox::OnCursorExited()
 T vgui::ComboBox::OnHideMenu(vgui::Menu*)
 T vgui::ComboBox::OnKeyCodeTyped(ButtonCode_t)
 T vgui::ComboBox::OnKeyTyped(wchar_t)
 T vgui::ComboBox::OnKillFocus()
 T vgui::ComboBox::OnMenuClose()
 T vgui::ComboBox::OnMenuItemSelected()
 T vgui::ComboBox::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ComboBox::OnMousePressed(ButtonCode_t)
 T vgui::ComboBox::OnSetFocus()
 T vgui::ComboBox::OnSetText(wchar_t const*)
 T vgui::ComboBox::OnShowMenu(vgui::Menu*)
 T vgui::ComboBox::OnSizeChanged(int, int)
 T vgui::ComboBox::PerformLayout()
 T vgui::ComboBox::RemoveAll()
 T vgui::ComboBox::SetDropdownButtonVisible(bool)
 T vgui::ComboBox::SetFont(unsigned long)
 T vgui::ComboBox::SetItemEnabled(char const*, bool)
 T vgui::ComboBox::SetItemEnabled(int, bool)
 T vgui::ComboBox::SetMenu(vgui::Menu*)
 T vgui::ComboBox::SetNumberOfEditLines(int)
 T vgui::ComboBox::SetOpenDirection(vgui::Menu::MenuDirection_e)
 T vgui::ComboBox::SetUseFallbackFont(bool, unsigned long)
 T vgui::ComboBox::ShowMenu()
 T vgui::ComboBox::SilentActivateItemByRow(int)
 T vgui::ComboBox::SortItems()
 T vgui::ComboBox::UpdateItem(int, char const*, KeyValues const*)
 T vgui::ComboBox::UpdateItem(int, wchar_t const*, KeyValues const*)
 T vgui::ComboBox::~ComboBox()
 T vgui::ComboBoxButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ComboBoxButton::GetBorder(bool, bool, bool, bool)
 T vgui::ComboBoxButton::GetButtonBgColor()
 T vgui::ComboBoxButton::OnCursorExited()
 T vgui::ComboBoxButton::~ComboBoxButton()
 T vgui::ContinuousProgressBar::ContinuousProgressBar(vgui::Panel*, char const*)
 T vgui::ContinuousProgressBar::GetAnimMap()
 T vgui::ContinuousProgressBar::GetKBMap()
 T vgui::ContinuousProgressBar::GetMessageMap()
 T vgui::ContinuousProgressBar::GetPanelClassName()
 T vgui::ContinuousProgressBar::Paint()
 T vgui::ContinuousProgressBar::~ContinuousProgressBar()
 T vgui::CvarToggleCheckButton<ConVarRef>::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::CvarToggleCheckButton<ConVarRef>::ApplySettings(KeyValues*)
 T vgui::CvarToggleCheckButton<ConVarRef>::CvarToggleCheckButton(vgui::Panel*, char const*, char const*, char const*, bool)
 T vgui::CvarToggleCheckButton<ConVarRef>::GetAnimMap()
 T vgui::CvarToggleCheckButton<ConVarRef>::GetKBMap()
 T vgui::CvarToggleCheckButton<ConVarRef>::GetMessageMap()
 T vgui::CvarToggleCheckButton<ConVarRef>::GetPanelClassName()
 T vgui::CvarToggleCheckButton<ConVarRef>::OnApplyChanges()
 T vgui::CvarToggleCheckButton<ConVarRef>::OnButtonChecked()
 T vgui::CvarToggleCheckButton<ConVarRef>::Paint()
 T vgui::CvarToggleCheckButton<ConVarRef>::SetSelected(bool)
 T vgui::CvarToggleCheckButton<ConVarRef>::~CvarToggleCheckButton()
 T vgui::Divider::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Divider::Divider(vgui::Panel*, char const*)
 T vgui::Divider::GetAnimMap()
 T vgui::Divider::GetKBMap()
 T vgui::Divider::GetMessageMap()
 T vgui::Divider::GetPanelClassName()
 T vgui::Divider::~Divider()
 T vgui::EditablePanel::ActivateBuildMode()
 T vgui::EditablePanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::EditablePanel::ApplySettings(KeyValues*)
 T vgui::EditablePanel::ApplyUserConfigSettings(KeyValues*)
 T vgui::EditablePanel::CreateControlByName(char const*)
 T vgui::EditablePanel::EditablePanel(vgui::Panel*, char const*)
 T vgui::EditablePanel::EditablePanel(vgui::Panel*, char const*, unsigned long)
 T vgui::EditablePanel::ForceSubPanelsToUpdateWithNewDialogVariables()
 T vgui::EditablePanel::GetAnimMap()
 T vgui::EditablePanel::GetBuildGroup()
 T vgui::EditablePanel::GetControlInt(char const*, int)
 T vgui::EditablePanel::GetControlString(char const*, char const*)
 T vgui::EditablePanel::GetControlString(char const*, char*, int, char const*)
 T vgui::EditablePanel::GetCurrentKeyFocus()
 T vgui::EditablePanel::GetDialogVariables()
 T vgui::EditablePanel::GetFocusNavGroup()
 T vgui::EditablePanel::GetKBMap()
 T vgui::EditablePanel::GetMessageMap()
 T vgui::EditablePanel::GetPanelClassName()
 T vgui::EditablePanel::GetUserConfigSettings(KeyValues*)
 T vgui::EditablePanel::HasHotkey(wchar_t)
 T vgui::EditablePanel::LoadControlSettings(char const*, char const*, KeyValues*, KeyValues*)
 T vgui::EditablePanel::LoadControlSettingsAndUserConfig(char const*, int)
 T vgui::EditablePanel::LoadUserConfig(char const*, int)
 T vgui::EditablePanel::OnChildAdded(unsigned int)
 T vgui::EditablePanel::OnClose()
 T vgui::EditablePanel::OnCurrentDefaultButtonSet(unsigned int)
 T vgui::EditablePanel::OnDefaultButtonSet(unsigned int)
 T vgui::EditablePanel::OnFindDefaultButton()
 T vgui::EditablePanel::OnKeyCodePressed(ButtonCode_t)
 T vgui::EditablePanel::OnRequestFocus(unsigned int, unsigned int)
 T vgui::EditablePanel::OnSetFocus()
 T vgui::EditablePanel::OnSizeChanged(int, int)
 T vgui::EditablePanel::PaintBackground()
 T vgui::EditablePanel::RegisterControlSettingsFile(char const*, char const*)
 T vgui::EditablePanel::RequestFocus(int)
 T vgui::EditablePanel::RequestFocusNext(unsigned int)
 T vgui::EditablePanel::RequestFocusPrev(unsigned int)
 T vgui::EditablePanel::RequestInfo(KeyValues*)
 T vgui::EditablePanel::SaveUserConfig()
 T vgui::EditablePanel::SetControlEnabled(char const*, bool)
 T vgui::EditablePanel::SetControlInt(char const*, int)
 T vgui::EditablePanel::SetControlString(char const*, char const*)
 T vgui::EditablePanel::SetControlString(char const*, wchar_t const*)
 T vgui::EditablePanel::SetControlVisible(char const*, bool)
 T vgui::EditablePanel::SetDialogVariable(char const*, char const*)
 T vgui::EditablePanel::SetDialogVariable(char const*, float)
 T vgui::EditablePanel::SetDialogVariable(char const*, int)
 T vgui::EditablePanel::SetDialogVariable(char const*, wchar_t const*)
 T vgui::EditablePanel::~EditablePanel()
 T vgui::ExpandButton::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ExpandButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ExpandButton::ExpandButton(vgui::Panel*, char const*)
 T vgui::ExpandButton::GetAnimMap()
 T vgui::ExpandButton::GetBorder(bool, bool, bool, bool)
 T vgui::ExpandButton::GetKBMap()
 T vgui::ExpandButton::GetMessageMap()
 T vgui::ExpandButton::GetPanelClassName()
 T vgui::ExpandButton::OnExpanded(vgui::Panel*)
 T vgui::ExpandButton::Paint()
 T vgui::ExpandButton::SetSelected(bool)
 T vgui::ExpandButton::~ExpandButton()
 T vgui::FindOrAddPanelKeyBindingMap(char const*)
 T vgui::FindOrAddPanelMessageMap(char const*)
 T vgui::FocusNavGroup::CanButtonBeDefault(unsigned int)
 T vgui::FocusNavGroup::FindPanelByHotkey(wchar_t)
 T vgui::FocusNavGroup::FocusNavGroup(vgui::Panel*)
 T vgui::FocusNavGroup::GetCurrentDefaultButton()
 T vgui::FocusNavGroup::GetCurrentFocus()
 T vgui::FocusNavGroup::GetDefaultButton()
 T vgui::FocusNavGroup::GetDefaultPanel()
 T vgui::FocusNavGroup::RequestFocusNext(unsigned int)
 T vgui::FocusNavGroup::RequestFocusPrev(unsigned int)
 T vgui::FocusNavGroup::SetCurrentDefaultButton(unsigned int, bool)
 T vgui::FocusNavGroup::SetCurrentFocus(unsigned int, unsigned int)
 T vgui::FocusNavGroup::SetDefaultButton(vgui::Panel*)
 T vgui::FocusNavGroup::SetFocusTopLevel(bool)
 T vgui::FocusNavGroup::~FocusNavGroup()
 T vgui::Frame::Activate()
 T vgui::Frame::ActivateMinimized()
 T vgui::Frame::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T vgui::Frame::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Frame::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Frame::ApplySettings(KeyValues*)
 T vgui::Frame::ApplyUserConfigSettings(KeyValues*)
 T vgui::Frame::Close()
 T vgui::Frame::CloseModal()
 T vgui::Frame::DoModal()
 T vgui::Frame::FlashWindow()
 T vgui::Frame::FlashWindowStop()
 T vgui::Frame::Frame(vgui::Panel*, char const*, bool, bool)
 T vgui::Frame::GetAnimMap()
 T vgui::Frame::GetBottomRightSize()
 T vgui::Frame::GetCaptionHeight()
 T vgui::Frame::GetClientArea(int&, int&, int&, int&)
 T vgui::Frame::GetClipToParent() const
 T vgui::Frame::GetCornerSize()
 T vgui::Frame::GetDefaultScreenPosition(int&, int&, int&, int&)
 T vgui::Frame::GetDescription()
 T vgui::Frame::GetDraggerSize()
 T vgui::Frame::GetKBMap()
 T vgui::Frame::GetMessageMap()
 T vgui::Frame::GetPanelClassName()
 T vgui::Frame::GetSettings(KeyValues*)
 T vgui::Frame::GetSysMenu()
 T vgui::Frame::GetUserConfigSettings(KeyValues*)
 T vgui::Frame::GetVar_m_iTitleTextInsetXOverride(vgui::Panel*)
 T vgui::Frame::GetVar_m_iTitleTextInsetYOverride(vgui::Panel*)
 T vgui::Frame::HasUserConfigSettings()
 T vgui::Frame::InternalFlashWindow()
 T vgui::Frame::InternalSetTitle(char const*)
 T vgui::Frame::IsMinimized()
 T vgui::Frame::IsMoveable()
 T vgui::Frame::IsSizeable()
 T vgui::Frame::IsSmallCaption() const
 T vgui::Frame::LayoutProportional(vgui::FrameButton*)
 T vgui::Frame::LoadControlSettings(char const*, char const*, KeyValues*, KeyValues*)
 T vgui::Frame::MoveToCenterOfScreen()
 T vgui::Frame::OnChildAdded(unsigned int)
 T vgui::Frame::OnClose()
 T vgui::Frame::OnCloseFrameButtonPressed()
 T vgui::Frame::OnCommand(char const*)
 T vgui::Frame::OnDialogVariablesChanged(KeyValues*)
 T vgui::Frame::OnFinishedClose()
 T vgui::Frame::OnFrameFocusChanged(bool)
 T vgui::Frame::OnKeyCodePressed(ButtonCode_t)
 T vgui::Frame::OnKeyCodeReleased(ButtonCode_t)
 T vgui::Frame::OnKeyCodeTyped(ButtonCode_t)
 T vgui::Frame::OnKeyFocusTicked()
 T vgui::Frame::OnKeyTyped(wchar_t)
 T vgui::Frame::OnMinimize()
 T vgui::Frame::OnMinimizeToSysTray()
 T vgui::Frame::OnMousePressed(ButtonCode_t)
 T vgui::Frame::OnScreenSizeChanged(int, int)
 T vgui::Frame::OnThink()
 T vgui::Frame::PaintBackground()
 T vgui::Frame::PerformLayout()
 T vgui::Frame::PlaceUnderCursor()
 T vgui::Frame::SetClipToParent(bool)
 T vgui::Frame::SetCloseButtonVisible(bool)
 T vgui::Frame::SetDeleteSelfOnClose(bool)
 T vgui::Frame::SetMaximizeButtonVisible(bool)
 T vgui::Frame::SetMenuButtonResponsive(bool)
 T vgui::Frame::SetMenuButtonVisible(bool)
 T vgui::Frame::SetMinimizeButtonVisible(bool)
 T vgui::Frame::SetMinimizeToSysTrayButtonVisible(bool)
 T vgui::Frame::SetMoveable(bool)
 T vgui::Frame::SetSizeable(bool)
 T vgui::Frame::SetSmallCaption(bool)
 T vgui::Frame::SetSysMenu(vgui::Menu*)
 T vgui::Frame::SetTitle(char const*, bool)
 T vgui::Frame::SetTitle(wchar_t const*, bool)
 T vgui::Frame::SetTitleBarVisible(bool)
 T vgui::Frame::SetupResizeCursors()
 T vgui::Frame::~Frame()
 T vgui::FrameButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::FrameButton::FrameButton(vgui::Panel*, char const*, char const*)
 T vgui::FrameButton::GetBorder(bool, bool, bool, bool)
 T vgui::FrameButton::OnMousePressed(ButtonCode_t)
 T vgui::FrameButton::PerformLayout()
 T vgui::FrameButton::SetDisabledLook(bool)
 T vgui::FrameButton::~FrameButton()
 T vgui::FrameSystemButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::FrameSystemButton::FrameSystemButton(vgui::Panel*, char const*)
 T vgui::FrameSystemButton::GetAnimMap()
 T vgui::FrameSystemButton::GetBorder(bool, bool, bool, bool)
 T vgui::FrameSystemButton::GetKBMap()
 T vgui::FrameSystemButton::GetMessageMap()
 T vgui::FrameSystemButton::GetPanelClassName()
 T vgui::FrameSystemButton::OnMouseDoublePressed(ButtonCode_t)
 T vgui::FrameSystemButton::OnMousePressed(ButtonCode_t)
 T vgui::FrameSystemButton::SetEnabled(bool)
 T vgui::FrameSystemButton::~FrameSystemButton()
 T vgui::GetAnimationController()
 T vgui::GetControlsModuleName()
 T vgui::GraphPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::GraphPanel::GetAnimMap()
 T vgui::GraphPanel::GetKBMap()
 T vgui::GraphPanel::GetMessageMap()
 T vgui::GraphPanel::GetPanelClassName()
 T vgui::GraphPanel::GraphPanel(vgui::Panel*, char const*)
 T vgui::GraphPanel::Paint()
 T vgui::GraphPanel::PerformLayout()
 T vgui::GraphPanel::~GraphPanel()
 T vgui::Image::DrawFilledRect(int, int, int, int)
 T vgui::Image::DrawLine(int, int, int, int)
 T vgui::Image::DrawOutlinedRect(int, int, int, int)
 T vgui::Image::DrawPolyLine(int*, int*, int)
 T vgui::Image::DrawPrintChar(int, int, wchar_t)
 T vgui::Image::DrawPrintChar(wchar_t)
 T vgui::Image::DrawPrintText(int, int, wchar_t const*, int)
 T vgui::Image::DrawPrintText(wchar_t const*, int)
 T vgui::Image::DrawSetColor(Color)
 T vgui::Image::DrawSetColor(int, int, int, int)
 T vgui::Image::DrawSetTextColor(Color)
 T vgui::Image::DrawSetTextColor(int, int, int, int)
 T vgui::Image::DrawSetTextFont(unsigned long)
 T vgui::Image::DrawSetTextPos(int, int)
 T vgui::Image::DrawSetTexture(int)
 T vgui::Image::DrawTexturedRect(int, int, int, int)
 T vgui::Image::Evict()
 T vgui::Image::GetColor()
 T vgui::Image::GetContentSize(int&, int&)
 T vgui::Image::GetID()
 T vgui::Image::GetNumFrames()
 T vgui::Image::GetPos(int&, int&)
 T vgui::Image::GetSize(int&, int&)
 T vgui::Image::Image()
 T vgui::Image::SetBkColor(Color)
 T vgui::Image::SetColor(Color)
 T vgui::Image::SetFrame(int)
 T vgui::Image::SetPos(int, int)
 T vgui::Image::SetRotation(int)
 T vgui::Image::SetSize(int, int)
 T vgui::Image::~Image()
 T vgui::ImageList::AddImage(vgui::IImage*)
 T vgui::ImageList::GetImage(int)
 T vgui::ImageList::GetImageCount()
 T vgui::ImageList::ImageList(bool)
 T vgui::ImageList::IsValidIndex(int)
 T vgui::ImageList::~ImageList()
 T vgui::ImagePanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ImagePanel::ApplySettings(KeyValues*)
 T vgui::ImagePanel::GetAnimMap()
 T vgui::ImagePanel::GetDescription()
 T vgui::ImagePanel::GetDrawColor()
 T vgui::ImagePanel::GetImage()
 T vgui::ImagePanel::GetKBMap()
 T vgui::ImagePanel::GetMessageMap()
 T vgui::ImagePanel::GetPanelClassName()
 T vgui::ImagePanel::GetSettings(KeyValues*)
 T vgui::ImagePanel::ImagePanel(vgui::Panel*, char const*)
 T vgui::ImagePanel::OnSizeChanged(int, int)
 T vgui::ImagePanel::PaintBackground()
 T vgui::ImagePanel::SetDrawColor(Color)
 T vgui::ImagePanel::SetImage(char const*)
 T vgui::ImagePanel::SetImage(vgui::IImage*)
 T vgui::ImagePanel::SetShouldScaleImage(bool)
 T vgui::ImagePanel::~ImagePanel()
 T vgui::Label::AddImage(vgui::IImage*, int)
 T vgui::Label::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Label::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Label::ApplySettings(KeyValues*)
 T vgui::Label::CalculateHotkey(char const*)
 T vgui::Label::CalculateHotkey(wchar_t const*)
 T vgui::Label::ClearImages()
 T vgui::Label::ComputeAlignment(int&, int&, int&, int&)
 T vgui::Label::DrawDashedLine(int, int, int, int, int, int)
 T vgui::Label::EnsureImageCapacity(int)
 T vgui::Label::GetAnimMap()
 T vgui::Label::GetContentSize(int&, int&)
 T vgui::Label::GetDescription()
 T vgui::Label::GetDisabledFgColor1()
 T vgui::Label::GetDisabledFgColor2()
 T vgui::Label::GetFgColor()
 T vgui::Label::GetFont()
 T vgui::Label::GetHotKey()
 T vgui::Label::GetImageAtIndex(int)
 T vgui::Label::GetImageCount()
 T vgui::Label::GetKBMap()
 T vgui::Label::GetMessageMap()
 T vgui::Label::GetPanelClassName()
 T vgui::Label::GetSettings(KeyValues*)
 T vgui::Label::GetText(char*, int)
 T vgui::Label::GetText(wchar_t*, int)
 T vgui::Label::GetTextImage()
 T vgui::Label::GetTextInset(int*, int*)
 T vgui::Label::HasHotkey(wchar_t)
 T vgui::Label::Label(vgui::Panel*, char const*, char const*)
 T vgui::Label::Label(vgui::Panel*, char const*, wchar_t const*)
 T vgui::Label::OnDialogVariablesChanged(KeyValues*)
 T vgui::Label::OnHotkeyPressed()
 T vgui::Label::OnMousePressed(ButtonCode_t)
 T vgui::Label::OnRequestFocus(unsigned int, unsigned int)
 T vgui::Label::OnSetText(KeyValues*)
 T vgui::Label::OnSizeChanged(int, int)
 T vgui::Label::Paint()
 T vgui::Label::PerformLayout()
 T vgui::Label::RequestInfo(KeyValues*)
 T vgui::Label::ResetToSimpleTextImage()
 T vgui::Label::SetAssociatedControl(vgui::Panel*)
 T vgui::Label::SetContentAlignment(vgui::Label::Alignment)
 T vgui::Label::SetDisabledFgColor1(Color)
 T vgui::Label::SetDisabledFgColor2(Color)
 T vgui::Label::SetEnabled(bool)
 T vgui::Label::SetFgColor(Color)
 T vgui::Label::SetFont(unsigned long)
 T vgui::Label::SetHotkey(wchar_t)
 T vgui::Label::SetImageAtIndex(int, vgui::IImage*, int)
 T vgui::Label::SetImageBounds(int, int, int)
 T vgui::Label::SetImagePreOffset(int, int)
 T vgui::Label::SetText(char const*)
 T vgui::Label::SetText(wchar_t const*, bool)
 T vgui::Label::SetTextColorState(vgui::Label::EColorState)
 T vgui::Label::SetTextImageIndex(int)
 T vgui::Label::SetTextInset(int, int)
 T vgui::Label::SizeToContents()
 T vgui::Label::~Label()
 T vgui::ListPanel::AddColumnHeader(int, char const*, char const*, int, int)
 T vgui::ListPanel::AddColumnHeader(int, char const*, char const*, int, int, int, int)
 T vgui::ListPanel::AddItem(KeyValues const*, unsigned int, bool, bool)
 T vgui::ListPanel::AddSelectedItem(int)
 T vgui::ListPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ListPanel::ApplyItemChanges(int)
 T vgui::ListPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ListPanel::ApplyUserConfigSettings(KeyValues*)
 T vgui::ListPanel::ClearSelectedItems()
 T vgui::ListPanel::DeleteAllItems()
 T vgui::ListPanel::EnterEditMode(int, int, vgui::Panel*)
 T vgui::ListPanel::FindColumn(char const*)
 T vgui::ListPanel::FirstItem() const
 T vgui::ListPanel::GetAnimMap()
 T vgui::ListPanel::GetCellAtPos(int, int, int&, int&)
 T vgui::ListPanel::GetCellBounds(int, int, int&, int&, int&, int&)
 T vgui::ListPanel::GetCellImage(int, int)
 T vgui::ListPanel::GetCellRenderer(int, int)
 T vgui::ListPanel::GetCellText(int, int, wchar_t*, int)
 T vgui::ListPanel::GetColumnHeaderText(int, char*, int)
 T vgui::ListPanel::GetItem(char const*)
 T vgui::ListPanel::GetItem(int)
 T vgui::ListPanel::GetItemCount()
 T vgui::ListPanel::GetItemCurrentRow(int)
 T vgui::ListPanel::GetItemData(int)
 T vgui::ListPanel::GetItemIDFromRow(int)
 T vgui::ListPanel::GetItemIDFromUserData(unsigned int)
 T vgui::ListPanel::GetItemUserData(int)
 T vgui::ListPanel::GetKBMap()
 T vgui::ListPanel::GetMessageMap()
 T vgui::ListPanel::GetNumColumnHeaders() const
 T vgui::ListPanel::GetPanelClassName()
 T vgui::ListPanel::GetRowsPerPage()
 T vgui::ListPanel::GetSelectedColumn()
 T vgui::ListPanel::GetSelectedItem(int)
 T vgui::ListPanel::GetSelectedItemsCount()
 T vgui::ListPanel::GetStartItem()
 T vgui::ListPanel::GetUserConfigSettings(KeyValues*)
 T vgui::ListPanel::HandleAddSelection(int, int, int)
 T vgui::ListPanel::HandleMultiSelection(int, int, int)
 T vgui::ListPanel::HasUserConfigSettings()
 T vgui::ListPanel::IndexItem(int)
 T vgui::ListPanel::InvalidItemID() const
 T vgui::ListPanel::IsInEditMode()
 T vgui::ListPanel::IsItemSelected(int)
 T vgui::ListPanel::IsValidItemID(int)
 T vgui::ListPanel::LeaveEditMode()
 T vgui::ListPanel::ListPanel(vgui::Panel*, char const*)
 T vgui::ListPanel::NextItem(int) const
 T vgui::ListPanel::OnColumnResized(int, int)
 T vgui::ListPanel::OnCreateDragData(KeyValues*)
 T vgui::ListPanel::OnKeyCodePressed(ButtonCode_t)
 T vgui::ListPanel::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ListPanel::OnMousePressed(ButtonCode_t)
 T vgui::ListPanel::OnMouseWheeled(int)
 T vgui::ListPanel::OnSetSortColumn(int)
 T vgui::ListPanel::OnSizeChanged(int, int)
 T vgui::ListPanel::OnSliderMoved()
 T vgui::ListPanel::OnToggleColumnVisible(int)
 T vgui::ListPanel::OpenColumnChoiceMenu()
 T vgui::ListPanel::Paint()
 T vgui::ListPanel::PaintBackground()
 T vgui::ListPanel::PerformLayout()
 T vgui::ListPanel::RBTreeLessFunc(vgui::ListPanel::IndexItem_t&, vgui::ListPanel::IndexItem_t&)
 T vgui::ListPanel::RemoveAll()
 T vgui::ListPanel::RemoveColumn(int)
 T vgui::ListPanel::RemoveItem(int)
 T vgui::ListPanel::RereadAllItems()
 T vgui::ListPanel::ResizeColumnToContents(int)
 T vgui::ListPanel::ResortColumnRBTree(int)
 T vgui::ListPanel::SetAllowUserModificationOfColumns(bool)
 T vgui::ListPanel::SetColumnHeaderHeight(int)
 T vgui::ListPanel::SetColumnHeaderImage(int, int)
 T vgui::ListPanel::SetColumnHeaderText(int, char const*)
 T vgui::ListPanel::SetColumnHeaderText(int, wchar_t*)
 T vgui::ListPanel::SetColumnHeaderTooltip(int, char const*)
 T vgui::ListPanel::SetColumnSortable(int, bool)
 T vgui::ListPanel::SetColumnTextAlignment(int, int)
 T vgui::ListPanel::SetColumnVisible(int, bool)
 T vgui::ListPanel::SetEmptyListText(char const*)
 T vgui::ListPanel::SetEmptyListText(wchar_t const*)
 T vgui::ListPanel::SetFont(unsigned long)
 T vgui::ListPanel::SetImageList(vgui::ImageList*, bool)
 T vgui::ListPanel::SetItemDisabled(int, bool)
 T vgui::ListPanel::SetItemVisible(int, bool)
 T vgui::ListPanel::SetSelectIndividualCells(bool)
 T vgui::ListPanel::SetSelectedCell(int, int)
 T vgui::ListPanel::SetSingleSelectedItem(int)
 T vgui::ListPanel::SetSortColumn(int)
 T vgui::ListPanel::SetSortColumnEx(int, int, bool)
 T vgui::ListPanel::SetSortFunc(int, int (*)(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&))
 T vgui::ListPanel::SetUserData(int, unsigned int)
 T vgui::ListPanel::SortList()
 T vgui::ListPanel::UpdateSelection(ButtonCode_t, int, int, int, int)
 T vgui::ListPanel::~ListPanel()
 T vgui::ListViewItem::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ListViewItem::GetAnimMap()
 T vgui::ListViewItem::GetKBMap()
 T vgui::ListViewItem::GetMessageMap()
 T vgui::ListViewItem::GetPanelClassName()
 T vgui::ListViewItem::ListViewItem(vgui::Panel*)
 T vgui::ListViewItem::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ListViewItem::OnMousePressed(ButtonCode_t)
 T vgui::ListViewItem::PaintBackground()
 T vgui::ListViewItem::PerformLayout()
 T vgui::ListViewItem::UpdateImage()
 T vgui::ListViewItem::~ListViewItem()
 T vgui::ListViewPanel::AddItem(KeyValues const*, bool, bool)
 T vgui::ListViewPanel::AddSelectedItem(int)
 T vgui::ListViewPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ListViewPanel::ApplyItemChanges(int)
 T vgui::ListViewPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ListViewPanel::ClearSelectedItems()
 T vgui::ListViewPanel::DeleteAllItems()
 T vgui::ListViewPanel::FinishKeyPress(int)
 T vgui::ListViewPanel::GetAnimMap()
 T vgui::ListViewPanel::GetItem(int)
 T vgui::ListViewPanel::GetItemCount()
 T vgui::ListViewPanel::GetItemIDFromPos(int)
 T vgui::ListViewPanel::GetItemsPerColumn()
 T vgui::ListViewPanel::GetKBMap()
 T vgui::ListViewPanel::GetMessageMap()
 T vgui::ListViewPanel::GetPanelClassName()
 T vgui::ListViewPanel::GetSelectedItem(int)
 T vgui::ListViewPanel::GetSelectedItemsCount()
 T vgui::ListViewPanel::InvalidItemID()
 T vgui::ListViewPanel::IsValidItemID(int)
 T vgui::ListViewPanel::ListViewPanel(vgui::Panel*, char const*)
 T vgui::ListViewPanel::OnItemMousePressed(vgui::ListViewItem*, ButtonCode_t)
 T vgui::ListViewPanel::OnKeyCodeTyped(ButtonCode_t)
 T vgui::ListViewPanel::OnKeyTyped(wchar_t)
 T vgui::ListViewPanel::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ListViewPanel::OnMousePressed(ButtonCode_t)
 T vgui::ListViewPanel::OnMouseWheeled(int)
 T vgui::ListViewPanel::OnShiftSelect(int)
 T vgui::ListViewPanel::OnSizeChanged(int, int)
 T vgui::ListViewPanel::OnSliderMoved()
 T vgui::ListViewPanel::Paint()
 T vgui::ListViewPanel::PerformLayout()
 T vgui::ListViewPanel::RemoveItem(int)
 T vgui::ListViewPanel::ScrollToItem(int)
 T vgui::ListViewPanel::SetFont(unsigned long)
 T vgui::ListViewPanel::SetImageList(vgui::ImageList*, bool)
 T vgui::ListViewPanel::SetSingleSelectedItem(int)
 T vgui::ListViewPanel::SetSortFunc(bool (*)(KeyValues*, KeyValues*))
 T vgui::ListViewPanel::SortList()
 T vgui::ListViewPanel::~ListViewPanel()
 T vgui::MDLCache()
 T vgui::MatSystemSurface()
 T vgui::MaterialSystem()
 T vgui::MaterialSystemHardwareConfig()
 T vgui::Menu::ActivateItem(int)
 T vgui::Menu::ActivateItemByRow(int)
 T vgui::Menu::AddCascadingMenuItem(char const*, KeyValues*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, char const*, KeyValues*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, char const*, char const*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, char const*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, wchar_t const*, KeyValues*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCascadingMenuItem(char const*, wchar_t const*, char const*, vgui::Panel*, vgui::Menu*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, char const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, char const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, wchar_t const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddCheckableMenuItem(char const*, wchar_t const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, char const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, char const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, wchar_t const*, KeyValues*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(char const*, wchar_t const*, char const*, vgui::Panel*, KeyValues const*)
 T vgui::Menu::AddMenuItem(vgui::MenuItem*)
 T vgui::Menu::AddScrollBar()
 T vgui::Menu::AddSeparator()
 T vgui::Menu::AddSeparatorAfterItem(int)
 T vgui::Menu::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Menu::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Menu::ClearCurrentlyHighlightedItem()
 T vgui::Menu::CloseOtherMenus(vgui::MenuItem*)
 T vgui::Menu::ComputeFullMenuHeightWithInsets()
 T vgui::Menu::DeleteAllItems()
 T vgui::Menu::ForceCalculateWidth()
 T vgui::Menu::GetActiveItem()
 T vgui::Menu::GetAnimMap()
 T vgui::Menu::GetCurrentlyHighlightedItem()
 T vgui::Menu::GetInvalidMenuID()
 T vgui::Menu::GetItemCount()
 T vgui::Menu::GetItemText(int, wchar_t*, int)
 T vgui::Menu::GetItemUserData(int)
 T vgui::Menu::GetKBMap()
 T vgui::Menu::GetMenuID(int)
 T vgui::Menu::GetMenuItem(int)
 T vgui::Menu::GetMenuItemHeight() const
 T vgui::Menu::GetMenuMode()
 T vgui::Menu::GetMessageMap()
 T vgui::Menu::GetPanelClassName()
 T vgui::Menu::GetTypeAheadMode()
 T vgui::Menu::IsValidMenuID(int)
 T vgui::Menu::LayoutMenuBorder()
 T vgui::Menu::LayoutScrollBar()
 T vgui::Menu::MakeItemsVisibleInScrollRange(int, int)
 T vgui::Menu::Menu(vgui::Panel*, char const*)
 T vgui::Menu::MoveAlongMenuItemList(int, int)
 T vgui::Menu::MoveMenuItem(int, int)
 T vgui::Menu::OnCommand(char const*)
 T vgui::Menu::OnCursorEnteredMenuItem(int)
 T vgui::Menu::OnCursorExitedMenuItem(int)
 T vgui::Menu::OnCursorMoved(int, int)
 T vgui::Menu::OnHotKey(wchar_t)
 T vgui::Menu::OnInternalMousePressed(vgui::Panel*, ButtonCode_t)
 T vgui::Menu::OnKeyCodePressed(ButtonCode_t)
 T vgui::Menu::OnKeyCodeTyped(ButtonCode_t)
 T vgui::Menu::OnKeyModeSet()
 T vgui::Menu::OnKeyTyped(wchar_t)
 T vgui::Menu::OnKillFocus()
 T vgui::Menu::OnMenuItemSelected(vgui::Panel*)
 T vgui::Menu::OnMouseWheeled(int)
 T vgui::Menu::OnSliderMoved()
 T vgui::Menu::OnTypeAhead(wchar_t)
 T vgui::Menu::Paint()
 T vgui::Menu::PerformLayout()
 T vgui::Menu::PlaceContextMenu(vgui::Panel*, vgui::Menu*)
 T vgui::Menu::PositionCascadingMenu()
 T vgui::Menu::PositionRelativeToPanel(vgui::Panel*, vgui::Menu::MenuDirection_e, int, bool)
 T vgui::Menu::RemoveScrollBar()
 T vgui::Menu::SetBgColor(Color)
 T vgui::Menu::SetBorder(vgui::IBorder*)
 T vgui::Menu::SetCurrentlyHighlightedItem(int)
 T vgui::Menu::SetCurrentlySelectedItem(int)
 T vgui::Menu::SetFgColor(Color)
 T vgui::Menu::SetFixedWidth(int)
 T vgui::Menu::SetFont(unsigned long)
 T vgui::Menu::SetItemEnabled(char const*, bool)
 T vgui::Menu::SetItemEnabled(int, bool)
 T vgui::Menu::SetItemVisible(char const*, bool)
 T vgui::Menu::SetItemVisible(int, bool)
 T vgui::Menu::SetMenuItemChecked(int, bool)
 T vgui::Menu::SetMenuItemHeight(int)
 T vgui::Menu::SetNumberOfVisibleItems(int)
 T vgui::Menu::SetTypeAheadMode(vgui::Menu::MenuTypeAheadMode)
 T vgui::Menu::SetUseFallbackFont(bool, unsigned long)
 T vgui::Menu::SetVisible(bool)
 T vgui::Menu::SilentActivateItem(int)
 T vgui::Menu::UpdateMenuItem(int, char const*, KeyValues*, KeyValues const*)
 T vgui::Menu::UpdateMenuItem(int, wchar_t const*, KeyValues*, KeyValues const*)
 T vgui::Menu::~Menu()
 T vgui::MenuBar::AddButton(vgui::MenuButton*)
 T vgui::MenuBar::AddMenu(char const*, vgui::Menu*)
 T vgui::MenuBar::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::MenuBar::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MenuBar::GetAnimMap()
 T vgui::MenuBar::GetContentSize(int&, int&)
 T vgui::MenuBar::GetKBMap()
 T vgui::MenuBar::GetMessageMap()
 T vgui::MenuBar::GetPanelClassName()
 T vgui::MenuBar::MenuBar(vgui::Panel*, char const*)
 T vgui::MenuBar::OnCursorEnteredMenuButton(int)
 T vgui::MenuBar::OnKeyCodeTyped(ButtonCode_t)
 T vgui::MenuBar::OnKeyTyped(wchar_t)
 T vgui::MenuBar::OnMenuClose()
 T vgui::MenuBar::Paint()
 T vgui::MenuBar::PerformLayout()
 T vgui::MenuBar::~MenuBar()
 T vgui::MenuButton::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::MenuButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MenuButton::CanBeDefaultButton()
 T vgui::MenuButton::DoClick()
 T vgui::MenuButton::DrawFocusBorder(int, int, int, int)
 T vgui::MenuButton::GetAnimMap()
 T vgui::MenuButton::GetKBMap()
 T vgui::MenuButton::GetMenu()
 T vgui::MenuButton::GetMessageMap()
 T vgui::MenuButton::GetPanelClassName()
 T vgui::MenuButton::HideMenu()
 T vgui::MenuButton::MenuButton(vgui::Panel*, char const*, char const*)
 T vgui::MenuButton::OnCheckMenuItemCount()
 T vgui::MenuButton::OnCursorEntered()
 T vgui::MenuButton::OnCursorMoved(int, int)
 T vgui::MenuButton::OnHideMenu(vgui::Menu*)
 T vgui::MenuButton::OnKeyCodeTyped(ButtonCode_t)
 T vgui::MenuButton::OnKillFocus(KeyValues*)
 T vgui::MenuButton::OnMenuClose()
 T vgui::MenuButton::OnShowMenu(vgui::Menu*)
 T vgui::MenuButton::Paint()
 T vgui::MenuButton::PerformLayout()
 T vgui::MenuButton::SetMenu(vgui::Menu*)
 T vgui::MenuButton::SetOpenDirection(vgui::Menu::MenuDirection_e)
 T vgui::MenuButton::SetOpenOffsetY(int)
 T vgui::MenuButton::~MenuButton()
 T vgui::MenuItem::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::MenuItem::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MenuItem::ArmItem()
 T vgui::MenuItem::CanBeDefaultButton()
 T vgui::MenuItem::CloseCascadeMenu()
 T vgui::MenuItem::DisarmItem()
 T vgui::MenuItem::FireActionSignal()
 T vgui::MenuItem::GetAnimMap()
 T vgui::MenuItem::GetBorder(bool, bool, bool, bool)
 T vgui::MenuItem::GetCheckImageSize(int&, int&)
 T vgui::MenuItem::GetContentSize(int&, int&)
 T vgui::MenuItem::GetKBMap()
 T vgui::MenuItem::GetMenu()
 T vgui::MenuItem::GetMessageMap()
 T vgui::MenuItem::GetPanelClassName()
 T vgui::MenuItem::GetParentMenu()
 T vgui::MenuItem::GetUserData()
 T vgui::MenuItem::HasMenu()
 T vgui::MenuItem::Init()
 T vgui::MenuItem::IsCheckable()
 T vgui::MenuItem::MenuItem(vgui::Menu*, char const*, char const*, vgui::Menu*, bool)
 T vgui::MenuItem::MenuItem(vgui::Menu*, char const*, wchar_t const*, vgui::Menu*, bool)
 T vgui::MenuItem::OnCursorEntered()
 T vgui::MenuItem::OnCursorExited()
 T vgui::MenuItem::OnCursorMoved(int, int)
 T vgui::MenuItem::OnKeyCodeReleased(ButtonCode_t)
 T vgui::MenuItem::OnKeyModeSet()
 T vgui::MenuItem::OnKillFocus()
 T vgui::MenuItem::OpenCascadeMenu()
 T vgui::MenuItem::Paint()
 T vgui::MenuItem::PerformLayout()
 T vgui::MenuItem::SetChecked(bool)
 T vgui::MenuItem::SetUserData(KeyValues const*)
 T vgui::MenuItem::~MenuItem()
 T vgui::MenuSeparator::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MenuSeparator::GetAnimMap()
 T vgui::MenuSeparator::GetKBMap()
 T vgui::MenuSeparator::GetMessageMap()
 T vgui::MenuSeparator::GetPanelClassName()
 T vgui::MenuSeparator::MenuSeparator(vgui::Panel*, char const*)
 T vgui::MenuSeparator::Paint()
 T vgui::MenuSeparator::~MenuSeparator()
 T vgui::MessageBox::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::MessageBox::ApplySchemeSettings(vgui::IScheme*)
 T vgui::MessageBox::DisableCloseButton(bool)
 T vgui::MessageBox::DoModal(vgui::Frame*)
 T vgui::MessageBox::GetAnimMap()
 T vgui::MessageBox::GetKBMap()
 T vgui::MessageBox::GetMessageMap()
 T vgui::MessageBox::GetPanelClassName()
 T vgui::MessageBox::Init()
 T vgui::MessageBox::MessageBox(char const*, char const*, vgui::Panel*)
 T vgui::MessageBox::OnCommand(char const*)
 T vgui::MessageBox::OnShutdownRequest()
 T vgui::MessageBox::PerformLayout()
 T vgui::MessageBox::SetCommand(KeyValues*)
 T vgui::MessageBox::SetCommand(char const*)
 T vgui::MessageBox::SetOKButtonText(char const*)
 T vgui::MessageBox::SetOKButtonText(wchar_t const*)
 T vgui::MessageBox::SetOKButtonVisible(bool)
 T vgui::MessageBox::ShowWindow(vgui::Frame*)
 T vgui::MessageBox::~MessageBox()
 T vgui::PHandle::Get()
 T vgui::PHandle::Set(vgui::Panel*)
 T vgui::Panel::AddActionSignalTarget(unsigned int)
 T vgui::Panel::AddActionSignalTarget(vgui::Panel*)
 T vgui::Panel::AddKeyBinding(char const*, int, int)
 T vgui::Panel::AddPropertyConverter(char const*, vgui::IPanelAnimationPropertyConverter*)
 T vgui::Panel::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T vgui::Panel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::Panel::ApplyAutoResizeSettings(KeyValues*)
 T vgui::Panel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Panel::ApplySettings(KeyValues*)
 T vgui::Panel::ApplyUserConfigSettings(KeyValues*)
 T vgui::Panel::CallParentFunction(KeyValues*)
 T vgui::Panel::CanStartDragging(int, int, int, int)
 T vgui::Panel::ComputePos(char const*, int&, int const&, int const&, bool const&)
 T vgui::Panel::ComputeTall(KeyValues*, int, int, bool)
 T vgui::Panel::ComputeWide(KeyValues*, int, int, bool)
 T vgui::Panel::CreateDragData()
 T vgui::Panel::DeletePanel()
 T vgui::Panel::DragDropStartDragging()
 T vgui::Panel::DrawBox(int, int, int, int, Color, float, bool)
 T vgui::Panel::DrawBoxFade(int, int, int, int, Color, float, unsigned int, unsigned int, bool, bool)
 T vgui::Panel::DrawHollowBox(int, int, int, int, Color, float)
 T vgui::Panel::DrawHollowBox(int, int, int, int, Color, float, int, int)
 T vgui::Panel::DrawTexturedBox(int, int, int, int, Color, float)
 T vgui::Panel::EditKeyBindings()
 T vgui::Panel::FillRectSkippingPanel(Color const&, int, int, int, int, vgui::Panel*)
 T vgui::Panel::FindChildByName(char const*, bool)
 T vgui::Panel::FindDropTargetPanel()
 T vgui::Panel::FindDropTargetPanel_R(CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >&, int, int, unsigned int)
 T vgui::Panel::FindSiblingByName(char const*)
 T vgui::Panel::GetAlpha()
 T vgui::Panel::GetAnimMap()
 T vgui::Panel::GetAutoResize()
 T vgui::Panel::GetBgColor()
 T vgui::Panel::GetBorder()
 T vgui::Panel::GetBounds(int&, int&, int&, int&)
 T vgui::Panel::GetChild(int)
 T vgui::Panel::GetChildCount()
 T vgui::Panel::GetChildren()
 T vgui::Panel::GetClassName()
 T vgui::Panel::GetClipRect(int&, int&, int&, int&)
 T vgui::Panel::GetCornerTextureSize(int&, int&)
 T vgui::Panel::GetCurrentKeyFocus()
 T vgui::Panel::GetCursor()
 T vgui::Panel::GetDescription()
 T vgui::Panel::GetDragData(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::GetDragDropInfo()
 T vgui::Panel::GetDragPanel()
 T vgui::Panel::GetDragStartTolerance() const
 T vgui::Panel::GetDropContextMenu(vgui::Menu*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::GetDropCursor(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::GetDropTarget(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::GetFgColor()
 T vgui::Panel::GetInset(int&, int&, int&, int&)
 T vgui::Panel::GetKBMap()
 T vgui::Panel::GetKeyBindingsContext() const
 T vgui::Panel::GetKeyBindingsFile() const
 T vgui::Panel::GetKeyBindingsFilePathID() const
 T vgui::Panel::GetMessageMap()
 T vgui::Panel::GetMinimumSize(int&, int&)
 T vgui::Panel::GetModuleName()
 T vgui::Panel::GetName()
 T vgui::Panel::GetNavActivate(vgui::Panel*)
 T vgui::Panel::GetNavBack(vgui::Panel*)
 T vgui::Panel::GetNavDown(vgui::Panel*)
 T vgui::Panel::GetNavLeft(vgui::Panel*)
 T vgui::Panel::GetNavRight(vgui::Panel*)
 T vgui::Panel::GetNavToRelay(vgui::Panel*)
 T vgui::Panel::GetNavUp(vgui::Panel*)
 T vgui::Panel::GetPaintBackgroundType()
 T vgui::Panel::GetPaintSize(int&, int&)
 T vgui::Panel::GetPanel()
 T vgui::Panel::GetPanelClassName()
 T vgui::Panel::GetPanelMap()
 T vgui::Panel::GetParent()
 T vgui::Panel::GetPinCorner()
 T vgui::Panel::GetPinOffset(int&, int&)
 T vgui::Panel::GetPos(int&, int&)
 T vgui::Panel::GetResizeOffset(int&, int&)
 T vgui::Panel::GetScheme()
 T vgui::Panel::GetSchemeColor(char const*, Color, vgui::IScheme*)
 T vgui::Panel::GetSchemeColor(char const*, vgui::IScheme*)
 T vgui::Panel::GetSettings(KeyValues*)
 T vgui::Panel::GetSize(int&, int&)
 T vgui::Panel::GetTabPosition()
 T vgui::Panel::GetTall()
 T vgui::Panel::GetTooltip()
 T vgui::Panel::GetUserConfigSettings(KeyValues*)
 T vgui::Panel::GetVPanel()
 T vgui::Panel::GetVParent()
 T vgui::Panel::GetVar_m_flAlpha(vgui::Panel*)
 T vgui::Panel::GetVar_m_nBgTextureId1(vgui::Panel*)
 T vgui::Panel::GetVar_m_nBgTextureId2(vgui::Panel*)
 T vgui::Panel::GetVar_m_nBgTextureId3(vgui::Panel*)
 T vgui::Panel::GetVar_m_nBgTextureId4(vgui::Panel*)
 T vgui::Panel::GetVar_m_nPaintBackgroundType(vgui::Panel*)
 T vgui::Panel::GetWide()
 T vgui::Panel::HasFocus()
 T vgui::Panel::HasHotkey(wchar_t)
 T vgui::Panel::HasParent(unsigned int)
 T vgui::Panel::HasUserConfigSettings()
 T vgui::Panel::Init(int, int, int, int)
 T vgui::Panel::InitPropertyConverters()
 T vgui::Panel::InstallMouseHandler(vgui::Panel*)
 T vgui::Panel::InternalApplySettings(PanelAnimationMap*, KeyValues*)
 T vgui::Panel::InternalCursorEntered()
 T vgui::Panel::InternalCursorExited()
 T vgui::Panel::InternalCursorMoved(int, int)
 T vgui::Panel::InternalFocusChanged(bool)
 T vgui::Panel::InternalInitDefaultValues(PanelAnimationMap*)
 T vgui::Panel::InternalInvalidateLayout()
 T vgui::Panel::InternalKeyCodePressed(int)
 T vgui::Panel::InternalKeyCodeReleased(int)
 T vgui::Panel::InternalKeyCodeTyped(int)
 T vgui::Panel::InternalKeyFocusTicked()
 T vgui::Panel::InternalKeyTyped(int)
 T vgui::Panel::InternalMouseDoublePressed(int)
 T vgui::Panel::InternalMouseFocusTicked()
 T vgui::Panel::InternalMousePressed(int)
 T vgui::Panel::InternalMouseReleased(int)
 T vgui::Panel::InternalMouseTriplePressed(int)
 T vgui::Panel::InternalMouseWheeled(int)
 T vgui::Panel::InternalMove()
 T vgui::Panel::InternalRequestInfo(PanelAnimationMap*, KeyValues*)
 T vgui::Panel::InternalSetCursor()
 T vgui::Panel::InternalSetInfo(PanelAnimationMap*, KeyValues*)
 T vgui::Panel::InvalidateLayout(bool, bool)
 T vgui::Panel::IsAutoDeleteSet()
 T vgui::Panel::IsBeingDragged()
 T vgui::Panel::IsBlockingDragChaining() const
 T vgui::Panel::IsBottomAligned()
 T vgui::Panel::IsBuildGroupEnabled()
 T vgui::Panel::IsBuildModeActive()
 T vgui::Panel::IsBuildModeDeletable()
 T vgui::Panel::IsBuildModeEditable()
 T vgui::Panel::IsConsoleStylePanel() const
 T vgui::Panel::IsCursorNone()
 T vgui::Panel::IsCursorOver()
 T vgui::Panel::IsDragEnabled() const
 T vgui::Panel::IsDropEnabled() const
 T vgui::Panel::IsDroppable(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::IsEnabled()
 T vgui::Panel::IsKeyBoardInputEnabled()
 T vgui::Panel::IsKeyOverridden(ButtonCode_t, int)
 T vgui::Panel::IsKeyRebound(ButtonCode_t, int)
 T vgui::Panel::IsLayoutInvalid()
 T vgui::Panel::IsMouseInputEnabled()
 T vgui::Panel::IsOpaque()
 T vgui::Panel::IsPopup()
 T vgui::Panel::IsProportional()
 T vgui::Panel::IsRightAligned()
 T vgui::Panel::IsTriplePressAllowed() const
 T vgui::Panel::IsValidKeyBindingsContext() const
 T vgui::Panel::IsVisible()
 T vgui::Panel::IsWithin(int, int)
 T vgui::Panel::IsWithinTraverse(int, int, bool)
 T vgui::Panel::LocalToScreen(int&, int&)
 T vgui::Panel::LookupBindingByKeyCode(ButtonCode_t, int)
 T vgui::Panel::MakePopup(bool, bool)
 T vgui::Panel::MakeReadyForUse()
 T vgui::Panel::MarkForDeletion()
 T vgui::Panel::MoveToFront()
 T vgui::Panel::NavigateActivate()
 T vgui::Panel::NavigateBack()
 T vgui::Panel::NavigateDown()
 T vgui::Panel::NavigateFrom()
 T vgui::Panel::NavigateLeft()
 T vgui::Panel::NavigateRight()
 T vgui::Panel::NavigateTo()
 T vgui::Panel::NavigateToChild(vgui::Panel*)
 T vgui::Panel::NavigateUp()
 T vgui::Panel::OnChildAdded(unsigned int)
 T vgui::Panel::OnCommand(char const*)
 T vgui::Panel::OnContinueDragging()
 T vgui::Panel::OnCreateDragData(KeyValues*)
 T vgui::Panel::OnCursorEntered()
 T vgui::Panel::OnCursorExited()
 T vgui::Panel::OnCursorMoved(int, int)
 T vgui::Panel::OnDelete()
 T vgui::Panel::OnDragFailed(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnDraggablePanelPaint()
 T vgui::Panel::OnDropContextHoverHide(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnDropContextHoverShow(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnDroppablePanelPaint(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&, CUtlVector<vgui::Panel*, CUtlMemory<vgui::Panel*, int> >&)
 T vgui::Panel::OnFinishDragging(bool, ButtonCode_t, bool)
 T vgui::Panel::OnGetAdditionalDragPanels(CUtlVector<vgui::Panel*, CUtlMemory<vgui::Panel*, int> >&)
 T vgui::Panel::OnKeyCodePressed(ButtonCode_t)
 T vgui::Panel::OnKeyCodeReleased(ButtonCode_t)
 T vgui::Panel::OnKeyCodeTyped(ButtonCode_t)
 T vgui::Panel::OnKeyFocusTicked()
 T vgui::Panel::OnKeyTyped(wchar_t)
 T vgui::Panel::OnKillFocus()
 T vgui::Panel::OnMessage(KeyValues const*, unsigned int)
 T vgui::Panel::OnMouseCaptureLost()
 T vgui::Panel::OnMouseDoublePressed(ButtonCode_t)
 T vgui::Panel::OnMouseFocusTicked()
 T vgui::Panel::OnMousePressed(ButtonCode_t)
 T vgui::Panel::OnMouseReleased(ButtonCode_t)
 T vgui::Panel::OnMouseTriplePressed(ButtonCode_t)
 T vgui::Panel::OnMouseWheeled(int)
 T vgui::Panel::OnMove()
 T vgui::Panel::OnNavigateFrom(char const*)
 T vgui::Panel::OnNavigateTo(char const*)
 T vgui::Panel::OnOldMessage(KeyValues*, unsigned int)
 T vgui::Panel::OnPanelDropped(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnPanelEnteredDroppablePanel(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnPanelExitedDroppablePanel(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::Panel::OnRequestFocus(unsigned int, unsigned int)
 T vgui::Panel::OnScreenSizeChanged(int, int)
 T vgui::Panel::OnSetFocus()
 T vgui::Panel::OnSizeChanged(int, int)
 T vgui::Panel::OnStartDragging()
 T vgui::Panel::OnThink()
 T vgui::Panel::OnTick()
 T vgui::Panel::Paint()
 T vgui::Panel::PaintBackground()
 T vgui::Panel::PaintBorder()
 T vgui::Panel::PaintBuildOverlay()
 T vgui::Panel::PaintTraverse(bool, bool)
 T vgui::Panel::Panel()
 T vgui::Panel::Panel(vgui::Panel*)
 T vgui::Panel::Panel(vgui::Panel*, char const*)
 T vgui::Panel::Panel(vgui::Panel*, char const*, unsigned long)
 T vgui::Panel::ParentLocalToScreen(int&, int&)
 T vgui::Panel::PerformApplySchemeSettings()
 T vgui::Panel::PerformLayout()
 T vgui::Panel::PinToSibling(char const*, vgui::Panel::PinCorner_e, vgui::Panel::PinCorner_e)
 T vgui::Panel::PostActionSignal(KeyValues*)
 T vgui::Panel::PostChildPaint()
 T vgui::Panel::PostMessage(unsigned int, KeyValues*, float)
 T vgui::Panel::PostMessage(vgui::Panel*, KeyValues*, float)
 T vgui::Panel::PostMessageToChild(char const*, KeyValues*)
 T vgui::Panel::PreparePanelMap(vgui::PanelMap_t*)
 T vgui::Panel::QueryInterface(vgui::EInterfaceID)
 T vgui::Panel::RemoveActionSignalTarget(vgui::Panel*)
 T vgui::Panel::Repaint()
 T vgui::Panel::RequestFocus(int)
 T vgui::Panel::RequestFocusNext(unsigned int)
 T vgui::Panel::RequestFocusPrev(unsigned int)
 T vgui::Panel::RequestInfo(KeyValues*)
 T vgui::Panel::RequestInfoFromChild(char const*, KeyValues*)
 T vgui::Panel::ScreenToLocal(int&, int&)
 T vgui::Panel::SetAllowKeyBindingChainToParent(bool)
 T vgui::Panel::SetAlpha(int)
 T vgui::Panel::SetAutoDelete(bool)
 T vgui::Panel::SetBgColor(Color)
 T vgui::Panel::SetBlockDragChaining(bool)
 T vgui::Panel::SetBorder(vgui::IBorder*)
 T vgui::Panel::SetBounds(int, int, int, int)
 T vgui::Panel::SetBuildGroup(vgui::BuildGroup*)
 T vgui::Panel::SetBuildModeDeletable(bool)
 T vgui::Panel::SetBuildModeEditable(bool)
 T vgui::Panel::SetCursor(unsigned long)
 T vgui::Panel::SetCursorAlwaysVisible(bool)
 T vgui::Panel::SetDragEnabled(bool)
 T vgui::Panel::SetDragSTartTolerance(int)
 T vgui::Panel::SetDropEnabled(bool, float)
 T vgui::Panel::SetEnabled(bool)
 T vgui::Panel::SetFgColor(Color)
 T vgui::Panel::SetInfo(KeyValues*)
 T vgui::Panel::SetKeyBindingsContext(vgui::KeyBindingContextHandle_t)
 T vgui::Panel::SetKeyBoardInputEnabled(bool)
 T vgui::Panel::SetMinimumSize(int, int)
 T vgui::Panel::SetMouseInputEnabled(bool)
 T vgui::Panel::SetName(char const*)
 T vgui::Panel::SetOverridableColor(Color*, Color const&)
 T vgui::Panel::SetPaintBackgroundEnabled(bool)
 T vgui::Panel::SetPaintBackgroundType(int)
 T vgui::Panel::SetPaintBorderEnabled(bool)
 T vgui::Panel::SetPaintEnabled(bool)
 T vgui::Panel::SetParent(unsigned int)
 T vgui::Panel::SetParent(vgui::Panel*)
 T vgui::Panel::SetPos(int, int)
 T vgui::Panel::SetPostChildPaintEnabled(bool)
 T vgui::Panel::SetProportional(bool)
 T vgui::Panel::SetScheme(char const*)
 T vgui::Panel::SetScheme(unsigned long)
 T vgui::Panel::SetShowDragHelper(bool)
 T vgui::Panel::SetSilentMode(bool)
 T vgui::Panel::SetSize(int, int)
 T vgui::Panel::SetSkipChildDuringPainting(vgui::Panel*)
 T vgui::Panel::SetTabPosition(int)
 T vgui::Panel::SetTall(int)
 T vgui::Panel::SetTriplePressAllowed(bool)
 T vgui::Panel::SetVisible(bool)
 T vgui::Panel::SetWide(int)
 T vgui::Panel::SetZPos(int)
 T vgui::Panel::Think()
 T vgui::Panel::ToHandle() const
 T vgui::Panel::UpdateSiblingPin()
 T vgui::Panel::~Panel()
 T vgui::PanelListPanel::AddItem(vgui::Panel*, vgui::Panel*)
 T vgui::PanelListPanel::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T vgui::PanelListPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::PanelListPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::PanelListPanel::ComputeVPixelsNeeded()
 T vgui::PanelListPanel::DeleteAllItems()
 T vgui::PanelListPanel::GetAnimMap()
 T vgui::PanelListPanel::GetCellRenderer(int)
 T vgui::PanelListPanel::GetItemLabel(int)
 T vgui::PanelListPanel::GetItemPanel(int)
 T vgui::PanelListPanel::GetKBMap()
 T vgui::PanelListPanel::GetMessageMap()
 T vgui::PanelListPanel::GetPanelClassName()
 T vgui::PanelListPanel::GetVar_m_bAutoHideScrollbar(vgui::Panel*)
 T vgui::PanelListPanel::MoveScrollBarToTop()
 T vgui::PanelListPanel::OnMouseWheeled(int)
 T vgui::PanelListPanel::OnSizeChanged(int, int)
 T vgui::PanelListPanel::OnSliderMoved(int)
 T vgui::PanelListPanel::PanelListPanel(vgui::Panel*, char const*)
 T vgui::PanelListPanel::PerformLayout()
 T vgui::PanelListPanel::RemoveAll()
 T vgui::PanelListPanel::RemoveItem(int)
 T vgui::PanelListPanel::SetFirstColumnWidth(int)
 T vgui::PanelListPanel::~PanelListPanel()
 T vgui::ProgressBar::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ProgressBar::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ProgressBar::ApplySettings(KeyValues*)
 T vgui::ProgressBar::GetAnimMap()
 T vgui::ProgressBar::GetDescription()
 T vgui::ProgressBar::GetKBMap()
 T vgui::ProgressBar::GetMessageMap()
 T vgui::ProgressBar::GetPanelClassName()
 T vgui::ProgressBar::GetProgress()
 T vgui::ProgressBar::GetSettings(KeyValues*)
 T vgui::ProgressBar::OnDialogVariablesChanged(KeyValues*)
 T vgui::ProgressBar::Paint()
 T vgui::ProgressBar::PaintBackground()
 T vgui::ProgressBar::PaintSegment(int&, int&, int, int)
 T vgui::ProgressBar::ProgressBar(vgui::Panel*, char const*)
 T vgui::ProgressBar::SetProgress(float)
 T vgui::ProgressBar::SetSegmentInfo(int, int)
 T vgui::ProgressBar::~ProgressBar()
 T vgui::RadioButton::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::RadioButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::RadioButton::ApplySettings(KeyValues*)
 T vgui::RadioButton::DoClick()
 T vgui::RadioButton::FindBestRadioButton(int)
 T vgui::RadioButton::GetAnimMap()
 T vgui::RadioButton::GetBorder(bool, bool, bool, bool)
 T vgui::RadioButton::GetDescription()
 T vgui::RadioButton::GetKBMap()
 T vgui::RadioButton::GetMessageMap()
 T vgui::RadioButton::GetPanelClassName()
 T vgui::RadioButton::GetRadioTabPosition()
 T vgui::RadioButton::GetSettings(KeyValues*)
 T vgui::RadioButton::GetSubTabPosition()
 T vgui::RadioButton::InternalSetSelected(bool, bool)
 T vgui::RadioButton::OnKeyCodeTyped(ButtonCode_t)
 T vgui::RadioButton::OnRadioButtonChecked(int)
 T vgui::RadioButton::Paint()
 T vgui::RadioButton::PerformLayout()
 T vgui::RadioButton::RadioButton(vgui::Panel*, char const*, char const*)
 T vgui::RadioButton::SetSelected(bool)
 T vgui::RadioButton::SetSubTabPosition(int)
 T vgui::RadioButton::SilentSetSelected(bool)
 T vgui::RadioButton::~RadioButton()
 T vgui::RadioImage::Paint()
 T vgui::RadioImage::SetColor(Color)
 T vgui::RadioImage::~RadioImage()
 T vgui::RichText::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::RichText::ApplySchemeSettings(vgui::IScheme*)
 T vgui::RichText::ApplySettings(KeyValues*)
 T vgui::RichText::CopySelected()
 T vgui::RichText::CreateEditMenu()
 T vgui::RichText::CursorToPixelSpace(int, int&, int&)
 T vgui::RichText::CutSelected()
 T vgui::RichText::DrawString(int, int, vgui::RichText::TRenderState&, unsigned long)
 T vgui::RichText::FinishingURL(int, int)
 T vgui::RichText::GetAnimMap()
 T vgui::RichText::GetDescription()
 T vgui::RichText::GetKBMap()
 T vgui::RichText::GetMessageMap()
 T vgui::RichText::GetPanelClassName()
 T vgui::RichText::GetSettings(KeyValues*)
 T vgui::RichText::GetText(int, wchar_t*, int)
 T vgui::RichText::GotoTextEnd()
 T vgui::RichText::GotoTextStart()
 T vgui::RichText::GotoWordLeft()
 T vgui::RichText::GotoWordRight()
 T vgui::RichText::InsertChar(wchar_t)
 T vgui::RichText::InsertColorChange(Color)
 T vgui::RichText::InsertFade(float, float)
 T vgui::RichText::InsertString(char const*)
 T vgui::RichText::InsertString(wchar_t const*)
 T vgui::RichText::LayoutVerticalScrollBarSlider()
 T vgui::RichText::MoveScrollBar(int)
 T vgui::RichText::MoveScrollBarDirect(int)
 T vgui::RichText::OnClickPanel(int)
 T vgui::RichText::OnCursorEntered()
 T vgui::RichText::OnCursorExited()
 T vgui::RichText::OnCursorMoved(int, int)
 T vgui::RichText::OnKeyCodeTyped(ButtonCode_t)
 T vgui::RichText::OnKillFocus()
 T vgui::RichText::OnMouseCaptureLost()
 T vgui::RichText::OnMouseDoublePressed(ButtonCode_t)
 T vgui::RichText::OnMouseFocusTicked()
 T vgui::RichText::OnMousePressed(ButtonCode_t)
 T vgui::RichText::OnMouseReleased(ButtonCode_t)
 T vgui::RichText::OnMouseWheeled(int)
 T vgui::RichText::OnSetFocus()
 T vgui::RichText::OnSetText(wchar_t const*)
 T vgui::RichText::OnSizeChanged(int, int)
 T vgui::RichText::OnSliderMoved()
 T vgui::RichText::OnTextClicked(wchar_t const*)
 T vgui::RichText::OnThink()
 T vgui::RichText::OpenEditMenu()
 T vgui::RichText::Paint()
 T vgui::RichText::PerformLayout()
 T vgui::RichText::PixelToCursorSpace(int, int)
 T vgui::RichText::RecalculateDefaultState(int)
 T vgui::RichText::RecalculateLineBreaks()
 T vgui::RichText::RequestInfo(KeyValues*)
 T vgui::RichText::ResetAllFades(bool, bool, float)
 T vgui::RichText::RichText(vgui::Panel*, char const*)
 T vgui::RichText::SelectNoText()
 T vgui::RichText::SetDrawOffsets(int, int)
 T vgui::RichText::SetFgColor(Color)
 T vgui::RichText::SetFont(unsigned long)
 T vgui::RichText::SetMaximumCharCount(int)
 T vgui::RichText::SetText(char const*)
 T vgui::RichText::SetText(wchar_t const*)
 T vgui::RichText::SetVerticalScrollbar(bool)
 T vgui::RichText::TruncateTextStream()
 T vgui::RichText::UpdateRenderState(int, vgui::RichText::TRenderState&)
 T vgui::RichText::~RichText()
 T vgui::RichTextInterior::ApplySchemeSettings(vgui::IScheme*)
 T vgui::RichTextInterior::GetAnimMap()
 T vgui::RichTextInterior::GetKBMap()
 T vgui::RichTextInterior::GetMessageMap()
 T vgui::RichTextInterior::GetPanelClassName()
 T vgui::RichTextInterior::RichTextInterior(vgui::RichText*, char const*)
 T vgui::RichTextInterior::~RichTextInterior()
 T vgui::ScalableImagePanel::ApplySettings(KeyValues*)
 T vgui::ScalableImagePanel::GetAnimMap()
 T vgui::ScalableImagePanel::GetDescription()
 T vgui::ScalableImagePanel::GetKBMap()
 T vgui::ScalableImagePanel::GetMessageMap()
 T vgui::ScalableImagePanel::GetPanelClassName()
 T vgui::ScalableImagePanel::GetSettings(KeyValues*)
 T vgui::ScalableImagePanel::PaintBackground()
 T vgui::ScalableImagePanel::PerformLayout()
 T vgui::ScalableImagePanel::ScalableImagePanel(vgui::Panel*, char const*)
 T vgui::ScalableImagePanel::SetImage(char const*)
 T vgui::ScalableImagePanel::~ScalableImagePanel()
 T vgui::ScrollBar::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T vgui::ScrollBar::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::ScrollBar::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ScrollBar::ApplySettings(KeyValues*)
 T vgui::ScrollBar::GetAnimMap()
 T vgui::ScrollBar::GetButton(int)
 T vgui::ScrollBar::GetKBMap()
 T vgui::ScrollBar::GetMessageMap()
 T vgui::ScrollBar::GetPanelClassName()
 T vgui::ScrollBar::GetRange(int&, int&)
 T vgui::ScrollBar::GetRangeWindow()
 T vgui::ScrollBar::GetSlider()
 T vgui::ScrollBar::GetValue()
 T vgui::ScrollBar::GetVar_m_bAutoHideButtons(vgui::Panel*)
 T vgui::ScrollBar::HasFullRange()
 T vgui::ScrollBar::IsVertical()
 T vgui::ScrollBar::OnMouseFocusTicked()
 T vgui::ScrollBar::OnSizeChanged(int, int)
 T vgui::ScrollBar::OnSliderMoved(int)
 T vgui::ScrollBar::PerformLayout()
 T vgui::ScrollBar::RespondToScrollArrow(int)
 T vgui::ScrollBar::ScrollBar(vgui::Panel*, char const*, bool)
 T vgui::ScrollBar::SendSliderMoveMessage(int)
 T vgui::ScrollBar::SetButton(vgui::Button*, int)
 T vgui::ScrollBar::SetButtonPressedScrollValue(int)
 T vgui::ScrollBar::SetPaintBackgroundEnabled(bool)
 T vgui::ScrollBar::SetPaintBorderEnabled(bool)
 T vgui::ScrollBar::SetPaintEnabled(bool)
 T vgui::ScrollBar::SetRange(int, int)
 T vgui::ScrollBar::SetRangeWindow(int)
 T vgui::ScrollBar::SetScrollbarButtonsVisible(bool)
 T vgui::ScrollBar::SetSlider(vgui::ScrollBarSlider*)
 T vgui::ScrollBar::SetValue(int)
 T vgui::ScrollBar::UpdateButtonsForImages()
 T vgui::ScrollBar::UpdateSliderImages()
 T vgui::ScrollBar::Validate()
 T vgui::ScrollBar::~ScrollBar()
 T vgui::ScrollBarSlider::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ScrollBarSlider::ApplySettings(KeyValues*)
 T vgui::ScrollBarSlider::GetAnimMap()
 T vgui::ScrollBarSlider::GetKBMap()
 T vgui::ScrollBarSlider::GetMessageMap()
 T vgui::ScrollBarSlider::GetNobPos(int&, int&)
 T vgui::ScrollBarSlider::GetPanelClassName()
 T vgui::ScrollBarSlider::GetRange(int&, int&)
 T vgui::ScrollBarSlider::GetRangeWindow()
 T vgui::ScrollBarSlider::GetValue()
 T vgui::ScrollBarSlider::HasFullRange()
 T vgui::ScrollBarSlider::IsSliderVisible()
 T vgui::ScrollBarSlider::IsVertical()
 T vgui::ScrollBarSlider::OnCursorMoved(int, int)
 T vgui::ScrollBarSlider::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ScrollBarSlider::OnMousePressed(ButtonCode_t)
 T vgui::ScrollBarSlider::OnMouseReleased(ButtonCode_t)
 T vgui::ScrollBarSlider::Paint()
 T vgui::ScrollBarSlider::PaintBackground()
 T vgui::ScrollBarSlider::PerformLayout()
 T vgui::ScrollBarSlider::RecomputeNobPosFromValue()
 T vgui::ScrollBarSlider::RecomputeValueFromNobPos()
 T vgui::ScrollBarSlider::ScrollBarSlider(vgui::Panel*, char const*, bool)
 T vgui::ScrollBarSlider::SendScrollBarSliderMovedMessage()
 T vgui::ScrollBarSlider::SetButtonOffset(int)
 T vgui::ScrollBarSlider::SetRange(int, int)
 T vgui::ScrollBarSlider::SetRangeWindow(int)
 T vgui::ScrollBarSlider::SetSize(int, int)
 T vgui::ScrollBarSlider::SetValue(int)
 T vgui::ScrollBarSlider::~ScrollBarSlider()
 T vgui::SectionedListPanel::AddColumnToSection(int, char const*, char const*, int, int, unsigned long)
 T vgui::SectionedListPanel::AddColumnToSection(int, char const*, wchar_t const*, int, int, unsigned long)
 T vgui::SectionedListPanel::AddItem(int, KeyValues const*)
 T vgui::SectionedListPanel::AddSection(int, char const*, bool (*)(vgui::SectionedListPanel*, int, int))
 T vgui::SectionedListPanel::AddSection(int, vgui::SectionedListPanelHeader*, bool (*)(vgui::SectionedListPanel*, int, int))
 T vgui::SectionedListPanel::AddSection(int, wchar_t const*, bool (*)(vgui::SectionedListPanel*, int, int))
 T vgui::SectionedListPanel::AddToAnimationMap(char const*, char const*, char const*, char const*, bool, void* (*)(vgui::Panel*))
 T vgui::SectionedListPanel::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::SectionedListPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::SectionedListPanel::ApplySettings(KeyValues*)
 T vgui::SectionedListPanel::ClearSelection()
 T vgui::SectionedListPanel::DeleteAllItems()
 T vgui::SectionedListPanel::EnterEditMode(int, int, vgui::Panel*)
 T vgui::SectionedListPanel::GetAnimMap()
 T vgui::SectionedListPanel::GetCellBounds(int, int, int&, int&, int&, int&)
 T vgui::SectionedListPanel::GetColumnCountBySection(int)
 T vgui::SectionedListPanel::GetColumnFallbackFontBySection(int, int)
 T vgui::SectionedListPanel::GetColumnFlagsBySection(int, int)
 T vgui::SectionedListPanel::GetColumnIndexByName(int, char*)
 T vgui::SectionedListPanel::GetColumnNameBySection(int, int)
 T vgui::SectionedListPanel::GetColumnTextBySection(int, int)
 T vgui::SectionedListPanel::GetColumnWidthBySection(int, int)
 T vgui::SectionedListPanel::GetContentSize(int&, int&)
 T vgui::SectionedListPanel::GetHighestItemID()
 T vgui::SectionedListPanel::GetItemBounds(int, int&, int&, int&, int&)
 T vgui::SectionedListPanel::GetItemCount()
 T vgui::SectionedListPanel::GetItemData(int)
 T vgui::SectionedListPanel::GetItemIDFromRow(int)
 T vgui::SectionedListPanel::GetItemSection(int)
 T vgui::SectionedListPanel::GetKBMap()
 T vgui::SectionedListPanel::GetLineSpacing()
 T vgui::SectionedListPanel::GetMaxCellBounds(int, int, int&, int&, int&, int&)
 T vgui::SectionedListPanel::GetMessageMap()
 T vgui::SectionedListPanel::GetNewItemButton()
 T vgui::SectionedListPanel::GetPanelClassName()
 T vgui::SectionedListPanel::GetRowFromItemID(int)
 T vgui::SectionedListPanel::GetSectionHeaderBounds(int, int&, int&, int&, int&)
 T vgui::SectionedListPanel::GetSelectedItem()
 T vgui::SectionedListPanel::GetVar_m_bShowColumns(vgui::Panel*)
 T vgui::SectionedListPanel::InvalidateItem(int)
 T vgui::SectionedListPanel::IsInEditMode()
 T vgui::SectionedListPanel::IsItemIDValid(int)
 T vgui::SectionedListPanel::LayoutPanels(int&)
 T vgui::SectionedListPanel::LeaveEditMode()
 T vgui::SectionedListPanel::ModifyColumn(int, char const*, wchar_t const*)
 T vgui::SectionedListPanel::ModifyItem(int, int, KeyValues const*)
 T vgui::SectionedListPanel::NavigateTo()
 T vgui::SectionedListPanel::OnKeyCodePressed(ButtonCode_t)
 T vgui::SectionedListPanel::OnMousePressed(ButtonCode_t)
 T vgui::SectionedListPanel::OnMouseWheeled(int)
 T vgui::SectionedListPanel::OnSetFocus()
 T vgui::SectionedListPanel::OnSizeChanged(int, int)
 T vgui::SectionedListPanel::OnSliderMoved()
 T vgui::SectionedListPanel::PerformLayout()
 T vgui::SectionedListPanel::ReSortList()
 T vgui::SectionedListPanel::RemoveAll()
 T vgui::SectionedListPanel::RemoveAllSections()
 T vgui::SectionedListPanel::RemoveItem(int)
 T vgui::SectionedListPanel::ScrollToItem(int)
 T vgui::SectionedListPanel::SectionedListPanel(vgui::Panel*, char const*)
 T vgui::SectionedListPanel::SetFontSection(int, unsigned long)
 T vgui::SectionedListPanel::SetImageList(vgui::ImageList*, bool)
 T vgui::SectionedListPanel::SetItemBgColor(int, Color)
 T vgui::SectionedListPanel::SetItemEnabled(int, bool)
 T vgui::SectionedListPanel::SetItemFgColor(int, Color)
 T vgui::SectionedListPanel::SetItemFont(int, unsigned long)
 T vgui::SectionedListPanel::SetProportional(bool)
 T vgui::SectionedListPanel::SetSectionAlwaysVisible(int, bool)
 T vgui::SectionedListPanel::SetSectionDividerColor(int, Color)
 T vgui::SectionedListPanel::SetSectionFgColor(int, Color)
 T vgui::SectionedListPanel::SetSectionMinimumHeight(int, int)
 T vgui::SectionedListPanel::SetSelectedItem(int)
 T vgui::SectionedListPanel::SetSelectedItem(vgui::CItemButton*)
 T vgui::SectionedListPanel::SetVerticalScrollbar(bool)
 T vgui::SectionedListPanel::~SectionedListPanel()
 T vgui::SectionedListPanelHeader::ApplySchemeSettings(vgui::IScheme*)
 T vgui::SectionedListPanelHeader::GetAnimMap()
 T vgui::SectionedListPanelHeader::GetKBMap()
 T vgui::SectionedListPanelHeader::GetMessageMap()
 T vgui::SectionedListPanelHeader::GetPanelClassName()
 T vgui::SectionedListPanelHeader::Paint()
 T vgui::SectionedListPanelHeader::PerformLayout()
 T vgui::SectionedListPanelHeader::SectionedListPanelHeader(vgui::SectionedListPanel*, char const*, int)
 T vgui::SectionedListPanelHeader::SectionedListPanelHeader(vgui::SectionedListPanel*, wchar_t const*, int)
 T vgui::SectionedListPanelHeader::~SectionedListPanelHeader()
 T vgui::Slider::ApplySchemeSettings(vgui::IScheme*)
 T vgui::Slider::ApplySettings(KeyValues*)
 T vgui::Slider::DrawNob()
 T vgui::Slider::DrawTickLabels()
 T vgui::Slider::DrawTicks()
 T vgui::Slider::EstimateValueAtPos(int, int)
 T vgui::Slider::GetAnimMap()
 T vgui::Slider::GetDescription()
 T vgui::Slider::GetKBMap()
 T vgui::Slider::GetMessageMap()
 T vgui::Slider::GetNobPos(int&, int&)
 T vgui::Slider::GetPanelClassName()
 T vgui::Slider::GetRange(int&, int&)
 T vgui::Slider::GetSettings(KeyValues*)
 T vgui::Slider::GetTrackRect(int&, int&, int&, int&)
 T vgui::Slider::GetValue()
 T vgui::Slider::IsDragOnRepositionNob() const
 T vgui::Slider::IsDragged() const
 T vgui::Slider::OnCursorMoved(int, int)
 T vgui::Slider::OnKeyCodeTyped(ButtonCode_t)
 T vgui::Slider::OnMouseDoublePressed(ButtonCode_t)
 T vgui::Slider::OnMousePressed(ButtonCode_t)
 T vgui::Slider::OnMouseReleased(ButtonCode_t)
 T vgui::Slider::OnSizeChanged(int, int)
 T vgui::Slider::Paint()
 T vgui::Slider::PaintBackground()
 T vgui::Slider::PerformLayout()
 T vgui::Slider::RecomputeNobPosFromValue()
 T vgui::Slider::RecomputeValueFromNobPos()
 T vgui::Slider::SendSliderDragEndMessage()
 T vgui::Slider::SendSliderDragStartMessage()
 T vgui::Slider::SendSliderMovedMessage()
 T vgui::Slider::SetButtonOffset(int)
 T vgui::Slider::SetDragOnRepositionNob(bool)
 T vgui::Slider::SetInverted(bool)
 T vgui::Slider::SetNumTicks(int)
 T vgui::Slider::SetRange(int, int)
 T vgui::Slider::SetSliderThumbSubRange(bool, int, int)
 T vgui::Slider::SetThumbWidth(int)
 T vgui::Slider::SetTickCaptions(char const*, char const*)
 T vgui::Slider::SetTickCaptions(wchar_t const*, wchar_t const*)
 T vgui::Slider::SetValue(int, bool)
 T vgui::Slider::Slider(vgui::Panel*, char const*)
 T vgui::Slider::~Slider()
 T vgui::StudioRender()
 T vgui::TextEntry::AddAnotherLine(int&, int&)
 T vgui::TextEntry::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::TextEntry::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TextEntry::ApplySettings(KeyValues*)
 T vgui::TextEntry::Backspace()
 T vgui::TextEntry::CompositionString(wchar_t const*)
 T vgui::TextEntry::ConversionModeChanged(int)
 T vgui::TextEntry::CopySelected()
 T vgui::TextEntry::CreateEditMenu()
 T vgui::TextEntry::CursorToPixelSpace(int, int&, int&)
 T vgui::TextEntry::CutSelected()
 T vgui::TextEntry::Delete()
 T vgui::TextEntry::DeleteSelected()
 T vgui::TextEntry::DrawChar(wchar_t, unsigned long, int, int, int)
 T vgui::TextEntry::DrawCursor(int, int)
 T vgui::TextEntry::FireActionSignal()
 T vgui::TextEntry::GetAnimMap()
 T vgui::TextEntry::GetCurrentLineStart()
 T vgui::TextEntry::GetDescription()
 T vgui::TextEntry::GetDragPanel()
 T vgui::TextEntry::GetDropContextMenu(vgui::Menu*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TextEntry::GetKBMap()
 T vgui::TextEntry::GetMaximumCharCount()
 T vgui::TextEntry::GetMessageMap()
 T vgui::TextEntry::GetNumLines()
 T vgui::TextEntry::GetPanelClassName()
 T vgui::TextEntry::GetSelectedRange(int&, int&)
 T vgui::TextEntry::GetSettings(KeyValues*)
 T vgui::TextEntry::GetStartDrawIndex(int&)
 T vgui::TextEntry::GetText(char*, int)
 T vgui::TextEntry::GetText(wchar_t*, int)
 T vgui::TextEntry::GetTextLength() const
 T vgui::TextEntry::GetTextRange(char*, int, int)
 T vgui::TextEntry::GetTextRange(wchar_t*, int, int)
 T vgui::TextEntry::GetValueAsFloat()
 T vgui::TextEntry::GetValueAsInt()
 T vgui::TextEntry::GetYStart()
 T vgui::TextEntry::GotoDown()
 T vgui::TextEntry::GotoEndOfLine()
 T vgui::TextEntry::GotoFirstOfLine()
 T vgui::TextEntry::GotoLeft()
 T vgui::TextEntry::GotoRight()
 T vgui::TextEntry::GotoTextEnd()
 T vgui::TextEntry::GotoTextStart()
 T vgui::TextEntry::GotoUp()
 T vgui::TextEntry::GotoWordLeft()
 T vgui::TextEntry::GotoWordRight()
 T vgui::TextEntry::HideIMECandidates()
 T vgui::TextEntry::InsertChar(wchar_t)
 T vgui::TextEntry::InsertString(char const*)
 T vgui::TextEntry::InsertString(wchar_t const*)
 T vgui::TextEntry::IsDroppable(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TextEntry::IsEditable()
 T vgui::TextEntry::IsMultiline()
 T vgui::TextEntry::IsTextFullySelected() const
 T vgui::TextEntry::LanguageChanged(int)
 T vgui::TextEntry::LayoutVerticalScrollBarSlider()
 T vgui::TextEntry::MoveCursor(int, int)
 T vgui::TextEntry::NeedsEllipses(unsigned long, int*)
 T vgui::TextEntry::OnCreateDragData(KeyValues*)
 T vgui::TextEntry::OnCursorEntered()
 T vgui::TextEntry::OnCursorExited()
 T vgui::TextEntry::OnCursorMoved(int, int)
 T vgui::TextEntry::OnKeyCodePressed(ButtonCode_t)
 T vgui::TextEntry::OnKeyCodeTyped(ButtonCode_t)
 T vgui::TextEntry::OnKeyFocusTicked()
 T vgui::TextEntry::OnKeyTyped(wchar_t)
 T vgui::TextEntry::OnKillFocus()
 T vgui::TextEntry::OnMouseCaptureLost()
 T vgui::TextEntry::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TextEntry::OnMouseFocusTicked()
 T vgui::TextEntry::OnMousePressed(ButtonCode_t)
 T vgui::TextEntry::OnMouseReleased(ButtonCode_t)
 T vgui::TextEntry::OnMouseTriplePressed(ButtonCode_t)
 T vgui::TextEntry::OnMouseWheeled(int)
 T vgui::TextEntry::OnPanelDropped(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TextEntry::OnSetFocus()
 T vgui::TextEntry::OnSetState(int)
 T vgui::TextEntry::OnSetText(wchar_t const*)
 T vgui::TextEntry::OnSizeChanged(int, int)
 T vgui::TextEntry::OnSliderMoved()
 T vgui::TextEntry::OpenEditMenu()
 T vgui::TextEntry::PaintBackground()
 T vgui::TextEntry::Paste()
 T vgui::TextEntry::PerformLayout()
 T vgui::TextEntry::PixelToCursorSpace(int, int)
 T vgui::TextEntry::RecalculateLineBreaks()
 T vgui::TextEntry::RequestInfo(KeyValues*)
 T vgui::TextEntry::ResetCursorBlink()
 T vgui::TextEntry::SaveUndoState()
 T vgui::TextEntry::ScrollRight()
 T vgui::TextEntry::SelectAllText(bool)
 T vgui::TextEntry::SelectCheck(bool)
 T vgui::TextEntry::SelectNoText()
 T vgui::TextEntry::SelectNone()
 T vgui::TextEntry::SendNewLine(bool)
 T vgui::TextEntry::SentenceModeChanged(int)
 T vgui::TextEntry::SetAllowNonAsciiCharacters(bool)
 T vgui::TextEntry::SetAutoProgressOnHittingCharLimit(bool)
 T vgui::TextEntry::SetCatchEnterKey(bool)
 T vgui::TextEntry::SetCharAt(wchar_t, int)
 T vgui::TextEntry::SetDisabledBgColor(Color)
 T vgui::TextEntry::SetDrawLanguageIDAtLeft(bool)
 T vgui::TextEntry::SetDrawWidth(int)
 T vgui::TextEntry::SetEditable(bool)
 T vgui::TextEntry::SetEnabled(bool)
 T vgui::TextEntry::SetFont(unsigned long)
 T vgui::TextEntry::SetHorizontalScrolling(bool)
 T vgui::TextEntry::SetMaximumCharCount(int)
 T vgui::TextEntry::SetMultiline(bool)
 T vgui::TextEntry::SetSelectionBgColor(Color const&)
 T vgui::TextEntry::SetSelectionTextColor(Color const&)
 T vgui::TextEntry::SetSelectionUnfocusedBgColor(Color const&)
 T vgui::TextEntry::SetText(char const*)
 T vgui::TextEntry::SetText(wchar_t const*)
 T vgui::TextEntry::SetTextHidden(bool)
 T vgui::TextEntry::SetToFullHeight()
 T vgui::TextEntry::SetToFullWidth()
 T vgui::TextEntry::SetUseFallbackFont(bool, unsigned long)
 T vgui::TextEntry::SetVerticalScrollbar(bool)
 T vgui::TextEntry::SetWrap(bool)
 T vgui::TextEntry::ShowIMECandidates()
 T vgui::TextEntry::TextEntry(vgui::Panel*, char const*)
 T vgui::TextEntry::Undo()
 T vgui::TextEntry::UpdateIMECandidates()
 T vgui::TextEntry::~TextEntry()
 T vgui::TextImage::GetContentSize(int&, int&)
 T vgui::TextImage::GetFont()
 T vgui::TextImage::GetText(char*, int)
 T vgui::TextImage::GetText(wchar_t*, int)
 T vgui::TextImage::GetTextSize(int&, int&)
 T vgui::TextImage::GetUnlocalizedText(char*, int)
 T vgui::TextImage::GetUnlocalizedTextSymbol()
 T vgui::TextImage::Paint()
 T vgui::TextImage::RecalculateCenterWrapIndents()
 T vgui::TextImage::RecalculateEllipsesPosition()
 T vgui::TextImage::RecalculateNewLinePositions()
 T vgui::TextImage::ResizeImageToContent()
 T vgui::TextImage::ResizeImageToContentMaxWidth(int)
 T vgui::TextImage::SetAllCaps(bool)
 T vgui::TextImage::SetCenterWrap(bool)
 T vgui::TextImage::SetDrawWidth(int)
 T vgui::TextImage::SetFont(unsigned long)
 T vgui::TextImage::SetSize(int, int)
 T vgui::TextImage::SetText(char const*)
 T vgui::TextImage::SetText(wchar_t const*, bool)
 T vgui::TextImage::SetUseFallbackFont(bool, unsigned long)
 T vgui::TextImage::SetWrap(bool)
 T vgui::TextImage::TextImage(char const*)
 T vgui::TextImage::TextImage(wchar_t const*)
 T vgui::TextImage::~TextImage()
 T vgui::TextTooltip::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TextTooltip::HideTooltip()
 T vgui::TextTooltip::PerformLayout()
 T vgui::TextTooltip::SetText(char const*)
 T vgui::TextTooltip::ShowTooltip(vgui::Panel*)
 T vgui::TextTooltip::SizeTextWindow()
 T vgui::TextTooltip::TextTooltip(vgui::Panel*, char const*)
 T vgui::ToggleButton::ApplySchemeSettings(vgui::IScheme*)
 T vgui::ToggleButton::CanBeDefaultButton()
 T vgui::ToggleButton::DoClick()
 T vgui::ToggleButton::GetAnimMap()
 T vgui::ToggleButton::GetButtonFgColor()
 T vgui::ToggleButton::GetKBMap()
 T vgui::ToggleButton::GetMessageMap()
 T vgui::ToggleButton::GetPanelClassName()
 T vgui::ToggleButton::OnKeyCodePressed(ButtonCode_t)
 T vgui::ToggleButton::OnMouseDoublePressed(ButtonCode_t)
 T vgui::ToggleButton::ToggleButton(vgui::Panel*, char const*, char const*)
 T vgui::ToggleButton::~ToggleButton()
 T vgui::TreeNode::AddChild(vgui::TreeNode*)
 T vgui::TreeNode::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::TreeNode::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TreeNode::CalculateVisibleMaxWidth()
 T vgui::TreeNode::ClosePreviousParents(vgui::TreeNode*)
 T vgui::TreeNode::CountVisibleIndex()
 T vgui::TreeNode::CountVisibleNodes()
 T vgui::TreeNode::FindChild(vgui::TreeNode*)
 T vgui::TreeNode::FindItemUnderMouse(int&, int&, int, int&, int, int)
 T vgui::TreeNode::FindNodesInRange_R(CUtlVector<vgui::TreeNode*, CUtlMemory<vgui::TreeNode*, int> >&, bool&, bool&, int, int)
 T vgui::TreeNode::GetAnimMap()
 T vgui::TreeNode::GetDropContextMenu(vgui::Menu*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNode::GetDropCursor(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNode::GetKBMap()
 T vgui::TreeNode::GetMessageMap()
 T vgui::TreeNode::GetPanelClassName()
 T vgui::TreeNode::IsDragEnabled() const
 T vgui::TreeNode::IsDroppable(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNode::OnCreateDragData(KeyValues*)
 T vgui::TreeNode::OnCursorMoved(int, int)
 T vgui::TreeNode::OnGetAdditionalDragPanels(CUtlVector<vgui::Panel*, CUtlMemory<vgui::Panel*, int> >&)
 T vgui::TreeNode::OnKeyCodeTyped(ButtonCode_t)
 T vgui::TreeNode::OnLabelChanged(KeyValues*)
 T vgui::TreeNode::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TreeNode::OnMousePressed(ButtonCode_t)
 T vgui::TreeNode::OnMouseReleased(ButtonCode_t)
 T vgui::TreeNode::OnMouseWheeled(int)
 T vgui::TreeNode::OnPanelDropped(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeNode::OnSetFocus()
 T vgui::TreeNode::Paint()
 T vgui::TreeNode::PaintBackground()
 T vgui::TreeNode::PerformLayout()
 T vgui::TreeNode::PositionAndSetVisibleNodes(int&, int&, int, int&)
 T vgui::TreeNode::SelectNextChild(vgui::TreeNode*)
 T vgui::TreeNode::SelectPrevChild(vgui::TreeNode*)
 T vgui::TreeNode::SetBgColor(Color)
 T vgui::TreeNode::SetFgColor(Color)
 T vgui::TreeNode::SetFont(unsigned long)
 T vgui::TreeNode::SetKeyValues(KeyValues*)
 T vgui::TreeNode::SetNodeExpanded(bool)
 T vgui::TreeNode::SetVisible(bool)
 T vgui::TreeNode::StepInto(bool)
 T vgui::TreeNode::StepOut(bool)
 T vgui::TreeNode::StepOver(bool)
 T vgui::TreeNode::TreeNode(vgui::Panel*, vgui::TreeView*)
 T vgui::TreeNode::~TreeNode()
 T vgui::TreeNodeImage::OnCursorMoved(int, int)
 T vgui::TreeNodeImage::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TreeNodeImage::OnMousePressed(ButtonCode_t)
 T vgui::TreeNodeImage::OnMouseWheeled(int)
 T vgui::TreeNodeImage::~TreeNodeImage()
 T vgui::TreeNodeText::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::TreeNodeText::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TreeNodeText::EnterEditingInPlace()
 T vgui::TreeNodeText::FinishEditingInPlace(bool)
 T vgui::TreeNodeText::GetAnimMap()
 T vgui::TreeNodeText::GetKBMap()
 T vgui::TreeNodeText::GetMessageMap()
 T vgui::TreeNodeText::GetPanelClassName()
 T vgui::TreeNodeText::IsKeyRebound(ButtonCode_t, int)
 T vgui::TreeNodeText::OnCursorMoved(int, int)
 T vgui::TreeNodeText::OnKeyCodeTyped(ButtonCode_t)
 T vgui::TreeNodeText::OnKillFocus()
 T vgui::TreeNodeText::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TreeNodeText::OnMousePressed(ButtonCode_t)
 T vgui::TreeNodeText::OnMouseReleased(ButtonCode_t)
 T vgui::TreeNodeText::OnMouseWheeled(int)
 T vgui::TreeNodeText::OnTextChanged()
 T vgui::TreeNodeText::OnTick()
 T vgui::TreeNodeText::PaintBackground()
 T vgui::TreeNodeText::TreeNodeText(vgui::Panel*, char const*, vgui::TreeView*)
 T vgui::TreeNodeText::~TreeNodeText()
 T vgui::TreeView::AddItem(KeyValues*, int)
 T vgui::TreeView::AddSelectedItem(int, bool, bool, bool)
 T vgui::TreeView::AddToMap(char const*, void (vgui::Panel::*)(), int, int, char const*, int, char const*)
 T vgui::TreeView::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TreeView::ClearSelection()
 T vgui::TreeView::ExpandItem(int, bool)
 T vgui::TreeView::FindItemUnderMouse(int, int)
 T vgui::TreeView::FindNodesInRange(int, int, CUtlVector<int, CUtlMemory<int, int> >&)
 T vgui::TreeView::GenerateChildrenOfNode(int)
 T vgui::TreeView::GenerateContextMenu(int, int, int)
 T vgui::TreeView::GenerateDragDataForItem(int, KeyValues*)
 T vgui::TreeView::GetAnimMap()
 T vgui::TreeView::GetChild(int, int)
 T vgui::TreeView::GetFirstSelectedItem() const
 T vgui::TreeView::GetFont()
 T vgui::TreeView::GetHighestItemID()
 T vgui::TreeView::GetItemCount()
 T vgui::TreeView::GetItemData(int)
 T vgui::TreeView::GetItemDropContextMenu(int, vgui::Menu*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::GetItemDropCursor(int, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::GetItemParent(int)
 T vgui::TreeView::GetKBMap()
 T vgui::TreeView::GetMessageMap()
 T vgui::TreeView::GetNextChildItemIndex(int)
 T vgui::TreeView::GetNumChildren(int)
 T vgui::TreeView::GetPanelClassName()
 T vgui::TreeView::GetPrevChildItemIndex(int)
 T vgui::TreeView::GetRootItemIndex()
 T vgui::TreeView::GetRowHeight()
 T vgui::TreeView::GetSelectedItemCount() const
 T vgui::TreeView::GetSelectedItemData(CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::GetSelectedItems(CUtlVector<int, CUtlMemory<int, int> >&)
 T vgui::TreeView::GetVBarInfo(int&, int&, bool&)
 T vgui::TreeView::IsItemDroppable(int, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::IsItemExpanded(int)
 T vgui::TreeView::IsItemIDValid(int)
 T vgui::TreeView::IsItemSelected(int)
 T vgui::TreeView::IsLabelBeingEdited() const
 T vgui::TreeView::IsLabelEditingAllowed() const
 T vgui::TreeView::MakeItemVisible(int)
 T vgui::TreeView::ModifyItem(int, KeyValues*)
 T vgui::TreeView::OnItemDropped(int, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
 T vgui::TreeView::OnLabelChanged(int, char const*, char const*)
 T vgui::TreeView::OnMousePressed(ButtonCode_t)
 T vgui::TreeView::OnMouseWheeled(int)
 T vgui::TreeView::OnSizeChanged(int, int)
 T vgui::TreeView::OnSliderMoved(int)
 T vgui::TreeView::PerformLayout()
 T vgui::TreeView::RangeSelectItems(int)
 T vgui::TreeView::RemoveAll()
 T vgui::TreeView::RemoveChildrenOfNode(int)
 T vgui::TreeView::RemoveItem(int, bool, bool)
 T vgui::TreeView::RemoveSelectedItem(int)
 T vgui::TreeView::SelectAll()
 T vgui::TreeView::SetAllowLabelEditing(bool)
 T vgui::TreeView::SetBgColor(Color)
 T vgui::TreeView::SetDragEnabledItems(bool)
 T vgui::TreeView::SetFont(unsigned long)
 T vgui::TreeView::SetImageList(vgui::ImageList*, bool)
 T vgui::TreeView::SetItemBgColor(int, Color const&)
 T vgui::TreeView::SetItemFgColor(int, Color const&)
 T vgui::TreeView::SetItemSelectionBgColor(int, Color const&)
 T vgui::TreeView::SetItemSelectionTextColor(int, Color const&)
 T vgui::TreeView::SetItemSelectionUnfocusedBgColor(int, Color const&)
 T vgui::TreeView::SetLabelEditingAllowed(int, bool)
 T vgui::TreeView::StartEditingLabel(int)
 T vgui::TreeView::TreeView(vgui::Panel*, char const*)
 T vgui::TreeView::~TreeView()
 T vgui::TreeViewSubPanel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::TreeViewSubPanel::OnCursorMoved(int, int)
 T vgui::TreeViewSubPanel::OnMouseDoublePressed(ButtonCode_t)
 T vgui::TreeViewSubPanel::OnMousePressed(ButtonCode_t)
 T vgui::TreeViewSubPanel::OnMouseWheeled(int)
 T vgui::TreeViewSubPanel::~TreeViewSubPanel()
 T vgui::URLLabel::ApplySchemeSettings(vgui::IScheme*)
 T vgui::URLLabel::ApplySettings(KeyValues*)
 T vgui::URLLabel::GetAnimMap()
 T vgui::URLLabel::GetDescription()
 T vgui::URLLabel::GetKBMap()
 T vgui::URLLabel::GetMessageMap()
 T vgui::URLLabel::GetPanelClassName()
 T vgui::URLLabel::GetSettings(KeyValues*)
 T vgui::URLLabel::OnMousePressed(ButtonCode_t)
 T vgui::URLLabel::URLLabel(vgui::Panel*, char const*, char const*, char const*)
 T vgui::URLLabel::~URLLabel()
 T vgui::VGui_InitInterfacesList(char const*, void* (**)(char const*, int*), int)
 T vgui::VGui_InitMatSysInterfacesList(char const*, void* (**)(char const*, int*), int)
 T vgui::VPanelHandle::Get()
 T vgui::VPanelHandle::Set(unsigned int)
 T vgui::VguiPanelGetSortedChildButtonList(vgui::Panel*, void*, char*, int)
 T vgui::VguiPanelNavigateSortedChildButtonList(void*, int)
 T virtualgroup_t::GetStudioHdr() const
 T void ConstructStringVArgsInternal_Impl<wchar_t>(wchar_t*, int, wchar_t const*, int, char*)
 T void ILocalize::ConstructString<wchar_t>(wchar_t*, int, wchar_t const*, int, ...)
 ThreadGetCurrentId
 ThreadInMainThread
 ThreadInterlockedAssignIf
 ThreadInterlockedAssignIf64
 ThreadInterlockedDecrement
 ThreadInterlockedExchange
 ThreadInterlockedExchangeAdd
 ThreadInterlockedExchangePointer
 ThreadInterlockedIncrement
 ThreadSleep
 Warning
 _DefaultRuneLocale
 _ExitOnFatalAssert
 _SpewInfo
 _SpewMessage
 _Unwind_Resume
 __bzero
 __cxa_atexit
 __cxa_begin_catch
 __cxa_guard_abort
 __cxa_guard_acquire
 __cxa_guard_release
 __cxa_pure_virtual
 __divdi3
 __dynamic_cast
 __error
 __gxx_personality_v0
 __maskrune
 __memcpy_chk
 __stack_chk_fail
 __stack_chk_guard
 __stderrp
 __tolower
 __toupper
 __udivdi3
 abort
 acos
 acosf
 asctime
 asin
 atan
 atan2
 atan2f
 atanf
 atof
 atoi
 b AddMultiDamage(CTakeDamageInfo const&, C_BaseEntity*)::warningCount
 b AddReleaseFunc()::bAdded
 b Beam_t::GetRenderOrigin()::org
 b Beam_t::RenderableToWorldTransform()::mat
 b Bias(float, float)::lastExponent
 b CAM_HULL_MAX
 b CAM_HULL_MIN
 b CChoreoEvent::GetDescription()::description
 b CClassMap::Lookup(char const*)::lookup
 b CClientLeafSystem::ComputeTranslucentRenderLeaf(int, unsigned short const*, short const*, int, int)::orderedList
 b CClientLeafSystem::ComputeTranslucentRenderLeaf(int, unsigned short const*, short const*, int, int)::renderablesToUpdate
 b CClientShadowMgr::BuildActiveShadowDepthList(CViewSetup const&, int, unsigned short*)::s_bOverflowWarning
 b CClientShadowMgr::ComputeShadowDepthTextures(CViewSetup const&)::bitchCount
 b CClientShadowMgr::CreateFlashlight(FlashlightState_t const&)::invalidHandle
 b CClientShadowMgr::GetShadowDirection() const::s_vecDown
 b CClientVirtualReality::Activate()::sdl_displayindex
 b CClientVirtualReality::Deactivate()::cl_software_cursor
 b CClientVirtualReality::Deactivate()::sdl_displayindex
 b CCollisionProperty::CollisionToWorldTransform() const::s_matTemp
 b CCollisionProperty::CollisionToWorldTransform() const::s_nIndex
 b CCurveData::GetBoundedSample(ICurveDataAccessor*, int, bool&)::nullend
 b CCurveData::GetBoundedSample(ICurveDataAccessor*, int, bool&)::nullstart
 b CDataManagerBase::GetForFreeByIndex(unsigned short)::__executeCount
 b CDetailModel::RenderableToWorldTransform()::mat
 b CFlexAnimationTrack::GetBoundedSample(int, bool&, int)::nullend
 b CFlexAnimationTrack::GetBoundedSample(int, bool&, int)::nullstart
 b CGlowOverlay::Draw(bool)::nHDRColorScaleCache
 b CHudChat::MsgFunc_TextMsg(bf_read&)::szBuf
 b CHudHintDisplay::LocalizeAndDisplay(char const*, char const*)::szBuf
 b CHudTextMessage::BufferedLocaliseTextString(char const*)::dst_buffer
 b CHudTextMessage::LocaliseTextString(char const*, char*, int)::word_buf
 b CInput::CAM_Think()::s_oldAngles
 b CInput::Joystick_Advanced()::s_joy_legacy
 b CInput::Joystick_Advanced()::var
 b CInput::SteamControllerMove(float, CUserCmd*)::joy_variable_frametime
 b CInput::SteamControllerMove(float, CUserCmd*)::nControllersInitialized
 b CInput::SteamControllerMove(float, CUserCmd*)::s_joy_pitchsensitivity
 b CInput::SteamControllerMove(float, CUserCmd*)::s_joy_yawsensitivity
 b CLuminanceHistogramSystem::UpdateLuminanceRanges()::s_bFirstTime
 b CMaterialModifyProxy::OnBindFloatLerp(C_MaterialModifyControl*)::count
 b CModelPanel::Paint()::white
 b CNetGraphPanel::DrawTextFields(int, int, int, int, CNetGraphPanel::netbandwidthgraph_t*, CNetGraphPanel::cmdinfo_t*)::lastout
 b CNewParticleEffect::Construct()::state
 b CNewParticleEffect::RecordControlPointOrientation(int)::state
 b CNewParticleEffect::SetControlPoint(int, Vector const&)::state
 b CNewParticleEffect::SetControlPointEntity(int, C_BaseEntity*)::state
 b CNewParticleEffect::StopEmission(bool, bool, bool)::state
 b CNewParticleEffect::~CNewParticleEffect()::state
 b COM_GetModDirectory()::modDir
 b CParticleEffectBinding::RenderableToWorldTransform()::mat
 b CParticleSystemDefinition_UnpackInit::s_pUnpack
 b CParticleSystemMgr::AddBuiltinRenderingOperators()::s_DidAddRenderers
 b CParticleSystemMgr::AddBuiltinSimulationOperators()::s_DidAddSim
 b CPredictableId::Describe() const::desc
 b CPrediction::CheckError(int)::pos
 b CRendering3dView::DrawWorld(float)::_counter
 b CRumbleEffects::StartEffect(unsigned char, unsigned char, unsigned char)::joy_vibration
 b CRumbleEffects::UpdateEffects(float)::joy_vibration
 b CSentence::GetBoundedSample(int, float)::nullend
 b CSentence::GetBoundedSample(int, float)::nullstart
 b CSimpleEmitter::UpdateColor(SimpleParticle const*)::cColor
 b CSplashParticle::UpdateVelocity(SimpleParticle*, float)::decay
 b CSplashParticle::UpdateVelocity(SimpleParticle*, float)::dtime
 b CStudioHdr::CActivityToSequenceMapping::SelectWeightedSequence(CStudioHdr*, int, int)::__executeCount
 b CStudioHdr::GroupStudioHdr(int)::__executeCount
 b CTempEnts::Update()::gTempEntFrame
 b CUtlSymbol::Initialize()::symbolsInitialized
 b CViewRender::DrawOneMonitor(ITexture*, int, C_PointCamera*, CViewSetup const&, C_BasePlayer*, int, int, int, int)::_counter
 b CViewRender::Render(vrect_t*)::sv_restrict_aspect_ratio_fov
 b CViewRender::RenderView(CViewSetup const&, int, int)::bFirstTime
 b CViewRender::SetUpOverView()::oldCRC
 b CViewRender::UpdateShadowDepthTexture(ITexture*, ITexture*, CViewSetup const&)::_counter
 b C_AR2Explosion::SimulateParticles(CParticleSimulateIterator*)::decay
 b C_AR2Explosion::SimulateParticles(CParticleSimulateIterator*)::dtime
 b C_BaseAnimating::GetToolRecordingState(KeyValues*)::state
 b C_BaseAnimating::SetupBones(matrix3x4_t*, int, int, float)::lastWarning
 b C_BaseCombatWeapon::GetBulletSpread()::cone
 b C_BaseEntity::CheckCLInterpChanged()::flLastValue_Interp
 b C_BaseEntity::CheckCLInterpChanged()::flLastValue_InterpNPCs
 b C_BaseEntity::FireBullets(FireBulletsInfo_t const&)::tracerCount
 b C_BaseEntity::GetClassname()::outstr
 b C_BaseEntity::GetToolRecordingState(KeyValues*)::state
 b C_BaseEntity::KeyValue(char const*, char const*)::szBuf
 b C_BaseEntity::RestoreData(char const*, int, int)::pwatchent
 b C_BaseEntity::SaveData(char const*, int, int)::pwatchent
 b C_BaseFlex::GetToolRecordingState(KeyValues*)::state
 b C_BaseHLCombatWeapon::CalcViewmodelBob()::bobtime
 b C_BaseHLCombatWeapon::CalcViewmodelBob()::lastbobtime
 b C_BasePlayer::EyeAngles()::angEyeWorld
 b C_BasePlayer::GetSteamID(CSteamID*)::universe
 b C_BasePlayer::GetToolRecordingState(KeyValues*)::state
 b C_BasePlayer::ShouldDrawLocalPlayer()::vr_first_person_uses_world_model
 b C_BasePlayer::ShouldDrawThisPlayer()::vr_first_person_uses_world_model
 b C_BasePlayer::UpdateStepSound(surfacedata_t*, Vector const&, Vector const&)::iSkipStep
 b C_Beam::GetAbsEndPos() const::vecEndAbsPosition
 b C_Beam::GetAbsStartPos() const::vecStartAbsPosition
 b C_EnvelopeFX::RenderableToWorldTransform()::mat
 b C_Hairball::ClientThink()::flYSpeed
 b C_INIT_AgeNoise_UnpackInit::s_pUnpack
 b C_INIT_CreateAlongPath_UnpackInit::s_pUnpack
 b C_INIT_CreateFromParentParticles_UnpackInit::s_pUnpack
 b C_INIT_CreateFromPlaneCache_UnpackInit::s_pUnpack
 b C_INIT_CreateInHierarchy_UnpackInit::s_pUnpack
 b C_INIT_CreateOnModel_UnpackInit::s_pUnpack
 b C_INIT_CreateSequentialPath_UnpackInit::s_pUnpack
 b C_INIT_CreateWithinBox_UnpackInit::s_pUnpack
 b C_INIT_CreateWithinSphere_UnpackInit::s_pUnpack
 b C_INIT_CreationNoise_UnpackInit::s_pUnpack
 b C_INIT_DistanceToCPInit_UnpackInit::s_pUnpack
 b C_INIT_InheritVelocity_UnpackInit::s_pUnpack
 b C_INIT_InitialRepulsionVelocity_UnpackInit::s_pUnpack
 b C_INIT_InitialVelocityNoise_UnpackInit::s_pUnpack
 b C_INIT_LifespanFromVelocity_UnpackInit::s_pUnpack
 b C_INIT_MoveBetweenPoints_UnpackInit::s_pUnpack
 b C_INIT_PositionOffset_UnpackInit::s_pUnpack
 b C_INIT_PositionWarp_UnpackInit::s_pUnpack
 b C_INIT_RandomAlpha_UnpackInit::s_pUnpack
 b C_INIT_RandomColor_UnpackInit::s_pUnpack
 b C_INIT_RandomLifeTime_UnpackInit::s_pUnpack
 b C_INIT_RandomRadius_UnpackInit::s_pUnpack
 b C_INIT_RandomRotationSpeed_UnpackInit::s_pUnpack
 b C_INIT_RandomRotation_UnpackInit::s_pUnpack
 b C_INIT_RandomSecondSequence_UnpackInit::s_pUnpack
 b C_INIT_RandomSequence_UnpackInit::s_pUnpack
 b C_INIT_RandomTrailLength_UnpackInit::s_pUnpack
 b C_INIT_RandomYawFlip_UnpackInit::s_pUnpack
 b C_INIT_RandomYaw_UnpackInit::s_pUnpack
 b C_INIT_RemapCPtoScalar_UnpackInit::s_pUnpack
 b C_INIT_RemapCPtoVector_UnpackInit::s_pUnpack
 b C_INIT_RemapScalarToVector_UnpackInit::s_pUnpack
 b C_INIT_RemapScalar_UnpackInit::s_pUnpack
 b C_INIT_SequenceLifeTime_UnpackInit::s_pUnpack
 b C_INIT_VelocityRandom_UnpackInit::s_pUnpack
 b C_OP_AttractToControlPoint_UnpackInit::s_pUnpack
 b C_OP_BasicMovement_UnpackInit::s_pUnpack
 b C_OP_ColorInterpolate_UnpackInit::s_pUnpack
 b C_OP_ConstrainDistanceToPath_UnpackInit::s_pUnpack
 b C_OP_ConstrainDistance_UnpackInit::s_pUnpack
 b C_OP_ContinuousEmitter_UnpackInit::s_pUnpack
 b C_OP_ControlpointLight_UnpackInit::s_pUnpack
 b C_OP_Cull_UnpackInit::s_pUnpack
 b C_OP_DampenToCP_UnpackInit::s_pUnpack
 b C_OP_Decay_UnpackInit::s_pUnpack
 b C_OP_DistanceBetweenCPs_UnpackInit::s_pUnpack
 b C_OP_DistanceToCP_UnpackInit::s_pUnpack
 b C_OP_FadeAndKill_UnpackInit::s_pUnpack
 b C_OP_FadeIn_UnpackInit::s_pUnpack
 b C_OP_FadeOut_UnpackInit::s_pUnpack
 b C_OP_InstantaneousEmitter_UnpackInit::s_pUnpack
 b C_OP_InterpolateRadius_UnpackInit::s_pUnpack
 b C_OP_LockToBone_UnpackInit::s_pUnpack
 b C_OP_MaintainSequentialPath_UnpackInit::s_pUnpack
 b C_OP_MaxVelocity_UnpackInit::s_pUnpack
 b C_OP_ModelCull_UnpackInit::s_pUnpack
 b C_OP_MovementRotateParticleAroundAxis_UnpackInit::s_pUnpack
 b C_OP_NoiseEmitter_UnpackInit::s_pUnpack
 b C_OP_Noise_UnpackInit::s_pUnpack
 b C_OP_Orient2DRelToCP_UnpackInit::s_pUnpack
 b C_OP_OrientTo2dDirection_UnpackInit::s_pUnpack
 b C_OP_OscillateScalar_UnpackInit::s_pUnpack
 b C_OP_OscillateVector_UnpackInit::s_pUnpack
 b C_OP_PerParticleEmitter_UnpackInit::s_pUnpack
 b C_OP_PlanarConstraint_UnpackInit::s_pUnpack
 b C_OP_PlaneCull_UnpackInit::s_pUnpack
 b C_OP_PositionLock_UnpackInit::s_pUnpack
 b C_OP_RandomForce_UnpackInit::s_pUnpack
 b C_OP_RemapCPtoScalar_UnpackInit::s_pUnpack
 b C_OP_RemapDotProductToScalar_UnpackInit::s_pUnpack
 b C_OP_RemapScalar_UnpackInit::s_pUnpack
 b C_OP_RemapSpeedtoCP_UnpackInit::s_pUnpack
 b C_OP_RenderPoints_UnpackInit::s_pUnpack
 b C_OP_RenderRope_UnpackInit::s_pUnpack
 b C_OP_RenderScreenVelocityRotate_UnpackInit::s_pUnpack
 b C_OP_RenderSpritesTrail_UnpackInit::s_pUnpack
 b C_OP_RenderSprites_UnpackInit::s_pUnpack
 b C_OP_SetChildControlPoints_UnpackInit::s_pUnpack
 b C_OP_SetControlPointPositions_UnpackInit::s_pUnpack
 b C_OP_SetControlPointToCenter_UnpackInit::s_pUnpack
 b C_OP_SetControlPointToPlayer_UnpackInit::s_pUnpack
 b C_OP_SpinUpdate_UnpackInit::s_pUnpack
 b C_OP_SpinYaw_UnpackInit::s_pUnpack
 b C_OP_Spin_UnpackInit::s_pUnpack
 b C_OP_TwistAroundAxis_UnpackInit::s_pUnpack
 b C_OP_VectorNoise_UnpackInit::s_pUnpack
 b C_OP_VelocityDecay_UnpackInit::s_pUnpack
 b C_OP_VelocityMatchingForce_UnpackInit::s_pUnpack
 b C_OP_WorldCollideConstraint_UnpackInit::s_pUnpack
 b C_OP_WorldTraceConstraint_UnpackInit::s_pUnpack
 b C_PlayerResource::GetTeamColor(int)::blah
 b C_PointCamera::GetToolRecordingState(KeyValues*)::state
 b C_Sprite::GetRenderOrigin()::vOrigin
 b C_Sprite::GetToolRecordingState(KeyValues*)::state
 b C_SpriteTrail::GetRenderOrigin()::vOrigin
 b CalcLocalHierarchyAnimation(CStudioHdr const*, matrix3x4_t*, CBoneBitList&, Vector*, Quaternion*, mstudiobone_t const*, mstudiolocalhierarchy_t*, int, int, float, int, float, int)::rootXform
 b ClientEffectPrecacheSystem()::s_ClientEffectPrecacheSystem
 b ClientEffectReg_AR2ExplosionCallback
 b ClientEffectReg_AR2ImpactCallback
 b ClientEffectReg_AR2TracerCallback
 b ClientEffectReg_AirboatGunHeavyTracerCallback
 b ClientEffectReg_AirboatGunTracerCallback
 b ClientEffectReg_AirboatMuzzleFlashCallback
 b ClientEffectReg_AntlionGibCallback
 b ClientEffectReg_BloodImpactCallback
 b ClientEffectReg_BloodSplatCallback
 b ClientEffectReg_BloodSprayCallback
 b ClientEffectReg_ChopperMuzzleFlashCallback
 b ClientEffectReg_CombineBallExplosionCallback
 b ClientEffectReg_CombineBallImpactCallback
 b ClientEffectReg_CommandPointerCallback
 b ClientEffectReg_CrosshairLoadCallback
 b ClientEffectReg_DispelCallback
 b ClientEffectReg_ExplosionCallback
 b ClientEffectReg_FX_BuildTeslaHitbox
 b ClientEffectReg_FX_BuildTeslaZap
 b ClientEffectReg_GaussTracerCallback
 b ClientEffectReg_GlassImpactCallback
 b ClientEffectReg_GunshipImpactCallback
 b ClientEffectReg_GunshipMuzzleFlashCallback
 b ClientEffectReg_GunshipTracerCallback
 b ClientEffectReg_GunshotSplashCallback
 b ClientEffectReg_HelicopterMegaBombCallback
 b ClientEffectReg_HelicopterTracerCallback
 b ClientEffectReg_HunterDamageCallback
 b ClientEffectReg_HunterMuzzleFlashCallback
 b ClientEffectReg_HunterTracerCallback
 b ClientEffectReg_ImpactAirboatGunCallback
 b ClientEffectReg_ImpactCallback
 b ClientEffectReg_ImpactGaussCallback
 b ClientEffectReg_ImpactGunshipCallback
 b ClientEffectReg_ImpactHelicopterCallback
 b ClientEffectReg_ImpactJeepCallback
 b ClientEffectReg_ManhackSparkCallback
 b ClientEffectReg_MuzzleFlashCallback
 b ClientEffectReg_ParticleEffectCallback
 b ClientEffectReg_ParticleEffectStopCallback
 b ClientEffectReg_ParticleTracerCallback
 b ClientEffectReg_RPGShotDownCallback
 b ClientEffectReg_RagdollImpactCallback
 b ClientEffectReg_RifleShellEjectCallback
 b ClientEffectReg_RippleCallback
 b ClientEffectReg_ShakeRopesCallback
 b ClientEffectReg_ShellEjectCallback
 b ClientEffectReg_ShotgunShellEjectCallback
 b ClientEffectReg_SmokeCallback
 b ClientEffectReg_SplashCallback
 b ClientEffectReg_StickyBoltCallback
 b ClientEffectReg_StriderBloodCallback
 b ClientEffectReg_StriderMuzzleFlashCallback
 b ClientEffectReg_StriderTracerCallback
 b ClientEffectReg_ThumperDustCallback
 b ClientEffectReg_TracerCallback
 b ClientEffectReg_TracerSoundCallback
 b ClientEffectReg_WaterSurfaceExplosionCallback
 b ClientEffectReg_WheelDustCallback
 b Command_Playgamesound
 b ConVarRef::Init(char const*, bool)::bFirst
 b CreateStuckTable()::firsttime
 b DescribeAxis(int)::sz
 b DevMsgRT(char const*, ...)::string
 b DoEnginePostProcessing(int, int, int, int, bool, bool)::bFirstFrame
 b DoImageSpaceMotionBlur(CViewSetup const&, int, int, int, int)::s_flLastTimeUpdate
 b DoImageSpaceMotionBlur(CViewSetup const&, int, int, int, int)::s_flNoRotationalMotionBlurUntil
 b DoImageSpaceMotionBlur(CViewSetup const&, int, int, int, int)::s_flPreviousPitch
 b DoImageSpaceMotionBlur(CViewSetup const&, int, int, int, int)::s_flPreviousYaw
 b DoImageSpaceMotionBlur(CViewSetup const&, int, int, int, int)::s_mPreviousFrameBasisVectors
 b DoImageSpaceMotionBlur(CViewSetup const&, int, int, int, int)::s_vPreviousPositon
 b DrawBeamFollow(model_t const*, BeamTrail_t*, int, int, Vector&, Vector&, Vector&, float, Vector const&, int, float, float, float, float*, float)::nHDRColorScaleCache
 b DrawBloomDebugBoxes(IMatRenderContext*)::wx
 b DrawCylinder(int, float*, model_t const*, float, int, Vector const&, Vector const&, float, float, float, float, int, float*, float)::nHDRColorScaleCache
 b DrawDisk(int, float*, model_t const*, float, int, Vector const&, Vector const&, float, float, float, float, int, float*, float)::nHDRColorScaleCache
 b DrawHalo(IMaterial*, Vector const&, float, float const*, float)::nHDRColorScaleCache
 b DrawPyroVignette(int, int, int, int, float, float, float, float, void*)::bInit
 b DrawPyroVignette(int, int, int, int, float, float, float, float, void*)::nNextSide
 b DrawRing(int, float*, void (*)(float*, int, float), model_t const*, float, int, Vector const&, Vector const&, float, float, float, float, int, float*, float)::nHDRColorScaleCache
 b DrawSegs(int, float*, model_t const*, float, int, Vector const&, Vector const&, float, float, float, float, float, int, int, float*, float, float)::nHDRColorScaleCache
 b DrawSplineSegs(int, float*, model_t const*, model_t const*, float, float, int, int, Vector*, float, float, float, float, float, int, int, float*, float, float)::nHDRColorScaleCache
 b DrawTeslaSegs(int, float*, model_t const*, float, int, Vector const&, Vector const&, float, float, float, float, float, int, int, float*, float, float)::nHDRColorScaleCache
 b DumpTGAofRenderTarget(int, int, char const*)::mat_queue_mode
 b GetAmmoDef()::bInitted
 b GetAmmoDef()::def
 b GetAutoPlayTime()::g_prevTicks
 b GetAutoPlayTime()::g_time
 b GetClassMap()::g_Classmap
 b GetClientInterpAmount()::pUpdateRate
 b GetClientModeNormal()::g_ClientModeNormal
 b GetPanelAnimationDictionary()::dictionary
 b GetPanelMessageMapDictionary()::dictionary
 b GetPhysObjSaveRestoreOps(PhysInterfaceId_t)::inited
 b GetSequenceLinearMotion(CStudioHdr*, int, float const*, Vector*)::msgCount
 b ImageLoader::GammaCorrectRGBA8888(unsigned char*, unsigned char*, int, int, int, float, float)::gamma
 b ImageLoader::ResampleRGBA8888(ImageLoader::ResampleInfo_t const&)::gammaToLinear
 b ImageLoader::ResampleRGBA8888(ImageLoader::ResampleInfo_t const&)::kernelCache
 b ImageLoader::ResampleRGBA8888(ImageLoader::ResampleInfo_t const&)::pInvKernelCache
 b InitializeCharacterSets()::s_CharacterSetInitialized
 b Is_CAM_ThirdPerson_MayaMode()::s_b_CAM_ThirdPerson_MayaMode
 b KeyValues::SaveKeyToFile(KeyValues*, IBaseFileSystem*, void*, CUtlBuffer*, int, bool, bool)::buf
 b PanelMetaClassMgr()::s_MetaClassMgrImp
 b ParseTokenFromString(char const**)::buf
 b ParticleChildrenInfo_t_UnpackInit::s_pUnpack
 b ParticleMgr()::s_ParticleMgr
 b PyroSides
 b SavedLinearLightMapScale
 b Test_ProxyToggle_EnsureValue_command
 b UTIL_SafeName(char const*)::safeName
 b VGui_OneTimeInit()::initialized
 b V_pretifymem(float, int, bool)::current
 b V_pretifymem(float, int, bool)::output
 b VarArgs(char const*, ...)::string
 b WALL_MAX
 b WALL_MIN
 b WaveTrace(char const*, char const*)::s_WaveTrace
 b _ZL8ice_sbox.0
 b _ZL8ice_sbox.1
 b _ZL8ice_sbox.2
 b _ZL8ice_sbox.3
 b __g_CClientDLLSharedAppSystems_singleton
 b __g_CGameClientExports_singleton
 b __g_C_TEAntlionDust
 b __g_C_TEArmorRicochet
 b __g_C_TEBSPDecal
 b __g_C_TEBeamEntPoint
 b __g_C_TEBeamEnts
 b __g_C_TEBeamFollow
 b __g_C_TEBeamLaser
 b __g_C_TEBeamPoints
 b __g_C_TEBeamRing
 b __g_C_TEBeamRingPoint
 b __g_C_TEBeamSpline
 b __g_C_TEBloodSprite
 b __g_C_TEBloodStream
 b __g_C_TEBreakModel
 b __g_C_TEBubbleTrail
 b __g_C_TEBubbles
 b __g_C_TEClientProjectile
 b __g_C_TEConcussiveExplosion
 b __g_C_TEDecal
 b __g_C_TEDust
 b __g_C_TEDynamicLight
 b __g_C_TEEffectDispatch
 b __g_C_TEEnergySplash
 b __g_C_TEExplosion
 b __g_C_TEFizz
 b __g_C_TEFootprintDecal
 b __g_C_TEGaussExplosion
 b __g_C_TEGlowSprite
 b __g_C_TEImpact
 b __g_C_TEKillPlayerAttachments
 b __g_C_TELargeFunnel
 b __g_C_TEMetalSparks
 b __g_C_TEMuzzleFlash
 b __g_C_TEPhysicsProp
 b __g_C_TEPlayerDecal
 b __g_C_TEProjectedDecal
 b __g_C_TEShatterSurface
 b __g_C_TEShowLine
 b __g_C_TESmoke
 b __g_C_TESparks
 b __g_C_TESprite
 b __g_C_TESpriteSpray
 b __g_C_TEWorldDecal
 b __g_CreateCAbsProxy_reg
 b __g_CreateCAddProxy_reg
 b __g_CreateCAlphaMaterialProxy_reg
 b __g_CreateCAnimateSpecificTexture_reg
 b __g_CreateCAnimatedEntityTextureProxy_reg
 b __g_CreateCAnimatedOffsetTextureProxy_reg
 b __g_CreateCAnimatedTextureProxy_reg
 b __g_CreateCBaseToggleTextureProxy_reg
 b __g_CreateCBreakableSurfaceProxy_reg
 b __g_CreateCCamoMaterialProxy_reg
 b __g_CreateCCenterPrintICenterPrint_reg
 b __g_CreateCClampProxy_reg
 b __g_CreateCClientDLLSharedAppSystemsIClientDLLSharedAppSystems_reg
 b __g_CreateCClientEntityListIClientEntityList_reg
 b __g_CreateCClientLeafSystemIClientLeafSystem_reg
 b __g_CreateCClientToolsIClientTools_reg
 b __g_CreateCClientVirtualRealityIClientVirtualReality_reg
 b __g_CreateCConveyorMaterialProxy_reg
 b __g_CreateCDivideProxy_reg
 b __g_CreateCDummyMaterialProxy_reg
 b __g_CreateCEffectsClientIEffects_reg
 b __g_CreateCEmptyProxy_reg
 b __g_CreateCEnginePostMaterialProxy_reg
 b __g_CreateCEntityOriginAlyxMaterialProxy_reg
 b __g_CreateCEntityOriginMaterialProxy_reg
 b __g_CreateCEntityRandomProxy_reg
 b __g_CreateCEntitySpeedProxy_reg
 b __g_CreateCEp1IntroVortRefractMaterialProxy_reg
 b __g_CreateCEqualsProxy_reg
 b __g_CreateCExponentialProxy_reg
 b __g_CreateCFracProxy_reg
 b __g_CreateCGameClientExportsIGameClientExports_reg
 b __g_CreateCGameMovementIGameMovement_reg
 b __g_CreateCGaussianNoiseProxy_reg
 b __g_CreateCHLClientIBaseClientDLL_reg
 b __g_CreateCHeliBladeMaterialProxy_reg
 b __g_CreateCIntProxy_reg
 b __g_CreateCLampBeamProxy_reg
 b __g_CreateCLampHaloProxy_reg
 b __g_CreateCLessOrEqualProxy_reg
 b __g_CreateCLinearRampProxy_reg
 b __g_CreateCMaterialModifyAnimatedProxy_reg
 b __g_CreateCMaterialModifyProxy_reg
 b __g_CreateCMatrixRotateProxy_reg
 b __g_CreateCMotionBlurMaterialProxy_reg
 b __g_CreateCMultiplyProxy_reg
 b __g_CreateCParticleSystemQueryIParticleSystemQuery_reg
 b __g_CreateCPlayerLogoProxy_reg
 b __g_CreateCPlayerPositionProxy_reg
 b __g_CreateCPlayerProximityProxy_reg
 b __g_CreateCPlayerSpeedProxy_reg
 b __g_CreateCPlayerTeamMatchProxy_reg
 b __g_CreateCPlayerViewProxy_reg
 b __g_CreateCPredictionIPrediction_reg
 b __g_CreateCProxyHealth_reg
 b __g_CreateCProxyIsNPC_reg
 b __g_CreateCPupilProxy_reg
 b __g_CreateCSelectFirstIfNonZeroProxy_reg
 b __g_CreateCShadowModelProxy_reg
 b __g_CreateCShadowProxy_reg
 b __g_CreateCShieldProxy_reg
 b __g_CreateCSineProxy_reg
 b __g_CreateCSubtractProxy_reg
 b __g_CreateCTextureScrollMaterialProxy_reg
 b __g_CreateCTextureTransformProxy_reg
 b __g_CreateCTimeMaterialProxy_reg
 b __g_CreateCUniformNoiseProxy_reg
 b __g_CreateCVortEmissiveProxy_reg
 b __g_CreateCWaterLODMaterialProxy_reg
 b __g_CreateCWorldDimsProxy_reg
 b __g_CreateCWrapMinMaxProxy_reg
 b __g_CreateParticleSphereProxy_reg
 b __g_GameRulesRegister_CHalfLife2
 b __g_GameRulesRegister_CMultiplayRules
 b achievement_notification_test(CCommand const&)::iCount
 b achievement_notification_test_command
 b anim_3wayblend
 b c_maxdistance
 b c_maxpitch
 b c_maxyaw
 b c_mindistance
 b c_minpitch
 b c_minyaw
 b c_orthoheight
 b c_orthowidth
 b cam_collision
 b cam_command
 b cam_idealdelta
 b cam_ideallag
 b cam_in
 b cam_out
 b cam_pitchdown
 b cam_pitchup
 b cam_showangles
 b cam_snapto
 b cam_yawleft
 b cam_yawright
 b camortho
 b camout
 b cancelselect
 b cc_captiontrace
 b cc_emit_command
 b cc_findsound_command
 b cc_flush_command
 b cc_linger_time
 b cc_minvisibleitems
 b cc_predisplay_time
 b cc_random_command
 b cc_sentencecaptionnorepeat
 b cc_showblocks_command
 b cc_smallfontlength
 b cc_subtitles
 b centerview
 b cl_SetupAllBones
 b cl_animationinfo_command
 b cl_bob
 b cl_bobcycle
 b cl_bobup
 b cl_customsounds
 b cl_demoviewoverride
 b cl_drawleaf
 b cl_drawmaterial
 b cl_drawmonitors
 b cl_dump_particle_stats
 b cl_ent_absbox_command
 b cl_ent_bbox_command
 b cl_ent_rbox_command
 b cl_extrapolate
 b cl_find_ent
 b cl_find_ent_index
 b cl_first_person_uses_world_model
 b cl_idealpitchscale
 b cl_interp_all
 b cl_interp_npcs
 b cl_interp_ratio_var
 b cl_interp_var
 b cl_interpolate
 b cl_leveloverviewmarker
 b cl_maxrenderable_dist
 b cl_new_impact_effects
 b cl_overdraw_test
 b cl_panelanimation_command
 b cl_particle_batch_mode
 b cl_particle_retire_cost
 b cl_particle_stats_start
 b cl_particle_stats_stop
 b cl_particle_stats_trigger_count
 b cl_playerspraydisable
 b cl_pred_optimize
 b cl_pred_track_command
 b cl_predict_var
 b cl_predictionentitydump
 b cl_predictionentitydumpbyclass
 b cl_predictionlist
 b cl_removedecals
 b cl_showbattery
 b cl_showfps
 b cl_showpausedimage
 b cl_showpos
 b cl_smooth
 b cl_smoothtime
 b cl_software_cursor
 b cl_soundemitter_flush_command
 b cl_soundscape_flush_command
 b cl_soundscape_printdebuginfo_command
 b cl_threaded_client_leaf_system
 b debug_postproc
 b dlight_debug_command
 b dropprimary
 b dummyvars
 b endalt1
 b endalt2
 b endattack
 b endattack2
 b endattack3
 b endback
 b endbreak
 b endcamdistance
 b endcamin
 b endcammousemove
 b endcamyawleft
 b endcamyawright
 b endcommandermousemove
 b endduck
 b endforward
 b endgraph
 b endgrenade1
 b endgrenade2
 b endjlook
 b endjump
 b endklook
 b endleft
 b endlookspin
 b endlookup
 b endmovedown
 b endmoveleft
 b endmoveright
 b endmoveup
 b endpitchdown
 b endpitcup
 b endreload
 b endresetcamera
 b endright
 b endscore
 b endshowscores
 b endspeed
 b endstrafe
 b enduse
 b endwalk
 b endzoom
 b f05
 b f3
 b firstperson
 b fog_color
 b fog_colorskybox
 b fog_enable
 b fog_enableskybox
 b fog_end
 b fog_endskybox
 b fog_maxdensity
 b fog_maxdensityskybox
 b fog_override
 b fog_start
 b fog_startskybox
 b force_centerview
 b fov_watcher
 b frameCache
 b fx_drawimpactdebris
 b fx_drawimpactdust
 b fx_drawmetalspark
 b g15_dumpplayer_command
 b g15_reload_command
 b g15_update_msec
 b gNullWeaponInfo
 b gRagdolls
 b g_AR2DustColor1
 b g_AR2DustColor2
 b g_AchievementSaveThread
 b g_AnimatingImagePanel_Helper
 b g_AnimationPropertyConverters
 b g_AntlionDustColor
 b g_BarbedSubdivs
 b g_BoneAccessStack
 b g_BoneAcessBase
 b g_BreakSet
 b g_BreakSetIncludingColons
 b g_BreakableHelper
 b g_BuildModeDialogMgr
 b g_Button_Helper
 b g_CAchievementNotificationPanel_Helper
 b g_CAvatarImagePanel_Helper
 b g_CBaseModelPanel_Helper
 b g_CBitmapImagePanel_Helper
 b g_CBitmapPanel_Helper
 b g_CCommentaryModelPanel_Helper
 b g_CHUDAutoAim_Helper
 b g_CHUDQuickInfo_Helper
 b g_CHudAmmo_Helper
 b g_CHudAnimationInfo_Helper
 b g_CHudBattery_Helper
 b g_CHudChat_Helper
 b g_CHudCloseCaption_Helper
 b g_CHudCommentary_Helper
 b g_CHudCredits_Helper
 b g_CHudCrosshair_Helper
 b g_CHudDamageIndicator_Helper
 b g_CHudDeathNotice_Helper
 b g_CHudFilmDemo_Helper
 b g_CHudGeiger_Helper
 b g_CHudHDRDemo_Helper
 b g_CHudHealth_Helper
 b g_CHudHintDisplay_Helper
 b g_CHudHintKeyDisplay_Helper
 b g_CHudHistoryResource_Helper
 b g_CHudMenu_Helper
 b g_CHudMessage_Helper
 b g_CHudPoisonDamageIndicator_Helper
 b g_CHudPosture_Helper
 b g_CHudSecondaryAmmo_Helper
 b g_CHudSquadStatus_Helper
 b g_CHudSuitPower_Helper
 b g_CHudTrain_Helper
 b g_CHudVehicle_Helper
 b g_CHudWeaponSelection_Helper
 b g_CHudWeapon_Helper
 b g_CHudZoom_Helper
 b g_CIconPanel_Helper
 b g_CMDLPanel_Helper
 b g_CModelPanel_Helper
 b g_CPDumpPanel_Helper
 b g_CTreeViewListControl_Helper
 b g_CenterString
 b g_ChangeTracker
 b g_CheckButton_Helper
 b g_CircularProgressBar_Helper
 b g_CleanupSymbolTable
 b g_ClientSideAnimationList
 b g_ClientSteamContext
 b g_ComboBox_Helper
 b g_ContinuousProgressBar_Helper
 b g_Controller
 b g_ControllerAccelerationHandle
 b g_ControllerBreakingHandle
 b g_ControllerCameraHandle
 b g_ControllerCurrentActionSet
 b g_ControllerDigitalActionState
 b g_ControllerJoystickCameraHandle
 b g_ControllerMoveHandle
 b g_ControllerSteerHandle
 b g_CvarToggleCheckButton_Helper
 b g_DataObjectAccessSystem
 b g_DecalSystem
 b g_DefaultViewVectors
 b g_Divider_Helper
 b g_DragDropCapture
 b g_EZParticleInit
 b g_EdictTouchLinks
 b g_EditablePanel_Helper
 b g_EntityGroundLinks
 b g_ExpandButton_Helper
 b g_FPSPanel
 b g_FullBright_LightValues
 b g_GameMovement
 b g_GameStringPool
 b g_GameUI
 b g_GraphPanel_Helper
 b g_HDR_HistogramSystem
 b g_HLModeManager
 b g_HLMoveData
 b g_HighestActivity
 b g_HighestEvent
 b g_HudTextureMemoryPool
 b g_ImagePanel_Helper
 b g_Input
 b g_InterpolationList
 b g_KBMgr
 b g_KeyValues2ErrorStack
 b g_Label_Helper
 b g_ListPanel_Helper
 b g_ListViewPanel_Helper
 b g_LogFileHandle
 b g_Mathlib_GammaToLinear
 b g_Mathlib_LinearToGamma
 b g_MenuBar_Helper
 b g_MenuButton_Helper
 b g_MenuItem_Helper
 b g_Menu_Helper
 b g_MessageBox_Helper
 b g_MumbleSystem
 b g_NetGraphPanel
 b g_PanelListPanel_Helper
 b g_Panel_Helper
 b g_PhysicsSystem
 b g_PixelVisibilitySystem
 b g_Precipitations
 b g_Predictables
 b g_Prediction
 b g_ProgressBar_Helper
 b g_RadioButton_Helper
 b g_RecipientFilterPredictionSystem
 b g_RecordingList
 b g_RestoredEntities
 b g_RichText_Helper
 b g_RopeCollideTicks
 b g_RopeDrawTicks
 b g_RopeSimulateTicks
 b g_RopeSubdivs
 b g_ScalableImagePanel_Helper
 b g_ScriptSymbols
 b g_ScrollBar_Helper
 b g_ScrollBar_Horizontal_Helper
 b g_ScrollBar_Vertical_Helper
 b g_SectionedListPanel_Helper
 b g_Slider_Helper
 b g_SoundEmitterSystem
 b g_StudioBoneCache
 b g_TESystem
 b g_TeleportList
 b g_TempEnts
 b g_TextEntry_Helper
 b g_ThinkChecker
 b g_ToggleButton_Helper
 b g_ToolFrameworkClient
 b g_TouchTrace
 b g_TreeView_Helper
 b g_URLLabel_Helper
 b g_UserMessages
 b g_ViewEffects
 b g_ViewportClientSystem
 b g_VoiceStatus
 b g_VoiceStatusHelper
 b g_WatcherList
 b g_bAbsRecomputationStack
 b g_bDoThreadedBoneSetup
 b g_bInThreadedBoneSetup
 b g_bRequestCacheUsedMaterials
 b g_bTracingVsCommentaryNodes
 b g_flStartSimTime
 b g_iAbsRecomputationStackPos
 b g_iModelBoneCounter
 b g_matCamInverse
 b g_matCurrentCamInverse
 b g_nDisables
 b g_nKillBufferInUse
 b g_nNumParticlesSimulated
 b g_nNumUSSpentSimulatingParticles
 b g_nParticlesDrawn
 b g_nRopePointsSimulated
 b g_pBeamWireframeMaterial
 b g_pClientWorld
 b g_pClosecaption
 b g_pEmberSingleton
 b g_pFireSingleton
 b g_pFireSmokeSingleton
 b g_pInternalVoiceStatus
 b g_pKillBuffers
 b g_pNextLink
 b g_pPDumpPanel
 b g_pPrecacheRegisters
 b g_pSchemeVisualizer
 b g_pSimpleSingleton
 b g_pSmokeFogMaterial
 b g_pTestObj
 b g_pcv_ThreadMode
 b g_vMotionBlurValues
 b g_vecCurrentRenderAngles
 b g_vecCurrentRenderOrigin
 b g_vecCurrentVForward
 b g_vecCurrentVRight
 b g_vecCurrentVUp
 b g_vecPrevRenderAngles
 b g_vecPrevRenderOrigin
 b g_vecRenderAngles
 b g_vecRenderOrigin
 b g_vecVForward
 b g_vecVRight
 b g_vecVUp
 b getpos_command
 b guard variable for Beam_t::GetRenderOrigin()::org
 b guard variable for Beam_t::RenderableToWorldTransform()::mat
 b guard variable for CClassMap::Lookup(char const*)::lookup
 b guard variable for CClientLeafSystem::ComputeTranslucentRenderLeaf(int, unsigned short const*, short const*, int, int)::orderedList
 b guard variable for CClientLeafSystem::ComputeTranslucentRenderLeaf(int, unsigned short const*, short const*, int, int)::renderablesToUpdate
 b guard variable for CClientShadowMgr::CreateFlashlight(FlashlightState_t const&)::invalidHandle
 b guard variable for CClientShadowMgr::GetShadowDirection() const::s_vecDown
 b guard variable for CClientVirtualReality::Activate()::sdl_displayindex
 b guard variable for CClientVirtualReality::Deactivate()::cl_software_cursor
 b guard variable for CClientVirtualReality::Deactivate()::sdl_displayindex
 b guard variable for CCollisionProperty::CollisionToWorldTransform() const::s_matTemp
 b guard variable for CCurveData::GetBoundedSample(ICurveDataAccessor*, int, bool&)::nullend
 b guard variable for CCurveData::GetBoundedSample(ICurveDataAccessor*, int, bool&)::nullstart
 b guard variable for CDetailModel::RenderableToWorldTransform()::mat
 b guard variable for CFlexAnimationTrack::GetBoundedSample(int, bool&, int)::nullend
 b guard variable for CFlexAnimationTrack::GetBoundedSample(int, bool&, int)::nullstart
 b guard variable for CInput::CAM_Think()::s_oldAngles
 b guard variable for CInput::Joystick_Advanced()::s_joy_legacy
 b guard variable for CInput::Joystick_Advanced()::var
 b guard variable for CInput::SteamControllerMove(float, CUserCmd*)::joy_variable_frametime
 b guard variable for CInput::SteamControllerMove(float, CUserCmd*)::s_joy_pitchsensitivity
 b guard variable for CInput::SteamControllerMove(float, CUserCmd*)::s_joy_yawsensitivity
 b guard variable for CModelPanel::Paint()::white
 b guard variable for CNewParticleEffect::RecordControlPointOrientation(int)::state
 b guard variable for CNewParticleEffect::SetControlPoint(int, Vector const&)::state
 b guard variable for CParticleEffectBinding::RenderableToWorldTransform()::mat
 b guard variable for CRendering3dView::DrawWorld(float)::_counter
 b guard variable for CRumbleEffects::StartEffect(unsigned char, unsigned char, unsigned char)::joy_vibration
 b guard variable for CRumbleEffects::UpdateEffects(float)::joy_vibration
 b guard variable for CSimpleEmitter::UpdateColor(SimpleParticle const*)::cColor
 b guard variable for CViewRender::DrawOneMonitor(ITexture*, int, C_PointCamera*, CViewSetup const&, C_BasePlayer*, int, int, int, int)::_counter
 b guard variable for CViewRender::Render(vrect_t*)::sv_restrict_aspect_ratio_fov
 b guard variable for CViewRender::UpdateShadowDepthTexture(ITexture*, ITexture*, CViewSetup const&)::_counter
 b guard variable for C_BaseCombatWeapon::GetBulletSpread()::cone
 b guard variable for C_BaseEntity::CheckCLInterpChanged()::flLastValue_Interp
 b guard variable for C_BaseEntity::CheckCLInterpChanged()::flLastValue_InterpNPCs
 b guard variable for C_BaseEntity::GetToolRecordingState(KeyValues*)::state
 b guard variable for C_BaseEntity::RestoreData(char const*, int, int)::pwatchent
 b guard variable for C_BaseEntity::SaveData(char const*, int, int)::pwatchent
 b guard variable for C_BaseFlex::GetToolRecordingState(KeyValues*)::state
 b guard variable for C_BasePlayer::EyeAngles()::angEyeWorld
 b guard variable for C_BasePlayer::GetToolRecordingState(KeyValues*)::state
 b guard variable for C_BasePlayer::ShouldDrawLocalPlayer()::vr_first_person_uses_world_model
 b guard variable for C_BasePlayer::ShouldDrawThisPlayer()::vr_first_person_uses_world_model
 b guard variable for C_Beam::GetAbsEndPos() const::vecEndAbsPosition
 b guard variable for C_Beam::GetAbsStartPos() const::vecStartAbsPosition
 b guard variable for C_EnvelopeFX::RenderableToWorldTransform()::mat
 b guard variable for C_Hairball::ClientThink()::flYSpeed
 b guard variable for C_PlayerResource::GetTeamColor(int)::blah
 b guard variable for C_PointCamera::GetToolRecordingState(KeyValues*)::state
 b guard variable for C_Sprite::GetRenderOrigin()::vOrigin
 b guard variable for C_Sprite::GetToolRecordingState(KeyValues*)::state
 b guard variable for C_SpriteTrail::GetRenderOrigin()::vOrigin
 b guard variable for CalcLocalHierarchyAnimation(CStudioHdr const*, matrix3x4_t*, CBoneBitList&, Vector*, Quaternion*, mstudiobone_t const*, mstudiolocalhierarchy_t*, int, int, float, int, float, int)::rootXform
 b guard variable for ClientEffectPrecacheSystem()::s_ClientEffectPrecacheSystem
 b guard variable for DoImageSpaceMotionBlur(CViewSetup const&, int, int, int, int)::s_mPreviousFrameBasisVectors
 b guard variable for DumpTGAofRenderTarget(int, int, char const*)::mat_queue_mode
 b guard variable for GetAmmoDef()::def
 b guard variable for GetClassMap()::g_Classmap
 b guard variable for GetClientInterpAmount()::pUpdateRate
 b guard variable for GetClientModeNormal()::g_ClientModeNormal
 b guard variable for GetPanelAnimationDictionary()::dictionary
 b guard variable for GetPanelMessageMapDictionary()::dictionary
 b guard variable for PanelMetaClassMgr()::s_MetaClassMgrImp
 b guard variable for ParticleMgr()::s_ParticleMgr
 b guard variable for WaveTrace(char const*, char const*)::s_WaveTrace
 b guard variable for vgui::Button::DoClick()::vgui_nav_lock
 b guard variable for vgui::EditablePanel::OnKeyCodePressed(ButtonCode_t)::vgui_nav_lock_default_button
 b guard variable for vgui::GetAnimationController()::s_pAnimationController
 b guard variable for vgui::GetPanelKeyBindingMapDictionary()::dictionary
 b guard variable for vgui::Panel::OnKeyCodePressed(ButtonCode_t)::vgui_nav_lock
 b hidepanel_command
 b hud_deathnotice_time
 b hud_quickinfo
 b hud_reloadscheme_command
 b hullcolor
 b ice_sboxes_initialised
 b impulse
 b in_alt1
 b in_alt2
 b in_attack
 b in_attack2
 b in_attack3
 b in_break
 b in_cancel
 b in_down
 b in_duck
 b in_grenade1
 b in_grenade2
 b in_impulse
 b in_jump
 b in_klook
 b in_lookdown
 b in_lookup
 b in_reload
 b in_score
 b in_up
 b in_use
 b in_usekeyboardsampletime
 b in_zoom
 b invnext
 b invprev
 b joy_accelmax
 b joy_accelscale
 b joy_advanced
 b joy_advaxisr
 b joy_advaxisu
 b joy_advaxisv
 b joy_advaxisx
 b joy_advaxisy
 b joy_advaxisz
 b joy_autoaimdampen
 b joy_autoaimdampenrange
 b joy_diagonalpov
 b joy_display_input
 b joy_forwardsensitivity
 b joy_forwardthreshold
 b joy_invertx
 b joy_inverty
 b joy_inverty_default
 b joy_legacy
 b joy_lookspin_default
 b joy_lowend
 b joy_lowmap
 b joy_movement_stick
 b joy_movement_stick_default
 b joy_name
 b joy_pitchsensitivity
 b joy_pitchsensitivity_default
 b joy_pitchthreshold
 b joy_response_look
 b joy_response_move
 b joy_sidesensitivity
 b joy_sidethreshold
 b joy_steamcontroller_cfg_loaded
 b joy_variable_frametime
 b joy_vehicle_turn_lowend
 b joy_vehicle_turn_lowmap
 b joy_vibration
 b joy_wwhack2
 b joy_xcontroller_cfg_loaded
 b joy_yawsensitivity
 b joy_yawsensitivity_default
 b joy_yawthreshold
 b joyadvancedupdate
 b lastinv
 b lineartoscreen
 b lineartotexture
 b lookdown
 b m_ActivityRemapDatabase
 b m_WeaponInfoDatabase
 b m_customaccel
 b m_customaccel_exponent
 b m_customaccel_max
 b m_customaccel_scale
 b m_filter
 b m_forward
 b m_mouseaccel1
 b m_mouseaccel2
 b m_mousespeed
 b m_rawinput
 b m_side
 b m_yaw
 b mat_autoexposure_max
 b mat_autoexposure_min
 b mat_bloom_scalefactor_scalar
 b mat_camerarendertargetoverlaysize
 b mat_clipz
 b mat_colcorrection_disableentities
 b mat_depthbias_shadowmap
 b mat_drawTexture
 b mat_drawTextureScale
 b mat_drawwater
 b mat_dump_rts
 b mat_dynamic_tonemapping
 b mat_force_tonemap_scale
 b mat_framebuffercopyoverlaysize
 b mat_fullbright
 b mat_hsv
 b mat_normals
 b mat_postprocess_x
 b mat_postprocess_y
 b mat_postprocessing_combine
 b mat_reduceparticles
 b mat_show_ab_hdr
 b mat_show_histogram
 b mat_showcamerarendertarget
 b mat_showframebuffertexture
 b mat_showwatertextures
 b mat_slopescaledepthbias_shadowmap
 b mat_software_aa_blur_one_pixel_lines
 b mat_software_aa_debug
 b mat_software_aa_edge_threshold
 b mat_software_aa_quality
 b mat_software_aa_strength
 b mat_software_aa_strength_vgui
 b mat_software_aa_tap_offset
 b mat_softwareskin
 b mat_tonemapping_occlusion_use_stencil
 b mat_wateroverlaysize
 b mat_yuv
 b mod_load_showstall
 b nFrameNumber
 b nPropBreakablesPerFrameCount
 b net_graph
 b net_graphheight
 b net_graphmsecs
 b net_graphpos
 b net_graphproportionalfont
 b net_graphshowinterp
 b net_graphshowlatency
 b net_graphsolid
 b net_graphtext
 b net_scale
 b option_duck_method_default
 b overview_mode_command
 b overview_zoom_command
 b particle_sim_alt_cores
 b particle_simulateoverflow
 b perfvisualbenchmark
 b perfvisualbenchmark_abort
 b pixelvis_debug_command
 b playsoundscape_command
 b playvideo_command
 b playvideo_exitcommand_command
 b posedebuggerend
 b posedebuggerstart
 b pwatchent
 b pwatchvar
 b r_3dsky
 b r_ForceWaterLeaf
 b r_PortalTestEnts
 b r_SnowColorBlue
 b r_SnowColorGreen
 b r_SnowColorRed
 b r_SnowDebugBox
 b r_SnowEnable
 b r_SnowEndAlpha
 b r_SnowEndSize
 b r_SnowFallSpeed
 b r_SnowInsideRadius
 b r_SnowOutsideRadius
 b r_SnowParticles
 b r_SnowPosScale
 b r_SnowRayEnable
 b r_SnowRayLength
 b r_SnowRayRadius
 b r_SnowSpeedScale
 b r_SnowStartAlpha
 b r_SnowStartSize
 b r_SnowWindScale
 b r_SnowZoomOffset
 b r_SnowZoomRadius
 b r_WaterDrawReflection
 b r_WaterDrawRefraction
 b r_cheapwaterend_command
 b r_cheapwaterstart_command
 b r_debugcheapwater
 b r_drawentities
 b r_drawflecks
 b r_drawopaquerenderables
 b r_drawopaqueworld
 b r_drawrenderboxes
 b r_drawropes
 b r_drawtranslucentrenderables
 b r_drawtranslucentworld
 b r_eyeglintlodpixels
 b r_eyegloss
 b r_eyemove
 b r_eyes
 b r_eyeshift_x
 b r_eyeshift_y
 b r_eyeshift_z
 b r_eyesize
 b r_eyewaterepsilon
 b r_farz
 b r_flashlight_version2
 b r_flashlightambient
 b r_flashlightconstant
 b r_flashlightdrawdepth
 b r_flashlightdrawfrustum
 b r_flashlightfar
 b r_flashlightfov
 b r_flashlightladderdist
 b r_flashlightlinear
 b r_flashlightlockposition
 b r_flashlightmodels
 b r_flashlightnear
 b r_flashlightoffsetx
 b r_flashlightoffsety
 b r_flashlightoffsetz
 b r_flashlightquadratic
 b r_flashlightshadowatten
 b r_flashlightvisualizetrace
 b r_flex
 b r_mapextents
 b r_maxmodeldecal
 b r_modelwireframedecal
 b r_newflashlight
 b r_nohw
 b r_nosw
 b r_particle_sim_spike_threshold_ms
 b r_particle_timescale
 b r_portalsopenall
 b r_queued_post_processing
 b r_queued_ropes
 b r_rootlod
 b r_rope_holiday_light_scale
 b r_ropes_holiday_lights_allowed
 b r_ropetranslucent
 b r_screenfademaxsize
 b r_screenfademinsize
 b r_screenoverlay_command
 b r_shadowangles_command
 b r_shadowblobbycutoff_command
 b r_shadowcolor_command
 b r_shadowdir_command
 b r_shadowdist_command
 b r_shadowmaxrendered
 b r_shadowrendertotexture
 b r_shadows
 b r_shadows_gamecontrol
 b r_showenvcubemap
 b r_skin
 b r_skybox
 b r_studio_stats
 b r_studio_stats_lock
 b r_studio_stats_mode
 b r_swingflashlight
 b r_teeth
 b r_threaded_particles
 b r_threaded_renderables
 b r_visocclusion
 b r_waterforceexpensive
 b r_waterforcereflectentities
 b ragdoll_sleepaftertime
 b report_soundpatch_command
 b rope_averagelight
 b rope_collide
 b rope_rendersolid
 b rope_shake
 b rope_smooth
 b rope_smooth_enlarge
 b rope_smooth_maxalpha
 b rope_smooth_maxalphawidth
 b rope_smooth_minalpha
 b rope_smooth_minwidth
 b rope_solid_maxalpha
 b rope_solid_maxwidth
 b rope_solid_minalpha
 b rope_solid_minwidth
 b rope_subdiv
 b rope_wind_dist
 b s_BoneMutex
 b s_BraceCharacters
 b s_BreakSet
 b s_BuildReverseMap
 b s_CV_ShowParticleCounts
 b s_C_INIT_AgeNoiseFactory
 b s_C_INIT_CreateAlongPathFactory
 b s_C_INIT_CreateFromParentParticlesFactory
 b s_C_INIT_CreateFromPlaneCacheFactory
 b s_C_INIT_CreateInHierarchyFactory
 b s_C_INIT_CreateOnModelFactory
 b s_C_INIT_CreateSequentialPathFactory
 b s_C_INIT_CreateWithinBoxFactory
 b s_C_INIT_CreateWithinSphereFactory
 b s_C_INIT_CreationNoiseFactory
 b s_C_INIT_DistanceToCPInitFactory
 b s_C_INIT_InheritVelocityFactory
 b s_C_INIT_InitialRepulsionVelocityFactory
 b s_C_INIT_InitialVelocityNoiseFactory
 b s_C_INIT_LifespanFromVelocityFactory
 b s_C_INIT_MoveBetweenPointsFactory
 b s_C_INIT_PositionOffsetFactory
 b s_C_INIT_PositionWarpFactory
 b s_C_INIT_RandomAlphaFactory
 b s_C_INIT_RandomColorFactory
 b s_C_INIT_RandomLifeTimeFactory
 b s_C_INIT_RandomRadiusFactory
 b s_C_INIT_RandomRotationFactory
 b s_C_INIT_RandomRotationSpeedFactory
 b s_C_INIT_RandomSecondSequenceFactory
 b s_C_INIT_RandomSequenceFactory
 b s_C_INIT_RandomTrailLengthFactory
 b s_C_INIT_RandomYawFactory
 b s_C_INIT_RandomYawFlipFactory
 b s_C_INIT_RemapCPtoScalarFactory
 b s_C_INIT_RemapCPtoVectorFactory
 b s_C_INIT_RemapScalarFactory
 b s_C_INIT_RemapScalarToVectorFactory
 b s_C_INIT_SequenceLifeTimeFactory
 b s_C_INIT_VelocityRandomFactory
 b s_C_OP_AttractToControlPointFactory
 b s_C_OP_BasicMovementFactory
 b s_C_OP_ColorInterpolateFactory
 b s_C_OP_ConstrainDistanceFactory
 b s_C_OP_ConstrainDistanceToPathFactory
 b s_C_OP_ContinuousEmitterFactory
 b s_C_OP_ControlpointLightFactory
 b s_C_OP_CullFactory
 b s_C_OP_DampenToCPFactory
 b s_C_OP_DecayFactory
 b s_C_OP_DistanceBetweenCPsFactory
 b s_C_OP_DistanceToCPFactory
 b s_C_OP_FadeAndKillFactory
 b s_C_OP_FadeInFactory
 b s_C_OP_FadeOutFactory
 b s_C_OP_InstantaneousEmitterFactory
 b s_C_OP_InterpolateRadiusFactory
 b s_C_OP_LockToBoneFactory
 b s_C_OP_MaintainSequentialPathFactory
 b s_C_OP_MaxVelocityFactory
 b s_C_OP_ModelCullFactory
 b s_C_OP_MovementRotateParticleAroundAxisFactory
 b s_C_OP_NoiseEmitterFactory
 b s_C_OP_NoiseFactory
 b s_C_OP_Orient2DRelToCPFactory
 b s_C_OP_OrientTo2dDirectionFactory
 b s_C_OP_OscillateScalarFactory
 b s_C_OP_OscillateVectorFactory
 b s_C_OP_PerParticleEmitterFactory
 b s_C_OP_PlanarConstraintFactory
 b s_C_OP_PlaneCullFactory
 b s_C_OP_PositionLockFactory
 b s_C_OP_RandomForceFactory
 b s_C_OP_RemapCPtoScalarFactory
 b s_C_OP_RemapDotProductToScalarFactory
 b s_C_OP_RemapScalarFactory
 b s_C_OP_RemapSpeedtoCPFactory
 b s_C_OP_RenderPointsFactory
 b s_C_OP_RenderRopeFactory
 b s_C_OP_RenderScreenVelocityRotateFactory
 b s_C_OP_RenderSpritesFactory
 b s_C_OP_RenderSpritesTrailFactory
 b s_C_OP_SetChildControlPointsFactory
 b s_C_OP_SetControlPointPositionsFactory
 b s_C_OP_SetControlPointToCenterFactory
 b s_C_OP_SetControlPointToPlayerFactory
 b s_C_OP_SpinFactory
 b s_C_OP_SpinUpdateFactory
 b s_C_OP_SpinYawFactory
 b s_C_OP_TwistAroundAxisFactory
 b s_C_OP_VectorNoiseFactory
 b s_C_OP_VelocityDecayFactory
 b s_C_OP_VelocityMatchingForceFactory
 b s_C_OP_WorldCollideConstraintFactory
 b s_C_OP_WorldTraceConstraintFactory
 b s_ClearInputState
 b s_ClientShadowMgr
 b s_ClientTools
 b s_ColorCorrectionMgr
 b s_CombatCharVisCache
 b s_DemoAngle
 b s_DemoView
 b s_DetailObjectSystem
 b s_DirtyKDTree
 b s_EffectClient
 b s_EmptyConVar
 b s_EntityList
 b s_FadePlaneDirections
 b s_GameStats_Singleton
 b s_GameSystems
 b s_GameSystemsPerFrame
 b s_GaussianRandomStream
 b s_HLTVCamera
 b s_LastEntityReasonableEmitTime
 b s_LightMutex
 b s_MoveHelperClient
 b s_NPCShadowBoneSetups
 b s_NonNPCShadowBoneSetups
 b s_OrientationRelativeTraceVectors
 b s_ParticleSystemMgr
 b s_PerfVisualBenchmark
 b s_PhysPropList
 b s_PoseDebuggerImpl
 b s_RespawnZoneList
 b s_RopeManager
 b s_SIMDRandContexts
 b s_SortedIndexList
 b s_StartDirContexts
 b s_StudioRenderConfig
 b s_TeenyTextures
 b s_ViewRenderBeams
 b s_VisibleShadowList
 b s_bAllocatorInitialized
 b s_bBuiltBreakSet
 b s_bConnected
 b s_bInDMXContext
 b s_bMMXEnabled
 b s_bMaterialsInitialized
 b s_bRegistered
 b s_bRunningWithDebugModules
 b s_bSSE2Enabled
 b s_bSSEEnabled
 b s_bScreenEffectTextureIsUpdated
 b s_bSuppressRebindChecks
 b s_bSystemsInitted
 b s_basePresence
 b s_cl_class
 b s_cl_team
 b s_currentSortingColumnTypeIsText
 b s_detailController
 b s_factories
 b s_flThreadedPSystemTimeStep
 b s_iTooltipWindowCount
 b s_nCVarFlag
 b s_nHDRColorScaleCache
 b s_nInAverage
 b s_nRTIndex
 b s_nRandContextsInUse
 b s_pCameraTexture
 b s_pClassLists
 b s_pCurrentSortingColumn
 b s_pCurrentSortingListPanel
 b s_pFullFrameDepthTexture
 b s_pFullFrameFrameBufferTexture
 b s_pFullscreenTexture
 b s_pLocalPlayer
 b s_pMapName
 b s_pPerFrameSystemList
 b s_pPowerOfTwoFrameBufferTexture
 b s_pQuarterSizedFB0
 b s_pQuarterSizedFB1
 b s_pSmallBufferHDR0
 b s_pSmallBufferHDR1
 b s_pSnowFallMgr
 b s_pSortFunc
 b s_pSystemList
 b s_pTokenBuf
 b s_pVertexColor
 b s_pVertexColorIgnoreZ
 b s_pWaterReflectionTexture
 b s_pWaterRefractionTexture
 b s_pWireframe
 b s_pWireframeIgnoreZ
 b s_szPseudoUniqueID
 b s_szSaveFileName
 b s_szStatUploadRegistryKeyName
 b s_vecSlimeColor
 b s_vecWindVelocity
 b sc_enable
 b sc_flashlight_command
 b sc_force_action_manifest_command
 b sc_joystick_inner_deadzone_scale
 b sc_joystick_outer_deadzone_scale
 b sc_load_quick_command
 b sc_mouse_sensitivity
 b sc_pitch_sensitivity
 b sc_pitch_sensitivity_default
 b sc_save_quick_command
 b sc_squad_command
 b sc_yaw_sensitivity
 b sc_yaw_sensitivity_default
 b scene_print
 b scr_centertime
 b shake_show
 b shake_stop
 b showinfo_command
 b showpanel_command
 b showschemevisualizer_command
 b slot0
 b slot1
 b slot10
 b slot2
 b slot3
 b slot4
 b slot5
 b slot6
 b slot7
 b slot8
 b slot9
 b smoothstairs
 b snapto
 b soundpatch_captionlength
 b soundscape_dumpclient
 b spec_mode_command
 b spec_next_command
 b spec_player_command
 b spec_pos_command
 b spec_prev_command
 b spec_track
 b split_postproc
 b spriteOrientationCache
 b spriteOriginCache
 b startalt1
 b startalt2
 b startattack
 b startattack2
 b startattack3
 b startback
 b startbreak
 b startcamdistance
 b startcamin
 b startcammousemove
 b startcamout
 b startcamyawleft
 b startcamyawright
 b startcommandermousemove
 b startduck
 b startforward
 b startgraph
 b startgrenade1
 b startgrenade2
 b startjlook
 b startjump
 b startklook
 b startleft
 b startlookdown
 b startlookspin
 b startlookup
 b startmovedown
 b startmoveleft
 b startmoveright
 b startmoveup
 b startpitchdown
 b startpitchup
 b startreload
 b startresetcamera
 b startright
 b startscore
 b startshowscores
 b startspeed
 b startstrafe
 b startuse
 b startwalk
 b startzoom
 b stopsoundscape_command
 b sv_autoladderdismount
 b sv_ladder_useonly
 b sv_ladderautomountdot
 b sv_optimizedmovement
 b sv_soundemitter_trace
 b sv_stickysprint_default
 b test_freezeframe
 b testhudanim_command
 b texturetolinear
 b thirdperson
 b thirdperson_mayamode
 b tv_transmitall
 b ui_posedebug_fade_in_time
 b ui_posedebug_fade_out_time
 b v_centermove
 b v_centerspeed
 b v_ipitch_cycle
 b v_ipitch_level
 b v_iroll_cycle
 b v_iroll_level
 b v_iyaw_cycle
 b v_iyaw_level
 b vec2_invalid
 b vec2_origin
 b vec4_invalid
 b vec4_origin
 b vgui::AnimatingImagePanel::GetDescription()::buf
 b vgui::Button::DoClick()::vgui_nav_lock
 b vgui::Button::GetDescription()::buf
 b vgui::CBitmapImagePanel::GetDescription()::buf
 b vgui::EditablePanel::GetControlString(char const*, char const*)::buf
 b vgui::EditablePanel::OnKeyCodePressed(ButtonCode_t)::vgui_nav_lock_default_button
 b vgui::FocusNavGroup::RequestFocusNext(unsigned int)::stack_depth
 b vgui::Frame::GetDescription()::buf
 b vgui::GetAnimationController()::s_pAnimationController
 b vgui::GetPanelKeyBindingMapDictionary()::dictionary
 b vgui::ImagePanel::GetDescription()::buf
 b vgui::Label::GetDescription()::buf
 b vgui::Panel::InitPropertyConverters()::initialized
 b vgui::Panel::OnKeyCodePressed(ButtonCode_t)::vgui_nav_lock
 b vgui::ProgressBar::GetDescription()::buf
 b vgui::RadioButton::GetDescription()::buf
 b vgui::RichText::GetDescription()::buf
 b vgui::ScalableImagePanel::GetDescription()::buf
 b vgui::Slider::GetDescription()::buf
 b vgui::TextEntry::GetDescription()::buf
 b vgui::URLLabel::GetDescription()::buf
 b vgui::g_MenuMgr
 b vgui::g_szControlsModuleName
 b viewanim_addkeyframe_command
 b viewanim_create_command
 b viewanim_load_command
 b viewanim_save_command
 b violence_ablood
 b violence_agibs
 b violence_hblood
 b violence_hgibs
 b void ImageLoader::DecodeAlpha3BitLinear<BGRA4444_t>(BGRA4444_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gACol
 b void ImageLoader::DecodeAlpha3BitLinear<BGRA4444_t>(BGRA4444_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gAlphas
 b void ImageLoader::DecodeAlpha3BitLinear<BGRA4444_t>(BGRA4444_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gBits
 b void ImageLoader::DecodeAlpha3BitLinear<BGRA5551_t>(BGRA5551_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gACol
 b void ImageLoader::DecodeAlpha3BitLinear<BGRA5551_t>(BGRA5551_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gAlphas
 b void ImageLoader::DecodeAlpha3BitLinear<BGRA5551_t>(BGRA5551_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gBits
 b void ImageLoader::DecodeAlpha3BitLinear<BGRA8888_t>(BGRA8888_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gACol
 b void ImageLoader::DecodeAlpha3BitLinear<BGRA8888_t>(BGRA8888_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gAlphas
 b void ImageLoader::DecodeAlpha3BitLinear<BGRA8888_t>(BGRA8888_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gBits
 b void ImageLoader::DecodeAlpha3BitLinear<RGBA8888_t>(RGBA8888_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gACol
 b void ImageLoader::DecodeAlpha3BitLinear<RGBA8888_t>(RGBA8888_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gAlphas
 b void ImageLoader::DecodeAlpha3BitLinear<RGBA8888_t>(RGBA8888_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)::gBits
 b vr_activate_command
 b vr_cycle_aim_move_mode
 b vr_deactivate_command
 b vr_toggle_command
 b xboxlook
 b xboxmove
 ceil
 ceilf
 cos
 cosf
 crc32
 d CLuminanceHistogramSystem::UpdateLuminanceRanges()::s_nCurrentBucketAlgorithm
 d CRagdoll::DrawWireframe()::debugColor
 d CRestore::ReadFields(char const*, void*, datamap_t*, typedescription_t*, int)::lastName
 d C_BaseAnimating::DoInternalDrawModel(ClientModelRenderInfo_t*, DrawModelState_t*, matrix3x4_t*)::debugColor
 d C_BaseAnimating::DoInternalDrawModel(ClientModelRenderInfo_t*, DrawModelState_t*, matrix3x4_t*)::debugColorPhys
 d C_BaseCombatWeapon::GetProficiencyValues()::defaultWeaponProficiencyTable
 d C_BoneFollower::DrawModel(int)::debugColor
 d C_GunshipFX::DrawModel(int)::white
 d C_ServerRagdoll::InternalDrawModel(int)::debugColor
 d C_StriderFX::DrawModel(int)::white
 d DEATHNOTICE_DISPLAY_TIME
 d Four_255s
 d Four_MagicNumbers
 d GetAttachTypeFromString(char const*)::pAttachmentNames
 d GetBloomAmount()::currentBloomAmount
 d ImageLoader::GammaCorrectRGBA8888(unsigned char*, unsigned char*, int, int, int, float, float)::lastDstGamma
 d ImageLoader::GammaCorrectRGBA8888(unsigned char*, unsigned char*, int, int, int, float, float)::lastSrcGamma
 d ImageLoader::ResampleRGBA8888(ImageLoader::ResampleInfo_t const&)::lastSrcGamma
 d ImageLoader::g_KernelFunc
 d ImageLoader::g_KernelFuncNice
 d IsSteamDeck()::s_nSteamDeckCached
 d PHYS_SAVE_RESTORE_VERSION
 d PryoVignetteSTHorizontal
 d PryoVignetteSTVertical
 d VIEWEFFECTS_SAVE_RESTORE_VERSION
 d VTT for (anonymous namespace)::CaptionGripPanel
 d VTT for (anonymous namespace)::GripPanel
 d VTT for (anonymous namespace)::ScrollBarButton
 d boolconverter
 d colorconverter
 d construction vtable for vgui::Button-in-(anonymous namespace)::ScrollBarButton
 d construction vtable for vgui::Label-in-(anonymous namespace)::ScrollBarButton
 d floatconverter
 d fontconverter
 d g_CCNameMap
 d g_ControllerDigitalGameActions
 d g_CurrentViewID
 d g_DamageAnimations
 d g_DebugOverlay
 d g_EffectsList
 d g_FieldTypes
 d g_Helper
 d g_HudTextMessage
 d g_ImageFormatInfo
 d g_InterpolatorNameMap
 d g_LoadingDisc
 d g_MessageChars
 d g_NameMap
 d g_bCleanupDatObject
 d g_bWasSkipping
 d g_bWasThreaded
 d g_iPreviousBoneCounter
 d g_nChainCount
 d g_pSoundLevels
 d idx_mask
 d intconverter
 d jpeg_std_message_table
 d p_floatconverter
 d p_intconverter
 d p_screenspace_intconverter_X
 d p_screenspace_intconverter_Y
 d s_ChildOperatorDefinition
 d s_DefaultAccessor
 d s_DefaultParticleSystemQuery
 d s_LastFileLoadingFrom
 d s_MovingAverageToneMapScale
 d s_NameMap
 d s_NetworkMessageNames
 d s_ParticleSystemQuery
 d s_PoseDebuggerStub
 d s_RemapOperatorNameTable
 d s_SoundPatchSaveRestoreOps
 d s_SpectatorModes
 d s_TooltipWindow
 d s_bSortAscending
 d s_bSortAscendingSecondary
 d s_hVGuiContext
 d s_iDuplicateIndex
 d s_nDLLIdentifier
 d s_pConversionArrays_NoEscConversion
 d s_pConversionArrays_StringCharConversion
 d s_pImpactEffect
 d stringconverter
 d textureHandleConverter
 d textureidconverter
 d typeinfo for (anonymous namespace)::CaptionGripPanel
 d typeinfo for (anonymous namespace)::GripPanel
 d typeinfo for (anonymous namespace)::ScrollBarButton
 d vgui::Panel::OnOldMessage(KeyValues*, unsigned int)::s_bDebugMessages
 d vtable for (anonymous namespace)::CaptionGripPanel
 d vtable for (anonymous namespace)::GripPanel
 d vtable for (anonymous namespace)::ScrollBarButton
 deflate
 deflateEnd
 deflateInit2_
 deflateReset
 dlclose
 dlerror
 dlopen
 dlsym
 dyld_stub_binder
 exit
 exp
 expf
 fclose
 fflush
 floor
 floorf
 fmaxf
 fminf
 fmod
 fmodf
 fopen$UNIX2003
 fprintf
 fputc
 fread
 free
 frexp
 fwrite$UNIX2003
 g_ClockSpeed
 g_VProfCurrentProfile
 g_pThreadPool
 getcwd
 getenv
 getuid
 gmtime
 iconv
 iconv_close
 iconv_open
 inflate
 inflateEnd
 inflateInit_
 inflateReset
 localtime
 log
 logf
 longjmp
 malloc
 malloc_size
 mbstowcs
 memcmp
 memcpy
 memmove
 memset
 memset_pattern16
 mmap$UNIX2003
 modf
 munmap$UNIX2003
 operator delete(void*)
 operator delete[](void*)
 operator new(unsigned long)
 operator new[](unsigned long)
 pow
 powf
 printf
 pthread_mutex_destroy
 pthread_mutex_init
 pthread_mutex_lock
 pthread_mutex_unlock
 pthread_mutexattr_init
 pthread_mutexattr_settype
 putchar
 qsort
 r .memset_pattern
 r .memset_pattern24
 r .memset_pattern27
 r .memset_pattern30
 r .memset_pattern32
 r .memset_pattern34
 r .memset_pattern35
 r .memset_pattern37
 r .memset_pattern39
 r .memset_pattern40
 r .memset_pattern41
 r .memset_pattern42
 r CBaseGameStats_Driver::SendData()::szFileName
 r CSchemeVisualizer::AddFontsToList()::strOAccent
 r DrawClippedDepthBox(IClientRenderable*, float*)::iLines
 r DrawClippedDepthBox(IClientRenderable*, float*)::iQuads
 r FX_DustImpact(Vector const&, CGameTrace*, float)::nParticleIdArray
 r PryoSideIndexes
 r base_dither_matrix
 r bloodcolors
 r bmask
 r commandercolors
 r extra_pool_slop
 r first_pool_slop
 r fourbppswaptable
 r gSizes
 r g_FieldSizes
 r g_nRandomValues
 r ice_keyrot
 r ice_pbox
 r ice_smod
 r ice_sxor
 r impulse_xcoords
 r jpeg_zigzag_order
 r jpeg_zigzag_order2
 r jpeg_zigzag_order3
 r jpeg_zigzag_order4
 r jpeg_zigzag_order5
 r jpeg_zigzag_order6
 r jpeg_zigzag_order7
 r onebppswaptable
 r perm_a
 r perm_b
 r perm_c
 r png_IDAT.6211
 r png_IDAT.6290
 r png_IDAT.6410
 r png_IDAT.6446
 r png_IDAT.7349
 r png_IDAT.7828
 r png_IEND.6212
 r png_IEND.6447
 r png_IEND.6460
 r png_IHDR.6210
 r png_IHDR.6299
 r png_IHDR.6445
 r png_PLTE.6213
 r png_PLTE.6380
 r png_PLTE.6448
 r png_bKGD.6214
 r png_bKGD.6449
 r png_bKGD.6659
 r png_cHRM.6215
 r png_cHRM.6450
 r png_cHRM.6603
 r png_digit
 r png_gAMA.6216
 r png_gAMA.6451
 r png_gAMA.6467
 r png_hIST.6217
 r png_hIST.6452
 r png_hIST.6694
 r png_iCCP.6218
 r png_iCCP.6453
 r png_iCCP.6484
 r png_iTXt.6219
 r png_iTXt.6454
 r png_iTXt.6811
 r png_oFFs.6220
 r png_oFFs.6455
 r png_oFFs.6847
 r png_pCAL.6221
 r png_pCAL.6456
 r png_pCAL.6861
 r png_pHYs.6222
 r png_pHYs.6457
 r png_pHYs.6935
 r png_pass_dsp_mask.6291
 r png_pass_inc.7541
 r png_pass_inc.7823
 r png_pass_inc.7899
 r png_pass_mask.6292
 r png_pass_start.7822
 r png_pass_start.7898
 r png_pass_yinc.7825
 r png_pass_ystart.7824
 r png_sBIT.6223
 r png_sBIT.6458
 r png_sBIT.6572
 r png_sCAL.6224
 r png_sCAL.6459
 r png_sCAL.6907
 r png_sPLT.6225
 r png_sPLT.6460
 r png_sPLT.6522
 r png_sRGB.6226
 r png_sRGB.6461
 r png_sRGB.6474
 r png_tEXt.6227
 r png_tEXt.6462
 r png_tEXt.6761
 r png_tIME.6228
 r png_tIME.6463
 r png_tIME.6943
 r png_tRNS.6229
 r png_tRNS.6464
 r png_tRNS.6628
 r png_zTXt.6230
 r png_zTXt.6465
 r png_zTXt.6783
 r pulCRCTable
 r s_DefaultSheetSequence
 r s_ExtIndices
 r s_MatIndices
 r s_pAttributeSize
 r s_pBoxFaceIndices
 r s_pBoxFaceIndicesInsideOut
 r s_pQuadCount
 r select_ncolors(jpeg_decompress_struct*, int*)::RGB_order
 r short_months.6308
 r start_pass(jpeg_decompress_struct*)::aanscalefactor
 r start_pass(jpeg_decompress_struct*)::aanscales
 r twobppswaptable
 r typeinfo name for (anonymous namespace)::CaptionGripPanel
 r typeinfo name for (anonymous namespace)::GripPanel
 r typeinfo name for (anonymous namespace)::ScrollBarButton
 raise
 realloc
 setjmp
 setlocale
 shm_open
 sin
 sinf
 snprintf
 sprintf
 sscanf
 std::terminate()
 strcasecmp
 strchr
 strcmp
 strcpy
 strdup
 strlen
 strncasecmp
 strncat
 strncmp
 strncpy
 strstr
 strtod$UNIX2003
 strtok
 strtol
 strtoul
 swprintf
 swscanf
 t (anonymous namespace)::CaptionGripPanel::CaptionGripPanel(vgui::Frame*, char const*)
 t (anonymous namespace)::CaptionGripPanel::moved(int, int)
 t (anonymous namespace)::CaptionGripPanel::tryToDock(unsigned int, int&, int&)
 t (anonymous namespace)::CaptionGripPanel::~CaptionGripPanel()
 t (anonymous namespace)::GripPanel::ApplySchemeSettings(vgui::IScheme*)
 t (anonymous namespace)::GripPanel::GripPanel(vgui::Frame*, char const*, int, int)
 t (anonymous namespace)::GripPanel::OnCursorMoved(int, int)
 t (anonymous namespace)::GripPanel::OnMouseCaptureLost()
 t (anonymous namespace)::GripPanel::OnMouseDoublePressed(ButtonCode_t)
 t (anonymous namespace)::GripPanel::OnMousePressed(ButtonCode_t)
 t (anonymous namespace)::GripPanel::OnMouseReleased(ButtonCode_t)
 t (anonymous namespace)::GripPanel::Paint()
 t (anonymous namespace)::GripPanel::PaintBackground()
 t (anonymous namespace)::GripPanel::moved(int, int)
 t (anonymous namespace)::GripPanel::~GripPanel()
 t (anonymous namespace)::ScrollBarButton::ApplySchemeSettings(vgui::IScheme*)
 t (anonymous namespace)::ScrollBarButton::OnMouseFocusTicked()
 t (anonymous namespace)::ScrollBarButton::OnMousePressed(ButtonCode_t)
 t (anonymous namespace)::ScrollBarButton::OnMouseReleased(ButtonCode_t)
 t (anonymous namespace)::ScrollBarButton::~ScrollBarButton()
 t AlignBoxes(matrix3x4_t*, Vector const&, Vector const&)
 t AscendingSortFunc(void const*, void const*)
 t CCBaseGrenadeFactory()
 t CCBaseHLCombatWeaponFactory()
 t CCBaseViewModelFactory()
 t CCBeamFactory()
 t CCEnvDetailControllerFactory()
 t CCFuncLadderFactory()
 t CCHalfLife2ProxyFactory()
 t CCInfoLadderDismountFactory()
 t CCSpriteFactory()
 t CCSpriteOrientedFactory()
 t CCSpriteTrailFactory()
 t CCViewAngleAnimationFactory()
 t CC_BasePlayerFactory()
 t CC_ClientRagdollFactory()
 t CC_FlaregunFactory()
 t CC_Weapon357Factory()
 t CC_WeaponAR2Factory()
 t CC_WeaponAlyxGunFactory()
 t CC_WeaponAnnabelleFactory()
 t CC_WeaponBinocularsFactory()
 t CC_WeaponBugBaitFactory()
 t CC_WeaponCitizenPackageFactory()
 t CC_WeaponCitizenSuitcaseFactory()
 t CC_WeaponCrossbowFactory()
 t CC_WeaponCrowbarFactory()
 t CC_WeaponCubemapFactory()
 t CC_WeaponCyclerFactory()
 t CC_WeaponFragFactory()
 t CC_WeaponGaussGunFactory()
 t CC_WeaponPhysCannonFactory()
 t CC_WeaponPistolFactory()
 t CC_WeaponRPGFactory()
 t CC_WeaponSMG1Factory()
 t CC_WeaponShotgunFactory()
 t CC_WeaponStunStickFactory()
 t CC_Weapon_SLAMFactory()
 t CalcAnimation(CStudioHdr const*, Vector*, Quaternion*, mstudioseqdesc_t&, int, int, float, int)
 t CalcColor(SphereCalc_t*, int, Vector const&, unsigned char*)
 t CalcDecompressedAnimation(mstudiocompressedikerror_t const*, int, float, Vector&, Quaternion&)
 t CalcHemisphereColor(SphereCalc_t*, float, float)
 t CalcLocalHierarchyAnimation(CStudioHdr const*, matrix3x4_t*, CBoneBitList&, Vector*, Quaternion*, mstudiobone_t const*, mstudiolocalhierarchy_t*, int, int, float, int, float, int)
 t CalcSphereColor(SphereCalc_t*, float, float)
 t CalcZeroframeData(CStudioHdr const*, studiohdr_t const*, virtualgroup_t const*, mstudiobone_t const*, mstudioanimdesc_t&, float, Vector*, Quaternion*, int, float)
 t ChoreEventStartTimeLessFunc(CChoreoEvent* const&, CChoreoEvent* const&)
 t ClientWorldFactory(int, int)
 t ClipRayToHitbox(Ray_t const&, mstudiobbox_t*, matrix3x4_t&, CGameTrace&)
 t ComputeSeparatingPlane(matrix3x4_t const&, matrix3x4_t const&, Vector const&, Vector const&, float, cplane_t*)
 t CountParticleSystemActiveParticles(CParticleCollection*)
 t CreatePyroSide(int, Vector2D&)
 t Create_AnimatingImagePanel()
 t Create_Button()
 t Create_CAchievementNotificationPanel()
 t Create_CAvatarImagePanel()
 t Create_CBaseModelPanel()
 t Create_CBitmapImagePanel()
 t Create_CBitmapPanel()
 t Create_CCommentaryModelPanel()
 t Create_CHUDAutoAim()
 t Create_CHUDQuickInfo()
 t Create_CHudAmmo()
 t Create_CHudAnimationInfo()
 t Create_CHudBattery()
 t Create_CHudChat()
 t Create_CHudCloseCaption()
 t Create_CHudCommentary()
 t Create_CHudCredits()
 t Create_CHudCrosshair()
 t Create_CHudDamageIndicator()
 t Create_CHudDeathNotice()
 t Create_CHudFilmDemo()
 t Create_CHudGeiger()
 t Create_CHudHDRDemo()
 t Create_CHudHealth()
 t Create_CHudHintDisplay()
 t Create_CHudHintKeyDisplay()
 t Create_CHudHistoryResource()
 t Create_CHudMenu()
 t Create_CHudMessage()
 t Create_CHudPoisonDamageIndicator()
 t Create_CHudPosture()
 t Create_CHudSecondaryAmmo()
 t Create_CHudSquadStatus()
 t Create_CHudSuitPower()
 t Create_CHudTrain()
 t Create_CHudVehicle()
 t Create_CHudWeapon()
 t Create_CHudWeaponSelection()
 t Create_CHudZoom()
 t Create_CIconPanel()
 t Create_CMDLPanel()
 t Create_CModelPanel()
 t Create_CPDumpPanel()
 t Create_CTreeViewListControl()
 t Create_CheckButton()
 t Create_CircularProgressBar()
 t Create_ContinuousProgressBar()
 t Create_Divider()
 t Create_EditablePanel()
 t Create_ExpandButton()
 t Create_GraphPanel()
 t Create_ImagePanel()
 t Create_Label()
 t Create_ListPanel()
 t Create_ListViewPanel()
 t Create_Menu()
 t Create_MenuBar()
 t Create_MenuButton()
 t Create_MenuItem()
 t Create_Panel()
 t Create_PanelListPanel()
 t Create_ProgressBar()
 t Create_RadioButton()
 t Create_RichText()
 t Create_ScalableImagePanel()
 t Create_SectionedListPanel()
 t Create_Slider()
 t Create_TextEntry()
 t Create_ToggleButton()
 t Create_TreeView()
 t DefaultSortFunc(KeyValues*, KeyValues*)
 t DefaultSortFunc(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&)
 t DrawClippedDepthBox(IClientRenderable*, float*)
 t DrawClippedScreenSpaceRectangle(IMaterial*, int, int, int, int, float, float, float, float, int, int, ClipBox const*, void*)
 t DrawOpaqueRenderable(IClientRenderable*, bool, ERenderDepthMode, int)
 t DrawTranslucentRenderable(IClientRenderable*, bool, bool, bool)
 t DumpComparision(char const*, char const*, char const*, bool, bool, bool, bool, char const*)
 t DumpParticleStats_f()
 t EmitCaptionCompletion(char const*, char (*) [64])
 t FastSortFunc(vgui::ListPanel*, vgui::ListPanelItem const&, vgui::ListPanelItem const&)
 t FindFieldByName_R(char const*, datamap_t*)
 t FindFieldStackByName_R(char const*, datamap_t*, CUtlVector<typedescription_t*, CUtlMemory<typedescription_t*, int> >&)
 t FovChanged_Callback(IConVar*, char const*, float)
 t GamesoundCompletion(char const*, char (*) [64])
 t GenerateBoxVertices(Vector const&, QAngle const&, Vector const&, Vector const&, Vector*)
 t GetPos(CCommand const&, Vector&, QAngle&)
 t HudAspectRatioChanged(IConVar*, char const*, float)
 t HudElementCompletion(char const*, char (*) [64])
 t IN_PoseDebuggerEnd(CCommand const&)
 t IN_PoseDebuggerStart(CCommand const&)
 t ImageLoader::A8ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::ABGR8888ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::ARGB8888ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::BGR565ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::BGR888ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::BGR888_BLUESCREENToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::BGRA4444ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::BGRA5551ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::BGRA8888ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::BGRX5551ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::BGRX8888ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::GenerateNiceFilter(float, float, float, int, float*, float*)
 t ImageLoader::I8ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::IA88ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGB888ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGB888_BLUESCREENToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA16161616ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToA8(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToABGR8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToARGB8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToBGR565(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToBGR888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToBGR888_BLUESCREEN(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToBGRA4444(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToBGRA5551(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToBGRA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToBGRX5551(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToBGRX8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToI8(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToIA88(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToRGB888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToRGB888_BLUESCREEN(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToUV88(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToUVLX8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::RGBA8888ToUVWQ8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::UV88ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::UVLX8888ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImageLoader::UVWQ8888ToRGBA8888(unsigned char const*, unsigned char*, int)
 t ImgUtl_ReadTGAHeader(__sFILE*, TGAHeader&)
 t InvokeMethod(void (IGameSystem::*)(), char const*)
 t InvokeMethodReverseOrder(void (IGameSystem::*)())
 t InvokePerFrameMethod(void (IGameSystemPerFrame::*)(), char const*)
 t KeyValueChainRecursive(KeyValues*, char const*)
 t MD5Transform(unsigned int*, unsigned int const*)
 t Noise(float*, int, float)
 t OverlayFrameBufferTexture(int)
 t OverlayWaterTexture(IMaterial*, int, int, bool)
 t PixelvisDrawChanged(IConVar*, char const*, float)
 t PostThreadedBoneSetup()
 t PreThreadedBoneSetup()
 t ProcessPSystem(CNewParticleEffect*&)
 t ReadPNGData(png_struct_def*, unsigned char*, unsigned long)
 t RecordArmorRicochet(Vector const&, Vector const&)
 t RecordBloodSprite(Vector const&, Vector const&, int, int, int, int, int, int, int)
 t RecordBreakModel(Vector const&, QAngle const&, Vector const&, Vector const&, int, int, int, float, int)
 t RecordEffect(char const*, CEffectData const&)
 t RecordGlowSprite(Vector const&, int, float, float, int)
 t RecordMetalSparks(Vector const&, Vector const&)
 t RecordMuzzleFlash(Vector const&, QAngle const&, float, int)
 t RecordPhysicsProp(Vector const&, QAngle const&, Vector const&, int, bool, int, int)
 t RecordSmoke(Vector const&, float, int)
 t RecordSparks(Vector const&, int, int, Vector const&)
 t RecordSprite(Vector const&, int, float, int)
 t RecordSpriteSpray(Vector const&, Vector const&, int, int, float, int)
 t RecordWorldDecal(Vector const*, int)
 t RecvProxy_EntIndex(CRecvProxyData const*, void*, void*)
 t RecvProxy_HDRColorScale(CRecvProxyData const*, void*, void*)
 t RecvProxy_IntDirtySurround(CRecvProxyData const*, void*, void*)
 t RecvProxy_IntToPredictableId(CRecvProxyData const*, void*, void*)
 t RecvProxy_MoveCollide(CRecvProxyData const*, void*, void*)
 t RecvProxy_MoveType(CRecvProxyData const*, void*, void*)
 t RecvProxy_OBBMaxsPreScaled(CRecvProxyData const*, void*, void*)
 t RecvProxy_OBBMinsPreScaled(CRecvProxyData const*, void*, void*)
 t RecvProxy_Solid(CRecvProxyData const*, void*, void*)
 t RecvProxy_SolidFlags(CRecvProxyData const*, void*, void*)
 t RecvProxy_SpriteScale(CRecvProxyData const*, void*, void*)
 t RecvProxy_VecTip(CRecvProxyData const*, void*, void*)
 t RecvProxy_VectorDirtySurround(CRecvProxyData const*, void*, void*)
 t RecvProxy_Weapon(CRecvProxyData const*, void*, void*)
 t RemoveDecals_f()
 t SetClearColorToFogColor()
 t SetRenderTargetAndViewPort(ITexture*)
 t SetToneMapScale(IMatRenderContext*, float, float, float)
 t SetupBonesOnBaseAnimating(C_BaseAnimating*&)
 t ShadowRestoreFunc(int)
 t SoundscapeCompletion(char const*, char (*) [64])
 t StartPitchDrift()
 t StatsParticlesStart()
 t StatsParticlesStop()
 t Test_ProxyToggle_EnsureValue(CCommand const&)
 t VGui_VideoMode_AdjustForModeChange()
 t ValveJpegErrorHandler(jpeg_common_struct*)
 t WorldIntersectT(FourVectors const*, FourVectors const*, int, int, ISectData_t*, CWorldCollideContextData*)
 t WorldIntersectTNew(FourVectors const*, FourVectors const*, int, int, ISectData_t*, int, CWorldCollideContextData*, float __vector(4) const&, float)
 t WriteAchievementGlobalState(KeyValues*, bool)
 t _CClient_Precipitation_CreateObject(int, int)
 t _CPhysBoxMultiplayer_CreateObject(int, int)
 t _CPhysicsPropMultiplayer_CreateObject(int, int)
 t _C_AI_BaseNPC_CreateObject(int, int)
 t _C_AR2Explosion_CreateObject(int, int)
 t _C_AlyxEmpEffect_CreateObject(int, int)
 t _C_Barney_CreateObject(int, int)
 t _C_BaseAnimatingOverlay_CreateObject(int, int)
 t _C_BaseAnimating_CreateObject(int, int)
 t _C_BaseCombatCharacter_CreateObject(int, int)
 t _C_BaseCombatWeapon_CreateObject(int, int)
 t _C_BaseDoor_CreateObject(int, int)
 t _C_BaseEntity_CreateObject(int, int)
 t _C_BaseFlex_CreateObject(int, int)
 t _C_BaseGrenade_CreateObject(int, int)
 t _C_BaseHLBludgeonWeapon_CreateObject(int, int)
 t _C_BaseHLCombatWeapon_CreateObject(int, int)
 t _C_BaseHLPlayer_CreateObject(int, int)
 t _C_BaseHelicopter_CreateObject(int, int)
 t _C_BaseParticleEntity_CreateObject(int, int)
 t _C_BasePlayer_CreateObject(int, int)
 t _C_BaseProjectile_CreateObject(int, int)
 t _C_BasePropDoor_CreateObject(int, int)
 t _C_BaseTeamObjectiveResource_CreateObject(int, int)
 t _C_BaseTempEntity_CreateObject(int, int)
 t _C_BaseViewModel_CreateObject(int, int)
 t _C_Beam_CreateObject(int, int)
 t _C_BoneFollower_CreateObject(int, int)
 t _C_BreakableProp_CreateObject(int, int)
 t _C_BreakableSurface_CreateObject(int, int)
 t _C_CitadelEnergyCore_CreateObject(int, int)
 t _C_ColorCorrectionVolume_CreateObject(int, int)
 t _C_ColorCorrection_CreateObject(int, int)
 t _C_CombineGunship_CreateObject(int, int)
 t _C_Corpse_CreateObject(int, int)
 t _C_CrossbowBolt_CreateObject(int, int)
 t _C_DustTrail_CreateObject(int, int)
 t _C_DynamicLight_CreateObject(int, int)
 t _C_DynamicProp_CreateObject(int, int)
 t _C_Embers_CreateObject(int, int)
 t _C_EntityDissolve_CreateObject(int, int)
 t _C_EntityFlame_CreateObject(int, int)
 t _C_EntityParticleTrail_CreateObject(int, int)
 t _C_EnvDetailController_CreateObject(int, int)
 t _C_EnvHeadcrabCanister_CreateObject(int, int)
 t _C_EnvParticleScript_CreateObject(int, int)
 t _C_EnvProjectedTexture_CreateObject(int, int)
 t _C_EnvScreenEffect_CreateObject(int, int)
 t _C_EnvScreenOverlay_CreateObject(int, int)
 t _C_EnvStarfield_CreateObject(int, int)
 t _C_EnvTonemapController_CreateObject(int, int)
 t _C_EnvWind_CreateObject(int, int)
 t _C_FireSmoke_CreateObject(int, int)
 t _C_FireTrail_CreateObject(int, int)
 t _C_Fish_CreateObject(int, int)
 t _C_Flare_CreateObject(int, int)
 t _C_Flaregun_CreateObject(int, int)
 t _C_FogController_CreateObject(int, int)
 t _C_FuncAreaPortalWindow_CreateObject(int, int)
 t _C_FuncConveyor_CreateObject(int, int)
 t _C_FuncLadder_CreateObject(int, int)
 t _C_FuncMonitor_CreateObject(int, int)
 t _C_FuncOccluder_CreateObject(int, int)
 t _C_FuncReflectiveGlass_CreateObject(int, int)
 t _C_FuncRotating_CreateObject(int, int)
 t _C_FuncSmokeVolume_CreateObject(int, int)
 t _C_FuncTrackTrain_CreateObject(int, int)
 t _C_Func_Dust_CreateObject(int, int)
 t _C_Func_LOD_CreateObject(int, int)
 t _C_GameRulesProxy_CreateObject(int, int)
 t _C_HLMachineGun_CreateObject(int, int)
 t _C_HLSelectFireMachineGun_CreateObject(int, int)
 t _C_HalfLife2Proxy_CreateObject(int, int)
 t _C_HandleTest_CreateObject(int, int)
 t _C_InfoLadderDismount_CreateObject(int, int)
 t _C_InfoLightingRelative_CreateObject(int, int)
 t _C_InfoOverlayAccessor_CreateObject(int, int)
 t _C_InfoTeleporterCountdown_CreateObject(int, int)
 t _C_LightGlow_CreateObject(int, int)
 t _C_MaterialModifyControl_CreateObject(int, int)
 t _C_MortarShell_CreateObject(int, int)
 t _C_MovieExplosion_CreateObject(int, int)
 t _C_NPC_AntlionGuard_CreateObject(int, int)
 t _C_NPC_Barnacle_CreateObject(int, int)
 t _C_NPC_Manhack_CreateObject(int, int)
 t _C_NPC_Vortigaunt_CreateObject(int, int)
 t _C_ParticleFire_CreateObject(int, int)
 t _C_ParticlePerformanceMonitor_CreateObject(int, int)
 t _C_ParticleSmokeGrenade_CreateObject(int, int)
 t _C_ParticleSystem_CreateObject(int, int)
 t _C_PhysBox_CreateObject(int, int)
 t _C_PhysMagnet_CreateObject(int, int)
 t _C_PhysicsProp_CreateObject(int, int)
 t _C_PlasmaBeamNode_CreateObject(int, int)
 t _C_Plasma_CreateObject(int, int)
 t _C_PlayerResource_CreateObject(int, int)
 t _C_PointCamera_CreateObject(int, int)
 t _C_PointCommentaryNode_CreateObject(int, int)
 t _C_PoseController_CreateObject(int, int)
 t _C_PropAirboat_CreateObject(int, int)
 t _C_PropCannon_CreateObject(int, int)
 t _C_PropCombineBall_CreateObject(int, int)
 t _C_PropCrane_CreateObject(int, int)
 t _C_PropJeep_CreateObject(int, int)
 t _C_PropVehicleChoreoGeneric_CreateObject(int, int)
 t _C_PropVehicleDriveable_CreateObject(int, int)
 t _C_PropVehiclePrisonerPod_CreateObject(int, int)
 t _C_QuadraticBeam_CreateObject(int, int)
 t _C_RagdollManager_CreateObject(int, int)
 t _C_RocketTrail_CreateObject(int, int)
 t _C_RollerMine_CreateObject(int, int)
 t _C_RopeKeyframe_CreateObject(int, int)
 t _C_RotorWashEmitter_CreateObject(int, int)
 t _C_SceneEntity_CreateObject(int, int)
 t _C_ScriptIntro_CreateObject(int, int)
 t _C_ServerRagdollAttached_CreateObject(int, int)
 t _C_ServerRagdoll_CreateObject(int, int)
 t _C_ShadowControl_CreateObject(int, int)
 t _C_SlideshowDisplay_CreateObject(int, int)
 t _C_SmokeStack_CreateObject(int, int)
 t _C_SmokeTrail_CreateObject(int, int)
 t _C_SporeExplosion_CreateObject(int, int)
 t _C_SporeTrail_CreateObject(int, int)
 t _C_SpotlightEnd_CreateObject(int, int)
 t _C_SpriteOriented_CreateObject(int, int)
 t _C_SpriteTrail_CreateObject(int, int)
 t _C_Sprite_CreateObject(int, int)
 t _C_SteamJet_CreateObject(int, int)
 t _C_Strider_CreateObject(int, int)
 t _C_Sun_CreateObject(int, int)
 t _C_TEAntlionDust_CreateObject()
 t _C_TEArmorRicochet_CreateObject()
 t _C_TEBSPDecal_CreateObject()
 t _C_TEBaseBeam_CreateObject(int, int)
 t _C_TEBeamEntPoint_CreateObject()
 t _C_TEBeamEnts_CreateObject()
 t _C_TEBeamFollow_CreateObject()
 t _C_TEBeamLaser_CreateObject()
 t _C_TEBeamPoints_CreateObject()
 t _C_TEBeamRingPoint_CreateObject()
 t _C_TEBeamRing_CreateObject()
 t _C_TEBeamSpline_CreateObject()
 t _C_TEBloodSprite_CreateObject()
 t _C_TEBloodStream_CreateObject()
 t _C_TEBreakModel_CreateObject()
 t _C_TEBubbleTrail_CreateObject()
 t _C_TEBubbles_CreateObject()
 t _C_TEClientProjectile_CreateObject()
 t _C_TEConcussiveExplosion_CreateObject()
 t _C_TEDecal_CreateObject()
 t _C_TEDust_CreateObject()
 t _C_TEDynamicLight_CreateObject()
 t _C_TEEffectDispatch_CreateObject()
 t _C_TEEnergySplash_CreateObject()
 t _C_TEExplosion_CreateObject()
 t _C_TEFizz_CreateObject()
 t _C_TEFootprintDecal_CreateObject()
 t _C_TEGaussExplosion_CreateObject()
 t _C_TEGlowSprite_CreateObject()
 t _C_TEImpact_CreateObject()
 t _C_TEKillPlayerAttachments_CreateObject()
 t _C_TELargeFunnel_CreateObject()
 t _C_TEMetalSparks_CreateObject()
 t _C_TEMuzzleFlash_CreateObject()
 t _C_TEParticleSystem_CreateObject(int, int)
 t _C_TEPhysicsProp_CreateObject()
 t _C_TEPlayerDecal_CreateObject()
 t _C_TEProjectedDecal_CreateObject()
 t _C_TEShatterSurface_CreateObject()
 t _C_TEShowLine_CreateObject()
 t _C_TESmoke_CreateObject()
 t _C_TESparks_CreateObject()
 t _C_TESpriteSpray_CreateObject()
 t _C_TESprite_CreateObject()
 t _C_TEWorldDecal_CreateObject()
 t _C_Team_CreateObject(int, int)
 t _C_TeamplayRoundBasedRulesProxy_CreateObject(int, int)
 t _C_Tesla_CreateObject(int, int)
 t _C_TestTraceline_CreateObject(int, int)
 t _C_Test_ProxyToggle_Networkable_CreateObject(int, int)
 t _C_VGuiScreen_CreateObject(int, int)
 t _C_VortigauntChargeToken_CreateObject(int, int)
 t _C_VortigauntEffectDispel_CreateObject(int, int)
 t _C_VoteController_CreateObject(int, int)
 t _C_WaterBullet_CreateObject(int, int)
 t _C_WaterLODControl_CreateObject(int, int)
 t _C_Weapon357_CreateObject(int, int)
 t _C_WeaponAR2_CreateObject(int, int)
 t _C_WeaponAlyxGun_CreateObject(int, int)
 t _C_WeaponAnnabelle_CreateObject(int, int)
 t _C_WeaponBinoculars_CreateObject(int, int)
 t _C_WeaponBugBait_CreateObject(int, int)
 t _C_WeaponCitizenPackage_CreateObject(int, int)
 t _C_WeaponCitizenSuitcase_CreateObject(int, int)
 t _C_WeaponCrossbow_CreateObject(int, int)
 t _C_WeaponCrowbar_CreateObject(int, int)
 t _C_WeaponCubemap_CreateObject(int, int)
 t _C_WeaponCycler_CreateObject(int, int)
 t _C_WeaponFrag_CreateObject(int, int)
 t _C_WeaponGaussGun_CreateObject(int, int)
 t _C_WeaponPhysCannon_CreateObject(int, int)
 t _C_WeaponPistol_CreateObject(int, int)
 t _C_WeaponRPG_CreateObject(int, int)
 t _C_WeaponSMG1_CreateObject(int, int)
 t _C_WeaponShotgun_CreateObject(int, int)
 t _C_WeaponStunStick_CreateObject(int, int)
 t _C_Weapon_SLAM_CreateObject(int, int)
 t __CreateCAbsProxy_interface()
 t __CreateCAddProxy_interface()
 t __CreateCAlphaMaterialProxy_interface()
 t __CreateCAnimateSpecificTexture_interface()
 t __CreateCAnimatedEntityTextureProxy_interface()
 t __CreateCAnimatedOffsetTextureProxy_interface()
 t __CreateCAnimatedTextureProxy_interface()
 t __CreateCBaseToggleTextureProxy_interface()
 t __CreateCBreakableSurfaceProxy_interface()
 t __CreateCCamoMaterialProxy_interface()
 t __CreateCCenterPrintICenterPrint_interface()
 t __CreateCClampProxy_interface()
 t __CreateCClientDLLSharedAppSystemsIClientDLLSharedAppSystems_interface()
 t __CreateCClientEntityListIClientEntityList_interface()
 t __CreateCClientLeafSystemIClientLeafSystem_interface()
 t __CreateCClientToolsIClientTools_interface()
 t __CreateCClientVirtualRealityIClientVirtualReality_interface()
 t __CreateCConveyorMaterialProxy_interface()
 t __CreateCDivideProxy_interface()
 t __CreateCDummyMaterialProxy_interface()
 t __CreateCEffectsClientIEffects_interface()
 t __CreateCEmptyProxy_interface()
 t __CreateCEnginePostMaterialProxy_interface()
 t __CreateCEntityOriginAlyxMaterialProxy_interface()
 t __CreateCEntityOriginMaterialProxy_interface()
 t __CreateCEntityRandomProxy_interface()
 t __CreateCEntitySpeedProxy_interface()
 t __CreateCEp1IntroVortRefractMaterialProxy_interface()
 t __CreateCEqualsProxy_interface()
 t __CreateCExponentialProxy_interface()
 t __CreateCFracProxy_interface()
 t __CreateCGameClientExportsIGameClientExports_interface()
 t __CreateCGameMovementIGameMovement_interface()
 t __CreateCGaussianNoiseProxy_interface()
 t __CreateCHLClientIBaseClientDLL_interface()
 t __CreateCHeliBladeMaterialProxy_interface()
 t __CreateCIntProxy_interface()
 t __CreateCLampBeamProxy_interface()
 t __CreateCLampHaloProxy_interface()
 t __CreateCLessOrEqualProxy_interface()
 t __CreateCLinearRampProxy_interface()
 t __CreateCMaterialModifyAnimatedProxy_interface()
 t __CreateCMaterialModifyProxy_interface()
 t __CreateCMatrixRotateProxy_interface()
 t __CreateCMotionBlurMaterialProxy_interface()
 t __CreateCMultiplyProxy_interface()
 t __CreateCParticleSystemQueryIParticleSystemQuery_interface()
 t __CreateCPlayerLogoProxy_interface()
 t __CreateCPlayerPositionProxy_interface()
 t __CreateCPlayerProximityProxy_interface()
 t __CreateCPlayerSpeedProxy_interface()
 t __CreateCPlayerTeamMatchProxy_interface()
 t __CreateCPlayerViewProxy_interface()
 t __CreateCPredictionIPrediction_interface()
 t __CreateCProxyHealth_interface()
 t __CreateCProxyIsNPC_interface()
 t __CreateCPupilProxy_interface()
 t __CreateCSelectFirstIfNonZeroProxy_interface()
 t __CreateCShadowModelProxy_interface()
 t __CreateCShadowProxy_interface()
 t __CreateCShieldProxy_interface()
 t __CreateCSineProxy_interface()
 t __CreateCSubtractProxy_interface()
 t __CreateCTextureScrollMaterialProxy_interface()
 t __CreateCTextureTransformProxy_interface()
 t __CreateCTimeMaterialProxy_interface()
 t __CreateCUniformNoiseProxy_interface()
 t __CreateCVortEmissiveProxy_interface()
 t __CreateCWaterLODMaterialProxy_interface()
 t __CreateCWorldDimsProxy_interface()
 t __CreateCWrapMinMaxProxy_interface()
 t __CreateParticleSphereProxy_interface()
 t __MsgFunc_Rumble(bf_read&)
 t __MsgFunc_VGUIMenu(bf_read&)
 t __cxx_global_array_dtor
 t __cxx_global_array_dtor10
 t __cxx_global_array_dtor28
 t __cxx_global_array_dtor6
 t __cxx_global_array_dtor8
 t __cxx_global_array_dtor94
 t __cxx_global_array_dtor97
 t access_virt_barray(jpeg_common_struct*, jvirt_barray_control*, unsigned int, unsigned int, int)
 t access_virt_sarray(jpeg_common_struct*, jvirt_sarray_control*, unsigned int, unsigned int, int)
 t achievement_notification_test(CCommand const&)
 t alloc_barray(jpeg_common_struct*, int, unsigned int, unsigned int)
 t alloc_fs_workspace(jpeg_decompress_struct*)
 t alloc_funny_pointers(jpeg_decompress_struct*)
 t alloc_large(jpeg_common_struct*, int, unsigned long)
 t alloc_sarray(jpeg_common_struct*, int, unsigned int, unsigned int)
 t alloc_small(jpeg_common_struct*, int, unsigned long)
 t arith_decode(jpeg_decompress_struct*, unsigned char*)
 t build_ycc_rgb_table(jpeg_decompress_struct*)
 t cc_emit(CCommand const&)
 t cc_findsound(CCommand const&)
 t cc_flush(CCommand const&)
 t cc_random(CCommand const&)
 t cc_showblocks(CCommand const&)
 t cl_animationinfo(CCommand const&)
 t cl_ent_absbox(CCommand const&)
 t cl_ent_bbox(CCommand const&)
 t cl_ent_rbox(CCommand const&)
 t cl_panelanimation(CCommand const&)
 t cl_pred_track(CCommand const&)
 t cl_soundemitter_flush(CCommand const&)
 t cl_soundscape_flush(CCommand const&)
 t cl_soundscape_printdebuginfo(CCommand const&)
 t color_quantize(jpeg_decompress_struct*, unsigned char**, unsigned char**, int)
 t color_quantize3(jpeg_decompress_struct*, unsigned char**, unsigned char**, int)
 t compute_color(jpeg_decompress_struct*, box*, int)
 t consume_data(jpeg_decompress_struct*)
 t consume_markers(jpeg_decompress_struct*)
 t create_colorindex(jpeg_decompress_struct*)
 t create_colormap(jpeg_decompress_struct*)
 t create_odither_tables(jpeg_decompress_struct*)
 t decode_mcu(jpeg_decompress_struct*, short (**) [64])
 t decode_mcu_AC_first(jpeg_decompress_struct*, short (**) [64])
 t decode_mcu_AC_refine(jpeg_decompress_struct*, short (**) [64])
 t decode_mcu_DC_first(jpeg_decompress_struct*, short (**) [64])
 t decode_mcu_DC_refine(jpeg_decompress_struct*, short (**) [64])
 t decode_mcu_sub(jpeg_decompress_struct*, short (**) [64])
 t decompress_data(jpeg_decompress_struct*, unsigned char***)
 t decompress_onepass(jpeg_decompress_struct*, unsigned char***)
 t decompress_smooth_data(jpeg_decompress_struct*, unsigned char***)
 t default_decompress_parms(jpeg_decompress_struct*)
 t dlight_debug(CCommand const&)
 t do_barray_io(jpeg_common_struct*, jvirt_barray_control*, int)
 t do_sarray_io(jpeg_common_struct*, jvirt_sarray_control*, int)
 t dummy_consume_data(jpeg_decompress_struct*)
 t emit_message(jpeg_common_struct*, int)
 t error_exit(jpeg_common_struct*)
 t examine_app0(jpeg_decompress_struct*, unsigned char*, unsigned int, long)
 t examine_app14(jpeg_decompress_struct*, unsigned char*, unsigned int, long)
 t fill_input_buffer(jpeg_decompress_struct*)
 t fill_inverse_cmap(jpeg_decompress_struct*, int, int, int)
 t find_best_colors(jpeg_decompress_struct*, int, int, int, int, unsigned char*, unsigned char*)
 t find_biggest_color_pop(box*, int)
 t find_biggest_volume(box*, int)
 t find_nearby_colors(jpeg_decompress_struct*, int, int, int, unsigned char*)
 t finish_input_pass(jpeg_decompress_struct*)
 t finish_output_pass(jpeg_decompress_struct*)
 t finish_pass1(jpeg_decompress_struct*)
 t finish_pass2(jpeg_decompress_struct*)
 t finish_pass_1_quant(jpeg_decompress_struct*)
 t first_marker(jpeg_decompress_struct*)
 t format_message(jpeg_common_struct*, char*)
 t free_pool(jpeg_common_struct*, int)
 t fullsize_upsample(jpeg_decompress_struct*, jpeg_component_info*, unsigned char**, unsigned char***)
 t g15_dumpplayer(CCommand const&)
 t g15_reload(CCommand const&)
 t get_byte(jpeg_decompress_struct*)
 t get_dac(jpeg_decompress_struct*)
 t get_dht(jpeg_decompress_struct*)
 t get_dqt(jpeg_decompress_struct*)
 t get_dri(jpeg_decompress_struct*)
 t get_interesting_appn(jpeg_decompress_struct*)
 t get_sof(jpeg_decompress_struct*, int, int, int)
 t get_soi(jpeg_decompress_struct*)
 t get_sos(jpeg_decompress_struct*)
 t getpos(CCommand const&)
 t global constructors keyed to a
 t gray_rgb_convert(jpeg_decompress_struct*, unsigned char***, unsigned int, unsigned char**, int)
 t grayscale_convert(jpeg_decompress_struct*, unsigned char***, unsigned int, unsigned char**, int)
 t h2v1_merged_upsample(jpeg_decompress_struct*, unsigned char***, unsigned int, unsigned char**)
 t h2v1_upsample(jpeg_decompress_struct*, jpeg_component_info*, unsigned char**, unsigned char***)
 t h2v2_merged_upsample(jpeg_decompress_struct*, unsigned char***, unsigned int, unsigned char**)
 t h2v2_upsample(jpeg_decompress_struct*, jpeg_component_info*, unsigned char**, unsigned char***)
 t hidepanel(CCommand const&)
 t hud_reloadscheme(CCommand const&)
 t init_error_limit(jpeg_decompress_struct*)
 t init_source(jpeg_decompress_struct*)
 t initial_setup(jpeg_decompress_struct*)
 t int_upsample(jpeg_decompress_struct*, jpeg_component_info*, unsigned char**, unsigned char***)
 t jpeg_fill_bit_buffer(bitread_working_state*, long, int, int)
 t jpeg_huff_decode(bitread_working_state*, long, int, d_derived_tbl*, int)
 t jpeg_make_d_derived_tbl(jpeg_decompress_struct*, int, int, d_derived_tbl**)
 t largest_input_value(jpeg_decompress_struct*, int, int, int)
 t latch_quant_tables(jpeg_decompress_struct*)
 t make_funny_pointers(jpeg_decompress_struct*)
 t make_odither_array(jpeg_decompress_struct*, int)
 t master_selection(jpeg_decompress_struct*)
 t median_cut(jpeg_decompress_struct*, box*, int, int)
 t merged_1v_upsample(jpeg_decompress_struct*, unsigned char***, unsigned int*, unsigned int, unsigned char**, unsigned int*, unsigned int)
 t merged_2v_upsample(jpeg_decompress_struct*, unsigned char***, unsigned int*, unsigned int, unsigned char**, unsigned int*, unsigned int)
 t new_color_map_1_quant(jpeg_decompress_struct*)
 t new_color_map_2_quant(jpeg_decompress_struct*)
 t next_marker(jpeg_decompress_struct*)
 t noop_upsample(jpeg_decompress_struct*, jpeg_component_info*, unsigned char**, unsigned char***)
 t null_convert(jpeg_decompress_struct*, unsigned char***, unsigned int, unsigned char**, int)
 t out_of_memory(jpeg_common_struct*, int)
 t output_message(jpeg_common_struct*)
 t output_pass_setup(jpeg_decompress_struct*)
 t output_value(jpeg_decompress_struct*, int, int, int)
 t overview_mode(CCommand const&)
 t overview_zoom(CCommand const&)
 t pass2_fs_dither(jpeg_decompress_struct*, unsigned char**, unsigned char**, int)
 t pass2_no_dither(jpeg_decompress_struct*, unsigned char**, unsigned char**, int)
 t per_scan_setup(jpeg_decompress_struct*)
 t pixelvis_debug(CCommand const&)
 t playsoundscape(CCommand const&)
 t playvideo(CCommand const&)
 t playvideo_exitcommand(CCommand const&)
 t png_build_16bit_table
 t png_build_8bit_table
 t png_fixed_inches_from_microns
 t png_format_buffer
 t png_gamma_threshold
 t png_get_fixed_point
 t png_inflate
 t png_init_filter_heuristics
 t png_pow10
 t png_reset_filter_heuristics
 t png_text_compress
 t png_write_compressed_data_out
 t post_process_1pass(jpeg_decompress_struct*, unsigned char***, unsigned int*, unsigned int, unsigned char**, unsigned int*, unsigned int)
 t post_process_2pass(jpeg_decompress_struct*, unsigned char***, unsigned int*, unsigned int, unsigned char**, unsigned int*, unsigned int)
 t post_process_prepass(jpeg_decompress_struct*, unsigned char***, unsigned int*, unsigned int, unsigned char**, unsigned int*, unsigned int)
 t ppi_from_ppm
 t prepare_for_output_pass(jpeg_decompress_struct*)
 t prepare_range_limit_table(jpeg_decompress_struct*)
 t prescan_quantize(jpeg_decompress_struct*, unsigned char**, unsigned char**, int)
 t process_data_context_main(jpeg_decompress_struct*, unsigned char**, unsigned int*, unsigned int)
 t process_data_crank_post(jpeg_decompress_struct*, unsigned char**, unsigned int*, unsigned int)
 t process_data_simple_main(jpeg_decompress_struct*, unsigned char**, unsigned int*, unsigned int)
 t process_restart(jpeg_decompress_struct*)
 t quantize3_ord_dither(jpeg_decompress_struct*, unsigned char**, unsigned char**, int)
 t quantize_fs_dither(jpeg_decompress_struct*, unsigned char**, unsigned char**, int)
 t quantize_ord_dither(jpeg_decompress_struct*, unsigned char**, unsigned char**, int)
 t r_cheapwaterend(CCommand const&)
 t r_cheapwaterstart(CCommand const&)
 t r_screenoverlay(CCommand const&)
 t r_shadowangles(CCommand const&)
 t r_shadowblobbycutoff(CCommand const&)
 t r_shadowcolor(CCommand const&)
 t r_shadowdir(CCommand const&)
 t r_shadowdist(CCommand const&)
 t read_markers(jpeg_decompress_struct*)
 t read_restart_marker(jpeg_decompress_struct*)
 t realize_virt_arrays(jpeg_common_struct*)
 t report_soundpatch(CCommand const&)
 t request_virt_barray(jpeg_common_struct*, int, int, unsigned int, unsigned int, unsigned int)
 t request_virt_sarray(jpeg_common_struct*, int, int, unsigned int, unsigned int, unsigned int)
 t reset_error_mgr(jpeg_common_struct*)
 t reset_input_controller(jpeg_decompress_struct*)
 t reset_marker_reader(jpeg_decompress_struct*)
 t sc_flashlight(CCommand const&)
 t sc_force_action_manifest(CCommand const&)
 t sc_load_quick(CCommand const&)
 t sc_save_quick(CCommand const&)
 t sc_squad(CCommand const&)
 t select_colors(jpeg_decompress_struct*, int)
 t select_ncolors(jpeg_decompress_struct*, int*)
 t self_destruct(jpeg_common_struct*)
 t sep_upsample(jpeg_decompress_struct*, unsigned char***, unsigned int*, unsigned int, unsigned char**, unsigned int*, unsigned int)
 t set_bottom_pointers(jpeg_decompress_struct*)
 t set_wraparound_pointers(jpeg_decompress_struct*)
 t showinfo(CCommand const&)
 t showpanel(CCommand const&)
 t showschemevisualizer(CCommand const&)
 t skip_input_data(jpeg_decompress_struct*, long)
 t skip_variable(jpeg_decompress_struct*)
 t smoothing_ok(jpeg_decompress_struct*)
 t spec_mode(CCommand const&)
 t spec_next(CCommand const&)
 t spec_player(CCommand const&)
 t spec_pos(CCommand const&)
 t spec_prev(CCommand const&)
 t start_iMCU_row(jpeg_decompress_struct*)
 t start_input_pass(jpeg_decompress_struct*)
 t start_output_pass(jpeg_decompress_struct*)
 t start_pass(jpeg_decompress_struct*)
 t start_pass_1_quant(jpeg_decompress_struct*, int)
 t start_pass_2_quant(jpeg_decompress_struct*, int)
 t start_pass_dcolor(jpeg_decompress_struct*)
 t start_pass_dpost(jpeg_decompress_struct*, J_BUF_MODE)
 t start_pass_huff_decoder(jpeg_decompress_struct*)
 t start_pass_main(jpeg_decompress_struct*, J_BUF_MODE)
 t start_pass_merged_upsample(jpeg_decompress_struct*)
 t start_pass_upsample(jpeg_decompress_struct*)
 t stopsoundscape(CCommand const&)
 t term_source(jpeg_decompress_struct*)
 t testfreezeframe_f()
 t testhudanim(CCommand const&)
 t update_box(jpeg_decompress_struct*, box*)
 t use_merged_upsample(jpeg_decompress_struct*)
 t viewanim_addkeyframe(CCommand const&)
 t viewanim_create(CCommand const&)
 t viewanim_load(CCommand const&)
 t viewanim_save(CCommand const&)
 t void ImageLoader::ConvertFromATIxN<BGRA8888_t>(unsigned char const*, BGRA8888_t*, int, int, bool)
 t void ImageLoader::ConvertFromDXT1<BGR565_t>(unsigned char const*, BGR565_t*, int, int)
 t void ImageLoader::ConvertFromDXT1<BGR888_t>(unsigned char const*, BGR888_t*, int, int)
 t void ImageLoader::ConvertFromDXT1<BGRA4444_t>(unsigned char const*, BGRA4444_t*, int, int)
 t void ImageLoader::ConvertFromDXT1<BGRA5551_t>(unsigned char const*, BGRA5551_t*, int, int)
 t void ImageLoader::ConvertFromDXT1<BGRA8888_t>(unsigned char const*, BGRA8888_t*, int, int)
 t void ImageLoader::ConvertFromDXT1<RGB888_t>(unsigned char const*, RGB888_t*, int, int)
 t void ImageLoader::ConvertFromDXT1<RGBA8888_t>(unsigned char const*, RGBA8888_t*, int, int)
 t void ImageLoader::ConvertFromDXT5<BGRA4444_t>(unsigned char const*, BGRA4444_t*, int, int)
 t void ImageLoader::ConvertFromDXT5<BGRA5551_t>(unsigned char const*, BGRA5551_t*, int, int)
 t void ImageLoader::ConvertFromDXT5<BGRA8888_t>(unsigned char const*, BGRA8888_t*, int, int)
 t void ImageLoader::ConvertFromDXT5<RGBA8888_t>(unsigned char const*, RGBA8888_t*, int, int)
 t void ImageLoader::ConvertFromDXT5IgnoreAlpha<BGR565_t>(unsigned char const*, BGR565_t*, int, int)
 t void ImageLoader::ConvertFromDXT5IgnoreAlpha<BGR888_t>(unsigned char const*, BGR888_t*, int, int)
 t void ImageLoader::ConvertFromDXT5IgnoreAlpha<RGB888_t>(unsigned char const*, RGB888_t*, int, int)
 t void ImageLoader::DecodeAlpha3BitLinear<BGRA8888_t>(BGRA8888_t*, ImageLoader::DXTAlphaBlock3BitLinear*, int, int)
 t vr_activate(CCommand const&)
 t vr_deactivate(CCommand const&)
 t vr_toggle(CCommand const&)
 t ycc_rgb_convert(jpeg_decompress_struct*, unsigned char***, unsigned int, unsigned char**, int)
 t ycck_cmyk_convert(jpeg_decompress_struct*, unsigned char***, unsigned int, unsigned char**, int)
 tan
 tanf
 time
 typeinfo for CThread
 vsnprintf
 vswprintf
 vtable for __cxxabiv1::__class_type_info
 vtable for __cxxabiv1::__si_class_type_info
 vtable for __cxxabiv1::__vmi_class_type_info
 wcscat
 wcschr
 wcscmp
 wcscpy
 wcslen
 wcsncat
 wcsncmp
 wcsncpy
 wcsstr
 wcstod
 wcstol
 wcstoll
 wcstombs
